// UI - crosshair & other

    vs_3_0 // Converted from vs_2_0 with DarkStarSword's shadertool.py
    dcl_position v0
    dcl_texcoord v1
    dcl_color v2

dcl_texcoord o0
dcl_position o1
dcl_color o2


def c220, 0, 1, 0.0625, 0.5
def c221, -1, 0.999, 0, 0 // Full screen fade to black coordinates
def c222, 0, 0.01, 0.99, 1 // Crosshair texture coordinates
def c223, -0.01, 0.01, -0.01, 0.01 // Crosshair X+Y bounds
dcl_2d s0

    mov o2, v2
    mov o0.xy, v1
    dp4 r0.w, v0, c3
    dp4 r0.z, v0, c2
    dp4 r0.y, v0, c1
    dp4 r0.x, v0, c0

// approximately 6 instruction slots used

// Texture blacklist unusable - crosshair, fade to black, inventory, menus, etc. use the same texture
//mov r25.x, c251.x
//if_eq r25.x, c220.x

// Blacklist full screen fade to black based on X coordinate near edge of screen:
mov r30.x, c220.y
if_le r0.x, c221.x
	mov r30.x, c220.x
endif
if_ge r0.x, c221.y
	mov r30.x, c220.x
endif

// Detect crosshair based on texture coordinates:
if_ge v1.x, c222.x
if_le v1.x, c222.y
if_ge v1.y, c222.z
if_le v1.y, c222.w
	// Confirm vertex is in center of screen:
	if_ge r0.x, c223.x
	if_le r0.x, c223.y
	if_ge r0.y, c223.z
	if_le r0.y, c223.w
		// Check crosshair mode
		mov r20, c200
		if_eq r20.x, c220.x // Crosshair disabled
			mov r30.x, -c220.y
		endif
	endif
	endif
	endif
	endif
endif
endif
endif
endif


if_eq r30.x, c220.y
	texldl r1, c220.z, s0
	mad r0.x, r1.x, c200.z, r0.x
endif
mov o1, r0

if_eq r30.x, -c220.y
	mov o1, c220.xxxx
endif
