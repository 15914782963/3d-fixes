// HUD
// ---- Created with 3Dmigoto v1.3.4 on Mon Mar  5 06:52:07 2018

cbuffer _Globals : register(b0)
{
  float4 cDiff : packoffset(c0);
  float4 cAmb : packoffset(c1);
  row_major float4x4 mW2P : packoffset(c2);
  float4 mL2W[3] : packoffset(c6);
}



// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : POSITION0,
  float4 v1 : COLOR0,
  float2 v2 : TEXCOORD0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float2 o2 : TEXCOORD1)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = dot(v0.xyzw, mL2W[1].xyzw);
  r0.xyzw = mW2P._m10_m11_m12_m13 * r0.xxxx;
  r1.x = dot(v0.xyzw, mL2W[0].xyzw);
  r0.xyzw = r1.xxxx * mW2P._m00_m01_m02_m03 + r0.xyzw;
  r1.x = dot(v0.xyzw, mL2W[2].xyzw);
  r0.xyzw = r1.xxxx * mW2P._m20_m21_m22_m23 + r0.xyzw;
  o0.xyzw = v0.wwww * mW2P._m30_m31_m32_m33 + r0.xyzw;
  r0.xyzw = cDiff.xyzw * v1.xyzw;
  o1.xyzw = cAmb.xyzw * r0.xyzw;
  o2.xy = v2.xy;

// Return HUD to screen depth:
float4 s = StereoParams.Load(0);
o0.x -= s.x * (o0.w - s.y);

// HUD toggle:
if (!IniParams[0].y)
	o0 = 0;

  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//   using 3Dmigoto v1.3.4 on Mon Mar  5 06:52:07 2018
//
//
// Buffer Definitions:
//
// cbuffer $Globals
// {
//
//   float4 cDiff;                      // Offset:    0 Size:    16
//   float4 cAmb;                       // Offset:   16 Size:    16
//   row_major float4x4 mW2P;           // Offset:   32 Size:    64
//   float4 mL2W[3];                    // Offset:   96 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// $Globals                          cbuffer      NA          NA            cb0      1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[9], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_temps 2
dp4 r0.x, v0.xyzw, cb0[7].xyzw
mul r0.xyzw, r0.xxxx, cb0[3].xyzw
dp4 r1.x, v0.xyzw, cb0[6].xyzw
mad r0.xyzw, r1.xxxx, cb0[2].xyzw, r0.xyzw
dp4 r1.x, v0.xyzw, cb0[8].xyzw
mad r0.xyzw, r1.xxxx, cb0[4].xyzw, r0.xyzw
mad o0.xyzw, v0.wwww, cb0[5].xyzw, r0.xyzw
mul r0.xyzw, v1.xyzw, cb0[0].xyzw
mul o1.xyzw, r0.xyzw, cb0[1].xyzw
mov o2.xy, v2.xyxx
ret
// Approximately 11 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
