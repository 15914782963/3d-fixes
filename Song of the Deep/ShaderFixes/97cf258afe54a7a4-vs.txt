// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 97cf258afe54a7a4-vs.txt
// 3DMigoto: 97cf258afe54a7a4 |    Unity headers extracted from Sprites-Diffuse.shader
//    Shader "Sprites/Diffuse" {
//      Properties {
//      [PerRendererData]  _MainTex ("Sprite Texture", 2D) = "white" { }
//       _Color ("Tint", Color) = (1,1,1,1)
//      [MaterialToggle]  PixelSnap ("Pixel snap", Float) = 0
//      }
//      Fallback "Transparent/VertexLit"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" "PreviewType"="Plane" "CanUseSpriteAtlas"="true" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="Transparent" "PreviewType"="Plane" "CanUseSpriteAtlas"="true" }
//          ZWrite Off
//          Cull Off
//          Blend One OneMinusSrcAlpha
//          GpuProgramID 26985
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 17
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Sprites-Diffuse.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 51 0 0
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "PIXELSNAP_ON" }
//   undeciphered2: 1 0 4 0 0
//   undeciphered3: 15 4 0 0 2 1 1 2 3 4
//   ConstBuffer "$Globals" 160
//   Vector 128 [_Color]
//   Vector 144 [_MainTex_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 80 [_ProjectionParams]
//   Vector 96 [_ScreenParams]
//   ConstBuffer "UnityLighting" 720
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   Vector 656 [unity_SHBr]
//   Vector 672 [unity_SHBg]
//   Vector 688 [unity_SHBb]
//   Vector 704 [unity_SHC]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [_Object2World]
//   Matrix 256 [_World2Object]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Tue Jul 19 17:31:09 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             8         2  ( FLT, FLT, FLT, FLT)
// c3         cb1             5         2  ( FLT, FLT, FLT, FLT)
// c5         cb2            38         7  ( FLT, FLT, FLT, FLT)
// c12        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c16        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
    def c23, 0.5, 1, 0, 0.416666657
    def c24, 1.05499995, -0.0549999997, 0, 0
    dcl_texcoord v0
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord7 v7
    mul oT3, v7, c1
    mad oT0.xy, v3, c2, c2.zwzw
    rcp r0.x, v0.w
    mul r0.xy, r0.x, v0
    mov r1.x, c23.x
    mul r0.zw, r1.x, c4.xyxy
    mad r0.xy, r0, r0.zwzw, c23.x
    frc r1.xy, r0
    add r0.xy, r0, -r1
    rcp r1.x, r0.z
    rcp r1.y, r0.w
    mul r0.xy, r0, r1
    mul r0.xy, r0, v0.w
    mul r1.xyz, r0.y, c17
    mad r1.xyz, c16, r0.x, r1
    mad r1.xyz, c18, v0.z, r1
    mad oT2.xyz, c19, v0.w, r1
    mul r1.x, v2.x, c20.x
    mul r1.y, v2.x, c21.x
    mul r1.z, v2.x, c22.x
    mul r2.x, v2.y, c20.y
    mul r2.y, v2.y, c21.y
    mul r2.z, v2.y, c22.y
    add r1.xyz, r1, r2
    mul r2.x, v2.z, c20.z
    mul r2.y, v2.z, c21.z
    mul r2.z, v2.z, c22.z
    add r1.xyz, r1, r2
    nrm r2.xyz, r1
    mul r0.z, r2.y, r2.y
    mad r0.z, r2.x, r2.x, -r0.z
    mul r1, r2.yzzx, r2.xyzz
    dp4 r3.x, c8, r1
    dp4 r3.y, c9, r1
    dp4 r3.z, c10, r1
    mad r1.xyz, c11, r0.z, r3
    mov r2.w, c23.y
    dp4 r3.x, c5, r2
    dp4 r3.y, c6, r2
    dp4 r3.z, c7, r2
    mov oT1.xyz, r2
    add r1.xyz, r1, r3
    max r1.xyz, r1, c23.z
    mov r1.w, c23.w
    lit r2, r1.xxww
    mov r2.x, r2.z
    lit r3, r1.yyww
    lit r1, r1.zzww
    mov r2.z, r1.z
    mov r2.y, r3.z
    mad r1.xyz, r2, c24.x, c24.y
    max oT4.xyz, r1, c23.z
    mul r1, r0.y, c13
    mad r0, c12, r0.x, r1
    mad r0, c14, v0.z, r0
    mad r0, c15, v0.w, r0
    mul r1.x, r0.y, c3.x
    mul r1.w, r1.x, c23.x
    mul r1.xz, r0.xyww, c23.x
    add oT5.xy, r1.z, r1.xwzw
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT5.zw, r0

// approximately 65 instruction slots used
vs_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[19], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v7.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

div r0.xy, v0.xyxx, v0.wwww
mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
mul r0.xy, r0.zwzz, r0.xyxx
round_ne r0.xy, r0.xyxx
div r0.xy, r0.xyxx, r0.zwzz
mul r0.xy, r0.xyxx, v0.wwww
mul r1.xyzw, r0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
mad r1.xyzw, cb3[3].xyzw, v0.wwww, r1.xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 97cf258afe54a7a4-vs.txt
ne r5.w, r1.w, l(1.0)
if_nz r5.w
  add r5.w, r1.w, -r5.y
  mad r1.x, r5.w, r5.x, r1.x
endif

mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
mul r2.x, v2.x, cb3[16].x
mul r2.y, v2.x, cb3[17].x
mul r2.z, v2.x, cb3[18].x
mul r3.x, v2.y, cb3[16].y
mul r3.y, v2.y, cb3[17].y
mul r3.z, v2.y, cb3[18].y
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.x, v2.z, cb3[16].z
mul r3.y, v2.z, cb3[17].z
mul r3.z, v2.z, cb3[18].z
add r2.xyz, r2.xyzx, r3.xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
mov o2.xyz, r2.xyzx
mul r0.yzw, r0.yyyy, cb3[13].xxyz
mad r0.xyz, cb3[12].xyzx, r0.xxxx, r0.yzwy
mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
mad o3.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
mul o4.xyzw, v7.xyzw, cb0[8].xyzw
mul r0.x, r2.y, r2.y
mad r0.x, r2.x, r2.x, -r0.x
mul r3.xyzw, r2.yzzx, r2.xyzz
dp4 r4.x, cb2[41].xyzw, r3.xyzw
dp4 r4.y, cb2[42].xyzw, r3.xyzw
dp4 r4.z, cb2[43].xyzw, r3.xyzw
mad r0.xyz, cb2[44].xyzx, r0.xxxx, r4.xyzx
mov r2.w, l(1.000000)
dp4 r3.x, cb2[38].xyzw, r2.xyzw
dp4 r3.y, cb2[39].xyzw, r2.xyzw
dp4 r3.z, cb2[40].xyzw, r2.xyzw
add r0.xyz, r0.xyzx, r3.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.x, r1.y, cb1[5].x
mul r0.w, r0.x, l(0.500000)
mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mov o6.zw, r1.zzzw
add o6.xy, r0.zzzz, r0.xwxx
ret 
// Approximately 0 instruction slots used