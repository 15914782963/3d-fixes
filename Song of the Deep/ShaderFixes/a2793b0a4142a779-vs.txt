// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed a2793b0a4142a779-vs.txt
// 3DMigoto: a2793b0a4142a779 |    Unity headers extracted from MultiBlendDistort.shader
//    Shader "Hibernum/VFX/MultiBlendDistort" {
//      Properties {
//      [NoScaleOffset] [Header(Main Texture)]  _MainTex ("[R]Tex1 [G]Tex2 [B]Tex3 [A]Distortion", 2D) = "white" { }
//      [Header(Red Channel)]  _Color ("[R] Color", Color) = (1,1,1,1)
//       _RedIntensity ("[R] Intensity", Float) = 1
//       _RedSpeedX ("[R] Speed X", Float) = 0
//       _RedSpeedY ("[R] Speed Y", Float) = 0
//       _RedOffset ("[X]Tilling [Y]Tilling [Z]Offset (X) [W]Offset (Y)", Vector) = (1,1,0,0)
//       _RedDist ("Distortion", Range(0,1)) = 1
//      [Header(Green Channel)] [KeywordEnum(Add,Multiply)]  _GreenBlend ("Blending Mode", Float) = 0
//       _SecColor ("[G] Color", Color) = (1,1,1,1)
//       _GreenIntensity ("[G] Intensity", Float) = 1
//       _GreenSpeedX ("[G] Speed X", Float) = 0
//       _GreenSpeedY ("[G] Speed Y", Float) = 0
//       _GreenOffset ("[X]Tilling [Y]Tilling [Z]Offset (X) [W]Offset (Y)", Vector) = (1,1,0,0)
//       _GreenDist ("Distortion", Range(0,1)) = 1
//      [Header(Blue Channel)] [KeywordEnum(Add,Multiply)]  _BlueBlend ("Blending Mode", Float) = 0
//       _ThirdColor ("[B] Color", Color) = (1,1,1,1)
//       _BlueIntensity ("[B] Intensity", Float) = 1
//       _BlueSpeedX ("[B] Speed X", Float) = 0
//       _BlueSpeedY ("[B] Speed Y", Float) = 0
//       _BlueOffset ("[X]Tilling [Y]Tilling [Z]Offset (X) [W]Offset (Y)", Vector) = (1,1,0,0)
//       _BlueDist ("Distortion", Range(0,1)) = 1
//       _DistortX ("Distortion in X", Range(-2,2)) = 1
//       _DistortY ("Distortion in Y", Range(-2,2)) = 0
//       _AlphaSpeedX ("[A] Speed X", Float) = 0
//       _AlphaSpeedY ("[A] Speed Y", Float) = 0
//       _AlphaOffset ("[X]Tilling [Y]Tilling [Z]Offset (X) [W]Offset (Y)", Vector) = (1,1,0,0)
//       _Alpha ("Alpha", Range(0,1)) = 1
//       _ZWriteCutoff ("Alpha Cutoff", Range(0,1)) = 0
//       _DepthAlphaCutoff ("Depth Cutoff", Range(0,1)) = 0
//      [HideInInspector]  _Mode ("__mode", Float) = 0
//      [HideInInspector]  _GreenMode ("__GreenMode", Float) = 0
//      [HideInInspector]  _BlueMode ("__BlueMode", Float) = 0
//      [HideInInspector]  _AlphaMode ("__AlphaMode", Float) = 0
//      [HideInInspector]  _SrcBlend ("_SrcBlend", Float) = 1
//      [HideInInspector]  _DstBlend ("_DstBlend", Float) = 1
//      [HideInInspector]  _NotEmulatingSrcAlpha ("__zw", Float) = 1
//      [HideInInspector]  _NotForcingAdditiveBlend ("__zw", Float) = 1
//      [HideInInspector]  _ZWrite ("__zw", Float) = 0
//      }
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "RenderType"="TransparentWithDepth" }
//        Pass 1/1 {
//          Tags { "QUEUE"="Transparent" "RenderType"="TransparentWithDepth" }
//          ZWrite Off
//          Blend [_SrcBlend] [_DstBlend]
//          GpuProgramID 11916
//          Program "vp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 43
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from MultiBlendDistort.shader.decompressed:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 22 0 0
//   Keywords { "_DISTORTION_ON" "_GREENBLEND_ADD" }
//   undeciphered2: 1 0 3 0 0
//   undeciphered3: 13 3 0 0 2 1 3 4
//   ConstBuffer "$Globals" 368
//   Float 144 [_RedSpeedX]
//   Float 148 [_RedSpeedY]
//   Vector 160 [_RedOffset]
//   Float 208 [_GreenSpeedX]
//   Float 212 [_GreenSpeedY]
//   Vector 224 [_GreenOffset]
//   Float 316 [_AlphaSpeedX]
//   Float 320 [_AlphaSpeedY]
//   Vector 336 [_AlphaOffset]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [_Object2World]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Tue Jul 19 17:32:02 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 3   xyzw        2     NONE   float   xyzw
// TEXCOORD                 4   xyzw        3     NONE   float   xyzw
// COLOR                    0   xyzw        4     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[22], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_constantbuffer cb2[16], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v2.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.zw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_temps 3

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r2.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed a2793b0a4142a779-vs.txt
ne r2.w, r0.w, l(1.0)
if_nz r2.w
  add r2.w, r0.w, -r2.y
  mad r0.x, r2.w, r2.x, r0.x
endif

div o3.xyzw, r0.zzzz, r0.wwww
mul r0.xy, cb0[9].xyxx, cb1[0].xxxx
frc r0.xy, r0.xyxx
mad r0.zw, v1.xxxy, cb0[10].xxxy, cb0[10].zzzw
add o1.xy, r0.xyxx, r0.zwzz
mul r0.xy, cb0[13].xyxx, cb1[0].xxxx
frc r0.xy, r0.xyxx
mad r0.zw, v1.xxxy, cb0[14].xxxy, cb0[14].zzzw
add o1.zw, r0.xxxy, r0.zzzw
mul r0.x, cb0[19].w, cb1[0].x
mul r0.y, cb0[20].x, cb1[0].x
frc r0.xy, r0.xyxx
mul r1.xyzw, v0.yyyy, cb2[13].xyzw
mad r1.xyzw, cb2[12].xyzw, v0.xxxx, r1.xyzw
mad r1.xyzw, cb2[14].xyzw, v0.zzzz, r1.xyzw
mad r1.xyzw, cb2[15].xyzw, v0.wwww, r1.xyzw
mad r0.zw, r1.xxxy, cb0[21].xxxy, cb0[21].zzzw
mov o2.zw, r1.zzzw
add o2.xy, r0.xyxx, r0.zwzz
mov o4.xyzw, v2.xyzw
ret 
// Approximately 0 instruction slots used