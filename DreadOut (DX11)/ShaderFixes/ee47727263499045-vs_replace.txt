// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe ee47727263499045-vs_replace.txt
// 3DMigoto: ee47727263499045 | Matched 3 variants of 3 shaders: Hidden/Nature/Tree Creator Leaves Fast Optimized, Hidden/Nature/Tree Creator Leaves Optimized, Nature/Tree Creator Leaves
// 
//    Unity headers extracted from TreeCreatorLeavesFastOptimized.shader
//    Shader "Hidden/Nature/Tree Creator Leaves Fast Optimized" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _TranslucencyColor ("Translucency Color", Color) = (0.73,0.85,0.41,1)
//       _Cutoff ("Alpha cutoff", Range(0,1)) = 0.3
//       _TranslucencyViewDependency ("View dependency", Range(0,1)) = 0.7
//       _ShadowStrength ("Shadow Strength", Range(0,1)) = 1
//       _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" {}
//       _ShadowTex ("Shadow (RGB)", 2D) = "white" {}
//       _Scale ("Scale", Vector) = (1,1,1,1)
//       _SquashAmount ("Squash", Float) = 1
//      }
//      Dependency "BillboardShader" = "Hidden/Nature/Tree Creator Leaves Rendertex"
//      SubShader 1/2 {
//        LOD 200
//        Tags { "IGNOREPROJECTOR"="true" "RenderType"="TreeLeaf" }
//        Pass 2/3 {
//          Name "SHADOWCASTER"
//          Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "IGNOREPROJECTOR"="true" "RenderType"="TreeLeaf" }
//          Fog { Mode Off }
//          Offset 1, 1
//          Program "vp" {
//            SubProgram "d3d11 " {
//              Keywords { "SHADOWS_DEPTH" }
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Bind "texcoord1" TexCoord1
//              Bind "tangent" TexCoord2
//              ConstBuffer "$Globals" 144
//              Vector 48 [_Wind]
//              Vector 112 [_ShadowTex_ST]
//              ConstBuffer "UnityPerCamera" 128
//              Vector 0 [_Time]
//              ConstBuffer "UnityShadows" 416
//              Vector 80 [unity_LightShadowBias]
//              ConstBuffer "UnityPerDraw" 336
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 128 [glstate_matrix_invtrans_modelview0]
//              Matrix 192 [_Object2World]
//              ConstBuffer "UnityTerrain" 256
//              Vector 80 [_Scale]
//              Vector 160 [_SquashPlaneNormal]
//              Float 176 [_SquashAmount]
//              BindCB "$Globals" 0
//              BindCB "UnityPerCamera" 1
//              BindCB "UnityShadows" 2
//              BindCB "UnityPerDraw" 3
//              BindCB "UnityTerrain" 4
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from TreeCreatorLeavesOptimized.shader
//    Shader "Hidden/Nature/Tree Creator Leaves Optimized" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _TranslucencyColor ("Translucency Color", Color) = (0.73,0.85,0.41,1)
//       _Cutoff ("Alpha cutoff", Range(0,1)) = 0.3
//       _TranslucencyViewDependency ("View dependency", Range(0,1)) = 0.7
//       _ShadowStrength ("Shadow Strength", Range(0,1)) = 0.8
//       _ShadowOffsetScale ("Shadow Offset Scale", Float) = 1
//       _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" {}
//       _ShadowTex ("Shadow (RGB)", 2D) = "white" {}
//       _BumpSpecMap ("Normalmap (GA) Spec (R) Shadow Offset (B)", 2D) = "bump" {}
//       _TranslucencyMap ("Trans (B) Gloss(A)", 2D) = "white" {}
//       _Scale ("Scale", Vector) = (1,1,1,1)
//       _SquashAmount ("Squash", Float) = 1
//      }
//      Dependency "BillboardShader" = "Hidden/Nature/Tree Creator Leaves Rendertex"
//      SubShader 1/2 {
//        LOD 200
//        Tags { "IGNOREPROJECTOR"="true" "RenderType"="TreeLeaf" }
//        Pass 3/4 {
//          Name "SHADOWCASTER"
//          Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "IGNOREPROJECTOR"="true" "RenderType"="TreeLeaf" }
//          Cull Off
//          Fog { Mode Off }
//          Offset 1, 1
//          Program "vp" {
//            SubProgram "d3d11 " {
//              Keywords { "SHADOWS_DEPTH" }
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Bind "texcoord1" TexCoord1
//              Bind "tangent" TexCoord2
//              ConstBuffer "$Globals" 144
//              Vector 48 [_Wind]
//              Vector 112 [_ShadowTex_ST]
//              ConstBuffer "UnityPerCamera" 128
//              Vector 0 [_Time]
//              ConstBuffer "UnityShadows" 416
//              Vector 80 [unity_LightShadowBias]
//              ConstBuffer "UnityPerDraw" 336
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 128 [glstate_matrix_invtrans_modelview0]
//              Matrix 192 [_Object2World]
//              ConstBuffer "UnityTerrain" 256
//              Vector 80 [_Scale]
//              Vector 160 [_SquashPlaneNormal]
//              Float 176 [_SquashAmount]
//              BindCB "$Globals" 0
//              BindCB "UnityPerCamera" 1
//              BindCB "UnityShadows" 2
//              BindCB "UnityPerDraw" 3
//              BindCB "UnityTerrain" 4
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from TreeCreatorLeaves.shader
//    Shader "Nature/Tree Creator Leaves" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _Shininess ("Shininess", Range(0.01,1)) = 0.078125
//       _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" {}
//       _BumpMap ("Normalmap", 2D) = "bump" {}
//       _GlossMap ("Gloss (A)", 2D) = "black" {}
//       _TranslucencyMap ("Translucency (A)", 2D) = "white" {}
//       _ShadowOffset ("Shadow Offset (A)", 2D) = "black" {}
//       _Cutoff ("Alpha cutoff", Range(0,1)) = 0.3
//       _Scale ("Scale", Vector) = (1,1,1,1)
//       _SquashAmount ("Squash", Float) = 1
//      }
//      Dependency "OptimizedShader" = "Hidden/Nature/Tree Creator Leaves Optimized"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "IGNOREPROJECTOR"="true" "RenderType"="TreeLeaf" }
//        Pass 3/4 {
//          Name "SHADOWCASTER"
//          Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "IGNOREPROJECTOR"="true" "RenderType"="TreeLeaf" }
//          Cull Off
//          Fog { Mode Off }
//          Offset 1, 1
//          Program "vp" {
//            SubProgram "d3d11 " {
//              Keywords { "SHADOWS_DEPTH" }
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Bind "texcoord1" TexCoord1
//              Bind "tangent" TexCoord2
//              ConstBuffer "$Globals" 144
//              Vector 48 [_Wind]
//              Vector 112 [_MainTex_ST]
//              ConstBuffer "UnityPerCamera" 128
//              Vector 0 [_Time]
//              ConstBuffer "UnityShadows" 416
//              Vector 80 [unity_LightShadowBias]
//              ConstBuffer "UnityPerDraw" 336
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 128 [glstate_matrix_invtrans_modelview0]
//              Matrix 192 [_Object2World]
//              ConstBuffer "UnityTerrain" 256
//              Vector 80 [_Scale]
//              Vector 160 [_SquashPlaneNormal]
//              Float 176 [_SquashAmount]
//              BindCB "$Globals" 0
//              BindCB "UnityPerCamera" 1
//              BindCB "UnityShadows" 2
//              BindCB "UnityPerDraw" 3
//              BindCB "UnityTerrain" 4
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py
//
// Shader model vs_4_0

// ---- Created with 3Dmigoto v1.2.31 on Mon Feb 22 16:46:16 2016
cbuffer cb4 : register(b4)
{
  float4 cb4[12];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[15];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[6];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[1];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[8];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  float4 v1 : TANGENT0,
  float3 v2 : NORMAL0,
  float4 v3 : TEXCOORD0,
  float4 v4 : TEXCOORD1,
  float4 v5 : COLOR0,
  out float4 o0 : SV_POSITION0,
  out float2 o1 : TEXCOORD1)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
float separation = stereo.x, convergence = stereo.y, eye = stereo.z;

  r0.y = dot(v2.xyz, cb3[9].xyz);
  r0.w = dot(v2.xyz, cb3[11].xyz);
  r0.x = dot(v2.xyz, cb3[8].xyz);
  r0.z = dot(v2.xyz, cb3[10].xyz);
  r0.y = dot(r0.xyzw, r0.xyzw);
  r0.y = rsqrt(r0.y);
  r0.xy = r0.xz * r0.yy + -v2.xz;
  r0.z = 1 + -abs(v1.w);
  r0.xy = r0.zz * r0.xy + v2.xz;
  r0.w = 0.100000001 * v5.y;
  r1.xz = r0.ww * r0.xy;
  r2.x = dot(v2.xy, cb3[8].xy);
  r2.y = dot(v2.xy, cb3[9].xy);
  r2.z = dot(v2.xy, cb3[10].xy);
  r0.xyz = r2.xyz * r0.zzz + v0.xyz;
  r0.xyz = cb4[5].xyz * r0.xyz;
  r2.x = cb3[12].w;
  r2.y = cb3[13].w;
  r2.z = cb3[14].w;
  r0.w = dot(r2.xyz, float3(1,1,1));
  r2.y = v5.x + r0.w;
  r0.w = v5.y + r2.y;
  r2.x = dot(r0.xyz, r0.www);
  r2.xyzw = cb1[0].yyyy + r2.xxyy;
  r2.xyzw = float4(1.97500002,0.792999983,0.375,0.193000004) * r2.xyzw;
  r2.xyzw = frac(r2.xyzw);
  r2.xyzw = r2.xyzw * float4(2,2,2,2) + float4(-0.5,-0.5,-0.5,-0.5);
  r2.xyzw = frac(r2.xyzw);
  r2.xyzw = r2.xyzw * float4(2,2,2,2) + float4(-1,-1,-1,-1);
  r3.xyzw = abs(r2.xyzw) * abs(r2.xyzw);
  r2.xyzw = -abs(r2.xyzw) * float4(2,2,2,2) + float4(3,3,3,3);
  r2.xyzw = r3.xyzw * r2.xyzw;
  r2.xy = r2.xz + r2.yw;
  r3.xyz = cb0[3].xyz * r2.yyy;
  r3.xyz = v4.yyy * r3.xyz;
  r1.y = v4.y * r2.y;
  r2.z = 0.300000012;
  r1.xyz = r2.xzx * r1.xyz + r3.xyz;
  r0.xyz = r1.xyz * cb0[3].www + r0.xyz;
  r0.xyz = v4.xxx * cb0[3].xyz + r0.xyz;
  r0.w = dot(cb4[10].xyz, r0.xyz);
  r0.w = cb4[10].w + r0.w;
  r1.xyz = -r0.www * cb4[10].xyz + r0.xyz;
  r0.xyz = -r1.xyz + r0.xyz;
  r0.xyz = cb4[11].xxx * r0.xyz + r1.xyz;
  r1.xyzw = cb3[1].xyzw * r0.yyyy;
  r1.xyzw = cb3[0].xyzw * r0.xxxx + r1.xyzw;
  r0.xyzw = cb3[2].xyzw * r0.zzzz + r1.xyzw;
  r0.xyzw = cb3[3].xyzw + r0.xyzw;

o0.xyw = r0.xyw; // Relocated to here with hlsltool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe ee47727263499045-vs_replace.txt
if (r0.w != 1.0) { r0.x += separation * (r0.w - convergence); }

  r0.z = cb2[5].x + r0.z;

  // o0.xyw = r0.xyw; // Relocated from here with hlsltool.py

  r0.x = max(0, r0.z);
  r0.x = r0.x + -r0.z;
  o0.z = cb2[5].y * r0.x + r0.z;
  o1.xy = v3.xy * cb0[7].xy + cb0[7].zw;
  return;
}
