// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe 3bbccef2b4f779d0-vs_replace.txt
// 3DMigoto: 3bbccef2b4f779d0 | Matched 2 variants of 2 shaders: Hidden/Nature/Terrain/Bumped Specular AddPass, Nature/Terrain/Bumped Specular
// 
//    Unity headers extracted from TerrBumpAddPass.shader
//    Shader "Hidden/Nature/Terrain/Bumped Specular AddPass" {
//      Properties {
//       _SpecColor ("Specular Color", Color) = (0.5,0.5,0.5,1)
//       _Shininess ("Shininess", Range(0.03,1)) = 0.078125
//       _Control ("Control (RGBA)", 2D) = "red" {}
//       _Splat3 ("Layer 3 (A)", 2D) = "white" {}
//       _Splat2 ("Layer 2 (B)", 2D) = "white" {}
//       _Splat1 ("Layer 1 (G)", 2D) = "white" {}
//       _Splat0 ("Layer 0 (R)", 2D) = "white" {}
//       _Normal3 ("Normal 3 (A)", 2D) = "bump" {}
//       _Normal2 ("Normal 2 (B)", 2D) = "bump" {}
//       _Normal1 ("Normal 1 (G)", 2D) = "bump" {}
//       _Normal0 ("Normal 0 (R)", 2D) = "bump" {}
//      }
//      Fallback "Hidden/TerrainEngine/Splatmap/Lightmap-AddPass"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry-99" "IGNOREPROJECTOR"="true" "RenderType"="Opaque" "SplatCount"="4" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "QUEUE"="Geometry-99" "IGNOREPROJECTOR"="true" "RenderType"="Opaque" "SplatCount"="4" }
//          ZWrite Off
//          Fog {
//             Color (0,0,0,0)
//            }
//          Blend One One
//          Program "vp" {
//            SubProgram "d3d11 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" }
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              ConstBuffer "$Globals" 208
//              Vector 128 [_Control_ST]
//              Vector 144 [_Splat0_ST]
//              Vector 160 [_Splat1_ST]
//              Vector 176 [_Splat2_ST]
//              Vector 192 [_Splat3_ST]
//              ConstBuffer "UnityPerCamera" 128
//              Vector 64 [_WorldSpaceCameraPos] 3
//              Vector 80 [_ProjectionParams]
//              ConstBuffer "UnityLighting" 720
//              Vector 0 [_WorldSpaceLightPos0]
//              Vector 608 [unity_SHAr]
//              Vector 624 [unity_SHAg]
//              Vector 640 [unity_SHAb]
//              Vector 656 [unity_SHBr]
//              Vector 672 [unity_SHBg]
//              Vector 688 [unity_SHBb]
//              Vector 704 [unity_SHC]
//              ConstBuffer "UnityPerDraw" 336
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 192 [_Object2World]
//              Matrix 256 [_World2Object]
//              Vector 320 [unity_Scale]
//              BindCB "$Globals" 0
//              BindCB "UnityPerCamera" 1
//              BindCB "UnityLighting" 2
//              BindCB "UnityPerDraw" 3
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from TerrBumpFirstPass.shader
//    Shader "Nature/Terrain/Bumped Specular" {
//      Properties {
//       _SpecColor ("Specular Color", Color) = (0.5,0.5,0.5,1)
//       _Shininess ("Shininess", Range(0.03,1)) = 0.078125
//      [HideInInspector]  _Control ("Control (RGBA)", 2D) = "red" {}
//      [HideInInspector]  _Splat3 ("Layer 3 (A)", 2D) = "white" {}
//      [HideInInspector]  _Splat2 ("Layer 2 (B)", 2D) = "white" {}
//      [HideInInspector]  _Splat1 ("Layer 1 (G)", 2D) = "white" {}
//      [HideInInspector]  _Splat0 ("Layer 0 (R)", 2D) = "white" {}
//      [HideInInspector]  _Normal3 ("Normal 3 (A)", 2D) = "bump" {}
//      [HideInInspector]  _Normal2 ("Normal 2 (B)", 2D) = "bump" {}
//      [HideInInspector]  _Normal1 ("Normal 1 (G)", 2D) = "bump" {}
//      [HideInInspector]  _Normal0 ("Normal 0 (R)", 2D) = "bump" {}
//      [HideInInspector]  _MainTex ("BaseMap (RGB)", 2D) = "white" {}
//      [HideInInspector]  _Color ("Main Color", Color) = (1,1,1,1)
//      }
//      Dependency "AddPassShader" = "Hidden/Nature/Terrain/Bumped Specular AddPass"
//      Dependency "BaseMapShader" = "Specular"
//      Fallback "Nature/Terrain/Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry-100" "RenderType"="Opaque" "SplatCount"="4" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "QUEUE"="Geometry-100" "RenderType"="Opaque" "SplatCount"="4" }
//          Program "vp" {
//            SubProgram "d3d11 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" }
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              ConstBuffer "$Globals" 208
//              Vector 128 [_Control_ST]
//              Vector 144 [_Splat0_ST]
//              Vector 160 [_Splat1_ST]
//              Vector 176 [_Splat2_ST]
//              Vector 192 [_Splat3_ST]
//              ConstBuffer "UnityPerCamera" 128
//              Vector 64 [_WorldSpaceCameraPos] 3
//              Vector 80 [_ProjectionParams]
//              ConstBuffer "UnityLighting" 720
//              Vector 0 [_WorldSpaceLightPos0]
//              Vector 608 [unity_SHAr]
//              Vector 624 [unity_SHAg]
//              Vector 640 [unity_SHAb]
//              Vector 656 [unity_SHBr]
//              Vector 672 [unity_SHBg]
//              Vector 688 [unity_SHBb]
//              Vector 704 [unity_SHC]
//              ConstBuffer "UnityPerDraw" 336
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 192 [_Object2World]
//              Matrix 256 [_World2Object]
//              Vector 320 [unity_Scale]
//              BindCB "$Globals" 0
//              BindCB "UnityPerCamera" 1
//              BindCB "UnityLighting" 2
//              BindCB "UnityPerDraw" 3
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py
//
// Shader model vs_4_0

// ---- Created with 3Dmigoto v1.2.31 on Mon Feb 22 16:46:10 2016
cbuffer cb3 : register(b3)
{
  float4 cb3[21];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[45];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[8];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[13];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);



cbuffer UnityPerDraw : register(b11) {
	float4x4 glstate_matrix_mvp;
	float4x4 glstate_matrix_modelview0;
	float4x4 glstate_matrix_invtrans_modelview0;
	#define UNITY_MATRIX_MVP glstate_matrix_mvp
	#define UNITY_MATRIX_MV glstate_matrix_modelview0
	#define UNITY_MATRIX_IT_MV glstate_matrix_invtrans_modelview0

	uniform float4x4 _Object2World;
	uniform float4x4 _World2Object;
	uniform float4 unity_LODFade; // x is the fade value ranging within [0,1]. y is x quantized into 16 levels
	uniform float4 unity_WorldTransformParams; // w is usually 1.0, or -1.0 for odd-negative scale transforms
}


#include <ShaderFixes/matrix.hlsl>

void main( 
  float4 v0 : POSITION0,
  float4 v1 : TANGENT0,
  float3 v2 : NORMAL0,
  float4 v3 : TEXCOORD0,
  float4 v4 : TEXCOORD1,
  float4 v5 : COLOR0,
  out float4 o0 : SV_POSITION0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3,
  out float4 o5 : TEXCOORD4,
  out float4 o6 : TEXCOORD5,
  out float4 o7 : TEXCOORD6)
{
  float4 r0,r1,r2,r3,r4,r5,r6;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
float separation = stereo.x, convergence = stereo.y, eye = stereo.z;

// Unity reflection/specular fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe 3bbccef2b4f779d0-vs_replace.txt
float4 _WorldSpaceCameraPos = cb1[4];
float4 clip_space_adj = float4(-separation * convergence, 0, 0, 0);
float4 local_space_adj = mul(inverse(glstate_matrix_mvp), clip_space_adj);
float4 world_space_adj = mul(_Object2World, local_space_adj);
_WorldSpaceCameraPos.xyz -= world_space_adj.xyz;

  r0.xyzw = cb3[1].xyzw * v0.yyyy;
  r0.xyzw = cb3[0].xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = cb3[2].xyzw * v0.zzzz + r0.xyzw;
  r0.xyzw = cb3[3].xyzw * v0.wwww + r0.xyzw;
  o0.xyzw = r0.xyzw;

// Automatic vertex shader halo fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe 3bbccef2b4f779d0-vs_replace.txt
if (r0.w != 1.0) { r0.x += separation * (r0.w - convergence); }

  o1.xy = v3.xy * cb0[8].xy + cb0[8].zw;
  o1.zw = v3.xy * cb0[9].xy + cb0[9].zw;
  o2.xy = v3.xy * cb0[10].xy + cb0[10].zw;
  o2.zw = v3.xy * cb0[11].xy + cb0[11].zw;
  o3.xy = v3.xy * cb0[12].xy + cb0[12].zw;
  r1.xyz = cb3[17].xyz * cb2[0].yyy;
  r1.xyz = cb3[16].xyz * cb2[0].xxx + r1.xyz;
  r1.xyz = cb3[18].xyz * cb2[0].zzz + r1.xyz;
  r1.xyz = cb3[19].xyz * cb2[0].www + r1.xyz;
  o4.z = dot(v2.xyz, r1.xyz);
  r2.xyz = float3(1,0,0) * v2.xyz;
  r2.xyz = v2.zxy * float3(0,0,1) + -r2.xyz;
  r3.xyz = v2.zxy * r2.xyz;
  r3.xyz = v2.yzx * r2.yzx + -r3.xyz;
  o4.y = dot(-r3.xyz, r1.xyz);
  o4.x = dot(r2.zx, r1.xy);
  r1.xyz = cb3[20].www * v2.xyz;
  r4.xyz = cb3[13].xyz * r1.yyy;
  r1.xyw = cb3[12].xyz * r1.xxx + r4.xyz;
  r1.xyz = cb3[14].xyz * r1.zzz + r1.xyw;
  r1.w = 1;
  r4.x = dot(cb2[38].xyzw, r1.xyzw);
  r4.y = dot(cb2[39].xyzw, r1.xyzw);
  r4.z = dot(cb2[40].xyzw, r1.xyzw);
  r5.xyzw = r1.xyzz * r1.yzzx;
  r6.x = dot(cb2[41].xyzw, r5.xyzw);
  r6.y = dot(cb2[42].xyzw, r5.xyzw);
  r6.z = dot(cb2[43].xyzw, r5.xyzw);
  r4.xyz = r6.xyz + r4.xyz;
  r1.y = r1.y * r1.y;
  r1.x = r1.x * r1.x + -r1.y;
  o5.xyz = cb2[44].xyz * r1.xxx + r4.xyz;
  r1.xyz = cb3[17].xyz * _WorldSpaceCameraPos.yyy;
  r1.xyz = cb3[16].xyz * _WorldSpaceCameraPos.xxx + r1.xyz;
  r1.xyz = cb3[18].xyz * _WorldSpaceCameraPos.zzz + r1.xyz;
  r1.xyz = cb3[19].xyz + r1.xyz;
  r1.xyz = r1.xyz * cb3[20].www + -v0.xyz;
  o6.x = dot(r2.zx, r1.xy);
  o6.y = dot(-r3.xyz, r1.xyz);
  o6.z = dot(v2.xyz, r1.xyz);
  r0.y = cb1[5].x * r0.y;
  r1.xzw = float3(0.5,0.5,0.5) * r0.xwy;
  o7.zw = r0.zw;
  o7.xy = r1.xw + r1.zz;
  return;
}

/****************************** COMPILE WARNINGS ******************************
C:\Steam\SteamApps\common\DreadOut\ShaderFixes\3bbccef2b4f779d0-vs_replace.txt(198,14-15): warning X3578: Output value 'o3' is not completely initialized
C:\Steam\SteamApps\common\DreadOut\ShaderFixes\3bbccef2b4f779d0-vs_replace.txt(199,14-15): warning X3578: Output value 'o4' is not completely initialized
C:\Steam\SteamApps\common\DreadOut\ShaderFixes\3bbccef2b4f779d0-vs_replace.txt(200,14-15): warning X3578: Output value 'o5' is not completely initialized
C:\Steam\SteamApps\common\DreadOut\ShaderFixes\3bbccef2b4f779d0-vs_replace.txt(201,14-15): warning X3578: Output value 'o6' is not completely initialized

****************************** COMPILE WARNINGS ******************************/
