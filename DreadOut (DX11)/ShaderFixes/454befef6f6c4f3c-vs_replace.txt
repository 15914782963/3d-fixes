// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe 454befef6f6c4f3c-vs_replace.txt
// 3DMigoto: 454befef6f6c4f3c | Unity headers extracted from TreeSoftOcclusionLeaves.shader
// Shader "Nature/Tree Soft Occlusion Leaves" {
//   Properties {
//    _Color ("Main Color", Color) = (1,1,1,1)
//    _MainTex ("Main Texture", 2D) = "white" {}
//    _Cutoff ("Alpha cutoff", Range(0.25,0.9)) = 0.5
//    _BaseLight ("Base Light", Range(0,1)) = 0.35
//    _AO ("Amb. Occlusion", Range(0,10)) = 2.4
//    _Occlusion ("Dir Occlusion", Range(0,20)) = 7.5
//    _Scale ("Scale", Vector) = (1,1,1,1)
//    _SquashAmount ("Squash", Float) = 1
//   }
//   Dependency "BillboardShader" = "Hidden/Nature/Tree Soft Occlusion Leaves Rendertex"
//   Fallback Off
//   SubShader 1/2 {
//     Tags { "QUEUE"="Transparent-99" "IGNOREPROJECTOR"="true" "RenderType"="TreeTransparentCutout" }
//     Pass 2/2 {
//       Name "SHADOWCASTER"
//       Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "QUEUE"="Transparent-99" "IGNOREPROJECTOR"="true" "RenderType"="TreeTransparentCutout" }
//       Cull Off
//       Fog { Mode Off }
//       ColorMask RGB
//       Offset 1, 1
//       Program "vp" {
//         SubProgram "d3d11 " {
//           Keywords { "SHADOWS_DEPTH" }
//           Bind "vertex" Vertex
//           Bind "color" Color
//           Bind "texcoord" TexCoord0
//           ConstBuffer "UnityShadows" 416
//           Vector 80 [unity_LightShadowBias]
//           ConstBuffer "UnityPerDraw" 336
//           Matrix 0 [glstate_matrix_mvp]
//           ConstBuffer "UnityTerrain" 256
//           Matrix 96 [_TerrainEngineBendTree]
//           Vector 80 [_Scale]
//           Vector 160 [_SquashPlaneNormal]
//           Float 176 [_SquashAmount]
//           BindCB "UnityShadows" 0
//           BindCB "UnityPerDraw" 1
//           BindCB "UnityTerrain" 2
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py
//
// Shader model vs_4_0

// ---- Created with 3Dmigoto v1.2.31 on Mon Feb 22 16:46:55 2016
cbuffer cb2 : register(b2)
{
  float4 cb2[12];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[4];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[6];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  float4 v1 : COLOR0,
  float4 v2 : TEXCOORD0,
  out float4 o0 : SV_POSITION0,
  out float2 o1 : TEXCOORD1)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
float separation = stereo.x, convergence = stereo.y, eye = stereo.z;

  r0.xyz = cb2[5].xyz * v0.xyz;
  r1.xyz = cb2[7].xyz * r0.yyy;
  r1.xyz = cb2[6].xyz * r0.xxx + r1.xyz;
  r1.xyz = cb2[8].xyz * r0.zzz + r1.xyz;
  r1.xyz = -v0.xyz * cb2[5].xyz + r1.xyz;
  r0.xyz = v1.www * r1.xyz + r0.xyz;
  r0.w = dot(cb2[10].xyz, r0.xyz);
  r0.w = cb2[10].w + r0.w;
  r1.xyz = -r0.www * cb2[10].xyz + r0.xyz;
  r0.xyz = -r1.xyz + r0.xyz;
  r0.xyz = cb2[11].xxx * r0.xyz + r1.xyz;
  r1.xyzw = cb1[1].xyzw * r0.yyyy;
  r1.xyzw = cb1[0].xyzw * r0.xxxx + r1.xyzw;
  r0.xyzw = cb1[2].xyzw * r0.zzzz + r1.xyzw;
  r0.xyzw = cb1[3].xyzw + r0.xyzw;

o0.xyw = r0.xyw; // Relocated to here with hlsltool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe 454befef6f6c4f3c-vs_replace.txt
if (r0.w != 1.0) { r0.x += separation * (r0.w - convergence); }

  r0.z = cb0[5].x + r0.z;

  // o0.xyw = r0.xyw; // Relocated from here with hlsltool.py

  r0.x = max(0, r0.z);
  r0.x = r0.x + -r0.z;
  o0.z = cb0[5].y * r0.x + r0.z;
  o1.xy = v2.xy;
  return;
}
