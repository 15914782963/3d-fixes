// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe c9dda6078343dbea-vs_replace.txt
// 3DMigoto: c9dda6078343dbea | Unity headers extracted from Normal-Glossy.shader
// Shader "Specular" {
//   Properties {
//    _Color ("Main Color", Color) = (1,1,1,1)
//    _SpecColor ("Specular Color", Color) = (0.5,0.5,0.5,1)
//    _Shininess ("Shininess", Range(0.01,1)) = 0.078125
//    _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" {}
//   }
//   Fallback "VertexLit"
//   SubShader 1/1 {
//     LOD 300
//     Tags { "RenderType"="Opaque" }
//     Pass 1/4 {
//       Name "FORWARD"
//       Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//       Program "vp" {
//         SubProgram "d3d11 " {
//           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_ON" "SHADOWS_SCREEN" }
//           Bind "vertex" Vertex
//           Bind "color" Color
//           Bind "texcoord" TexCoord0
//           Bind "texcoord1" TexCoord1
//           ConstBuffer "$Globals" 176
//           Vector 144 [unity_LightmapST]
//           Vector 160 [_MainTex_ST]
//           ConstBuffer "UnityPerCamera" 128
//           Vector 80 [_ProjectionParams]
//           ConstBuffer "UnityPerDraw" 336
//           Matrix 0 [glstate_matrix_mvp]
//           BindCB "$Globals" 0
//           BindCB "UnityPerCamera" 1
//           BindCB "UnityPerDraw" 2
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py
//
// Shader model vs_4_0

// ---- Created with 3Dmigoto v1.2.31 on Mon Feb 22 16:46:33 2016
cbuffer cb2 : register(b2)
{
  float4 cb2[4];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[6];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[11];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  float4 v1 : TANGENT0,
  float3 v2 : NORMAL0,
  float4 v3 : TEXCOORD0,
  float4 v4 : TEXCOORD1,
  float4 v5 : COLOR0,
  out float4 o0 : SV_POSITION0,
  out float2 o1 : TEXCOORD0,
  out float2 p1 : TEXCOORD1,
  out float4 o2 : TEXCOORD2)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
float separation = stereo.x, convergence = stereo.y, eye = stereo.z;

  r0.xyzw = cb2[1].xyzw * v0.yyyy;
  r0.xyzw = cb2[0].xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = cb2[2].xyzw * v0.zzzz + r0.xyzw;
  r0.xyzw = cb2[3].xyzw * v0.wwww + r0.xyzw;
  o0.xyzw = r0.xyzw;

// Automatic vertex shader halo fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe c9dda6078343dbea-vs_replace.txt
if (r0.w != 1.0) { r0.x += separation * (r0.w - convergence); }

  o1.xy = v3.xy * cb0[10].xy + cb0[10].zw;
  p1.xy = v4.xy * cb0[9].xy + cb0[9].zw;
  r0.y = cb1[5].x * r0.y;
  r1.xzw = float3(0.5,0.5,0.5) * r0.xwy;
  o2.zw = r0.zw;
  o2.xy = r1.xw + r1.zz;
  return;
}
