// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe 68112cd51dbc46a3-vs_replace.txt
// 3DMigoto: 68112cd51dbc46a3 | Unity headers extracted from Normal-VertexLit.shader
// Shader "VertexLit" {
//   Properties {
//    _Color ("Main Color", Color) = (1,1,1,1)
//    _SpecColor ("Spec Color", Color) = (1,1,1,1)
//    _Emission ("Emissive Color", Color) = (0,0,0,0)
//    _Shininess ("Shininess", Range(0.01,1)) = 0.7
//    _MainTex ("Base (RGB)", 2D) = "white" {}
//   }
//   SubShader 1/1 {
//     LOD 100
//     Tags { "RenderType"="Opaque" }
//     Pass 4/5 {
//       Name "SHADOWCASTER"
//       Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//       Cull Off
//       Fog { Mode Off }
//       Offset 1, 1
//       Program "vp" {
//         SubProgram "d3d11 " {
//           Keywords { "SHADOWS_DEPTH" }
//           Bind "vertex" Vertex
//           ConstBuffer "UnityShadows" 416
//           Vector 80 [unity_LightShadowBias]
//           ConstBuffer "UnityPerDraw" 336
//           Matrix 0 [glstate_matrix_mvp]
//           BindCB "UnityShadows" 0
//           BindCB "UnityPerDraw" 1
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py
//
// Shader model vs_4_0

// ---- Created with 3Dmigoto v1.2.31 on Mon Feb 22 16:46:32 2016
cbuffer cb1 : register(b1)
{
  float4 cb1[4];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[6];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  float3 v1 : NORMAL0,
  float4 v2 : TEXCOORD0,
  out float4 o0 : SV_POSITION0)
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
float separation = stereo.x, convergence = stereo.y, eye = stereo.z;

  r0.xyzw = cb1[1].xyzw * v0.yyyy;
  r0.xyzw = cb1[0].xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = cb1[2].xyzw * v0.zzzz + r0.xyzw;
  r0.xyzw = cb1[3].xyzw * v0.wwww + r0.xyzw;

o0.xyw = r0.xyw; // Relocated to here with hlsltool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe 68112cd51dbc46a3-vs_replace.txt
if (r0.w != 1.0) { r0.x += separation * (r0.w - convergence); }

  r0.z = cb0[5].x + r0.z;

  // o0.xyw = r0.xyw; // Relocated from here with hlsltool.py

  r0.x = max(0, r0.z);
  r0.x = r0.x + -r0.z;
  o0.z = cb0[5].y * r0.x + r0.z;
  return;
}
