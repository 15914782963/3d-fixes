// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 354945e336432f2d-vs.txt
// 3DMigoto: 354945e336432f2d |    Unity headers extracted from TMPro_SDF-Mobile Overlay.shader
//    Shader "TMPro/Mobile/Distance Field Overlay" {
//      Properties {
//       _FaceColor ("Face Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _FaceDilate ("Face Dilate", Range(-1.000000,1.000000)) = 0.000000
//       _OutlineColor ("Outline Color", Color) = (0.000000,0.000000,0.000000,1.000000)
//       _OutlineWidth ("Outline Thickness", Range(0.000000,1.000000)) = 0.000000
//       _OutlineSoftness ("Outline Softness", Range(0.000000,1.000000)) = 0.000000
//       _UnderlayColor ("Border Color", Color) = (0.000000,0.000000,0.000000,0.500000)
//       _UnderlayOffsetX ("Border OffsetX", Range(-1.000000,1.000000)) = 0.000000
//       _UnderlayOffsetY ("Border OffsetY", Range(-1.000000,1.000000)) = 0.000000
//       _UnderlayDilate ("Border Dilate", Range(-1.000000,1.000000)) = 0.000000
//       _UnderlaySoftness ("Border Softness", Range(0.000000,1.000000)) = 0.000000
//       _WeightNormal ("Weight Normal", Float) = 0.000000
//       _WeightBold ("Weight Bold", Float) = 0.500000
//       _ShaderFlags ("Flags", Float) = 0.000000
//       _ScaleRatioA ("Scale RatioA", Float) = 1.000000
//       _ScaleRatioB ("Scale RatioB", Float) = 1.000000
//       _ScaleRatioC ("Scale RatioC", Float) = 1.000000
//       _MainTex ("Font Atlas", 2D) = "white" { }
//       _TextureWidth ("Texture Width", Float) = 512.000000
//       _TextureHeight ("Texture Height", Float) = 512.000000
//       _GradientScale ("Gradient Scale", Float) = 5.000000
//       _ScaleX ("Scale X", Float) = 1.000000
//       _ScaleY ("Scale Y", Float) = 1.000000
//       _PerspectiveFilter ("Perspective Correction", Range(0.000000,1.000000)) = 0.875000
//       _VertexOffsetX ("Vertex OffsetX", Float) = 0.000000
//       _VertexOffsetY ("Vertex OffsetY", Float) = 0.000000
//       _MaskID ("Mask ID", Float) = 0.000000
//       _ClipRect ("Mask Coords", Vector) = (0.000000,0.000000,100000.000000,100000.000000)
//       _MaskSoftnessX ("Mask SoftnessX", Float) = 0.000000
//       _MaskSoftnessY ("Mask SoftnessY", Float) = 0.000000
//      }
//      CustomEditor "TMPro_SDFMaterialEditor"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//        Pass 1/1 {
//          Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//          ZTest Always
//          ZWrite Off
//          Cull [_CullMode]
//          Blend One OneMinusSrcAlpha
//          GpuProgramID 35806
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 5
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from TMPro_SDF-Mobile Overlay.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 81 0 0
//   Keywords { "UNDERLAY_ON" }
//   undeciphered2: 1 0 4 0 0 0
//   undeciphered3: 31 5 0 0 2 1 1 2 3 4 4 5
//   ConstBuffer "$Globals" 512
//   Vector 112 [_FaceColor]
//   Float 128 [_FaceDilate]
//   Float 132 [_OutlineSoftness]
//   Vector 144 [_OutlineColor]
//   Float 160 [_OutlineWidth]
//   Vector 352 [_UnderlayColor]
//   Float 368 [_UnderlayOffsetX]
//   Float 372 [_UnderlayOffsetY]
//   Float 376 [_UnderlayDilate]
//   Float 380 [_UnderlaySoftness]
//   Float 420 [_WeightNormal]
//   Float 424 [_WeightBold]
//   Float 428 [_ScaleRatioA]
//   Float 436 [_ScaleRatioC]
//   Float 440 [_VertexOffsetX]
//   Float 444 [_VertexOffsetY]
//   Vector 464 [_ClipRect]
//   Float 488 [_TextureWidth]
//   Float 492 [_TextureHeight]
//   Float 496 [_GradientScale]
//   Float 500 [_ScaleX]
//   Float 504 [_ScaleY]
//   Float 508 [_PerspectiveFilter]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 96 [_ScreenParams]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [unity_ObjectToWorld]
//   Matrix 256 [unity_WorldToObject]
//   ConstBuffer "UnityPerFrame" 352
//   Matrix 80 [glstate_matrix_projection]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sun Nov 06 16:56:01 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// COLOR                    0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
// TEXCOORD                 1   xy          4     NONE   float    y  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// COLOR                    1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
// TEXCOORD                 3     zw        3     NONE   float     zw
// TEXCOORD                 1   xyzw        4     NONE   float   xyzw
// TEXCOORD                 2   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyzw        6     NONE   float   xyzw
// TEXCOORD                 5   xy          7     NONE   float   xy  
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             7         4  ( FLT, FLT, FLT, FLT)
// c5         cb0            22         2  ( FLT, FLT, FLT, FLT)
// c7         cb0            26         2  ( FLT, FLT, FLT, FLT)
// c9         cb0            29         3  ( FLT, FLT, FLT, FLT)
// c12        cb1             4         1  ( FLT, FLT, FLT, FLT)
// c13        cb1             6         1  ( FLT, FLT, FLT, FLT)
// c14        cb2             0         4  ( FLT, FLT, FLT, FLT)
// c18        cb2            12         7  ( FLT, FLT, FLT, FLT)
// c25        cb3             5         2  ( FLT, FLT, FLT, FLT)
// c27        cb3             8         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c28, 0, 1.5, 1, 0.5
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4 v4
    mul r0.x, v1.x, c22.x
    mul r0.y, v1.x, c23.x
    mul r0.z, v1.x, c24.x
    mul r1.x, v1.y, c22.y
    mul r1.y, v1.y, c23.y
    mul r1.z, v1.y, c24.y
    add r0.xyz, r0, r1
    mul r1.x, v1.z, c22.z
    mul r1.y, v1.z, c23.z
    mul r1.z, v1.z, c24.z
    add r0.xyz, r0, r1
    nrm r1.xyz, r0
    add r0.xy, v0, c8.zwzw
    mul r2.xyz, r0.y, c19
    mad r2.xyz, c18, r0.x, r2
    mad r2.xyz, c20, v0.z, r2
    mad r2.xyz, c21, v0.w, r2
    add r2.xyz, -r2, c12
    nrm r3.xyz, r2
    dp3 r0.z, r1, r3
    mul r1, r0.y, c15
    mad r1, c14, r0.x, r1
    add oT4.xy, r0, -c9
    mad r1, c16, v0.z, r1
    mad r1, c17, v0.w, r1
    mov r0.xy, c13
    mul r0.yw, r0.y, c26.xxzy
    mad r0.xy, c25, r0.x, r0.ywzw
    abs r0.xyz, r0
    mul r0.xy, r0, c11.yzzw
    rcp r2.x, r0.x
    rcp r2.y, r0.y
    mul r0.xy, r1.w, r2
    mul r2.xy, r0, r0
    add r0.w, r2.y, r2.x
    rsq r0.w, r0.w
    abs r2.x, v4.y
    mul r2.x, r2.x, c11.x
    mul r0.w, r0.w, r2.x
    mul r2.x, r0.w, c28.y
    abs r2.y, r2.x
    mov r2.z, c28.z
    add r2.z, r2.z, -c11.w
    mul r2.y, r2.z, r2.y
    mad r2.z, r0.w, c28.y, -r2.y
    mad r0.z, r0.z, r2.z, r2.y
    mad r0.z, r0.w, -c28.y, r0.z
    mul r0.w, c27.w, c27.w
    sge r0.w, -r0.w, r0.w
    mad r0.z, r0.w, r0.z, r2.x
    mov r0.w, c7.w
    mul r2.xy, r0.w, c2
    mad r2.y, r2.y, r0.z, c28.z
    rcp r2.y, r2.y
    mul r3.x, r0.z, r2.y
    mul r0.w, r0.w, c4.x
    mul r0.w, r0.w, c28.w
    mul r2.y, r3.x, r0.w
    add r2.y, r2.y, r2.y
    min r2.y, r2.y, c28.z
    rsq r2.y, r2.y
    rcp r2.y, r2.y
    mul r4.w, v2.w, c3.w
    mul r4.xyz, r4.w, c3
    mul r5, v2, c1
    mul r5.xyz, r5.w, r5
    add r4, r4, -r5
    mad oT1, r2.y, r4, r5
    mov oT0, r5
    mul r2.y, v2.w, c5.w
    mul oT5.xyz, r2.y, c5
    mov oT5.w, r2.y
    mov r2.y, c8.y
    mul r2.zw, r2.y, c6.xywz
    mad r2.z, r2.z, r0.z, c28.z
    mul r2.xw, r2, c28.w
    rcp r2.z, r2.z
    mul r0.z, r0.z, r2.z
    sge r2.z, c28.x, v4.y
    lrp r3.y, r2.z, c7.z, c7.y
    rcp r2.z, c11.x
    mad r2.x, r3.y, r2.z, r2.x
    add r2.z, -r2.x, c28.w
    lrp r3.y, r0.z, -r2.x, -c28.w
    mad r3.w, r2.z, r3.x, -c28.w
    mad oT6.y, r2.w, -r0.z, r3.y
    mov oT6.x, r0.z
    mad oT3.y, r0.w, -r3.x, r3.w
    mad oT3.z, r0.w, r3.x, r3.w
    mov oT3.xw, r3
    rcp r0.z, r0.x
    rcp r0.w, r0.y
    mul oT4.zw, r0, c28.w
    rcp r0.x, c10.z
    mul r0.yz, r2.y, -c6.xxyw
    mul r0.yz, r0, c11.x
    mul r2.w, r0.x, r0.y
    rcp r0.x, c10.w
    mul r2.z, r0.x, r0.z
    add oT2.zw, r2, v3.xyyx
    mad oPos.xy, r1.w, c0, r1
    mov oPos.zw, r1
    mov oT2.xy, v3

// approximately 107 instruction slots used
vs_4_0
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[9], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xy
dcl_input v4.y
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xy
dcl_output o3.zw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xy
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 354945e336432f2d-vs.txt
mov r6.xyzw, cb1[4].xyzw
mov r7.xyzw, l(0)
mul r7.x, -r5.x, r5.y
mul r9.xyzw, cb10[0].xyzw, r7.xxxx
mad r9.xyzw, cb10[1].xyzw, r7.yyyy, r9.xyzw
mad r9.xyzw, cb10[2].xyzw, r7.zzzz, r9.xyzw
mad r9.xyzw, cb10[3].xyzw, r7.wwww, r9.xyzw
mul r8.xyzw, cb11[12].xyzw, r9.xxxx
mad r8.xyzw, cb11[13].xyzw, r9.yyyy, r8.xyzw
mad r8.xyzw, cb11[14].xyzw, r9.zzzz, r8.xyzw
mad r8.xyzw, cb11[15].xyzw, r9.wwww, r8.xyzw
add r6.xyz, r6.xyz, -r8.xyz

add r0.xy, v0.xyxx, cb0[27].zwzz
mul r1.xyzw, r0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
mov o0.xyzw, r1.xyzw
mul r2.xyzw, v2.xyzw, cb0[7].xyzw
mul r2.xyz, r2.wwww, r2.xyzx
mov o1.xyzw, r2.xyzw
mul r3.w, v2.w, cb0[9].w
mul r3.xyz, r3.wwww, cb0[9].xyzx
add r3.xyzw, -r2.xyzw, r3.xyzw
mul r1.xyz, r0.yyyy, cb2[13].xyzx
mad r1.xyz, cb2[12].xyzx, r0.xxxx, r1.xyzx
add o5.xy, r0.xyxx, -cb0[29].xyxx
mad r0.xyz, cb2[14].xyzx, v0.zzzz, r1.xyzx
mad r0.xyz, cb2[15].xyzx, v0.wwww, r0.xyzx
add r0.xyz, -r0.xyzx, r6.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.x, v1.x, cb2[16].x
mul r1.y, v1.x, cb2[17].x
mul r1.z, v1.x, cb2[18].x
mul r4.x, v1.y, cb2[16].y
mul r4.y, v1.y, cb2[17].y
mul r4.z, v1.y, cb2[18].y
add r1.xyz, r1.xyzx, r4.xyzx
mul r4.x, v1.z, cb2[16].z
mul r4.y, v1.z, cb2[17].z
mul r4.z, v1.z, cb2[18].z
add r1.xyz, r1.xyzx, r4.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.x, r1.xyzx, r0.xyzx
mul r0.yz, cb1[6].yyyy, cb3[6].xxyx
mad r0.yz, cb3[5].xxyx, cb1[6].xxxx, r0.yyzy
mul r0.yz, |r0.yyzy|, cb0[31].yyzy
div r0.yz, r1.wwww, r0.yyzy
dp2 r0.w, r0.yzyy, r0.yzyy
div o5.zw, l(0.000000, 0.000000, 0.500000, 0.500000), r0.yyyz
rsq r0.y, r0.w
mul r0.z, |v4.y|, cb0[31].x
mul r0.y, r0.y, r0.z
mul r0.z, r0.y, l(1.500000)
add r0.w, -cb0[31].w, l(1.000000)
mul r0.w, r0.w, |r0.z|
mad r0.y, r0.y, l(1.500000), -r0.w
mad r0.x, |r0.x|, r0.y, r0.w
eq r0.y, cb3[8].w, l(0.000000)
movc r0.x, r0.y, r0.x, r0.z
mul r0.yz, cb0[8].xxyx, cb0[26].wwww
mad r0.z, r0.z, r0.x, l(1.000000)
div r1.x, r0.x, r0.z
mul r0.z, cb0[10].x, cb0[26].w
mul r0.z, r0.z, l(0.500000)
mul r0.w, r1.x, r0.z
add r0.w, r0.w, r0.w
min r0.w, r0.w, l(1.000000)
sqrt r0.w, r0.w
mad o2.xyzw, r0.wwww, r3.xyzw, r2.xyzw
mul r1.yz, -cb0[23].xxyx, cb0[27].yyyy
mul r1.yz, r1.yyzy, cb0[31].xxxx
div r1.yz, r1.yyzy, cb0[30].zzwz
add o3.zw, r1.yyyz, v3.xxxy
mov o3.xy, v3.xyxx
ge r0.w, l(0.000000), v4.y
and r0.w, r0.w, l(0x3f800000)
add r1.y, -cb0[26].y, cb0[26].z
mad r0.w, r0.w, r1.y, cb0[26].y
div r0.w, r0.w, cb0[31].x
mad r0.y, r0.y, l(0.500000), r0.w
add r0.y, -r0.y, l(0.500000)
mad r1.w, r0.y, r1.x, l(-0.500000)
mad o4.y, -r0.z, r1.x, r1.w
mad o4.z, r0.z, r1.x, r1.w
mov o4.xw, r1.xxxw
mul r0.z, v2.w, cb0[22].w
mul o6.xyz, r0.zzzz, cb0[22].xyzx
mov o6.w, r0.z
mul r0.zw, cb0[23].wwwz, cb0[27].yyyy
mad r0.z, r0.z, r0.x, l(1.000000)
div r0.x, r0.x, r0.z
mul r0.z, r0.w, l(0.500000)
mad r0.y, r0.y, r0.x, l(-0.500000)
mad o7.y, -r0.z, r0.x, r0.y
mov o7.x, r0.x
ret 
// Approximately 0 instruction slots used