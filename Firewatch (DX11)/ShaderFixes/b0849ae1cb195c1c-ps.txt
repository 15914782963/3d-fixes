// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b0849ae1cb195c1c-ps.txt
// 3DMigoto: b0849ae1cb195c1c |    Unity headers extracted from Internal-DeferredShading.shader
//    Shader "Hidden/Internal-DeferredShading" {
//      Properties {
//       _LightTexture0 ("", any) = "" { }
//       _LightTextureB0 ("", 2D) = "" { }
//       _ShadowMapTexture ("", any) = "" { }
//       _SrcBlend ("", Float) = 1.000000
//       _DstBlend ("", Float) = 1.000000
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Pass 1/2 {
//          Tags { "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Blend [_SrcBlend] [_DstBlend]
//          GpuProgramID 31668
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 55
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Internal-DeferredShading.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 102 4 0
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 4 3 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 288
//   Float 0 [_TranslucencyFactor]
//   Float 4 [_TranslucentShadowsIntensity]
//   Vector 64 [unity_ColorSpaceLuminance]
//   Vector 128 [_LightDir]
//   Vector 160 [_LightColor]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_CameraGBufferTexture0] 2D 1
//   SetTexture 2 [_CameraGBufferTexture1] 2D 2
//   SetTexture 3 [_CameraGBufferTexture2] 2D 3
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Nov 05 21:01:03 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b0849ae1cb195c1c-ps.txt
mov r8.xyzw, cb1[4].xyzw
mov r9.xyzw, l(0)
mul r9.x, -r7.x, r7.y
mul r11.xyzw, cb10[0].xyzw, r9.xxxx
mad r11.xyzw, cb10[1].xyzw, r9.yyyy, r11.xyzw
mad r11.xyzw, cb10[2].xyzw, r9.zzzz, r11.xyzw
mad r11.xyzw, cb10[3].xyzw, r9.wwww, r11.xyzw
mul r10.xyzw, cb11[12].xyzw, r11.xxxx
mad r10.xyzw, cb11[13].xyzw, r11.yyyy, r10.xyzw
mad r10.xyzw, cb11[14].xyzw, r11.zzzz, r10.xyzw
mad r10.xyzw, cb11[15].xyzw, r11.wwww, r10.xyzw
add r8.xyz, r8.xyz, -r10.xyz

div r0.x, cb1[5].z, v2.z
mul r0.xyz, r0.xxxx, v2.xyzx
div r1.xy, v1.xyxx, v1.wwww
sample r2.xyzw, r1.xyxx, t0.xyzw, s0
mad r0.w, cb1[7].x, r2.x, cb1[7].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r2.xyz, r0.yyyy, cb2[19].xyzx
mad r0.xyw, cb2[18].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb2[20].xyzx, r0.zzzz, r0.xywx
add r0.xyz, r0.xyzx, cb2[21].xyzx
add r0.xyz, r0.xyzx, -r8.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mad r2.xyz, -r0.xyzx, r0.wwww, -cb0[8].xyzx
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
sample r3.xyzw, r1.xyxx, t3.xyzw, s3
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r0.w, r3.xyzx, r2.xyzx
dp3 r1.z, -cb0[8].xyzx, r2.xyzx
max r0.w, r0.w, l(0.000000)
log r0.w, r0.w
sample r2.xyzw, r1.xyxx, t2.xyzw, s2
sample r4.xyzw, r1.xyxx, t1.xyzw, s1
add r1.x, -r2.w, l(1.000000)
mul r1.y, r1.x, r1.x
max r1.zw, r1.zzzy, l(0.000000, 0.000000, 0.000000, 0.000100)
mul r1.w, r1.w, r1.w
div r1.w, l(2.000000), r1.w
add r1.w, r1.w, l(-2.000000)
max r1.w, r1.w, l(0.000100)
mul r0.w, r0.w, r1.w
add r1.w, r1.w, l(2.000000)
mul r1.w, r1.w, l(0.159154937)
exp r0.w, r0.w
mul r0.w, r1.w, r0.w
dp3 r0.x, r3.xyzx, -r0.xyzx
dp3 r0.y, r3.xyzx, -cb0[8].xyzx
max r0.x, r0.x, l(0.000000)
mul r0.z, r1.y, l(0.797884583)
mad r1.y, -r1.y, l(0.797884583), l(1.000000)
mad r1.w, r0.x, r1.y, r0.z
add r0.x, -r0.x, l(1.000000)
max r2.w, r0.y, l(0.000000)
mad r0.y, r0.y, l(0.500000), l(0.500000)
mad r0.z, r2.w, r1.y, r0.z
mad r0.z, r0.z, r1.w, l(0.000010)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
mul r0.z, r0.w, r0.z
mul r0.z, r0.z, l(0.785398185)
max r0.w, r0.z, l(0.000100)
sqrt r0.w, r0.w
eq r1.y, cb0[4].w, l(0.000000)
movc r0.z, r1.y, r0.w, r0.z
mul r0.z, r2.w, r0.z
max r0.z, r0.z, l(0.000000)
lt r0.w, l(0.200000), r3.w
lt r1.y, r3.w, l(0.700000)
eq r1.w, r3.w, l(0.000000)
and r0.w, r0.w, r1.y
movc r3.xyz, r0.wwww, l(0,0,0,0), r2.xyzx
and r2.xyz, r2.xyzx, r0.wwww
dp3 r0.w, r3.xyzx, r3.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
max r0.w, cb0[0].y, l(1.000000)
movc r0.w, r1.w, r0.w, l(1.000000)
mul r5.xyz, r0.wwww, cb0[10].xyzx
mul r6.xyz, r0.zzzz, r5.xyzx
add r0.z, -r1.z, l(1.000000)
mul r0.w, r1.z, r1.z
dp2 r0.w, r0.wwww, r1.xxxx
add r0.w, r0.w, l(-0.500000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
add r1.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r1.xyz, r1.xyzx, r0.zzzz, r3.xyzx
mul r1.xyz, r1.xyzx, r6.xyzx
mul r0.z, r0.x, r0.x
mul r0.z, r0.z, r0.z
mul r0.x, r0.x, r0.z
mad r0.x, r0.w, r0.x, l(1.000000)
add r0.z, -r2.w, l(1.000000)
mul r3.x, r0.z, r0.z
mul r3.x, r3.x, r3.x
mul r3.x, r0.z, r3.x
mad r0.w, r0.w, r3.x, l(1.000000)
mul r0.x, r0.x, r0.w
mul r0.w, r2.w, r0.x
mul r0.x, r0.x, r0.z
mul r3.xyz, r5.xyzx, r0.xxxx
mul r0.xzw, r0.wwww, r5.xxyz
mad r0.xzw, r4.xxyz, r0.xxzw, r1.xxyz
mul r1.xyz, r4.xyzx, cb0[0].xxxx
mul r1.xyz, r1.xyzx, r3.xyzx
mad r1.xyz, r0.yyyy, -r1.xyzx, r1.xyzx
and r1.xyz, r1.xyzx, r1.wwww
add r0.xyz, r0.xzwx, r1.xyzx
add r0.xyz, r2.xyzx, r0.xyzx
mov r0.w, l(1.000000)
exp o0.xyzw, -r0.xyzw
ret 
// Approximately 0 instruction slots used