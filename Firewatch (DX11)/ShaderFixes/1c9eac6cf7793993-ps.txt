// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 1c9eac6cf7793993-ps.txt
// 3DMigoto: 1c9eac6cf7793993 |    Unity headers extracted from Marmoset_Self-Illumin_Specular IBL
//    Shader "Marmoset/Self-Illumin/Specular IBL" {
//      Fallback "Marmoset/Specular IBL"
//      SubShader 1/1 {
//        LOD 250
//        Tags { "QUEUE"="Geometry" "RenderType"="Opaque" }
//        Pass 4/6 {
//          Name "PREPASS"
//          Tags { "LIGHTMODE"="PREPASSFINAL" "QUEUE"="Geometry" "RenderType"="Opaque" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Marmoset_Self-Illumin_Specular IBL:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 146 4 0
//   undeciphered1a: 10
//   Keywords { "MARMO_SKY_BLEND_ON" "MARMO_BOX_PROJECTION_ON" }
//   undeciphered2: 1 6 2 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 912
//   Vector 48 [_SpecColor]
//   Vector 64 [_Color]
//   Vector 80 [_MainTex_ST]
//   Float 96 [_SpecInt]
//   Float 100 [_Shininess]
//   Float 104 [_Fresnel]
//   Vector 112 [_SpecTex_ST]
//   Vector 144 [_Illum_ST]
//   Vector 160 [_GlowColor]
//   Float 176 [_GlowStrength]
//   Float 180 [_EmissionLM]
//   Vector 192 [_ExposureIBL]
//   Vector 216 [_UniformOcclusion] 2
//   Vector 368 [_SkyMin] 3
//   Vector 384 [_SkyMax] 3
//   Vector 400 [_SH0] 3
//   Vector 416 [_SH1] 3
//   Vector 432 [_SH2] 3
//   Vector 448 [_SH3] 3
//   Vector 464 [_SH4] 3
//   Vector 480 [_SH5] 3
//   Vector 496 [_SH6] 3
//   Vector 512 [_SH7] 3
//   Vector 528 [_SH8] 3
//   Float 540 [_BlendWeightIBL]
//   Vector 544 [_ExposureIBL1]
//   Vector 720 [_SkyMin1] 3
//   Vector 736 [_SkyMax1] 3
//   Vector 752 [_SH01] 3
//   Vector 768 [_SH11] 3
//   Vector 784 [_SH21] 3
//   Vector 800 [_SH31] 3
//   Vector 816 [_SH41] 3
//   Vector 832 [_SH51] 3
//   Vector 848 [_SH61] 3
//   Vector 864 [_SH71] 3
//   Vector 880 [_SH81] 3
//   Matrix 224 [_SkyMatrix]
//   Matrix 288 [_InvSkyMatrix]
//   Matrix 576 [_SkyMatrix1]
//   Matrix 640 [_InvSkyMatrix1]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   SetTexture 0 [_MainTex] 2D 0
//   SetTexture 1 [_SpecTex] 2D 1
//   SetTexture 2 [_Illum] 2D 2
//   SetTexture 3 [_SpecCubeIBL] CUBE 3
//   SetTexture 4 [_SpecCubeIBL1] CUBE 4
//   SetTexture 5 [_LightBuffer] 2D 5
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.2 on Thu Apr 26 06:07:11 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyz         2     NONE   float
// TEXCOORD                 2   xyzw        3     NONE   float   xy
// TEXCOORD                 3   xyzw        4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 6   xyzw        7     NONE   float
// TEXCOORD                 7   xyz         8     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[56], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xyz
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyw
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 1c9eac6cf7793993-ps.txt

mul r10.w, -r10.x, r10.y
mad r11.xyz, -r10.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v5.xyzx, v5.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v5.xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
rsq r0.x, r0.x
mul_sat r0.x, r0.x, r0.z
add r0.x, -r0.x, l(1.000000)
mul r0.w, r0.x, r0.x
mul r0.z, r0.x, r0.w
mad r1.xy, cb0[6].zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
dp2 r2.y, r0.xzxx, r1.xyxx
mov r0.y, l(1.000000)
dp2 r2.x, r0.yxyy, r1.xyxx
dp2 r0.x, r2.xyxx, r1.xyxx
mad r0.x, r0.x, l(0.950000), l(0.050000)
mul r0.y, r0.x, cb0[6].x
sqrt r0.y, r0.y
mad r0.x, r0.x, cb0[6].x, -r0.y
mad r0.x, r0.x, l(0.922443926), r0.y
add r0.yzw, cb0[12].xxyw, -cb0[34].xxyw
mad r0.yzw, cb0[33].wwww, r0.yyzw, cb0[34].xxyw
mul r0.x, r0.w, r0.x
mad r1.xy, v3.xyxx, cb0[7].xyxx, cb0[7].zwzz
sample r1.xyzw, r1.xyxx, t1.xyzw, s1
mul r1.xyz, r1.xyzx, cb0[3].xyzx
add r1.w, -r1.w, l(1.000000)
mad r2.xy, -r1.wwww, r1.wwww, l(1.000000, 8.000000, 0.000000, 0.000000)
mad r1.w, -cb0[6].y, r2.x, r2.y
mul r1.xyz, r0.xxxx, r1.xyzx
add r2.xyz, -cb0[45].xyzx, cb0[46].xyzx
mov r3.x, cb0[36].y
mov r3.y, cb0[37].y
mov r3.z, cb0[38].y
mov r4.x, cb0[36].z
mov r4.y, cb0[37].z
mov r4.z, cb0[38].z
add r5.xyz, -v4.xyzx, r11.xyzx
dp3 r0.x, r5.xyzx, r5.xyzx
rsq r0.x, r0.x
mul r5.xyz, r0.xxxx, r5.xyzx
dp3 r0.x, v1.xyzx, v1.xyzx
rsq r0.x, r0.x
mul r6.xyz, r0.xxxx, v1.xyzx
dp3 r0.x, -r5.xyzx, r6.xyzx
add r0.x, r0.x, r0.x
mad r5.xyz, r6.xyzx, -r0.xxxx, -r5.xyzx
mul r7.xyz, r4.xyzx, r5.zzzz
mul r4.xyz, r4.xyzx, r6.zzzz
mad r4.xyz, r3.xyzx, r6.yyyy, r4.xyzx
mad r3.xyz, r3.xyzx, r5.yyyy, r7.xyzx
mov r7.x, cb0[36].x
mov r7.y, cb0[37].x
mov r7.z, cb0[38].x
mad r3.xyz, r7.xyzx, r5.xxxx, r3.xyzx
mad r4.xyz, r7.xyzx, r6.xxxx, r4.xyzx
mul_sat r7.xyz, r3.xyzx, l(1000000.000000, 1000000.000000, 1000000.000000, 0.000000)
mad r2.xyz, r7.xyzx, r2.xyzx, cb0[45].xyzx
mov r7.x, cb0[40].x
mov r7.y, cb0[41].x
mov r7.z, cb0[42].x
mov r7.w, cb0[43].x
mov r8.xyz, v4.xyzx
mov r8.w, l(1.000000)
dp4 r7.x, r7.xyzw, r8.xyzw
mov r9.x, cb0[40].y
mov r9.y, cb0[41].y
mov r9.z, cb0[42].y
mov r9.w, cb0[43].y
dp4 r7.y, r9.xyzw, r8.xyzw
mov r9.x, cb0[40].z
mov r9.y, cb0[41].z
mov r9.z, cb0[42].z
mov r9.w, cb0[43].z
dp4 r7.z, r9.xyzw, r8.xyzw
add r2.xyz, r2.xyzx, -r7.xyzx
div r9.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzx
mul r2.xyz, r2.xyzx, r9.xyzx
min r0.x, r2.y, r2.x
min r0.x, r2.z, r0.x
mad r2.xyz, r3.xyzx, r0.xxxx, r7.xyzx
sample_l r2.xyzw, r2.xyzx, t4.xyzw, s4, r1.w
mul r0.x, r2.w, l(6.000000)
mul r3.x, r0.x, r0.x
mul r3.y, r0.x, r3.x
dp2 r3.x, l(0.753200, 0.246800, 0.000000, 0.000000), r3.xyxx
mad r2.w, -r2.w, l(6.000000), r3.x
mad r0.x, r2.w, l(0.922443926), r0.x
mul r2.xyz, r0.xxxx, r2.xyzx
mov r3.x, cb0[14].z
mov r3.y, cb0[15].z
mov r3.z, cb0[16].z
mul r7.xyz, r5.zzzz, r3.xyzx
mul r3.xyz, r6.zzzz, r3.xyzx
mov r9.x, cb0[14].y
mov r9.y, cb0[15].y
mov r9.z, cb0[16].y
mad r5.yzw, r9.xxyz, r5.yyyy, r7.xxyz
mad r3.xyz, r9.xyzx, r6.yyyy, r3.xyzx
mov r7.x, cb0[14].x
mov r7.y, cb0[15].x
mov r7.z, cb0[16].x
mad r5.xyz, r7.xyzx, r5.xxxx, r5.yzwy
mad r3.xyz, r7.xyzx, r6.xxxx, r3.xyzx
mul_sat r6.xyz, r5.xyzx, l(1000000.000000, 1000000.000000, 1000000.000000, 0.000000)
add r7.xyz, -cb0[23].xyzx, cb0[24].xyzx
mad r6.xyz, r6.xyzx, r7.xyzx, cb0[23].xyzx
mov r7.x, cb0[18].x
mov r7.y, cb0[19].x
mov r7.z, cb0[20].x
mov r7.w, cb0[21].x
dp4 r7.x, r7.xyzw, r8.xyzw
mov r9.x, cb0[18].y
mov r9.y, cb0[19].y
mov r9.z, cb0[20].y
mov r9.w, cb0[21].y
dp4 r7.y, r9.xyzw, r8.xyzw
mov r9.x, cb0[18].z
mov r9.y, cb0[19].z
mov r9.z, cb0[20].z
mov r9.w, cb0[21].z
dp4 r7.z, r9.xyzw, r8.xyzw
add r6.xyz, r6.xyzx, -r7.xyzx
div r8.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r5.xyzx
mul r6.xyz, r6.xyzx, r8.xyzx
min r0.x, r6.y, r6.x
min r0.x, r6.z, r0.x
mad r5.xyz, r5.xyzx, r0.xxxx, r7.xyzx
sample_l r5.xyzw, r5.xyzx, t3.xyzw, s3, r1.w
add r0.x, -r1.w, l(8.000000)
exp r0.x, r0.x
mad r0.x, r0.x, l(0.159154937), l(0.318309873)
mul r6.xyz, r0.xxxx, r1.xyzx
mul r0.x, r5.w, l(6.000000)
mul r7.x, r0.x, r0.x
mul r7.y, r0.x, r7.x
dp2 r1.w, l(0.753200, 0.246800, 0.000000, 0.000000), r7.xyxx
mad r1.w, -r5.w, l(6.000000), r1.w
mad r0.x, r1.w, l(0.922443926), r0.x
mad r5.xyz, r5.xyzx, r0.xxxx, -r2.xyzx
mad r2.xyz, cb0[33].wwww, r5.xyzx, r2.xyzx
mul r1.xyz, r1.xyzx, r2.xyzx
mad r2.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
sample r2.xyzw, r2.xyxx, t2.xyzw, s2
mul r2.xyz, r2.xyzx, cb0[10].xyzx
mul r0.x, r2.w, cb0[11].y
mul r2.xyz, r2.xyzx, cb0[11].xxxx
mad r5.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r5.xyzw, r5.xyxx, t0.xyzw, s0
mul r5.xyz, r5.xyzx, cb0[4].xyzx
mul r5.xyz, r0.wwww, r5.xyzx
mul r7.xyz, r0.xxxx, r5.xyzx
mad r2.xyz, r2.xyzx, r0.wwww, r7.xyzx
mul r0.xy, r0.yzyy, cb0[13].zwzz
mad r0.yzw, r1.xxyz, r0.yyyy, r2.xxyz
dp3 r1.x, r3.xyzx, r3.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, r3.xyzx
mad r2.xyz, cb0[26].xyzx, r1.yyyy, cb0[25].xyzx
mad r2.xyz, cb0[27].xyzx, r1.zzzz, r2.xyzx
mad r2.xyz, cb0[28].xyzx, r1.xxxx, r2.xyzx
mul r3.xyz, r1.xzxx, r1.yyzy
mad r2.xyz, cb0[29].xyzx, r3.xxxx, r2.xyzx
mad r2.xyz, cb0[30].xyzx, r3.yyyy, r2.xyzx
mad r2.xyz, cb0[32].xyzx, r3.zzzz, r2.xyzx
mul r1.yz, r1.yyzy, r1.yyzy
mad r1.x, r1.x, r1.x, -r1.y
mad r1.y, r1.z, l(3.000000), l(-1.000000)
mad r1.yzw, cb0[31].xxyz, r1.yyyy, r2.xxyz
mad r1.xyz, cb0[33].xyzx, r1.xxxx, r1.yzwy
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r4.xyzx
mad r3.xyz, cb0[48].xyzx, r2.yyyy, cb0[47].xyzx
mad r3.xyz, cb0[49].xyzx, r2.zzzz, r3.xyzx
mad r3.xyz, cb0[50].xyzx, r2.xxxx, r3.xyzx
mul r4.xyz, r2.xzxx, r2.yyzy
mad r3.xyz, cb0[51].xyzx, r4.xxxx, r3.xyzx
mad r3.xyz, cb0[52].xyzx, r4.yyyy, r3.xyzx
mad r3.xyz, cb0[54].xyzx, r4.zzzz, r3.xyzx
mul r2.yz, r2.yyzy, r2.yyzy
mad r1.w, r2.x, r2.x, -r2.y
mad r2.x, r2.z, l(3.000000), l(-1.000000)
mad r2.xyz, cb0[53].xyzx, r2.xxxx, r3.xyzx
mad r2.xyz, cb0[55].xyzx, r1.wwww, r2.xyzx
add r1.xyz, |r1.xyzx|, -|r2.xyzx|
mad r1.xyz, cb0[33].wwww, r1.xyzx, |r2.xyzx|
mul r1.xyz, r5.xyzx, r1.xyzx
mad r0.xyz, r1.xyzx, r0.xxxx, r0.yzwy
div r1.xy, v6.xyxx, v6.wwww
sample r1.xyzw, r1.xyxx, t5.xyzw, s5
log r1.xyzw, r1.xyzw
add r1.xyz, -r1.xyzx, v8.xyzx
mul r2.xyz, -r1.wwww, r1.xyzx
mul r2.xyz, r6.xyzx, r2.xyzx
mul r2.xyz, r2.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000)
mad r1.xyz, r5.xyzx, r1.xyzx, r2.xyzx
add o0.xyz, r0.xyzx, r1.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used