// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed aa1ab79c244f4472-vs.txt
// 3DMigoto: aa1ab79c244f4472 | Matched 2 variants of 1 shaders: Marmoset/Transparent/Cutout/Bumped Diffuse IBL Cross Cards
//
//       Unity headers extracted from Marmoset Bumped Diffuse IBL Cross Cards.shader
//       Shader "Marmoset/Transparent/Cutout/Bumped Diffuse IBL Cross Cards" {
//         Properties {
//          _Color ("Diffuse Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.500000
//          _MainTex ("Diffuse(RGB) Alpha(A)", 2D) = "white" { }
//          _GIBoost ("Global Illumination Scale", Float) = 1.000000
//         }
//         Fallback "Transparent/Cutout/Diffuse"
//         SubShader 2/2 {
//           LOD 350
//           Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//           Pass 1/5 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//             Cull Off
//             GpuProgramID 427760
//             Program "vp" {
//               SubProgram "d3d11 " {
// 1:              GpuProgramIndex 161
// 2:              GpuProgramIndex 169
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Marmoset Bumped Diffuse IBL Cross Cards.shader.decompressed:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201510240 55 0 0
// 1:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "MARMO_SKY_BLEND_OFF" }
// 2:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "MARMO_SKY_BLEND_ON" }
//      undeciphered2: 1 0 4 0 0 0
//      undeciphered3: 9 2 0 0 3 4
// 1:   ConstBuffer "$Globals" 560
// 2:   ConstBuffer "$Globals" 912
//      Vector 48 [unity_ColorSpaceLuminance]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 720
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      Vector 656 [unity_SHBr]
//      Vector 672 [unity_SHBg]
//      Vector 688 [unity_SHBb]
//      Vector 704 [unity_SHC]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 64 [glstate_matrix_modelview0]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityPerDraw" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sun Nov 06 16:58:16 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 3      w        1     NONE   float      w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 6      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[22], immediateIndexed
dcl_input v0.xyzw
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o1.w
dcl_output o2.xyz
dcl_output o2.w
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_temps 10

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed aa1ab79c244f4472-vs.txt
mov r6.xyzw, cb1[4].xyzw
mov r7.xyzw, l(0)
mul r7.x, -r5.x, r5.y
mul r9.xyzw, cb10[0].xyzw, r7.xxxx
mad r9.xyzw, cb10[1].xyzw, r7.yyyy, r9.xyzw
mad r9.xyzw, cb10[2].xyzw, r7.zzzz, r9.xyzw
mad r9.xyzw, cb10[3].xyzw, r7.wwww, r9.xyzw
mul r8.xyzw, cb11[12].xyzw, r9.xxxx
mad r8.xyzw, cb11[13].xyzw, r9.yyyy, r8.xyzw
mad r8.xyzw, cb11[14].xyzw, r9.zzzz, r8.xyzw
mad r8.xyzw, cb11[15].xyzw, r9.wwww, r8.xyzw
add r6.xyz, r6.xyz, -r8.xyz

mul r0.xyzw, v0.yyyy, cb3[1].xyzw
mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb3[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed aa1ab79c244f4472-vs.txt
ne r5.w, r0.w, l(1.0)
if_nz r5.w
  add r5.w, r0.w, -r5.y
  mad r0.x, r5.w, r5.x, r0.x
endif

mul r1.x, v0.y, cb3[5].z
mad r1.x, cb3[4].z, v0.x, r1.x
mad r1.x, cb3[6].z, v0.z, r1.x
mad r1.x, cb3[7].z, v0.w, r1.x
mul r1.x, |r1.x|, l(0.040000)
min r1.x, r1.x, l(0.650000)
mul r1.y, r1.x, r1.x
mul o1.w, r1.y, r1.x
mul r1.xyz, v0.yyyy, cb3[13].xyzx
mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
add r2.xyz, -r1.xyzx, r6.xyzx
mov o2.xyz, r1.xyzx
dp3 r1.x, r2.xyzx, r2.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, r2.xyzx
mul r2.x, r1.x, cb3[16].x
mul r2.y, r1.x, cb3[17].x
mul r2.z, r1.x, cb3[18].x
mul r3.x, r1.y, cb3[16].y
mul r3.y, r1.y, cb3[17].y
mul r3.z, r1.y, cb3[18].y
add r1.xyw, r2.xyxz, r3.xyxz
mul r2.x, r1.z, cb3[16].z
mul r2.y, r1.z, cb3[17].z
mul r2.z, r1.z, cb3[18].z
add r1.xyz, r1.xywx, r2.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
mov o1.xyz, r1.xyzx
mov o2.w, r0.z
mov o3.xy, v3.xyxx
mov o3.zw, l(0,0,0,0)
mul r2.x, r1.y, r1.y
mad r2.x, r1.x, r1.x, -r2.x
mul r3.xyzw, r1.yzzx, r1.xyzz
dp4 r4.x, cb2[41].xyzw, r3.xyzw
dp4 r4.y, cb2[42].xyzw, r3.xyzw
dp4 r4.z, cb2[43].xyzw, r3.xyzw
mad r2.xyz, cb2[44].xyzx, r2.xxxx, r4.xyzx
mov r1.w, l(1.000000)
dp4 r3.x, cb2[38].xyzw, r1.xyzw
dp4 r3.y, cb2[39].xyzw, r1.xyzw
dp4 r3.z, cb2[40].xyzw, r1.xyzw
add r1.xyz, r2.xyzx, r3.xyzx
max r2.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r2.xyz, r2.xyzx
mul r2.xyz, r2.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r2.xyz, r2.xyzx
mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r1.w, cb0[3].w, l(0.000000)
movc o4.xyz, r1.wwww, r2.xyzx, r1.xyzx
mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o5.zw, r0.zzzw
add o5.xy, r1.zzzz, r1.xwxx
mov o6.xyzw, l(0,0,0,0)
ret 
// Approximately 0 instruction slots used