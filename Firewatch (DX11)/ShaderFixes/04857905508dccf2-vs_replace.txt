// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --only-autofixed --fxc /home/dss/fxc.exe 04857905508dccf2-vs_replace.txt
// 3DMigoto: 04857905508dccf2 | Matched 6 variants of 3 shaders: Marmoset/Diffuse IBL Double Faces, Marmoset/Diffuse IBL Lightened Shadows, Marmoset/Transparent/Cutout/Diffuse IBL
// 
//    Unity headers extracted from Marmoset Diffuse IBL Double Faces.shader
//    Shader "Marmoset/Diffuse IBL Double Faces" {
//      Properties {
//       _Color ("Diffuse Color", Color) = (1,1,1,1)
//       _MainTex ("Diffuse(RGB) Alpha(A)", 2D) = "white" { }
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="Geometry" "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          Cull Off
//          GpuProgramID 21309
//          Program "vp" {
//            SubProgram "d3d11 " {
// 1:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "LIGHTMAP_OFF" "MARMO_SKY_BLEND_OFF" "SHADOWS_OFF" }
// 2:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "LIGHTMAP_OFF" "MARMO_SKY_BLEND_ON" "SHADOWS_OFF" }
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              ConstBuffer "UnityLighting" 720
//              Vector 608 [unity_SHAr]
//              Vector 624 [unity_SHAg]
//              Vector 640 [unity_SHAb]
//              Vector 656 [unity_SHBr]
//              Vector 672 [unity_SHBg]
//              Vector 688 [unity_SHBb]
//              Vector 704 [unity_SHC]
//              ConstBuffer "UnityPerDraw" 352
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 192 [_Object2World]
//              Matrix 256 [_World2Object]
//              BindCB "UnityLighting" 0
//              BindCB "UnityPerDraw" 1
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from Marmoset Diffuse IBL Lightened Shadows.shader
//    Shader "Marmoset/Diffuse IBL Lightened Shadows" {
//      Properties {
//       _Color ("Diffuse Color", Color) = (1,1,1,1)
//       _MainTex ("Diffuse(RGB) Alpha(A)", 2D) = "white" { }
//       _EmissiveLightAmount ("Emissive Light Amount", Float) = 1.1
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="Geometry" "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 45582
//          Program "vp" {
//            SubProgram "d3d11 " {
// 1:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "LIGHTMAP_OFF" "MARMO_SKY_BLEND_OFF" "SHADOWS_OFF" }
// 2:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "LIGHTMAP_OFF" "MARMO_SKY_BLEND_ON" "SHADOWS_OFF" }
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              ConstBuffer "UnityLighting" 720
//              Vector 608 [unity_SHAr]
//              Vector 624 [unity_SHAg]
//              Vector 640 [unity_SHAb]
//              Vector 656 [unity_SHBr]
//              Vector 672 [unity_SHBg]
//              Vector 688 [unity_SHBb]
//              Vector 704 [unity_SHC]
//              ConstBuffer "UnityPerDraw" 352
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 192 [_Object2World]
//              Matrix 256 [_World2Object]
//              BindCB "UnityLighting" 0
//              BindCB "UnityPerDraw" 1
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from Marmoset Diffuse IBL.shader
//    Shader "Marmoset/Transparent/Cutout/Diffuse IBL" {
//      Properties {
//       _Color ("Diffuse Color", Color) = (1,1,1,1)
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//       _MainTex ("Diffuse(RGB) Alpha(A)", 2D) = "white" { }
//      }
//      Fallback "Transparent/Cutout/Specular"
//      SubShader 2/2 {
//        LOD 200
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//          GpuProgramID 417741
//          Program "vp" {
//            SubProgram "d3d11 " {
// 1:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "LIGHTMAP_OFF" "MARMO_SKY_BLEND_OFF" "SHADOWS_OFF" }
// 2:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "LIGHTMAP_OFF" "MARMO_SKY_BLEND_ON" "SHADOWS_OFF" }
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              ConstBuffer "UnityLighting" 720
//              Vector 608 [unity_SHAr]
//              Vector 624 [unity_SHAg]
//              Vector 640 [unity_SHAb]
//              Vector 656 [unity_SHBr]
//              Vector 672 [unity_SHBg]
//              Vector 688 [unity_SHBb]
//              Vector 704 [unity_SHC]
//              ConstBuffer "UnityPerDraw" 352
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 192 [_Object2World]
//              Matrix 256 [_World2Object]
//              BindCB "UnityLighting" 0
//              BindCB "UnityPerDraw" 1
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py
//
// Shader model vs_4_0

// ---- Created with 3Dmigoto v1.2.31 on Sat Feb 20 12:34:43 2016
cbuffer cb1 : register(b1)
{
  float4 cb1[19];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[45];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  float4 v1 : TANGENT0,
  float3 v2 : NORMAL0,
  float4 v3 : TEXCOORD0,
  float4 v4 : TEXCOORD1,
  float4 v5 : TEXCOORD2,
  float4 v6 : TEXCOORD3,
  float4 v7 : COLOR0,
  out float4 o0 : SV_POSITION0,
  out float3 o1 : TEXCOORD0,
  out float p1 : TEXCOORD5,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3,
  out float4 o5 : TEXCOORD6)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
float separation = stereo.x, convergence = stereo.y, eye = stereo.z;

  r0.xyzw = cb1[1].xyzw * v0.yyyy;
  r0.xyzw = cb1[0].xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = cb1[2].xyzw * v0.zzzz + r0.xyzw;
  r0.xyzw = cb1[3].xyzw * v0.wwww + r0.xyzw;
  o0.xyzw = r0.xyzw;

// Automatic vertex shader halo fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --only-autofixed --fxc /home/dss/fxc.exe 04857905508dccf2-vs_replace.txt
if (r0.w != 1.0) { r0.x += separation * (r0.w - convergence); }

  p1.x = r0.z;
  r0.x = cb1[16].x * v2.x;
  r0.y = cb1[17].x * v2.x;
  r0.z = cb1[18].x * v2.x;
  r1.x = cb1[16].y * v2.y;
  r1.y = cb1[17].y * v2.y;
  r1.z = cb1[18].y * v2.y;
  r0.xyz = r1.xyz + r0.xyz;
  r1.x = cb1[16].z * v2.z;
  r1.y = cb1[17].z * v2.z;
  r1.z = cb1[18].z * v2.z;
  r0.xyz = r1.xyz + r0.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  o1.xyz = r0.xyz;
  r1.xyz = cb1[13].xyz * v0.yyy;
  r1.xyz = cb1[12].xyz * v0.xxx + r1.xyz;
  r1.xyz = cb1[14].xyz * v0.zzz + r1.xyz;
  o2.xyz = cb1[15].xyz * v0.www + r1.xyz;
  o3.xy = v3.xy;
  o3.zw = float2(0,0);
  r1.x = r0.y * r0.y;
  r1.x = r0.x * r0.x + -r1.x;
  r2.xyzw = r0.xyzz * r0.yzzx;
  r3.x = dot(cb0[41].xyzw, r2.xyzw);
  r3.y = dot(cb0[42].xyzw, r2.xyzw);
  r3.z = dot(cb0[43].xyzw, r2.xyzw);
  r1.xyz = cb0[44].xyz * r1.xxx + r3.xyz;
  r0.w = 1;
  r2.x = dot(cb0[38].xyzw, r0.xyzw);
  r2.y = dot(cb0[39].xyzw, r0.xyzw);
  r2.z = dot(cb0[40].xyzw, r0.xyzw);
  o4.xyz = r2.xyz + r1.xyz;
  o5.xyzw = float4(0,0,0,0);
  return;
}

/****************************** COMPILE WARNINGS ******************************
C:\Steam\SteamApps\common\Firewatch\ShaderFixes\04857905508dccf2-vs_replace.txt(170,14-15): warning X3578: Output value 'o2' is not completely initialized
C:\Steam\SteamApps\common\Firewatch\ShaderFixes\04857905508dccf2-vs_replace.txt(172,14-15): warning X3578: Output value 'o4' is not completely initialized

****************************** COMPILE WARNINGS ******************************/
