// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed a8c53f87c2c4a62f-vs.txt
// 3DMigoto: a8c53f87c2c4a62f |    Unity headers extracted from TMPro_SDF-Surface.shader
//    Shader "TMPro/Distance Field (Surface)" {
//      Properties {
//       _FaceTex ("Fill Texture", 2D) = "white" { }
//       _FaceUVSpeedX ("Face UV Speed X", Range(-5.000000,5.000000)) = 0.000000
//       _FaceUVSpeedY ("Face UV Speed Y", Range(-5.000000,5.000000)) = 0.000000
//       _FaceColor ("Fill Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _FaceDilate ("Face Dilate", Range(-1.000000,1.000000)) = 0.000000
//       _OutlineColor ("Outline Color", Color) = (0.000000,0.000000,0.000000,1.000000)
//       _OutlineTex ("Outline Texture", 2D) = "white" { }
//       _OutlineUVSpeedX ("Outline UV Speed X", Range(-5.000000,5.000000)) = 0.000000
//       _OutlineUVSpeedY ("Outline UV Speed Y", Range(-5.000000,5.000000)) = 0.000000
//       _OutlineWidth ("Outline Thickness", Range(0.000000,1.000000)) = 0.000000
//       _OutlineSoftness ("Outline Softness", Range(0.000000,1.000000)) = 0.000000
//       _Bevel ("Bevel", Range(0.000000,1.000000)) = 0.500000
//       _BevelOffset ("Bevel Offset", Range(-0.500000,0.500000)) = 0.000000
//       _BevelWidth ("Bevel Width", Range(-0.500000,0.500000)) = 0.000000
//       _BevelClamp ("Bevel Clamp", Range(0.000000,1.000000)) = 0.000000
//       _BevelRoundness ("Bevel Roundness", Range(0.000000,1.000000)) = 0.000000
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _BumpOutline ("Bump Outline", Range(0.000000,1.000000)) = 0.500000
//       _BumpFace ("Bump Face", Range(0.000000,1.000000)) = 0.500000
//       _ReflectFaceColor ("Face Color", Color) = (0.000000,0.000000,0.000000,1.000000)
//       _ReflectOutlineColor ("Outline Color", Color) = (0.000000,0.000000,0.000000,1.000000)
//       _Cube ("Reflection Cubemap", CUBE) = "black" { }
//       _EnvMatrixRotation ("Texture Rotation", Vector) = (0.000000,0.000000,0.000000,0.000000)
//       _SpecColor ("Specular Color", Color) = (0.000000,0.000000,0.000000,1.000000)
//       _FaceShininess ("Face Shininess", Range(0.000000,1.000000)) = 0.000000
//       _OutlineShininess ("Outline Shininess", Range(0.000000,1.000000)) = 0.000000
//       _GlowColor ("Color", Color) = (0.000000,1.000000,0.000000,0.500000)
//       _GlowOffset ("Offset", Range(-1.000000,1.000000)) = 0.000000
//       _GlowInner ("Inner", Range(0.000000,1.000000)) = 0.050000
//       _GlowOuter ("Outer", Range(0.000000,1.000000)) = 0.050000
//       _GlowPower ("Falloff", Range(1.000000,0.000000)) = 0.750000
//       _WeightNormal ("Weight Normal", Float) = 0.000000
//       _WeightBold ("Weight Bold", Float) = 0.500000
//       _ShaderFlags ("Flags", Float) = 0.000000
//       _ScaleRatioA ("Scale RatioA", Float) = 1.000000
//       _ScaleRatioB ("Scale RatioB", Float) = 1.000000
//       _ScaleRatioC ("Scale RatioC", Float) = 1.000000
//       _MainTex ("Font Atlas", 2D) = "white" { }
//       _TextureWidth ("Texture Width", Float) = 512.000000
//       _TextureHeight ("Texture Height", Float) = 512.000000
//       _GradientScale ("Gradient Scale", Float) = 5.000000
//       _ScaleX ("Scale X", Float) = 1.000000
//       _ScaleY ("Scale Y", Float) = 1.000000
//       _PerspectiveFilter ("Perspective Correction", Range(0.000000,1.000000)) = 0.875000
//       _VertexOffsetX ("Vertex OffsetX", Float) = 0.000000
//       _VertexOffsetY ("Vertex OffsetY", Float) = 0.000000
//      }
//      CustomEditor "TMPro_SDFMaterialEditor"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Cull [_CullMode]
//          Blend SrcAlpha One
//          ColorMask RGB
//          GpuProgramID 97026
//          Program "vp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 35
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from TMPro_SDF-Surface.shader.decompressed:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201510240 73 0 0
//   Keywords { "POINT" "FOG_EXP2" }
//   undeciphered2: 1 0 4 0 0 0
//   undeciphered3: 159 6 0 0 2 1 1 2 3 4 4 5 7 8
//   ConstBuffer "$Globals" 656
//   Float 224 [_FaceDilate]
//   Float 516 [_WeightNormal]
//   Float 520 [_WeightBold]
//   Float 524 [_ScaleRatioA]
//   Float 536 [_VertexOffsetX]
//   Float 540 [_VertexOffsetY]
//   Float 592 [_GradientScale]
//   Float 596 [_ScaleX]
//   Float 600 [_ScaleY]
//   Float 604 [_PerspectiveFilter]
//   Vector 624 [_MainTex_ST]
//   Vector 640 [_FaceTex_ST]
//   Matrix 336 [_EnvMatrix]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 96 [_ScreenParams]
//   ConstBuffer "UnityPerDraw" 352
//   Vector 336 [unity_WorldTransformParams]
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [unity_ObjectToWorld]
//   Matrix 256 [unity_WorldToObject]
//   ConstBuffer "UnityPerFrame" 352
//   Matrix 80 [glstate_matrix_projection]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Nov 05 21:03:42 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// COLOR                    0   xyzw        6     NONE   float   xyzw
// TEXCOORD                 5   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
// TEXCOORD                 6   xyz         8     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[41], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xy
dcl_input v7.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output o7.xy
dcl_output o7.z
dcl_output o8.xyz
dcl_temps 9

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed a8c53f87c2c4a62f-vs.txt
mov r5.xyzw, cb1[4].xyzw
mov r6.xyzw, l(0)
mul r6.x, -r4.x, r4.y
mul r8.xyzw, cb10[0].xyzw, r6.xxxx
mad r8.xyzw, cb10[1].xyzw, r6.yyyy, r8.xyzw
mad r8.xyzw, cb10[2].xyzw, r6.zzzz, r8.xyzw
mad r8.xyzw, cb10[3].xyzw, r6.wwww, r8.xyzw
mul r7.xyzw, cb11[12].xyzw, r8.xxxx
mad r7.xyzw, cb11[13].xyzw, r8.yyyy, r7.xyzw
mad r7.xyzw, cb11[14].xyzw, r8.zzzz, r7.xyzw
mad r7.xyzw, cb11[15].xyzw, r8.wwww, r7.xyzw
add r5.xyz, r5.xyz, -r7.xyz

add r0.xy, v0.xyxx, cb0[33].zwzz
mul r1.xyzw, r0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb2[3].xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed a8c53f87c2c4a62f-vs.txt
ne r4.w, r1.w, l(1.0)
if_nz r4.w
  add r4.w, r1.w, -r4.y
  mad r1.x, r4.w, r4.x, r1.x
endif

mov o7.z, r1.z
round_ni r0.w, v4.x
mul r1.z, r0.w, cb0[40].x
frc r0.w, v4.x
mul r1.w, r0.w, cb0[40].y
mad o1.zw, r1.zzzw, l(0.000000, 0.000000, 0.00122070313, 5.000000), cb0[40].zzzw
mad o1.xy, v3.xyxx, cb0[39].xyxx, cb0[39].zwzz
mul r1.xyz, r5.yyyy, cb2[17].xyzx
mad r1.xyz, cb2[16].xyzx, r5.xxxx, r1.xyzx
mad r1.xyz, cb2[18].xyzx, r5.zzzz, r1.xyzx
add r1.xyz, r1.xyzx, cb2[19].xyzx
mov r0.z, v0.z
add r1.xyz, -r0.xyzx, r1.xyzx
dp3 r0.z, v2.xyzx, r1.xyzx
lt r0.w, l(0.000000), r0.z
lt r0.z, r0.z, l(0.000000)
iadd r0.z, -r0.w, r0.z
itof r0.z, r0.z
mul r1.xyz, r0.zzzz, v2.xyzx
mov r2.y, cb2[16].y
mov r2.z, cb2[17].y
mov r2.x, cb2[18].y
mul r2.xyz, r1.yyyy, r2.xyzx
mov r3.y, cb2[16].x
mov r3.z, cb2[17].x
mov r3.x, cb2[18].x
mad r1.xyw, r3.xyxz, r1.xxxx, r2.xyxz
mov r2.y, cb2[16].z
mov r2.z, cb2[17].z
mov r2.x, cb2[18].z
mad r1.xyz, r2.xyzx, r1.zzzz, r1.xywx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r1.xyz, r0.zzzz, r1.xyzx
mov o2.z, r1.y
mul r2.xyz, v1.yyyy, cb2[13].yzxy
mad r2.xyz, cb2[12].yzxy, v1.xxxx, r2.xyzx
mad r2.xyz, cb2[14].yzxy, v1.zzzz, r2.xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
mul r3.xyz, r1.xyzx, r2.xyzx
mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
mul r0.z, v1.w, cb2[21].w
mul r3.xyz, r0.zzzz, r3.xyzx
mov o2.y, r3.x
mov o2.x, r2.z
mov o3.x, r2.x
mov o4.x, r2.y
mov o3.z, r1.z
mov o3.y, r3.y
mov o4.y, r3.z
mov o4.z, r1.x
mul r2.xyz, r0.yyyy, cb2[13].xyzx
mad r2.xyz, cb2[12].xyzx, r0.xxxx, r2.xyzx
mad r2.xyz, cb2[14].xyzx, v0.zzzz, r2.xyzx
mad r2.xyz, cb2[15].xyzx, v0.wwww, r2.xyzx
mov o5.xyz, r2.xyzx
add r2.xyz, -r2.xyzx, r5.xyzx
mov o6.xyzw, v7.xyzw
mul r0.y, r0.y, cb2[1].w
mad r0.x, cb2[0].w, r0.x, r0.y
mad r0.x, cb2[2].w, v0.z, r0.x
mad r0.x, cb2[3].w, v0.w, r0.x
mul r0.yz, cb1[6].yyyy, cb3[6].xxyx
mad r0.yz, cb3[5].xxyx, cb1[6].xxxx, r0.yyzy
mul r0.yz, r0.yyzy, cb0[37].yyzy
div r0.xy, r0.xxxx, r0.yzyy
dp2 r0.x, r0.xyxx, r0.xyxx
rsq r0.x, r0.x
mul r0.y, |v4.y|, cb0[37].x
mul r0.x, r0.x, r0.y
mul r0.y, r0.x, l(1.500000)
add r0.z, -cb0[37].w, l(1.000000)
mul r0.y, r0.z, r0.y
mad r0.x, r0.x, l(1.500000), -r0.y
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r3.xyz, r0.zzzz, r2.xyzx
dp3 r0.z, r1.yzxy, r3.xyzx
mad o7.y, |r0.z|, r0.x, r0.y
ge r0.x, l(0.000000), v4.y
and r0.x, r0.x, l(0x3f800000)
add r0.y, -cb0[32].y, cb0[32].z
mad r0.x, r0.x, r0.y, cb0[32].y
div r0.x, r0.x, cb0[37].x
mul r0.y, cb0[14].x, cb0[32].w
mad o7.x, r0.y, l(0.500000), r0.x
mul r0.xyz, r2.yyyy, cb0[22].xyzx
mad r0.xyz, cb0[21].xyzx, r2.xxxx, r0.xyzx
mad o8.xyz, cb0[23].xyzx, r2.zzzz, r0.xyzx
ret 
// Approximately 0 instruction slots used