// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3d69dccfe41e9e71-ps.txt
// 3DMigoto: 3d69dccfe41e9e71 |    Unity headers extracted from Marmoset_Bumped Diffuse IBL Lightened Shadows
//    Shader "Marmoset/Bumped Diffuse IBL Lightened Shadows" {
//      Fallback "Marmoset/Diffuse IBL"
//      SubShader 1/1 {
//        LOD 350
//        Tags { "QUEUE"="Geometry" "RenderType"="Opaque" }
//        Pass 2/6 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Marmoset_Bumped Diffuse IBL Lightened Shadows:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 73 5 4
//   undeciphered1a: 7
//   Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "MARMO_SKY_BLEND_ON" }
//   undeciphered2: 1 6 6 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 960
//   Vector 32 [_LightColor0]
//   Vector 64 [_ShadowOffsets0]
//   Vector 80 [_ShadowOffsets1]
//   Vector 96 [_ShadowOffsets2]
//   Vector 112 [_ShadowOffsets3]
//   Vector 192 [_Color]
//   Vector 208 [_MainTex_ST]
//   Vector 224 [_BumpMap_ST]
//   Vector 256 [_ExposureIBL]
//   Float 604 [_BlendWeightIBL]
//   Vector 608 [_ExposureIBL1]
//   Matrix 128 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   Matrix 128 [unity_WorldToShadow0]
//   Matrix 192 [unity_WorldToShadow1]
//   Matrix 256 [unity_WorldToShadow2]
//   Matrix 320 [unity_WorldToShadow3]
//   ConstBuffer "UnityPerFrame" 384
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 4
//   SetTexture 1 [_BumpMap] 2D 5
//   SetTexture 2 [_LightTexture0] 2D 2
//   SetTexture 3 [_LightTextureB0] 2D 3
//   SetTexture 4 [unity_ProbeVolumeSH] 3D 0
//   SetTexture 5 [_ShadowMapTexture] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.2 on Thu Apr 26 06:07:49 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyzw        5     NONE   float   xy
// TEXCOORD                 5   xy          6     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[39], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xy
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3d69dccfe41e9e71-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v4.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r0.w, cb0[16].w, -cb0[38].w
mad r0.w, cb0[37].w, r0.w, cb0[38].w
mad r1.xy, v5.xyxx, cb0[13].xyxx, cb0[13].zwzz
sample r1.xyzw, r1.xyxx, t0.xyzw, s4
mul r1.xyz, r1.xyzx, cb0[12].xyzx
mul r1.xyz, r0.wwww, r1.xyzx
mad r2.xy, v5.xyxx, cb0[14].xyxx, cb0[14].zwzz
sample r2.xyzw, r2.xyxx, t1.xyzw, s5
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r2.z, r0.w
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
mul r3.xyzw, v4.yyyy, cb0[9].xyzw
mad r3.xyzw, cb0[8].xyzw, v4.xxxx, r3.xyzw
mad r3.xyzw, cb0[10].xyzw, v4.zzzz, r3.xyzw
add r3.xyzw, r3.xyzw, cb0[11].xyzw
add r4.xyz, -v4.xyzx, r8.xyzx
mov r5.x, cb4[9].z
mov r5.y, cb4[10].z
mov r5.z, cb4[11].z
dp3 r0.w, r4.xyzx, r5.xyzx
add r4.xyz, v4.xyzx, -cb3[25].xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
sqrt r1.w, r1.w
add r1.w, -r0.w, r1.w
mad r0.w, cb3[25].w, r1.w, r0.w
mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
eq r1.w, cb5[0].x, l(1.000000)
if_nz r1.w
  eq r2.w, cb5[0].y, l(1.000000)
  mul r4.xyz, v4.yyyy, cb5[2].xyzx
  mad r4.xyz, cb5[1].xyzx, v4.xxxx, r4.xyzx
  mad r4.xyz, cb5[3].xyzx, v4.zzzz, r4.xyzx
  add r4.xyz, r4.xyzx, cb5[4].xyzx
  movc r4.xyz, r2.wwww, r4.xyzx, v4.xyzx
  add r4.xyz, r4.xyzx, -cb5[6].xyzx
  mul r4.yzw, r4.xxyz, cb5[5].xxyz
  mad r2.w, r4.y, l(0.250000), l(0.750000)
  mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  max r4.x, r2.w, r4.y
  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
else
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r4.xyzw, cb2[45].xyzw
lt r4.x, r0.w, l(0.990000)
if_nz r4.x
  mul r4.xyzw, v4.yyyy, cb3[9].xyzw
  mad r4.xyzw, cb3[8].xyzw, v4.xxxx, r4.xyzw
  mad r4.xyzw, cb3[10].xyzw, v4.zzzz, r4.xyzw
  add r4.xyzw, r4.xyzw, cb3[11].xyzw
  div r4.xyz, r4.xyzx, r4.wwww
  add r5.xyz, r4.xyzx, cb0[4].xyzx
  sample_c_lz r5.x, r5.xyxx, t5.xxxx, s1, r5.z
  add r6.xyz, r4.xyzx, cb0[5].xyzx
  sample_c_lz r5.y, r6.xyxx, t5.xxxx, s1, r6.z
  add r6.xyz, r4.xyzx, cb0[6].xyzx
  sample_c_lz r5.z, r6.xyxx, t5.xxxx, s1, r6.z
  add r4.xyz, r4.xyzx, cb0[7].xyzx
  sample_c_lz r5.w, r4.xyxx, t5.xxxx, s1, r4.z
  add r4.x, -cb3[24].x, l(1.000000)
  mad r4.xyzw, r5.xyzw, r4.xxxx, cb3[24].xxxx
  dp4 r4.x, r4.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
else
  mov r4.x, l(1.000000)
endif
add_sat r0.w, r0.w, r4.x
min r2.w, r0.w, r2.w
movc r0.w, r1.w, r2.w, r0.w
lt r1.w, l(0.000000), r3.z
and r1.w, r1.w, l(0x3f800000)
div r4.xy, r3.xyxx, r3.wwww
add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample r4.xyzw, r4.xyxx, t2.xyzw, s2
mul r1.w, r1.w, r4.w
dp3 r2.w, r3.xyzx, r3.xyzx
sample r3.xyzw, r2.wwww, t3.xyzw, s3
mul r1.w, r1.w, r3.x
mul r0.w, r0.w, r1.w
dp3 r3.x, v1.xyzx, r2.xyzx
dp3 r3.y, v2.xyzx, r2.xyzx
dp3 r3.z, v3.xyzx, r2.xyzx
dp3_sat r0.x, r3.xyzx, r0.xyzx
add r0.x, r0.x, r0.x
mul r0.xyz, r1.xyzx, r0.xxxx
mul r0.xyz, r0.xyzx, cb0[2].xyzx
mul o0.xyz, r0.wwww, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used