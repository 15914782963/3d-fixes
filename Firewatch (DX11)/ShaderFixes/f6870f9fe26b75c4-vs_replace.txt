// Crosshair

// 3DMigoto: f6870f9fe26b75c4 |    Unity headers extracted from UI-Default.shader
//    Shader "UI/Default" {
//      Properties {
//      [PerRendererData]  _MainTex ("Sprite Texture", 2D) = "white" { }
//       _Color ("Tint", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _StencilComp ("Stencil Comparison", Float) = 8.000000
//       _Stencil ("Stencil ID", Float) = 0.000000
//       _StencilOp ("Stencil Operation", Float) = 0.000000
//       _StencilWriteMask ("Stencil Write Mask", Float) = 255.000000
//       _StencilReadMask ("Stencil Read Mask", Float) = 255.000000
//       _ColorMask ("Color Mask", Float) = 15.000000
//      [Toggle(UNITY_UI_ALPHACLIP)]  _UseUIAlphaClip ("Use Alpha Clip", Float) = 0.000000
//      }
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" "PreviewType"="Plane" "CanUseSpriteAtlas"="true" }
//        Pass 1/1 {
//          Name "DEFAULT"
//          Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" "PreviewType"="Plane" "CanUseSpriteAtlas"="true" }
//          ZTest [unity_GUIZTestMode]
//          ZWrite Off
//          Cull Off
//          Stencil {
//             Ref [_Stencil]
//             ReadMask [_StencilReadMask]
//             WriteMask [_StencilWriteMask]
//             Comp [_StencilComp]
//             Pass [_StencilOp]
//            }
//          Blend SrcAlpha OneMinusSrcAlpha
//          ColorMask [_ColorMask]
//          GpuProgramID 6852
//          Program "vp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 1
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from UI-Default.shader.decompressed:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201510240 5 0 0
//   undeciphered2: 1 0 2 0 0 0
//   undeciphered3: 13 3 0 0 2 1 3 4
//   ConstBuffer "$Globals" 144
//   Vector 96 [_Color]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   BindCB "$Globals" 0
//   BindCB "UnityPerDraw" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

// ---- Created with 3Dmigoto v1.2.42 on Sat Nov 05 21:05:38 2016
cbuffer cb1 : register(b1)
{
  float4 cb1[4];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[7];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);

#include <ShaderFixes/crosshair.hlsl>

void main( 
  float4 v0 : POSITION0,
  float4 v1 : COLOR0,
  float2 v2 : TEXCOORD0,
  out float4 o0 : SV_POSITION0,
  out float4 o1 : COLOR0,
  out float4 o2 : TEXCOORD0,
  out float4 o3 : TEXCOORD1)
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = cb1[1].xyzw * v0.yyyy;
  r0.xyzw = cb1[0].xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = cb1[2].xyzw * v0.zzzz + r0.xyzw;
  o0.xyzw = cb1[3].xyzw + r0.xyzw;
  o1.xyzw = cb0[6].xyzw * v1.xyzw;
  o2.xy = v2.xy;
  o3.xyzw = v0.xyzw;

if (o0.w != 1)
	return;

float4 rt_filter = IniParams.Load(int2(1, 0));
if (any(rt_filter.xy != rt_filter.zw))
	return;

// Full screen detection:
if (all(abs(o0.xy) >= 1.0))
	return;

float4 crosshair_settings = IniParams.Load(int2(2, 0));
if (crosshair_settings.y && !crosshair_settings.x) {
	o0 = 0;
	return;
}

// Mouse cursor detection:
if (crosshair_settings.z)
	return;

o0.x += adjust_from_depth_buffer(0, 0);

  return;
}

/****************************** COMPILE WARNINGS ******************************
R:\Steam\SteamApps\common\Firewatch\ShaderFixes\f6870f9fe26b75c4-vs_replace.txt(83,14-15): warning X3578: Output value 'o2' is not completely initialized

****************************** COMPILE WARNINGS ******************************/
