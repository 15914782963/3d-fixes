// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8381c63d946ef9f8-ps.txt
// 3DMigoto: 8381c63d946ef9f8 |    Unity headers extracted from Marmoset_Transparent_Specular IBL
//    Shader "Marmoset/Transparent/Specular IBL" {
//      Fallback "Transparent/Specular"
//      SubShader 1/1 {
//        LOD 250
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Marmoset_Transparent_Specular IBL:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 71 3 2
//   undeciphered1a: 6
//   Keywords { "DIRECTIONAL" "MARMO_SKY_BLEND_ON" "MARMO_BOX_PROJECTION_OFF" }
//   undeciphered2: 1 3 4 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 848
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Vector 64 [_Color]
//   Vector 80 [_MainTex_ST]
//   Float 96 [_SpecInt]
//   Float 100 [_Shininess]
//   Float 104 [_Fresnel]
//   Vector 112 [_SpecTex_ST]
//   Vector 144 [_ExposureIBL]
//   Float 492 [_BlendWeightIBL]
//   Vector 496 [_ExposureIBL1]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_SpecTex] 2D 2
//   SetTexture 2 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.2 on Thu Apr 26 06:09:10 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyzw        3     NONE   float   xy
// TEXCOORD                 3   xyzw        4     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8381c63d946ef9f8-ps.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v2.xyzx, r7.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r1.w, cb0[9].w, -cb0[31].w
mad r1.w, cb0[30].w, r1.w, cb0[31].w
mad r2.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r2.xyzw, r2.xyxx, t0.xyzw, s1
mul r2.xyzw, r2.xyzw, cb0[4].xyzw
mul r2.xyz, r1.wwww, r2.xyzx
dp3 r3.x, v1.xyzx, v1.xyzx
rsq r3.x, r3.x
mul r3.xyz, r3.xxxx, v1.xyzx
mad r4.xy, v3.xyxx, cb0[7].xyxx, cb0[7].zwzz
sample r4.xyzw, r4.xyxx, t1.xyzw, s2
dp3_sat r1.x, r3.xyzx, r1.xyzx
add r1.x, -r1.x, l(1.000000)
mul r3.x, r1.x, r1.x
mul r1.z, r1.x, r3.x
mov r1.y, l(1.000000)
mad r3.xy, cb0[6].zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
dp2 r5.x, r1.yxyy, r3.xyxx
dp2 r5.y, r1.xzxx, r3.xyxx
dp2 r1.x, r5.xyxx, r3.xyxx
mad r1.x, r1.x, l(0.950000), l(0.050000)
mul r1.y, r1.x, cb0[6].x
sqrt r1.y, r1.y
mad r1.x, r1.x, cb0[6].x, -r1.y
mad r1.x, r1.x, l(0.922443926), r1.y
mul r3.xyz, r4.xyzx, cb0[3].xyzx
mul r1.x, r1.w, r1.x
mul r1.xyz, r1.xxxx, r3.xyzx
add r1.w, -r4.w, l(1.000000)
mad r3.xy, -r1.wwww, r1.wwww, l(1.000000, 8.000000, 0.000000, 0.000000)
mad r1.w, -cb0[6].y, r3.x, r3.y
add r1.w, -r1.w, l(8.000000)
exp r1.w, r1.w
mad r3.x, r1.w, l(0.159154937), l(0.318309873)
mul r1.xyz, r1.xyzx, r3.xxxx
eq r3.x, cb3[0].x, l(1.000000)
if_nz r3.x
  eq r3.x, cb3[0].y, l(1.000000)
  mul r3.yzw, v2.yyyy, cb3[2].xxyz
  mad r3.yzw, cb3[1].xxyz, v2.xxxx, r3.yyzw
  mad r3.yzw, cb3[3].xxyz, v2.zzzz, r3.yyzw
  add r3.yzw, r3.yyzw, cb3[4].xxyz
  movc r3.xyz, r3.xxxx, r3.yzwy, v2.xyzx
  add r3.xyz, r3.xyzx, -cb3[6].xyzx
  mul r3.yzw, r3.xxyz, cb3[5].xxyz
  mad r3.y, r3.y, l(0.250000), l(0.750000)
  mad r4.x, cb3[0].z, l(0.500000), l(0.750000)
  max r3.x, r3.y, r4.x
  sample r3.xyzw, r3.xzwx, t2.xyzw, s0
else
  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r3.x, r3.xyzw, cb2[45].xyzw
dp3 r3.y, cb2[0].xyzx, cb2[0].xyzx
rsq r3.y, r3.y
mul r3.yzw, r3.yyyy, cb2[0].xxyz
dp3_sat r4.x, v1.xyzx, r3.yzwy
add r4.y, r4.x, r4.x
mul r2.xyz, r2.xyzx, r4.yyyy
mad r0.xyz, r0.xyzx, r0.wwww, r3.yzwy
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3_sat r0.x, v1.xyzx, r0.xyzx
add r0.y, r1.w, r1.w
log r0.x, r0.x
mul r0.x, r0.x, r0.y
exp r0.x, r0.x
mul r0.y, r4.x, l(10.000000)
min r0.y, r0.y, l(1.000000)
mul r0.x, r0.y, r0.x
mul r0.xyz, r0.xxxx, cb0[2].xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mad r0.xyz, r2.xyzx, cb0[2].xyzx, r0.xyzx
mul o0.xyz, r3.xxxx, r0.xyzx
mov o0.w, r2.w
ret
// Approximately 0 instruction slots used