// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed bd3d45895aea36d6-vs.txt
// 3DMigoto: bd3d45895aea36d6 | Matched 8 variants of 8 shaders: Hidden/Amplify Color/Base, Hidden/Amplify Color/Blend, Hidden/Amplify Color/BlendCache, Hidden/Amplify Color/DepthMask, Hidden/Amplify Color/DepthMaskBlend, Hidden/Amplify Color/Mask, Hidden/Amplify Color/MaskBlend, Hidden/Amplify Color/ProcessOnly
//
// 01:    Unity headers extracted from Base.shader
// 02:    Unity headers extracted from Blend.shader
// 04:    Unity headers extracted from BlendCache.shader
// 08:    Unity headers extracted from DepthMask.shader
// 10:    Unity headers extracted from DepthMaskBlend.shader
// 20:    Unity headers extracted from Mask.shader
// 40:    Unity headers extracted from MaskBlend.shader
// 80:    Unity headers extracted from ProcessOnly.shader
// 01:    Shader "Hidden/Amplify Color/Base" {
// 02:    Shader "Hidden/Amplify Color/Blend" {
// 04:    Shader "Hidden/Amplify Color/BlendCache" {
// 08:    Shader "Hidden/Amplify Color/DepthMask" {
// 10:    Shader "Hidden/Amplify Color/DepthMaskBlend" {
// 20:    Shader "Hidden/Amplify Color/Mask" {
// 40:    Shader "Hidden/Amplify Color/MaskBlend" {
// 80:    Shader "Hidden/Amplify Color/ProcessOnly" {
//          Properties {
//           _MainTex ("Base (RGB)", 2D) = "" { }
//          }
//          Fallback Off
//          SubShader 1/1 {
// 04:        Pass 1/1 {
// fb:        Pass 1/36 {
//              ZTest Always
//              ZWrite Off
//              Cull Off
// 04:          GpuProgramID 11368
// 20:          GpuProgramID 19714
// 01:          GpuProgramID 34435
// 80:          GpuProgramID 40198
// 40:          GpuProgramID 53959
// 02:          GpuProgramID 58007
// 08:          GpuProgramID 61866
// 10:          GpuProgramID 9572
//              Program "vp" {
//                SubProgram "d3d11_9x " {
//                  GpuProgramIndex 2
//                }
//              }
//            }
//          }
//        }
//
// 01: Unity 5.3 headers extracted from Base.shader.decompressed:
// 02: Unity 5.3 headers extracted from Blend.shader.decompressed:
// 04: Unity 5.3 headers extracted from BlendCache.shader.decompressed:
// 08: Unity 5.3 headers extracted from DepthMask.shader.decompressed:
// 10: Unity 5.3 headers extracted from DepthMaskBlend.shader.decompressed:
// 20: Unity 5.3 headers extracted from Mask.shader.decompressed:
// 40: Unity 5.3 headers extracted from MaskBlend.shader.decompressed:
// 80: Unity 5.3 headers extracted from ProcessOnly.shader.decompressed:
//       API d3d11_9x
//       Shader model vs_4_0_level_9_1
//       undeciphered1: 201510240 9 0 0
//       undeciphered2: 1 0 3 0 0 0
//       undeciphered3: 9 2 0 0 3 4
//       ConstBuffer "$Globals" 176
//       Vector 96 [_MainTex_TexelSize]
//       ConstBuffer "UnityPerCamera" 144
//       Vector 80 [_ProjectionParams]
//       ConstBuffer "UnityPerDraw" 352
//       Matrix 0 [glstate_matrix_mvp]
//       BindCB "$Globals" 0
//       BindCB "UnityPerCamera" 1
//       BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sun Nov 06 16:58:38 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb1             5         1  ( FLT, FLT, FLT, FLT)
// c3         cb2             0         4  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c7, 0.5, 0, -2, 1
    dcl_texcoord v0
    dcl_texcoord1 v1
    mul r0, v0.y, c4
    mad r0, c3, v0.x, r0
    mad r0, c5, v0.z, r0
    mad r0, c6, v0.w, r0
    mul r1.x, r0.y, c2.x
    mul r1.w, r1.x, c7.x
    mul r1.xz, r0.xyww, c7.x
    add oT0.xy, r1.z, r1.xwzw
    mov r1.y, c7.y
    slt r1.x, c1.y, r1.y
    mad r1.y, v1.y, c7.z, c7.w
    mad oT1.w, r1.x, r1.y, v1.y
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT0.zw, r0
    mov oT1.xyz, v1.xyxw

// approximately 16 instruction slots used
vs_4_0
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 3

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r2.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed bd3d45895aea36d6-vs.txt
ne r2.w, r0.w, l(1.0)
if_nz r2.w
  add r2.w, r0.w, -r2.y
  mad r0.x, r2.w, r2.x, r0.x
endif

mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o1.zw, r0.zzzw
add o1.xy, r1.zzzz, r1.xwxx
lt r0.x, cb0[6].y, l(0.000000)
add r0.y, -v1.y, l(1.000000)
movc o2.w, r0.x, r0.y, v1.y
mov o2.xyz, v1.xyxx
ret 
// Approximately 0 instruction slots used