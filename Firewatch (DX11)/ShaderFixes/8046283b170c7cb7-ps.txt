// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8046283b170c7cb7-ps.txt
// 3DMigoto: 8046283b170c7cb7 |    Unity headers extracted from Marmoset_Self-Illumin_Specular IBL
//    Shader "Marmoset/Self-Illumin/Specular IBL" {
//      Fallback "Marmoset/Specular IBL"
//      SubShader 1/1 {
//        LOD 250
//        Tags { "QUEUE"="Geometry" "RenderType"="Opaque" }
//        Pass 5/6 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="DEFERRED" "QUEUE"="Geometry" "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Marmoset_Self-Illumin_Specular IBL:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 94 3 0
//   undeciphered1a: 8
//   Keywords { "UNITY_HDR_ON" "MARMO_SKY_BLEND_OFF" "MARMO_BOX_PROJECTION_ON" }
//   undeciphered2: 1 4 2 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 560
//   Vector 48 [_SpecColor]
//   Vector 64 [_Color]
//   Vector 80 [_MainTex_ST]
//   Float 96 [_SpecInt]
//   Float 100 [_Shininess]
//   Float 104 [_Fresnel]
//   Vector 112 [_SpecTex_ST]
//   Vector 144 [_Illum_ST]
//   Vector 160 [_GlowColor]
//   Float 176 [_GlowStrength]
//   Float 180 [_EmissionLM]
//   Vector 192 [_ExposureIBL]
//   Vector 216 [_UniformOcclusion] 2
//   Vector 368 [_SkyMin] 3
//   Vector 384 [_SkyMax] 3
//   Vector 400 [_SH0] 3
//   Vector 416 [_SH1] 3
//   Vector 432 [_SH2] 3
//   Vector 448 [_SH3] 3
//   Vector 464 [_SH4] 3
//   Vector 480 [_SH5] 3
//   Vector 496 [_SH6] 3
//   Vector 512 [_SH7] 3
//   Vector 528 [_SH8] 3
//   Matrix 224 [_SkyMatrix]
//   Matrix 288 [_InvSkyMatrix]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   SetTexture 0 [_MainTex] 2D 0
//   SetTexture 1 [_SpecTex] 2D 1
//   SetTexture 2 [_Illum] 2D 2
//   SetTexture 3 [_SpecCubeIBL] CUBE 3
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.2 on Thu Apr 26 06:09:05 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyz         2     NONE   float
// TEXCOORD                 2   xyzw        3     NONE   float   xy
// TEXCOORD                 3   xyzw        4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float
// TEXCOORD                 6   xyz         7     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_input_ps linear v1.xyz
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8046283b170c7cb7-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

mov o0.w, l(1.000000)
mad r0.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r0.xyzw, r0.xyxx, t0.xyzw, s0
mul r0.xyz, r0.xyzx, cb0[4].xyzx
mul r0.xyz, r0.xyzx, cb0[12].wwww
mov o0.xyz, r0.xyzx
dp3 r0.w, v5.xyzx, v5.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v5.xyzx
dp3 r0.w, v1.xyzx, v1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, v1.xyzx
dp3_sat r0.w, r2.xyzx, r1.xyzx
add r1.x, -r0.w, l(1.000000)
mul r0.w, r1.x, r1.x
mul r1.z, r1.x, r0.w
mad r3.xy, cb0[6].zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
dp2 r4.y, r1.xzxx, r3.xyxx
mov r1.y, l(1.000000)
dp2 r4.x, r1.yxyy, r3.xyxx
dp2 r0.w, r4.xyxx, r3.xyxx
mad r0.w, r0.w, l(0.950000), l(0.050000)
mul r1.x, r0.w, cb0[6].x
sqrt r1.x, r1.x
mad r0.w, r0.w, cb0[6].x, -r1.x
mad r0.w, r0.w, l(0.922443926), r1.x
mul r0.w, r0.w, cb0[12].w
mad r1.xy, v3.xyxx, cb0[7].xyxx, cb0[7].zwzz
sample r1.xyzw, r1.xyxx, t1.xyzw, s1
mul r1.xyz, r1.xyzx, cb0[3].xyzx
add r1.w, -r1.w, l(1.000000)
mad r3.xy, -r1.wwww, r1.wwww, l(1.000000, 8.000000, 0.000000, 0.000000)
mad r1.w, -cb0[6].y, r3.x, r3.y
mul r1.xyz, r0.wwww, r1.xyzx
add r0.w, -r1.w, l(8.000000)
exp r0.w, r0.w
mad r2.w, r0.w, l(0.159154937), l(0.318309873)
mul o1.w, r0.w, l(0.000585937523)
mul o1.xyz, r1.xyzx, r2.wwww
mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o2.w, l(1.000000)
add r3.xyz, -cb0[23].xyzx, cb0[24].xyzx
add r4.xyz, -v4.xyzx, r9.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx
dp3 r0.w, -r4.xyzx, r2.xyzx
add r0.w, r0.w, r0.w
mad r4.xyz, r2.xyzx, -r0.wwww, -r4.xyzx
mov r5.x, cb0[14].z
mov r5.y, cb0[15].z
mov r5.z, cb0[16].z
mul r6.xyz, r4.zzzz, r5.xyzx
mul r5.xyz, r2.zzzz, r5.xyzx
mov r7.x, cb0[14].y
mov r7.y, cb0[15].y
mov r7.z, cb0[16].y
mad r4.yzw, r7.xxyz, r4.yyyy, r6.xxyz
mad r2.yzw, r7.xxyz, r2.yyyy, r5.xxyz
mov r5.x, cb0[14].x
mov r5.y, cb0[15].x
mov r5.z, cb0[16].x
mad r4.xyz, r5.xyzx, r4.xxxx, r4.yzwy
mad r2.xyz, r5.xyzx, r2.xxxx, r2.yzwy
mul_sat r5.xyz, r4.xyzx, l(1000000.000000, 1000000.000000, 1000000.000000, 0.000000)
mad r3.xyz, r5.xyzx, r3.xyzx, cb0[23].xyzx
mov r5.x, cb0[18].x
mov r5.y, cb0[19].x
mov r5.z, cb0[20].x
mov r5.w, cb0[21].x
mov r6.xyz, v4.xyzx
mov r6.w, l(1.000000)
dp4 r5.x, r5.xyzw, r6.xyzw
mov r7.x, cb0[18].y
mov r7.y, cb0[19].y
mov r7.z, cb0[20].y
mov r7.w, cb0[21].y
dp4 r5.y, r7.xyzw, r6.xyzw
mov r7.x, cb0[18].z
mov r7.y, cb0[19].z
mov r7.z, cb0[20].z
mov r7.w, cb0[21].z
dp4 r5.z, r7.xyzw, r6.xyzw
add r3.xyz, r3.xyzx, -r5.xyzx
div r6.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzx
mul r3.xyz, r3.xyzx, r6.xyzx
min r0.w, r3.y, r3.x
min r0.w, r3.z, r0.w
mad r3.xyz, r4.xyzx, r0.wwww, r5.xyzx
sample_l r3.xyzw, r3.xyzx, t3.xyzw, s3, r1.w
mul r0.w, r3.w, l(6.000000)
mul r4.x, r0.w, r0.w
mul r4.y, r0.w, r4.x
dp2 r1.w, l(0.753200, 0.246800, 0.000000, 0.000000), r4.xyxx
mad r1.w, -r3.w, l(6.000000), r1.w
mad r0.w, r1.w, l(0.922443926), r0.w
mul r3.xyz, r0.wwww, r3.xyzx
mul r1.xyz, r1.xyzx, r3.xyzx
mad r3.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
sample r3.xyzw, r3.xyxx, t2.xyzw, s2
mul r0.w, r3.w, cb0[11].y
mul r3.xyz, r3.xyzx, cb0[10].xyzx
mul r3.xyz, r3.xyzx, cb0[11].xxxx
mul r4.xyz, r0.wwww, r0.xyzx
mad r3.xyz, r3.xyzx, cb0[12].wwww, r4.xyzx
mul r4.xy, cb0[12].xyxx, cb0[13].zwzz
mad r1.xyz, r1.xyzx, r4.yyyy, r3.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
mad r3.xyz, cb0[26].xyzx, r2.yyyy, cb0[25].xyzx
mad r3.xyz, cb0[27].xyzx, r2.zzzz, r3.xyzx
mad r3.xyz, cb0[28].xyzx, r2.xxxx, r3.xyzx
mul r4.yzw, r2.xxzx, r2.yyyz
mad r3.xyz, cb0[29].xyzx, r4.yyyy, r3.xyzx
mad r3.xyz, cb0[30].xyzx, r4.zzzz, r3.xyzx
mad r3.xyz, cb0[32].xyzx, r4.wwww, r3.xyzx
mul r2.yz, r2.yyzy, r2.yyzy
mad r0.w, r2.x, r2.x, -r2.y
mad r1.w, r2.z, l(3.000000), l(-1.000000)
mad r2.xyz, cb0[31].xyzx, r1.wwww, r3.xyzx
mad r2.xyz, cb0[33].xyzx, r0.wwww, r2.xyzx
mul r2.xyz, r0.xyzx, |r2.xyzx|
mad r1.xyz, r2.xyzx, r4.xxxx, r1.xyzx
mad o3.xyz, v7.xyzx, r0.xyzx, r1.xyzx
mov o3.w, l(1.000000)
ret
// Approximately 0 instruction slots used