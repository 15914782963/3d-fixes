// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed e125fd04f10e5b9e-vs.txt
// 3DMigoto: e125fd04f10e5b9e |    Unity headers extracted from TMPro_SDF-Mobile.shader
//    Shader "TMPro/Mobile/Distance Field" {
//      Properties {
//       _FaceColor ("Face Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _FaceDilate ("Face Dilate", Range(-1.000000,1.000000)) = 0.000000
//       _OutlineColor ("Outline Color", Color) = (0.000000,0.000000,0.000000,1.000000)
//       _OutlineWidth ("Outline Thickness", Range(0.000000,1.000000)) = 0.000000
//       _OutlineSoftness ("Outline Softness", Range(0.000000,1.000000)) = 0.000000
//       _UnderlayColor ("Border Color", Color) = (0.000000,0.000000,0.000000,0.500000)
//       _UnderlayOffsetX ("Border OffsetX", Range(-1.000000,1.000000)) = 0.000000
//       _UnderlayOffsetY ("Border OffsetY", Range(-1.000000,1.000000)) = 0.000000
//       _UnderlayDilate ("Border Dilate", Range(-1.000000,1.000000)) = 0.000000
//       _UnderlaySoftness ("Border Softness", Range(0.000000,1.000000)) = 0.000000
//       _WeightNormal ("Weight Normal", Float) = 0.000000
//       _WeightBold ("Weight Bold", Float) = 0.500000
//       _ShaderFlags ("Flags", Float) = 0.000000
//       _ScaleRatioA ("Scale RatioA", Float) = 1.000000
//       _ScaleRatioB ("Scale RatioB", Float) = 1.000000
//       _ScaleRatioC ("Scale RatioC", Float) = 1.000000
//       _MainTex ("Font Atlas", 2D) = "white" { }
//       _TextureWidth ("Texture Width", Float) = 512.000000
//       _TextureHeight ("Texture Height", Float) = 512.000000
//       _GradientScale ("Gradient Scale", Float) = 5.000000
//       _ScaleX ("Scale X", Float) = 1.000000
//       _ScaleY ("Scale Y", Float) = 1.000000
//       _PerspectiveFilter ("Perspective Correction", Range(0.000000,1.000000)) = 0.875000
//       _VertexOffsetX ("Vertex OffsetX", Float) = 0.000000
//       _VertexOffsetY ("Vertex OffsetY", Float) = 0.000000
//       _MaskTex ("Mask Texture", 2D) = "white" { }
//       _ClipRect ("Mask Coords", Vector) = (0.000000,0.000000,100000.000000,100000.000000)
//       _MaskSoftnessX ("Mask SoftnessX", Float) = 0.000000
//       _MaskSoftnessY ("Mask SoftnessY", Float) = 0.000000
//       _StencilComp ("Stencil Comparison", Float) = 8.000000
//       _Stencil ("Stencil ID", Float) = 0.000000
//       _StencilOp ("Stencil Operation", Float) = 0.000000
//       _StencilWriteMask ("Stencil Write Mask", Float) = 255.000000
//       _StencilReadMask ("Stencil Read Mask", Float) = 255.000000
//      }
//      CustomEditor "TMPro_SDFMaterialEditor"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//        Pass 1/1 {
//          Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//          ZTest [_ZTestMode]
//          ZWrite Off
//          Cull [_CullMode]
//          Stencil {
//             Ref [_Stencil]
//             ReadMask [_StencilReadMask]
//             WriteMask [_StencilWriteMask]
//             Comp [_StencilComp]
//             Pass [_StencilOp]
//            }
//          Blend One OneMinusSrcAlpha
//          GpuProgramID 38054
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 2
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from TMPro_SDF-Mobile.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 68 0 0
//   undeciphered2: 1 0 4 0 0 0
//   undeciphered3: 31 5 0 0 2 1 1 2 3 4 4 5
//   ConstBuffer "$Globals" 528
//   Vector 112 [_FaceColor]
//   Float 128 [_FaceDilate]
//   Float 132 [_OutlineSoftness]
//   Vector 144 [_OutlineColor]
//   Float 160 [_OutlineWidth]
//   Float 420 [_WeightNormal]
//   Float 424 [_WeightBold]
//   Float 428 [_ScaleRatioA]
//   Float 440 [_VertexOffsetX]
//   Float 444 [_VertexOffsetY]
//   Float 496 [_GradientScale]
//   Float 500 [_ScaleX]
//   Float 504 [_ScaleY]
//   Float 508 [_PerspectiveFilter]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 96 [_ScreenParams]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [unity_ObjectToWorld]
//   Matrix 256 [unity_WorldToObject]
//   ConstBuffer "UnityPerFrame" 352
//   Matrix 80 [glstate_matrix_projection]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sun Nov 06 16:59:21 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// COLOR                    0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
// TEXCOORD                 1   xy          4     NONE   float    y  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// COLOR                    1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float   xyzw
// TEXCOORD                 2   xyzw        5     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             7         4  ( FLT, FLT, FLT, FLT)
// c5         cb0            26         2  ( FLT, FLT, FLT, FLT)
// c7         cb0            31         1  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c9         cb1             6         1  ( FLT, FLT, FLT, FLT)
// c10        cb2             0         4  ( FLT, FLT, FLT, FLT)
// c14        cb2            12         7  ( FLT, FLT, FLT, FLT)
// c21        cb3             5         2  ( FLT, FLT, FLT, FLT)
// c23        cb3             8         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c24, 0, 1.5, 1, 0.5
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4 v4
    mul r0.x, v1.x, c18.x
    mul r0.y, v1.x, c19.x
    mul r0.z, v1.x, c20.x
    mul r1.x, v1.y, c18.y
    mul r1.y, v1.y, c19.y
    mul r1.z, v1.y, c20.y
    add r0.xyz, r0, r1
    mul r1.x, v1.z, c18.z
    mul r1.y, v1.z, c19.z
    mul r1.z, v1.z, c20.z
    add r0.xyz, r0, r1
    nrm r1.xyz, r0
    add r0.xy, v0, c6.zwzw
    mul r2.xyz, r0.y, c15
    mad r2.xyz, c14, r0.x, r2
    mad r2.xyz, c16, v0.z, r2
    mad r2.xyz, c17, v0.w, r2
    add r2.xyz, -r2, c8
    nrm r3.xyz, r2
    dp3 r0.z, r1, r3
    mul r1, r0.y, c11
    mad r1, c10, r0.x, r1
    mov oT4.xy, r0
    mad r1, c12, v0.z, r1
    mad r1, c13, v0.w, r1
    mov r0.xy, c9
    mul r0.yw, r0.y, c22.xxzy
    mad r0.xy, c21, r0.x, r0.ywzw
    abs r0.xyz, r0
    mul r0.xy, r0, c7.yzzw
    rcp r2.x, r0.x
    rcp r2.y, r0.y
    mul r0.xy, r1.w, r2
    mul r2.xy, r0, r0
    add r0.w, r2.y, r2.x
    rsq r0.w, r0.w
    abs r2.x, v4.y
    mul r2.x, r2.x, c7.x
    mul r0.w, r0.w, r2.x
    mul r2.x, r0.w, c24.y
    mov r2.z, c24.z
    add r2.y, r2.z, -c7.w
    mul r2.y, r2.y, r2.x
    mad r2.z, r0.w, c24.y, -r2.y
    mad r0.z, r0.z, r2.z, r2.y
    mad r0.z, r0.w, -c24.y, r0.z
    mul r0.w, c23.w, c23.w
    sge r0.w, -r0.w, r0.w
    mad r0.z, r0.w, r0.z, r2.x
    mov r0.w, c5.w
    mul r2.xy, r0.w, c2
    mad r2.y, r2.y, r0.z, c24.z
    mul r2.x, r2.x, c24.w
    rcp r2.y, r2.y
    mul r3.x, r0.z, r2.y
    mul r0.z, r0.w, c4.x
    mul r0.z, r0.z, c24.w
    mul r0.w, r3.x, r0.z
    add r0.w, r0.w, r0.w
    min r0.w, r0.w, c24.z
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r4.w, v2.w, c3.w
    mul r4.xyz, r4.w, c3
    mul r5, v2, c1
    mul r5.xyz, r5.w, r5
    add r4, r4, -r5
    mad oT1, r0.w, r4, r5
    mov oT0, r5
    sge r0.w, c24.x, v4.y
    lrp r2.y, r0.w, c5.z, c5.y
    rcp r0.w, c7.x
    mad r0.w, r2.y, r0.w, r2.x
    add r0.w, -r0.w, c24.w
    mad r3.w, r0.w, r3.x, -c24.w
    mad oT3.y, r0.z, -r3.x, r3.w
    mad oT3.z, r0.z, r3.x, r3.w
    mov oT3.xw, r3
    rcp r0.z, r0.x
    rcp r0.w, r0.y
    mul oT4.zw, r0, c24.w
    mad oPos.xy, r1.w, c0, r1
    mov oPos.zw, r1
    mov oT2.xy, v3

// approximately 88 instruction slots used
vs_4_0
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[9], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xy
dcl_input v4.y
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xy
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed e125fd04f10e5b9e-vs.txt
mov r5.xyzw, cb1[4].xyzw
mov r6.xyzw, l(0)
mul r6.x, -r4.x, r4.y
mul r8.xyzw, cb10[0].xyzw, r6.xxxx
mad r8.xyzw, cb10[1].xyzw, r6.yyyy, r8.xyzw
mad r8.xyzw, cb10[2].xyzw, r6.zzzz, r8.xyzw
mad r8.xyzw, cb10[3].xyzw, r6.wwww, r8.xyzw
mul r7.xyzw, cb11[12].xyzw, r8.xxxx
mad r7.xyzw, cb11[13].xyzw, r8.yyyy, r7.xyzw
mad r7.xyzw, cb11[14].xyzw, r8.zzzz, r7.xyzw
mad r7.xyzw, cb11[15].xyzw, r8.wwww, r7.xyzw
add r5.xyz, r5.xyz, -r7.xyz

add r0.xy, v0.xyxx, cb0[27].zwzz
mul r1.xyzw, r0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
mov o0.xyzw, r1.xyzw
mul r2.xyzw, v2.xyzw, cb0[7].xyzw
mul r2.xyz, r2.wwww, r2.xyzx
mov o1.xyzw, r2.xyzw
mul r1.xyz, r0.yyyy, cb2[13].xyzx
mad r1.xyz, cb2[12].xyzx, r0.xxxx, r1.xyzx
mov o5.xy, r0.xyxx
mad r0.xyz, cb2[14].xyzx, v0.zzzz, r1.xyzx
mad r0.xyz, cb2[15].xyzx, v0.wwww, r0.xyzx
add r0.xyz, -r0.xyzx, r5.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.x, v1.x, cb2[16].x
mul r1.y, v1.x, cb2[17].x
mul r1.z, v1.x, cb2[18].x
mul r3.x, v1.y, cb2[16].y
mul r3.y, v1.y, cb2[17].y
mul r3.z, v1.y, cb2[18].y
add r1.xyz, r1.xyzx, r3.xyzx
mul r3.x, v1.z, cb2[16].z
mul r3.y, v1.z, cb2[17].z
mul r3.z, v1.z, cb2[18].z
add r1.xyz, r1.xyzx, r3.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.x, r1.xyzx, r0.xyzx
mul r0.yz, cb1[6].yyyy, cb3[6].xxyx
mad r0.yz, cb3[5].xxyx, cb1[6].xxxx, r0.yyzy
mul r0.yz, |r0.yyzy|, cb0[31].yyzy
div r0.yz, r1.wwww, r0.yyzy
dp2 r0.w, r0.yzyy, r0.yzyy
div o5.zw, l(0.000000, 0.000000, 0.500000, 0.500000), r0.yyyz
rsq r0.y, r0.w
mul r0.z, |v4.y|, cb0[31].x
mul r0.y, r0.y, r0.z
mul r0.z, r0.y, l(1.500000)
add r0.w, -cb0[31].w, l(1.000000)
mul r0.w, r0.w, r0.z
mad r0.y, r0.y, l(1.500000), -r0.w
mad r0.x, |r0.x|, r0.y, r0.w
eq r0.y, cb3[8].w, l(0.000000)
movc r0.x, r0.y, r0.x, r0.z
mul r0.yz, cb0[8].xxyx, cb0[26].wwww
mad r0.z, r0.z, r0.x, l(1.000000)
div r0.x, r0.x, r0.z
mul r0.z, cb0[10].x, cb0[26].w
mul r0.z, r0.z, l(0.500000)
mul r1.x, r0.x, r0.z
add r1.x, r1.x, r1.x
min r1.x, r1.x, l(1.000000)
sqrt r1.x, r1.x
mul r3.w, v2.w, cb0[9].w
mul r3.xyz, r3.wwww, cb0[9].xyzx
add r3.xyzw, -r2.xyzw, r3.xyzw
mad o2.xyzw, r1.xxxx, r3.xyzw, r2.xyzw
mov o3.xy, v3.xyxx
ge r1.x, l(0.000000), v4.y
and r1.x, r1.x, l(0x3f800000)
add r1.y, -cb0[26].y, cb0[26].z
mad r1.x, r1.x, r1.y, cb0[26].y
div r1.x, r1.x, cb0[31].x
mad r0.y, r0.y, l(0.500000), r1.x
add r0.y, -r0.y, l(0.500000)
mad r0.w, r0.y, r0.x, l(-0.500000)
mad o4.y, -r0.z, r0.x, r0.w
mad o4.z, r0.z, r0.x, r0.w
mov o4.xw, r0.xxxw
ret 
// Approximately 0 instruction slots used