// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0d28c32a522cc63c-ps.txt
// 3DMigoto: 0d28c32a522cc63c |    Unity headers extracted from TMPro_Distance Field (Surface)
//    Shader "TMPro/Distance Field (Surface)" {
//      CustomEditor "TMPro_SDFMaterialEditor"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from TMPro_Distance Field (Surface):
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 148 9 2
//   undeciphered1a: 7
//   Keywords { "DIRECTIONAL" "FOG_EXP2" "GLOW_ON" }
//   undeciphered2: 1 5 5 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 528
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Float 64 [_FaceUVSpeedX]
//   Float 68 [_FaceUVSpeedY]
//   Vector 80 [_FaceColor]
//   Float 100 [_OutlineSoftness]
//   Float 104 [_OutlineUVSpeedX]
//   Float 108 [_OutlineUVSpeedY]
//   Vector 112 [_OutlineColor]
//   Float 128 [_OutlineWidth]
//   Float 132 [_Bevel]
//   Float 136 [_BevelOffset]
//   Float 140 [_BevelWidth]
//   Float 144 [_BevelClamp]
//   Float 148 [_BevelRoundness]
//   Float 152 [_BumpOutline]
//   Float 156 [_BumpFace]
//   Vector 352 [_GlowColor]
//   Float 368 [_GlowOffset]
//   Float 372 [_GlowOuter]
//   Float 376 [_GlowInner]
//   Float 380 [_GlowPower]
//   Float 384 [_ShaderFlags]
//   Float 396 [_ScaleRatioA]
//   Float 400 [_ScaleRatioB]
//   Float 456 [_TextureWidth]
//   Float 460 [_TextureHeight]
//   Float 464 [_GradientScale]
//   Float 480 [_FaceShininess]
//   Float 484 [_OutlineShininess]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 4
//   SetTexture 1 [_FaceTex] 2D 1
//   SetTexture 2 [_OutlineTex] 2D 2
//   SetTexture 3 [_BumpMap] 2D 3
//   SetTexture 4 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.2 on Thu Apr 26 06:06:50 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// COLOR                    0   xyzw        6     NONE   float   xyzw
// TEXCOORD                 5   xy          7     NONE   float   xy
// TEXCOORD                 7     z         7     NONE   float     z
// TEXCOORD                 6   xyz         8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[31], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xy
dcl_input_ps linear v7.z
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0d28c32a522cc63c-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, r8.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
div r1.xy, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[28].zwzz
mov r1.z, l(0)
add r2.xyzw, -r1.xzzy, v1.xyxy
sample r3.xyzw, r2.xyxx, t0.xyzw, s4
add r1.xyzw, r1.xzzy, v1.xyxy
sample r4.xyzw, r1.xyxx, t0.xyzw, s4
sample r2.xyzw, r2.zwzz, t0.xyzw, s4
sample r1.xyzw, r1.zwzz, t0.xyzw, s4
sample r5.xyzw, v1.xyxx, t0.xyzw, s4
add r2.x, -r5.w, l(0.500000)
add r2.x, r2.x, -v7.x
mad r2.x, r2.x, v7.y, l(0.500000)
mul r2.y, cb0[8].x, cb0[24].w
mul r2.y, r2.y, v7.y
mul r2.z, cb0[6].y, cb0[24].w
mul r3.x, r2.z, v7.y
mul r5.xyzw, v6.xyzw, cb0[5].xyzw
mul r3.y, v6.w, cb0[7].w
mad r4.xy, cb0[4].xyxx, cb1[0].yyyy, v1.zwzz
sample r6.xyzw, r4.xyxx, t1.xyzw, s1
mul r5.xyzw, r5.xyzw, r6.xyzw
mad r4.xy, cb0[6].zwzz, cb1[0].yyyy, v1.zwzz
sample r6.xyzw, r4.xyxx, t2.xyzw, s2
mul r4.xyz, r6.xyzx, cb0[7].xyzx
mul r6.w, r3.y, r6.w
mad r3.y, -r2.y, l(0.500000), r2.x
mad r3.x, r3.x, l(0.500000), r3.y
mad r2.z, r2.z, v7.y, l(1.000000)
div_sat r2.z, r3.x, r2.z
add r2.z, -r2.z, l(1.000000)
mad_sat r3.x, r2.y, l(0.500000), r2.x
min r2.y, r2.y, l(1.000000)
sqrt r2.y, r2.y
mul r2.y, r2.y, r3.x
mul r5.xyz, r5.wwww, r5.xyzx
mul r6.xyz, r4.xyzx, r6.wwww
add r6.xyzw, -r5.xyzw, r6.xyzw
mad r5.xyzw, r2.yyyy, r6.xyzw, r5.xyzw
mul r6.xyzw, r2.zzzz, r5.xyzw
mul r2.y, cb0[24].x, l(0.500000)
ge r3.y, r2.y, -r2.y
frc r2.y, |r2.y|
movc r2.y, r3.y, r2.y, -r2.y
ge r2.y, r2.y, l(0.500000)
add r3.y, v7.x, cb0[8].z
mov r1.x, r3.w
mov r1.y, r4.w
mov r1.z, r2.w
add r1.xyzw, r3.yyyy, r1.xyzw
add r2.w, cb0[8].w, cb0[8].x
max r2.w, r2.w, l(0.010000)
add r1.xyzw, r1.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
div r1.xyzw, r1.xyzw, r2.wwww
add_sat r1.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
mad r4.xyzw, r1.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
add r4.xyzw, -|r4.xyzw|, l(1.000000, 1.000000, 1.000000, 1.000000)
movc r1.xyzw, r2.yyyy, r4.xyzw, r1.xyzw
mul r4.xyzw, r1.xyzw, l(1.570796, 1.570796, 1.570796, 1.570796)
sincos r4.xyzw, null, r4.xyzw
add r4.xyzw, -r1.xyzw, r4.xyzw
mad r1.xyzw, cb0[9].yyyy, r4.xyzw, r1.xyzw
add r2.y, -cb0[9].x, l(1.000000)
min r1.xyzw, r1.xyzw, r2.yyyy
mul r2.y, r2.w, cb0[8].y
mul r2.y, r2.y, cb0[29].x
mul r2.y, r2.y, l(-2.000000)
mul r1.xz, r1.xxzx, r2.yyyy
mad r1.yz, r1.wwyw, r2.yyyy, -r1.zzxz
mov r1.xw, l(-1.000000,0,0,1.000000)
dp2 r1.w, r1.zwzz, r1.zwzz
rsq r1.w, r1.w
mul r4.yz, r1.wwww, l(0.000000, 1.000000, 0.000000, 0.000000)
mul r4.x, r1.w, r1.z
dp2 r1.w, r1.xyxx, r1.xyxx
rsq r1.w, r1.w
mov r1.z, l(0)
mul r1.xyz, r1.wwww, r1.xyzx
mul r3.yzw, r1.xxyz, r4.xxyz
mad r1.xyz, r4.zxyz, r1.yzxy, -r3.yzwy
sample r4.xyzw, v1.zwzz, t3.xyzw, s3
mad r4.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r4.xyxx, r4.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r4.z, r1.w
add r1.w, -cb0[9].w, cb0[9].z
mad r1.w, r3.x, r1.w, cb0[9].w
mad r3.yzw, r4.xxyz, r1.wwww, l(0.000000, -0.000000, -0.000000, -1.000000)
mad r3.yzw, r6.wwww, r3.yyzw, l(0.000000, 0.000000, 0.000000, 1.000000)
add r1.xyz, r1.xyzx, -r3.yzwy
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
mul r1.w, cb0[23].x, cb0[25].x
mul r1.w, r1.w, v7.y
mad r1.w, -r1.w, l(0.500000), r2.x
ge r2.x, r1.w, l(0.000000)
and r2.x, r2.x, l(0x3f800000)
mad r2.y, cb0[23].y, cb0[25].x, -cb0[23].z
mad r2.x, r2.x, r2.y, cb0[23].z
mul r2.x, r2.x, v7.y
mul r2.y, r2.x, l(0.500000)
mad r2.x, r2.x, l(0.500000), l(1.000000)
div r1.w, r1.w, r2.x
min r1.w, |r1.w|, l(1.000000)
log r1.w, r1.w
mul r1.w, r1.w, cb0[23].w
exp r1.w, r1.w
add r1.w, -r1.w, l(1.000000)
min r2.x, r2.y, l(1.000000)
sqrt r2.x, r2.x
mul r1.w, r1.w, r2.x
dp2_sat r1.w, cb0[22].wwww, r1.wwww
mul r2.x, r1.w, v6.w
mad r1.w, -r1.w, v6.w, l(1.000000)
mul r3.yzw, r6.xxyz, r1.wwww
mad r3.yzw, cb0[22].xxyz, r2.xxxx, r3.yyzw
mad r1.w, -r5.w, r2.z, l(1.000000)
mad r1.w, r1.w, r2.x, r6.w
div r2.xyz, r3.yzwy, r1.wwww
add r2.w, -cb0[30].x, cb0[30].y
mad r2.w, r3.x, r2.w, cb0[30].x
eq r3.x, cb4[0].x, l(1.000000)
if_nz r3.x
  eq r3.x, cb4[0].y, l(1.000000)
  mul r3.yzw, v5.yyyy, cb4[2].xxyz
  mad r3.yzw, cb4[1].xxyz, v5.xxxx, r3.yyzw
  mad r3.yzw, cb4[3].xxyz, v5.zzzz, r3.yyzw
  add r3.yzw, r3.yyzw, cb4[4].xxyz
  movc r3.xyz, r3.xxxx, r3.yzwy, v5.xyzx
  add r3.xyz, r3.xyzx, -cb4[6].xyzx
  mul r3.yzw, r3.xxyz, cb4[5].xxyz
  mad r3.y, r3.y, l(0.250000), l(0.750000)
  mad r4.x, cb4[0].z, l(0.500000), l(0.750000)
  max r3.x, r3.y, r4.x
  sample r3.xyzw, r3.xzwx, t4.xyzw, s0
else
  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r3.x, r3.xyzw, cb2[45].xyzw
dp3 r4.x, v2.xyzx, -r1.xyzx
dp3 r4.y, v3.xyzx, -r1.xyzx
dp3 r4.z, v4.xyzx, -r1.xyzx
mul r1.xyz, r3.xxxx, cb0[2].xyzx
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r4.xyzx, cb2[0].xyzx
dp3 r0.x, r4.xyzx, r0.xyzx
max r0.xw, r0.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.y, r2.w, l(128.000000)
log r0.x, r0.x
mul r0.x, r0.x, r0.y
exp r0.x, r0.x
mul r2.xyz, r1.xyzx, r2.xyzx
mul r1.xyz, r1.xyzx, cb0[3].xyzx
mul r0.xyz, r0.xxxx, r1.xyzx
mad r0.xyz, r2.xyzx, r0.wwww, r0.xyzx
div r0.w, v7.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb3[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, r1.w
ret
// Approximately 0 instruction slots used