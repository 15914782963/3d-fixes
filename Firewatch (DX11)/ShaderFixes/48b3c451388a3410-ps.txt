// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 48b3c451388a3410-ps.txt
// 3DMigoto: 48b3c451388a3410 |    Unity headers extracted from TMPro_Distance Field (Surface)
//    Shader "TMPro/Distance Field (Surface)" {
//      CustomEditor "TMPro_SDFMaterialEditor"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from TMPro_Distance Field (Surface):
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 173 13 4
//   undeciphered1a: 9
//   Keywords { "DIRECTIONAL" "GLOW_ON" }
//   undeciphered2: 1 6 5 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 528
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Float 64 [_FaceUVSpeedX]
//   Float 68 [_FaceUVSpeedY]
//   Vector 80 [_FaceColor]
//   Float 100 [_OutlineSoftness]
//   Float 104 [_OutlineUVSpeedX]
//   Float 108 [_OutlineUVSpeedY]
//   Vector 112 [_OutlineColor]
//   Float 128 [_OutlineWidth]
//   Float 132 [_Bevel]
//   Float 136 [_BevelOffset]
//   Float 140 [_BevelWidth]
//   Float 144 [_BevelClamp]
//   Float 148 [_BevelRoundness]
//   Float 152 [_BumpOutline]
//   Float 156 [_BumpFace]
//   Vector 160 [_ReflectFaceColor]
//   Vector 176 [_ReflectOutlineColor]
//   Vector 352 [_GlowColor]
//   Float 368 [_GlowOffset]
//   Float 372 [_GlowOuter]
//   Float 376 [_GlowInner]
//   Float 380 [_GlowPower]
//   Float 384 [_ShaderFlags]
//   Float 396 [_ScaleRatioA]
//   Float 400 [_ScaleRatioB]
//   Float 456 [_TextureWidth]
//   Float 460 [_TextureHeight]
//   Float 464 [_GradientScale]
//   Float 480 [_FaceShininess]
//   Float 484 [_OutlineShininess]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityPerDraw" 160
//   Matrix 0 [unity_ObjectToWorld]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 5
//   SetTexture 1 [_FaceTex] 2D 1
//   SetTexture 2 [_OutlineTex] 2D 2
//   SetTexture 3 [_BumpMap] 2D 3
//   SetTexture 4 [_Cube] CUBE 4
//   SetTexture 5 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.2 on Thu Apr 26 06:08:03 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xy          6     NONE   float   xy
// TEXCOORD                 5   xyz         7     NONE   float   xyz
// TEXCOORD                 6   xyz         8     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[31], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[3], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xy
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 48b3c451388a3410-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.y, v2.w
mov r0.z, v3.w
mov r0.w, v4.w
add r1.xyz, -r0.yzwy, r10.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
div r2.xy, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[28].zwzz
mov r2.z, l(0)
add r3.xyzw, -r2.xzzy, v1.xyxy
sample r4.xyzw, r3.xyxx, t0.xyzw, s5
add r2.xyzw, r2.xzzy, v1.xyxy
sample r5.xyzw, r2.xyxx, t0.xyzw, s5
sample r3.xyzw, r3.zwzz, t0.xyzw, s5
sample r2.xyzw, r2.zwzz, t0.xyzw, s5
sample r6.xyzw, v1.xyxx, t0.xyzw, s5
add r1.w, -r6.w, l(0.500000)
add r1.w, r1.w, -v6.x
mad r1.w, r1.w, v6.y, l(0.500000)
mul r3.x, cb0[8].x, cb0[24].w
mul r3.y, cb0[6].y, cb0[24].w
mul r3.xz, r3.xxyx, v6.yyyy
mul r6.xyzw, v5.xyzw, cb0[5].xyzw
mul r4.x, v5.w, cb0[7].w
mad r4.yz, cb0[4].xxyx, cb1[0].yyyy, v1.zzwz
sample r7.xyzw, r4.yzyy, t1.xyzw, s1
mul r6.xyzw, r6.xyzw, r7.xyzw
mad r4.yz, cb0[6].zzwz, cb1[0].yyyy, v1.zzwz
sample r7.xyzw, r4.yzyy, t2.xyzw, s2
mul r5.xyz, r7.xyzx, cb0[7].xyzx
mul r7.w, r4.x, r7.w
mad r4.x, -r3.x, l(0.500000), r1.w
mad r3.z, r3.z, l(0.500000), r4.x
mad r3.y, r3.y, v6.y, l(1.000000)
div_sat r3.y, r3.z, r3.y
add r3.y, -r3.y, l(1.000000)
mad_sat r3.z, r3.x, l(0.500000), r1.w
min r3.x, r3.x, l(1.000000)
sqrt r3.x, r3.x
mul r3.x, r3.x, r3.z
mul r6.xyz, r6.wwww, r6.xyzx
mul r7.xyz, r5.xyzx, r7.wwww
add r7.xyzw, -r6.xyzw, r7.xyzw
mad r6.xyzw, r3.xxxx, r7.xyzw, r6.xyzw
mul r7.xyzw, r3.yyyy, r6.xyzw
mul r3.x, cb0[24].x, l(0.500000)
ge r4.x, r3.x, -r3.x
frc r3.x, |r3.x|
movc r3.x, r4.x, r3.x, -r3.x
ge r3.x, r3.x, l(0.500000)
add r4.x, v6.x, cb0[8].z
mov r2.x, r4.w
mov r2.y, r5.w
mov r2.z, r3.w
add r2.xyzw, r4.xxxx, r2.xyzw
add r3.w, cb0[8].w, cb0[8].x
max r3.w, r3.w, l(0.010000)
add r2.xyzw, r2.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
div r2.xyzw, r2.xyzw, r3.wwww
add_sat r2.xyzw, r2.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
mad r4.xyzw, r2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
add r4.xyzw, -|r4.xyzw|, l(1.000000, 1.000000, 1.000000, 1.000000)
movc r2.xyzw, r3.xxxx, r4.xyzw, r2.xyzw
mul r4.xyzw, r2.xyzw, l(1.570796, 1.570796, 1.570796, 1.570796)
sincos r4.xyzw, null, r4.xyzw
add r4.xyzw, -r2.xyzw, r4.xyzw
mad r2.xyzw, cb0[9].yyyy, r4.xyzw, r2.xyzw
add r3.x, -cb0[9].x, l(1.000000)
min r2.xyzw, r2.xyzw, r3.xxxx
mul r3.x, r3.w, cb0[8].y
mul r3.x, r3.x, cb0[29].x
mul r3.x, r3.x, l(-2.000000)
mul r2.xz, r2.xxzx, r3.xxxx
mad r2.yz, r2.wwyw, r3.xxxx, -r2.zzxz
mov r2.xw, l(-1.000000,0,0,1.000000)
dp2 r2.w, r2.zwzz, r2.zwzz
rsq r2.w, r2.w
mul r4.yz, r2.wwww, l(0.000000, 1.000000, 0.000000, 0.000000)
mul r4.x, r2.w, r2.z
dp2 r2.w, r2.xyxx, r2.xyxx
rsq r2.w, r2.w
mov r2.z, l(0)
mul r2.xyz, r2.wwww, r2.xyzx
mul r5.xyz, r2.xyzx, r4.xyzx
mad r2.xyz, r4.zxyz, r2.yzxy, -r5.xyzx
sample r4.xyzw, v1.zwzz, t3.xyzw, s3
mad r4.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r4.xyxx, r4.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r4.z, r2.w
add r2.w, -cb0[9].w, cb0[9].z
mad r2.w, r3.z, r2.w, cb0[9].w
mad r4.xyz, r4.xyzx, r2.wwww, l(-0.000000, -0.000000, -1.000000, 0.000000)
mad r4.xyz, r7.wwww, r4.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
add r2.xyz, r2.xyzx, -r4.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mul r4.xyz, r2.yyyy, cb3[1].xyzx
mad r4.xyz, cb3[0].xyzx, r2.xxxx, r4.xyzx
mad r4.xyz, cb3[2].xyzx, r2.zzzz, r4.xyzx
dp3 r2.w, v7.xyzx, r4.xyzx
add r2.w, r2.w, r2.w
mad r4.xyz, r4.xyzx, -r2.wwww, v7.xyzx
sample r4.xyzw, r4.xyzx, t4.xyzw, s4
add r5.xyz, -cb0[10].xyzx, cb0[11].xyzx
mad r5.xyz, r3.zzzz, r5.xyzx, cb0[10].xyzx
mul r4.xyz, r4.xyzx, r5.xyzx
mul r2.w, cb0[23].x, cb0[25].x
mul r2.w, r2.w, v6.y
mad r1.w, -r2.w, l(0.500000), r1.w
ge r2.w, r1.w, l(0.000000)
and r2.w, r2.w, l(0x3f800000)
mad r3.x, cb0[23].y, cb0[25].x, -cb0[23].z
mad r2.w, r2.w, r3.x, cb0[23].z
mul r2.w, r2.w, v6.y
mul r3.x, r2.w, l(0.500000)
mad r2.w, r2.w, l(0.500000), l(1.000000)
div r1.w, r1.w, r2.w
min r1.w, |r1.w|, l(1.000000)
log r1.w, r1.w
mul r1.w, r1.w, cb0[23].w
exp r1.w, r1.w
add r1.w, -r1.w, l(1.000000)
min r2.w, r3.x, l(1.000000)
sqrt r2.w, r2.w
mul r1.w, r1.w, r2.w
dp2_sat r1.w, cb0[22].wwww, r1.wwww
mul r2.w, r1.w, v5.w
mul r5.xyz, r2.wwww, cb0[22].xyzx
mad r4.xyz, r4.xyzx, r7.wwww, r5.xyzx
mad r1.w, -r1.w, v5.w, l(1.000000)
mad r5.xyz, r1.wwww, r7.xyzx, r5.xyzx
mad r1.w, -r6.w, r3.y, l(1.000000)
mad r1.w, r1.w, r2.w, r7.w
div r3.xyw, r5.xyxz, r1.wwww
add r2.w, -cb0[30].x, cb0[30].y
mad r2.w, r3.z, r2.w, cb0[30].x
eq r3.z, cb4[0].x, l(1.000000)
if_nz r3.z
  eq r4.w, cb4[0].y, l(1.000000)
  mul r5.xyz, v3.wwww, cb4[2].xyzx
  mad r5.xyz, cb4[1].xyzx, v2.wwww, r5.xyzx
  mad r5.xyz, cb4[3].xyzx, v4.wwww, r5.xyzx
  add r5.xyz, r5.xyzx, cb4[4].xyzx
  movc r5.xyz, r4.wwww, r5.xyzx, r0.yzwy
  add r5.xyz, r5.xyzx, -cb4[6].xyzx
  mul r5.yzw, r5.xxyz, cb4[5].xxyz
  mad r4.w, r5.y, l(0.250000), l(0.750000)
  mad r5.y, cb4[0].z, l(0.500000), l(0.750000)
  max r5.x, r4.w, r5.y
  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
else
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r4.w, r5.xyzw, cb2[45].xyzw
dp3 r5.x, v2.xyzx, -r2.xyzx
dp3 r5.y, v3.xyzx, -r2.xyzx
dp3 r5.z, v4.xyzx, -r2.xyzx
mul r2.xyz, r4.wwww, cb0[2].xyzx
if_nz r3.z
  eq r3.z, cb4[0].y, l(1.000000)
  mul r6.xyz, v3.wwww, cb4[2].xyzx
  mad r6.xyz, cb4[1].xyzx, v2.wwww, r6.xyzx
  mad r6.xyz, cb4[3].xyzx, v4.wwww, r6.xyzx
  add r6.xyz, r6.xyzx, cb4[4].xyzx
  movc r0.yzw, r3.zzzz, r6.xxyz, r0.yyzw
  add r0.yzw, r0.yyzw, -cb4[6].xxyz
  mul r6.yzw, r0.yyzw, cb4[5].xxyz
  mul r0.y, r6.y, l(0.250000)
  mul r0.z, cb4[0].z, l(0.500000)
  mad r0.w, -cb4[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.z, r0.y
  min r6.x, r0.w, r0.y
  sample r7.xyzw, r6.xzwx, t5.xyzw, s0
  add r0.yzw, r6.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r8.xyzw, r0.yzwy, t5.xyzw, s0
  add r0.yzw, r6.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r6.xyzw, r0.yzwy, t5.xyzw, s0
  mov r5.w, l(1.000000)
  dp4 r7.x, r7.xyzw, r5.xyzw
  dp4 r7.y, r8.xyzw, r5.xyzw
  dp4 r7.z, r6.xyzw, r5.xyzw
else
  mov r5.w, l(1.000000)
  dp4 r7.x, cb2[38].xyzw, r5.xyzw
  dp4 r7.y, cb2[39].xyzw, r5.xyzw
  dp4 r7.z, cb2[40].xyzw, r5.xyzw
endif
add r0.yzw, r7.xxyz, v8.xxyz
mad r1.xyz, r1.xyzx, r0.xxxx, cb2[0].xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
dp3 r0.x, r5.xyzx, cb2[0].xyzx
max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r1.x, r5.xyzx, r1.xyzx
max r1.x, r1.x, l(0.000000)
mul r1.y, r2.w, l(128.000000)
log r1.x, r1.x
mul r1.x, r1.x, r1.y
exp r1.x, r1.x
mul r5.xyz, r2.xyzx, r3.xywx
mul r2.xyz, r2.xyzx, cb0[3].xyzx
mul r1.xyz, r1.xxxx, r2.xyzx
mad r1.xyz, r5.xyzx, r0.xxxx, r1.xyzx
mad r0.xyz, r3.xywx, r0.yzwy, r1.xyzx
add o0.xyz, r4.xyzx, r0.xyzx
mov o0.w, r1.w
ret
// Approximately 0 instruction slots used