// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 29777d869526e8fa-vs.txt
// 3DMigoto: 29777d869526e8fa | Matched 4 variants of 1 shaders: Marmoset/Transparent/Cutout/Billboard Diffuse IBL
//
//       Unity headers extracted from Marmoset_Transparent_Cutout_Billboard Diffuse IBL
//       Shader "Marmoset/Transparent/Cutout/Billboard Diffuse IBL" {
//         Fallback "Transparent/Cutout/VertexLit"
//         SubShader 1/1 {
//           LOD 200
//           Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//           Pass 4/6 {
//             Name "PREPASS"
//             Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "LIGHTMODE"="PREPASSFINAL" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//             ZWrite Off
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Marmoset_Transparent_Cutout_Billboard Diffuse IBL:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201609010 57 0 0
//      undeciphered1a: 4
// 1:   Keywords { "MARMO_SKY_BLEND_OFF" }
// 4:   Keywords { "MARMO_SKY_BLEND_ON" }
// 2:   Keywords { "UNITY_HDR_ON" "MARMO_SKY_BLEND_OFF" }
// 8:   Keywords { "UNITY_HDR_ON" "MARMO_SKY_BLEND_ON" }
//      undeciphered2: 1 0 4 0 0 0
//      undeciphered3: 9 2 0 0 3 4
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 752
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      Vector 656 [unity_SHBr]
//      Vector 672 [unity_SHBg]
//      Vector 688 [unity_SHBb]
//      Vector 704 [unity_SHC]
//      ConstBuffer "UnityPerDraw" 160
//      Matrix 0 [unity_ObjectToWorld]
//      Matrix 64 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 384
//      Matrix 272 [unity_MatrixVP]
//      BindCB "UnityPerCamera" 0
//      BindCB "UnityLighting" 1
//      BindCB "UnityPerDraw" 2
//      BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.2 on Thu Apr 26 06:07:26 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy
// TANGENT                  0   xyzw        1     NONE   float
// NORMAL                   0   xyz         2     NONE   float
// TEXCOORD                 0   xyzw        3     NONE   float   xy
// TEXCOORD                 1   xyzw        4     NONE   float
// TEXCOORD                 2   xyzw        5     NONE   float
// TEXCOORD                 3   xyzw        6     NONE   float
// COLOR                    0   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float   xyz
//
vs_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[45], immediateIndexed
dcl_constantbuffer cb2[7], immediateIndexed
dcl_constantbuffer cb3[24], immediateIndexed
dcl_input v0.xy
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125
dcl_constantbuffer cb10[4], immediateIndexed

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 29777d869526e8fa-vs.txt

mul r4.w, -r4.x, r4.y
mad r5.xyz, -r4.wwww, cb10[0].xyzw, cb0[4].xyzw

add r0.xy, r5.xzxx, -cb2[3].xzxx
dp2 r0.z, r0.xyxx, r0.xyxx
rsq r0.z, r0.z
mul r0.xy, r0.zzzz, r0.xyxx
mad r0.z, |r0.y|, l(-0.0187292993), l(0.074261)
mad r0.z, r0.z, |r0.y|, l(-0.212114394)
mad r0.z, r0.z, |r0.y|, l(1.57072878)
add r0.w, -|r0.y|, l(1.000000)
sqrt r0.w, r0.w
mul r1.x, r0.w, r0.z
mad r1.x, r1.x, l(-2.000000), l(3.14159274)
lt r0.y, r0.y, -r0.y
and r0.y, r0.y, r1.x
mad r0.y, r0.z, r0.w, r0.y
sincos r1.x, r2.x, r0.y
lt r0.y, l(0.000000), r0.x
lt r0.x, r0.x, l(0.000000)
iadd r0.x, -r0.y, r0.x
itof r0.x, r0.x
mul r0.y, r0.x, -r1.x
mul r1.x, r0.x, r1.x
mul r0.x, r0.y, v0.x
mul r0.y, r2.x, v0.x
mov r1.y, r2.x
mul r2.xyz, v0.yyyy, cb2[5].xyzx
mad r0.yzw, cb2[4].xxyz, r0.yyyy, r2.xxyz
mad r0.xyz, cb2[6].xyzx, r0.xxxx, r0.yzwy
mul r2.xyzw, r0.yyyy, cb2[1].xyzw
mad r2.xyzw, cb2[0].xyzw, r0.xxxx, r2.xyzw
mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r2.xyzw
add r0.xyzw, r0.xyzw, cb2[3].xyzw
mul r2.xyzw, r0.yyyy, cb3[18].xyzw
mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
mad r2.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
mad r0.xyzw, cb3[20].xyzw, r0.wwww, r2.xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 29777d869526e8fa-vs.txt
ne r4.w, r0.w, l(1.0)
if_nz r4.w
  add r4.w, r0.w, -r4.y
  mad r0.x, r4.w, r4.x, r0.x
endif

mov o1.xy, v3.xyxx
mov o1.zw, l(0,0,0,0)
mul r0.y, r0.y, cb0[5].x
mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o2.zw, r0.zzzw
add o2.xy, r2.zzzz, r2.xwxx
mov o3.xyzw, l(0,0,0,0)
dp2 r0.x, r1.xyxx, r1.xyxx
rsq r0.x, r0.x
mul r0.xy, r0.xxxx, r1.xyxx
mul r0.yzw, r0.yyyy, cb2[6].xxyz
mad r0.xyz, cb2[4].xyzx, r0.xxxx, r0.yzwy
dp3 r1.x, r0.xyzx, cb2[4].xyzx
dp3 r1.y, r0.xyzx, cb2[5].xyzx
dp3 r1.z, r0.xyzx, cb2[6].xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r1.xyzx
mul r1.x, r0.y, r0.y
mad r1.x, r0.x, r0.x, -r1.x
mul r2.xyzw, r0.yzzx, r0.xyzz
dp4 r3.x, cb1[41].xyzw, r2.xyzw
dp4 r3.y, cb1[42].xyzw, r2.xyzw
dp4 r3.z, cb1[43].xyzw, r2.xyzw
mad r1.xyz, cb1[44].xyzx, r1.xxxx, r3.xyzx
mov r0.w, l(1.000000)
dp4 r2.x, cb1[38].xyzw, r0.xyzw
dp4 r2.y, cb1[39].xyzw, r0.xyzw
dp4 r2.z, cb1[40].xyzw, r0.xyzw
add o4.xyz, r1.xyzx, r2.xyzx
ret
// Approximately 0 instruction slots used