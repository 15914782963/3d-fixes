// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a1b52e585a01d27c-ps.txt
// 3DMigoto: a1b52e585a01d27c |    Unity headers extracted from Marmoset Water IBL.shader
//    Shader "Marmoset/Transparent/Marmo Water IBL" {
//      Properties {
//       _Wave ("[Water Params] Wave Normal Map", 2D) = "wave" { }
//       _NoiseMap ("[Water Params] NoiseMap", 2D) = "noisemap" { }
//       _FlowDirectionSign ("[Water Params] Flow Direction", Vector) = (1.000000,1.000000,1.000000,1.000000)
//       _NormalMapIntensity ("[Water Params] Wave Intensity", Range(0.010000,1.000000)) = 0.250000
//       _OpacityMultiplier ("[Water Params] Water Opacity Multiplier", Float) = 2.400000
//       _WaterSpeed ("[Water Params] WaterSpeed", Float) = 0.050000
//       _NoisePanningSpeed ("[Water Params][Noise] NoisePanningSpeed", Float) = 0.100000
//       _StretchIntensity ("[Water Params][Noise] StretchIntensity", Float) = 0.250000
//       _DirtOpacity ("[Water Params] Dirt Transparency", Range(0.000000,1.000000)) = 0.500000
//       _DirtBrightness ("[Water Params] Dirt Brightness", Range(0.000000,1.000000)) = 1.000000
//       _EdgeBlending ("[Water Params] Water to Geometry Edge Fade", Float) = 2.000000
//       _FresnelWater ("[Water Params] Opacity to Reflection", Range(0.000000,15.000000)) = 2.150000
//      [HideInInspector]  _Color ("Diffuse Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//      [HideInInspector]  _SpecColor ("Specular Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//      [HideInInspector]  _SpecInt ("Specular Intensity", Float) = 1.000000
//      [HideInInspector]  _Shininess ("Specular Sharpness", Range(2.000000,8.000000)) = 8.000000
//      [HideInInspector]  _SpecTex ("Specular(RGB) Gloss(A)", 2D) = "white" { }
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry+449" "IGNOREPROJECTOR"="true" }
//        GrabPass {
//          Name "BASE"
//          Tags { "LIGHTMODE"="ForwardBase" }
//         }
//        Pass 2/2 {
//          Name "META"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry+449" "IGNOREPROJECTOR"="true" }
//          ZWrite Off
//          Cull Off
//          Blend SrcAlpha OneMinusSrcAlpha
//          GpuProgramID 108761
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 63
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Marmoset Water IBL.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 151 8 0
//   Keywords { "MARMO_SKY_BLEND_ON" "MARMO_BOX_PROJECTION_ON" }
//   undeciphered2: 1 6 3 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1040
//   Float 176 [_NormalMapIntensity]
//   Float 180 [_OpacityMultiplier]
//   Float 184 [_WaterSpeed]
//   Float 192 [_StretchIntensity]
//   Float 196 [_FresnelWater]
//   Float 200 [_DirtOpacity]
//   Float 208 [_DirtBrightness]
//   Vector 224 [_FlowDirectionSign]
//   Vector 320 [_ExposureIBL]
//   Vector 496 [_SkyMin] 3
//   Vector 512 [_SkyMax] 3
//   Vector 528 [_SH0] 3
//   Vector 544 [_SH1] 3
//   Float 668 [_BlendWeightIBL]
//   Vector 672 [_ExposureIBL1]
//   Vector 848 [_SkyMin1] 3
//   Vector 864 [_SkyMax1] 3
//   Float 1024 [unity_MaxOutputValue]
//   Float 1028 [unity_UseLinearSpace]
//   Matrix 352 [_SkyMatrix]
//   Matrix 416 [_InvSkyMatrix]
//   Matrix 704 [_SkyMatrix1]
//   Matrix 768 [_InvSkyMatrix1]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityMetaPass" 32
//   VectorBool 16 [unity_MetaFragmentControl] 4
//   SetTexture 0 [_NoiseMap] 2D 1
//   SetTexture 1 [_Wave] 2D 0
//   SetTexture 2 [_SpecCubeIBL] CUBE 4
//   SetTexture 3 [_SpecCubeIBL1] CUBE 5
//   SetTexture 4 [_CameraDepthTexture] 2D 3
//   SetTexture 5 [_GrabTexture] 2D 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityMetaPass" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Nov 05 21:02:24 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[65], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyzw
dcl_output o0.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a1b52e585a01d27c-ps.txt
mov r9.xyzw, cb1[4].xyzw
mov r10.xyzw, l(0)
mul r10.x, -r8.x, r8.y
mul r12.xyzw, cb10[0].xyzw, r10.xxxx
mad r12.xyzw, cb10[1].xyzw, r10.yyyy, r12.xyzw
mad r12.xyzw, cb10[2].xyzw, r10.zzzz, r12.xyzw
mad r12.xyzw, cb10[3].xyzw, r10.wwww, r12.xyzw
mul r11.xyzw, cb11[12].xyzw, r12.xxxx
mad r11.xyzw, cb11[13].xyzw, r12.yyyy, r11.xyzw
mad r11.xyzw, cb11[14].xyzw, r12.zzzz, r11.xyzw
mad r11.xyzw, cb11[15].xyzw, r12.wwww, r11.xyzw
add r9.xyz, r9.xyz, -r11.xyz

sample r0.xyzw, v4.zwzz, t0.xyzw, s1
mul r0.x, r0.x, cb0[12].x
mad r0.x, cb1[0].y, cb0[11].z, r0.x
add r0.y, r0.x, l(0.500000)
frc r1.xyzw, r0.xxyy
dp2 r0.x, v4.xyxx, v4.xyxx
rsq r0.x, r0.x
mul r0.xyzw, r0.xxxx, v4.xyxy
mul r0.xyzw, r0.xyzw, cb0[14].xyxy
mad r2.xyzw, -r0.zwzw, l(0.500000, 0.500000, 0.500000, 0.500000), v4.xyxy
mad r0.xyzw, r1.xyzw, r0.xyzw, r2.xyzw
mad r1.x, r1.y, l(2.000000), l(-1.000000)
sample r2.xyzw, r0.zwzz, t1.xyzw, s0
sample r0.xyzw, r0.xyxx, t1.xyzw, s0
mad r0.xy, r0.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r2.z, r0.w
dp2 r0.w, r0.xyxx, r0.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r0.z, r0.w
add r1.yzw, -r0.xxyz, r2.xxyz
mad r0.xyz, |r1.xxxx|, r1.yzwy, r0.xyzx
mul r0.xy, r0.xyxx, cb0[11].xxxx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
lt r0.w, v5.w, l(0.000000)
movc r0.xyz, r0.wwww, -r0.xyzx, r0.xyzx
dp3 r1.y, v2.xyzx, r0.xyzx
dp3 r1.x, v1.xyzx, r0.xyzx
dp3 r1.z, v3.xyzx, r0.xyzx
add r0.xyz, -v5.xyzx, r9.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, -r0.xyzx, r1.xyzx
add r0.w, r0.w, r0.w
mad r0.xyz, r1.xyzx, -r0.wwww, -r0.xyzx
mul r2.x, r0.y, cb0[22].y
mul r2.y, r0.y, cb0[23].y
mul r2.z, r0.y, cb0[24].y
mul r3.x, r0.z, cb0[22].z
mul r3.y, r0.z, cb0[23].z
mul r3.z, r0.z, cb0[24].z
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.x, r0.x, cb0[22].x
mul r3.y, r0.x, cb0[23].x
mul r3.z, r0.x, cb0[24].x
add r2.xyz, r2.xyzx, r3.xyzx
div r3.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzx
mul_sat r4.xyz, r2.xyzx, l(1000000.000000, 1000000.000000, 1000000.000000, 0.000000)
add r5.xyz, -cb0[31].xyzx, cb0[32].xyzx
mad r4.xyz, r4.xyzx, r5.xyzx, cb0[31].xyzx
mov r5.x, cb0[26].x
mov r5.y, cb0[27].x
mov r5.z, cb0[28].x
mov r5.w, cb0[29].x
mov r6.xyz, v5.xyzx
mov r6.w, l(1.000000)
dp4 r5.x, r5.xyzw, r6.xyzw
mov r7.x, cb0[26].y
mov r7.y, cb0[27].y
mov r7.z, cb0[28].y
mov r7.w, cb0[29].y
dp4 r5.y, r7.xyzw, r6.xyzw
mov r7.x, cb0[26].z
mov r7.y, cb0[27].z
mov r7.z, cb0[28].z
mov r7.w, cb0[29].z
dp4 r5.z, r7.xyzw, r6.xyzw
add r4.xyz, r4.xyzx, -r5.xyzx
mul r3.xyz, r3.xyzx, r4.xyzx
min r0.w, r3.y, r3.x
min r0.w, r3.z, r0.w
mad r2.xyz, r2.xyzx, r0.wwww, r5.xyzx
sample r2.xyzw, r2.xyzx, t2.xyzw, s4
mul r3.x, r0.y, cb0[44].y
mul r3.y, r0.y, cb0[45].y
mul r3.z, r0.y, cb0[46].y
mul r4.x, r0.z, cb0[44].z
mul r4.y, r0.z, cb0[45].z
mul r4.z, r0.z, cb0[46].z
add r0.yzw, r3.xxyz, r4.xxyz
mul r3.x, r0.x, cb0[44].x
mul r3.y, r0.x, cb0[45].x
mul r3.z, r0.x, cb0[46].x
add r0.xyz, r0.yzwy, r3.xyzx
mul_sat r3.xyz, r0.xyzx, l(1000000.000000, 1000000.000000, 1000000.000000, 0.000000)
add r4.xyz, -cb0[53].xyzx, cb0[54].xyzx
mad r3.xyz, r3.xyzx, r4.xyzx, cb0[53].xyzx
mov r4.x, cb0[48].x
mov r4.y, cb0[49].x
mov r4.z, cb0[50].x
mov r4.w, cb0[51].x
dp4 r4.x, r4.xyzw, r6.xyzw
mov r5.x, cb0[48].y
mov r5.y, cb0[49].y
mov r5.z, cb0[50].y
mov r5.w, cb0[51].y
dp4 r4.y, r5.xyzw, r6.xyzw
mov r5.x, cb0[48].z
mov r5.y, cb0[49].z
mov r5.z, cb0[50].z
mov r5.w, cb0[51].z
dp4 r4.z, r5.xyzw, r6.xyzw
add r3.xyz, r3.xyzx, -r4.xyzx
div r5.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzx
mul r3.xyz, r3.xyzx, r5.xyzx
min r0.w, r3.y, r3.x
min r0.w, r3.z, r0.w
mad r0.xyz, r0.xyzx, r0.wwww, r4.xyzx
sample r0.xyzw, r0.xyzx, t3.xyzw, s5
add r2.xyz, -r0.xyzx, r2.xyzx
mad r0.xyz, cb0[41].wwww, r2.xyzx, r0.xyzx
div r2.xy, v6.xyxx, v6.zzzz
sample r3.xyzw, r2.xyxx, t4.xyzw, s3
mad r0.w, cb1[7].z, r3.x, cb1[7].w
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
add r0.w, r0.w, -v6.w
mov_sat r1.w, r0.w
mul r2.zw, r1.wwww, r1.xxxz
mul r1.w, r1.w, cb0[11].y
mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 1.600000, 1.600000)
div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), v6.w
mul r2.zw, r2.zzzw, r3.xxxx
mul r3.xy, r2.xyxx, l(3.14159274, 3.14159274, 0.000000, 0.000000)
sincos r3.xy, null, r3.xyxx
mul r3.xy, r2.zwzz, r3.xyxx
mul r3.z, r3.x, l(0.100000)
add r2.zw, r2.xxxy, r3.zzzy
sample r3.xyzw, r2.zwzz, t4.xyzw, s3
mad r3.x, cb1[7].z, r3.x, cb1[7].w
div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.x
add r3.x, r3.x, -v6.w
lt r3.y, l(0.000000), r3.x
movc r0.w, r3.y, r3.x, r0.w
movc r2.xy, r3.yyyy, r2.zwzz, r2.xyxx
sample r2.xyzw, r2.xyxx, t5.xyzw, s2
add r2.w, -r0.w, cb0[12].z
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), -r0.w
mul_sat r0.w, r0.w, r2.w
mad r2.w, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r2.w
add r3.xyz, cb0[33].xyzx, -cb0[34].xyzx
mad r3.xyz, cb0[41].wwww, r3.xyzx, cb0[34].xyzx
mad r3.xyz, r3.xyzx, cb0[13].xxxx, -r2.xyzx
mad r2.xyz, r0.wwww, r3.xyzx, r2.xyzx
add r0.xyz, r0.xyzx, -r2.xyzx
mov r3.x, v1.w
mov r3.y, v2.w
mov r3.z, v3.w
add r3.xyz, -r3.xyzx, r9.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
mul r4.xyz, r3.yyyy, v2.xyzx
mad r3.xyw, v1.xyxz, r3.xxxx, r4.xyxz
mad r3.xyz, v3.xyzx, r3.zzzz, r3.xywx
dp3 r4.x, v1.xyzx, r3.xyzx
dp3 r4.y, v2.xyzx, r3.xyzx
dp3 r4.z, v3.xyzx, r3.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r4.xyzx
dp3 r0.w, r3.xyzx, r1.xyzx
mad r0.w, r0.w, l(0.500000), l(0.500000)
log r0.w, r0.w
mul r0.w, r0.w, cb0[12].y
exp r0.w, r0.w
add r0.w, -r0.w, l(1.000000)
mul_sat r0.w, r1.w, r0.w
mad_sat r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
add r0.w, cb0[20].w, -cb0[42].w
mad r0.w, cb0[41].w, r0.w, cb0[42].w
mul r0.xyz, r0.wwww, r0.xyzx
mad r1.xyz, r0.xyzx, l(0.305306017, 0.305306017, 0.305306017, 0.000000), l(0.682171106, 0.682171106, 0.682171106, 0.000000)
mad r1.xyz, r0.xyzx, r1.xyzx, l(0.0125228781, 0.0125228781, 0.0125228781, 0.000000)
mul r1.xyz, r0.xyzx, r1.xyzx
ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[64].y
movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
mul r0.xyz, r0.xyzx, l(0.0103092780, 0.0103092780, 0.0103092780, 0.000000)
max r0.w, r0.y, r0.x
max r1.x, r0.z, l(0.020000)
max r0.w, r0.w, r1.x
mul r0.w, r0.w, l(255.000000)
round_pi r0.w, r0.w
mul r1.w, r0.w, l(0.00392156886)
div r1.xyz, r0.xyzx, r1.wwww
min r0.xyz, cb0[64].xxxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov r0.w, l(1.000000)
movc r0.xyzw, cb2[1].xxxx, r0.xyzw, l(0,0,0,0)
movc o0.xyzw, cb2[1].yyyy, r1.xyzw, r0.xyzw
ret 
// Approximately 0 instruction slots used