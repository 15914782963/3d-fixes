// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a88ccd470d025c0d-ps.txt
// 3DMigoto: a88ccd470d025c0d |    Unity headers extracted from AlphaTest-Glossy.shader
//    Shader "Legacy Shaders/Transparent/Cutout/Specular" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _SpecColor ("Specular Color", Color) = (0.500000,0.500000,0.500000,0.000000)
//       _Shininess ("Shininess", Range(0.010000,1.000000)) = 0.078125
//       _MainTex ("Base (RGB) TransGloss (A)", 2D) = "white" { }
//       _Cutoff ("Alpha cutoff", Range(0.000000,1.000000)) = 0.500000
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//          ZWrite Off
//          Blend One One
//          ColorMask RGB
//          GpuProgramID 122240
//          Program "fp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 74
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from AlphaTest-Glossy.shader.decompressed:
//   API d3d11_9x
//   Shader model ps_4_0_level_9_1
//   undeciphered1: 201510240 38 3 0
//   Keywords { "SPOT" }
//   undeciphered2: 1 3 3 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 256
//   Vector 96 [_LightColor0]
//   Vector 112 [_SpecColor]
//   Vector 192 [_Color]
//   Float 208 [_Shininess]
//   Float 240 [_Cutoff]
//   Matrix 128 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_LightTexture0] 2D 0
//   SetTexture 2 [_LightTextureB0] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sun Nov 06 16:58:14 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             6         8  ( FLT, FLT, FLT, FLT)
// c8         cb0            15         1  ( FLT, FLT, FLT, FLT)
// c9         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c10        cb2             0         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t1               
// s1             s1              t2               
// s2             s2              t0               
//
//
// Level9 shader bytecode:
//
    ps_2_x
    def c11, 0.5, 0, 128, 0
    dcl t0.xyz
    dcl_pp t1.xyz
    dcl t2.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld_pp r0, t0, s2
    mov r1.w, c6.w
    mad_pp r1, r0.w, r1.w, -c8.x
    mul r2, t2.y, c3
    mad r2, c2, t2.x, r2
    mad r2, c4, t2.z, r2
    add r2, r2, c5
    rcp r2.w, r2.w
    mad r3.xy, r2, r2.w, c11.x
    texkill r1
    texld_pp r1, r3, s0
    dp3 r1.xy, r2, r2
    texld_pp r3, r1, s1
    mul r1.x, r1.w, r3.x
    mul_pp r1.xyz, r1.x, c0
    cmp_pp r1.xyz, -r2.z, c11.y, r1
    mul r2.xyz, r1, c1
    add r3.xyz, -t2, c9
    dp3 r1.w, r3, r3
    rsq r1.w, r1.w
    add r4.xyz, -t2, c10
    nrm_pp r5.xyz, r4
    mad_pp r3.xyz, r3, r1.w, r5
    dp3_pp r1.w, t1, r5
    max_pp r2.w, r1.w, c11.y
    nrm_pp r4.xyz, r3
    dp3_pp r1.w, t1, r4
    max r3.x, r1.w, c11.y
    mov r1.w, c11.z
    mul r1.w, r1.w, c7.x
    pow r4.x, r3.x, r1.w
    mul r1.w, r0.w, r4.x
    mul_pp r0, r0, c6
    mul r2.xyz, r1.w, r2
    mul_pp r1.xyz, r1, r0
    mad_pp r0.xyz, r1, r2.w, r2
    mov_pp oC0, r0

// approximately 43 instruction slots used (3 texture, 40 arithmetic)
ps_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a88ccd470d025c0d-ps.txt
mov r5.xyzw, cb1[4].xyzw
mov r6.xyzw, l(0)
mul r6.x, -r4.x, r4.y
mul r8.xyzw, cb10[0].xyzw, r6.xxxx
mad r8.xyzw, cb10[1].xyzw, r6.yyyy, r8.xyzw
mad r8.xyzw, cb10[2].xyzw, r6.zzzz, r8.xyzw
mad r8.xyzw, cb10[3].xyzw, r6.wwww, r8.xyzw
mul r7.xyzw, cb11[12].xyzw, r8.xxxx
mad r7.xyzw, cb11[13].xyzw, r8.yyyy, r7.xyzw
mad r7.xyzw, cb11[14].xyzw, r8.zzzz, r7.xyzw
mad r7.xyzw, cb11[15].xyzw, r8.wwww, r7.xyzw
add r5.xyz, r5.xyz, -r7.xyz

sample r0.xyzw, v1.xyxx, t0.xyzw, s2
mad r1.x, r0.w, cb0[12].w, -cb0[15].x
lt r1.x, r1.x, l(0.000000)
discard_nz r1.x
add r1.xyz, -v3.xyzx, cb2[0].xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
add r2.xyz, -v3.xyzx, r5.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mad r2.xyz, r2.xyzx, r1.wwww, r1.xyzx
dp3 r1.x, v2.xyzx, r1.xyzx
dp3 r1.y, r2.xyzx, r2.xyzx
rsq r1.y, r1.y
mul r1.yzw, r1.yyyy, r2.xxyz
dp3 r1.y, v2.xyzx, r1.yzwy
max r1.xy, r1.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r1.y, r1.y
mul r1.z, cb0[13].x, l(128.000000)
mul r1.y, r1.y, r1.z
exp r1.y, r1.y
mul r1.y, r0.w, r1.y
mul r0.xyzw, r0.xyzw, cb0[12].xyzw
mul r2.xyzw, v3.yyyy, cb0[9].xyzw
mad r2.xyzw, cb0[8].xyzw, v3.xxxx, r2.xyzw
mad r2.xyzw, cb0[10].xyzw, v3.zzzz, r2.xyzw
add r2.xyzw, r2.xyzw, cb0[11].xyzw
div r1.zw, r2.xxxy, r2.wwww
add r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
sample r3.xyzw, r1.zwzz, t1.xyzw, s0
lt r1.z, l(0.000000), r2.z
dp3 r1.w, r2.xyzx, r2.xyzx
sample r2.xyzw, r1.wwww, t2.xyzw, s1
and r1.z, r1.z, l(0x3f800000)
mul r1.z, r3.w, r1.z
mul r1.z, r2.x, r1.z
mul r2.xyz, r1.zzzz, cb0[6].xyzx
mul r3.xyz, r2.xyzx, cb0[7].xyzx
mul r0.xyz, r0.xyzx, r2.xyzx
mov o0.w, r0.w
mul r1.yzw, r1.yyyy, r3.xxyz
mad o0.xyz, r0.xyzx, r1.xxxx, r1.yzwy
ret 
// Approximately 0 instruction slots used