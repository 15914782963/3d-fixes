// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed ed10797e0f230372-vs.txt
// 3DMigoto: ed10797e0f230372 |    Unity headers extracted from ProjectorMultiply.shader
//    Shader "Projector/Multiply" {
//      Properties {
//       _ShadowTex ("Cookie", 2D) = "gray" { }
//       _FalloffTex ("FallOff", 2D) = "white" { }
//      }
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" }
//        Pass 1/1 {
//          Tags { "QUEUE"="Transparent" }
//          ZWrite Off
//          Blend DstColor Zero
//          ColorMask RGB
//          Offset -1.000000, -1.000000
//          GpuProgramID 47676
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 5
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from ProjectorMultiply.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 15 0 0
//   Keywords { "FOG_EXP2" }
//   undeciphered2: 1 0 3 0 0 0
//   undeciphered3: 1 1 0 0
//   ConstBuffer "$Globals" 224
//   Matrix 96 [unity_Projector]
//   Matrix 160 [unity_ProjectorClip]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   BindCB "$Globals" 0
//   BindCB "UnityPerDraw" 1
//   BindCB "UnityFog" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sun Nov 06 16:59:34 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   x           2     NONE   float   x   
// SV_POSITION              0   xyzw        3      POS   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             6         8  ( FLT, FLT, FLT, FLT)
// c9         cb1             0         4  ( FLT, FLT, FLT, FLT)
// c13        cb2             1         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    dcl_texcoord v0
    mul r0, v0.y, c2
    mad r0, c1, v0.x, r0
    mad r0, c3, v0.z, r0
    mad oT0, c4, v0.w, r0
    mul r0, v0.y, c6
    mad r0, c5, v0.x, r0
    mad r0, c7, v0.z, r0
    mad oT1, c8, v0.w, r0
    mul r0, v0.y, c10
    mad r0, c9, v0.x, r0
    mad r0, c11, v0.z, r0
    mad r0, c12, v0.w, r0
    mul r1.x, r0.z, c13.x
    mul r1.x, r1.x, -r1.x
    exp oT2.x, r1.x
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0

// approximately 17 instruction slots used
vs_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_input v0.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.x
dcl_output_siv o3.xyzw, position
dcl_temps 3

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r2.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb0[7].xyzw
mad r0.xyzw, cb0[6].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb0[8].xyzw, v0.zzzz, r0.xyzw
mad o0.xyzw, cb0[9].xyzw, v0.wwww, r0.xyzw
mul r0.xyzw, v0.yyyy, cb0[11].xyzw
mad r0.xyzw, cb0[10].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb0[12].xyzw, v0.zzzz, r0.xyzw
mad o1.xyzw, cb0[13].xyzw, v0.wwww, r0.xyzw
mul r0.xyzw, v0.yyyy, cb1[1].xyzw
mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw

// Relocated to here with asmtool.py
mov o3.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed ed10797e0f230372-vs.txt
ne r2.w, r0.w, l(1.0)
if_nz r2.w
  add r2.w, r0.w, -r2.y
  mad r0.x, r2.w, r2.x, r0.x
endif

mul r1.x, r0.z, cb2[1].x

// mov o3.xyzw, r0.xyzw // Relocated from here with asmtool.py

mul r0.x, r1.x, -r1.x
exp o2.x, r0.x
ret 
// Approximately 0 instruction slots used