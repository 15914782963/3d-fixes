// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 372ba057497987ff-ps.txt
// 3DMigoto: 372ba057497987ff |    Unity headers extracted from Marmoset_Specular IBL
//    Shader "Marmoset/Specular IBL" {
//      Fallback "Specular"
//      SubShader 1/1 {
//        LOD 250
//        Tags { "QUEUE"="Geometry" "RenderType"="Opaque" }
//        Pass 5/6 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="DEFERRED" "QUEUE"="Geometry" "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Marmoset_Specular IBL:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 110 2 0
//   undeciphered1a: 14
//   Keywords { "MARMO_SKY_BLEND_ON" "MARMO_BOX_PROJECTION_OFF" }
//   undeciphered2: 1 4 2 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 864
//   Vector 48 [_SpecColor]
//   Vector 64 [_Color]
//   Vector 80 [_MainTex_ST]
//   Float 96 [_SpecInt]
//   Float 100 [_Shininess]
//   Float 104 [_Fresnel]
//   Vector 112 [_SpecTex_ST]
//   Vector 144 [_ExposureIBL]
//   Vector 168 [_UniformOcclusion] 2
//   Vector 352 [_SH0] 3
//   Vector 368 [_SH1] 3
//   Vector 384 [_SH2] 3
//   Vector 400 [_SH3] 3
//   Vector 416 [_SH4] 3
//   Vector 432 [_SH5] 3
//   Vector 448 [_SH6] 3
//   Vector 464 [_SH7] 3
//   Vector 480 [_SH8] 3
//   Float 492 [_BlendWeightIBL]
//   Vector 496 [_ExposureIBL1]
//   Vector 704 [_SH01] 3
//   Vector 720 [_SH11] 3
//   Vector 736 [_SH21] 3
//   Vector 752 [_SH31] 3
//   Vector 768 [_SH41] 3
//   Vector 784 [_SH51] 3
//   Vector 800 [_SH61] 3
//   Vector 816 [_SH71] 3
//   Vector 832 [_SH81] 3
//   Matrix 176 [_SkyMatrix]
//   Matrix 528 [_SkyMatrix1]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   SetTexture 0 [_MainTex] 2D 0
//   SetTexture 1 [_SpecTex] 2D 1
//   SetTexture 2 [_SpecCubeIBL] CUBE 2
//   SetTexture 3 [_SpecCubeIBL1] CUBE 3
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.2 on Thu Apr 26 06:07:42 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyz         2     NONE   float
// TEXCOORD                 2   xyzw        3     NONE   float   xy
// TEXCOORD                 3   xyzw        4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float
// TEXCOORD                 6   xyz         7     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[53], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_input_ps linear v1.xyz
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 372ba057497987ff-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

mov o0.w, l(1.000000)
mad r0.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r0.xyzw, r0.xyxx, t0.xyzw, s0
mul r0.xyz, r0.xyzx, cb0[4].xyzx
add r1.xyz, cb0[9].xywx, -cb0[31].xywx
mad r1.xyz, cb0[30].wwww, r1.xyzx, cb0[31].xywx
mul r0.xyz, r0.xyzx, r1.zzzz
mov o0.xyz, r0.xyzx
dp3 r0.w, v5.xyzx, v5.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, v5.xyzx
dp3 r0.w, v1.xyzx, v1.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, v1.xyzx
dp3_sat r0.w, r3.xyzx, r2.xyzx
add r2.x, -r0.w, l(1.000000)
mul r0.w, r2.x, r2.x
mul r2.z, r2.x, r0.w
mad r4.xy, cb0[6].zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
dp2 r5.y, r2.xzxx, r4.xyxx
mov r2.y, l(1.000000)
dp2 r5.x, r2.yxyy, r4.xyxx
dp2 r0.w, r5.xyxx, r4.xyxx
mad r0.w, r0.w, l(0.950000), l(0.050000)
mul r1.w, r0.w, cb0[6].x
sqrt r1.w, r1.w
mad r0.w, r0.w, cb0[6].x, -r1.w
mad r0.w, r0.w, l(0.922443926), r1.w
mul r0.w, r1.z, r0.w
mul r1.xy, r1.xyxx, cb0[10].zwzz
mad r1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
sample r2.xyzw, r1.zwzz, t1.xyzw, s1
mul r2.xyz, r2.xyzx, cb0[3].xyzx
add r1.z, -r2.w, l(1.000000)
mad r1.zw, -r1.zzzz, r1.zzzz, l(0.000000, 0.000000, 1.000000, 8.000000)
mad r1.z, -cb0[6].y, r1.z, r1.w
mul r2.xyz, r0.wwww, r2.xyzx
add r0.w, -r1.z, l(8.000000)
exp r0.w, r0.w
mad r1.w, r0.w, l(0.159154937), l(0.318309873)
mul o1.w, r0.w, l(0.000585937523)
mul o1.xyz, r1.wwww, r2.xyzx
mad o2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o2.w, l(1.000000)
mov r4.x, cb0[11].y
mov r4.y, cb0[12].y
mov r4.z, cb0[13].y
mov r5.x, cb0[11].z
mov r5.y, cb0[12].z
mov r5.z, cb0[13].z
mul r6.xyz, r3.zzzz, r5.xyzx
mad r6.xyz, r4.xyzx, r3.yyyy, r6.xyzx
mov r7.x, cb0[11].x
mov r7.y, cb0[12].x
mov r7.z, cb0[13].x
mad r6.xyz, r7.xyzx, r3.xxxx, r6.xyzx
dp3 r0.w, r6.xyzx, r6.xyzx
rsq r0.w, r0.w
mul r6.xyz, r0.wwww, r6.xyzx
mad r8.xyz, cb0[23].xyzx, r6.yyyy, cb0[22].xyzx
mad r8.xyz, cb0[24].xyzx, r6.zzzz, r8.xyzx
mad r8.xyz, cb0[25].xyzx, r6.xxxx, r8.xyzx
mul r9.xyz, r6.xzxx, r6.yyzy
mad r8.xyz, cb0[26].xyzx, r9.xxxx, r8.xyzx
mad r8.xyz, cb0[27].xyzx, r9.yyyy, r8.xyzx
mad r8.xyz, cb0[29].xyzx, r9.zzzz, r8.xyzx
mul r6.yz, r6.yyzy, r6.yyzy
mad r0.w, r6.x, r6.x, -r6.y
mad r1.w, r6.z, l(3.000000), l(-1.000000)
mad r6.xyz, cb0[28].xyzx, r1.wwww, r8.xyzx
mad r6.xyz, cb0[30].xyzx, r0.wwww, r6.xyzx
mov r8.x, cb0[33].z
mov r8.y, cb0[34].z
mov r8.z, cb0[35].z
mul r9.xyz, r3.zzzz, r8.xyzx
mov r10.x, cb0[33].y
mov r10.y, cb0[34].y
mov r10.z, cb0[35].y
mad r9.xyz, r10.xyzx, r3.yyyy, r9.xyzx
mov r11.x, cb0[33].x
mov r11.y, cb0[34].x
mov r11.z, cb0[35].x
mad r9.xyz, r11.xyzx, r3.xxxx, r9.xyzx
dp3 r0.w, r9.xyzx, r9.xyzx
rsq r0.w, r0.w
mul r9.xyz, r0.wwww, r9.xyzx
mad r12.xyz, cb0[45].xyzx, r9.yyyy, cb0[44].xyzx
mad r12.xyz, cb0[46].xyzx, r9.zzzz, r12.xyzx
mad r12.xyz, cb0[47].xyzx, r9.xxxx, r12.xyzx
mul r13.xyz, r9.xzxx, r9.yyzy
mad r12.xyz, cb0[48].xyzx, r13.xxxx, r12.xyzx
mad r12.xyz, cb0[49].xyzx, r13.yyyy, r12.xyzx
mad r12.xyz, cb0[51].xyzx, r13.zzzz, r12.xyzx
mul r9.yz, r9.yyzy, r9.yyzy
mad r0.w, r9.x, r9.x, -r9.y
mad r1.w, r9.z, l(3.000000), l(-1.000000)
mad r9.xyz, cb0[50].xyzx, r1.wwww, r12.xyzx
mad r9.xyz, cb0[52].xyzx, r0.wwww, r9.xyzx
add r6.xyz, |r6.xyzx|, -|r9.xyzx|
mad r6.xyz, cb0[30].wwww, r6.xyzx, |r9.xyzx|
mul r6.xyz, r0.xyzx, r6.xyzx
mul r6.xyz, r1.xxxx, r6.xyzx
add r9.xyz, -v4.xyzx, r15.xyzx
dp3 r0.w, r9.xyzx, r9.xyzx
rsq r0.w, r0.w
mul r9.xyz, r0.wwww, r9.xyzx
dp3 r0.w, -r9.xyzx, r3.xyzx
add r0.w, r0.w, r0.w
mad r3.xyz, r3.xyzx, -r0.wwww, -r9.xyzx
mul r5.xyz, r3.zzzz, r5.xyzx
mad r4.xyz, r4.xyzx, r3.yyyy, r5.xyzx
mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
sample_l r4.xyzw, r4.xyzx, t2.xyzw, s2, r1.z
mul r0.w, r4.w, l(6.000000)
mul r5.x, r0.w, r0.w
mul r5.y, r0.w, r5.x
dp2 r1.x, l(0.753200, 0.246800, 0.000000, 0.000000), r5.xyxx
mad r1.x, -r4.w, l(6.000000), r1.x
mad r0.w, r1.x, l(0.922443926), r0.w
mul r5.xyz, r3.zzzz, r8.xyzx
mad r3.yzw, r10.xxyz, r3.yyyy, r5.xxyz
mad r3.xyz, r11.xyzx, r3.xxxx, r3.yzwy
sample_l r3.xyzw, r3.xyzx, t3.xyzw, s3, r1.z
mul r1.x, r3.w, l(6.000000)
mul r5.x, r1.x, r1.x
mul r5.y, r1.x, r5.x
dp2 r1.z, l(0.753200, 0.246800, 0.000000, 0.000000), r5.xyxx
mad r1.z, -r3.w, l(6.000000), r1.z
mad r1.x, r1.z, l(0.922443926), r1.x
mul r1.xzw, r1.xxxx, r3.xxyz
mad r3.xyz, r4.xyzx, r0.wwww, -r1.xzwx
mad r1.xzw, cb0[30].wwww, r3.xxyz, r1.xxzw
mul r1.xzw, r2.xxyz, r1.xxzw
mad r1.xyz, r1.xzwx, r1.yyyy, r6.xyzx
mad r0.xyz, v7.xyzx, r0.xyzx, r1.xyzx
exp o3.xyz, -r0.xyzx
mov o3.w, l(1.000000)
ret
// Approximately 0 instruction slots used