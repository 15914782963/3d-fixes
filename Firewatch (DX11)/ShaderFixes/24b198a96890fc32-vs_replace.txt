// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --only-autofixed --fxc /home/dss/fxc.exe 24b198a96890fc32-vs_replace.txt
// 3DMigoto: 24b198a96890fc32 | Unity headers extracted from ProjectorMultiply.shader
// Shader "Projector/Multiply" {
//   Properties {
//    _ShadowTex ("Cookie", 2D) = "gray" { }
//    _FalloffTex ("FallOff", 2D) = "white" { }
//   }
//   SubShader 1/1 {
//     Tags { "QUEUE"="Transparent" }
//     Pass 1/1 {
//       Tags { "QUEUE"="Transparent" }
//       ZWrite Off
//       Blend DstColor Zero
//       ColorMask RGB
//       Offset -1, -1
//       GpuProgramID 27852
//       Program "vp" {
//         SubProgram "d3d11 " {
//           Keywords { "FOG_EXP2" }
//           Bind "vertex" Vertex
//           ConstBuffer "$Globals" 224
//           Matrix 96 [_Projector]
//           Matrix 160 [_ProjectorClip]
//           ConstBuffer "UnityPerDraw" 352
//           Matrix 0 [glstate_matrix_mvp]
//           ConstBuffer "UnityFog" 32
//           Vector 16 [unity_FogParams]
//           BindCB "$Globals" 0
//           BindCB "UnityPerDraw" 1
//           BindCB "UnityFog" 2
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py
//
// Shader model vs_4_0

// ---- Created with 3Dmigoto v1.2.31 on Sat Feb 20 12:32:08 2016
cbuffer cb2 : register(b2)
{
  float4 cb2[2];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[4];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[14];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  out float4 o0 : TEXCOORD0,
  out float4 o1 : TEXCOORD1,
  out float o2 : TEXCOORD2,
  out float4 o3 : SV_POSITION0)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
float separation = stereo.x, convergence = stereo.y, eye = stereo.z;

  r0.xyzw = cb0[7].xyzw * v0.yyyy;
  r0.xyzw = cb0[6].xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = cb0[8].xyzw * v0.zzzz + r0.xyzw;
  o0.xyzw = cb0[9].xyzw * v0.wwww + r0.xyzw;
  r0.xyzw = cb0[11].xyzw * v0.yyyy;
  r0.xyzw = cb0[10].xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = cb0[12].xyzw * v0.zzzz + r0.xyzw;
  o1.xyzw = cb0[13].xyzw * v0.wwww + r0.xyzw;
  r0.xyzw = cb1[1].xyzw * v0.yyyy;
  r0.xyzw = cb1[0].xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = cb1[2].xyzw * v0.zzzz + r0.xyzw;
  r0.xyzw = cb1[3].xyzw * v0.wwww + r0.xyzw;

o3.xyzw = r0.xyzw; // Relocated to here with hlsltool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --only-autofixed --fxc /home/dss/fxc.exe 24b198a96890fc32-vs_replace.txt
if (r0.w != 1.0) { r0.x += separation * (r0.w - convergence); }

  r1.x = cb2[1].x * r0.z;

  // o3.xyzw = r0.xyzw; // Relocated from here with hlsltool.py

  r0.x = -r1.x * r1.x;
  o2.x = exp2(r0.x);
  return;
}
