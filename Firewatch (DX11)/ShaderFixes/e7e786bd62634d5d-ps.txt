// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e7e786bd62634d5d-ps.txt
// 3DMigoto: e7e786bd62634d5d |    Unity headers extracted from Marmoset_Transparent_Cutout_Bumped Specular IBL
//    Shader "Marmoset/Transparent/Cutout/Bumped Specular IBL" {
//      Fallback "Marmoset/Transparent/Cutout/Specular IBL"
//      SubShader 2/2 {
//        LOD 400
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//        Pass 4/6 {
//          Name "PREPASS"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="PREPASSFINAL" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Marmoset_Transparent_Cutout_Bumped Specular IBL:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 155 4 0
//   undeciphered1a: 11
//   Keywords { "MARMO_SKY_BLEND_ON" "MARMO_BOX_PROJECTION_ON" }
//   undeciphered2: 1 6 2 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 880
//   Vector 48 [_SpecColor]
//   Vector 64 [_Color]
//   Vector 80 [_MainTex_ST]
//   Float 96 [_SpecInt]
//   Float 100 [_Shininess]
//   Float 104 [_Fresnel]
//   Vector 112 [_SpecTex_ST]
//   Vector 128 [_BumpMap_ST]
//   Float 144 [_Cutoff]
//   Vector 160 [_ExposureIBL]
//   Vector 184 [_UniformOcclusion] 2
//   Vector 336 [_SkyMin] 3
//   Vector 352 [_SkyMax] 3
//   Vector 368 [_SH0] 3
//   Vector 384 [_SH1] 3
//   Vector 400 [_SH2] 3
//   Vector 416 [_SH3] 3
//   Vector 432 [_SH4] 3
//   Vector 448 [_SH5] 3
//   Vector 464 [_SH6] 3
//   Vector 480 [_SH7] 3
//   Vector 496 [_SH8] 3
//   Float 508 [_BlendWeightIBL]
//   Vector 512 [_ExposureIBL1]
//   Vector 688 [_SkyMin1] 3
//   Vector 704 [_SkyMax1] 3
//   Vector 720 [_SH01] 3
//   Vector 736 [_SH11] 3
//   Vector 752 [_SH21] 3
//   Vector 768 [_SH31] 3
//   Vector 784 [_SH41] 3
//   Vector 800 [_SH51] 3
//   Vector 816 [_SH61] 3
//   Vector 832 [_SH71] 3
//   Vector 848 [_SH81] 3
//   Matrix 192 [_SkyMatrix]
//   Matrix 256 [_InvSkyMatrix]
//   Matrix 544 [_SkyMatrix1]
//   Matrix 608 [_InvSkyMatrix1]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   SetTexture 0 [_MainTex] 2D 0
//   SetTexture 1 [_BumpMap] 2D 2
//   SetTexture 2 [_SpecTex] 2D 1
//   SetTexture 3 [_SpecCubeIBL] CUBE 3
//   SetTexture 4 [_SpecCubeIBL1] CUBE 4
//   SetTexture 5 [_LightBuffer] 2D 5
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.2 on Thu Apr 26 06:11:00 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy
// TEXCOORD                 4   xyzw        5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 6   xyzw        7     NONE   float
// TEXCOORD                 7   xyz         8     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[54], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyw
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e7e786bd62634d5d-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

mad r0.xy, v4.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r0.xyzw, r0.xyxx, t0.xyzw, s0
mad r0.w, r0.w, cb0[4].w, -cb0[9].x
mul r0.xyz, r0.xyzx, cb0[4].xyzx
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
mov r1.x, v1.w
mov r1.y, v2.w
mov r1.z, v3.w
add r1.xyz, -r1.xyzx, r12.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r2.xyz, r1.yyyy, v2.xyzx
mad r1.xyw, v1.xyxz, r1.xxxx, r2.xyxz
mad r1.xyz, v3.xyzx, r1.zzzz, r1.xywx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mad r2.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
sample r2.xyzw, r2.xyxx, t1.xyzw, s2
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r2.z, r0.w
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3_sat r0.w, r2.xyzx, r1.xyzx
add r1.x, -r0.w, l(1.000000)
mul r0.w, r1.x, r1.x
mul r1.z, r1.x, r0.w
mad r3.xy, cb0[6].zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
dp2 r4.y, r1.xzxx, r3.xyxx
mov r1.y, l(1.000000)
dp2 r4.x, r1.yxyy, r3.xyxx
dp2 r0.w, r4.xyxx, r3.xyxx
mad r0.w, r0.w, l(0.950000), l(0.050000)
mul r1.x, r0.w, cb0[6].x
sqrt r1.x, r1.x
mad r0.w, r0.w, cb0[6].x, -r1.x
mad r0.w, r0.w, l(0.922443926), r1.x
add r1.xyz, cb0[10].xywx, -cb0[32].xywx
mad r1.xyz, cb0[31].wwww, r1.xyzx, cb0[32].xywx
mul r0.xyzw, r0.xyzw, r1.zzzz
mad r3.xy, v4.xyxx, cb0[7].xyxx, cb0[7].zwzz
sample r3.xyzw, r3.xyxx, t2.xyzw, s1
mul r3.xyz, r3.xyzx, cb0[3].xyzx
add r1.w, -r3.w, l(1.000000)
mad r4.xy, -r1.wwww, r1.wwww, l(1.000000, 8.000000, 0.000000, 0.000000)
mad r1.w, -cb0[6].y, r4.x, r4.y
mul r3.xyz, r0.wwww, r3.xyzx
add r4.xyz, -cb0[43].xyzx, cb0[44].xyzx
add r5.xyz, -v5.xyzx, r12.xyzx
dp3 r0.w, r5.xyzx, r5.xyzx
rsq r0.w, r0.w
mul r5.xyz, r0.wwww, r5.xyzx
dp3 r6.x, v1.xyzx, r2.xyzx
dp3 r6.y, v2.xyzx, r2.xyzx
dp3 r6.z, v3.xyzx, r2.xyzx
dp3 r0.w, -r5.xyzx, r6.xyzx
add r0.w, r0.w, r0.w
mad r2.xyz, r6.xyzx, -r0.wwww, -r5.xyzx
mov r5.x, cb0[34].z
mov r5.y, cb0[35].z
mov r5.z, cb0[36].z
mul r7.xyz, r2.zzzz, r5.xyzx
mul r5.xyz, r6.zzzz, r5.xyzx
mov r8.x, cb0[34].y
mov r8.y, cb0[35].y
mov r8.z, cb0[36].y
mad r7.xyz, r8.xyzx, r2.yyyy, r7.xyzx
mad r5.xyz, r8.xyzx, r6.yyyy, r5.xyzx
mov r8.x, cb0[34].x
mov r8.y, cb0[35].x
mov r8.z, cb0[36].x
mad r7.xyz, r8.xyzx, r2.xxxx, r7.xyzx
mad r5.xyz, r8.xyzx, r6.xxxx, r5.xyzx
mul_sat r8.xyz, r7.xyzx, l(1000000.000000, 1000000.000000, 1000000.000000, 0.000000)
mad r4.xyz, r8.xyzx, r4.xyzx, cb0[43].xyzx
mov r8.x, cb0[38].x
mov r8.y, cb0[39].x
mov r8.z, cb0[40].x
mov r8.w, cb0[41].x
mov r9.xyz, v5.xyzx
mov r9.w, l(1.000000)
dp4 r8.x, r8.xyzw, r9.xyzw
mov r10.x, cb0[38].y
mov r10.y, cb0[39].y
mov r10.z, cb0[40].y
mov r10.w, cb0[41].y
dp4 r8.y, r10.xyzw, r9.xyzw
mov r10.x, cb0[38].z
mov r10.y, cb0[39].z
mov r10.z, cb0[40].z
mov r10.w, cb0[41].z
dp4 r8.z, r10.xyzw, r9.xyzw
add r4.xyz, r4.xyzx, -r8.xyzx
div r10.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r7.xyzx
mul r4.xyz, r4.xyzx, r10.xyzx
min r0.w, r4.y, r4.x
min r0.w, r4.z, r0.w
mad r4.xyz, r7.xyzx, r0.wwww, r8.xyzx
sample_l r4.xyzw, r4.xyzx, t4.xyzw, s4, r1.w
mul r0.w, r4.w, l(6.000000)
mul r7.x, r0.w, r0.w
mul r7.y, r0.w, r7.x
dp2 r2.w, l(0.753200, 0.246800, 0.000000, 0.000000), r7.xyxx
mad r2.w, -r4.w, l(6.000000), r2.w
mad r0.w, r2.w, l(0.922443926), r0.w
mul r4.xyz, r0.wwww, r4.xyzx
mov r7.x, cb0[12].z
mov r7.y, cb0[13].z
mov r7.z, cb0[14].z
mul r8.xyz, r2.zzzz, r7.xyzx
mul r7.xyz, r6.zzzz, r7.xyzx
mov r10.x, cb0[12].y
mov r10.y, cb0[13].y
mov r10.z, cb0[14].y
mad r2.yzw, r10.xxyz, r2.yyyy, r8.xxyz
mad r6.yzw, r10.xxyz, r6.yyyy, r7.xxyz
mov r7.x, cb0[12].x
mov r7.y, cb0[13].x
mov r7.z, cb0[14].x
mad r2.xyz, r7.xyzx, r2.xxxx, r2.yzwy
mad r6.xyz, r7.xyzx, r6.xxxx, r6.yzwy
mul_sat r7.xyz, r2.xyzx, l(1000000.000000, 1000000.000000, 1000000.000000, 0.000000)
add r8.xyz, -cb0[21].xyzx, cb0[22].xyzx
mad r7.xyz, r7.xyzx, r8.xyzx, cb0[21].xyzx
mov r8.x, cb0[16].x
mov r8.y, cb0[17].x
mov r8.z, cb0[18].x
mov r8.w, cb0[19].x
dp4 r8.x, r8.xyzw, r9.xyzw
mov r10.x, cb0[16].y
mov r10.y, cb0[17].y
mov r10.z, cb0[18].y
mov r10.w, cb0[19].y
dp4 r8.y, r10.xyzw, r9.xyzw
mov r10.x, cb0[16].z
mov r10.y, cb0[17].z
mov r10.z, cb0[18].z
mov r10.w, cb0[19].z
dp4 r8.z, r10.xyzw, r9.xyzw
add r7.xyz, r7.xyzx, -r8.xyzx
div r9.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzx
mul r7.xyz, r7.xyzx, r9.xyzx
min r0.w, r7.y, r7.x
min r0.w, r7.z, r0.w
mad r2.xyz, r2.xyzx, r0.wwww, r8.xyzx
sample_l r2.xyzw, r2.xyzx, t3.xyzw, s3, r1.w
add r0.w, -r1.w, l(8.000000)
exp r0.w, r0.w
mad r0.w, r0.w, l(0.159154937), l(0.318309873)
mul r7.xyz, r0.wwww, r3.xyzx
mul r0.w, r2.w, l(6.000000)
mul r8.x, r0.w, r0.w
mul r8.y, r0.w, r8.x
dp2 r1.w, l(0.753200, 0.246800, 0.000000, 0.000000), r8.xyxx
mad r1.w, -r2.w, l(6.000000), r1.w
mad r0.w, r1.w, l(0.922443926), r0.w
mad r2.xyz, r2.xyzx, r0.wwww, -r4.xyzx
mad r2.xyz, cb0[31].wwww, r2.xyzx, r4.xyzx
mul r2.xyz, r3.xyzx, r2.xyzx
dp3 r0.w, r6.xyzx, r6.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r6.xyzx
mad r4.xyz, cb0[24].xyzx, r3.yyyy, cb0[23].xyzx
mad r4.xyz, cb0[25].xyzx, r3.zzzz, r4.xyzx
mad r4.xyz, cb0[26].xyzx, r3.xxxx, r4.xyzx
mul r6.xyz, r3.xzxx, r3.yyzy
mad r4.xyz, cb0[27].xyzx, r6.xxxx, r4.xyzx
mad r4.xyz, cb0[28].xyzx, r6.yyyy, r4.xyzx
mad r4.xyz, cb0[30].xyzx, r6.zzzz, r4.xyzx
mul r3.yz, r3.yyzy, r3.yyzy
mad r0.w, r3.x, r3.x, -r3.y
mad r1.w, r3.z, l(3.000000), l(-1.000000)
mad r3.xyz, cb0[29].xyzx, r1.wwww, r4.xyzx
mad r3.xyz, cb0[31].xyzx, r0.wwww, r3.xyzx
dp3 r0.w, r5.xyzx, r5.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r5.xyzx
mad r5.xyz, cb0[46].xyzx, r4.yyyy, cb0[45].xyzx
mad r5.xyz, cb0[47].xyzx, r4.zzzz, r5.xyzx
mad r5.xyz, cb0[48].xyzx, r4.xxxx, r5.xyzx
mul r6.xyz, r4.xzxx, r4.yyzy
mad r5.xyz, cb0[49].xyzx, r6.xxxx, r5.xyzx
mad r5.xyz, cb0[50].xyzx, r6.yyyy, r5.xyzx
mad r5.xyz, cb0[52].xyzx, r6.zzzz, r5.xyzx
mul r4.yz, r4.yyzy, r4.yyzy
mad r0.w, r4.x, r4.x, -r4.y
mad r1.w, r4.z, l(3.000000), l(-1.000000)
mad r4.xyz, cb0[51].xyzx, r1.wwww, r5.xyzx
mad r4.xyz, cb0[53].xyzx, r0.wwww, r4.xyzx
add r3.xyz, |r3.xyzx|, -|r4.xyzx|
mad r3.xyz, cb0[31].wwww, r3.xyzx, |r4.xyzx|
mul r1.xy, r1.xyxx, cb0[11].zwzz
mul r3.xyz, r0.xyzx, r3.xyzx
mul r1.xzw, r1.xxxx, r3.xxyz
mad r1.xyz, r2.xyzx, r1.yyyy, r1.xzwx
div r2.xy, v6.xyxx, v6.wwww
sample r2.xyzw, r2.xyxx, t5.xyzw, s5
log r2.xyzw, r2.xyzw
add r2.xyz, -r2.xyzx, v8.xyzx
mul r3.xyz, -r2.wwww, r2.xyzx
mul r3.xyz, r7.xyzx, r3.xyzx
mul r3.xyz, r3.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000)
mad r0.xyz, r0.xyzx, r2.xyzx, r3.xyzx
add o0.xyz, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used