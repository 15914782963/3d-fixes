// Lake
// 3DMigoto: 1b43c6fa076d9539 | Matched 8 variants of 2 shaders: Marmoset/Transparent/Marmo Water IBL, Marmoset/Transparent/Marmo Water IBL Transparent Hack
//
// f0:    Unity headers extracted from Marmoset Water IBL Transparent Hack.shader
// 0f:    Unity headers extracted from Marmoset Water IBL.shader
// f0:    Shader "Marmoset/Transparent/Marmo Water IBL Transparent Hack" {
// 0f:    Shader "Marmoset/Transparent/Marmo Water IBL" {
//          Properties {
//           _Wave ("[Water Params] Wave Normal Map", 2D) = "wave" { }
//           _NoiseMap ("[Water Params] NoiseMap", 2D) = "noisemap" { }
//           _FlowDirectionSign ("[Water Params] Flow Direction", Vector) = (1.000000,1.000000,1.000000,1.000000)
//           _NormalMapIntensity ("[Water Params] Wave Intensity", Range(0.010000,1.000000)) = 0.250000
//           _OpacityMultiplier ("[Water Params] Water Opacity Multiplier", Float) = 2.400000
//           _WaterSpeed ("[Water Params] WaterSpeed", Float) = 0.050000
//           _NoisePanningSpeed ("[Water Params][Noise] NoisePanningSpeed", Float) = 0.100000
//           _StretchIntensity ("[Water Params][Noise] StretchIntensity", Float) = 0.250000
//           _DirtOpacity ("[Water Params] Dirt Transparency", Range(0.000000,1.000000)) = 0.500000
//           _DirtBrightness ("[Water Params] Dirt Brightness", Range(0.000000,1.000000)) = 1.000000
//           _EdgeBlending ("[Water Params] Water to Geometry Edge Fade", Float) = 2.000000
//           _FresnelWater ("[Water Params] Opacity to Reflection", Range(0.000000,15.000000)) = 2.150000
//          [HideInInspector]  _Color ("Diffuse Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          [HideInInspector]  _SpecColor ("Specular Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          [HideInInspector]  _SpecInt ("Specular Intensity", Float) = 1.000000
//          [HideInInspector]  _Shininess ("Specular Sharpness", Range(2.000000,8.000000)) = 8.000000
//          [HideInInspector]  _SpecTex ("Specular(RGB) Gloss(A)", 2D) = "white" { }
//          }
//          Fallback Off
//          SubShader 1/1 {
// 0f:        Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry+449" "IGNOREPROJECTOR"="true" }
// f0:        Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" }
//            GrabPass {
//              Name "BASE"
//              Tags { "LIGHTMODE"="ForwardBase" }
//             }
//            Pass 1/2 {
//              Name "FORWARD"
// 0f:          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry+449" "IGNOREPROJECTOR"="true" }
// f0:          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" }
//              ZWrite Off
//              Blend SrcAlpha OneMinusSrcAlpha
// f0:          GpuProgramID 52147
// 0f:          GpuProgramID 58624
//              Program "vp" {
//                SubProgram "d3d11 " {
// 11:              GpuProgramIndex 1
// 44:              GpuProgramIndex 17
// 88:              GpuProgramIndex 25
// 22:              GpuProgramIndex 9
//                }
//              }
//            }
//          }
//        }
//
// f0: Unity 5.3 headers extracted from Marmoset Water IBL Transparent Hack.shader.decompressed:
// 0f: Unity 5.3 headers extracted from Marmoset Water IBL.shader.decompressed:
//       API d3d11
//       Shader model vs_4_0
//       undeciphered1: 201510240 60 0 0
// 11:   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "MARMO_SKY_BLEND_OFF" "MARMO_BOX_PROJECTION_OFF" }
// 44:   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "MARMO_SKY_BLEND_OFF" "MARMO_BOX_PROJECTION_ON" }
// 22:   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "MARMO_SKY_BLEND_ON" "MARMO_BOX_PROJECTION_OFF" }
// 88:   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "MARMO_SKY_BLEND_ON" "MARMO_BOX_PROJECTION_ON" }
//       undeciphered2: 1 0 4 0 0 0
//       undeciphered3: 139 4 0 0 1 2 3 4 7 8
// aa:   ConstBuffer "$Globals" 1024
// 55:   ConstBuffer "$Globals" 672
//       Vector 48 [unity_ColorSpaceLuminance]
//       Vector 128 [_Wave_ST]
//       Vector 144 [_NoiseMap_ST]
//       Float 188 [_NoisePanningSpeed]
//       ConstBuffer "UnityPerCamera" 144
//       Vector 0 [_Time]
//       Vector 80 [_ProjectionParams]
//       ConstBuffer "UnityLighting" 720
//       Vector 608 [unity_SHAr]
//       Vector 624 [unity_SHAg]
//       Vector 640 [unity_SHAb]
//       Vector 656 [unity_SHBr]
//       Vector 672 [unity_SHBg]
//       Vector 688 [unity_SHBb]
//       Vector 704 [unity_SHC]
//       ConstBuffer "UnityPerDraw" 352
//       Vector 336 [unity_WorldTransformParams]
//       Matrix 0 [glstate_matrix_mvp]
//       Matrix 192 [unity_ObjectToWorld]
//       Matrix 256 [unity_WorldToObject]
//       BindCB "$Globals" 0
//       BindCB "UnityPerCamera" 1
//       BindCB "UnityLighting" 2
//       BindCB "UnityPerDraw" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

// ---- Created with 3Dmigoto v1.2.42 on Sun Nov 06 16:55:30 2016
cbuffer cb3 : register(b3)
{
  float4 cb3[22];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[45];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[6];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[12];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  float4 v1 : TANGENT0,
  float3 v2 : NORMAL0,
  float4 v3 : TEXCOORD0,
  float4 v4 : TEXCOORD1,
  float4 v5 : TEXCOORD2,
  float4 v6 : TEXCOORD3,
  float4 v7 : COLOR0,
  out float4 o0 : SV_POSITION0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3,
  out float4 o5 : TEXCOORD4,
  out float4 o6 : TEXCOORD5,
  out float4 o7 : TEXCOORD6,
  out float4 o8 : TEXCOORD8)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = cb3[1].xyzw * v0.yyyy;
  r0.xyzw = cb3[0].xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = cb3[2].xyzw * v0.zzzz + r0.xyzw;
  o0.xyzw = cb3[3].xyzw + r0.xyzw;
  r0.x = cb3[21].w * v1.w;
  r0.yzw = cb3[13].yzx * v1.yyy;
  r0.yzw = cb3[12].yzx * v1.xxx + r0.yzw;
  r0.yzw = cb3[14].yzx * v1.zzz + r0.yzw;
  r1.x = dot(r0.yzw, r0.yzw);
  r1.x = rsqrt(r1.x);
  r0.yzw = r1.xxx * r0.yzw;
  r1.x = cb3[16].x * v2.x;
  r1.y = cb3[17].x * v2.x;
  r1.z = cb3[18].x * v2.x;
  r2.x = cb3[16].y * v2.y;
  r2.y = cb3[17].y * v2.y;
  r2.z = cb3[18].y * v2.y;
  r1.xyz = r2.xyz + r1.xyz;
  r2.x = cb3[16].z * v2.z;
  r2.y = cb3[17].z * v2.z;
  r2.z = cb3[18].z * v2.z;
  r1.xyz = r2.xyz + r1.xyz;
  r1.w = dot(r1.xyz, r1.xyz);
  r1.w = rsqrt(r1.w);
  r1.xyz = r1.xyz * r1.www;
  r2.xyz = r1.zxy * r0.yzw;
  r2.xyz = r1.yzx * r0.zwy + -r2.xyz;
  r2.xyz = r2.xyz * r0.xxx;
  o1.y = r2.x;
  o1.x = r0.w;
  r3.xyz = cb3[13].xyz * v0.yyy;
  r3.xyz = cb3[12].xyz * v0.xxx + r3.xyz;
  r3.xyz = cb3[14].xyz * v0.zzz + r3.xyz;
  r3.xyz = cb3[15].xyz * v0.www + r3.xyz;
  o1.w = r3.x;
  o1.z = r1.x;
  o2.x = r0.y;
  o3.x = r0.z;
  o2.w = r3.y;
  o2.y = r2.y;
  o3.y = r2.z;
  o2.z = r1.y;
  o3.w = r3.z;
  o5.xyz = r3.xyz;
  o3.z = r1.z;
  r0.xy = v3.xy * cb0[9].xy + cb0[9].zw;
  o4.zw = cb1[0].yy * cb0[11].ww + r0.xy;
  o4.xy = v3.xy * cb0[8].xy + cb0[8].zw;
  o5.w = 0;
  r0.xyz = cb3[1].xyw * v0.yyy;
  r0.xyz = cb3[0].xyw * v0.xxx + r0.xyz;
  r0.xyz = cb3[2].xyw * v0.zzz + r0.xyz;
  r0.xyz = cb3[3].xyw * v0.www + r0.xyz;

// Fix halo on lake:
float4 s = StereoParams.Load(0);
r0.x += s.x * (r0.z - s.y);

  r0.y = cb1[5].x * r0.y;
  r2.xzw = float3(0.5,0.5,0.5) * r0.xzy;
  o6.zw = r0.zz;
  o6.xy = r2.xw + r2.zz;
  r0.x = r1.y * r1.y;
  r0.x = r1.x * r1.x + -r0.x;
  r2.xyzw = r1.xyzz * r1.yzzx;
  r3.x = dot(cb2[41].xyzw, r2.xyzw);
  r3.y = dot(cb2[42].xyzw, r2.xyzw);
  r3.z = dot(cb2[43].xyzw, r2.xyzw);
  r0.xyz = cb2[44].xyz * r0.xxx + r3.xyz;
  r1.w = 1;
  r2.x = dot(cb2[38].xyzw, r1.xyzw);
  r2.y = dot(cb2[39].xyzw, r1.xyzw);
  r2.z = dot(cb2[40].xyzw, r1.xyzw);
  r0.xyz = r2.xyz + r0.xyz;
  r1.xyz = max(float3(0,0,0), r0.xyz);
  r1.xyz = log2(r1.xyz);
  r1.xyz = float3(0.416666657,0.416666657,0.416666657) * r1.xyz;
  r1.xyz = exp2(r1.xyz);
  r1.xyz = r1.xyz * float3(1.05499995,1.05499995,1.05499995) + float3(-0.0549999997,-0.0549999997,-0.0549999997);
  r1.xyz = max(float3(0,0,0), r1.xyz);
  r0.w = cmp(cb0[3].w == 0.000000);
  o7.xyz = r0.www ? r1.xyz : r0.xyz;
  o8.xyzw = float4(0,0,0,0);
  return;
}

/****************************** COMPILE WARNINGS ******************************
R:\Steam\SteamApps\common\Firewatch\ShaderFixes\1b43c6fa076d9539-vs_replace.txt(141,14-15): warning X3578: Output value 'o7' is not completely initialized

****************************** COMPILE WARNINGS ******************************/
