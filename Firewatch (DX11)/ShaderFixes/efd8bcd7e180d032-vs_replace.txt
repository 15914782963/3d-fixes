// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --only-autofixed --fxc /home/dss/fxc.exe efd8bcd7e180d032-vs_replace.txt
// 3DMigoto: efd8bcd7e180d032 | Matched 10 variants of 1 shaders: Marmoset/Transparent/Bumped Diffuse IBL
// 
//      Unity headers extracted from Marmoset Bumped Diffuse IBL.shader
//      Shader "Marmoset/Transparent/Bumped Diffuse IBL" {
//        Properties {
//         _Color ("Diffuse Color", Color) = (1,1,1,1)
//         _MainTex ("Diffuse(RGB) Alpha(A)", 2D) = "white" { }
//         _BumpMap ("Normalmap", 2D) = "bump" { }
//        }
//        Fallback "Marmoset/Transparent/Diffuse IBL"
//        SubShader 1/1 {
//          LOD 350
//          Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//          Pass 2/2 {
//            Name "FORWARD"
//            Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//            ZWrite Off
//            Blend SrcAlpha One
//            ColorMask RGB
//            GpuProgramID 101642
//            Program "vp" {
//              SubProgram "d3d11 " {
// 002:           Keywords { "DIRECTIONAL" "FOG_EXP2" "MARMO_SKY_BLEND_OFF" }
// 040:           Keywords { "DIRECTIONAL" "FOG_EXP2" "MARMO_SKY_BLEND_ON" }
// 010:           Keywords { "DIRECTIONAL_COOKIE" "FOG_EXP2" "MARMO_SKY_BLEND_OFF" }
// 200:           Keywords { "DIRECTIONAL_COOKIE" "FOG_EXP2" "MARMO_SKY_BLEND_ON" }
// 001:           Keywords { "FOG_EXP2" "MARMO_SKY_BLEND_OFF" "POINT" }
// 008:           Keywords { "FOG_EXP2" "MARMO_SKY_BLEND_OFF" "POINT_COOKIE" }
// 004:           Keywords { "FOG_EXP2" "MARMO_SKY_BLEND_OFF" "SPOT" }
// 020:           Keywords { "FOG_EXP2" "MARMO_SKY_BLEND_ON" "POINT" }
// 100:           Keywords { "FOG_EXP2" "MARMO_SKY_BLEND_ON" "POINT_COOKIE" }
// 080:           Keywords { "FOG_EXP2" "MARMO_SKY_BLEND_ON" "SPOT" }
//                Bind "vertex" Vertex
//                Bind "color" Color
//                Bind "normal" Normal
//                Bind "texcoord" TexCoord0
//                Bind "tangent" TexCoord4
//                ConstBuffer "UnityPerDraw" 352
//                Matrix 0 [glstate_matrix_mvp]
//                Matrix 192 [_Object2World]
//                Matrix 256 [_World2Object]
//                Vector 336 [unity_WorldTransformParams]
//                BindCB "UnityPerDraw" 0
//              }
//            }
//          }
//        }
//      }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py
//
// Shader model vs_4_0

// ---- Created with 3Dmigoto v1.2.31 on Sat Feb 20 12:33:04 2016
cbuffer cb0 : register(b0)
{
  float4 cb0[22];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  float4 v1 : TANGENT0,
  float3 v2 : NORMAL0,
  float4 v3 : TEXCOORD0,
  float4 v4 : TEXCOORD1,
  float4 v5 : TEXCOORD2,
  float4 v6 : TEXCOORD3,
  float4 v7 : COLOR0,
  out float4 o0 : SV_POSITION0,
  out float3 o1 : TEXCOORD0,
  out float p1 : TEXCOORD5,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3,
  out float4 o5 : TEXCOORD4)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
float separation = stereo.x, convergence = stereo.y, eye = stereo.z;

  r0.xyzw = cb0[1].xyzw * v0.yyyy;
  r0.xyzw = cb0[0].xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = cb0[2].xyzw * v0.zzzz + r0.xyzw;
  r0.xyzw = cb0[3].xyzw * v0.wwww + r0.xyzw;
  o0.xyzw = r0.xyzw;

// Automatic vertex shader halo fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --only-autofixed --fxc /home/dss/fxc.exe efd8bcd7e180d032-vs_replace.txt
if (r0.w != 1.0) { r0.x += separation * (r0.w - convergence); }

  p1.x = r0.z;
  r0.y = cb0[16].x * v2.x;
  r0.z = cb0[17].x * v2.x;
  r0.x = cb0[18].x * v2.x;
  r1.y = cb0[16].y * v2.y;
  r1.z = cb0[17].y * v2.y;
  r1.x = cb0[18].y * v2.y;
  r0.xyz = r1.xyz + r0.xyz;
  r1.y = cb0[16].z * v2.z;
  r1.z = cb0[17].z * v2.z;
  r1.x = cb0[18].z * v2.z;
  r0.xyz = r1.xyz + r0.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  o1.z = r0.y;
  r1.xyz = cb0[13].yzx * v1.yyy;
  r1.xyz = cb0[12].yzx * v1.xxx + r1.xyz;
  r1.xyz = cb0[14].yzx * v1.zzz + r1.xyz;
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = rsqrt(r0.w);
  r1.xyz = r1.xyz * r0.www;
  r2.xyz = r1.xyz * r0.xyz;
  r2.xyz = r0.zxy * r1.yzx + -r2.xyz;
  r0.y = cb0[21].w * v1.w;
  r2.xyz = r2.xyz * r0.yyy;
  o1.y = r2.x;
  o1.x = r1.z;
  o2.z = r0.z;
  o3.z = r0.x;
  o2.x = r1.x;
  o3.x = r1.y;
  o2.y = r2.y;
  o3.y = r2.z;
  r0.xyz = cb0[13].xyz * v0.yyy;
  r0.xyz = cb0[12].xyz * v0.xxx + r0.xyz;
  r0.xyz = cb0[14].xyz * v0.zzz + r0.xyz;
  o4.xyz = cb0[15].xyz * v0.www + r0.xyz;
  o5.xy = v3.xy;
  o5.zw = float2(0,0);
  return;
}

/****************************** COMPILE WARNINGS ******************************
C:\Steam\SteamApps\common\Firewatch\ShaderFixes\efd8bcd7e180d032-vs_replace.txt(83,14-15): warning X3578: Output value 'o2' is not completely initialized
C:\Steam\SteamApps\common\Firewatch\ShaderFixes\efd8bcd7e180d032-vs_replace.txt(84,14-15): warning X3578: Output value 'o3' is not completely initialized
C:\Steam\SteamApps\common\Firewatch\ShaderFixes\efd8bcd7e180d032-vs_replace.txt(85,14-15): warning X3578: Output value 'o4' is not completely initialized

****************************** COMPILE WARNINGS ******************************/
