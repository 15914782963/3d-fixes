// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --only-autofixed --fxc /home/dss/fxc.exe 1a0773c0cfc933a0-vs_replace.txt
// 3DMigoto: 1a0773c0cfc933a0 | Unity headers extracted from WavingGrassBillboard.shader
// Shader "Hidden/TerrainEngine/Details/BillboardWavingDoublePass" {
//   Properties {
//    _WavingTint ("Fade Color", Color) = (0.7,0.6,0.5,0)
//    _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
//    _WaveAndDistance ("Wave and distance", Vector) = (12,3.6,1,1)
//    _Cutoff ("Cutoff", Float) = 0.5
//   }
//   Fallback Off
//   SubShader 1/1 {
//     LOD 200
//     Tags { "QUEUE"="Geometry+200" "IGNOREPROJECTOR"="true" "DisableBatching"="true" "RenderType"="GrassBillboard" }
//     Pass 2/6 {
//       Name "FORWARD"
//       Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Geometry+200" "IGNOREPROJECTOR"="true" "DisableBatching"="true" "RenderType"="GrassBillboard" }
//       ZWrite Off
//       Cull Off
//       Blend One One
//       ColorMask RGB
//       GpuProgramID 77749
//       Program "vp" {
//         SubProgram "d3d11 " {
//           Keywords { "DIRECTIONAL" "FOG_EXP2" "MARMO_TERRAIN_BLEND_OFF" }
//           Bind "vertex" Vertex
//           Bind "color" Color
//           Bind "normal" Normal
//           Bind "texcoord" TexCoord0
//           Bind "tangent" TexCoord4
//           ConstBuffer "$Globals" 528
//           Matrix 192 [_SkyMatrix]
//           Vector 160 [_ExposureIBL]
//           Vector 184 [_UniformOcclusion] 2
//           Vector 368 [_SH0] 3
//           Vector 384 [_SH1] 3
//           Vector 400 [_SH2] 3
//           Vector 416 [_SH3] 3
//           Vector 432 [_SH4] 3
//           Vector 448 [_SH5] 3
//           Vector 464 [_SH6] 3
//           Vector 480 [_SH7] 3
//           Vector 496 [_SH8] 3
//           Vector 512 [_MainTex_ST]
//           ConstBuffer "UnityPerCamera" 144
//           Vector 0 [_Time]
//           ConstBuffer "UnityPerDraw" 352
//           Matrix 0 [glstate_matrix_mvp]
//           Matrix 192 [_Object2World]
//           Matrix 256 [_World2Object]
//           ConstBuffer "UnityTerrain" 272
//           Vector 16 [_WaveAndDistance]
//           Vector 32 [_CameraPosition]
//           Vector 48 [_CameraRight] 3
//           Vector 64 [_CameraUp] 3
//           BindCB "$Globals" 0
//           BindCB "UnityPerCamera" 1
//           BindCB "UnityPerDraw" 2
//           BindCB "UnityTerrain" 3
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py
//
// Shader model vs_4_0

// ---- Created with 3Dmigoto v1.2.31 on Sat Feb 20 12:34:44 2016
cbuffer cb3 : register(b3)
{
  float4 cb3[5];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[19];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[1];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[33];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  float4 v1 : TANGENT0,
  float3 v2 : NORMAL0,
  float4 v3 : TEXCOORD0,
  float4 v4 : TEXCOORD1,
  float4 v5 : TEXCOORD2,
  float4 v6 : TEXCOORD3,
  float4 v7 : COLOR0,
  out float4 o0 : SV_POSITION0,
  out float2 o1 : TEXCOORD0,
  out float p1 : TEXCOORD5,
  out float4 o2 : TEXCOORD1,
  out float3 o3 : TEXCOORD2,
  out float4 o4 : COLOR0,
  out float4 o5 : TEXCOORD3)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
float separation = stereo.x, convergence = stereo.y, eye = stereo.z;

  r0.xyz = -cb3[2].xyz + v0.xyz;
  r0.x = dot(r0.xyz, r0.xyz);
  r0.x = cmp(cb3[1].w < r0.x);
  r0.xy = r0.xx ? float2(0,0) : v1.xy;
  r0.xzw = r0.xxx * cb3[3].xyz + v0.xyz;
  r0.xyz = r0.yyy * cb3[4].xyz + r0.xzw;
  r1.xy = cb3[1].yy * r0.xz;
  r2.xyzw = float4(0.00600000005,0.0199999996,0.0199999996,0.0500000007) * r1.yyyy;
  r1.xyzw = r1.xxxx * float4(0.0120000001,0.0199999996,0.0599999987,0.0240000002) + r2.xyzw;
  r1.xyzw = cb3[1].xxxx * float4(1.20000005,2,1.60000002,4.80000019) + r1.xyzw;
  r1.xyzw = frac(r1.xyzw);
  r1.xyzw = r1.xyzw * float4(6.40884876,6.40884876,6.40884876,6.40884876) + float4(-3.14159274,-3.14159274,-3.14159274,-3.14159274);
  r2.xyzw = r1.xyzw * r1.xyzw;
  r3.xyzw = r2.xyzw * r1.xyzw;
  r1.xyzw = r3.xyzw * float4(-0.161616161,-0.161616161,-0.161616161,-0.161616161) + r1.xyzw;
  r3.xyzw = r3.xyzw * r2.xyzw;
  r2.xyzw = r3.xyzw * r2.xyzw;
  r1.xyzw = r3.xyzw * float4(0.00833330024,0.00833330024,0.00833330024,0.00833330024) + r1.xyzw;
  r1.xyzw = r2.xyzw * float4(-0.000198409994,-0.000198409994,-0.000198409994,-0.000198409994) + r1.xyzw;
  r2.xyzw = r1.xyzw * r1.xyzw;
  r1.xyzw = v1.yyyy * r1.xyzw;
  r1.xyzw = r2.xyzw * r1.xyzw;
  r2.x = dot(r1.xyzw, float4(0.0240000002,0.0399999991,-0.119999997,0.0960000008));
  r2.z = dot(r1.xyzw, float4(0.00600000005,0.0199999996,-0.0199999996,0.100000001));
  r1.xy = cb3[1].zz * r2.xz;
  r0.w = cb3[1].y * cb1[0].w;
  r1.zw = r0.ww * float2(10,10) + r0.xz;
  r1.zw = sin(r1.zw);
  r0.w = r1.z * r1.w;
  r0.xz = -r1.xy * r0.ww + r0.xz;
  r1.xyzw = cb2[1].xyzw * r0.yyyy;
  r1.xyzw = cb2[0].xyzw * r0.xxxx + r1.xyzw;
  r1.xyzw = cb2[2].xyzw * r0.zzzz + r1.xyzw;
  r1.xyzw = cb2[3].xyzw * v0.wwww + r1.xyzw;
  o0.xyzw = r1.xyzw;

// Automatic vertex shader halo fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --only-autofixed --fxc /home/dss/fxc.exe 1a0773c0cfc933a0-vs_replace.txt
if (r1.w != 1.0) { r1.x += separation * (r1.w - convergence); }

  p1.x = r1.z;
  o1.xy = v3.xy * cb0[32].xy + cb0[32].zw;
  r1.x = cb2[16].x * v2.x;
  r1.y = cb2[17].x * v2.x;
  r1.z = cb2[18].x * v2.x;
  r2.x = cb2[16].y * v2.y;
  r2.y = cb2[17].y * v2.y;
  r2.z = cb2[18].y * v2.y;
  r1.xyz = r2.xyz + r1.xyz;
  r2.x = cb2[16].z * v2.z;
  r2.y = cb2[17].z * v2.z;
  r2.z = cb2[18].z * v2.z;
  r1.xyz = r2.xyz + r1.xyz;
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = rsqrt(r0.w);
  o2.xyz = r1.xyz * r0.www;
  r1.xyz = cb2[13].xyz * r0.yyy;
  r2.xyz = -cb3[2].xyz + r0.xyz;
  r0.y = dot(r2.xyz, r2.xyz);
  r0.y = cb3[1].w + -r0.y;
  o4.w = saturate(dot(cb3[2].ww, r0.yy));
  r0.xyw = cb2[12].xyz * r0.xxx + r1.xyz;
  r0.xyz = cb2[14].xyz * r0.zzz + r0.xyw;
  o3.xyz = cb2[15].xyz * v0.www + r0.xyz;
  o4.xyz = v7.xyz;
  r0.xyz = cb2[13].xyz * v2.yyy;
  r0.xyz = cb2[12].xyz * v2.xxx + r0.xyz;
  r0.xyz = cb2[14].xyz * v2.zzz + r0.xyz;
  r1.x = cb0[12].y * r0.y;
  r1.y = cb0[13].y * r0.y;
  r1.z = cb0[14].y * r0.y;
  r2.x = cb0[12].z * r0.z;
  r2.y = cb0[13].z * r0.z;
  r2.z = cb0[14].z * r0.z;
  r0.yzw = r2.xyz + r1.xyz;
  r1.x = cb0[12].x * r0.x;
  r1.y = cb0[13].x * r0.x;
  r1.z = cb0[14].x * r0.x;
  r0.xyz = r1.xyz + r0.yzw;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r1.xyz = cb0[24].xyz * r0.yyy + cb0[23].xyz;
  r1.xyz = cb0[25].xyz * r0.zzz + r1.xyz;
  r1.xyz = cb0[26].xyz * r0.xxx + r1.xyz;
  r2.xyz = r0.yyz * r0.xzx;
  r1.xyz = cb0[27].xyz * r2.xxx + r1.xyz;
  r1.xyz = cb0[28].xyz * r2.yyy + r1.xyz;
  r1.xyz = cb0[30].xyz * r2.zzz + r1.xyz;
  r0.yz = r0.yz * r0.yz;
  r0.x = r0.x * r0.x + -r0.y;
  r0.y = r0.z * 3 + -1;
  r0.yzw = cb0[29].xyz * r0.yyy + r1.xyz;
  r0.xyz = cb0[31].xyz * r0.xxx + r0.yzw;
  r0.w = cb0[11].z * cb0[10].x;
  o5.xyz = abs(r0.xyz) * r0.www;
  o5.w = cb0[10].w;
  return;
}

/****************************** COMPILE WARNINGS ******************************
C:\Steam\SteamApps\common\Firewatch\ShaderFixes\1a0773c0cfc933a0-vs_replace.txt(112,14-15): warning X3578: Output value 'o2' is not completely initialized

****************************** COMPILE WARNINGS ******************************/
