// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --only-autofixed --fxc /home/dss/fxc.exe de7b2790a4a2de78-vs_replace.txt
// 3DMigoto: de7b2790a4a2de78 | Matched 2 variants of 1 shaders: Marmoset/Transparent/Cutout/Bumped Diffuse IBL Trees
// 
//    Unity headers extracted from Marmoset Bumped Diffuse IBL Trees.shader
//    Shader "Marmoset/Transparent/Cutout/Bumped Diffuse IBL Trees" {
//      Properties {
//       _Color ("Diffuse Color", Color) = (1,1,1,1)
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//       _MainTex ("Diffuse(RGB) Alpha(A)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _GIBoost ("Global Illumination Scale", Float) = 1
//       _OcclusionLength ("Occlusion Length", Float) = 1
//       _BrightnessOffset ("Brightness Scalar", Float) = 1
//       _BrightnessAdd ("Brightness Offset", Float) = 0
//      }
// 1:   SubShader 1/2 {
// 2:   SubShader 2/2 {
//        LOD 350
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 6/6 {
//          Name "SHADOWCASTER"
//          Tags { "LIGHTMODE"="SHADOWCASTER" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//          ZTest Less
//          Cull Off
//          Offset 1, 1
// 1:       GpuProgramID 421500
// 2:       GpuProgramID 910344
//          Program "vp" {
//            SubProgram "d3d11 " {
//              Keywords { "SHADOWS_DEPTH" }
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              ConstBuffer "$Globals" 160
//              Float 96 [_SwayingRandomnessOffset]
//              Vector 112 [_WindDirectionFrequencyIntensity]
//              Vector 128 [_WindLeafParameters]
//              ConstBuffer "UnityPerCamera" 144
//              Vector 0 [_Time]
//              ConstBuffer "UnityShadows" 416
//              Vector 80 [unity_LightShadowBias]
//              ConstBuffer "UnityPerDraw" 352
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 192 [_Object2World]
//              BindCB "$Globals" 0
//              BindCB "UnityPerCamera" 1
//              BindCB "UnityShadows" 2
//              BindCB "UnityPerDraw" 3
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py
//
// Shader model vs_4_0

// ---- Created with 3Dmigoto v1.2.31 on Sat Feb 20 12:33:26 2016
cbuffer cb3 : register(b3)
{
  float4 cb3[16];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[6];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[1];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[9];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  float4 v1 : TANGENT0,
  float3 v2 : NORMAL0,
  float4 v3 : TEXCOORD0,
  float4 v4 : TEXCOORD1,
  float4 v5 : TEXCOORD2,
  float4 v6 : TEXCOORD3,
  float4 v7 : COLOR0,
  out float4 o0 : SV_POSITION0,
  out float2 o1 : TEXCOORD1)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
float separation = stereo.x, convergence = stereo.y, eye = stereo.z;

  r0.xyz = cb3[13].xyz * v0.yyy;
  r0.xyz = cb3[12].xyz * v0.xxx + r0.xyz;
  r0.xyz = cb3[14].xyz * v0.zzz + r0.xyz;
  r0.xyz = cb3[15].xyz + r0.xyz;
  r0.w = dot(r0.xz, float2(1,1));
  r0.x = dot(r0.xyz, float3(1,10,100));
  r0.y = cb0[6].x * r0.w;
  r0.y = cb1[0].y * cb0[7].z + r0.y;
  r0.y = sin(r0.y);
  r1.xz = cb0[7].xy * r0.yy;
  r0.y = cb1[0].y * cb0[8].x;
  r0.x = r0.x * cb0[8].y + r0.y;
  r0.xy = sin(r0.xy);
  r0.yzw = v2.xyz * r0.yyy;
  r2.xyz = v2.xyz * r0.xxx;
  r3.xy = cb0[8].zw * v7.zy;
  r2.xyz = r3.xxx * r2.xyz;
  r1.y = 0;
  r0.x = cb0[7].w * v7.x;
  r1.xyz = r1.xyz * r0.xxx + r2.xyz;
  r0.xyz = r0.yzw * r3.yyy + r1.xyz;
  r0.xyz = v0.xyz + r0.xyz;
  r1.xyzw = cb3[1].xyzw * r0.yyyy;
  r1.xyzw = cb3[0].xyzw * r0.xxxx + r1.xyzw;
  r0.xyzw = cb3[2].xyzw * r0.zzzz + r1.xyzw;
  r0.xyzw = cb3[3].xyzw + r0.xyzw;

o0.xyw = r0.xyw; // Relocated to here with hlsltool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --only-autofixed --fxc /home/dss/fxc.exe de7b2790a4a2de78-vs_replace.txt
if (r0.w != 1.0) { r0.x += separation * (r0.w - convergence); }

  r1.x = saturate(cb2[5].x / r0.w);
  r0.z = r1.x + r0.z;

  // o0.xyw = r0.xyw; // Relocated from here with hlsltool.py

  r0.x = max(0, r0.z);
  r0.x = r0.x + -r0.z;
  o0.z = cb2[5].y * r0.x + r0.z;
  o1.xy = v3.xy;
  return;
}
