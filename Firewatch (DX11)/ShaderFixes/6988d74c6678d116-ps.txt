// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6988d74c6678d116-ps.txt
// 3DMigoto: 6988d74c6678d116 |    Unity headers extracted from Marmoset Bumped Specular IBL.shader
//    Shader "Marmoset/Transparent/Cutout/Bumped Specular IBL" {
//      Properties {
//       _Color ("Diffuse Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _SpecColor ("Specular Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _SpecInt ("Specular Intensity", Float) = 1.000000
//       _Shininess ("Specular Sharpness", Range(2.000000,8.000000)) = 4.000000
//       _Fresnel ("Fresnel Strength", Range(0.000000,1.000000)) = 0.000000
//       _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.500000
//       _MainTex ("Diffuse(RGB) Alpha(A)", 2D) = "white" { }
//       _SpecTex ("Specular(RGB) Gloss(A)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//      }
//      Fallback "Marmoset/Transparent/Cutout/Specular IBL"
//      SubShader 2/2 {
//        LOD 400
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 4/5 {
//          Name "PREPASS"
//          Tags { "LIGHTMODE"="PrePassFinal" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//          ZWrite Off
//          GpuProgramID 591599
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 602
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Marmoset Bumped Specular IBL.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 116 4 0
//   Keywords { "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "MARMO_SKY_BLEND_OFF" "MARMO_BOX_PROJECTION_ON" }
//   undeciphered2: 1 5 3 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 592
//   Vector 0 [unity_ColorSpaceGrey]
//   Vector 112 [_SpecColor]
//   Vector 128 [_Color]
//   Vector 144 [_MainTex_ST]
//   Float 160 [_SpecInt]
//   Float 164 [_Shininess]
//   Float 168 [_Fresnel]
//   Vector 176 [_SpecTex_ST]
//   Vector 192 [_BumpMap_ST]
//   Float 208 [_Cutoff]
//   Vector 224 [_ExposureIBL]
//   Vector 248 [_UniformOcclusion] 2
//   Vector 400 [_SkyMin] 3
//   Vector 416 [_SkyMax] 3
//   Vector 432 [_SH0] 3
//   Vector 448 [_SH1] 3
//   Vector 464 [_SH2] 3
//   Vector 480 [_SH3] 3
//   Vector 496 [_SH4] 3
//   Vector 512 [_SH5] 3
//   Vector 528 [_SH6] 3
//   Vector 544 [_SH7] 3
//   Vector 560 [_SH8] 3
//   Matrix 256 [_SkyMatrix]
//   Matrix 320 [_InvSkyMatrix]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_MainTex] 2D 0
//   SetTexture 1 [_BumpMap] 2D 2
//   SetTexture 2 [_SpecTex] 2D 1
//   SetTexture 3 [_SpecCubeIBL] CUBE 3
//   SetTexture 4 [_LightBuffer] 2D 4
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityFog" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Nov 05 21:02:00 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyz         8     NONE   float   xyz 
// TEXCOORD                 8      w        8     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[36], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyw
dcl_input_ps linear v8.xyz
dcl_input_ps linear v8.w
dcl_output o0.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6988d74c6678d116-ps.txt
mov r9.xyzw, cb1[4].xyzw
mov r10.xyzw, l(0)
mul r10.x, -r8.x, r8.y
mul r12.xyzw, cb10[0].xyzw, r10.xxxx
mad r12.xyzw, cb10[1].xyzw, r10.yyyy, r12.xyzw
mad r12.xyzw, cb10[2].xyzw, r10.zzzz, r12.xyzw
mad r12.xyzw, cb10[3].xyzw, r10.wwww, r12.xyzw
mul r11.xyzw, cb11[12].xyzw, r12.xxxx
mad r11.xyzw, cb11[13].xyzw, r12.yyyy, r11.xyzw
mad r11.xyzw, cb11[14].xyzw, r12.zzzz, r11.xyzw
mad r11.xyzw, cb11[15].xyzw, r12.wwww, r11.xyzw
add r9.xyz, r9.xyz, -r11.xyz

mad r0.xy, v4.xyxx, cb0[9].xyxx, cb0[9].zwzz
sample r0.xyzw, r0.xyxx, t0.xyzw, s0
mad r0.w, r0.w, cb0[8].w, -cb0[13].x
mul r0.xyz, r0.xyzx, cb0[8].xyzx
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
mov r1.x, v1.w
mov r1.y, v2.w
mov r1.z, v3.w
add r1.xyz, -r1.xyzx, r9.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r2.xyz, r1.yyyy, v2.xyzx
mad r1.xyw, v1.xyxz, r1.xxxx, r2.xyxz
mad r1.xyz, v3.xyzx, r1.zzzz, r1.xywx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mad r2.xy, v4.xyxx, cb0[12].xyxx, cb0[12].zwzz
sample r2.xyzw, r2.xyxx, t1.xyzw, s2
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r2.z, r0.w
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3_sat r0.w, r2.xyzx, r1.xyzx
add r1.x, -r0.w, l(1.000000)
mul r0.w, r1.x, r1.x
mul r1.z, r1.x, r0.w
mad r3.xy, cb0[10].zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
dp2 r4.y, r1.xzxx, r3.xyxx
mov r1.y, l(1.000000)
dp2 r4.x, r1.yxyy, r3.xyxx
dp2 r0.w, r4.xyxx, r3.xyxx
mad r0.w, r0.w, l(0.950000), l(0.050000)
mul r1.x, r0.w, cb0[10].x
sqrt r1.x, r1.x
mad r0.w, r0.w, cb0[10].x, -r1.x
mad r1.y, cb0[0].x, l(-3.225810), l(1.612900)
mad r0.w, r1.y, r0.w, r1.x
mul r0.xyzw, r0.xyzw, cb0[14].wwww
mad r1.xz, v4.xxyx, cb0[11].xxyx, cb0[11].zzwz
sample r3.xyzw, r1.xzxx, t2.xyzw, s1
mul r1.xzw, r3.xxyz, cb0[7].xxyz
add r2.w, -r3.w, l(1.000000)
mad r3.xy, -r2.wwww, r2.wwww, l(1.000000, 8.000000, 0.000000, 0.000000)
mad r2.w, -cb0[10].y, r3.x, r3.y
mul r1.xzw, r0.wwww, r1.xxzw
dp3 r3.x, v1.xyzx, r2.xyzx
dp3 r3.y, v2.xyzx, r2.xyzx
dp3 r3.z, v3.xyzx, r2.xyzx
add r2.xyz, -v5.xyzx, r9.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, -r2.xyzx, r3.xyzx
add r0.w, r0.w, r0.w
mad r2.xyz, r3.xyzx, -r0.wwww, -r2.xyzx
mov r4.x, cb0[16].z
mov r4.y, cb0[17].z
mov r4.z, cb0[18].z
mul r5.xyz, r2.zzzz, r4.xyzx
mul r4.xyz, r3.zzzz, r4.xyzx
mov r6.x, cb0[16].y
mov r6.y, cb0[17].y
mov r6.z, cb0[18].y
mad r5.xyz, r6.xyzx, r2.yyyy, r5.xyzx
mad r3.yzw, r6.xxyz, r3.yyyy, r4.xxyz
mov r4.x, cb0[16].x
mov r4.y, cb0[17].x
mov r4.z, cb0[18].x
mad r2.xyz, r4.xyzx, r2.xxxx, r5.xyzx
mad r3.xyz, r4.xyzx, r3.xxxx, r3.yzwy
mul_sat r4.xyz, r2.xyzx, l(1000000.000000, 1000000.000000, 1000000.000000, 0.000000)
add r5.xyz, -cb0[25].xyzx, cb0[26].xyzx
mad r4.xyz, r4.xyzx, r5.xyzx, cb0[25].xyzx
mov r5.x, cb0[20].x
mov r5.y, cb0[21].x
mov r5.z, cb0[22].x
mov r5.w, cb0[23].x
mov r6.xyz, v5.xyzx
mov r6.w, l(1.000000)
dp4 r5.x, r5.xyzw, r6.xyzw
mov r7.x, cb0[20].y
mov r7.y, cb0[21].y
mov r7.z, cb0[22].y
mov r7.w, cb0[23].y
dp4 r5.y, r7.xyzw, r6.xyzw
mov r7.x, cb0[20].z
mov r7.y, cb0[21].z
mov r7.z, cb0[22].z
mov r7.w, cb0[23].z
dp4 r5.z, r7.xyzw, r6.xyzw
add r4.xyz, r4.xyzx, -r5.xyzx
div r6.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzx
mul r4.xyz, r4.xyzx, r6.xyzx
min r0.w, r4.y, r4.x
min r0.w, r4.z, r0.w
mad r2.xyz, r2.xyzx, r0.wwww, r5.xyzx
sample_l r4.xyzw, r2.xyzx, t3.xyzw, s3, r2.w
add r0.w, -r2.w, l(8.000000)
exp r0.w, r0.w
mad r0.w, r0.w, l(0.159154937), l(0.318309873)
mul r2.xyz, r0.wwww, r1.xzwx
mul r0.w, r4.w, l(6.000000)
mul r5.x, r0.w, r0.w
mul r5.y, r0.w, r5.x
dp2 r2.w, l(0.753200, 0.246800, 0.000000, 0.000000), r5.xyxx
mad r2.w, -r4.w, l(6.000000), r2.w
mad r0.w, r1.y, r2.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx
mul r1.xyz, r1.xzwx, r4.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
mad r4.xyz, cb0[28].xyzx, r3.yyyy, cb0[27].xyzx
mad r4.xyz, cb0[29].xyzx, r3.zzzz, r4.xyzx
mad r4.xyz, cb0[30].xyzx, r3.xxxx, r4.xyzx
mul r5.xyz, r3.xzxx, r3.yyzy
mad r4.xyz, cb0[31].xyzx, r5.xxxx, r4.xyzx
mad r4.xyz, cb0[32].xyzx, r5.yyyy, r4.xyzx
mad r4.xyz, cb0[34].xyzx, r5.zzzz, r4.xyzx
mul r3.yz, r3.yyzy, r3.yyzy
mad r0.w, r3.x, r3.x, -r3.y
mad r1.w, r3.z, l(3.000000), l(-1.000000)
mad r3.xyz, cb0[33].xyzx, r1.wwww, r4.xyzx
mad r3.xyz, cb0[35].xyzx, r0.wwww, r3.xyzx
mul r3.xyz, r0.xyzx, |r3.xyzx|
mul r4.xy, cb0[14].xyxx, cb0[15].zwzz
mul r3.xyz, r3.xyzx, r4.xxxx
mad r1.xyz, r1.xyzx, r4.yyyy, r3.xyzx
div r3.xy, v6.xyxx, v6.wwww
sample r3.xyzw, r3.xyxx, t4.xyzw, s4
log r3.xyzw, r3.xyzw
add r3.xyz, -r3.xyzx, v8.xyzx
mul r4.xyz, -r3.wwww, r3.xyzx
mul r2.xyz, r2.xyzx, r4.xyzx
mul r2.xyz, r2.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000)
mad r0.xyz, r0.xyzx, r3.xyzx, r2.xyzx
add r0.xyz, r1.xyzx, r0.xyzx
add r0.xyz, r0.xyzx, -cb2[0].xyzx
mul r0.w, v8.w, cb2[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
mad o0.xyz, r0.wwww, r0.xyzx, cb2[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used