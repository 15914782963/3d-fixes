// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2058194e7805eca1-ps.txt
// 3DMigoto: 2058194e7805eca1 |    Unity headers extracted from Marmoset_Self-Illumin_Specular IBL
//    Shader "Marmoset/Self-Illumin/Specular IBL" {
//      Fallback "Marmoset/Specular IBL"
//      SubShader 1/1 {
//        LOD 250
//        Tags { "QUEUE"="Geometry" "RenderType"="Opaque" }
//        Pass 6/6 {
//          Name "META"
//          Tags { "LIGHTMODE"="META" "QUEUE"="Geometry" "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Marmoset_Self-Illumin_Specular IBL:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 148 3 0
//   undeciphered1a: 10
//   Keywords { "MARMO_SKY_BLEND_ON" "MARMO_BOX_PROJECTION_ON" }
//   undeciphered2: 1 5 3 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 912
//   Vector 48 [_SpecColor]
//   Vector 64 [_Color]
//   Vector 80 [_MainTex_ST]
//   Float 96 [_SpecInt]
//   Float 100 [_Shininess]
//   Float 104 [_Fresnel]
//   Vector 112 [_SpecTex_ST]
//   Vector 144 [_Illum_ST]
//   Vector 160 [_GlowColor]
//   Float 176 [_GlowStrength]
//   Float 180 [_EmissionLM]
//   Vector 192 [_ExposureIBL]
//   Vector 216 [_UniformOcclusion] 2
//   Vector 368 [_SkyMin] 3
//   Vector 384 [_SkyMax] 3
//   Vector 400 [_SH0] 3
//   Vector 416 [_SH1] 3
//   Vector 432 [_SH2] 3
//   Vector 448 [_SH3] 3
//   Vector 464 [_SH4] 3
//   Vector 480 [_SH5] 3
//   Vector 496 [_SH6] 3
//   Vector 512 [_SH7] 3
//   Vector 528 [_SH8] 3
//   Float 540 [_BlendWeightIBL]
//   Vector 544 [_ExposureIBL1]
//   Vector 720 [_SkyMin1] 3
//   Vector 736 [_SkyMax1] 3
//   Vector 752 [_SH01] 3
//   Vector 768 [_SH11] 3
//   Vector 784 [_SH21] 3
//   Vector 800 [_SH31] 3
//   Vector 816 [_SH41] 3
//   Vector 832 [_SH51] 3
//   Vector 848 [_SH61] 3
//   Vector 864 [_SH71] 3
//   Vector 880 [_SH81] 3
//   Float 892 [unity_OneOverOutputBoost]
//   Float 896 [unity_MaxOutputValue]
//   Float 900 [unity_UseLinearSpace]
//   Matrix 224 [_SkyMatrix]
//   Matrix 288 [_InvSkyMatrix]
//   Matrix 576 [_SkyMatrix1]
//   Matrix 640 [_InvSkyMatrix1]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityMetaPass" 48
//   VectorBool 16 [unity_MetaFragmentControl] 4
//   SetTexture 0 [_MainTex] 2D 0
//   SetTexture 1 [_SpecTex] 2D 1
//   SetTexture 2 [_Illum] 2D 2
//   SetTexture 3 [_SpecCubeIBL] CUBE 3
//   SetTexture 4 [_SpecCubeIBL1] CUBE 4
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityMetaPass" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.2 on Thu Apr 26 06:07:14 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyzw        3     NONE   float   xy
// TEXCOORD                 3   xyzw        4     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[57], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyz
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2058194e7805eca1-ps.txt

mul r10.w, -r10.x, r10.y
mad r11.xyz, -r10.wwww, cb10[0].xyzw, cb1[4].xyzw

mad r0.xy, v3.xyxx, cb0[7].xyxx, cb0[7].zwzz
sample r0.xyzw, r0.xyxx, t1.xyzw, s1
add r0.w, -r0.w, l(1.000000)
mul r0.xyz, r0.xyzx, cb0[3].xyzx
mad r1.xy, -r0.wwww, r0.wwww, l(1.000000, 8.000000, 0.000000, 0.000000)
mad r0.w, -cb0[6].y, r1.x, r1.y
add r1.xyz, -cb0[45].xyzx, cb0[46].xyzx
mov r2.x, cb0[36].y
mov r2.y, cb0[37].y
mov r2.z, cb0[38].y
mov r3.x, cb0[36].z
mov r3.y, cb0[37].z
mov r3.z, cb0[38].z
add r4.xyz, -v4.xyzx, r11.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx
dp3 r1.w, v1.xyzx, v1.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, v1.xyzx
dp3 r1.w, -r4.xyzx, r5.xyzx
add r1.w, r1.w, r1.w
mad r4.xyz, r5.xyzx, -r1.wwww, -r4.xyzx
mul r6.xyz, r3.xyzx, r4.zzzz
mul r3.xyz, r3.xyzx, r5.zzzz
mad r3.xyz, r2.xyzx, r5.yyyy, r3.xyzx
mad r2.xyz, r2.xyzx, r4.yyyy, r6.xyzx
mov r6.x, cb0[36].x
mov r6.y, cb0[37].x
mov r6.z, cb0[38].x
mad r2.xyz, r6.xyzx, r4.xxxx, r2.xyzx
mad r3.xyz, r6.xyzx, r5.xxxx, r3.xyzx
mul_sat r6.xyz, r2.xyzx, l(1000000.000000, 1000000.000000, 1000000.000000, 0.000000)
mad r1.xyz, r6.xyzx, r1.xyzx, cb0[45].xyzx
mov r6.x, cb0[40].x
mov r6.y, cb0[41].x
mov r6.z, cb0[42].x
mov r6.w, cb0[43].x
mov r7.xyz, v4.xyzx
mov r7.w, l(1.000000)
dp4 r6.x, r6.xyzw, r7.xyzw
mov r8.x, cb0[40].y
mov r8.y, cb0[41].y
mov r8.z, cb0[42].y
mov r8.w, cb0[43].y
dp4 r6.y, r8.xyzw, r7.xyzw
mov r8.x, cb0[40].z
mov r8.y, cb0[41].z
mov r8.z, cb0[42].z
mov r8.w, cb0[43].z
dp4 r6.z, r8.xyzw, r7.xyzw
add r1.xyz, r1.xyzx, -r6.xyzx
div r8.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzx
mul r1.xyz, r1.xyzx, r8.xyzx
min r1.x, r1.y, r1.x
min r1.x, r1.z, r1.x
mad r1.xyz, r2.xyzx, r1.xxxx, r6.xyzx
sample_l r1.xyzw, r1.xyzx, t4.xyzw, s4, r0.w
mul r2.x, r1.w, l(6.000000)
mul r6.x, r2.x, r2.x
mul r6.y, r2.x, r6.x
dp2 r2.y, l(0.753200, 0.246800, 0.000000, 0.000000), r6.xyxx
mad r1.w, -r1.w, l(6.000000), r2.y
mad r1.w, r1.w, l(0.922443926), r2.x
mul r1.xyz, r1.wwww, r1.xyzx
mov r2.x, cb0[18].x
mov r2.y, cb0[19].x
mov r2.z, cb0[20].x
mov r2.w, cb0[21].x
dp4 r2.x, r2.xyzw, r7.xyzw
mov r6.x, cb0[18].y
mov r6.y, cb0[19].y
mov r6.z, cb0[20].y
mov r6.w, cb0[21].y
dp4 r2.y, r6.xyzw, r7.xyzw
mov r6.x, cb0[18].z
mov r6.y, cb0[19].z
mov r6.z, cb0[20].z
mov r6.w, cb0[21].z
dp4 r2.z, r6.xyzw, r7.xyzw
add r6.xyz, -cb0[23].xyzx, cb0[24].xyzx
mov r7.x, cb0[14].z
mov r7.y, cb0[15].z
mov r7.z, cb0[16].z
mul r8.xyz, r4.zzzz, r7.xyzx
mul r7.xyz, r5.zzzz, r7.xyzx
mov r9.x, cb0[14].y
mov r9.y, cb0[15].y
mov r9.z, cb0[16].y
mad r4.yzw, r9.xxyz, r4.yyyy, r8.xxyz
mad r7.xyz, r9.xyzx, r5.yyyy, r7.xyzx
mov r8.x, cb0[14].x
mov r8.y, cb0[15].x
mov r8.z, cb0[16].x
mad r4.xyz, r8.xyzx, r4.xxxx, r4.yzwy
mad r7.xyz, r8.xyzx, r5.xxxx, r7.xyzx
mul_sat r8.xyz, r4.xyzx, l(1000000.000000, 1000000.000000, 1000000.000000, 0.000000)
mad r6.xyz, r8.xyzx, r6.xyzx, cb0[23].xyzx
add r6.xyz, -r2.xyzx, r6.xyzx
div r8.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzx
mul r6.xyz, r6.xyzx, r8.xyzx
min r1.w, r6.y, r6.x
min r1.w, r6.z, r1.w
mad r2.xyz, r4.xyzx, r1.wwww, r2.xyzx
sample_l r2.xyzw, r2.xyzx, t3.xyzw, s3, r0.w
mul r0.w, r2.w, l(6.000000)
mul r4.x, r0.w, r0.w
mul r4.y, r0.w, r4.x
dp2 r1.w, l(0.753200, 0.246800, 0.000000, 0.000000), r4.xyxx
mad r1.w, -r2.w, l(6.000000), r1.w
mad r0.w, r1.w, l(0.922443926), r0.w
mad r2.xyz, r2.xyzx, r0.wwww, -r1.xyzx
mad r1.xyz, cb0[33].wwww, r2.xyzx, r1.xyzx
add r2.xyz, -v2.xyzx, r11.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3_sat r0.w, r5.xyzx, r2.xyzx
add r2.x, -r0.w, l(1.000000)
mul r0.w, r2.x, r2.x
mul r2.z, r2.x, r0.w
mad r4.xy, cb0[6].zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
dp2 r5.y, r2.xzxx, r4.xyxx
mov r2.y, l(1.000000)
dp2 r5.x, r2.yxyy, r4.xyxx
dp2 r0.w, r5.xyxx, r4.xyxx
mad r0.w, r0.w, l(0.950000), l(0.050000)
mul r1.w, r0.w, cb0[6].x
sqrt r1.w, r1.w
mad r0.w, r0.w, cb0[6].x, -r1.w
mad r0.w, r0.w, l(0.922443926), r1.w
add r2.xyz, cb0[12].xywx, -cb0[34].xywx
mad r2.xyz, cb0[33].wwww, r2.xyzx, cb0[34].xywx
mul r0.w, r0.w, r2.z
mul r0.xyz, r0.wwww, r0.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mad r1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
sample r1.xyzw, r1.xyxx, t2.xyzw, s2
mul r1.xyz, r1.xyzx, cb0[10].xyzx
mul r0.w, r1.w, cb0[11].y
mul r1.xyz, r1.xyzx, cb0[11].xxxx
mad r4.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r4.xyzw, r4.xyxx, t0.xyzw, s0
mul r4.xyz, r4.xyzx, cb0[4].xyzx
mul r4.xyz, r2.zzzz, r4.xyzx
mul r5.xyz, r0.wwww, r4.xyzx
mad r1.xyz, r1.xyzx, r2.zzzz, r5.xyzx
mul r2.xy, r2.xyxx, cb0[13].zwzz
mad r0.xyz, r0.xyzx, r2.yyyy, r1.xyzx
dp3 r0.w, r7.xyzx, r7.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r7.xyzx
mad r2.yzw, cb0[26].xxyz, r1.yyyy, cb0[25].xxyz
mad r2.yzw, cb0[27].xxyz, r1.zzzz, r2.yyzw
mad r2.yzw, cb0[28].xxyz, r1.xxxx, r2.yyzw
mul r5.xyz, r1.xzxx, r1.yyzy
mad r2.yzw, cb0[29].xxyz, r5.xxxx, r2.yyzw
mad r2.yzw, cb0[30].xxyz, r5.yyyy, r2.yyzw
mad r2.yzw, cb0[32].xxyz, r5.zzzz, r2.yyzw
mul r1.yz, r1.yyzy, r1.yyzy
mad r0.w, r1.x, r1.x, -r1.y
mad r1.x, r1.z, l(3.000000), l(-1.000000)
mad r1.xyz, cb0[31].xyzx, r1.xxxx, r2.yzwy
mad r1.xyz, cb0[33].xyzx, r0.wwww, r1.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r2.yzw, r0.wwww, r3.xxyz
mad r3.xyz, cb0[48].xyzx, r2.zzzz, cb0[47].xyzx
mad r3.xyz, cb0[49].xyzx, r2.wwww, r3.xyzx
mad r3.xyz, cb0[50].xyzx, r2.yyyy, r3.xyzx
mul r5.xyz, r2.ywyy, r2.zzwz
mad r3.xyz, cb0[51].xyzx, r5.xxxx, r3.xyzx
mad r3.xyz, cb0[52].xyzx, r5.yyyy, r3.xyzx
mad r3.xyz, cb0[54].xyzx, r5.zzzz, r3.xyzx
mul r2.zw, r2.zzzw, r2.zzzw
mad r0.w, r2.y, r2.y, -r2.z
mad r1.w, r2.w, l(3.000000), l(-1.000000)
mad r2.yzw, cb0[53].xxyz, r1.wwww, r3.xxyz
mad r2.yzw, cb0[55].xxyz, r0.wwww, r2.yyzw
add r1.xyz, |r1.xyzx|, -|r2.yzwy|
mad r1.xyz, cb0[33].wwww, r1.xyzx, |r2.yzwy|
mul r1.xyz, r4.xyzx, r1.xyzx
log r2.yzw, r4.xxyz
mad r0.xyz, r1.xyzx, r2.xxxx, r0.xyzx
mad r1.xyz, r0.xyzx, l(0.305306017, 0.305306017, 0.305306017, 0.000000), l(0.682171106, 0.682171106, 0.682171106, 0.000000)
mad r1.xyz, r0.xyzx, r1.xyzx, l(0.0125228781, 0.0125228781, 0.0125228781, 0.000000)
mul r1.xyz, r0.xyzx, r1.xyzx
ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[56].y
movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
mul r0.xyz, r0.xyzx, l(0.0103092780, 0.0103092780, 0.0103092780, 0.000000)
max r0.w, r0.y, r0.x
max r1.x, r0.z, l(0.020000)
max r0.w, r0.w, r1.x
mul r0.w, r0.w, l(255.000000)
round_pi r0.w, r0.w
mul r1.w, r0.w, l(0.00392156886)
div r1.xyz, r0.xyzx, r1.wwww
mov_sat r0.x, cb0[55].w
mul r0.xyz, r2.yzwy, r0.xxxx
exp r0.xyz, r0.xyzx
min r0.xyz, r0.xyzx, cb0[56].xxxx
mov r0.w, l(1.000000)
movc r0.xyzw, cb2[1].xxxx, r0.xyzw, l(0,0,0,0)
movc o0.xyzw, cb2[1].yyyy, r1.xyzw, r0.xyzw
ret
// Approximately 0 instruction slots used