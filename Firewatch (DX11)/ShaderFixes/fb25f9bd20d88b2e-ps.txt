// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed fb25f9bd20d88b2e-ps.txt
// 3DMigoto: fb25f9bd20d88b2e |    Unity headers extracted from Marmoset_Transparent_Cutout_Bumped Diffuse IBL Cross Cards
//    Shader "Marmoset/Transparent/Cutout/Bumped Diffuse IBL Cross Cards" {
//      Fallback "Transparent/Cutout/Diffuse"
//      SubShader 2/2 {
//        LOD 350
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//        Pass 2/6 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Marmoset_Transparent_Cutout_Bumped Diffuse IBL Cross Cards:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 57 3 4
//   undeciphered1a: 8
//   Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "MARMO_SKY_BLEND_ON" }
//   undeciphered2: 1 4 6 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 912
//   Vector 32 [_LightColor0]
//   Vector 144 [_Color]
//   Vector 160 [_MainTex_ST]
//   Float 192 [_Cutoff]
//   Vector 208 [_ExposureIBL]
//   Float 556 [_BlendWeightIBL]
//   Vector 560 [_ExposureIBL1]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 16 [_LightPositionRange]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 384
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 3
//   SetTexture 1 [_ShadowMapTexture] CUBE 1
//   SetTexture 2 [_LightTexture0] 2D 2
//   SetTexture 3 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.2 on Thu Apr 26 06:11:23 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 3      w        1     NONE   float      w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyzw        3     NONE   float   xy
// TEXCOORD                 4   xy          4     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[36], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed fb25f9bd20d88b2e-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v2.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r0.w, cb0[13].w, -cb0[35].w
mad r0.w, cb0[34].w, r0.w, cb0[35].w
mad r1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
sample r1.xyzw, r1.xyxx, t0.xyzw, s3
mul r1.xyz, r1.xyzx, cb0[9].xyzx
mul r1.xyz, r0.wwww, r1.xyzx
mad r0.w, r1.w, cb0[9].w, v1.w
add r0.w, r0.w, -cb0[12].x
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
mul r2.xyz, v2.yyyy, cb0[5].xyzx
mad r2.xyz, cb0[4].xyzx, v2.xxxx, r2.xyzx
mad r2.xyz, cb0[6].xyzx, v2.zzzz, r2.xyzx
add r2.xyz, r2.xyzx, cb0[7].xyzx
add r3.xyz, -v2.xyzx, r9.xyzx
mov r4.x, cb4[9].z
mov r4.y, cb4[10].z
mov r4.z, cb4[11].z
dp3 r0.w, r3.xyzx, r4.xyzx
add r3.xyz, v2.xyzx, -cb3[25].xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
sqrt r1.w, r1.w
add r1.w, -r0.w, r1.w
mad r0.w, cb3[25].w, r1.w, r0.w
mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
eq r1.w, cb5[0].x, l(1.000000)
if_nz r1.w
  eq r2.w, cb5[0].y, l(1.000000)
  mul r3.xyz, v2.yyyy, cb5[2].xyzx
  mad r3.xyz, cb5[1].xyzx, v2.xxxx, r3.xyzx
  mad r3.xyz, cb5[3].xyzx, v2.zzzz, r3.xyzx
  add r3.xyz, r3.xyzx, cb5[4].xyzx
  movc r3.xyz, r2.wwww, r3.xyzx, v2.xyzx
  add r3.xyz, r3.xyzx, -cb5[6].xyzx
  mul r3.yzw, r3.xxyz, cb5[5].xxyz
  mad r2.w, r3.y, l(0.250000), l(0.750000)
  mad r3.y, cb5[0].z, l(0.500000), l(0.750000)
  max r3.x, r2.w, r3.y
  sample r3.xyzw, r3.xzwx, t3.xyzw, s0
else
  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r3.xyzw, cb2[45].xyzw
lt r3.x, r0.w, l(0.990000)
if_nz r3.x
  add r3.xyz, v2.xyzx, -cb2[1].xyzx
  dp3 r3.w, r3.xyzx, r3.xyzx
  sqrt r3.w, r3.w
  mul r3.w, r3.w, cb2[1].w
  mul r3.w, r3.w, l(0.970000)
  add r4.xyz, r3.xyzx, l(0.00781250000, 0.00781250000, 0.00781250000, 0.000000)
  sample_l r4.xyzw, r4.xyzx, t1.xyzw, s1, l(0.000000)
  add r4.yzw, r3.xxyz, l(0.000000, -0.00781250000, -0.00781250000, 0.00781250000)
  sample_l r5.xyzw, r4.yzwy, t1.xyzw, s1, l(0.000000)
  add r4.yzw, r3.xxyz, l(0.000000, -0.00781250000, 0.00781250000, -0.00781250000)
  sample_l r6.xyzw, r4.yzwy, t1.xyzw, s1, l(0.000000)
  add r3.xyz, r3.xyzx, l(0.00781250000, -0.00781250000, -0.00781250000, 0.000000)
  sample_l r7.xyzw, r3.xyzx, t1.yzwx, s1, l(0.000000)
  mov r7.x, r4.x
  mov r7.y, r5.x
  mov r7.z, r6.x
  lt r3.xyzw, r7.xyzw, r3.wwww
  movc r3.xyzw, r3.xyzw, cb3[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
  dp4 r3.x, r3.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
else
  mov r3.x, l(1.000000)
endif
add_sat r0.w, r0.w, r3.x
min r2.w, r0.w, r2.w
movc r0.w, r1.w, r2.w, r0.w
dp3 r1.w, r2.xyzx, r2.xyzx
sample r2.xyzw, r1.wwww, t2.xyzw, s2
mul r0.w, r0.w, r2.x
dp3_sat r0.x, v1.xyzx, r0.xyzx
add r0.x, r0.x, r0.x
mul r0.xyz, r1.xyzx, r0.xxxx
mul r0.xyz, r0.xyzx, cb0[2].xyzx
mul o0.xyz, r0.wwww, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used