// hlsltool.py -I ../.. --auto-fix-vertex-halo --only-autofixed --fxc /home/dss/fxc.exe 3e8bdbf716d1e20c-vs_replace.txt
// 3DMigoto: 3e8bdbf716d1e20c | Unity headers extracted from Marmoset Bumped Diffuse IBL Trees.shader
// Shader "Marmoset/Transparent/Cutout/Bumped Diffuse IBL Trees" {
//   Properties {
//    _Color ("Diffuse Color", Color) = (1,1,1,1)
//    _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//    _MainTex ("Diffuse(RGB) Alpha(A)", 2D) = "white" { }
//    _BumpMap ("Normalmap", 2D) = "bump" { }
//    _GIBoost ("Global Illumination Scale", Float) = 1
//    _OcclusionLength ("Occlusion Length", Float) = 1
//    _BrightnessOffset ("Brightness Scalar", Float) = 1
//    _BrightnessAdd ("Brightness Offset", Float) = 0
//   }
//   SubShader 2/2 {
//     LOD 350
//     Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//     Pass 2/6 {
//       Name "FORWARD"
//       Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//       ZWrite Off
//       Cull Off
//       Blend One One
//       GpuProgramID 587326
//       Program "vp" {
//         SubProgram "d3d11 " {
//           Keywords { "FOG_EXP2" "MARMO_SKY_BLEND_OFF" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "SPOT" }
//           Bind "vertex" Vertex
//           Bind "color" Color
//           Bind "normal" Normal
//           Bind "texcoord" TexCoord0
//           Bind "tangent" TexCoord4
//           ConstBuffer "$Globals" 688
//           Float 208 [_OcclusionLength]
//           Float 212 [_BrightnessOffset]
//           Float 216 [_BrightnessAdd]
//           Float 220 [_SwayingRandomnessOffset]
//           Vector 656 [_WindDirectionFrequencyIntensity]
//           Vector 672 [_WindLeafParameters]
//           ConstBuffer "UnityPerCamera" 144
//           Vector 0 [_Time]
//           ConstBuffer "UnityShadows" 416
//           Matrix 128 [unity_World2Shadow0]
//           Matrix 192 [unity_World2Shadow1]
//           Matrix 256 [unity_World2Shadow2]
//           Matrix 320 [unity_World2Shadow3]
//           ConstBuffer "UnityPerDraw" 352
//           Matrix 0 [glstate_matrix_mvp]
//           Matrix 64 [glstate_matrix_modelview0]
//           Matrix 192 [_Object2World]
//           Matrix 256 [_World2Object]
//           Vector 336 [unity_WorldTransformParams]
//           BindCB "$Globals" 0
//           BindCB "UnityPerCamera" 1
//           BindCB "UnityShadows" 2
//           BindCB "UnityPerDraw" 3
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py
//
// Shader model vs_4_0

// ---- Created with 3Dmigoto v1.2.31 on Sat Feb 20 12:33:42 2016
cbuffer cb3 : register(b3)
{
  float4 cb3[22];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[12];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[1];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[43];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  float4 v1 : TANGENT0,
  float3 v2 : NORMAL0,
  float4 v3 : TEXCOORD0,
  float4 v4 : TEXCOORD1,
  float4 v5 : TEXCOORD2,
  float4 v6 : TEXCOORD3,
  float4 v7 : COLOR0,
  out float4 o0 : SV_POSITION0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3,
  out float4 o5 : TEXCOORD4,
  out float2 o6 : TEXCOORD5,
  out float p6 : TEXCOORD7,
  out float4 o7 : TEXCOORD6)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = cb3[13].xyz * v0.yyy;
  r0.xyz = cb3[12].xyz * v0.xxx + r0.xyz;
  r0.xyz = cb3[14].xyz * v0.zzz + r0.xyz;
  r0.xyz = cb3[15].xyz * v0.www + r0.xyz;
  r0.w = dot(r0.xz, float2(1,1));
  r0.x = dot(r0.xyz, float3(1,10,100));
  r0.y = cb0[13].w * r0.w;
  r0.y = cb1[0].y * cb0[41].z + r0.y;
  r0.y = sin(r0.y);
  r1.xz = cb0[41].xy * r0.yy;
  r0.y = cb1[0].y * cb0[42].x;
  r0.x = r0.x * cb0[42].y + r0.y;
  r0.xy = sin(r0.xy);
  r0.yzw = v2.xyz * r0.yyy;
  r2.xyz = v2.xyz * r0.xxx;
  r3.xy = cb0[42].zw * v7.zy;
  r2.xyz = r3.xxx * r2.xyz;
  r1.y = 0;
  r0.x = cb0[41].w * v7.x;
  r1.xyz = r1.xyz * r0.xxx + r2.xyz;
  r0.xyz = r0.yzw * r3.yyy + r1.xyz;
  r0.xyz = v0.xyz + r0.xyz;
  r1.xyzw = cb3[1].xyzw * r0.yyyy;
  r1.xyzw = cb3[0].xyzw * r0.xxxx + r1.xyzw;
  r1.xyzw = cb3[2].xyzw * r0.zzzz + r1.xyzw;
  r1.xyzw = cb3[3].xyzw * v0.wwww + r1.xyzw;
  o0.xyzw = r1.xyzw;

// Automatic vertex shader halo fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --auto-fix-vertex-halo --only-autofixed --fxc /home/dss/fxc.exe 3e8bdbf716d1e20c-vs_replace.txt
float4 stereo = StereoParams.Load(0);
if (r1.w != 1.0) { r1.x += stereo.x * (r1.w - stereo.y); }

  p6.x = r1.z;
  r1.y = cb3[16].x * v2.x;
  r1.z = cb3[17].x * v2.x;
  r1.x = cb3[18].x * v2.x;
  r2.y = cb3[16].y * v2.y;
  r2.z = cb3[17].y * v2.y;
  r2.x = cb3[18].y * v2.y;
  r1.xyz = r2.xyz + r1.xyz;
  r2.y = cb3[16].z * v2.z;
  r2.z = cb3[17].z * v2.z;
  r2.x = cb3[18].z * v2.z;
  r1.xyz = r2.xyz + r1.xyz;
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = rsqrt(r0.w);
  r1.xyz = r1.xyz * r0.www;
  o1.z = r1.y;
  r2.xyz = cb3[13].yzx * v1.yyy;
  r2.xyz = cb3[12].yzx * v1.xxx + r2.xyz;
  r2.xyz = cb3[14].yzx * v1.zzz + r2.xyz;
  r0.w = dot(r2.xyz, r2.xyz);
  r0.w = rsqrt(r0.w);
  r2.xyz = r2.xyz * r0.www;
  r3.xyz = r2.xyz * r1.xyz;
  r3.xyz = r1.zxy * r2.yzx + -r3.xyz;
  r0.w = cb3[21].w * v1.w;
  r3.xyz = r3.xyz * r0.www;
  o1.y = r3.x;
  o1.x = r2.z;
  o2.z = r1.z;
  o3.z = r1.x;
  o2.x = r2.x;
  o3.x = r2.y;
  o2.y = r3.y;
  o3.y = r3.z;
  r1.xyz = cb3[13].xyz * r0.yyy;
  r1.xyz = cb3[12].xyz * r0.xxx + r1.xyz;
  r1.xyz = cb3[14].xyz * r0.zzz + r1.xyz;
  o4.xyz = cb3[15].xyz * v0.www + r1.xyz;
  o5.xy = v3.xy;
  o5.zw = float2(0,0);
  r0.w = cb3[5].z * r0.y;
  r0.w = cb3[4].z * r0.x + r0.w;
  r0.w = cb3[6].z * r0.z + r0.w;
  r0.w = cb3[7].z * v0.w + r0.w;
  r0.w = 0.0399999991 * abs(r0.w);
  r0.w = min(0.649999976, r0.w);
  r1.x = r0.w * r0.w;
  o6.x = r1.x * r0.w;
  r0.w = log2(v3.y);
  r0.w = cb0[13].x * r0.w;
  r0.w = exp2(r0.w);
  o6.y = saturate(r0.w * cb0[13].y + cb0[13].z);
  r1.xyzw = cb3[13].xyzw * r0.yyyy;
  r1.xyzw = cb3[12].xyzw * r0.xxxx + r1.xyzw;
  r0.xyzw = cb3[14].xyzw * r0.zzzz + r1.xyzw;
  r0.xyzw = cb3[15].xyzw * v0.wwww + r0.xyzw;
  r1.xyzw = cb2[9].xyzw * r0.yyyy;
  r1.xyzw = cb2[8].xyzw * r0.xxxx + r1.xyzw;
  r1.xyzw = cb2[10].xyzw * r0.zzzz + r1.xyzw;
  o7.xyzw = cb2[11].xyzw * r0.wwww + r1.xyzw;
  return;
}

/****************************** COMPILE WARNINGS ******************************
C:\Steam\SteamApps\common\Firewatch\ShaderFixes\3e8bdbf716d1e20c-vs_replace.txt(107,14-15): warning X3578: Output value 'o1' is not completely initialized
C:\Steam\SteamApps\common\Firewatch\ShaderFixes\3e8bdbf716d1e20c-vs_replace.txt(108,14-15): warning X3578: Output value 'o2' is not completely initialized
C:\Steam\SteamApps\common\Firewatch\ShaderFixes\3e8bdbf716d1e20c-vs_replace.txt(109,14-15): warning X3578: Output value 'o3' is not completely initialized
C:\Steam\SteamApps\common\Firewatch\ShaderFixes\3e8bdbf716d1e20c-vs_replace.txt(110,14-15): warning X3578: Output value 'o4' is not completely initialized

****************************** COMPILE WARNINGS ******************************/
