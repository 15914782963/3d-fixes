// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5dacde1857c647e4-ps.txt
// 3DMigoto: 5dacde1857c647e4 |    Unity headers extracted from Marmoset_Transparent_Cutout_Specular IBL
//    Shader "Marmoset/Transparent/Cutout/Specular IBL" {
//      Fallback "Transparent/Cutout/Specular"
//      SubShader 2/2 {
//        LOD 250
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//        Pass 1/6 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Marmoset_Transparent_Cutout_Specular IBL:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 179 3 2
//   undeciphered1a: 18
//   Keywords { "DIRECTIONAL" "FOG_EXP2" "MARMO_SKY_BLEND_ON" "MARMO_BOX_PROJECTION_ON" }
//   undeciphered2: 1 5 5 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 864
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Vector 64 [_Color]
//   Vector 80 [_MainTex_ST]
//   Float 96 [_SpecInt]
//   Float 100 [_Shininess]
//   Float 104 [_Fresnel]
//   Vector 112 [_SpecTex_ST]
//   Float 144 [_Cutoff]
//   Vector 160 [_ExposureIBL]
//   Vector 184 [_UniformOcclusion] 2
//   Vector 336 [_SkyMin] 3
//   Vector 352 [_SkyMax] 3
//   Vector 368 [_SH0] 3
//   Vector 384 [_SH1] 3
//   Vector 400 [_SH2] 3
//   Vector 416 [_SH3] 3
//   Vector 432 [_SH4] 3
//   Vector 448 [_SH5] 3
//   Vector 464 [_SH6] 3
//   Vector 480 [_SH7] 3
//   Vector 496 [_SH8] 3
//   Float 508 [_BlendWeightIBL]
//   Vector 512 [_ExposureIBL1]
//   Vector 688 [_SkyMin1] 3
//   Vector 704 [_SkyMax1] 3
//   Vector 720 [_SH01] 3
//   Vector 736 [_SH11] 3
//   Vector 752 [_SH21] 3
//   Vector 768 [_SH31] 3
//   Vector 784 [_SH41] 3
//   Vector 800 [_SH51] 3
//   Vector 816 [_SH61] 3
//   Vector 832 [_SH71] 3
//   Vector 848 [_SH81] 3
//   Matrix 192 [_SkyMatrix]
//   Matrix 256 [_InvSkyMatrix]
//   Matrix 544 [_SkyMatrix1]
//   Matrix 608 [_InvSkyMatrix1]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_SpecTex] 2D 2
//   SetTexture 2 [_SpecCubeIBL] CUBE 3
//   SetTexture 3 [_SpecCubeIBL1] CUBE 4
//   SetTexture 4 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.2 on Thu Apr 26 06:08:28 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyzw        3     NONE   float   xy
// TEXCOORD                 3   xyzw        4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xy          6     NONE   float
// TEXCOORD                 6     z         6     NONE   float     z
// TEXCOORD                 7   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[54], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.z
dcl_output o0.xyzw
dcl_temps 20
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r18.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5dacde1857c647e4-ps.txt

mul r18.w, -r18.x, r18.y
mad r19.xyz, -r18.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v2.xyzx, r19.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, cb0[10].xywx, -cb0[32].xywx
mad r2.xyz, cb0[31].wwww, r2.xyzx, cb0[32].xywx
mul r2.xy, r2.xyxx, cb0[11].zwzz
mad r3.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r3.xyzw, r3.xyxx, t0.xyzw, s1
mul r3.xyz, r3.xyzx, cb0[4].xyzx
mul r3.xyz, r2.zzzz, r3.xyzx
mad r1.w, r3.w, cb0[4].w, -cb0[9].x
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
dp3 r1.w, v1.xyzx, v1.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, v1.xyzx
mad r5.xy, v3.xyxx, cb0[7].xyxx, cb0[7].zwzz
sample r5.xyzw, r5.xyxx, t1.xyzw, s2
dp3_sat r1.x, r4.xyzx, r1.xyzx
add r1.x, -r1.x, l(1.000000)
mul r1.w, r1.x, r1.x
mul r1.z, r1.x, r1.w
mov r1.y, l(1.000000)
mad r6.xy, cb0[6].zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
dp2 r7.x, r1.yxyy, r6.xyxx
dp2 r7.y, r1.xzxx, r6.xyxx
dp2 r1.x, r7.xyxx, r6.xyxx
mad r1.x, r1.x, l(0.950000), l(0.050000)
mul r1.y, r1.x, cb0[6].x
sqrt r1.y, r1.y
mad r1.x, r1.x, cb0[6].x, -r1.y
mad r1.x, r1.x, l(0.922443926), r1.y
mul r1.yzw, r5.xxyz, cb0[3].xxyz
mul r1.x, r2.z, r1.x
mul r1.xyz, r1.xxxx, r1.yzwy
add r1.w, -r5.w, l(1.000000)
mad r2.zw, -r1.wwww, r1.wwww, l(0.000000, 0.000000, 1.000000, 8.000000)
mad r1.w, -cb0[6].y, r2.z, r2.w
add r2.z, -r1.w, l(8.000000)
exp r2.z, r2.z
mad r2.w, r2.z, l(0.159154937), l(0.318309873)
mul r5.xyz, r1.xyzx, r2.wwww
add r6.xyz, -v4.xyzx, r19.xyzx
dp3 r2.w, r6.xyzx, r6.xyzx
rsq r2.w, r2.w
mul r6.xyz, r2.wwww, r6.xyzx
dp3 r2.w, -r6.xyzx, r4.xyzx
add r2.w, r2.w, r2.w
mad r6.xyz, r4.xyzx, -r2.wwww, -r6.xyzx
mov r7.x, cb0[34].x
mov r7.y, cb0[35].x
mov r7.z, cb0[36].x
mov r8.x, cb0[34].y
mov r8.y, cb0[35].y
mov r8.z, cb0[36].y
mov r9.x, cb0[34].z
mov r9.y, cb0[35].z
mov r9.z, cb0[36].z
mul r10.xyz, r6.zzzz, r9.xyzx
mad r10.xyz, r8.xyzx, r6.yyyy, r10.xyzx
mad r10.xyz, r7.xyzx, r6.xxxx, r10.xyzx
div r11.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r10.xyzx
mov r12.x, cb0[38].x
mov r12.y, cb0[39].x
mov r12.z, cb0[40].x
mov r12.w, cb0[41].x
mov r13.xyz, v4.xyzx
mov r13.w, l(1.000000)
dp4 r12.x, r12.xyzw, r13.xyzw
mov r14.x, cb0[38].y
mov r14.y, cb0[39].y
mov r14.z, cb0[40].y
mov r14.w, cb0[41].y
dp4 r12.y, r14.xyzw, r13.xyzw
mov r14.x, cb0[38].z
mov r14.y, cb0[39].z
mov r14.z, cb0[40].z
mov r14.w, cb0[41].z
dp4 r12.z, r14.xyzw, r13.xyzw
mul_sat r14.xyz, r10.xyzx, l(1000000.000000, 1000000.000000, 1000000.000000, 0.000000)
add r15.xyz, -cb0[43].xyzx, cb0[44].xyzx
mad r14.xyz, r14.xyzx, r15.xyzx, cb0[43].xyzx
add r14.xyz, -r12.xyzx, r14.xyzx
mul r11.xyz, r11.xyzx, r14.xyzx
min r2.w, r11.y, r11.x
min r2.w, r11.z, r2.w
mad r10.xyz, r10.xyzx, r2.wwww, r12.xyzx
mov r11.x, cb0[12].x
mov r11.y, cb0[13].x
mov r11.z, cb0[14].x
mov r12.x, cb0[12].y
mov r12.y, cb0[13].y
mov r12.z, cb0[14].y
mov r14.x, cb0[12].z
mov r14.y, cb0[13].z
mov r14.z, cb0[14].z
mul r15.xyz, r6.zzzz, r14.xyzx
mad r6.yzw, r12.xxyz, r6.yyyy, r15.xxyz
mad r6.xyz, r11.xyzx, r6.xxxx, r6.yzwy
div r15.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r6.xyzx
mov r16.x, cb0[16].x
mov r16.y, cb0[17].x
mov r16.z, cb0[18].x
mov r16.w, cb0[19].x
dp4 r16.x, r16.xyzw, r13.xyzw
mov r17.x, cb0[16].y
mov r17.y, cb0[17].y
mov r17.z, cb0[18].y
mov r17.w, cb0[19].y
dp4 r16.y, r17.xyzw, r13.xyzw
mov r17.x, cb0[16].z
mov r17.y, cb0[17].z
mov r17.z, cb0[18].z
mov r17.w, cb0[19].z
dp4 r16.z, r17.xyzw, r13.xyzw
mul_sat r13.xyz, r6.xyzx, l(1000000.000000, 1000000.000000, 1000000.000000, 0.000000)
add r17.xyz, -cb0[21].xyzx, cb0[22].xyzx
mad r13.xyz, r13.xyzx, r17.xyzx, cb0[21].xyzx
add r13.xyz, -r16.xyzx, r13.xyzx
mul r13.xyz, r15.xyzx, r13.xyzx
min r2.w, r13.y, r13.x
min r2.w, r13.z, r2.w
mad r6.xyz, r6.xyzx, r2.wwww, r16.xyzx
sample_l r6.xyzw, r6.xyzx, t2.xyzw, s3, r1.w
mul r2.w, r6.w, l(6.000000)
mul r13.x, r2.w, r2.w
mul r13.y, r2.w, r13.x
dp2 r3.w, l(0.753200, 0.246800, 0.000000, 0.000000), r13.xyxx
mad r3.w, -r6.w, l(6.000000), r3.w
mad r2.w, r3.w, l(0.922443926), r2.w
sample_l r10.xyzw, r10.xyzx, t3.xyzw, s4, r1.w
mul r1.w, r10.w, l(6.000000)
mul r13.x, r1.w, r1.w
mul r13.y, r1.w, r13.x
dp2 r3.w, l(0.753200, 0.246800, 0.000000, 0.000000), r13.xyxx
mad r3.w, -r10.w, l(6.000000), r3.w
mad r1.w, r3.w, l(0.922443926), r1.w
mul r10.xyz, r1.wwww, r10.xyzx
mad r6.xyz, r6.xyzx, r2.wwww, -r10.xyzx
mad r6.xyz, cb0[31].wwww, r6.xyzx, r10.xyzx
mul r1.xyz, r1.xyzx, r6.xyzx
mul r6.xyz, r4.zzzz, r14.xyzx
mad r6.xyz, r12.xyzx, r4.yyyy, r6.xyzx
mad r6.xyz, r11.xyzx, r4.xxxx, r6.xyzx
dp3 r1.w, r6.xyzx, r6.xyzx
rsq r1.w, r1.w
mul r6.xyz, r1.wwww, r6.xyzx
mad r10.xyz, cb0[24].xyzx, r6.yyyy, cb0[23].xyzx
mad r10.xyz, cb0[25].xyzx, r6.zzzz, r10.xyzx
mad r10.xyz, cb0[26].xyzx, r6.xxxx, r10.xyzx
mul r11.xyz, r6.xzxx, r6.yyzy
mad r10.xyz, cb0[27].xyzx, r11.xxxx, r10.xyzx
mad r10.xyz, cb0[28].xyzx, r11.yyyy, r10.xyzx
mad r10.xyz, cb0[30].xyzx, r11.zzzz, r10.xyzx
mul r6.yz, r6.yyzy, r6.yyzy
mad r1.w, r6.z, l(3.000000), l(-1.000000)
mad r10.xyz, cb0[29].xyzx, r1.wwww, r10.xyzx
mad r1.w, r6.x, r6.x, -r6.y
mad r6.xyz, cb0[31].xyzx, r1.wwww, r10.xyzx
mul r9.xyz, r4.zzzz, r9.xyzx
mad r4.yzw, r8.xxyz, r4.yyyy, r9.xxyz
mad r4.xyz, r7.xyzx, r4.xxxx, r4.yzwy
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx
mad r7.xyz, cb0[46].xyzx, r4.yyyy, cb0[45].xyzx
mad r7.xyz, cb0[47].xyzx, r4.zzzz, r7.xyzx
mad r7.xyz, cb0[48].xyzx, r4.xxxx, r7.xyzx
mul r8.xyz, r4.xzxx, r4.yyzy
mad r7.xyz, cb0[49].xyzx, r8.xxxx, r7.xyzx
mad r7.xyz, cb0[50].xyzx, r8.yyyy, r7.xyzx
mad r7.xyz, cb0[52].xyzx, r8.zzzz, r7.xyzx
mul r4.yz, r4.yyzy, r4.yyzy
mad r1.w, r4.z, l(3.000000), l(-1.000000)
mad r7.xyz, cb0[51].xyzx, r1.wwww, r7.xyzx
mad r1.w, r4.x, r4.x, -r4.y
mad r4.xyz, cb0[53].xyzx, r1.wwww, r7.xyzx
add r6.xyz, -|r4.xyzx|, |r6.xyzx|
mad r4.xyz, cb0[31].wwww, r6.xyzx, |r4.xyzx|
mul r4.xyz, r3.xyzx, r4.xyzx
mul r4.xyz, r2.xxxx, r4.xyzx
mad r1.xyz, r1.xyzx, r2.yyyy, r4.xyzx
eq r1.w, cb4[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb4[0].y, l(1.000000)
  mul r2.xyw, v2.yyyy, cb4[2].xyxz
  mad r2.xyw, cb4[1].xyxz, v2.xxxx, r2.xyxw
  mad r2.xyw, cb4[3].xyxz, v2.zzzz, r2.xyxw
  add r2.xyw, r2.xyxw, cb4[4].xyxz
  movc r2.xyw, r1.wwww, r2.xyxw, v2.xyxz
  add r2.xyw, r2.xyxw, -cb4[6].xyxz
  mul r4.yzw, r2.xxyw, cb4[5].xxyz
  mad r1.w, r4.y, l(0.250000), l(0.750000)
  mad r2.x, cb4[0].z, l(0.500000), l(0.750000)
  max r4.x, r1.w, r2.x
  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
else
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r1.w, r4.xyzw, cb2[45].xyzw
dp3 r2.x, cb2[0].xyzx, cb2[0].xyzx
rsq r2.x, r2.x
mul r2.xyw, r2.xxxx, cb2[0].xyxz
dp3_sat r3.w, v1.xyzx, r2.xywx
add r4.x, r3.w, r3.w
mul r4.xyz, r3.xyzx, r4.xxxx
mad r0.xyz, r0.xyzx, r0.wwww, r2.xywx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3_sat r0.x, v1.xyzx, r0.xyzx
add r0.y, r2.z, r2.z
log r0.x, r0.x
mul r0.x, r0.x, r0.y
exp r0.x, r0.x
mul r0.y, r3.w, l(10.000000)
min r0.y, r0.y, l(1.000000)
mul r0.x, r0.y, r0.x
mul r0.xyz, r0.xxxx, cb0[2].xyzx
mul r0.xyz, r0.xyzx, r5.xyzx
mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mad r0.xyz, r4.xyzx, cb0[2].xyzx, r0.xyzx
mul r0.xyz, r1.wwww, r0.xyzx
mad r0.xyz, r3.xyzx, v5.xyzx, r0.xyzx
add r0.xyz, r1.xyzx, r0.xyzx
div r0.w, v6.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb3[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used