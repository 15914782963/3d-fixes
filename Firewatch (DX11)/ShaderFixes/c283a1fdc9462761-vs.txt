// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed c283a1fdc9462761-vs.txt
// 3DMigoto: c283a1fdc9462761 |    Unity headers extracted from Marmoset Billboard Diffuse IBL.shader
//    Shader "Marmoset/Transparent/Cutout/Billboard Diffuse IBL" {
//      Properties {
//       _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Base (RGB) Trans (A)", 2D) = "white" { }
//       _Cutoff ("Alpha cutoff", Range(0.000000,1.000000)) = 0.500000
//      }
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "DisableBatching"="true" "RenderType"="TransparentCutout" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "DisableBatching"="true" "RenderType"="TransparentCutout" }
//          ColorMask RGB
//          GpuProgramID 38110
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 5
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Marmoset Billboard Diffuse IBL.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 64 0 0
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "MARMO_SKY_BLEND_OFF" }
//   undeciphered2: 1 0 3 0 0 0
//   undeciphered3: 9 2 0 0 3 4
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 720
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   Vector 656 [unity_SHBr]
//   Vector 672 [unity_SHBg]
//   Vector 688 [unity_SHBb]
//   Vector 704 [unity_SHC]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [unity_ObjectToWorld]
//   Matrix 256 [unity_WorldToObject]
//   BindCB "UnityPerCamera" 0
//   BindCB "UnityLighting" 1
//   BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Nov 05 21:05:11 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy w
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             4         2  ( FLT, FLT, FLT, FLT)
// c3         cb1            38         7  ( FLT, FLT, FLT, FLT)
// c10        cb2             0         4  ( FLT, FLT, FLT, FLT)
// c14        cb2            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c21, 1, -0.0187292993, 0.0742610022, -0.212114394
    def c22, 1.57072878, -2, 3.14159274, -6.28318548
    def c23, 0.159154937, 0.5, 0, 0.416666657
    def c24, 1.05499995, -0.0549999997, 1, 0
    def c25, -1.55009923e-006, -2.17013894e-005, 0.00260416674, 0.00026041668
    def c26, -0.020833334, -0.125, 1, 0.5
    dcl_texcoord v0
    dcl_texcoord3 v3
    mov r0.xz, c17
    add r0.xy, -r0.zxzw, c1.zxzw
    mul r0.zw, r0.xyyx, r0.xyyx
    add r0.z, r0.w, r0.z
    rsq r0.z, r0.z
    mul r0.xy, r0.z, r0
    abs r0.z, r0.x
    mad r0.w, r0.z, c21.y, c21.z
    mad r0.w, r0.w, r0.z, c21.w
    mad r0.w, r0.w, r0.z, c22.x
    add r0.z, -r0.z, c21.x
    rsq r0.z, r0.z
    rcp r0.z, r0.z
    mul r0.z, r0.z, r0.w
    mad r0.w, r0.z, c22.y, c22.z
    slt r1.xy, r0, -r0
    slt r0.x, -r0.y, r0.y
    add r0.x, -r1.y, r0.x
    mad r0.y, r0.w, r1.x, r0.z
    mad r0.y, r0.y, c23.x, c23.y
    frc r0.y, r0.y
    mad r0.y, r0.y, -c22.w, -c22.z
    sincos r1.xy, r0.y, c25, c26
    mul r0.y, r0.x, -r1.y
    mul r2.x, r0.x, r1.y
    mul r0.x, r0.y, v0.x
    mul r0.y, r1.x, v0.x
    mov r2.y, r1.x
    mul r1.xyz, v0.y, c19
    mad r0.yzw, c18.xxyz, r0.y, r1.xxyz
    mad r0.xyz, c20, r0.x, r0.yzww
    mul r1.xyz, r0.y, c15
    mad r1.xyz, c14, r0.x, r1
    mad r1.xyz, c16, r0.z, r1
    mad oT1.xyz, c17, v0.w, r1
    mul r1.xy, r2, r2
    add r0.w, r1.y, r1.x
    rsq r0.w, r0.w
    mul r1.xy, r0.w, r2
    mul r1.yzw, r1.y, c20.xxyz
    mad r1.xyz, c18, r1.x, r1.yzww
    mov r2.x, c18.y
    mov r2.y, c19.y
    mov r2.z, c20.y
    mul r2.xyz, r1.y, r2
    mov r3.x, c18.x
    mov r3.y, c19.x
    mov r3.z, c20.x
    mad r1.xyw, r3.xyzz, r1.x, r2.xyzz
    mov r2.x, c18.z
    mov r2.y, c19.z
    mov r2.z, c20.z
    mad r1.xyz, r2, r1.z, r1.xyww
    nrm r2.xyz, r1
    mul r0.w, r2.y, r2.y
    mad r0.w, r2.x, r2.x, -r0.w
    mul r1, r2.yzzx, r2.xyzz
    dp4 r3.x, c6, r1
    dp4 r3.y, c7, r1
    dp4 r3.z, c8, r1
    mad r1.xyz, c9, r0.w, r3
    mov r2.w, c21.x
    dp4 r3.x, c3, r2
    dp4 r3.y, c4, r2
    dp4 r3.z, c5, r2
    mov oT0.xyz, r2
    add r1.xyz, r1, r3
    max r1.xyz, r1, c23.z
    mov r1.w, c23.w
    lit r2, r1.xxww
    mov r2.x, r2.z
    lit r3, r1.yyww
    lit r1, r1.zzww
    mov r2.z, r1.z
    mov r2.y, r3.z
    mad r1.xyz, r2, c24.x, c24.y
    max oT3.xyz, r1, c23.z
    mul r1, r0.y, c11
    mad r1, c10, r0.x, r1
    mad r0, c12, r0.z, r1
    add r0, r0, c13
    mul r1.x, r0.y, c2.x
    mul r1.w, r1.x, c23.y
    mul r1.xz, r0.xyww, c23.y
    add oT4.xy, r1.z, r1.xwzw
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT4.zw, r0
    mul oT2, v3.xyxx, c24.zzww

// approximately 98 instruction slots used
vs_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[45], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_input v0.xyw
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output o5.xyzw
dcl_temps 10

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed c283a1fdc9462761-vs.txt
mov r6.xyzw, cb0[4].xyzw
mov r7.xyzw, l(0)
mul r7.x, -r5.x, r5.y
mul r9.xyzw, cb10[0].xyzw, r7.xxxx
mad r9.xyzw, cb10[1].xyzw, r7.yyyy, r9.xyzw
mad r9.xyzw, cb10[2].xyzw, r7.zzzz, r9.xyzw
mad r9.xyzw, cb10[3].xyzw, r7.wwww, r9.xyzw
mul r8.xyzw, cb11[12].xyzw, r9.xxxx
mad r8.xyzw, cb11[13].xyzw, r9.yyyy, r8.xyzw
mad r8.xyzw, cb11[14].xyzw, r9.zzzz, r8.xyzw
mad r8.xyzw, cb11[15].xyzw, r9.wwww, r8.xyzw
add r6.xyz, r6.xyz, -r8.xyz

add r0.xy, r6.xzxx, -cb2[15].xzxx
dp2 r0.z, r0.xyxx, r0.xyxx
rsq r0.z, r0.z
mul r0.xy, r0.zzzz, r0.xyxx
mad r0.z, |r0.y|, l(-0.0187292993), l(0.074261)
mad r0.z, r0.z, |r0.y|, l(-0.212114394)
mad r0.z, r0.z, |r0.y|, l(1.57072878)
add r0.w, -|r0.y|, l(1.000000)
sqrt r0.w, r0.w
mul r1.x, r0.w, r0.z
mad r1.x, r1.x, l(-2.000000), l(3.14159274)
lt r0.y, r0.y, -r0.y
and r0.y, r0.y, r1.x
mad r0.y, r0.z, r0.w, r0.y
sincos r1.x, r2.x, r0.y
lt r0.y, l(0.000000), r0.x
lt r0.x, r0.x, l(0.000000)
iadd r0.x, -r0.y, r0.x
itof r0.x, r0.x
mul r0.y, r0.x, -r1.x
mul r1.x, r0.x, r1.x
mul r0.x, r0.y, v0.x
mul r0.y, r2.x, v0.x
mov r1.y, r2.x
mul r2.xyz, v0.yyyy, cb2[17].xyzx
mad r0.yzw, cb2[16].xxyz, r0.yyyy, r2.xxyz
mad r0.xyz, cb2[18].xyzx, r0.xxxx, r0.yzwy
mul r2.xyzw, r0.yyyy, cb2[1].xyzw
mad r2.xyzw, cb2[0].xyzw, r0.xxxx, r2.xyzw
mad r2.xyzw, cb2[2].xyzw, r0.zzzz, r2.xyzw
add r2.xyzw, r2.xyzw, cb2[3].xyzw
mov o0.xyzw, r2.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed c283a1fdc9462761-vs.txt
ne r5.w, r2.w, l(1.0)
if_nz r5.w
  add r5.w, r2.w, -r5.y
  mad r2.x, r5.w, r5.x, r2.x
endif

dp2 r0.w, r1.xyxx, r1.xyxx
rsq r0.w, r0.w
mul r1.xy, r0.wwww, r1.xyxx
mul r1.yzw, r1.yyyy, cb2[18].xxyz
mad r1.xyz, cb2[16].xyzx, r1.xxxx, r1.yzwy
mov r3.x, cb2[16].y
mov r3.y, cb2[17].y
mov r3.z, cb2[18].y
mul r3.xyz, r1.yyyy, r3.xyzx
mov r4.x, cb2[16].x
mov r4.y, cb2[17].x
mov r4.z, cb2[18].x
mad r1.xyw, r4.xyxz, r1.xxxx, r3.xyxz
mov r3.x, cb2[16].z
mov r3.y, cb2[17].z
mov r3.z, cb2[18].z
mad r1.xyz, r3.xyzx, r1.zzzz, r1.xywx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mov o1.xyz, r1.xyzx
mul r3.xyz, r0.yyyy, cb2[13].xyzx
mad r0.xyw, cb2[12].xyxz, r0.xxxx, r3.xyxz
mad r0.xyz, cb2[14].xyzx, r0.zzzz, r0.xywx
mad o2.xyz, cb2[15].xyzx, v0.wwww, r0.xyzx
mov o3.xy, v3.xyxx
mov o3.zw, l(0,0,0,0)
mul r0.x, r1.y, r1.y
mad r0.x, r1.x, r1.x, -r0.x
mul r3.xyzw, r1.yzzx, r1.xyzz
dp4 r4.x, cb1[41].xyzw, r3.xyzw
dp4 r4.y, cb1[42].xyzw, r3.xyzw
dp4 r4.z, cb1[43].xyzw, r3.xyzw
mad r0.xyz, cb1[44].xyzx, r0.xxxx, r4.xyzx
mov r1.w, l(1.000000)
dp4 r3.x, cb1[38].xyzw, r1.xyzw
dp4 r3.y, cb1[39].xyzw, r1.xyzw
dp4 r3.z, cb1[40].xyzw, r1.xyzw
add r0.xyz, r0.xyzx, r3.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max o4.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.x, r2.y, cb0[5].x
mul r0.w, r0.x, l(0.500000)
mul r0.xz, r2.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mov o5.zw, r2.zzzw
add o5.xy, r0.zzzz, r0.xwxx
ret 
// Approximately 0 instruction slots used