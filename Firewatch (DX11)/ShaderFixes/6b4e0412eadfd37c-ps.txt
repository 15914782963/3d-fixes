// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6b4e0412eadfd37c-ps.txt
// 3DMigoto: 6b4e0412eadfd37c | Matched 2 variants of 2 shaders: Marmoset/Transparent/Marmo Water IBL, Marmoset/Transparent/Marmo Water IBL Transparent Hack
//
// 1:    Unity headers extracted from Marmoset_Transparent_Marmo Water IBL
// 2:    Unity headers extracted from Marmoset_Transparent_Marmo Water IBL Transparent Hack
// 2:    Shader "Marmoset/Transparent/Marmo Water IBL Transparent Hack" {
// 1:    Shader "Marmoset/Transparent/Marmo Water IBL" {
//         SubShader 1/1 {
// 1:        Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+449" }
// 2:        Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent" }
//           Pass 2/3 {
//             Name "FORWARD"
// 1:          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+449" }
// 2:          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
// 2: Unity 5.3 headers extracted from Marmoset_Transparent_Marmo Water IBL Transparent Hack:
// 1: Unity 5.3 headers extracted from Marmoset_Transparent_Marmo Water IBL:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 110 7 0
//      undeciphered1a: 7
//      Keywords { "DIRECTIONAL" "MARMO_SKY_BLEND_OFF" "MARMO_BOX_PROJECTION_ON" }
//      undeciphered2: 1 5 2 5 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 608
//      Float 112 [_NormalMapIntensity]
//      Float 116 [_OpacityMultiplier]
//      Float 120 [_WaterSpeed]
//      Float 128 [_StretchIntensity]
//      Float 132 [_FresnelWater]
//      Float 136 [_DirtOpacity]
//      Float 144 [_DirtBrightness]
//      Vector 160 [_FlowDirectionSign]
//      Vector 256 [_ExposureIBL]
//      Vector 432 [_SkyMin] 3
//      Vector 448 [_SkyMax] 3
//      Vector 464 [_SH0] 3
//      Matrix 288 [_SkyMatrix]
//      Matrix 352 [_InvSkyMatrix]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 112 [_ZBufferParams]
//      SetTexture 0 [_NoiseMap] 2D 1
//      SetTexture 1 [_Wave] 2D 0
//      SetTexture 2 [_SpecCubeIBL] CUBE 4
//      SetTexture 3 [_CameraDepthTexture] 2D 3
//      SetTexture 4 [_GrabTexture] 2D 2
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.2 on Thu Apr 26 06:08:43 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float
// TEXCOORD                 8   xyzw        8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[30], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyzw
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6b4e0412eadfd37c-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v4.zwzz, t0.xyzw, s1
mul r0.x, r0.x, cb0[8].x
mad r0.x, cb1[0].y, cb0[7].z, r0.x
add r0.y, r0.x, l(0.500000)
frc r1.xyzw, r0.xxyy
dp2 r0.x, v4.xyxx, v4.xyxx
rsq r0.x, r0.x
mul r0.xyzw, r0.xxxx, v4.xyxy
mul r0.xyzw, r0.xyzw, cb0[10].xyxy
mad r2.xyzw, -r0.zwzw, l(0.500000, 0.500000, 0.500000, 0.500000), v4.xyxy
mad r0.xyzw, r1.xyzw, r0.xyzw, r2.xyzw
mad r1.x, r1.y, l(2.000000), l(-1.000000)
sample r2.xyzw, r0.zwzz, t1.xyzw, s0
sample r0.xyzw, r0.xyxx, t1.xyzw, s0
mad r0.xy, r0.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r2.z, r0.w
dp2 r0.w, r0.xyxx, r0.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r0.z, r0.w
add r1.yzw, -r0.xxyz, r2.xxyz
mad r0.xyz, |r1.xxxx|, r1.yzwy, r0.xyzx
mul r0.xy, r0.xyxx, cb0[7].xxxx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
lt r0.w, v5.w, l(0.000000)
movc r0.xyz, r0.wwww, -r0.xyzx, r0.xyzx
dp3 r1.y, v2.xyzx, r0.xyzx
dp3 r1.x, v1.xyzx, r0.xyzx
dp3 r1.z, v3.xyzx, r0.xyzx
add r0.xyz, -v5.xyzx, r8.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, -r0.xyzx, r1.xyzx
add r0.w, r0.w, r0.w
mad r0.xyz, r1.xyzx, -r0.wwww, -r0.xyzx
mul r2.x, r0.y, cb0[18].y
mul r2.y, r0.y, cb0[19].y
mul r2.z, r0.y, cb0[20].y
mul r3.x, r0.z, cb0[18].z
mul r3.y, r0.z, cb0[19].z
mul r3.z, r0.z, cb0[20].z
add r0.yzw, r2.xxyz, r3.xxyz
mul r2.x, r0.x, cb0[18].x
mul r2.y, r0.x, cb0[19].x
mul r2.z, r0.x, cb0[20].x
add r0.xyz, r0.yzwy, r2.xyzx
div r2.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzx
mul_sat r3.xyz, r0.xyzx, l(1000000.000000, 1000000.000000, 1000000.000000, 0.000000)
add r4.xyz, -cb0[27].xyzx, cb0[28].xyzx
mad r3.xyz, r3.xyzx, r4.xyzx, cb0[27].xyzx
mov r4.x, cb0[22].x
mov r4.y, cb0[23].x
mov r4.z, cb0[24].x
mov r4.w, cb0[25].x
mov r5.xyz, v5.xyzx
mov r5.w, l(1.000000)
dp4 r4.x, r4.xyzw, r5.xyzw
mov r6.x, cb0[22].y
mov r6.y, cb0[23].y
mov r6.z, cb0[24].y
mov r6.w, cb0[25].y
dp4 r4.y, r6.xyzw, r5.xyzw
mov r6.x, cb0[22].z
mov r6.y, cb0[23].z
mov r6.z, cb0[24].z
mov r6.w, cb0[25].z
dp4 r4.z, r6.xyzw, r5.xyzw
add r3.xyz, r3.xyzx, -r4.xyzx
mul r2.xyz, r2.xyzx, r3.xyzx
min r0.w, r2.y, r2.x
min r0.w, r2.z, r0.w
mad r0.xyz, r0.xyzx, r0.wwww, r4.xyzx
sample r0.xyzw, r0.xyzx, t2.xyzw, s4
div r2.xy, v6.xyxx, v6.zzzz
sample r3.xyzw, r2.xyxx, t3.xyzw, s3
mad r0.w, cb1[7].z, r3.x, cb1[7].w
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
add r0.w, r0.w, -v6.w
mov_sat r1.w, r0.w
mul r2.zw, r1.wwww, r1.xxxz
mul r1.w, r1.w, cb0[7].y
mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 1.600000, 1.600000)
div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), v6.w
mul r2.zw, r2.zzzw, r3.xxxx
mul r3.xy, r2.xyxx, l(3.14159274, 3.14159274, 0.000000, 0.000000)
sincos r3.xy, null, r3.xyxx
mul r3.xy, r2.zwzz, r3.xyxx
mul r3.z, r3.x, l(0.100000)
add r2.zw, r2.xxxy, r3.zzzy
sample r3.xyzw, r2.zwzz, t3.xyzw, s3
mad r3.x, cb1[7].z, r3.x, cb1[7].w
div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.x
add r3.x, r3.x, -v6.w
lt r3.y, l(0.000000), r3.x
movc r0.w, r3.y, r3.x, r0.w
movc r2.xy, r3.yyyy, r2.zwzz, r2.xyxx
sample r2.xyzw, r2.xyxx, t4.xyzw, s2
add r2.w, -r0.w, cb0[8].z
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), -r0.w
mul_sat r0.w, r0.w, r2.w
mad r2.w, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r2.w
mad r3.xyz, cb0[29].xyzx, cb0[9].xxxx, -r2.xyzx
mad r2.xyz, r0.wwww, r3.xyzx, r2.xyzx
add r0.xyz, r0.xyzx, -r2.xyzx
mov r3.x, v1.w
mov r3.y, v2.w
mov r3.z, v3.w
add r3.xyz, -r3.xyzx, r8.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
mul r4.xyz, r3.yyyy, v2.xyzx
mad r3.xyw, v1.xyxz, r3.xxxx, r4.xyxz
mad r3.xyz, v3.xyzx, r3.zzzz, r3.xywx
dp3 r4.x, v1.xyzx, r3.xyzx
dp3 r4.y, v2.xyzx, r3.xyzx
dp3 r4.z, v3.xyzx, r3.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r4.xyzx
dp3 r0.w, r3.xyzx, r1.xyzx
mad r0.w, r0.w, l(0.500000), l(0.500000)
log r0.w, r0.w
mul r0.w, r0.w, cb0[8].y
exp r0.w, r0.w
add r0.w, -r0.w, l(1.000000)
mul_sat r0.w, r1.w, r0.w
mad_sat r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
mul o0.xyz, r0.xyzx, cb0[16].wwww
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used