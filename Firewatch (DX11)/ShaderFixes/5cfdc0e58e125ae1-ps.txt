// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5cfdc0e58e125ae1-ps.txt
// 3DMigoto: 5cfdc0e58e125ae1 |    Unity headers extracted from Marmoset Specular IBL.shader
//    Shader "Marmoset/Transparent/Simple Glass/Specular IBL" {
//      Properties {
//       _Color ("Diffuse Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _SpecColor ("Specular Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _SpecInt ("Specular Intensity", Float) = 1.000000
//       _Shininess ("Specular Sharpness", Range(2.000000,8.000000)) = 4.000000
//       _Fresnel ("Fresnel Strength", Range(0.000000,1.000000)) = 0.000000
//       _MainTex ("Diffuse(RGB) Alpha(A)", 2D) = "white" { }
//       _SpecTex ("Specular(RGB) Gloss(A)", 2D) = "white" { }
//      }
//      Fallback "Marmoset/Transparent/Specular IBL"
//      SubShader 1/1 {
//        LOD 250
//        Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//        Pass 1/2 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Blend SrcAlpha OneMinusSrcAlpha
//          ColorMask RGB
//          GpuProgramID 64358
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 47
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Marmoset Specular IBL.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 163 2 0
//   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "MARMO_SKY_BLEND_ON" "MARMO_BOX_PROJECTION_ON" }
//   undeciphered2: 1 4 4 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 912
//   Vector 0 [unity_ColorSpaceGrey]
//   Vector 96 [_LightColor0]
//   Vector 112 [_SpecColor]
//   Vector 128 [_Color]
//   Vector 144 [_MainTex_ST]
//   Float 160 [_SpecInt]
//   Float 164 [_Shininess]
//   Float 168 [_Fresnel]
//   Vector 176 [_SpecTex_ST]
//   Vector 208 [_ExposureIBL]
//   Vector 232 [_UniformOcclusion] 2
//   Vector 384 [_SkyMin] 3
//   Vector 400 [_SkyMax] 3
//   Vector 416 [_SH0] 3
//   Vector 432 [_SH1] 3
//   Vector 448 [_SH2] 3
//   Vector 464 [_SH3] 3
//   Vector 480 [_SH4] 3
//   Vector 496 [_SH5] 3
//   Vector 512 [_SH6] 3
//   Vector 528 [_SH7] 3
//   Vector 544 [_SH8] 3
//   Float 556 [_BlendWeightIBL]
//   Vector 560 [_ExposureIBL1]
//   Vector 736 [_SkyMin1] 3
//   Vector 752 [_SkyMax1] 3
//   Vector 768 [_SH01] 3
//   Vector 784 [_SH11] 3
//   Vector 800 [_SH21] 3
//   Vector 816 [_SH31] 3
//   Vector 832 [_SH41] 3
//   Vector 848 [_SH51] 3
//   Vector 864 [_SH61] 3
//   Vector 880 [_SH71] 3
//   Vector 896 [_SH81] 3
//   Matrix 240 [_SkyMatrix]
//   Matrix 304 [_InvSkyMatrix]
//   Matrix 592 [_SkyMatrix1]
//   Matrix 656 [_InvSkyMatrix1]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_MainTex] 2D 0
//   SetTexture 1 [_SpecTex] 2D 1
//   SetTexture 2 [_SpecCubeIBL] CUBE 2
//   SetTexture 3 [_SpecCubeIBL1] CUBE 3
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sun Nov 06 16:56:48 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 5      w        1     NONE   float      w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[57], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5cfdc0e58e125ae1-ps.txt
mov r12.xyzw, cb1[4].xyzw
mov r13.xyzw, l(0)
mul r13.x, -r11.x, r11.y
mul r15.xyzw, cb10[0].xyzw, r13.xxxx
mad r15.xyzw, cb10[1].xyzw, r13.yyyy, r15.xyzw
mad r15.xyzw, cb10[2].xyzw, r13.zzzz, r15.xyzw
mad r15.xyzw, cb10[3].xyzw, r13.wwww, r15.xyzw
mul r14.xyzw, cb11[12].xyzw, r15.xxxx
mad r14.xyzw, cb11[13].xyzw, r15.yyyy, r14.xyzw
mad r14.xyzw, cb11[14].xyzw, r15.zzzz, r14.xyzw
mad r14.xyzw, cb11[15].xyzw, r15.wwww, r14.xyzw
add r12.xyz, r12.xyz, -r14.xyz

add r0.xyz, -cb0[46].xyzx, cb0[47].xyzx
mov r1.x, cb0[37].y
mov r1.y, cb0[38].y
mov r1.z, cb0[39].y
mov r2.x, cb0[37].z
mov r2.y, cb0[38].z
mov r2.z, cb0[39].z
add r3.xyz, -v4.xyzx, r12.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r0.w, v1.xyzx, v1.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, v1.xyzx
dp3 r0.w, -r3.xyzx, r4.xyzx
add r0.w, r0.w, r0.w
mad r3.xyz, r4.xyzx, -r0.wwww, -r3.xyzx
mul r5.xyz, r2.xyzx, r3.zzzz
mul r2.xyz, r2.xyzx, r4.zzzz
mad r2.xyz, r1.xyzx, r4.yyyy, r2.xyzx
mad r1.xyz, r1.xyzx, r3.yyyy, r5.xyzx
mov r5.x, cb0[37].x
mov r5.y, cb0[38].x
mov r5.z, cb0[39].x
mad r1.xyz, r5.xyzx, r3.xxxx, r1.xyzx
mad r2.xyz, r5.xyzx, r4.xxxx, r2.xyzx
mul_sat r5.xyz, r1.xyzx, l(1000000.000000, 1000000.000000, 1000000.000000, 0.000000)
mad r0.xyz, r5.xyzx, r0.xyzx, cb0[46].xyzx
mov r5.x, cb0[41].x
mov r5.y, cb0[42].x
mov r5.z, cb0[43].x
mov r5.w, cb0[44].x
mov r6.xyz, v4.xyzx
mov r6.w, l(1.000000)
dp4 r5.x, r5.xyzw, r6.xyzw
mov r7.x, cb0[41].y
mov r7.y, cb0[42].y
mov r7.z, cb0[43].y
mov r7.w, cb0[44].y
dp4 r5.y, r7.xyzw, r6.xyzw
mov r7.x, cb0[41].z
mov r7.y, cb0[42].z
mov r7.z, cb0[43].z
mov r7.w, cb0[44].z
dp4 r5.z, r7.xyzw, r6.xyzw
add r0.xyz, r0.xyzx, -r5.xyzx
div r7.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzx
mul r0.xyz, r0.xyzx, r7.xyzx
min r0.x, r0.y, r0.x
min r0.x, r0.z, r0.x
mad r0.xyz, r1.xyzx, r0.xxxx, r5.xyzx
mad r1.xy, v3.xyxx, cb0[11].xyxx, cb0[11].zwzz
sample r1.xyzw, r1.xyxx, t1.xyzw, s1
add r0.w, -r1.w, l(1.000000)
mul r1.xyz, r1.xyzx, cb0[7].xyzx
mad r5.xy, -r0.wwww, r0.wwww, l(1.000000, 8.000000, 0.000000, 0.000000)
mad r0.w, -cb0[10].y, r5.x, r5.y
sample_l r5.xyzw, r0.xyzx, t3.xyzw, s3, r0.w
mul r0.x, r5.w, l(6.000000)
mul r7.x, r0.x, r0.x
mul r7.y, r0.x, r7.x
dp2 r0.y, l(0.753200, 0.246800, 0.000000, 0.000000), r7.xyxx
mad r0.y, -r5.w, l(6.000000), r0.y
mad r0.z, cb0[0].x, l(-3.225810), l(1.612900)
mad r0.x, r0.z, r0.y, r0.x
mul r5.xyz, r0.xxxx, r5.xyzx
mov r7.x, cb0[19].x
mov r7.y, cb0[20].x
mov r7.z, cb0[21].x
mov r7.w, cb0[22].x
dp4 r7.x, r7.xyzw, r6.xyzw
mov r8.x, cb0[19].y
mov r8.y, cb0[20].y
mov r8.z, cb0[21].y
mov r8.w, cb0[22].y
dp4 r7.y, r8.xyzw, r6.xyzw
mov r8.x, cb0[19].z
mov r8.y, cb0[20].z
mov r8.z, cb0[21].z
mov r8.w, cb0[22].z
dp4 r7.z, r8.xyzw, r6.xyzw
add r6.xyz, -cb0[24].xyzx, cb0[25].xyzx
mov r8.x, cb0[15].z
mov r8.y, cb0[16].z
mov r8.z, cb0[17].z
mul r9.xyz, r3.zzzz, r8.xyzx
mul r8.xyz, r4.zzzz, r8.xyzx
mov r10.x, cb0[15].y
mov r10.y, cb0[16].y
mov r10.z, cb0[17].y
mad r3.yzw, r10.xxyz, r3.yyyy, r9.xxyz
mad r8.xyz, r10.xyzx, r4.yyyy, r8.xyzx
mov r9.x, cb0[15].x
mov r9.y, cb0[16].x
mov r9.z, cb0[17].x
mad r3.xyz, r9.xyzx, r3.xxxx, r3.yzwy
mad r8.xyz, r9.xyzx, r4.xxxx, r8.xyzx
mul_sat r9.xyz, r3.xyzx, l(1000000.000000, 1000000.000000, 1000000.000000, 0.000000)
mad r6.xyz, r9.xyzx, r6.xyzx, cb0[24].xyzx
add r6.xyz, -r7.xyzx, r6.xyzx
div r9.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzx
mul r6.xyz, r6.xyzx, r9.xyzx
min r0.x, r6.y, r6.x
min r0.x, r6.z, r0.x
mad r3.xyz, r3.xyzx, r0.xxxx, r7.xyzx
sample_l r3.xyzw, r3.xyzx, t2.xyzw, s2, r0.w
add r0.x, -r0.w, l(8.000000)
exp r0.x, r0.x
mul r0.y, r3.w, l(6.000000)
mul r6.x, r0.y, r0.y
mul r6.y, r0.y, r6.x
dp2 r0.w, l(0.753200, 0.246800, 0.000000, 0.000000), r6.xyxx
mad r0.w, -r3.w, l(6.000000), r0.w
mad r0.y, r0.z, r0.w, r0.y
mad r3.xyz, r3.xyzx, r0.yyyy, -r5.xyzx
mad r3.xyz, cb0[34].wwww, r3.xyzx, r5.xyzx
add r5.xyz, -v2.xyzx, r12.xyzx
dp3 r0.y, r5.xyzx, r5.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r5.xyzx
dp3_sat r0.w, r4.xyzx, r6.xyzx
add r4.x, -r0.w, l(1.000000)
mul r0.w, r4.x, r4.x
mul r4.z, r4.x, r0.w
mad r6.xy, cb0[10].zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
dp2 r7.y, r4.xzxx, r6.xyxx
mov r4.yw, l(0,1.000000,0,0)
dp2 r7.x, r4.yxyy, r6.xyxx
dp2 r0.w, r7.xyxx, r6.xyxx
mad r0.w, r0.w, l(0.950000), l(0.050000)
mul r1.w, r0.w, cb0[10].x
sqrt r1.w, r1.w
mad r0.w, r0.w, cb0[10].x, -r1.w
mad r0.z, r0.z, r0.w, r1.w
add r4.xyz, cb0[13].xywx, -cb0[35].xywx
mad r4.xyz, cb0[34].wwww, r4.xyzx, cb0[35].xywx
mul r0.z, r0.z, r4.z
mul r1.xyz, r0.zzzz, r1.xyzx
mul r3.xyz, r1.xyzx, r3.xyzx
dp3 r0.z, r8.xyzx, r8.xyzx
rsq r0.z, r0.z
mul r6.xyz, r0.zzzz, r8.xyzx
mad r7.xyz, cb0[27].xyzx, r6.yyyy, cb0[26].xyzx
mad r7.xyz, cb0[28].xyzx, r6.zzzz, r7.xyzx
mad r7.xyz, cb0[29].xyzx, r6.xxxx, r7.xyzx
mul r8.xyz, r6.xzxx, r6.yyzy
mad r7.xyz, cb0[30].xyzx, r8.xxxx, r7.xyzx
mad r7.xyz, cb0[31].xyzx, r8.yyyy, r7.xyzx
mad r7.xyz, cb0[33].xyzx, r8.zzzz, r7.xyzx
mul r0.zw, r6.yyyz, r6.yyyz
mad r0.z, r6.x, r6.x, -r0.z
mad r0.w, r0.w, l(3.000000), l(-1.000000)
mad r6.xyz, cb0[32].xyzx, r0.wwww, r7.xyzx
mad r6.xyz, cb0[34].xyzx, r0.zzzz, r6.xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
mad r7.xyz, cb0[49].xyzx, r2.yyyy, cb0[48].xyzx
mad r7.xyz, cb0[50].xyzx, r2.zzzz, r7.xyzx
mad r7.xyz, cb0[51].xyzx, r2.xxxx, r7.xyzx
mul r8.xyz, r2.xzxx, r2.yyzy
mad r7.xyz, cb0[52].xyzx, r8.xxxx, r7.xyzx
mad r7.xyz, cb0[53].xyzx, r8.yyyy, r7.xyzx
mad r7.xyz, cb0[55].xyzx, r8.zzzz, r7.xyzx
mul r0.zw, r2.yyyz, r2.yyyz
mad r0.z, r2.x, r2.x, -r0.z
mad r0.w, r0.w, l(3.000000), l(-1.000000)
mad r2.xyz, cb0[54].xyzx, r0.wwww, r7.xyzx
mad r2.xyz, cb0[56].xyzx, r0.zzzz, r2.xyzx
add r6.xyz, -|r2.xyzx|, |r6.xyzx|
mad r2.xyz, cb0[34].wwww, r6.xyzx, |r2.xyzx|
mad r0.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
sample r6.xyzw, r0.zwzz, t0.xyzw, s0
mul r6.xyzw, r6.xyzw, cb0[8].xyzw
mul r7.xyz, r4.zzzz, r6.xyzx
mul r0.zw, r4.xxxy, cb0[14].zzzw
mul r4.xyz, r6.wwww, r7.xyzx
mul r2.xyz, r2.xyzx, r4.xyzx
mul r2.xyz, r0.zzzz, r2.xyzx
mad r2.xyz, r3.xyzx, r0.wwww, r2.xyzx
dp3 r0.z, cb2[0].xyzx, cb2[0].xyzx
rsq r0.z, r0.z
mul r3.xyz, r0.zzzz, cb2[0].xyzx
mad r0.yzw, r5.xxyz, r0.yyyy, r3.xxyz
dp3_sat r1.w, v1.xyzx, r3.xyzx
dp3 r2.w, r0.yzwy, r0.yzwy
rsq r2.w, r2.w
mul r0.yzw, r0.yyzw, r2.wwww
dp3_sat r0.y, v1.xyzx, r0.yzwy
log r0.y, r0.y
add r0.z, r0.x, r0.x
mad r0.x, r0.x, l(0.159154937), l(0.318309873)
mul r1.xyz, r0.xxxx, r1.xyzx
mul r0.x, r0.y, r0.z
exp r0.x, r0.x
mul r0.y, r1.w, l(10.000000)
add r0.z, r1.w, r1.w
mul r3.xyz, r4.xyzx, r0.zzzz
mul r4.xyz, r4.xyzx, v5.xyzx
min r0.y, r0.y, l(1.000000)
mul r0.x, r0.y, r0.x
mul r0.xyz, r0.xxxx, cb0[6].xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mad r6.xyz, r3.xyzx, cb0[6].xyzx, r0.xyzx
add r0.xyzw, r4.xyzw, r6.xyzw
add r0.xyz, r2.xyzx, r0.xyzx
mov o0.w, r0.w
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mul r0.w, v1.w, cb3[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
ret 
// Approximately 0 instruction slots used