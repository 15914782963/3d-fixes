// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 1c06a5b8425fcd31-ps.txt
// 3DMigoto: 1c06a5b8425fcd31 |    Unity headers extracted from Marmoset_Transparent_Cutout_Billboard Diffuse IBL
//    Shader "Marmoset/Transparent/Cutout/Billboard Diffuse IBL" {
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//        Pass 1/6 {
//          Name "FORWARD"
//          Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Marmoset_Transparent_Cutout_Billboard Diffuse IBL:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 46 3 2
//   undeciphered1a: 4
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_EXP2" "MARMO_SKY_BLEND_OFF" }
//   undeciphered2: 1 3 7 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 464
//   Vector 32 [_LightColor0]
//   Vector 64 [_Color]
//   Vector 80 [_MainTex_ST]
//   Vector 112 [_ExposureIBL]
//   Float 460 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 384
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_ShadowMapTexture] 2D 1
//   SetTexture 2 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.2 on Thu Apr 26 06:07:10 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 5      w        1     NONE   float      w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyzw        3     NONE   float   xy
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyzw        5     NONE   float   xy w
// TEXCOORD                 6   xyzw        6     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[29], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyw
dcl_output o0.xyzw
dcl_temps 6
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 1c06a5b8425fcd31-ps.txt

mul r4.w, -r4.x, r4.y
mad r5.xyz, -r4.wwww, cb10[0].xyzw, cb1[4].xyzw

mad r0.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r0.xyzw, r0.xyxx, t0.xyzw, s2
mul r1.xyz, r0.xyzx, cb0[4].xyzx
mul r1.xyz, r1.xyzx, cb0[7].wwww
mul r2.xyzw, r0.xyzw, cb0[4].xyzw
mad r0.x, r0.w, cb0[4].w, -cb0[28].w
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
add r0.xyz, -v2.xyzx, r5.xyzx
mov r3.x, cb4[9].z
mov r3.y, cb4[10].z
mov r3.z, cb4[11].z
dp3 r0.x, r0.xyzx, r3.xyzx
add r0.yzw, v2.xxyz, -cb3[25].xxyz
dp3 r0.y, r0.yzwy, r0.yzwy
sqrt r0.y, r0.y
add r0.y, -r0.x, r0.y
mad r0.x, cb3[25].w, r0.y, r0.x
mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
eq r0.y, cb6[0].x, l(1.000000)
if_nz r0.y
  eq r0.z, cb6[0].y, l(1.000000)
  mul r3.xyz, v2.yyyy, cb6[2].xyzx
  mad r3.xyz, cb6[1].xyzx, v2.xxxx, r3.xyzx
  mad r3.xyz, cb6[3].xyzx, v2.zzzz, r3.xyzx
  add r3.xyz, r3.xyzx, cb6[4].xyzx
  movc r3.xyz, r0.zzzz, r3.xyzx, v2.xyzx
  add r3.xyz, r3.xyzx, -cb6[6].xyzx
  mul r3.yzw, r3.xxyz, cb6[5].xxyz
  mad r0.z, r3.y, l(0.250000), l(0.750000)
  mad r0.w, cb6[0].z, l(0.500000), l(0.750000)
  max r3.x, r0.w, r0.z
  sample r3.xyzw, r3.xzwx, t2.xyzw, s0
else
  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r0.z, r3.xyzw, cb2[45].xyzw
div r3.xy, v5.xyxx, v5.wwww
sample r3.xyzw, r3.xyxx, t1.xyzw, s1
add_sat r0.x, r0.x, r3.x
min r0.z, r0.x, r0.z
movc r0.x, r0.y, r0.z, r0.x
mul r3.xyz, r1.xyzx, v4.xyzx
dp3_sat r0.y, v1.xyzx, cb2[0].xyzx
add r0.y, r0.y, r0.y
mul r0.yzw, r1.xxyz, r0.yyyy
mul r0.yzw, r0.yyzw, cb0[2].xxyz
mul r0.xyz, r0.xxxx, r0.yzwy
mov r3.w, l(0)
mov r0.w, r2.w
add r0.xyzw, r0.xyzw, r3.xyzw
mad r0.xyz, r2.xyzx, cb0[7].wwww, r0.xyzx
div r1.x, v1.w, cb1[5].y
add r1.x, -r1.x, l(1.000000)
mul r1.x, r1.x, cb1[5].z
max r1.x, r1.x, l(0.000000)
mul r1.x, r1.x, cb5[1].x
mul r1.x, r1.x, -r1.x
exp r1.x, r1.x
add r0.xyz, r0.xyzx, -cb5[0].xyzx
mad o0.xyz, r1.xxxx, r0.xyzx, cb5[0].xyzx
mov o0.w, r0.w
ret
// Approximately 0 instruction slots used