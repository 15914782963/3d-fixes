// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3fecebb6e545ae36-ps.txt
// 3DMigoto: 3fecebb6e545ae36 |    Unity headers extracted from Legacy Shaders_Transparent_Cutout_Specular
//    Shader "Legacy Shaders/Transparent/Cutout/Specular" {
//      Fallback "Legacy Shaders/Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//        Pass 2/6 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Legacy Shaders_Transparent_Cutout_Specular:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 35 2 2
//   undeciphered1a: 4
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 2 4 2 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 128
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Vector 64 [_Color]
//   Float 80 [_Shininess]
//   Float 112 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.2 on Thu Apr 26 06:07:52 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 3     zw        1     NONE   float
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 6
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3fecebb6e545ae36-ps.txt

mul r4.w, -r4.x, r4.y
mad r5.xyz, -r4.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, r5.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
sample r1.xyzw, v1.xyxx, t0.xyzw, s1
mul r2.xyzw, r1.xyzw, cb0[4].xyzw
mad r1.x, r1.w, cb0[4].w, -cb0[7].x
lt r1.x, r1.x, l(0.000000)
discard_nz r1.x
eq r1.x, cb3[0].x, l(1.000000)
if_nz r1.x
  eq r1.x, cb3[0].y, l(1.000000)
  mul r3.xyz, v3.yyyy, cb3[2].xyzx
  mad r3.xyz, cb3[1].xyzx, v3.xxxx, r3.xyzx
  mad r3.xyz, cb3[3].xyzx, v3.zzzz, r3.xyzx
  add r3.xyz, r3.xyzx, cb3[4].xyzx
  movc r1.xyz, r1.xxxx, r3.xyzx, v3.xyzx
  add r1.xyz, r1.xyzx, -cb3[6].xyzx
  mul r3.yzw, r1.xxyz, cb3[5].xxyz
  mad r1.x, r3.y, l(0.250000), l(0.750000)
  mad r1.y, cb3[0].z, l(0.500000), l(0.750000)
  max r3.x, r1.y, r1.x
  sample r3.xyzw, r3.xzwx, t1.xyzw, s0
else
  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r1.x, r3.xyzw, cb2[45].xyzw
mul r1.xyz, r1.xxxx, cb0[2].xyzx
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, v2.xyzx, cb2[0].xyzx
dp3 r0.x, v2.xyzx, r0.xyzx
max r0.xw, r0.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.y, cb0[5].x, l(128.000000)
log r0.x, r0.x
mul r0.x, r0.x, r0.y
exp r0.x, r0.x
mul r0.x, r1.w, r0.x
mul r2.xyz, r1.xyzx, r2.xyzx
mul r1.xyz, r1.xyzx, cb0[3].xyzx
mul r0.xyz, r0.xxxx, r1.xyzx
mad o0.xyz, r2.xyzx, r0.wwww, r0.xyzx
mov o0.w, r2.w
ret
// Approximately 0 instruction slots used