// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --only-autofixed --fxc /home/dss/fxc.exe ff3766af418fb992-vs_replace.txt
// 3DMigoto: ff3766af418fb992 | Matched 4 variants of 1 shaders: Marmoset/Transparent/Cutout/Billboard Diffuse IBL
// 
//    Unity headers extracted from Marmoset Billboard Diffuse IBL.shader
//    Shader "Marmoset/Transparent/Cutout/Billboard Diffuse IBL" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _MainTex ("Base (RGB) Trans (A)", 2D) = "white" { }
//       _Cutoff ("Alpha cutoff", Range(0,1)) = 0.5
//      }
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "DisableBatching"="true" "RenderType"="TransparentCutout" }
//        Pass 4/5 {
//          Name "PREPASS"
//          Tags { "LIGHTMODE"="PrePassFinal" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "DisableBatching"="true" "RenderType"="TransparentCutout" }
//          ZWrite Off
//          GpuProgramID 261490
//          Program "vp" {
//            SubProgram "d3d11 " {
// 1:           Keywords { "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "HDR_LIGHT_PREPASS_OFF" "LIGHTMAP_OFF" "MARMO_SKY_BLEND_OFF" }
// 4:           Keywords { "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "HDR_LIGHT_PREPASS_OFF" "LIGHTMAP_OFF" "MARMO_SKY_BLEND_ON" }
// 2:           Keywords { "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "LIGHTMAP_OFF" "MARMO_SKY_BLEND_OFF" "UNITY_HDR_ON" }
// 8:           Keywords { "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "LIGHTMAP_OFF" "MARMO_SKY_BLEND_ON" "UNITY_HDR_ON" }
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "texcoord" TexCoord0
//              ConstBuffer "UnityPerCamera" 144
//              Vector 64 [_WorldSpaceCameraPos] 3
//              Vector 80 [_ProjectionParams]
//              ConstBuffer "UnityLighting" 720
//              Vector 608 [unity_SHAr]
//              Vector 624 [unity_SHAg]
//              Vector 640 [unity_SHAb]
//              Vector 656 [unity_SHBr]
//              Vector 672 [unity_SHBg]
//              Vector 688 [unity_SHBb]
//              Vector 704 [unity_SHC]
//              ConstBuffer "UnityPerDraw" 352
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 192 [_Object2World]
//              Matrix 256 [_World2Object]
//              ConstBuffer "UnityFog" 32
//              Vector 16 [unity_FogParams]
//              BindCB "UnityPerCamera" 0
//              BindCB "UnityLighting" 1
//              BindCB "UnityPerDraw" 2
//              BindCB "UnityFog" 3
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py
//
// Shader model vs_4_0

// ---- Created with 3Dmigoto v1.2.31 on Sat Feb 20 12:32:45 2016
cbuffer cb3 : register(b3)
{
  float4 cb3[2];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[22];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[45];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[9];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);



cbuffer UnityPerDraw : register(b11) {
	float4x4 glstate_matrix_mvp;
	float4x4 glstate_matrix_modelview0;
	float4x4 glstate_matrix_invtrans_modelview0;
	#define UNITY_MATRIX_MVP glstate_matrix_mvp
	#define UNITY_MATRIX_MV glstate_matrix_modelview0
	#define UNITY_MATRIX_IT_MV glstate_matrix_invtrans_modelview0

	uniform float4x4 _Object2World;
	uniform float4x4 _World2Object;
	uniform float4 unity_LODFade; // x is the fade value ranging within [0,1]. y is x quantized into 16 levels
	uniform float4 unity_WorldTransformParams; // w is usually 1.0, or -1.0 for odd-negative scale transforms
}


#include <ShaderFixes/matrix.hlsl>

void main( 
  float4 v0 : POSITION0,
  float4 v1 : TANGENT0,
  float3 v2 : NORMAL0,
  float4 v3 : TEXCOORD0,
  float4 v4 : TEXCOORD1,
  float4 v5 : TEXCOORD2,
  float4 v6 : TEXCOORD3,
  float4 v7 : COLOR0,
  out float4 o0 : SV_POSITION0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD2,
  out float4 o3 : TEXCOORD3,
  out float3 o4 : TEXCOORD4,
  out float p4 : TEXCOORD5)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
float separation = stereo.x, convergence = stereo.y, eye = stereo.z;

// Unity reflection/specular fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --only-autofixed --fxc /home/dss/fxc.exe ff3766af418fb992-vs_replace.txt
float4 _WorldSpaceCameraPos = cb0[4];
float4 clip_space_adj = float4(-separation * convergence, 0, 0, 0);
float4 local_space_adj = mul(inverse(glstate_matrix_mvp), clip_space_adj);
float4 world_space_adj = mul(_Object2World, local_space_adj);
_WorldSpaceCameraPos.xyz -= world_space_adj.xyz;

  r0.xy = -cb2[15].xz + _WorldSpaceCameraPos.xz;
  r0.z = dot(r0.xy, r0.xy);
  r0.z = rsqrt(r0.z);
  r0.xy = r0.xy * r0.zz;
  r0.z = abs(r0.y) * -0.0187292993 + 0.0742610022;
  r0.z = r0.z * abs(r0.y) + -0.212114394;
  r0.z = r0.z * abs(r0.y) + 1.57072878;
  r0.w = 1 + -abs(r0.y);
  r0.w = sqrt(r0.w);
  r1.x = r0.z * r0.w;
  r1.x = r1.x * -2 + 3.14159274;
  r0.y = cmp(r0.y < -r0.y);
  r0.y = r0.y ? r1.x : 0;
  r0.y = r0.z * r0.w + r0.y;
  sincos(r0.y, r1.x, r2.x);
  r0.y = cmp(0 < r0.x);
  r0.x = cmp(r0.x < 0);
  r0.x = (int)-r0.y + (int)r0.x;
  r0.x = (int)r0.x;
  r0.y = -r1.x * r0.x;
  r1.x = r1.x * r0.x;
  r0.x = v0.x * r0.y;
  r0.y = v0.x * r2.x;
  r1.y = r2.x;
  r2.xyz = cb2[17].xyz * v0.yyy;
  r0.yzw = cb2[16].xyz * r0.yyy + r2.xyz;
  r0.xyz = cb2[18].xyz * r0.xxx + r0.yzw;
  r2.xyzw = cb2[1].xyzw * r0.yyyy;
  r2.xyzw = cb2[0].xyzw * r0.xxxx + r2.xyzw;
  r0.xyzw = cb2[2].xyzw * r0.zzzz + r2.xyzw;
  r0.xyzw = cb2[3].xyzw * v0.wwww + r0.xyzw;
  o0.xyzw = r0.xyzw;

// Automatic vertex shader halo fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --only-autofixed --fxc /home/dss/fxc.exe ff3766af418fb992-vs_replace.txt
if (r0.w != 1.0) { r0.x += separation * (r0.w - convergence); }

  o1.xy = v3.xy;
  o1.zw = float2(0,0);
  r0.y = cb0[5].x * r0.y;
  r2.xzw = float3(0.5,0.5,0.5) * r0.xwy;
  o2.xy = r2.xw + r2.zz;
  o2.zw = r0.zw;
  r0.x = cb3[1].x * r0.z;
  r0.x = -r0.x * r0.x;
  p4.x = exp2(r0.x);
  o3.xyzw = float4(0,0,0,0);
  r0.x = dot(r1.xy, r1.xy);
  r0.x = rsqrt(r0.x);
  r0.xy = r1.xy * r0.xx;
  r0.yzw = cb2[18].xyz * r0.yyy;
  r0.xyz = cb2[16].xyz * r0.xxx + r0.yzw;
  r1.x = cb2[16].y;
  r1.y = cb2[17].y;
  r1.z = cb2[18].y;
  r1.xyz = r1.xyz * r0.yyy;
  r2.x = cb2[16].x;
  r2.y = cb2[17].x;
  r2.z = cb2[18].x;
  r0.xyw = r2.xyz * r0.xxx + r1.xyz;
  r1.x = cb2[16].z;
  r1.y = cb2[17].z;
  r1.z = cb2[18].z;
  r0.xyz = r1.xyz * r0.zzz + r0.xyw;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r1.x = r0.y * r0.y;
  r1.x = r0.x * r0.x + -r1.x;
  r2.xyzw = r0.xyzz * r0.yzzx;
  r3.x = dot(cb1[41].xyzw, r2.xyzw);
  r3.y = dot(cb1[42].xyzw, r2.xyzw);
  r3.z = dot(cb1[43].xyzw, r2.xyzw);
  r1.xyz = cb1[44].xyz * r1.xxx + r3.xyz;
  r0.w = 1;
  r2.x = dot(cb1[38].xyzw, r0.xyzw);
  r2.y = dot(cb1[39].xyzw, r0.xyzw);
  r2.z = dot(cb1[40].xyzw, r0.xyzw);
  o4.xyz = r2.xyz + r1.xyz;
  return;
}
