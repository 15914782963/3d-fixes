// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe e0e3d8105d34845c-vs_replace.txt
// 3DMigoto: e0e3d8105d34845c |    Unity headers extracted from TLD_WavingVertexLit.shader
//    Shader "_LongDark/Nature/WavingVertexLit" {
//      Properties {
//       _MainTex ("Base (RGB)", 2D) = "white" { }
//       _XZAnimScaleByH ("XZ Anim Scale By H", Float) = 1
//       _XZAnimScaleByR ("XZ Anim Scale By R", Float) = 1
//       _YOffsetScalar ("Y Offset Scalar", Float) = 1
//       _BaseExemption ("Base Motion Exemption", Float) = 0
//       _LocalPhaseScalars ("Local Phase Scalars .xyz", Vector) = (0.1,0.1,0.1,0)
//      }
//      Fallback Off
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "RenderType"="Opaque" }
//          ZWrite Off
//          Blend One One
//          GpuProgramID 75234
//          Program "vp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 64
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from TLD_WavingVertexLit.shader.decompressed:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 67 0 0
//   Keywords { "DIRECTIONAL_COOKIE" "FOG_EXP2" }
//   undeciphered2: 1 0 3 0 0
//   undeciphered3: 15 4 0 0 2 1 1 2 3 4
//   ConstBuffer "$Globals" 352
//   Vector 240 [_GlobalWindInfo]
//   Vector 256 [_GlobalBranchPhase]
//   Vector 272 [_GlobalGrassPhase]
//   Float 300 [_XZAnimScaleByH]
//   Float 304 [_XZAnimScaleByR]
//   Float 308 [_YOffsetScalar]
//   Float 312 [_BaseExemption]
//   Vector 320 [_LocalPhaseScalars] 3
//   Vector 336 [_MainTex_ST]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [_Object2World]
//   Matrix 256 [_World2Object]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   BindCB "$Globals" 0
//   BindCB "UnityPerDraw" 1
//   BindCB "UnityFog" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

// ---- Created with 3Dmigoto v1.2.35 on Sat Apr 30 15:39:07 2016
cbuffer cb2 : register(b2)
{
  float4 cb2[2];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[19];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[22];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  float4 v1 : TANGENT0,
  float3 v2 : NORMAL0,
  float4 v3 : TEXCOORD0,
  float4 v4 : TEXCOORD1,
  float4 v5 : TEXCOORD2,
  float4 v6 : TEXCOORD3,
  float4 v7 : COLOR0,
  out float4 o0 : SV_POSITION0,
  out float2 o1 : TEXCOORD0,
  out float p1 : TEXCOORD4,
  out float4 o2 : TEXCOORD1,
  out float3 o3 : TEXCOORD2)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
float separation = stereo.x, convergence = stereo.y, eye = stereo.z;

  r0.x = 5 * cb1[14].z;
  r0.x = cb1[12].z * 7 + r0.x;
  r0.y = dot(v0.xyz, cb0[20].xyz);
  r0.x = r0.x + r0.y;
  r0.y = cb0[16].x + cb0[16].y;
  r0.y = cb0[16].z + r0.y;
  r0.x = r0.x + r0.y;
  r0.x = frac(r0.x);
  r0.x = r0.x * 6.40884876 + -3.14159274;
  r0.y = r0.x * r0.x;
  r0.z = r0.y * r0.x;
  r0.x = r0.z * -0.161616161 + r0.x;
  r0.z = r0.z * r0.y;
  r0.x = r0.z * 0.00833330024 + r0.x;
  r0.z = r0.z * r0.y;
  r0.x = r0.z * -0.000198409994 + r0.x;
  r0.z = r0.x * r0.x;
  r0.x = r0.z * r0.x;
  r0.z = cb0[18].w * v7.x;
  r0.w = cb0[19].x * v7.y;
  r0.z = r0.z * r0.z + r0.w;
  r0.w = cmp(v7.x >= cb0[19].z);
  r0.w = r0.w ? 1.000000 : 0;
  r0.z = r0.z * r0.w;
  r0.w = cb0[15].w * r0.z;
  r1.x = 4 * r0.w;
  r1.y = 3.5 + -cb0[15].w;
  r0.w = r1.y * r0.w;
  r0.x = r0.x * r0.w + r1.x;
  r1.xy = cb0[15].xz * r0.xx;
  r0.x = cb0[19].y * r0.x;
  r1.z = r0.y * -0.5 + 1;
  r1.w = r0.y * r0.y;
  r0.y = r1.w * r0.y;
  r1.z = r1.w * 0.0416666642 + r1.z;
  r1.z = r0.y * -0.00138888892 + r1.z;
  r0.y = r0.y * 2.48015876e-005 + r1.z;
  r0.y = r0.y * r0.y;
  r0.y = r0.y * r0.w;
  r0.y = 0.300000012 * r0.y;
  r0.w = r0.y * cb0[15].z + r1.x;
  r0.y = r0.y * -cb0[15].x + r1.y;
  r1.x = 0.300000012 * cb0[17].w;
  r0.z = r1.x * r0.z;
  r0.x = r0.x * -0.5 + r0.z;
  r1.xyz = cb1[17].xyz * r0.xxx;
  r0.xzw = cb1[16].xyz * r0.www + r1.xyz;
  r0.xyz = cb1[18].xyz * r0.yyy + r0.xzw;
  r0.xyz = v0.xyz + r0.xyz;
  r1.xyzw = cb1[1].xyzw * r0.yyyy;
  r1.xyzw = cb1[0].xyzw * r0.xxxx + r1.xyzw;
  r1.xyzw = cb1[2].xyzw * r0.zzzz + r1.xyzw;
  r1.xyzw = cb1[3].xyzw * v0.wwww + r1.xyzw;
  o0.xyzw = r1.xyzw;

// Automatic vertex shader halo fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe e0e3d8105d34845c-vs_replace.txt
if (r1.w != 1.0) { r1.x += separation * (r1.w - convergence); }

  r0.w = cb2[1].x * r1.z;
  r0.w = -r0.w * r0.w;
  p1.x = exp2(r0.w);
  o1.xy = v3.xy * cb0[21].xy + cb0[21].zw;
  r1.x = cb1[16].y;
  r1.y = cb1[17].y;
  r1.z = cb1[18].y;
  r1.xyz = v2.yyy * r1.xyz;
  r2.x = cb1[16].x;
  r2.y = cb1[17].x;
  r2.z = cb1[18].x;
  r1.xyz = r2.xyz * v2.xxx + r1.xyz;
  r2.x = cb1[16].z;
  r2.y = cb1[17].z;
  r2.z = cb1[18].z;
  r1.xyz = r2.xyz * v2.zzz + r1.xyz;
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = rsqrt(r0.w);
  o2.xyz = r1.xyz * r0.www;
  r1.xyz = cb1[13].xyz * r0.yyy;
  r0.xyw = cb1[12].xyz * r0.xxx + r1.xyz;
  r0.xyz = cb1[14].xyz * r0.zzz + r0.xyw;
  o3.xyz = cb1[15].xyz * v0.www + r0.xyz;
  return;
}

/****************************** COMPILE WARNINGS ******************************
C:\Steam\SteamApps\common\TheLongDark\ShaderFixes\e0e3d8105d34845c-vs_replace.txt(98,14-15): warning X3578: Output value 'o2' is not completely initialized

****************************** COMPILE WARNINGS ******************************/
