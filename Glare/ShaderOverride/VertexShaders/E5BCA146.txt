// CRC32: E5BCA146 | Matched 2 variants of 1 shaders: Triplanar Textures/Triplanar Building VertexBlend (Bumped)
// 
//    Unity headers extracted from Tp_Building_VertexBlend.shader
//    Shader "Triplanar Textures/Triplanar Building VertexBlend (Bumped)" {
//      Properties {
//       _Tiling ("Tiling", Float) = 1
//       _Power ("Projection Power", Float) = 5
//       _UseNormalMaps ("Use Normal Maps", Range(0,1)) = 1
//       _Color ("Color", Color) = (1,1,1,1)
//       _SpecColor ("Specular Color", Color) = (0.5,0.5,0.5,1)
//       _Shininess ("Shininess", Range(0.01,1)) = 0.078125
//       _RedColor ("Red Color", Color) = (1,1,1,1)
//       _RedDiffuseSpecular ("Red Diffuse Specular", 2D) = "black" {}
//       _RedNormal ("Red Normal", 2D) = "normal" {}
//       _GreenColor ("Green Color", Color) = (1,1,1,1)
//       _GreenDiffuseSpecular ("Green Diffuse Specular", 2D) = "black" {}
//       _GreenNormal ("Green Normal", 2D) = "normal" {}
//       _BlueColor ("Blue Color", Color) = (1,1,1,1)
//       _BlueDiffuseSpecular ("Blue Diffuse Specular", 2D) = "black" {}
//       _BlueNormal ("Blue Normal", 2D) = "normal" {}
//      }
//      SubShader 1/1 {
//        LOD 400
//        Tags { "RenderType"="Opaque" }
//        Pass 4/4 {
//          Name "PREPASS"
//          Tags { "LIGHTMODE"="PrePassFinal" "RenderType"="Opaque" }
//          ZWrite Off
//          Program "vp" {
//            SubProgram "d3d9 " {
// 1:           Keywords { "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "LIGHTMAP_ON" }
// 2:           Keywords { "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "LIGHTMAP_ON" }
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "normal" Normal
//              Bind "texcoord1" TexCoord1
//              Matrix 0 [glstate_matrix_modelview0]
//              Matrix 4 [glstate_matrix_mvp]
//              Matrix 8 [_Object2World]
//              Vector 12 [_ProjectionParams]
//              Vector 13 [_ScreenParams]
//              Vector 14 [unity_ShadowFadeCenterAndType]
//              Vector 15 [unity_Scale]
//              Vector 16 [unity_LightmapST]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    def c17, 0.5, 1, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord1 v2
    dcl_color v3

def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    dp4 r0.w, v0, c7
    dp4 r0.z, v0, c6
    dp4 r0.x, v0, c4
    dp4 r0.y, v0, c5

mov o0, r0 // Relocated from line 73 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-vertex-halo --only-autofixed --lookup-header-json /home/dss/3d-fixes/__unity__/Glare/ShaderHeaders.json --git E5BCA146.txt
texldl r4, c220.z, s0
add r4.w, r0.w, -r4.y
mad r0.x, r4.w, r4.x, r0.x

    mul r1.xyz, r0.xyww, c17.x

//     mov o0, r0 // Relocated to line 72 with shadertool.py
    rcp r0.x, c15.w
    mul r1.y, r1, c12.x
    mov o5.zw, r0
    mul o3.xyz, v0, r0.x
    slt r3.xyz, v1, -v1
    slt r2.xyz, -v1, v1
    dp4 r0.z, v0, c10
    dp4 r0.x, v0, c8
    dp4 r0.y, v0, c9
    add r0.xyz, r0, -c14
    mul o7.xyz, r0, c14.w
    mov r0.x, c14.w
    add r0.y, c17, -r0.x
    dp4 r0.x, v0, c2
    add o2.xyz, r2, -r3
    mad o5.xy, r1.z, c13.zwzw, r1
    mov o1, v3
    mov o4.xyz, v1
    mad o6.xy, v2, c16, c16.zwzw
    mul o7.w, -r0.x, r0.y

// approximately 26 instruction slots used
