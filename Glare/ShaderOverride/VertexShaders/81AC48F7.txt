// CRC32: 81AC48F7 | Matched 2 variants of 1 shaders: Triplanar Textures/Triplanar Building VertexBlend (Bumped)
// 
//    Unity headers extracted from Tp_Building_VertexBlend.shader
//    Shader "Triplanar Textures/Triplanar Building VertexBlend (Bumped)" {
//      Properties {
//       _Tiling ("Tiling", Float) = 1
//       _Power ("Projection Power", Float) = 5
//       _UseNormalMaps ("Use Normal Maps", Range(0,1)) = 1
//       _Color ("Color", Color) = (1,1,1,1)
//       _SpecColor ("Specular Color", Color) = (0.5,0.5,0.5,1)
//       _Shininess ("Shininess", Range(0.01,1)) = 0.078125
//       _RedColor ("Red Color", Color) = (1,1,1,1)
//       _RedDiffuseSpecular ("Red Diffuse Specular", 2D) = "black" {}
//       _RedNormal ("Red Normal", 2D) = "normal" {}
//       _GreenColor ("Green Color", Color) = (1,1,1,1)
//       _GreenDiffuseSpecular ("Green Diffuse Specular", 2D) = "black" {}
//       _GreenNormal ("Green Normal", 2D) = "normal" {}
//       _BlueColor ("Blue Color", Color) = (1,1,1,1)
//       _BlueDiffuseSpecular ("Blue Diffuse Specular", 2D) = "black" {}
//       _BlueNormal ("Blue Normal", 2D) = "normal" {}
//      }
//      SubShader 1/1 {
//        LOD 400
//        Tags { "RenderType"="Opaque" }
//        Pass 4/4 {
//          Name "PREPASS"
//          Tags { "LIGHTMODE"="PrePassFinal" "RenderType"="Opaque" }
//          ZWrite Off
//          Program "vp" {
//            SubProgram "d3d9 " {
// 1:           Keywords { "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "LIGHTMAP_OFF" }
// 2:           Keywords { "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "LIGHTMAP_OFF" }
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "normal" Normal
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_ProjectionParams]
//              Vector 9 [_ScreenParams]
//              Vector 10 [unity_SHAr]
//              Vector 11 [unity_SHAg]
//              Vector 12 [unity_SHAb]
//              Vector 13 [unity_SHBr]
//              Vector 14 [unity_SHBg]
//              Vector 15 [unity_SHBb]
//              Vector 16 [unity_SHC]
//              Vector 17 [unity_Scale]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    def c18, 0.5, 1, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_color v2

def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    mul r1.xyz, v1, c17.w
    dp3 r2.w, r1, c5
    dp3 r0.x, r1, c4
    dp3 r0.z, r1, c6
    mov r0.y, r2.w
    mov r0.w, c18.y
    mul r1, r0.xyzz, r0.yzzx
    dp4 r2.z, r0, c12
    dp4 r2.y, r0, c11
    dp4 r2.x, r0, c10
    mul r0.w, r2, r2
    mad r0.w, r0.x, r0.x, -r0
    dp4 r0.z, r1, c15
    dp4 r0.y, r1, c14
    dp4 r0.x, r1, c13
    add r0.xyz, r2, r0
    mul r1.xyz, r0.w, c16
    add o6.xyz, r0, r1
    dp4 r0.w, v0, c3
    dp4 r0.z, v0, c2
    dp4 r0.x, v0, c0
    dp4 r0.y, v0, c1

mov o0, r0 // Relocated from line 93 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-vertex-halo --only-autofixed --lookup-header-json /home/dss/3d-fixes/__unity__/Glare/ShaderHeaders.json --git 81AC48F7.txt
texldl r4, c220.z, s0
add r4.w, r0.w, -r4.y
mad r0.x, r4.w, r4.x, r0.x

    mul r1.xyz, r0.xyww, c18.x
    mul r1.y, r1, c8.x

//     mov o0, r0 // Relocated to line 91 with shadertool.py
    rcp r0.x, c17.w
    slt r3.xyz, v1, -v1
    slt r2.xyz, -v1, v1
    add o2.xyz, r2, -r3
    mad o5.xy, r1.z, c9.zwzw, r1
    mov o1, v2
    mov o5.zw, r0
    mul o3.xyz, v0, r0.x
    mov o4.xyz, v1

// approximately 34 instruction slots used
