// CRC32: E2A404B3 | Matched 2 variants of 1 shaders: Triplanar Textures/Triplanar Building VertexBlend (Bumped)
// 
//    Unity headers extracted from Tp_Building_VertexBlend.shader
//    Shader "Triplanar Textures/Triplanar Building VertexBlend (Bumped)" {
//      Properties {
//       _Tiling ("Tiling", Float) = 1
//       _Power ("Projection Power", Float) = 5
//       _UseNormalMaps ("Use Normal Maps", Range(0,1)) = 1
//       _Color ("Color", Color) = (1,1,1,1)
//       _SpecColor ("Specular Color", Color) = (0.5,0.5,0.5,1)
//       _Shininess ("Shininess", Range(0.01,1)) = 0.078125
//       _RedColor ("Red Color", Color) = (1,1,1,1)
//       _RedDiffuseSpecular ("Red Diffuse Specular", 2D) = "black" {}
//       _RedNormal ("Red Normal", 2D) = "normal" {}
//       _GreenColor ("Green Color", Color) = (1,1,1,1)
//       _GreenDiffuseSpecular ("Green Diffuse Specular", 2D) = "black" {}
//       _GreenNormal ("Green Normal", 2D) = "normal" {}
//       _BlueColor ("Blue Color", Color) = (1,1,1,1)
//       _BlueDiffuseSpecular ("Blue Diffuse Specular", 2D) = "black" {}
//       _BlueNormal ("Blue Normal", 2D) = "normal" {}
//      }
//      SubShader 1/1 {
//        LOD 400
//        Tags { "RenderType"="Opaque" }
//        Pass 4/4 {
//          Name "PREPASS"
//          Tags { "LIGHTMODE"="PrePassFinal" "RenderType"="Opaque" }
//          ZWrite Off
//          Program "vp" {
//            SubProgram "d3d9 " {
// 1:           Keywords { "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" "LIGHTMAP_ON" }
// 2:           Keywords { "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" "LIGHTMAP_ON" }
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "normal" Normal
//              Bind "texcoord1" TexCoord1
//              Bind "tangent" TexCoord2
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_World2Object]
//              Vector 8 [_WorldSpaceCameraPos]
//              Vector 9 [_ProjectionParams]
//              Vector 10 [_ScreenParams]
//              Vector 11 [unity_Scale]
//              Vector 12 [unity_LightmapST]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    def c13, 0.5, 1, 0, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord1 v3
    dcl_color v4

def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    mov r0.xyz, v1
    mul r1.xyz, v2.zxyw, r0.yzxw
    mov r0.xyz, v1
    mad r0.xyz, v2.yzxw, r0.zxyw, -r1
    mul r0.xyz, r0, v1.w
    mov r1.xyz, c8
    mov r1.w, c13.y
    dp4 r2.z, r1, c6
    dp4 r2.x, r1, c4
    dp4 r2.y, r1, c5
    mad r1.xyz, r2, c11.w, -v0
    dp3 o7.y, r1, r0
    dp4 r0.w, v0, c3
    dp4 r0.z, v0, c2
    dp4 r0.x, v0, c0
    dp4 r0.y, v0, c1

mov o0, r0 // Relocated from line 86 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-vertex-halo --only-autofixed --lookup-header-json /home/dss/3d-fixes/__unity__/Glare/ShaderHeaders.json --git E2A404B3.txt
texldl r5, c220.z, s0
add r5.w, r0.w, -r5.y
mad r0.x, r5.w, r5.x, r0.x

    mul r4.xyz, r0.xyww, c13.x

//     mov o0, r0 // Relocated to line 85 with shadertool.py
    rcp r0.x, c11.w
    slt r2.xyz, -v2, v2
    slt r3.xyz, v2, -v2
    add o2.xyz, r2, -r3
    mul r2.y, r4, c9.x
    mov r2.x, r4
    mad o5.xy, r4.z, c10.zwzw, r2
    dp3 o7.z, v2, r1
    dp3 o7.x, r1, v1
    mov o1, v4
    mov o5.zw, r0
    mul o3.xyz, v0, r0.x
    mov o4.xyz, v2
    mad o6.xy, v3, c12, c12.zwzw

// approximately 32 instruction slots used
