// Tile light tiles #1, fixed by DarkStarSword

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.67 on Sun Jan 14 21:43:46 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[8], dynamicIndexed // cb0[0:3] looks like a transposed inverse view-projection matrix
dcl_resource_structured t2, 112 // Some type of light info data structure array
dcl_resource_structured t3, 304 // Some type of light info data structure array
dcl_resource_structured t4, 144 // Some type of light info data structure array
dcl_resource_structured t5, 336 // Some type of light info data structure array
dcl_resource_structured t6, 176 // Zero (probably some other type of light info data structure array)
dcl_resource_structured t7, 256 // Zero (probably some other type of light info data structure array)
dcl_uav_structured u0, 16
dcl_uav_structured u1, 4
dcl_uav_typed_buffer (uint,uint,uint,uint) u2 // Was broken by UpdateSubresource() driver bug - fix in d3dx.ini
dcl_input vThreadIDInGroupFlattened
dcl_input vThreadGroupID.xy
dcl_temps 13
dcl_tgsm_structured g0, 16, 8
dcl_tgsm_structured g1, 12, 4
dcl_tgsm_raw g2, 4
dcl_tgsm_structured g3, 4, 1024
dcl_tgsm_raw g4, 4
dcl_tgsm_raw g5, 4
dcl_tgsm_raw g6, 4
dcl_tgsm_raw g7, 4
dcl_tgsm_raw g8, 4
dcl_tgsm_raw g9, 4
dcl_tgsm_raw g10, 4
dcl_thread_group 8, 4, 1

dcl_uav_structured u3, 16 // Debugging output
dcl_constantbuffer cb1[4], immediateIndexed // Inverse of matrix in cb0[0:3], i.e. forwards view-projection
dcl_resource_texture2d (float,float,float,float) t125
dcl_resource_texture1d (float,float,float,float) t120
ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw
ld_indexable(texture1d)(float,float,float,float) r10.xyzw, l(7, 0, 0, 0), t120.xyzw

if_z vThreadIDInGroupFlattened.x
  store_raw g4.x, l(0), l(0)
  store_raw g5.x, l(0), l(0)
  store_raw g6.x, l(0), l(0)
  store_raw g7.x, l(0), l(0)
  store_raw g8.x, l(0), l(0)
  store_raw g9.x, l(0), l(0)
  store_raw g10.x, l(0), l(0)
endif 
utof r0.xy, vThreadGroupID.xyxx
iadd r0.zw, vThreadGroupID.xxxy, l(0, 0, 1, 1)
utof r0.zw, r0.zzzw
mul r0.xyzw, r0.xyzw, cb0[4].zwzw
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r0.zw, r0.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
and r1.x, vThreadIDInGroupFlattened.x, l(3)
ushr r1.y, vThreadIDInGroupFlattened.x, l(2)
bfi r1.z, l(2), l(2), vThreadIDInGroupFlattened.x, l(0)
and r2.xy, r1.yyyy, l(4, 2, 0, 0)
movc r3.x, r2.x, r0.z, r0.x
movc r3.y, r2.y, -r0.w, -r0.y
ubfe r0.x, l(1), l(2), vThreadIDInGroupFlattened.x
movc r3.z, r0.x, l(1.000000), l(0)
mov r3.w, l(1.000000)

// Threaded matrix multiply:
dp4 r0.x, r3.xyzw, cb0[r1.x + 0].xyzw
store_structured g0.x, r1.y, r1.z, r0.x
sync_g_t
ld_structured r0.x, r1.y, l(12), g0.xxxx
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
ld_structured r0.y, r1.y, r1.z, g0.xxxx

mul r0.x, r0.x, r0.y
store_structured g0.x, r1.y, r1.z, r0.x
sync_g_t
if_z vThreadIDInGroupFlattened.x
  ld_structured r0.xyz, l(0), l(0), g0.xyzx
  ld_structured r1.xyz, l(1), l(0), g0.xyzx
  ld_structured r2.xyz, l(2), l(0), g0.xyzx
  ld_structured r3.xyz, l(3), l(0), g0.xyzx
  ld_structured r4.xyz, l(4), l(0), g0.xyzx
  ld_structured r5.xyz, l(5), l(0), g0.xyzx
  ld_structured r6.xyz, l(6), l(0), g0.xyzx
  add r1.xyz, -r0.zxyz, r1.zxyz
  add r7.xyz, -r0.yzxy, r2.yzxy
  mul r8.xyz, r1.xyzx, r7.xyzx
  mad r7.xyz, r1.zxyz, r7.yzxy, -r8.xyzx
  dp3 r0.w, r7.xyzx, r7.xyzx
  rsq r0.w, r0.w
  mul r7.xyz, r0.wwww, r7.xyzx
  store_structured g1.xyz, l(0), l(0), r7.xyzx
  add r5.xyz, -r4.zxyz, r5.zxyz
  add r7.xyz, -r4.yzxy, r6.yzxy
  mul r8.xyz, r5.xyzx, r7.xyzx
  mad r5.xyz, r5.zxyz, r7.yzxy, -r8.xyzx
  dp3 r0.w, -r5.xyzx, -r5.xyzx
  rsq r0.w, r0.w
  mul r5.xyz, r0.wwww, -r5.xyzx
  store_structured g1.xyz, l(1), l(0), r5.xyzx
  add r3.xyz, -r2.zxyz, r3.zxyz
  add r2.xyz, -r2.yzxy, r6.yzxy
  mul r5.xyz, r2.xyzx, r3.xyzx
  mad r2.xyz, r3.zxyz, r2.yzxy, -r5.xyzx
  dp3 r0.w, r2.xyzx, r2.xyzx
  rsq r0.w, r0.w
  mul r2.xyz, r0.wwww, r2.xyzx
  store_structured g1.xyz, l(2), l(0), r2.xyzx
  add r0.xyz, -r0.yzxy, r4.yzxy
  mul r2.xyz, r0.xyzx, r1.xyzx
  mad r0.xyz, r1.zxyz, r0.yzxy, -r2.xyzx
  dp3 r0.w, -r0.xyzx, -r0.xyzx
  rsq r0.w, r0.w
  mul r0.xyz, r0.wwww, -r0.xyzx
  store_structured g1.xyz, l(3), l(0), r0.xyzx
endif 
sync_g_t
if_nz cb0[6].x
  ld_structured r0.xyz, l(0), l(0), g1.xyzx
  mov r0.w, vThreadIDInGroupFlattened.x
  loop 
    uge r1.x, r0.w, cb0[6].x
    breakc_nz r1.x
    ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r1.xyzw, r0.w, l(0), t2.xyzw

// *large* blocks tiles in a cardinal direction - world space coords

mov r11.xyz, r1.xyzx
mov r11.w, l(1.0)
dp4 r12.x, r11.xyzw, cb1[0].xyzw
dp4 r12.y, r11.xyzw, cb1[1].xyzw
dp4 r12.z, r11.xyzw, cb1[2].xyzw
dp4 r12.w, r11.xyzw, cb1[3].xyzw

add r9.w, r12.w, -r9.y
mul r9.w, r9.w, r10.y // IniParams for debugging
mad r12.x, r9.w, r9.x, r12.x

// Debugging:
//store_structured u3.xyzw, r0.w, l(0), r12.xyzw

dp4 r11.x, r12.xyzw, cb0[0].xyzw
dp4 r11.y, r12.xyzw, cb0[1].xyzw
dp4 r11.z, r12.xyzw, cb0[2].xyzw
dp4 r11.w, r12.xyzw, cb0[3].xyzw

// Debugging:
//store_structured u3.xyzw, r0.w, l(0), r11.xyzw

mov r1.xyz, r11.xyzx

    div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
    sqrt r1.w, r1.w
    ld_structured r2.xyz, l(1), l(0), g1.xyzx
    dp3 r2.x, r1.xyzx, r2.xyzx
    lt r2.x, r2.x, -r1.w
    if_nz r2.x
      mov r2.x, l(0)
    else 
      dp3 r2.y, r1.xyzx, r0.xyzx
      ge r2.x, r2.y, -r1.w
    endif 
    ld_structured r2.yzw, l(2), l(0), g1.xxyz
    dp3 r2.y, r1.xyzx, r2.yzwy
    lt r2.y, r2.y, -r1.w
    if_nz r2.y
      mov r2.x, l(0)
    endif 
    ld_structured r2.yzw, l(3), l(0), g1.xxyz
    dp3 r1.x, r1.xyzx, r2.yzwy
    lt r1.x, r1.x, -r1.w
    if_nz r1.x
      mov r2.x, l(0)
    endif 
    if_nz r2.x
      imm_atomic_iadd r1.x, g5, l(0), l(1)
      ult r1.y, r1.x, l(1024)
      if_nz r1.y
        store_structured g3.x, r1.x, l(0), r0.w
      endif 
    endif 
    iadd r0.w, r0.w, l(32)
  endloop 
  sync_g_t
  if_z vThreadIDInGroupFlattened.x
    ld_raw r0.x, l(0), g5.xxxx
    ld_raw r0.y, l(0), g4.xxxx
    iadd r0.x, r0.x, r0.y
    store_raw g4.x, l(0), r0.x
  endif 
  sync_g_t
endif 
if_nz cb0[6].y
  ld_structured r0.xyz, l(0), l(0), g1.xyzx
  mov r0.w, vThreadIDInGroupFlattened.x
  loop 
    uge r1.x, r0.w, cb0[6].y
    breakc_nz r1.x
    ld_structured_indexable(structured_buffer, stride=304)(mixed,mixed,mixed,mixed) r1.xyzw, r0.w, l(0), t3.xyzw

mov r11.xyz, r1.xyzx
mov r11.w, l(1.0)
dp4 r12.x, r11.xyzw, cb1[0].xyzw
dp4 r12.y, r11.xyzw, cb1[1].xyzw
dp4 r12.z, r11.xyzw, cb1[2].xyzw
dp4 r12.w, r11.xyzw, cb1[3].xyzw

add r9.w, r12.w, -r9.y
mul r9.w, r9.w, r10.y // IniParams for debugging
mad r12.x, r9.w, r9.x, r12.x

// Debugging:
//store_structured u3.xyzw, r0.w, l(0), r12.xyzw

dp4 r11.x, r12.xyzw, cb0[0].xyzw
dp4 r11.y, r12.xyzw, cb0[1].xyzw
dp4 r11.z, r12.xyzw, cb0[2].xyzw
dp4 r11.w, r12.xyzw, cb0[3].xyzw

// Debugging:
//store_structured u3.xyzw, r0.w, l(0), r11.xyzw

mov r1.xyz, r11.xyzx

    div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
    sqrt r1.w, r1.w
    ld_structured r2.xyz, l(1), l(0), g1.xyzx
    dp3 r2.x, r1.xyzx, r2.xyzx
    lt r2.x, r2.x, -r1.w
    if_nz r2.x
      mov r2.x, l(0)
    else 
      dp3 r2.y, r1.xyzx, r0.xyzx
      ge r2.x, r2.y, -r1.w
    endif 
    ld_structured r2.yzw, l(2), l(0), g1.xxyz
    dp3 r2.y, r1.xyzx, r2.yzwy
    lt r2.y, r2.y, -r1.w
    if_nz r2.y
      mov r2.x, l(0)
    endif 
    ld_structured r2.yzw, l(3), l(0), g1.xxyz
    dp3 r1.x, r1.xyzx, r2.yzwy
    lt r1.x, r1.x, -r1.w
    if_nz r1.x
      mov r2.x, l(0)
    endif 
    if_nz r2.x
      imm_atomic_iadd r1.x, g6, l(0), l(1)
      ld_raw r1.y, l(0), g4.xxxx
      iadd r1.x, r1.y, r1.x
      ult r1.y, r1.x, l(1024)
      if_nz r1.y
        store_structured g3.x, r1.x, l(0), r0.w
      endif 
    endif 
    iadd r0.w, r0.w, l(32)
  endloop 
  sync_g_t
  if_z vThreadIDInGroupFlattened.x
    ld_raw r0.x, l(0), g6.xxxx
    ld_raw r0.y, l(0), g4.xxxx
    iadd r0.x, r0.x, r0.y
    store_raw g4.x, l(0), r0.x
  endif 
  sync_g_t
endif 
if_nz cb0[6].z
  ld_structured r0.xyz, l(0), l(0), g1.xyzx
  mov r0.w, vThreadIDInGroupFlattened.x
  loop 
    uge r1.x, r0.w, cb0[6].z
    breakc_nz r1.x
    ld_structured_indexable(structured_buffer, stride=144)(mixed,mixed,mixed,mixed) r1.xyzw, r0.w, l(0), t4.xyzw

//mad r1.x, r10.y, l(100.0), r1.x
//store_structured u3.xyzw, r0.w, l(0), r1.xyzw

mov r11.xyz, r1.xyzx
mov r11.w, l(1.0)
dp4 r12.x, r11.xyzw, cb1[0].xyzw
dp4 r12.y, r11.xyzw, cb1[1].xyzw
dp4 r12.z, r11.xyzw, cb1[2].xyzw
dp4 r12.w, r11.xyzw, cb1[3].xyzw

add r9.w, r12.w, -r9.y
mul r9.w, r9.w, r10.y // IniParams for debugging
mad r12.x, r9.w, r9.x, r12.x

// Debugging:
//store_structured u3.xyzw, r0.w, l(0), r12.xyzw

dp4 r11.x, r12.xyzw, cb0[0].xyzw
dp4 r11.y, r12.xyzw, cb0[1].xyzw
dp4 r11.z, r12.xyzw, cb0[2].xyzw
dp4 r11.w, r12.xyzw, cb0[3].xyzw

// Debugging:
//store_structured u3.xyzw, r0.w, l(0), r11.xyzw

mov r1.xyz, r11.xyzx

    div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
    sqrt r1.w, r1.w
    ld_structured r2.xyz, l(1), l(0), g1.xyzx
    dp3 r2.x, r1.xyzx, r2.xyzx
    lt r2.x, r2.x, -r1.w
    if_nz r2.x
      mov r2.x, l(0)
    else 
      dp3 r2.y, r1.xyzx, r0.xyzx
      ge r2.x, r2.y, -r1.w
    endif 
    ld_structured r2.yzw, l(2), l(0), g1.xxyz
    dp3 r2.y, r1.xyzx, r2.yzwy
    lt r2.y, r2.y, -r1.w
    if_nz r2.y
      mov r2.x, l(0)
    endif 
    ld_structured r2.yzw, l(3), l(0), g1.xxyz
    dp3 r1.x, r1.xyzx, r2.yzwy
    lt r1.x, r1.x, -r1.w
    if_nz r1.x
      mov r2.x, l(0)
    endif 
    if_nz r2.x
      imm_atomic_iadd r1.x, g7, l(0), l(1)
      ld_raw r1.y, l(0), g4.xxxx
      iadd r1.x, r1.y, r1.x
      ult r1.y, r1.x, l(1024)
      if_nz r1.y
        store_structured g3.x, r1.x, l(0), r0.w
      endif 
    endif 
    iadd r0.w, r0.w, l(32)
  endloop 
  sync_g_t
  if_z vThreadIDInGroupFlattened.x
    ld_raw r0.x, l(0), g7.xxxx
    ld_raw r0.y, l(0), g4.xxxx
    iadd r0.x, r0.x, r0.y
    store_raw g4.x, l(0), r0.x
  endif 
  sync_g_t
endif 
if_nz cb0[6].w
  ld_structured r0.xyz, l(0), l(0), g1.xyzx
  mov r0.w, vThreadIDInGroupFlattened.x
  loop 
    uge r1.x, r0.w, cb0[6].w
    breakc_nz r1.x
    ld_structured_indexable(structured_buffer, stride=336)(mixed,mixed,mixed,mixed) r1.xyzw, r0.w, l(0), t5.xyzw

//mad r1.x, r10.y, l(100.0), r1.x
//store_structured u3.xyzw, r0.w, l(0), r1.xyzw

mov r11.xyz, r1.xyzx
mov r11.w, l(1.0)
dp4 r12.x, r11.xyzw, cb1[0].xyzw
dp4 r12.y, r11.xyzw, cb1[1].xyzw
dp4 r12.z, r11.xyzw, cb1[2].xyzw
dp4 r12.w, r11.xyzw, cb1[3].xyzw

add r9.w, r12.w, -r9.y
mul r9.w, r9.w, r10.y // IniParams for debugging
mad r12.x, r9.w, r9.x, r12.x

// Debugging:
//store_structured u3.xyzw, r0.w, l(0), r12.xyzw

dp4 r11.x, r12.xyzw, cb0[0].xyzw
dp4 r11.y, r12.xyzw, cb0[1].xyzw
dp4 r11.z, r12.xyzw, cb0[2].xyzw
dp4 r11.w, r12.xyzw, cb0[3].xyzw

// Debugging:
//store_structured u3.xyzw, r0.w, l(0), r11.xyzw

mov r1.xyz, r11.xyzx

    div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
    sqrt r1.w, r1.w
    ld_structured r2.xyz, l(1), l(0), g1.xyzx
    dp3 r2.x, r1.xyzx, r2.xyzx
    lt r2.x, r2.x, -r1.w
    if_nz r2.x
      mov r2.x, l(0)
    else 
      dp3 r2.y, r1.xyzx, r0.xyzx
      ge r2.x, r2.y, -r1.w
    endif 
    ld_structured r2.yzw, l(2), l(0), g1.xxyz
    dp3 r2.y, r1.xyzx, r2.yzwy
    lt r2.y, r2.y, -r1.w
    if_nz r2.y
      mov r2.x, l(0)
    endif 
    ld_structured r2.yzw, l(3), l(0), g1.xxyz
    dp3 r1.x, r1.xyzx, r2.yzwy
    lt r1.x, r1.x, -r1.w
    if_nz r1.x
      mov r2.x, l(0)
    endif 
    if_nz r2.x
      imm_atomic_iadd r1.x, g8, l(0), l(1)
      ld_raw r1.y, l(0), g4.xxxx
      iadd r1.x, r1.y, r1.x
      ult r1.y, r1.x, l(1024)
      if_nz r1.y
        store_structured g3.x, r1.x, l(0), r0.w
      endif 
    endif 
    iadd r0.w, r0.w, l(32)
  endloop 
  sync_g_t
  if_z vThreadIDInGroupFlattened.x
    ld_raw r0.x, l(0), g8.xxxx
    ld_raw r0.y, l(0), g4.xxxx
    iadd r0.x, r0.x, r0.y
    store_raw g4.x, l(0), r0.x
  endif 
  sync_g_t
endif 
if_nz cb0[7].y
  ld_structured r0.xyz, l(0), l(0), g1.xyzx
  mov r0.w, vThreadIDInGroupFlattened.x
  loop 
    uge r1.x, r0.w, cb0[7].y
    breakc_nz r1.x
    ld_structured_indexable(structured_buffer, stride=256)(mixed,mixed,mixed,mixed) r1.xyzw, r0.w, l(0), t7.xyzw

//mad r1.x, r10.y, l(100.0), r1.x
//store_structured u3.xyzw, r0.w, l(0), r1.xyzw

mov r11.xyz, r1.xyzx
mov r11.w, l(1.0)
dp4 r12.x, r11.xyzw, cb1[0].xyzw
dp4 r12.y, r11.xyzw, cb1[1].xyzw
dp4 r12.z, r11.xyzw, cb1[2].xyzw
dp4 r12.w, r11.xyzw, cb1[3].xyzw

add r9.w, r12.w, -r9.y
mul r9.w, r9.w, r10.y // IniParams for debugging
mad r12.x, r9.w, r9.x, r12.x

// Debugging:
//store_structured u3.xyzw, r0.w, l(0), r12.xyzw

dp4 r11.x, r12.xyzw, cb0[0].xyzw
dp4 r11.y, r12.xyzw, cb0[1].xyzw
dp4 r11.z, r12.xyzw, cb0[2].xyzw
dp4 r11.w, r12.xyzw, cb0[3].xyzw

// Debugging:
//store_structured u3.xyzw, r0.w, l(0), r11.xyzw

mov r1.xyz, r11.xyzx

    sqrt r1.w, r1.w
    ld_structured r2.xyz, l(1), l(0), g1.xyzx
    dp3 r2.x, r1.xyzx, r2.xyzx
    lt r2.x, r2.x, -r1.w
    if_nz r2.x
      mov r2.x, l(0)
    else 
      dp3 r2.y, r1.xyzx, r0.xyzx
      ge r2.x, r2.y, -r1.w
    endif 
    ld_structured r2.yzw, l(2), l(0), g1.xxyz
    dp3 r2.y, r1.xyzx, r2.yzwy
    lt r2.y, r2.y, -r1.w
    if_nz r2.y
      mov r2.x, l(0)
    endif 
    ld_structured r2.yzw, l(3), l(0), g1.xxyz
    dp3 r1.x, r1.xyzx, r2.yzwy
    lt r1.x, r1.x, -r1.w
    if_nz r1.x
      mov r2.x, l(0)
    endif 
    if_nz r2.x
      imm_atomic_iadd r1.x, g10, l(0), l(1)
      ld_raw r1.y, l(0), g4.xxxx
      iadd r1.x, r1.y, r1.x
      ult r1.y, r1.x, l(1024)
      if_nz r1.y
        store_structured g3.x, r1.x, l(0), r0.w
      endif 
    endif 
    iadd r0.w, r0.w, l(32)
  endloop 
  sync_g_t
  if_z vThreadIDInGroupFlattened.x
    ld_raw r0.x, l(0), g10.xxxx
    ld_raw r0.y, l(0), g4.xxxx
    iadd r0.x, r0.x, r0.y
    store_raw g4.x, l(0), r0.x
  endif 
  sync_g_t
endif 
if_nz cb0[7].x
  ld_structured r0.xyz, l(0), l(0), g1.xyzx
  mov r0.w, vThreadIDInGroupFlattened.x
  loop 
    uge r1.x, r0.w, cb0[7].x
    breakc_nz r1.x
    ld_structured_indexable(structured_buffer, stride=176)(mixed,mixed,mixed,mixed) r1.xyzw, r0.w, l(0), t6.xyzw

//mad r1.x, r10.y, l(100.0), r1.x
//store_structured u3.xyzw, r0.w, l(0), r1.xyzw

mov r11.xyz, r1.xyzx
mov r11.w, l(1.0)
dp4 r12.x, r11.xyzw, cb1[0].xyzw
dp4 r12.y, r11.xyzw, cb1[1].xyzw
dp4 r12.z, r11.xyzw, cb1[2].xyzw
dp4 r12.w, r11.xyzw, cb1[3].xyzw

add r9.w, r12.w, -r9.y
mul r9.w, r9.w, r10.y // IniParams for debugging
mad r12.x, r9.w, r9.x, r12.x

// Debugging:
//store_structured u3.xyzw, r0.w, l(0), r12.xyzw

dp4 r11.x, r12.xyzw, cb0[0].xyzw
dp4 r11.y, r12.xyzw, cb0[1].xyzw
dp4 r11.z, r12.xyzw, cb0[2].xyzw
dp4 r11.w, r12.xyzw, cb0[3].xyzw

// Debugging:
//store_structured u3.xyzw, r0.w, l(0), r11.xyzw

mov r1.xyz, r11.xyzx

    sqrt r1.w, r1.w
    ld_structured r2.xyz, l(1), l(0), g1.xyzx
    dp3 r2.x, r1.xyzx, r2.xyzx
    lt r2.x, r2.x, -r1.w
    if_nz r2.x
      mov r2.x, l(0)
    else 
      dp3 r2.y, r1.xyzx, r0.xyzx
      ge r2.x, r2.y, -r1.w
    endif 
    ld_structured r2.yzw, l(2), l(0), g1.xxyz
    dp3 r2.y, r1.xyzx, r2.yzwy
    lt r2.y, r2.y, -r1.w
    if_nz r2.y
      mov r2.x, l(0)
    endif 
    ld_structured r2.yzw, l(3), l(0), g1.xxyz
    dp3 r1.x, r1.xyzx, r2.yzwy
    lt r1.x, r1.x, -r1.w
    if_nz r1.x
      mov r2.x, l(0)
    endif 
    if_nz r2.x
      imm_atomic_iadd r1.x, g9, l(0), l(1)
      ld_raw r1.y, l(0), g4.xxxx
      iadd r1.x, r1.y, r1.x
      ult r1.y, r1.x, l(1024)
      if_nz r1.y
        store_structured g3.x, r1.x, l(0), r0.w
      endif 
    endif 
    iadd r0.w, r0.w, l(32)
  endloop 
  sync_g_t
  if_z vThreadIDInGroupFlattened.x
    ld_raw r0.x, l(0), g9.xxxx
    ld_raw r0.y, l(0), g4.xxxx
    iadd r0.x, r0.x, r0.y
    store_raw g4.x, l(0), r0.x
  endif 
  sync_g_t
endif 
if_z vThreadIDInGroupFlattened.x
  utof r0.xy, vThreadGroupID.yxyy
  utof r0.z, cb0[5].x
  mad r0.x, r0.x, r0.z, r0.y
  ftou r0.x, r0.x
  ld_raw r0.y, l(0), g4.xxxx
  if_nz r0.y
    umin r0.y, r0.y, l(1024)
    store_raw g4.x, l(0), r0.y
    imm_atomic_iadd r1.x, u2, l(0), r0.y
    store_raw g2.x, l(0), r1.x
    iadd r0.y, r0.y, r1.x
    ult r0.y, cb0[5].z, r0.y
    if_nz r0.y
      store_raw g4.x, l(0), l(0)
    endif 
    ld_raw r0.y, l(0), g6.xxxx
    ld_raw r0.z, l(0), g5.xxxx
    bfi r1.y, l(16), l(16), r0.y, r0.z
    ld_raw r0.y, l(0), g8.xxxx
    ld_raw r0.z, l(0), g7.xxxx
    bfi r1.z, l(16), l(16), r0.y, r0.z
    ld_raw r0.y, l(0), g10.xxxx
    ld_raw r0.z, l(0), g9.xxxx
    bfi r1.w, l(16), l(16), r0.y, r0.z
  else 
    mov r1.xyzw, l(0,0,0,0)
  endif 
  store_structured u0.xyzw, r0.x, l(0), r1.xyzw
endif 
sync_g_t
ld_raw r0.x, l(0), g4.xxxx
if_nz r0.x
  ld_raw r0.y, l(0), g2.xxxx
  mov r0.z, vThreadIDInGroupFlattened.x
  loop 
    uge r0.w, r0.z, r0.x
    breakc_nz r0.w
    iadd r0.w, r0.y, r0.z
    ld_structured r1.x, r0.z, l(0), g3.xxxx
    store_structured u1.x, r0.w, l(0), r1.x
    iadd r0.z, r0.z, l(32)
  endloop 
endif 
ret 
// Approximately 0 instruction slots used
