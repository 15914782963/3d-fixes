// Halo vapor heat

cbuffer cVSScene : register(b2)
{

  struct
  {
    float4x4 m_projectionView;
    float4x4 m_projection;
    float4x4 m_view;
    float4x4 m_shadowProjection;
    float4x4 m_shadowProjection2;
    float4 m_eyepos;
    float4 m_projectionParam;
    float4 m_viewportSize;
    float4 m_exposure;
    float4 m_fogParam[3];
    float4 m_fogColor;
    float4 m_cameraCenterOffset;
    float4 m_shadowMapResolutions;
  } g_vsScene : packoffset(c0);

}

cbuffer cVSObject : register(b5)
{

  struct
  {
    float4x4 m_viewWorld;
    float4x4 m_world;
    float4 m_useWeightCount;
    float4 m_localParam[4];
  } g_vsObject : packoffset(c0);

}



// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  float4 v1 : COLOR0,
  float4 v2 : TEXCOORD0,
  float4 v3 : TEXCOORD1,
  float4 v4 : TEXCOORD2,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = v0.xyz;
  r0.w = 1;
  r1.x = dot(r0.xyzw, g_vsObject.m_viewWorld._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, g_vsObject.m_viewWorld._m01_m11_m21_m31);
  r1.z = dot(r0.xyzw, g_vsObject.m_viewWorld._m02_m12_m22_m32);
  r1.w = dot(r0.xyzw, g_vsObject.m_viewWorld._m03_m13_m23_m33);
  r0.x = dot(r1.xyzw, g_vsScene.m_projection._m00_m10_m20_m30);
  r0.y = dot(r1.xyzw, g_vsScene.m_projection._m01_m11_m21_m31);
  r0.z = dot(r1.xyzw, g_vsScene.m_projection._m02_m12_m22_m32);
  r0.w = dot(r1.xyzw, g_vsScene.m_projection._m03_m13_m23_m33);
  o0.xyzw = r0.xyzw;
  
  float4 stereo = StereoParams.Load(0);
  r0.x += stereo.x * (r0.w - stereo.y);
  
  o3.xyzw = r0.xyzw;
  o2.z = r0.w;
  o1.xy = v2.xy;
  o2.xy = v0.xy * float2(2,-2) + float2(-1,1);
  o4.xyzw = v1.xyzw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//   using 3Dmigoto v1.2.25 on Thu Jan 21 00:02:17 2016
//
//
// Buffer Definitions: 
//
// cbuffer cVSScene
// {
//
//   struct VSScene
//   {
//       
//       float4x4 m_projectionView;     // Offset:    0
//       float4x4 m_projection;         // Offset:   64
//       float4x4 m_view;               // Offset:  128
//       float4x4 m_shadowProjection;   // Offset:  192
//       float4x4 m_shadowProjection2;  // Offset:  256
//       float4 m_eyepos;               // Offset:  320
//       float4 m_projectionParam;      // Offset:  336
//       float4 m_viewportSize;         // Offset:  352
//       float4 m_exposure;             // Offset:  368
//       float4 m_fogParam[3];          // Offset:  384
//       float4 m_fogColor;             // Offset:  432
//       float4 m_cameraCenterOffset;   // Offset:  448
//       float4 m_shadowMapResolutions; // Offset:  464
//
//   } g_vsScene;                       // Offset:    0 Size:   480
//
// }
//
// cbuffer cVSObject
// {
//
//   struct VSObject
//   {
//       
//       float4x4 m_viewWorld;          // Offset:    0
//       float4x4 m_world;              // Offset:   64
//       float4 m_useWeightCount;       // Offset:  128
//       float4 m_localParam[4];        // Offset:  144
//
//   } g_vsObject;                      // Offset:    0 Size:   208
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cVSScene                          cbuffer      NA          NA    2        1
// cVSObject                         cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyzw        3     NONE   float       
// TEXCOORD                 2   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_constantbuffer cb5[4], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_temps 2

#line 402 "e:\work.stm\rel\fox_dev\_intermediate\win64\FxShaders_dx11_win64\Release\Prim_Poly_Distortion_VF_vs.hlsl"
mov r0.xyz, v0.xyzx
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb5[0].xyzw  // ApplyMatrixT<0:NaN:Inf>
dp4 r1.y, r0.xyzw, cb5[1].xyzw  // ApplyMatrixT<1:NaN:Inf>
dp4 r1.z, r0.xyzw, cb5[2].xyzw  // ApplyMatrixT<2:NaN:Inf>
dp4 r1.w, r0.xyzw, cb5[3].xyzw  // ApplyMatrixT<3:NaN:Inf>
dp4 r0.x, r1.xyzw, cb2[4].xyzw  // ApplyMatrixT<0:NaN:Inf>
dp4 r0.y, r1.xyzw, cb2[5].xyzw  // ApplyMatrixT<1:NaN:Inf>
dp4 r0.z, r1.xyzw, cb2[6].xyzw  // ApplyMatrixT<2:NaN:Inf>
dp4 r0.w, r1.xyzw, cb2[7].xyzw  // ApplyMatrixT<3:NaN:Inf>

#line 71
mov o0.xyzw, r0.xyzw  // outPosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
mov o3.xyzw, r0.xyzw  // outBasePos2<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
mov o2.z, r0.w  // outBasePos<2:NaN:Inf>
mov o1.xy, v2.xyxx  // outBaseUV<0,1>
mad o2.xy, v0.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)  // outBasePos<0:Inf,1:Inf>
mov o4.xyzw, v1.xyzw  // outColor<0,1,2,3>
ret 
// Approximately 17 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
