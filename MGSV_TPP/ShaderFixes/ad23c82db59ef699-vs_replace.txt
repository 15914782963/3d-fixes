// hlsltool.py --auto-fix-vertex-halo --only-autofixed -i ad23c82db59ef699-vs_replace.txt
// ---- Created with 3Dmigoto v1.2.24 on Tue Jan 19 04:44:17 2016

cbuffer cVSScene : register(b2)
{

  struct
  {
    float4x4 m_projectionView;
    float4x4 m_projection;
    float4x4 m_view;
    float4x4 m_shadowProjection;
    float4x4 m_shadowProjection2;
    float4 m_eyepos;
    float4 m_projectionParam;
    float4 m_viewportSize;
    float4 m_exposure;
    float4 m_fogParam[3];
    float4 m_fogColor;
    float4 m_cameraCenterOffset;
    float4 m_shadowMapResolutions;
  } g_vsScene : packoffset(c0);

}

cbuffer cVSObject : register(b5)
{

  struct
  {
    float4x4 m_viewWorld;
    float4x4 m_world;
    float4 m_useWeightCount;
    float4 m_localParam[4];
  } g_vsObject : packoffset(c0);

}

cbuffer cVSMaterial : register(b4)
{

  struct
  {
    float4 m_materials[8];
  } g_vsMaterial : packoffset(c0);

}



// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  float4 v1 : COLOR0,
  float4 v2 : TEXCOORD0,
  float4 v3 : TEXCOORD1,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3,
  out float4 o5 : TEXCOORD4)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = v1.xyzw;
  r1.xyz = v0.xyz;
  r2.z = v3.x;
  r2.xy = v2.xy;
  r3.w = 1;
  r3.xyz = v0.xyz;
  r4.x = dot(r3.xyzw, g_vsObject.m_viewWorld._m00_m10_m20_m30);
  r4.y = dot(r3.xyzw, g_vsObject.m_viewWorld._m01_m11_m21_m31);
  r1.w = dot(r3.xyzw, g_vsObject.m_viewWorld._m02_m12_m22_m32);
  r4.w = dot(r3.xyzw, g_vsObject.m_viewWorld._m03_m13_m23_m33);
  r2.w = g_vsObject.m_localParam[3].w;
  r4.z = r2.w + r1.w;
  r3.x = dot(r4.xyzw, g_vsScene.m_projection._m00_m10_m20_m30);
  r3.y = dot(r4.xyzw, g_vsScene.m_projection._m01_m11_m21_m31);
  r3.z = dot(r4.xyzw, g_vsScene.m_projection._m02_m12_m22_m32);
  r3.w = dot(r4.xyzw, g_vsScene.m_projection._m03_m13_m23_m33);
  r1.w = g_vsObject.m_localParam[3].x;
  r2.w = -r1.w;
  r4.xyz = max(r2.www, r1.www);
  r4.w = 1;
  r0.xyzw = r4.xyzw * r0.xyzw;
  r4.xy = g_vsMaterial.m_materials[3].xy;
  r4.xy = r4.xy * r2.xy;
  r1.w = 2 * r1.x;
  r5.x = -1 + r1.w;
  r1.w = -2 * r1.y;
  r5.y = 1 + r1.w;

o0.xyzw = r3.xyzw; // Relocated to here with hlsltool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py --auto-fix-vertex-halo --only-autofixed -i ad23c82db59ef699-vs_replace.txt
float4 stereo = StereoParams.Load(0);
if (r3.w != 1.0)
  r3.x += stereo.x * (r3.w - stereo.y);

  r5.z = r3.w;
  r4.z = r5.z;

  // o0.xyzw = r3.xyzw; // Relocated from here with hlsltool.py

  o5.xyzw = r0.xyzw;
  o1.xyz = r2.xyz;
  o3.xyz = r4.xyz;
  o2.xyz = r5.xyz;
  o4.xyz = r1.xyz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer cVSScene
// {
//
//   struct VSScene
//   {
//       
//       float4x4 m_projectionView;     // Offset:    0
//       float4x4 m_projection;         // Offset:   64
//       float4x4 m_view;               // Offset:  128
//       float4x4 m_shadowProjection;   // Offset:  192
//       float4x4 m_shadowProjection2;  // Offset:  256
//       float4 m_eyepos;               // Offset:  320
//       float4 m_projectionParam;      // Offset:  336
//       float4 m_viewportSize;         // Offset:  352
//       float4 m_exposure;             // Offset:  368
//       float4 m_fogParam[3];          // Offset:  384
//       float4 m_fogColor;             // Offset:  432
//       float4 m_cameraCenterOffset;   // Offset:  448
//       float4 m_shadowMapResolutions; // Offset:  464
//
//   } g_vsScene;                       // Offset:    0 Size:   480
//
// }
//
// cbuffer cVSObject
// {
//
//   struct VSObject
//   {
//       
//       float4x4 m_viewWorld;          // Offset:    0
//       float4x4 m_world;              // Offset:   64
//       float4 m_useWeightCount;       // Offset:  128
//       float4 m_localParam[4];        // Offset:  144
//
//   } g_vsObject;                      // Offset:    0 Size:   208
//
// }
//
// cbuffer cVSMaterial
// {
//
//   struct VSMaterial
//   {
//       
//       float4 m_materials[8];         // Offset:    0
//
//   } g_vsMaterial;                    // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cVSScene                          cbuffer      NA          NA    2        1
// cVSMaterial                       cbuffer      NA          NA    4        1
// cVSObject                         cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyzw        3     NONE   float   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_constantbuffer cb5[13], immediateIndexed
dcl_constantbuffer cb4[4], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xy
dcl_input v3.x
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyzw
dcl_temps 6

#line 77 "d:\work\master\git_clone\_intermediate\win64\FxShaders_dx11_win64\Release\Prim_Poly_SunshineScroll_vs.hlsl"
mov r0.xyzw, v1.xyzw  // inColor<0,1,2,3>

#line 80
mov r1.xyz, v0.xyzx  // NTransformInputSunshineScroll_transform_inPosition<0,1,2>
mov r0.xyzw, r0.xyzw  // NTransformInputSunshineScroll_transform_inColor<0,1,2,3>
mov r2.z, v3.x  // NTransformInputSunshineScroll_transform_inAttribute1<0>
mov r2.xy, v2.xyxx  // NTransformInputSunshineScroll_transform_inUV<0,1>
nop 
mov r1.xyz, r1.xyzx  // inPosition<0,1,2>
mov r0.xyzw, r0.xyzw  // inColor<0,1,2,3>
mov r2.z, r2.z  // inAttribute1<0>
mov r2.xy, r2.xyxx  // inUV<0,1>

#line 37
mov r2.z, r2.z  // particleTime<0>

#line 40
nop 
mov r3.w, l(1.000000)  // vec<3: 1f>

#line 408
mov r3.xyz, v0.xyzx
dp4 r4.x, r3.xyzw, cb5[0].xyzw  // ApplyMatrixT<0:NaN:Inf>
dp4 r4.y, r3.xyzw, cb5[1].xyzw  // ApplyMatrixT<1:NaN:Inf>
dp4 r1.w, r3.xyzw, cb5[2].xyzw  // ApplyMatrixT<2:NaN:Inf>
dp4 r4.w, r3.xyzw, cb5[3].xyzw  // ApplyMatrixT<3:NaN:Inf>

#line 40
mov r1.w, r1.w  // viewPosition<2:NaN:Inf>
nop 

#line 152
nop 

#line 48
mov r2.w, cb5[12].w  // GetBaseColor<3>

#line 152
mov r2.w, r2.w  // GetCameraZOffset<0>

#line 41
add r4.z, r1.w, r2.w  // viewPosition<2:NaN:Inf>
nop 

#line 408
dp4 r3.x, r4.xyzw, cb2[4].xyzw  // ApplyMatrixT<0:NaN:Inf>
dp4 r3.y, r4.xyzw, cb2[5].xyzw  // ApplyMatrixT<1:NaN:Inf>
dp4 r3.z, r4.xyzw, cb2[6].xyzw  // ApplyMatrixT<2:NaN:Inf>
dp4 r3.w, r4.xyzw, cb2[7].xyzw  // ApplyMatrixT<3:NaN:Inf>

#line 42
mov r3.xyzw, r3.xyzw  // outPosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
nop 

#line 211
nop 

#line 206
nop 

#line 48
mov r1.w, cb5[12].x  // GetBaseColor<0>

#line 206
mov r2.w, -r1.w
max r4.xyz, r1.wwww, r2.wwww  // GetLuminance<0:[0f,3.40282e+038f],0:[0f,3.40282e+038f],0:[0f,3.40282e+038f]>

#line 211
mov r4.xyz, r4.xyzx  // GetLuminanceVector<0:[0f,3.40282e+038f],1:[0f,3.40282e+038f],2:[0f,3.40282e+038f]>
mov r4.w, l(1.000000)  // GetLuminanceVector<3: 1f>

#line 43
mul r0.xyzw, r0.xyzw, r4.xyzw  // outColor<0:Inf,1:Inf,2:Inf,3>
mov r2.xy, r2.xyxx  // outBaseUV<0,1>
mov r2.z, r2.z  // outBaseUV<2>
mov r4.xy, cb4[3].xyxx  // rgbUVTileRate<0,1>
mul r4.xy, r2.xyxx, r4.xyxx  // outBaseRGBUV<0:Inf,1:Inf>
mul r1.w, r1.x, l(2.000000)
add r5.x, r1.w, l(-1.000000)  // outBasePos<0:Inf>
mul r1.w, r1.y, l(-2.000000)
add r5.y, r1.w, l(1.000000)  // outBasePos<1:Inf>
mov r5.z, r3.w  // outBasePos<2:NaN:Inf>
mov r1.xyz, r1.xyzx  // outWorldPos<0,1,2>

#line 83
mov r3.xyzw, r3.xyzw  // NTransformInputSunshineScroll_transform_outPosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
mov r0.xyzw, r0.xyzw  // NTransformInputSunshineScroll_transform_outColor<0:Inf,1:Inf,2:Inf,3>
mov r2.xy, r2.xyxx  // NTransformInputSunshineScroll_transform_outBaseUV<0,1>
mov r2.z, r2.z  // NTransformInputSunshineScroll_transform_outBaseUV<2>
mov r5.x, r5.x  // NTransformInputSunshineScroll_transform_outBasePos<0:Inf>
mov r5.y, r5.y  // NTransformInputSunshineScroll_transform_outBasePos<1:Inf>
mov r5.z, r5.z  // NTransformInputSunshineScroll_transform_outBasePos<2:NaN:Inf>
mov r1.xyz, r1.xyzx  // NTransformInputSunshineScroll_transform_outWorldPos<0,1,2>
mov r4.xy, r4.xyxx  // NTransformInputSunshineScroll_transform_outBaseRGBUV<0:Inf,1:Inf>
mov r4.z, r5.z  // NTransformInputSunshineScroll_transform_outBaseRGBUV<2:NaN:Inf>
mov o0.xyzw, r3.xyzw  // outPosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
mov o5.xyzw, r0.xyzw  // outColor<0:Inf,1:Inf,2:Inf,3>
mov o1.xyz, r2.xyzx  // outBaseUV<0,1,2>
mov o3.xyz, r4.xyzx  // outBaseRGBUV<0:Inf,1:Inf,2:NaN:Inf>
mov o2.xyz, r5.xyzx  // outBasePos<0:Inf,1:Inf,2:NaN:Inf>
mov o4.xyz, r1.xyzx  // outWorldPos<0,1,2>

#line 63
ret 
// Approximately 66 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ HLSL errors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Steam\steamapps\common\MGS_TPP\wrapper1349(62,14-15): warning X3578: Output value 'o1' is not completely initialized
C:\Steam\steamapps\common\MGS_TPP\wrapper1349(63,14-15): warning X3578: Output value 'o2' is not completely initialized
C:\Steam\steamapps\common\MGS_TPP\wrapper1349(64,14-15): warning X3578: Output value 'o3' is not completely initialized
C:\Steam\steamapps\common\MGS_TPP\wrapper1349(65,14-15): warning X3578: Output value 'o4' is not completely initialized
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
