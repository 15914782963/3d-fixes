// ---- Created with 3Dmigoto v1.2.24 on Tue Jan 19 04:43:42 2016

cbuffer cVSSystem : register(b0)
{

  struct
  {
    float4 m_param;
    float4 m_renderInfo;
    float4 m_renderBuffer;
    float4 m_dominantLightDir;
  } g_vsSystem : packoffset(c0);

}



// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = v0.xyzw;
  r0.xyzw = r0.xyzw;
  r0.xyzw = r0.xyzw;
  r1.zw = r0.zw;
  r2.xy = float2(0.5,-0.5) * r0.xy;
  r2.zw = float2(0.5,0.5) * r1.ww;
  r2.xy = r2.xy + r2.zw;
  r3.xyzw = g_vsSystem.m_renderBuffer.zwzw * g_vsSystem.m_renderInfo.xyzw;
  r2.xy = r2.xy;
  r1.zw = r1.zw;
  r2.xy = r2.xy * r3.xy;
  r2.zw = r1.ww * r3.zw;
  r1.xy = r2.xy + r2.zw;
  r1.xy = r1.xy;
  r1.zw = r1.zw;
  r0.xyzw = r0.xyzw;
  r1.xyzw = r1.xyzw;
  o0.xyzw = r0.xyzw;
  o1.xyzw = r0.xyzw;
  o2.xyzw = r1.xyzw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer cVSSystem
// {
//
//   struct VSSystem
//   {
//       
//       float4 m_param;                // Offset:    0
//       float4 m_renderInfo;           // Offset:   16
//       float4 m_renderBuffer;         // Offset:   32
//       float4 m_dominantLightDir;     // Offset:   48
//
//   } g_vsSystem;                      // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cVSSystem                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[3], immediateIndexed
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 4

#line 27 "d:\work\master\git_clone\_intermediate\win64\GrModelShaders_dx11_win64\Release\SSLighting2_Sun_LargestCascade_vs.hlsl"
mov r0.xyzw, v0.xyzw  // NScreenCoordinateToDrawCoordinate_drawCoordinate_inPosition<0,1,2,3>
nop 
mov r0.xyzw, r0.xyzw  // inPosition<0,1,2,3>

#line 140
mov r0.xyzw, r0.xyzw  // outPosition<0,1,2,3>

#line 143
mov r1.zw, r0.zzzw  // screenBase<2,3>
mul r2.xy, r0.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
mul r2.zw, r1.wwww, l(0.000000, 0.000000, 0.500000, 0.500000)
add r2.xy, r2.zwzz, r2.xyxx  // screenBase<0,1>
mul r3.xyzw, cb0[1].xyzw, cb0[2].zwzw  // viewToUv<0:Inf,1:Inf,2:Inf,3:Inf>
mov r2.xy, r2.xyxx  // backBufferSamplingPosition<0,1>
mov r1.zw, r1.zzzw  // backBufferSamplingPosition<2,3>
mul r2.xy, r3.xyxx, r2.xyxx
mul r2.zw, r3.zzzw, r1.wwww
add r1.xy, r2.zwzz, r2.xyxx  // backBufferSamplingPosition<0:NaN:Inf,1:NaN:Inf>

#line 156
mov r1.xy, r1.xyxx  // outBackBufferSamplingPosition<0:NaN:Inf,1:NaN:Inf>
mov r1.zw, r1.zzzw  // outBackBufferSamplingPosition<2,3>

#line 28
mov r0.xyzw, r0.xyzw  // NScreenCoordinateToDrawCoordinate_drawCoordinate_outPosition<0,1,2,3>
mov r1.xyzw, r1.xyzw  // NScreenCoordinateToDrawCoordinate_drawCoordinate_outBackBufferSamplingPosition<0:NaN:Inf,1:NaN:Inf,2,3>
mov o0.xyzw, r0.xyzw  // outPosition<0,1,2,3>

#line 32
mov o1.xyzw, r0.xyzw  // outClipSpacePosition<0,1,2,3>
mov o2.xyzw, r1.xyzw  // outBackBufferSamplingPosition<0:NaN:Inf,1:NaN:Inf,2,3>

#line 11
ret 
// Approximately 22 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
