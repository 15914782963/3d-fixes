// hlsltool.py --auto-fix-vertex-halo --only-autofixed -i 53e5d416fcc8740a-vs_replace.txt
// ---- Created with 3Dmigoto v1.2.24 on Tue Jan 19 04:43:41 2016



// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float2 v0 : POSITION0,
  out float4 o0 : SV_Position0,
  out float2 o1 : TEXCOORD0)
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = v0.xy;
  r0.xy = float2(2,-2) * r0.xy;
  r0.xy = float2(-1,1) + r0.xy;
  r0.zw = float2(1,1);
  o0.xyzw = r0.xyzw;

// Automatic vertex shader halo fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py --auto-fix-vertex-halo --only-autofixed -i 53e5d416fcc8740a-vs_replace.txt
float4 stereo = StereoParams.Load(0);
if (r0.w != 1.0)
  r0.x += stereo.x * (r0.w - stereo.y);

  o1.xy = r0.xy;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xy          0     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_input v0.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_temps 1

#line 21 "d:\work\master\git_clone\_intermediate\win64\GrSystemShaders_dx11_win64\Release\CopyRenderBuffer_MRT_vs.hlsl"
mov r0.xy, v0.xyxx  // NScreenCoordinateToDrawCoordinate_drawCoordinate_inPosition<0,1>
nop 
mov r0.xy, r0.xyxx  // inPosition<0,1>

#line 32
mul r0.xy, r0.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000)
add r0.xy, r0.xyxx, l(-1.000000, 1.000000, 0.000000, 0.000000)  // outPosition<0:Inf,1:Inf>

#line 22
mov r0.xy, r0.xyxx  // NScreenCoordinateToDrawCoordinate_drawCoordinate_outPosition<0:Inf,1:Inf>
mov r0.zw, l(0,0,1.000000,1.000000)  // NScreenCoordinateToDrawCoordinate_drawCoordinate_outPosition<2: 1f,3: 1f>
mov o0.xyzw, r0.xyzw  // outPosition<0:Inf,1:Inf,2: 1f,3: 1f>
mov o1.xy, r0.xyxx  // outTexcoord<0:Inf,1:Inf>

#line 12
ret 
// Approximately 10 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
