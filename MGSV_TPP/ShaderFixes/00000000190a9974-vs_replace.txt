// ---- Created with 3Dmigoto v1.2.42 on Sun Dec 18 03:31:36 2016

cbuffer cVSScene : register(b2)
{

  struct
  {
    float4x4 m_projectionView;
    float4x4 m_projection;
    float4x4 m_view;
    float4x4 m_shadowProjection;
    float4x4 m_shadowProjection2;
    float4 m_eyepos;
    float4 m_projectionParam;
    float4 m_viewportSize;
    float4 m_exposure;
    float4 m_fogParam[3];
    float4 m_fogColor;
    float4 m_cameraCenterOffset;
    float4 m_shadowMapResolutions;
  } g_vsScene : packoffset(c0);

}

cbuffer cVSObject : register(b5)
{

  struct
  {
    float4x4 m_viewWorld;
    float4x4 m_world;
    float4 m_useWeightCount;
    float4 m_localParam[4];
  } g_vsObject : packoffset(c0);

}

cbuffer cVSMaterial : register(b4)
{

  struct
  {
    float4 m_materials[8];
  } g_vsMaterial : packoffset(c0);

}

cbuffer VSBones : register(b6)
{

  struct
  {
    float4x3 m_boneMatrices[32];
  } g_vsBone : packoffset(c0);


  struct
  {
    float4x3 m_boneMatrices[32];
  } g_vsPrevBone : packoffset(c96);

}



// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  float4 v1 : NORMAL0,
  float4 v2 : COLOR0,
  float4 v3 : TANGENT0,
  uint4 v4 : BLENDINDICES0,
  float4 v5 : BLENDWEIGHT0,
  float4 v6 : TEXCOORD0,
  float4 v7 : TEXCOORD1,
  float4 v8 : TEXCOORD2,
  float2 v9 : TEXCOORD3,
  out float4 o0 : SV_Position0,
  out float4 o1 : COLOR0,
  out float2 o2 : TEXCOORD0,
  out float2 p2 : TEXCOORD1,
  out float4 o3 : TEXCOORD5,
  out float4 o4 : TEXCOORD6,
  out float3 o5 : TEXCOORD7)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10;
  uint4 bitmask, uiDest;
  float4 fDest;

  float4 x0[3];
  r0.xyz = v2.xyz;
  r1.xyz = v0.xyz;
  r2.xyz = v1.xyz;
  r3.xyzw = v3.xyzw;
  r4.xyzw = v5.xyzw;
  r1.xyz = r1.xyz;
  r2.xyz = r2.xyz;
  r3.xyzw = r3.xyzw;
  r4.xyzw = r4.xyzw;
  r1.xyz = r1.xyz;
  r0.w = cmp(g_vsObject.m_useWeightCount.x != 0.000000);
  if (r0.w != 0) {
    r4.xyzw = r4.xyzw;
    r0.w = (int)v4.x * 3;
    r5.xyzw = g_vsBone.m_boneMatrices[v4.x]._m00_m10_m20_m30 * r4.xxxx;
    r6.xyzw = g_vsBone.m_boneMatrices[v4.x]._m01_m11_m21_m31 * r4.xxxx;
    r7.xyzw = g_vsBone.m_boneMatrices[v4.x]._m02_m12_m22_m32 * r4.xxxx;
    r0.w = (int)v4.y * 3;
    r8.xyzw = g_vsBone.m_boneMatrices[v4.x]._m00_m10_m20_m30 * r4.yyyy;
    r9.xyzw = g_vsBone.m_boneMatrices[v4.x]._m01_m11_m21_m31 * r4.yyyy;
    r10.xyzw = g_vsBone.m_boneMatrices[v4.x]._m02_m12_m22_m32 * r4.yyyy;
    r5.xyzw = r8.xyzw + r5.xyzw;
    r6.xyzw = r9.xyzw + r6.xyzw;
    r7.xyzw = r10.xyzw + r7.xyzw;
    r0.w = (int)v4.z * 3;
    r8.xyzw = g_vsBone.m_boneMatrices[v4.x]._m00_m10_m20_m30 * r4.zzzz;
    r9.xyzw = g_vsBone.m_boneMatrices[v4.x]._m01_m11_m21_m31 * r4.zzzz;
    r10.xyzw = g_vsBone.m_boneMatrices[v4.x]._m02_m12_m22_m32 * r4.zzzz;
    r5.xyzw = r8.xyzw + r5.xyzw;
    r6.xyzw = r9.xyzw + r6.xyzw;
    r7.xyzw = r10.xyzw + r7.xyzw;
    r0.w = (int)v4.w * 3;
    r8.xyzw = g_vsBone.m_boneMatrices[v4.x]._m00_m10_m20_m30 * r4.wwww;
    r9.xyzw = g_vsBone.m_boneMatrices[v4.x]._m01_m11_m21_m31 * r4.wwww;
    r4.xyzw = g_vsBone.m_boneMatrices[v4.x]._m02_m12_m22_m32 * r4.wwww;
    r5.xyzw = r8.xyzw + r5.xyzw;
    r6.xyzw = r9.xyzw + r6.xyzw;
    r4.xyzw = r7.xyzw + r4.xyzw;
    r1.x = dot(v0.xyzw, r5.xyzw);
    r1.y = dot(v0.xyzw, r6.xyzw);
    r1.z = dot(v0.xyzw, r4.xyzw);
    r1.xyz = r1.xyz;
    r7.w = 0;
    r7.xyz = v1.xyz;
    r2.x = dot(r7.xyzw, r5.xyzw);
    r2.y = dot(r7.xyzw, r6.xyzw);
    r2.z = dot(r7.xyzw, r4.xyzw);
    r2.xyz = r2.xyz;
    r7.w = 0;
    r7.xyz = v3.xyz;
    r5.x = dot(r7.xyzw, r5.xyzw);
    r5.y = dot(r7.xyzw, r6.xyzw);
    r5.z = dot(r7.xyzw, r4.xyzw);
    r5.xyz = r5.xyz;
    r1.xyz = r1.xyz;
    r2.xyz = r2.xyz;
    r5.xyz = r5.xyz;
  } else {
    r5.xyz = r3.xyz;
  }
  r1.w = v0.w;
  r4.x = dot(r1.xyzw, g_vsObject.m_viewWorld._m00_m10_m20_m30);
  r4.y = dot(r1.xyzw, g_vsObject.m_viewWorld._m01_m11_m21_m31);
  r4.z = dot(r1.xyzw, g_vsObject.m_viewWorld._m02_m12_m22_m32);
  r4.w = dot(r1.xyzw, g_vsObject.m_viewWorld._m03_m13_m23_m33);
  r1.x = dot(r4.xyzw, g_vsScene.m_projection._m00_m10_m20_m30);
  r1.y = dot(r4.xyzw, g_vsScene.m_projection._m01_m11_m21_m31);
  r1.z = dot(r4.xyzw, g_vsScene.m_projection._m02_m12_m22_m32);
  r1.w = dot(r4.xyzw, g_vsScene.m_projection._m03_m13_m23_m33);
  r1.xyzw = r1.xyzw;
  r1.xyzw = r1.xyzw;
  r2.w = 0;
  r3.x = dot(r2.xyzw, g_vsObject.m_viewWorld._m00_m10_m20_m30);
  r3.y = dot(r2.xyzw, g_vsObject.m_viewWorld._m01_m11_m21_m31);
  r3.z = dot(r2.xyzw, g_vsObject.m_viewWorld._m02_m12_m22_m32);
  r0.w = dot(r3.xyz, r3.xyz);
  r0.w = rsqrt(r0.w);
  r2.xyz = r3.xyz * r0.www;
  r5.w = 0;
  r3.x = dot(r5.xyzw, g_vsObject.m_viewWorld._m00_m10_m20_m30);
  r3.y = dot(r5.xyzw, g_vsObject.m_viewWorld._m01_m11_m21_m31);
  r3.z = dot(r5.xyzw, g_vsObject.m_viewWorld._m02_m12_m22_m32);
  r0.w = dot(r3.xyz, r3.xyz);
  r0.w = rsqrt(r0.w);
  r3.xyz = r3.xyz * r0.www;
  r4.xyz = r3.zxy * r2.yzx;
  r5.xyz = r3.yzx * r2.zxy;
  r5.xyz = -r5.xyz;
  r4.xyz = r5.xyz + r4.xyz;
  r0.w = dot(r4.xyz, r4.xyz);
  r0.w = rsqrt(r0.w);
  r4.xyz = r4.xyz * r0.www;
  r4.xyz = r4.xyz * r3.www;
  r1.xyzw = r1.xyzw;
  r5.xy = v7.xy;
  r5.xy = r5.xy;
  r5.xy = g_vsMaterial.m_materials[1].zw + r5.xy;
  r5.xy = g_vsMaterial.m_materials[1].xy * r5.xy;
  r5.xy = r5.xy;
  r5.zw = v6.xy;
  r5.zw = r5.zw;
  r5.zw = r5.zw;
  r5.zw = r5.zw;
  o0.xyzw = r1.xyzw;
  o2.xy = r5.zw;
  p2.xy = r5.xy;
  x0[0].xyz = r3.xyz;
  x0[1].xyz = r4.xyz;
  x0[2].xyz = r2.xyz;
  o1.xyz = r0.xyz;
  o1.w = g_vsObject.m_useWeightCount.w;
  r0.xyz = x0[0].xyz;
  r1.xyz = x0[1].xyz;
  r2.xyz = x0[2].xyz;
  o3.xyz = r0.xyz;
  o4.xyz = r1.xyz;
  o5.xyz = r2.xyz;
  return;
}