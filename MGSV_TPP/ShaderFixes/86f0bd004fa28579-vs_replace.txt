// ---- Created with 3Dmigoto v1.2.24 on Tue Jan 19 04:44:43 2016

cbuffer cVSScene : register(b2)
{

  struct
  {
    float4x4 m_projectionView;
    float4x4 m_projection;
    float4x4 m_view;
    float4x4 m_shadowProjection;
    float4x4 m_shadowProjection2;
    float4 m_eyepos;
    float4 m_projectionParam;
    float4 m_viewportSize;
    float4 m_exposure;
    float4 m_fogParam[3];
    float4 m_fogColor;
    float4 m_cameraCenterOffset;
    float4 m_shadowMapResolutions;
  } g_vsScene : packoffset(c0);

}

cbuffer cVSObject : register(b5)
{

  struct
  {
    float4x4 m_viewWorld;
    float4x4 m_world;
    float4 m_useWeightCount;
    float4 m_localParam[4];
  } g_vsObject : packoffset(c0);

}



// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  float4 v1 : COLOR0,
  float4 v2 : TEXCOORD0,
  float4 v3 : TEXCOORD1,
  float4 v4 : TEXCOORD2,
  out float4 o0 : SV_Position0,
  out float4 o1 : COLOR0,
  out float4 o2 : TEXCOORD0,
  out float4 o3 : TEXCOORD1,
  out float4 o4 : TEXCOORD2)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = v1.xyzw;
  r1.xy = v2.xy;
  r0.xyzw = r0.xyzw;
  r1.xy = r1.xy;
  r0.xyzw = r0.xyzw;
  r0.xyzw = r0.xyzw;
  r2.w = 1;
  r2.xyz = v0.xyz;
  r3.x = dot(r2.xyzw, g_vsObject.m_world._m00_m10_m20_m30);
  r3.y = dot(r2.xyzw, g_vsObject.m_world._m01_m11_m21_m31);
  r3.z = dot(r2.xyzw, g_vsObject.m_world._m02_m12_m22_m32);
  r2.x = r3.x;
  r2.y = r3.y;
  r2.z = r3.z;
  r2.xyz = r2.xyz;
  r3.w = 1;
  r4.x = dot(r3.xyzw, g_vsScene.m_projectionView._m00_m10_m20_m30);
  r4.y = dot(r3.xyzw, g_vsScene.m_projectionView._m01_m11_m21_m31);
  r4.z = dot(r3.xyzw, g_vsScene.m_projectionView._m02_m12_m22_m32);
  r4.w = dot(r3.xyzw, g_vsScene.m_projectionView._m03_m13_m23_m33);
  r4.xyzw = r4.xyzw;
  r0.xyzw = r0.xyzw;
  r3.y = g_vsScene.m_exposure.z;
  r3.y = r3.y;
  r4.xyzw = r4.xyzw;
  r2.xyz = r2.xyz;
  r0.xyzw = r0.xyzw;
  r3.xw = float2(1,1);
  r3.z = r4.w;
  r3.y = r3.y;
  r4.xyzw = r4.xyzw;
  r3.xyzw = r3.xyzw;
  r0.xyzw = r0.xyzw;
  r2.xyz = r2.xyz;
  r4.xyzw = r4.xyzw;
  r3.xyzw = r3.xyzw;
  r0.xyzw = r0.xyzw;
  r2.xyz = r2.xyz;
  r4.xyzw = r4.xyzw;
  r2.xyz = r2.xyz;
  r0.xyzw = r0.xyzw;
  r1.xy = r1.xy;
  r3.xyzw = r3.xyzw;
  r4.xyzw = r4.xyzw;
  r0.xyzw = r0.xyzw;
  r1.xy = r1.xy;
  r2.xyz = r2.xyz;
  r3.xyzw = r3.xyzw;
  o0.xyzw = r4.xyzw;
  o1.xyzw = r0.xyzw;
  o2.xy = r1.xy;
  o3.xyz = r2.xyz;
  o4.xyzw = r3.xyzw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer cVSScene
// {
//
//   struct VSScene
//   {
//       
//       float4x4 m_projectionView;     // Offset:    0
//       float4x4 m_projection;         // Offset:   64
//       float4x4 m_view;               // Offset:  128
//       float4x4 m_shadowProjection;   // Offset:  192
//       float4x4 m_shadowProjection2;  // Offset:  256
//       float4 m_eyepos;               // Offset:  320
//       float4 m_projectionParam;      // Offset:  336
//       float4 m_viewportSize;         // Offset:  352
//       float4 m_exposure;             // Offset:  368
//       float4 m_fogParam[3];          // Offset:  384
//       float4 m_fogColor;             // Offset:  432
//       float4 m_cameraCenterOffset;   // Offset:  448
//       float4 m_shadowMapResolutions; // Offset:  464
//
//   } g_vsScene;                       // Offset:    0 Size:   480
//
// }
//
// cbuffer cVSObject
// {
//
//   struct VSObject
//   {
//       
//       float4x4 m_viewWorld;          // Offset:    0
//       float4x4 m_world;              // Offset:   64
//       float4 m_useWeightCount;       // Offset:  128
//       float4 m_localParam[4];        // Offset:  144
//
//   } g_vsObject;                      // Offset:    0 Size:   208
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cVSScene                          cbuffer      NA          NA    2        1
// cVSObject                         cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyzw        3     NONE   float       
// TEXCOORD                 2   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb2[24], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o3.xyz
dcl_output o4.xyzw
dcl_temps 5

#line 91 "d:\work\master\git_clone\_intermediate\win64\TppShaders_dx11_win64\Release\Prim_TppCigaretteSmokeFire_vs.hlsl"
mov r0.xyzw, v1.xyzw  // inColor<0,1,2,3>

#line 99
mov r1.xy, v2.xyxx  // NTransformInputBasic_transform_inUV<0,1>
mov r0.xyzw, r0.xyzw  // NTransformInputBasic_transform_inColor<0,1,2,3>
nop 
mov r1.xy, r1.xyxx  // inUV<0,1>
mov r0.xyzw, r0.xyzw  // inColor<0,1,2,3>

#line 72
nop 
mov r0.xyzw, r0.xyzw  // inVertexColor<0,1,2,3>

#line 200
nop 
mov r2.w, l(1.000000)  // vec<3: 1f>

#line 408
mov r2.xyz, v0.xyzx
dp4 r3.x, r2.xyzw, cb5[4].xyzw  // ApplyMatrixT<0:NaN:Inf>
dp4 r3.y, r2.xyzw, cb5[5].xyzw  // ApplyMatrixT<1:NaN:Inf>
dp4 r3.z, r2.xyzw, cb5[6].xyzw  // ApplyMatrixT<2:NaN:Inf>
mov r2.x, r3.x  // ApplyMatrixT<0:NaN:Inf>
mov r2.y, r3.y  // ApplyMatrixT<1:NaN:Inf>
mov r2.z, r3.z  // ApplyMatrixT<2:NaN:Inf>

#line 200
mov r2.xyz, r2.xyzx  // worldPosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 203
nop 
mov r3.w, l(1.000000)  // vec<3: 1f>

#line 408
dp4 r4.x, r3.xyzw, cb2[0].xyzw  // ApplyMatrixT<0:NaN:Inf>
dp4 r4.y, r3.xyzw, cb2[1].xyzw  // ApplyMatrixT<1:NaN:Inf>
dp4 r4.z, r3.xyzw, cb2[2].xyzw  // ApplyMatrixT<2:NaN:Inf>
dp4 r4.w, r3.xyzw, cb2[3].xyzw  // ApplyMatrixT<3:NaN:Inf>

#line 203
mov r4.xyzw, r4.xyzw  // clipPosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 206
mov r0.xyzw, r0.xyzw  // color<0,1,2,3>
nop 

#line 41
mov r3.y, cb2[23].z  // GetCurrentExposureValue<0>

#line 208
mov r3.y, r3.y  // currentExposureValue<0>

#line 218
mov r4.xyzw, r4.xyzw  // info<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
mov r2.xyz, r2.xyzx  // info<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
mov r0.xyzw, r0.xyzw  // info<11,12,13,14>

#line 226
mov r3.xw, l(1.000000,0,0,1.000000)  // info<7: 1f,10: 1f>
mov r3.z, r4.w  // info<9:NaN:Inf>
mov r3.y, r3.y  // info<8>
mov r4.xyzw, r4.xyzw  // CalculateTransformInfo<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
mov r3.xyzw, r3.xyzw  // CalculateTransformInfo<7: 1f,8,9:NaN:Inf,10: 1f>
mov r0.xyzw, r0.xyzw  // CalculateTransformInfo<11,12,13,14>
mov r2.xyz, r2.xyzx  // CalculateTransformInfo<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>

#line 72
mov r4.xyzw, r4.xyzw  // vertexTransformInfo<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
mov r3.xyzw, r3.xyzw  // vertexTransformInfo<7: 1f,8,9:NaN:Inf,10: 1f>
mov r0.xyzw, r0.xyzw  // vertexTransformInfo<11,12,13,14>
mov r2.xyz, r2.xyzx  // vertexTransformInfo<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>

#line 75
mov r4.xyzw, r4.xyzw  // outPosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 78
mov r2.xyz, r2.xyzx  // outWorldPos<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 81
mov r0.xyzw, r0.xyzw  // outColor<0,1,2,3>

#line 84
mov r1.xy, r1.xyxx  // outBaseUV<0,1>

#line 87
mov r3.xyzw, r3.xyzw  // outParams<0: 1f,1,2:NaN:Inf,3: 1f>

#line 99
mov r4.xyzw, r4.xyzw  // NTransformInputBasic_transform_outPosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
mov r0.xyzw, r0.xyzw  // NTransformInputBasic_transform_outColor<0,1,2,3>
mov r1.xy, r1.xyxx  // NTransformInputBasic_transform_outBaseUV<0,1>
mov r2.xyz, r2.xyzx  // NTransformInputBasic_transform_outWorldPos<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov r3.xyzw, r3.xyzw  // NTransformInputBasic_transform_outParams<0: 1f,1,2:NaN:Inf,3: 1f>

#line 102
mov o0.xyzw, r4.xyzw  // outPosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
mov o1.xyzw, r0.xyzw  // outColor<0,1,2,3>
mov o2.xy, r1.xyxx  // outBaseUV<0,1>
mov o3.xyz, r2.xyzx  // outWorldPos<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov o4.xyzw, r3.xyzw  // outParams<0: 1f,1,2:NaN:Inf,3: 1f>

#line 77
ret 
// Approximately 59 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ HLSL errors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Steam\steamapps\common\MGS_TPP\wrapper1349(54,14-15): warning X3578: Output value 'o2' is not completely initialized
C:\Steam\steamapps\common\MGS_TPP\wrapper1349(55,14-15): warning X3578: Output value 'o3' is not completely initialized
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
