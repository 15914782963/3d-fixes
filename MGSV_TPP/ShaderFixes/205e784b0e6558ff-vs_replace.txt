// hlsltool.py --auto-fix-vertex-halo --only-autofixed -i 205e784b0e6558ff-vs_replace.txt
// ---- Created with 3Dmigoto v1.2.24 on Tue Jan 19 04:44:49 2016

cbuffer cVSObject : register(b5)
{

  struct
  {
    float4x4 m_viewWorld;
    float4x4 m_world;
    float4 m_useWeightCount;
    float4 m_localParam[4];
  } g_vsObject : packoffset(c0);

}

cbuffer cVSMaterial : register(b4)
{

  struct
  {
    float4 m_materials[8];
  } g_vsMaterial : packoffset(c0);

}



// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float2 v0 : POSITION0,
  out float4 o0 : TEXCOORD0,
  out float3 o1 : TEXCOORD1,
  out float4 o2 : SV_Position0)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = g_vsMaterial.m_materials[0].xyz * g_vsMaterial.m_materials[0].www;
  r0.w = 0;
  r1.x = dot(r0.xyzw, g_vsObject.m_world._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, g_vsObject.m_world._m01_m11_m21_m31);
  r1.z = dot(r0.xyzw, g_vsObject.m_world._m02_m12_m22_m32);
  r1.z = -r1.z;
  r0.xy = v0.xy;
  r0.xy = float2(2,-2) * r0.xy;
  r0.xy = float2(-1,1) + r0.xy;
  r0.zw = float2(1,1);
  o2.xyzw = r0.xyzw;

// Automatic vertex shader halo fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py --auto-fix-vertex-halo --only-autofixed -i 205e784b0e6558ff-vs_replace.txt
float4 stereo = StereoParams.Load(0);
if (r0.w != 1.0)
  r0.x += stereo.x * (r0.w - stereo.y);

  o0.xy = r0.xy;
  o1.xyz = r1.xyz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer cVSObject
// {
//
//   struct VSObject
//   {
//       
//       float4x4 m_viewWorld;          // Offset:    0
//       float4x4 m_world;              // Offset:   64
//       float4 m_useWeightCount;       // Offset:  128
//       float4 m_localParam[4];        // Offset:  144
//
//   } g_vsObject;                      // Offset:    0 Size:   208
//
// }
//
// cbuffer cVSMaterial
// {
//
//   struct VSMaterial
//   {
//       
//       float4 m_materials[8];         // Offset:    0
//
//   } g_vsMaterial;                    // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cVSMaterial                       cbuffer      NA          NA    4        1
// cVSObject                         cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xy          0     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// SV_Position              0   xyzw        2      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_input v0.xy
dcl_output o0.xy
dcl_output o1.xyz
dcl_output_siv o2.xyzw, position
dcl_temps 2

#line 41 "d:\work\master\git_clone\_intermediate\win64\TppShaders_dx11_win64\Release\Draw2D_TPPSprintCameraBlur_vs.hlsl"
nop 

#line 23
mul r0.xyz, cb4[0].wwww, cb4[0].xyzx  // NPR_BLUR_VECTOR<0:Inf,1:Inf,2:Inf>
nop 

#line 412
mov r0.w, l(0)
dp4 r1.x, r0.xyzw, cb5[4].xyzw  // ApplyMatrixT<0:NaN:Inf>
dp4 r1.y, r0.xyzw, cb5[5].xyzw  // ApplyMatrixT<1:NaN:Inf>
dp4 r1.z, r0.xyzw, cb5[6].xyzw  // ApplyMatrixT<2:NaN:Inf>

#line 24
mov r1.xyz, r1.xyzx  // outOffsetVelocity<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov r1.z, -r1.z  // outOffsetVelocity<2:NaN:Inf>

#line 41
mov r1.xy, r1.xyxx  // NCalcOffsetVelocityInView_calcOffset_outOffsetVelocity<0:NaN:Inf,1:NaN:Inf>
mov r1.z, r1.z  // NCalcOffsetVelocityInView_calcOffset_outOffsetVelocity<2:NaN:Inf>
mov r0.xy, v0.xyxx  // NScreenCoordinateToDrawCoordinate_drawCoordinate_inPosition<0,1>
nop 
mov r0.xy, r0.xyxx  // inPosition<0,1>

#line 32
mul r0.xy, r0.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000)
add r0.xy, r0.xyxx, l(-1.000000, 1.000000, 0.000000, 0.000000)  // outPosition<0:Inf,1:Inf>

#line 44
mov r0.xy, r0.xyxx  // NScreenCoordinateToDrawCoordinate_drawCoordinate_outPosition<0:Inf,1:Inf>
mov r0.zw, l(0,0,1.000000,1.000000)  // NScreenCoordinateToDrawCoordinate_drawCoordinate_outPosition<2: 1f,3: 1f>
mov o2.xyzw, r0.xyzw  // outPosition<0:Inf,1:Inf,2: 1f,3: 1f>
mov o0.xy, r0.xyxx  // outTexcoord<0:Inf,1:Inf>
mov o1.xyz, r1.xyzx  // outOffsetVelocityInView<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 32
ret 
// Approximately 22 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ HLSL errors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Steam\steamapps\common\MGS_TPP\wrapper1349(36,14-15): warning X3578: Output value 'o0' is not completely initialized
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
