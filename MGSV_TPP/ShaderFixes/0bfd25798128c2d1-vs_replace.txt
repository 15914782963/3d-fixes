// hlsltool.py --auto-fix-vertex-halo --only-autofixed -i 0bfd25798128c2d1-vs_replace.txt
// ---- Created with 3Dmigoto v1.2.24 on Tue Jan 19 04:43:46 2016

cbuffer cVSSystem : register(b0)
{

  struct
  {
    float4 m_param;
    float4 m_renderInfo;
    float4 m_renderBuffer;
    float4 m_dominantLightDir;
  } g_vsSystem : packoffset(c0);

}



// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  out float4 o0 : TEXCOORD0,
  out float4 o1 : TEXCOORD1,
  out float4 o2 : SV_Position0)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = v0.xy;
  r0.zw = float2(2,-2) * r0.xy;
  r1.xy = float2(-1,1) + r0.zw;
  r2.xyzw = g_vsSystem.m_renderBuffer.zwzw * g_vsSystem.m_renderInfo.xyzw;
  r0.xy = r0.xy * r2.xy;
  r0.xy = r0.xy + r2.zw;
  r0.zw = float2(0,1);
  r1.z = 1;
  r1.w = 1;
  o2.xyzw = r1.xyzw;

// Automatic vertex shader halo fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py --auto-fix-vertex-halo --only-autofixed -i 0bfd25798128c2d1-vs_replace.txt
float4 stereo = StereoParams.Load(0);
if (r1.w != 1.0)
  r1.x += stereo.x * (r1.w - stereo.y);

  o0.xyzw = r1.xyzw;
  o1.xyzw = r0.xyzw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer cVSSystem
// {
//
//   struct VSSystem
//   {
//       
//       float4 m_param;                // Offset:    0
//       float4 m_renderInfo;           // Offset:   16
//       float4 m_renderBuffer;         // Offset:   32
//       float4 m_dominantLightDir;     // Offset:   48
//
//   } g_vsSystem;                      // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cVSSystem                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// SV_Position              0   xyzw        2      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[3], immediateIndexed
dcl_input v0.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output_siv o2.xyzw, position
dcl_temps 3

#line 63 "d:\work\master\git_clone\_intermediate\win64\GrModelShaders_dx11_win64\Release\SSLighting2_SH_SkyLight_Encode_vs.hlsl"
mov r0.xy, v0.xyxx  // NScreenCoordinateToDrawCoordinateForSHSky_drawCoordinate_inPosition<0,1>
nop 
mov r0.xy, r0.xyxx  // inPosition<0,1>

#line 26
mul r0.zw, r0.xxxy, l(0.000000, 0.000000, 2.000000, -2.000000)
add r1.xy, r0.zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000)  // outPosition<0:Inf,1:Inf>

#line 32
mul r2.xyzw, cb0[1].xyzw, cb0[2].zwzw  // viewToUv<0:Inf,1:Inf,2:Inf,3:Inf>

#line 35
mov r0.xy, r0.xyxx  // backBufferSamplingPosition<0,1>
mul r0.xy, r2.xyxx, r0.xyxx
add r0.xy, r2.zwzz, r0.xyxx  // backBufferSamplingPosition<0:NaN:Inf,1:NaN:Inf>

#line 44
mov r0.xy, r0.xyxx  // outBackBufferSamplingPosition<0:NaN:Inf,1:NaN:Inf>
mov r0.zw, l(0,0,0,1.000000)  // outBackBufferSamplingPosition<2: 0f,3: 1f>

#line 64
mov r1.xy, r1.xyxx  // NScreenCoordinateToDrawCoordinateForSHSky_drawCoordinate_outPosition<0:Inf,1:Inf>
mov r1.z, l(1.000000)  // NScreenCoordinateToDrawCoordinateForSHSky_drawCoordinate_outPosition<2: 1f>
mov r1.w, l(1.000000)  // NScreenCoordinateToDrawCoordinateForSHSky_drawCoordinate_outPosition<3: 1f>
mov r0.xyzw, r0.xyzw  // NScreenCoordinateToDrawCoordinateForSHSky_drawCoordinate_outBackBufferSamplingPosition<0:NaN:Inf,1:NaN:Inf,2: 0f,3: 1f>
mov o2.xyzw, r1.xyzw  // outPosition<0:Inf,1:Inf,2: 1f,3: 1f>
mov o0.xyzw, r1.xyzw  // outClipSpacePosition<0:Inf,1:Inf,2: 1f,3: 1f>
mov o1.xyzw, r0.xyzw  // outBackBufferSamplingPosition<0:NaN:Inf,1:NaN:Inf,2: 0f,3: 1f>

#line 50
ret 
// Approximately 19 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
