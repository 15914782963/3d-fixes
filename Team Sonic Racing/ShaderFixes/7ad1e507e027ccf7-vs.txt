// asmtool.py --auto-fix-vertex-halo -i --only-autofixed 7ad1e507e027ccf7-vs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//   using 3Dmigoto v1.3.16 on Sun May 26 02:48:38 2019
//
//
// Buffer Definitions:
//
// cbuffer cbWorldMatrix
// {
//
//   row_major float3x4 gWorld;         // Index:    0 1 2            Components:    12
//   row_major float4x4 gWorldViewProj; // Index:    3 4 5 6          Components:    16 [unused]
//
// }
//
// cbuffer cbViewProjection
// {
//
//   row_major float3x4 gView;          // Index:    0 1 2            Components:    12 [unused]
//   row_major float4x4 gProjection;    // Index:    3 4 5 6          Components:    16 [unused]
//   row_major float4x4 gViewProjection;// Index:    7 8 9 10         Components:    16
//   row_major float3x4 gViewInverse;   // Index:   11 12 13          Components:    12 [unused]
//   float4 gCameraPositionTime;        // Index:   14.xyzw           Components:     4
//   float4 gITMGF;                     // Index:   15.xyzw           Components:     4 [unused]
//   float2 gfLinearZ;                  // Index:   16.xy             Components:     2 [unused]
//
// }
//
// cbuffer cbShadow
// {
//
//   float4 gSplitSpheres[4];           // Index:    0 1 2 3          Components:    16 [unused]
//   float4 gShadowOffset;              // Index:    4.xyzw           Components:     4 [unused]
//   float4 gSplitData[4];              // Index:    5 6 7 8          Components:    16 [unused]
//   row_major float3x4 gShadowMatrix[4];// Index:    9-20             Components:    48
//
// }
//
// cbuffer cbTextureAnim
// {
//
//   float4 gTextureAnimationMtxU;      // Index:    0.xyzw           Components:     4
//   float4 gTextureAnimationMtxV;      // Index:    1.xyzw           Components:     4
//
// }
//
// cbuffer cbMaterial
// {
//
//   float4 gSpecularParams;            // Index:    0.xyzw           Components:     4 [unused]
//   float4 gParams;                    // Index:    1.xyzw           Components:     4
//   float4 gParamsB;                   // Index:    2.xyzw           Components:     4
//   float4 gFresnelParams;             // Index:    3.xyzw           Components:     4
//   float3 gEmitterWorldPos;           // Index:    4.xyz            Components:     3 [unused]
//   float4 gEmitterParams;             // Index:    5.xyzw           Components:     4 [unused]
//   float4 gRadialNoiseParams;         // Index:    6.xyzw           Components:     4
//   float4 gParamsC;                   // Index:    7.xyzw           Components:     4
//   float2 gDesaturate;                // Index:    8.xy             Components:     2 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cbMaterial                        cbuffer      NA          NA    0        1
// cbTextureAnim                     cbuffer      NA          NA    3        1
// cbWorldMatrix                     cbuffer      NA          NA    4        1
// cbViewProjection                  cbuffer      NA          NA    5        1
// cbShadow                          cbuffer      NA          NA    7        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz
// COLOR                    0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xy          3     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyz         2     NONE   float   xyz
// TEXCOORD                 1   xy          3     NONE   float   xy
// TEXCOORD                 2   xyz         4     NONE   float   xyz
// TEXCOORD                 3   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyz         6     NONE   float   xyz
// TEXCOORD                 5   xyz         7     NONE   float   xyz
// TEXCOORD                 6   xyz         8     NONE   float   xyz
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb4[3], immediateIndexed
dcl_constantbuffer cb5[15], immediateIndexed
dcl_constantbuffer cb7[18], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb0[8], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xy
dcl_output o4.xyz
dcl_output o5.xyzw
dcl_output o6.xyz
dcl_output o7.xyz
dcl_output o8.xyz
dcl_temps 5
// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw

mov r0.w, l(0.618000)
mul r0.xyz, l(100.000000, 126.000000, 2.312000, 0.000000), cb5[14].wwww
dp2 r0.z, r0.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
sincos r0.xz, null, r0.xxzx
mul r0.w, r0.z, l(43758.546875)
round_ni r0.w, r0.w
mad r0.z, r0.z, l(43758.546875), -r0.w
sincos null, r0.y, r0.y
mul r0.xy, r0.zzzz, r0.xyxx
mul r0.xy, r0.xyxx, cb0[2].yyyy
add r0.z, l(1.000000), -cb0[7].x
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
mov r1.xyz, v0.xyzx
mov r1.w, l(1.000000)
dp4 r0.w, cb4[1].xyzw, r1.xyzw
mul r2.x, r0.w, cb0[7].z
mad r2.x, cb5[14].w, cb0[7].y, r2.x
sincos null, r2.x, r2.x
add r2.x, r2.x, -cb0[7].x
mul_sat r0.z, r0.z, r2.x
mad r2.x, r0.z, l(-2.000000), l(3.000000)
mul r0.z, r0.z, r0.z
mul r0.z, r0.z, r2.x
mad r2.y, r0.z, cb0[7].w, r0.w
mad o1.xyz, r0.zzzz, cb0[6].wwww, v1.xyzx
dp4 r2.x, cb4[0].xyzw, r1.xyzw
dp4 r2.z, cb4[2].xyzw, r1.xyzw
mad r0.xzw, r0.xxxx, cb4[0].xxyz, r2.xxyz
mad r0.xyz, r0.yyyy, cb4[2].xyzx, r0.xzwx
mov r0.w, l(1.000000)
dp4 r1.x, cb5[7].xyzw, r0.xyzw
dp4 r1.y, cb5[8].xyzw, r0.xyzw
dp4 r1.w, cb5[10].xyzw, r0.xyzw
mov o0.xyw, r1.xyxw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --auto-fix-vertex-halo -i --only-autofixed 7ad1e507e027ccf7-vs.txt
ne r4.w, r1.w, l(1.0)
if_nz r4.w
  add r4.w, r1.w, -r4.y
  mad r1.x, r4.w, r4.x, r1.x
endif

div r1.xy, r1.xyxx, r1.wwww
mov o5.w, r1.w
mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
dp4 o0.z, cb5[9].xyzw, r0.xyzw
mov o1.w, v1.w
dp3 r2.x, cb4[0].xyzx, v2.xyzx
dp3 r2.y, cb4[1].xyzx, v2.xyzx
dp3 r2.z, cb4[2].xyzx, v2.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mov o2.xyz, r2.xyzx
mov r3.xy, v3.xyxx
mov r3.zw, l(0,0,1.000000,1.000000)
dp4 o3.x, r3.xyww, cb3[0].xyzw
dp4 o3.y, r3.xyzw, cb3[1].xyzw
mov o4.xyz, r0.xyzx
dp4 o5.x, cb7[9].xyzw, r0.xyzw
dp4 o5.y, cb7[10].xyzw, r0.xyzw
dp4 o5.z, cb7[11].xyzw, r0.xyzw
dp4 o6.x, cb7[12].xyzw, r0.xyzw
dp4 o6.y, cb7[13].xyzw, r0.xyzw
dp4 o6.z, cb7[14].xyzw, r0.xyzw
dp4 o7.x, cb7[15].xyzw, r0.xyzw
dp4 o7.y, cb7[16].xyzw, r0.xyzw
dp4 o7.z, cb7[17].xyzw, r0.xyzw
add r0.xyz, -r0.xyzx, cb5[14].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.x, r0.xyzx, r2.xyzx
add r0.y, -|r0.x|, l(1.000000)
add r0.x, -r0.x, l(1.000000)
max r0.x, r0.x, l(0.000100)
log r0.x, r0.x
mul r0.x, r0.x, cb0[2].z
exp r0.x, r0.x
add_sat r0.x, r0.x, cb0[2].w
add r0.x, -r0.x, l(1.000000)
mul r0.y, r0.y, cb0[3].y
max r0.y, r0.y, l(0.000100)
log r0.y, r0.y
mul r0.y, r0.y, cb0[3].x
exp r0.y, r0.y
add_sat r0.y, r0.y, cb0[3].z
mul o8.z, r0.x, r0.y
add r1.z, -r1.y, l(1.000000)
mul r0.xy, cb5[14].wwww, cb0[1].xyxx
ge r0.zw, r0.xxxy, -r0.xxxy
frc r0.xy, |r0.xyxx|
movc r0.xy, r0.zwzz, r0.xyxx, -r0.xyxx
add r0.xy, r0.xyxx, r1.xzxx
mul o8.xy, r0.xyxx, cb0[1].zzzz
ret
// Approximately 88 instruction slots used