// Ambient Occlusion
//
// ---- Created with 3Dmigoto v1.3.16 on Sun Jun 02 00:32:17 2019

cbuffer c_nameless1 : register(b0)
{
  row_major float4x4 invViewProj : packoffset(c0);
  row_major float4x4 invView : packoffset(c4);
  float4 g_vGiVolAABBMin : packoffset(c8);
  float4 g_vOOGiVolAABBDimensions : packoffset(c9);
  float4 g_vOOHalfTexel : packoffset(c10);
  float4 g_vEyePos : packoffset(c11);
  float4 g_vGiDiffuseBlend : packoffset(c12);
  float4 g_vGiSpecularBlend : packoffset(c13);
}

SamplerState gDepth_smp_s : register(s0);
SamplerState gGILight0_smp_s : register(s1);
SamplerState gGILight1_smp_s : register(s2);
SamplerState gGILight2_smp_s : register(s3);
SamplerState gMrt1_smp_s : register(s4);
SamplerState gMrt2_smp_s : register(s5);
Texture2D<float4> gDepth_tex : register(t0);
Texture3D<float4> gGILight0_tex : register(t1);
Texture3D<float4> gGILight1_tex : register(t2);
Texture3D<float4> gGILight2_tex : register(t3);
Texture2D<float4> gMrt1_tex : register(t4);
Texture2D<float4> gMrt2_tex : register(t5);


// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);

#include "matrix.hlsl"

void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float3 v2 : TEXCOORD1,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.z = gDepth_tex.Sample(gDepth_smp_s, v1.xy).x;
  r0.xy = v2.xy;
  r0.w = 1;

float4 tmp = mul(invViewProj, r0.xyzw);
tmp = tmp / tmp.w;
matrix vp = inverse(invViewProj);
float depth = mul(vp, tmp).w;

float4 s = StereoParams.Load(0);
r0.x -= s.x * (depth - s.y) / depth;

  r1.x = dot(invViewProj._m00_m01_m02_m03, r0.xyzw);
  r1.y = dot(invViewProj._m10_m11_m12_m13, r0.xyzw);
  r1.z = dot(invViewProj._m20_m21_m22_m23, r0.xyzw);
  r0.x = dot(invViewProj._m30_m31_m32_m33, r0.xyzw);
  r0.xyz = r1.xyz / r0.xxx;

  r0.xyz = -g_vGiVolAABBMin.xyz + r0.xyz;
  r0.xyz = r0.xyz * g_vOOGiVolAABBDimensions.xyz + g_vOOHalfTexel.xyz;
  r1.xyzw = gGILight0_tex.Sample(gGILight0_smp_s, r0.xyz).xyzw;
  r2.x = r1.w;
  r3.xyzw = gGILight1_tex.Sample(gGILight1_smp_s, r0.xyz).xyzw;
  r0.xyzw = gGILight2_tex.Sample(gGILight2_smp_s, r0.xyz).xyzw;
  r2.y = r3.w;
  r2.z = r0.w;
  r4.xyz = gMrt2_tex.Sample(gMrt2_smp_s, v1.xy).xyz;
  r4.xyz = r4.yzx * float3(2,2,2) + float3(-1,-1,-1);
  r0.w = dot(r4.xyz, r4.xyz);
  r0.w = rsqrt(r0.w);
  r4.xyz = r4.xyz * r0.www;
  r1.xyz = r1.xyz * -r4.xxx + r2.xyz;
  r1.xyz = r3.xyz * -r4.yyy + r1.xyz;
  r0.xyz = r0.xyz * -r4.zzz + r1.xyz;
  r0.xyz = g_vGiDiffuseBlend.xyz * r0.xyz;
  r0.xyz = max(float3(0,0,0), r0.xyz);
  r1.xyzw = gMrt1_tex.Sample(gMrt1_smp_s, v1.xy).xyzw;
  r1.xyz = r1.xyz * r1.xyz;
  r1.xyz = -r1.xyz * r1.www + r1.xyz;
  r1.xyz = r1.xyz * r0.xyz;
  r1.xyz = r1.xyz * float3(0.318309873,0.318309873,0.318309873) + -r0.xyz;
  o0.xyz = g_vGiDiffuseBlend.www * r1.xyz + r0.xyz;
  o0.w = 0;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//   using 3Dmigoto v1.3.16 on Sun Jun 02 00:32:17 2019
//
//
// Buffer Definitions:
//
// cbuffer c_nameless1
// {
//
//   row_major float4x4 invViewProj;    // Offset:    0 Size:    64
//   row_major float4x4 invView;        // Offset:   64 Size:    64 [unused]
//   float4 g_vGiVolAABBMin;            // Offset:  128 Size:    16
//   float4 g_vOOGiVolAABBDimensions;   // Offset:  144 Size:    16
//   float4 g_vOOHalfTexel;             // Offset:  160 Size:    16
//   float4 g_vEyePos;                  // Offset:  176 Size:    16 [unused]
//   float4 g_vGiDiffuseBlend;          // Offset:  192 Size:    16
//   float4 g_vGiSpecularBlend;         // Offset:  208 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// gDepth_smp                        sampler      NA          NA    0        1
// gGILight0_smp                     sampler      NA          NA    1        1
// gGILight1_smp                     sampler      NA          NA    2        1
// gGILight2_smp                     sampler      NA          NA    3        1
// gMrt1_smp                         sampler      NA          NA    4        1
// gMrt2_smp                         sampler      NA          NA    5        1
// gDepth_tex                        texture  float4          2d    0        1
// gGILight0_tex                     texture  float4          3d    1        1
// gGILight1_tex                     texture  float4          3d    2        1
// gGILight2_tex                     texture  float4          3d    3        1
// gMrt1_tex                         texture  float4          2d    4        1
// gMrt2_tex                         texture  float4          2d    5        1
// c_nameless1                       cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[13], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 5
sample_indexable(texture2d)(float,float,float,float) r0.z, v1.xyxx, t0.yzxw, s0
mov r0.xy, v2.xyxx
mov r0.w, l(1.000000)
dp4 r1.x, cb0[0].xyzw, r0.xyzw
dp4 r1.y, cb0[1].xyzw, r0.xyzw
dp4 r1.z, cb0[2].xyzw, r0.xyzw
dp4 r0.x, cb0[3].xyzw, r0.xyzw
div r0.xyz, r1.xyzx, r0.xxxx
add r0.xyz, r0.xyzx, -cb0[8].xyzx
mad r0.xyz, r0.xyzx, cb0[9].xyzx, cb0[10].xyzx
sample_indexable(texture3d)(float,float,float,float) r1.xyzw, r0.xyzx, t1.xyzw, s1
mov r2.x, r1.w
sample_indexable(texture3d)(float,float,float,float) r3.xyzw, r0.xyzx, t2.xyzw, s2
sample_indexable(texture3d)(float,float,float,float) r0.xyzw, r0.xyzx, t3.xyzw, s3
mov r2.y, r3.w
mov r2.z, r0.w
sample_indexable(texture2d)(float,float,float,float) r4.xyz, v1.xyxx, t5.xyzw, s5
mad r4.xyz, r4.yzxy, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx
mad r1.xyz, r1.xyzx, -r4.xxxx, r2.xyzx
mad r1.xyz, r3.xyzx, -r4.yyyy, r1.xyzx
mad r0.xyz, r0.xyzx, -r4.zzzz, r1.xyzx
mul r0.xyz, r0.xyzx, cb0[12].xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t4.xyzw, s4
mul r1.xyz, r1.xyzx, r1.xyzx
mad r1.xyz, -r1.xyzx, r1.wwww, r1.xyzx
mul r1.xyz, r0.xyzx, r1.xyzx
mad r1.xyz, r1.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), -r0.xyzx
mad o0.xyz, cb0[12].wwww, r1.xyzx, r0.xyzx
mov o0.w, l(0)
ret
// Approximately 34 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
