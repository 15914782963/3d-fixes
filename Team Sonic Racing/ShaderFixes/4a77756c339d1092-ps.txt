// Infinite variant Specular highlights on poker chips


//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//   using 3Dmigoto v1.3.16 on Sun May 26 02:39:53 2019
//
//
// Buffer Definitions:
//
// cbuffer cbLightData
// {
//
//   float4 gFogParams;                 // Index:    0.xyzw           Components:     4 [unused]
//   float3 gFogColour;                 // Index:    1.xyz            Components:     3 [unused]
//   float4 gLightAmbient;              // Index:    2.xyzw           Components:     4
//   float4 gIblTexMipLevels;           // Index:    3.xyzw           Components:     4 [unused]
//
//   struct LightParams
//   {
//
//       float3 direction;              // Index:    4
//       float3 position;               // Index:    5
//       float4 colour;                 // Index:    6
//       float4 lightConst;             // Index:    7
//       float4 spotConst;              // Index:    8
//
//   } gLight[8];                       // Index:    4-43             Components:   160
//
// }
//
// cbuffer c0
// {
//
//   row_major float4x4 worldViewProj;  // Index:    0 1 2 3          Components:    16 [unused]
//   row_major float4x4 worldView;      // Index:    4 5 6 7          Components:    16 [unused]
//   row_major float4x4 invView;        // Index:    8 9 10 11        Components:    16
//   float4 gNearFarPlane;              // Index:   12.xyzw           Components:     4 [unused]
//   float4 gTexScaleOffset;            // Index:   13.xyzw           Components:     4 [unused]
//   float gLightTexMipCount;           // Index:   14.x              Components:     1 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// gMrt0_smp                         sampler      NA          NA    0        1
// gMrt1_smp                         sampler      NA          NA    1        1
// gMrt2_smp                         sampler      NA          NA    2        1
// gShadowMask_smp                   sampler      NA          NA    3        1
// gMaterialProperites_smp           sampler      NA          NA    4        1
// gMrt0_tex                         texture  float4          2d    0        1
// gMrt1_tex                         texture  float4          2d    1        1
// gMrt2_tex                         texture  float4          2d    2        1
// gShadowMask_tex                   texture  float4          2d    3        1
// gMaterialProperites_tex           texture  float4          2d    4        1
// c0                                cbuffer      NA          NA    0        1
// cbLightData                       cbuffer      NA          NA    6        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_constantbuffer cb0[11], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_output o0.xyzw
dcl_temps 9
dcl_resource_texture2d (float,float,float,float) t125
ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.wxyz, s0
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t2.xyzw, s2
mul r3.xyz, r0.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000)
add r4.xyz, -r0.yzwy, l(1.000100, 1.000100, 1.000100, 0.000000)
div r3.xyz, r3.xyzx, r4.xyzx
mul r4.xyz, r1.xyzx, r1.xyzx
mad r4.xyz, -r4.xyzx, r1.wwww, r4.xyzx
mul r4.xyz, r4.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mad r3.xyz, cb6[2].xyzx, r4.xyzx, r3.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.z, v1.xyxx, t3.yzxw, s3
mov r5.xy, v1.zwzz

// No depth buffer or light source depth in this shader, so assume source is
// the sun and move specular reflections to infinity. The cb0[12].z multiply
// matches the vertex shader.
mad r5.x, -r8.x, cb0[12].z, r5.x

mov r5.z, l(-1.000000)
dp3 r0.w, r5.xyzx, r5.xyzx
rsq r0.w, r0.w
mul r5.xyz, r0.wwww, r5.xyzx
dp3 r6.x, cb0[8].xyzx, r5.xyzx
dp3 r6.y, cb0[9].xyzx, r5.xyzx
dp3 r6.z, cb0[10].xyzx, r5.xyzx
mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
lt r0.w, r0.x, l(1.000000)
if_nz r0.w
  mov r0.y, l(0)
  sample_l_indexable(texture2d)(float,float,float,float) r0.xyw, r0.xyxx, t4.yzxw, s4, l(0.000000)
else
  mov r0.xyw, l(0,0,0,0)
endif
max r2.w, r2.w, l(0.060000)
mad r1.xyz, r1.xyzx, r1.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r1.xyz, r1.wwww, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
add r5.xyz, -r6.xyzx, -cb6[4].xyzx
dp3 r1.w, r5.xyzx, r5.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, r5.xyzx
dp3_sat r1.w, r2.xyzx, r5.xyzx
dp3_sat r3.w, -r6.xyzx, r5.xyzx
dp3 r4.w, r2.xyzx, -r6.xyzx
min r5.x, |r4.w|, l(1.000000)
dp3_sat r5.y, r2.xyzx, -cb6[4].xyzx
mul r2.x, r2.w, r2.w
mul r2.x, r2.x, r2.x
mad r2.y, r1.w, r2.x, -r1.w
mad r2.y, r2.y, r1.w, l(1.000000)
mul r2.y, r2.y, r2.y
mul r2.y, r2.y, l(3.14159274)
div r2.y, r2.x, r2.y
add r2.z, -r3.w, l(1.000000)
mul r2.w, r2.z, r2.z
mul r2.w, r2.w, r2.w
mul r3.w, r2.z, r2.w
mul_sat r4.w, r1.y, l(50.000000)
mad r2.z, -r2.w, r2.z, l(1.000000)
mul r6.xyz, r1.xyzx, r2.zzzz
mad r6.xyz, r4.wwww, r3.wwww, r6.xyzx
mad r2.zw, -r2.xxxx, r5.xxxy, r5.xxxy
mad r2.xz, r5.xxyx, r2.zzwz, r2.xxxx
sqrt r2.xz, r2.xxzx
add r2.xz, r2.xxzx, r5.xxyx
mul r2.x, r2.z, r2.x
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
mul r2.yzw, r2.yyyy, r6.xxyz
mul r7.xyz, r2.xxxx, r2.yzwy
ne r3.w, r0.x, l(0.000000)
if_nz r3.w
  eq r0.w, r0.w, l(3.000000)
  if_nz r0.w
    max r0.w, r0.x, l(0.060000)
    mul r0.w, r0.w, r0.w
    mul r0.w, r0.w, r0.w
    mad r3.w, r1.w, r0.w, -r1.w
    mad r3.w, r3.w, r1.w, l(1.000000)
    mul r3.w, r3.w, r3.w
    mul r3.w, r3.w, l(3.14159274)
    div r3.w, r0.w, r3.w
    mad r5.zw, -r0.wwww, r5.xxxy, r5.xxxy
    mad r5.zw, r5.xxxy, r5.zzzw, r0.wwww
    sqrt r5.zw, r5.zzzw
    add r5.xz, r5.zzwz, r5.xxyx
    mul r0.w, r5.z, r5.x
    div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
    mul r5.xzw, r6.xxyz, r3.wwww
    mul r5.xzw, r0.wwww, r5.xxzw
    mul r5.xzw, r0.yyyy, r5.xxzw
  else
    log r0.w, r1.w
    mul r0.x, r0.w, r0.x
    exp r0.x, r0.x
    mul r1.xyz, r0.yyyy, r1.xyzx
    mul r5.xzw, r0.xxxx, r1.xxyz
  endif
  mad r7.xyz, r2.yzwy, r2.xxxx, r5.xzwx
endif
mul r0.xyw, r5.yyyy, r7.xyxz
mad r0.xyw, r4.xyxz, r5.yyyy, r0.xyxw
mul r0.xyw, r0.xyxw, cb6[6].xyxz
mul r0.xyw, r0.xyxw, cb6[6].wwww
mad o0.xyz, r0.xywx, r0.zzzz, r3.xyzx
mov o0.w, l(0)
ret
// Approximately 102 instruction slots used