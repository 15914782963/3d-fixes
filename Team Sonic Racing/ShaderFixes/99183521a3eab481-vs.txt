// asmtool.py --auto-fix-vertex-halo -i --only-autofixed 99183521a3eab481-vs.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//   using 3Dmigoto v1.3.16 on Sun May 26 02:39:54 2019
//
//
// Buffer Definitions:
//
// cbuffer cbViewProjection
// {
//
//   row_major float3x4 gView;          // Index:    0 1 2            Components:    12 [unused]
//   row_major float4x4 gProjection;    // Index:    3 4 5 6          Components:    16 [unused]
//   row_major float4x4 gViewProjection;// Index:    7 8 9 10         Components:    16 [unused]
//   row_major float3x4 gViewInverse;   // Index:   11 12 13          Components:    12
//   float4 gCameraPositionTime;        // Index:   14.xyzw           Components:     4
//   float4 gITMGF;                     // Index:   15.xyzw           Components:     4 [unused]
//   float2 gfLinearZ;                  // Index:   16.xy             Components:     2 [unused]
//
// }
//
// cbuffer cbLightData
// {
//
//   float4 gFogParams;                 // Index:    0.xyzw           Components:     4
//   float3 gFogColour;                 // Index:    1.xyz            Components:     3 [unused]
//   float4 gLightAmbient;              // Index:    2.xyzw           Components:     4 [unused]
//   float4 gIblTexMipLevels;           // Index:    3.xyzw           Components:     4 [unused]
//
//   struct LightParams
//   {
//
//       float3 direction;              // Index:    4
//       float3 position;               // Index:    5
//       float4 colour;                 // Index:    6
//       float4 lightConst;             // Index:    7
//       float4 spotConst;              // Index:    8
//
//   } gLight[8];                       // Index:    4-43             Components:   160 [unused]
//
// }
//
// cbuffer c0
// {
//
//   float4 g_ClipParams;               // Index:    0.xyzw           Components:     4
//   float4 g_NearFar;                  // Index:    1.xyzw           Components:     4 [unused]
//   float4 gCamOffsetAlphaRef;         // Index:    2.xyzw           Components:     4
//   float4 g_ParticleColourAdd;        // Index:    3.xyzw           Components:     4 [unused]
//   float4 g_ParticleColourMul;        // Index:    4.xyzw           Components:     4 [unused]
//   float4 g_Params;                   // Index:    5.xyzw           Components:     4
//   float4 g_TexScaleOffset;           // Index:    6.xyzw           Components:     4 [unused]
//   float4 g_NTM_NL_PS_D;              // Index:    7.xyzw           Components:     4 [unused]
//   float4 g_LightParams;              // Index:    8.xyzw           Components:     4
//   float4 g_AlphaDissolveNoiseTimeParams;// Index:    9.xyzw           Components:     4 [unused]
//   float4 g_UVDistortParams;          // Index:   10.xyzw           Components:     4 [unused]
//
// }
//
// cbuffer c1
// {
//
//   row_major float4x4 g_worldView;    // Index:    0 1 2 3          Components:    16
//   row_major float4x4 g_worldViewProj;// Index:    4 5 6 7          Components:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// c0                                cbuffer      NA          NA    0        1
// c1                                cbuffer      NA          NA    1        1
// cbViewProjection                  cbuffer      NA          NA    5        1
// cbLightData                       cbuffer      NA          NA    6        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb5[15], immediateIndexed
dcl_constantbuffer cb6[1], immediateIndexed
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[8], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 7
// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.x, l(0.001000), cb5[11].y
mul r0.y, l(0.001000), cb5[12].y
mul r0.z, l(0.001000), cb5[13].y
dp3 r0.w, v3.xyzx, v3.xyzx
rsq r1.x, r0.w
sqrt r0.w, r0.w
max r0.w, r0.w, l(1.000000)
min r0.w, r0.w, cb0[5].w
mad r0.xyz, v3.xyzx, r1.xxxx, r0.xyzx
add r1.xyz, -v0.xyzx, cb5[14].xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
mul r2.xyz, r0.zxyz, r1.yzxy
mad r2.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
dp3 r0.x, r1.xyzx, r0.xyzx
dp3 r0.y, r2.xyzx, r2.xyzx
rsq r0.y, r0.y
mul r2.xyz, r0.yyyy, r2.xyzx
mul r3.xyz, r1.zxyz, r2.yzxy
mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
mad r2.xyz, v2.zzzz, r2.xyzx, v0.xyzx
dp3 r0.y, r1.xyzx, r1.xyzx
rsq r0.y, r0.y
mul r1.xyz, r0.yyyy, r1.xyzx
add r0.y, -r0.w, l(1.000000)
mad r0.x, |r0.x|, r0.y, r0.w
mul r0.xyz, r0.xxxx, r1.xyzx
mad r0.xyz, v2.wwww, r0.xyzx, r2.xyzx
mad r0.xyz, cb0[2].xxxx, cb1[0].xyzx, r0.xyzx
mad r0.xyz, cb0[2].yyyy, cb1[1].xyzx, r0.xyzx
mad r0.xyz, cb0[2].zzzz, cb1[2].xyzx, r0.xyzx
mov r0.w, l(1.000000)
dp4 r1.w, cb1[7].xyzw, r0.xyzw
dp4 r2.x, cb1[4].xyzw, r0.xyzw
dp4 r2.y, cb1[5].xyzw, r0.xyzw
div r2.zw, r2.xxxy, r1.wwww
mov r3.xyz, v0.xyzx
mov r3.w, l(1.000000)
dp4 r4.x, cb1[7].xyzw, r3.xyzw
dp4 r5.x, cb1[4].xyzw, r3.xyzw
dp4 r5.y, cb1[5].xyzw, r3.xyzw
dp4 r3.x, cb1[2].xyzw, r3.xyzw
add r3.xy, -r3.xxxx, -cb0[0].xzxx
div_sat r3.xy, r3.xyxx, cb0[0].ywyy
div r3.zw, r5.xxxy, r4.xxxx
add r4.xy, -r2.xyxx, r5.xyxx
add r2.zw, r2.zzzw, -r3.zzzw
dp2 r2.z, r2.zwzz, r2.zwzz
sqrt r2.z, r2.z
min r2.w, r2.z, cb0[8].z
add r2.z, r2.z, l(0.000100)
div r2.z, r2.w, r2.z
add r2.z, -r2.z, l(1.000000)
mul r2.z, r2.z, cb0[8].w
mad r1.xy, r2.zzzz, r4.xyxx, r2.xyxx
dp4 r1.z, cb1[6].xyzw, r0.xyzw
add r2.x, -r3.y, l(1.000000)
mul r2.x, r2.x, r3.x
ge r2.y, l(0.000000), r2.x
mul_sat o1.w, r2.x, v1.w
movc r1.xyzw, r2.yyyy, l(-2.000000,-2.000000,-2.000000,1.000000), r1.xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py --auto-fix-vertex-halo -i --only-autofixed 99183521a3eab481-vs.txt
ne r6.w, r1.w, l(1.0)
if_nz r6.w
  add r6.w, r1.w, -r6.y
  mad r1.x, r6.w, r6.x, r1.x
endif

mov o3.xyzw, r1.xyzw
mov o1.xyz, v1.xyzx
dp4 r1.x, cb1[0].xyzw, r0.xyzw
dp4 r1.y, cb1[1].xyzw, r0.xyzw
dp4 r1.z, cb1[2].xyzw, r0.xyzw
dp3 r0.x, r1.xyzx, r1.xyzx
sqrt r0.x, r0.x
add r0.x, r0.x, -cb6[0].x
add r0.y, -cb6[0].x, cb6[0].y
div_sat r0.x, r0.x, r0.y
mul o2.z, r0.x, cb6[0].z
mov o2.xy, v2.xyxx
mov o2.w, v3.w
ret
// Approximately 77 instruction slots used