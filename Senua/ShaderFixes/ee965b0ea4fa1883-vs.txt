// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 ee965b0ea4fa1883-vs.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:42:36 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyzw
// ATTRIBUTE                1   xyz         1     NONE   float   xyz 
// ATTRIBUTE                2   xyzw        2     NONE   float   xyzw
// ATTRIBUTE                3   xyzw        3     NONE   float       
// ATTRIBUTE                4   xy          4     NONE   float   xy  
// ATTRIBUTE               14   xy          5     NONE   float   xy  
// SV_InstanceID            0   x           6   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyzw
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 5   xy          3     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x   
// VELOCITY_PREV_POS        0   xyzw        5     NONE   float   xyzw
// SV_POSITION              0   xyzw        6      POS   float   xyzw
// SV_ClipDistance          1   x           7  CLIPDST   float   x   
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} }
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[165], immediateIndexed
dcl_constantbuffer cb2[165], immediateIndexed
dcl_constantbuffer cb3[15], immediateIndexed
dcl_constantbuffer cb4[11], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v4.xy
dcl_input v5.xy
dcl_input_sgv v6.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xy
dcl_output o4.x
dcl_output o5.xyzw
dcl_output_siv o6.xyzw, position
dcl_output_siv o7.x, clip_distance
dcl_temps 39
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 2048
// Disables driver stereo correction:
dcl_constantbuffer cb12[4], immediateIndexed

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 ee965b0ea4fa1883-vs.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(16), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(48), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(1280), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(1296), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(0), l(1312), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(0), l(1328), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(0), l(1632), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(1), l(16), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r26.xyzw, l(1), l(64), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r27.xyzw, l(1), l(576), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 ee965b0ea4fa1883-vs.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r28.xyzw, l(0), l(0), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r29.xyzw, l(0), l(16), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r30.xyzw, l(0), l(32), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r31.xyzw, l(0), l(48), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r32.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r33.xyzw, l(0), l(1280), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r34.xyzw, l(0), l(1296), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r35.xyzw, l(0), l(1312), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r36.xyzw, l(0), l(1328), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r37.xyzw, l(0), l(1632), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r38.xyzw, l(1), l(576), t102.xyzw

and r0.x, v6.x, l(1)
if_z r0.x
  mov r1.x, r15.x
  mov r1.y, r16.x
  mov r1.z, r17.x
  mov r1.w, r18.x
  mov r2.x, r15.y
  mov r2.y, r16.y
  mov r2.z, r17.y
  mov r2.w, r18.y
  mov r3.x, r15.z
  mov r3.y, r16.z
  mov r3.z, r17.z
  mov r3.w, r18.z
  mov r4.x, r15.w
  mov r4.y, r16.w
  mov r4.z, r17.w
  mov r4.w, r18.w
  mov r5.x, r20.x
  mov r5.y, r21.x
  mov r5.z, r22.x
  mov r5.w, r23.x
  mov r6.x, r20.y
  mov r6.y, r21.y
  mov r6.z, r22.y
  mov r6.w, r23.y
  mov r7.x, r20.w
  mov r7.y, r21.w
  mov r7.z, r22.w
  mov r7.w, r23.w
  mov r0.yzw, r24.xxyz
  mov r8.x, r27.y
  mov r8.yzw, r19.xxyz
else 
  mov r1.x, r28.x
  mov r1.y, r29.x
  mov r1.z, r30.x
  mov r1.w, r31.x
  mov r2.x, r28.y
  mov r2.y, r29.y
  mov r2.z, r30.y
  mov r2.w, r31.y
  mov r3.x, r28.z
  mov r3.y, r29.z
  mov r3.z, r30.z
  mov r3.w, r31.z
  mov r4.x, r28.w
  mov r4.y, r29.w
  mov r4.z, r30.w
  mov r4.w, r31.w
  mov r5.x, r33.x
  mov r5.y, r34.x
  mov r5.z, r35.x
  mov r5.w, r36.x
  mov r6.x, r33.y
  mov r6.y, r34.y
  mov r6.z, r35.y
  mov r6.w, r36.y
  mov r7.x, r33.w
  mov r7.y, r34.w
  mov r7.z, r35.w
  mov r7.w, r36.w
  mov r0.yzw, r37.xxyz
  mov r8.x, r38.y
  mov r8.yzw, r32.xxyz
endif 
mad r9.xyz, v1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r10.xyzw, v2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r11.xyz, r9.xyzx, r10.yzxy
mad r9.xyz, r10.xyzx, r9.yzxy, -r11.xyzx
mul r9.xyz, r10.wwww, r9.xyzx
mul r11.xyz, r10.yzxy, r9.xyzx
mad r9.xyz, r9.zxyz, r10.zxyz, -r11.xyzx
mul r9.xyz, r10.wwww, r9.xyzx
mul r11.xyz, cb3[0].xyzx, cb3[14].xxxx
mul r12.xyz, cb3[1].xyzx, cb3[14].yyyy
mul r13.xyz, cb3[2].xyzx, cb3[14].zzzz
mul r14.xyz, r9.yyyy, r12.xyzx
mad r9.xyw, r9.xxxx, r11.xyxz, r14.xyxz
mad o0.xyz, r9.zzzz, r13.xyzx, r9.xywx
mul r9.xyz, r10.yyyy, r12.xyzx
mad r9.xyz, r10.xxxx, r11.xyzx, r9.xyzx
mad o1.xyz, r10.zzzz, r13.xyzx, r9.xyzx
mul o1.w, r10.w, cb3[9].w
mul r9.xyz, v0.yyyy, cb3[1].xyzx
mad r9.xyz, cb3[0].xyzx, v0.xxxx, r9.xyzx
mad r9.xyz, cb3[2].xyzx, v0.zzzz, r9.xyzx
add r10.xyz, r8.yzwy, cb3[3].xyzx
add r9.xyz, r9.xyzx, r10.xyzx
add r8.yzw, -r8.yyzw, r9.xxyz
add r8.yzw, r8.yyzw, -cb3[3].xxyz
mul r9.w, r26.z, cb4[8].y
mul r9.w, r9.w, cb4[8].z
mul r9.w, r9.w, l(1.25663710)
sincos r9.w, null, r9.w
mul r9.w, r9.w, cb4[8].w
mul r9.w, r9.w, cb4[9].x
mul r9.w, r9.w, l(6.28318548)
sincos r10.x, r11.x, r9.w
mul r10.xy, r8.wzww, r10.xxxx
mad r11.z, r11.x, r8.z, -r10.x
mad r11.w, r11.x, r8.w, r10.y
mov r11.y, -r8.y
add r10.yzw, -r8.yyzw, r11.yyzw
mul r11.xy, r26.zzzz, cb4[9].ywyy
mul r11.xy, r11.xyxx, cb4[8].zzzz
mul r11.xy, r11.xyxx, l(1.25663710, 6.28318548, 0.000000, 0.000000)
sincos r11.xy, null, r11.xyxx
mul r9.w, r11.x, cb4[9].z
mul r9.w, r9.w, cb4[9].x
mul r9.w, r9.w, l(6.28318548)
sincos r11.x, r12.x, r9.w
mul r11.xz, r8.zzyz, r11.xxxx
mad r10.x, r12.x, r8.y, -r11.x
mad r12.y, r12.x, r8.z, r11.z
mov r12.x, r10.y
mov r12.z, r8.w
mad r8.yzw, r8.yyzw, l(0.000000, 1.000000, -1.000000, -1.000000), r12.xxyz
add r8.yzw, r8.yyzw, r10.xxzw
mul r9.w, r11.y, cb4[10].x
mad r8.yzw, cb4[7].xxyz, r9.wwww, r8.yyzw
add r9.xyz, r8.yzwy, r9.xyzx
mov r9.w, l(1.000000)
dp4 r1.x, r9.xyzw, r1.xyzw
dp4 r1.y, r9.xyzw, r2.xyzw
dp4 r1.z, r9.xyzw, r3.xyzw
dp4 r1.w, r9.xyzw, r4.xyzw
if_nz cb0[0].x
  mov r2.x, icb[r0.x + 0].x
  mov r2.y, l(1.000000)
  dp2 o7.x, r1.xwxx, r2.xyxx
  mul r2.x, r8.x, l(0.500000)
  mul r2.y, r1.w, icb[r0.x + 0].x
  mad r2.z, -r8.x, l(0.500000), l(1.000000)
  mul r2.y, r2.z, r2.y
  mad r1.x, r1.x, r2.x, r2.y
else 
  mov o7.x, l(0)
endif 
mad o3.xy, v5.xyxx, cb0[7].xyxx, cb0[7].zwzz
movc r2.x, cb0[0].x, l(1), l(0)
imad o4.x, r2.x, l(0x80000000), r0.x
add r2.xyw, r0.yzyw, cb0[6].xyxz
mov r3.x, cb0[3].x
mov r3.y, cb0[4].x
mov r3.z, cb0[5].x
mov r3.w, r2.x
dp4 r3.x, v0.xyzw, r3.xyzw
mov r4.x, cb0[3].y
mov r4.y, cb0[4].y
mov r4.z, cb0[5].y
mov r4.w, r2.y
dp4 r3.y, v0.xyzw, r4.xyzw
mov r2.x, cb0[3].z
mov r2.y, cb0[4].z
mov r2.z, cb0[5].z
dp4 r3.z, v0.xyzw, r2.xyzw
add r0.xyz, -r0.yzwy, r3.xyzx
add r0.xyz, r0.xyzx, -cb3[3].xyzx
mul r0.w, r25.z, cb4[8].y
mul r0.w, r0.w, cb4[8].z
mul r0.w, r0.w, l(1.25663710)
sincos r0.w, null, r0.w
mul r0.w, r0.w, cb4[8].w
mul r0.w, r0.w, cb4[9].x
mul r0.w, r0.w, l(6.28318548)
sincos r2.x, r4.x, r0.w
mul r2.xy, r0.zyzz, r2.xxxx
mad r4.z, r4.x, r0.y, -r2.x
mad r4.w, r4.x, r0.z, r2.y
mov r4.y, -r0.x
add r2.yzw, -r0.xxyz, r4.yyzw
mul r4.xy, r25.zzzz, cb4[9].ywyy
mul r4.xy, r4.xyxx, cb4[8].zzzz
mul r4.xy, r4.xyxx, l(1.25663710, 6.28318548, 0.000000, 0.000000)
sincos r4.xy, null, r4.xyxx
mul r0.w, r4.x, cb4[9].z
mul r0.w, r0.w, cb4[9].x
mul r0.w, r0.w, l(6.28318548)
sincos r4.x, r8.x, r0.w
mul r4.xz, r0.yyxy, r4.xxxx
mad r2.x, r8.x, r0.x, -r4.x
mad r8.y, r8.x, r0.y, r4.z
mov r8.x, r2.y
mov r8.z, r0.z
mad r0.xyz, r0.xyzx, l(1.000000, -1.000000, -1.000000, 0.000000), r8.xyzx
add r0.xyz, r0.xyzx, r2.xzwx
mul r0.w, r4.y, cb4[10].x
mad r0.xyz, cb4[7].xyzx, r0.wwww, r0.xyzx
add r0.xyz, r0.xyzx, r3.xyzx
mov r0.w, l(1.000000)
dp4 o5.x, r0.xyzw, r5.xyzw
dp4 o5.y, r0.xyzw, r6.xyzw
dp4 o5.w, r0.xyzw, r7.xyzw
add o5.z, -cb0[8].x, l(1.000000)
mov o0.w, l(0)
mov o2.xy, v4.xyxx
mov o2.zw, l(0,0,0,0)
mov o6.xyzw, r1.xyzw
ret 
// Approximately 0 instruction slots used