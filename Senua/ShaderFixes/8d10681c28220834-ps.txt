// asmtool.py --remap-cb 0 100 --remap 1 101 -i -f 8d10681c28220834-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.63 on Tue Sep 12 13:32:51 2017
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[124], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 27
dcl_resource_structured t100, 512
dcl_resource_structured t101, 1984

// cb0 remapped to t100 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 0 100 --remap 1 101 -i -f 8d10681c28220834-ps.txt
ld_structured_indexable(structured_buffer, stride=512)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(0), t100.xyzw
ld_structured_indexable(structured_buffer, stride=512)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(16), t100.xyzw
ld_structured_indexable(structured_buffer, stride=512)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(416), t100.xyzw
ld_structured_indexable(structured_buffer, stride=512)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(432), t100.xyzw
ld_structured_indexable(structured_buffer, stride=512)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(448), t100.xyzw
ld_structured_indexable(structured_buffer, stride=512)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(464), t100.xyzw
ld_structured_indexable(structured_buffer, stride=512)(mixed,mixed,mixed,mixed) r22.xyzw, l(0), l(480), t100.xyzw
ld_structured_indexable(structured_buffer, stride=512)(mixed,mixed,mixed,mixed) r23.xyzw, l(0), l(496), t100.xyzw


// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 0 100 --remap 1 101 -i -f 8d10681c28220834-ps.txt
ld_structured_indexable(structured_buffer, stride=1984)(mixed,mixed,mixed,mixed) r24.xyzw, l(0), l(848), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1984)(mixed,mixed,mixed,mixed) r25.xyzw, l(0), l(864), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1984)(mixed,mixed,mixed,mixed) r26.xyzw, l(0), l(1968), t101.xyzw

mul r0.xy, v0.xyxx, r26.zwzz
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r0.xyxx, t2.yzxw, s2, l(0.000000)
mad r0.w, r0.z, r24.x, r24.y
mad r0.z, r0.z, r24.z, -r24.w
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
add r0.z, r0.z, r0.w
mad r1.xy, v0.xyxx, r26.zwzz, -r25.wzww
div r1.xy, r1.xyxx, r25.xyxx
mul r1.xy, r0.zzzz, r1.xyxx
mul r2.xyzw, r1.yyyy, r20.xyzw
mad r1.xyzw, r1.xxxx, r19.xyzw, r2.xyzw
mad r1.xyzw, r0.zzzz, r21.xyzw, r1.xyzw
add r1.xyzw, r1.xyzw, r22.xyzw
div r0.zw, r1.xxxy, r1.wwww
min r1.x, r1.z, l(0.999990)
mad r0.zw, r0.zzzw, r17.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
frc r1.yw, r0.zzzw
round_ni r0.zw, r0.zzzw
add r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
mul r0.zw, r0.zzzw, r17.zzzw
gather4_aoffimmi_indexable(-2,-2,0)(texture2d)(float,float,float,float) r2.xyzw, r0.zwzz, t3.xyzw, s3.x
add r3.xyzw, -r1.xxxx, r2.xyzw
mad_sat r3.xyzw, r3.xyzw, r16.wwww, l(1.000000, 1.000000, 1.000000, 1.000000)
gather4_aoffimmi_indexable(0,-2,0)(texture2d)(float,float,float,float) r4.xyzw, r0.zwzz, t3.xyzw, s3.x
add r5.xyzw, -r1.xxxx, r4.xyzw
mad_sat r5.xyzw, r5.xyzw, r16.wwww, l(1.000000, 1.000000, 1.000000, 1.000000)
gather4_aoffimmi_indexable(2,-2,0)(texture2d)(float,float,float,float) r6.xyzw, r0.zwzz, t3.xyzw, s3.x
add r7.xyzw, -r1.xxxx, r6.xyzw
mad_sat r7.xyzw, r7.xyzw, r16.wwww, l(1.000000, 1.000000, 1.000000, 1.000000)
add r8.xy, -r1.ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r3.xy, r3.wxww, r8.xxxx, r3.zyzz
add r3.xy, r5.wxww, r3.xyxx
add r3.xy, r5.zyzz, r3.xyxx
add r3.xy, r7.wxww, r3.xyxx
mad r3.xy, r7.zyzz, r1.yyyy, r3.xyxx
mad r3.x, r3.x, r8.y, r3.y
gather4_aoffimmi_indexable(-2,0,0)(texture2d)(float,float,float,float) r5.xyzw, r0.zwzz, t3.xyzw, s3.x
add r7.xyzw, -r1.xxxx, r5.xyzw
mad_sat r7.xyzw, r7.xyzw, r16.wwww, l(1.000000, 1.000000, 1.000000, 1.000000)
gather4_indexable(texture2d)(float,float,float,float) r9.xyzw, r0.zwzz, t3.xyzw, s3.x
add r10.xyzw, -r1.xxxx, r9.xyzw
mad_sat r10.xyzw, r10.xyzw, r16.wwww, l(1.000000, 1.000000, 1.000000, 1.000000)
gather4_aoffimmi_indexable(2,0,0)(texture2d)(float,float,float,float) r11.xyzw, r0.zwzz, t3.xyzw, s3.x
add r12.xyzw, -r1.xxxx, r11.xyzw
mad_sat r12.xyzw, r12.xyzw, r16.wwww, l(1.000000, 1.000000, 1.000000, 1.000000)
mad r3.yz, r7.wwxw, r8.xxxx, r7.zzyz
add r3.yz, r10.wwxw, r3.yyzy
add r3.yz, r10.zzyz, r3.yyzy
add r3.yz, r12.wwxw, r3.yyzy
mad r3.yz, r12.zzyz, r1.yyyy, r3.yyzy
add r3.y, r3.z, r3.y
add r3.x, r3.y, r3.x
gather4_aoffimmi_indexable(-2,2,0)(texture2d)(float,float,float,float) r7.xyzw, r0.zwzz, t3.xyzw, s3.x
add r10.xyzw, -r1.xxxx, r7.xyzw
mad_sat r10.xyzw, r10.xyzw, r16.wwww, l(1.000000, 1.000000, 1.000000, 1.000000)
gather4_aoffimmi_indexable(0,2,0)(texture2d)(float,float,float,float) r12.xyzw, r0.zwzz, t3.xyzw, s3.x
add r13.xyzw, -r1.xxxx, r12.xyzw
mad_sat r13.xyzw, r13.xyzw, r16.wwww, l(1.000000, 1.000000, 1.000000, 1.000000)
gather4_aoffimmi_indexable(2,2,0)(texture2d)(float,float,float,float) r14.xyzw, r0.zwzz, t3.xyzw, s3.x
add r15.xyzw, -r1.xxxx, r14.xyzw
mad_sat r15.xyzw, r15.xyzw, r16.wwww, l(1.000000, 1.000000, 1.000000, 1.000000)
mad r0.zw, r10.wwwx, r8.xxxx, r10.zzzy
add r0.zw, r13.wwwx, r0.zzzw
add r0.zw, r13.zzzy, r0.zzzw
add r0.zw, r15.wwwx, r0.zzzw
mad r0.zw, r15.zzzy, r1.yyyy, r0.zzzw
mad r0.z, r0.w, r1.w, r0.z
add r0.z, r0.z, r3.x
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r0.xyxx, t0.xyzw, s0, l(0.000000)
mul r0.w, r0.w, l(255.000000)
round_ne r0.w, r0.w
ftou r0.w, r0.w
and r1.x, r0.w, l(15)
ieq r3.xyzw, r1.xxxx, l(2, 3, 5, 6)
or r3.x, r3.y, r3.x
or r3.x, r3.z, r3.x
or r3.x, r3.w, r3.x
ieq r3.yz, r1.xxxx, l(0, 7, 9, 0)
or r1.x, r3.y, r3.x
or r1.x, r3.z, r1.x
if_nz r1.x
  sample_l_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t1.wxyz, s1, l(0.000000)
  and r0.y, r0.w, l(16)
  min r0.x, r0.x, l(0.999000)
  add r0.x, -r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, l(-0.0346573591)
  movc r0.x, r0.y, l(-0.000000), r0.x
  or r0.y, r3.z, r3.y
  movc r0.x, r0.y, l(1.000000), r0.x
  add r0.y, r1.z, r23.x
  mul r0.x, r0.x, r23.y
  add r3.xyzw, -r2.xyzw, r0.yyyy
  max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  mul r3.xyzw, r0.xxxx, -r3.xyzw
  mul r3.xyzw, r3.xyzw, l(1.442695, 1.442695, 1.442695, 1.442695)
  exp r3.xyzw, r3.xyzw
  min r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  lt r2.xyzw, l(0.990000, 0.990000, 0.990000, 0.990000), r2.xyzw
  movc r2.xyzw, r2.xyzw, l(1.000000,1.000000,1.000000,1.000000), r3.xyzw
  add r3.xyzw, -r4.xyzw, r0.yyyy
  max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  mul r3.xyzw, r0.xxxx, -r3.xyzw
  mul r3.xyzw, r3.xyzw, l(1.442695, 1.442695, 1.442695, 1.442695)
  exp r3.xyzw, r3.xyzw
  min r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  lt r4.xyzw, l(0.990000, 0.990000, 0.990000, 0.990000), r4.xyzw
  movc r3.xyzw, r4.xyzw, l(1.000000,1.000000,1.000000,1.000000), r3.xyzw
  add r4.xyzw, -r6.xyzw, r0.yyyy
  max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  mul r4.xyzw, r0.xxxx, -r4.xyzw
  mul r4.xyzw, r4.xyzw, l(1.442695, 1.442695, 1.442695, 1.442695)
  exp r4.xyzw, r4.xyzw
  min r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  lt r6.xyzw, l(0.990000, 0.990000, 0.990000, 0.990000), r6.xyzw
  movc r4.xyzw, r6.xyzw, l(1.000000,1.000000,1.000000,1.000000), r4.xyzw
  mad r1.xz, r2.wwxw, r8.xxxx, r2.zzyz
  add r1.xz, r3.wwxw, r1.xxzx
  add r1.xz, r3.zzyz, r1.xxzx
  add r1.xz, r4.wwxw, r1.xxzx
  mad r1.xz, r4.zzyz, r1.yyyy, r1.xxzx
  mad r0.w, r1.x, r8.y, r1.z
  add r2.xyzw, -r5.xyzw, r0.yyyy
  max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  mul r2.xyzw, r0.xxxx, -r2.xyzw
  mul r2.xyzw, r2.xyzw, l(1.442695, 1.442695, 1.442695, 1.442695)
  exp r2.xyzw, r2.xyzw
  min r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  lt r3.xyzw, l(0.990000, 0.990000, 0.990000, 0.990000), r5.xyzw
  movc r2.xyzw, r3.xyzw, l(1.000000,1.000000,1.000000,1.000000), r2.xyzw
  add r3.xyzw, -r9.xyzw, r0.yyyy
  max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  mul r3.xyzw, r0.xxxx, -r3.xyzw
  mul r3.xyzw, r3.xyzw, l(1.442695, 1.442695, 1.442695, 1.442695)
  exp r3.xyzw, r3.xyzw
  min r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  lt r4.xyzw, l(0.990000, 0.990000, 0.990000, 0.990000), r9.xyzw
  movc r3.xyzw, r4.xyzw, l(1.000000,1.000000,1.000000,1.000000), r3.xyzw
  add r4.xyzw, -r11.xyzw, r0.yyyy
  max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  mul r4.xyzw, r0.xxxx, -r4.xyzw
  mul r4.xyzw, r4.xyzw, l(1.442695, 1.442695, 1.442695, 1.442695)
  exp r4.xyzw, r4.xyzw
  min r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  lt r5.xyzw, l(0.990000, 0.990000, 0.990000, 0.990000), r11.xyzw
  movc r4.xyzw, r5.xyzw, l(1.000000,1.000000,1.000000,1.000000), r4.xyzw
  mad r1.xz, r2.wwxw, r8.xxxx, r2.zzyz
  add r1.xz, r3.wwxw, r1.xxzx
  add r1.xz, r3.zzyz, r1.xxzx
  add r1.xz, r4.wwxw, r1.xxzx
  mad r1.xz, r4.zzyz, r1.yyyy, r1.xxzx
  add r1.x, r1.z, r1.x
  add r0.w, r0.w, r1.x
  add r2.xyzw, -r7.xyzw, r0.yyyy
  max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  mul r2.xyzw, r0.xxxx, -r2.xyzw
  mul r2.xyzw, r2.xyzw, l(1.442695, 1.442695, 1.442695, 1.442695)
  exp r2.xyzw, r2.xyzw
  min r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  lt r3.xyzw, l(0.990000, 0.990000, 0.990000, 0.990000), r7.xyzw
  movc r2.xyzw, r3.xyzw, l(1.000000,1.000000,1.000000,1.000000), r2.xyzw
  add r3.xyzw, -r12.xyzw, r0.yyyy
  max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  mul r3.xyzw, r0.xxxx, -r3.xyzw
  mul r3.xyzw, r3.xyzw, l(1.442695, 1.442695, 1.442695, 1.442695)
  exp r3.xyzw, r3.xyzw
  min r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  lt r4.xyzw, l(0.990000, 0.990000, 0.990000, 0.990000), r12.xyzw
  movc r3.xyzw, r4.xyzw, l(1.000000,1.000000,1.000000,1.000000), r3.xyzw
  add r4.xyzw, -r14.xyzw, r0.yyyy
  max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  mul r4.xyzw, r0.xxxx, -r4.xyzw
  mul r4.xyzw, r4.xyzw, l(1.442695, 1.442695, 1.442695, 1.442695)
  exp r4.xyzw, r4.xyzw
  min r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  lt r5.xyzw, l(0.990000, 0.990000, 0.990000, 0.990000), r14.xyzw
  movc r4.xyzw, r5.xyzw, l(1.000000,1.000000,1.000000,1.000000), r4.xyzw
  mad r0.xy, r2.wxww, r8.xxxx, r2.zyzz
  add r0.xy, r3.wxww, r0.xyxx
  add r0.xy, r3.zyzz, r0.xyxx
  add r0.xy, r4.wxww, r0.xyxx
  mad r0.xy, r4.zyzz, r1.yyyy, r0.xyxx
  mad r0.x, r0.y, r1.w, r0.x
  add r0.x, r0.x, r0.w
  mul r0.x, r0.x, l(0.040000)
else 
  mov r0.x, l(1.000000)
endif 
mad r0.y, r0.z, l(0.040000), l(-0.500000)
mad_sat r0.y, r0.y, r18.z, l(0.500000)
mad r0.y, r0.y, r0.y, l(-1.000000)
mad r0.y, r18.y, r0.y, l(1.000000)
mad r0.x, r0.x, r0.x, l(-1.000000)
mad r0.x, r18.y, r0.x, l(1.000000)
sqrt o0.xyzw, r0.yxyx
ret 
// Approximately 0 instruction slots used