// asmtool.py --remap-cb 1 101 -i -f --only-autofixed --disable-driver-stereo-cb 12 003ec1e9045328e6-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.63 on Tue Sep 12 13:32:53 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float       
// SV_POSITION              0   xyzw        5      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[39], immediateIndexed
dcl_constantbuffer cb1[123], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_input_ps linear noperspective v0.xy
dcl_input_ps linear noperspective v1.xyz
dcl_input_ps linear noperspective v2.xyzw
dcl_input_ps linear noperspective v3.xyzw
dcl_input_ps_siv linear noperspective v5.xy, position
dcl_output o0.xyzw
dcl_temps 6
dcl_resource_structured t101, 1968

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 -i -f --only-autofixed --disable-driver-stereo-cb 12 003ec1e9045328e6-ps.txt
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r4.xyzw, l(0), l(1936), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r5.xyzw, l(0), l(1952), t101.xyzw

mad r0.x, v2.w, l(543.309998), v2.z
sincos r0.x, null, r0.x
mul r0.x, r0.x, l(493013.000000)
frc r0.x, r0.x
mad r0.y, -r0.x, r0.x, l(1.000000)
mul r0.y, r0.y, cb0[37].z
add r1.xyzw, -v0.xyxy, v2.xyxy
mad r0.zw, r0.yyyy, r1.zzzw, v0.xxxy
mad r1.xyzw, r0.yyyy, r1.xyzw, v3.zwxy
sample_indexable(texture2d)(float,float,float,float) r2.x, r1.xyxx, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r2.y, r1.zwzz, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r2.z, r0.zwzz, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r0.yzw, v0.xyxx, t2.wxyz, s2
add r1.xy, v5.xyxx, -r4.xyxx
mul r1.xy, r1.xyxx, r5.zwzz
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t0.xyzw, s0
mad r1.xyz, r1.xyzx, cb2[0].xyzx, cb0[34].xyzx
mul r0.yzw, r0.yyzw, r1.xxyz
mad r0.yzw, r2.xxyz, cb0[33].xxyz, r0.yyzw
mul r0.yzw, r0.yyzw, v1.xxxx
mul r1.xy, v1.yzyy, cb0[35].zzzz
dp2 r1.x, r1.xyxx, r1.xyxx
add r1.x, r1.x, l(1.000000)
rcp r1.x, r1.x
mul r1.x, r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
mad r1.x, r0.x, cb0[37].x, cb0[37].y
mul r0.yzw, r0.yyzw, r1.xxxx
uge r1.x, cb0[38].x, l(3)
mul r1.yzw, r0.yyzw, l(0.000000, 0.000100, 0.000100, 0.000100)
log r1.yzw, r1.yyzw
mul r1.yzw, r1.yyzw, l(0.000000, 0.159301758, 0.159301758, 0.159301758)
exp r1.yzw, r1.yyzw
mad r2.xyz, r1.yzwy, l(18.851563, 18.851563, 18.851563, 0.000000), l(0.835937500, 0.835937500, 0.835937500, 0.000000)
mad r1.yzw, r1.yyzw, l(0.000000, 18.687500, 18.687500, 18.687500), l(0.000000, 1.000000, 1.000000, 1.000000)
rcp r1.yzw, r1.yyzw
mul r1.yzw, r1.yyzw, r2.xxyz
log r1.yzw, r1.yyzw
mul r1.yzw, r1.yyzw, l(0.000000, 78.843750, 78.843750, 78.843750)
exp r1.yzw, r1.yyzw
log r0.yzw, r0.yyzw
mad_sat r0.yzw, r0.yyzw, l(0.000000, 0.0714285746, 0.0714285746, 0.0714285746), l(0.000000, 0.610726953, 0.610726953, 0.610726953)
movc r0.yzw, r1.xxxx, r1.yyzw, r0.yyzw
mad r0.yzw, r0.yyzw, l(0.000000, 0.968750, 0.968750, 0.968750), l(0.000000, 0.015625, 0.015625, 0.015625)
sample_indexable(texture3d)(float,float,float,float) r0.yzw, r0.yzwy, t3.wxyz, s3
mul r1.xyz, r0.yzwy, l(1.050000, 1.050000, 1.050000, 0.000000)
dp3_sat o0.w, r1.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
mad r0.x, r0.x, l(0.00390625000), l(-0.00195312500)
mad r0.xyz, r0.yzwy, l(1.050000, 1.050000, 1.050000, 0.000000), r0.xxxx
ieq r1.xy, cb0[38].xxxx, l(5, 6, 0, 0)
or r0.w, r1.y, r1.x
if_nz r0.w
  ieq r0.w, cb0[38].x, l(4)
  movc r1.xyzw, r0.wwww, l(2000.000000,0.005000,-0.005000,25.000000), l(1000.000000,0.000100,-0.000100,12.500000)
  log r2.xyz, r0.xyzx
  mul r2.xyz, r2.xyzx, l(0.0126833133, 0.0126833133, 0.0126833133, 0.000000)
  exp r2.xyz, r2.xyzx
  add r3.xyz, r2.xyzx, l(-0.835937500, -0.835937500, -0.835937500, 0.000000)
  max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r2.xyz, -r2.xyzx, l(18.687500, 18.687500, 18.687500, 0.000000), l(18.851563, 18.851563, 18.851563, 0.000000)
  div r2.xyz, r3.xyzx, r2.xyzx
  log r2.xyz, r2.xyzx
  mul r2.xyz, r2.xyzx, l(6.277395, 6.277395, 6.277395, 0.000000)
  exp r2.xyz, r2.xyzx
  mul r2.xyz, r2.xyzx, l(10000.000000, 10000.000000, 10000.000000, 0.000000)
  max r2.xyz, r1.yyyy, r2.xyzx
  min r2.xyz, r1.xxxx, r2.xyzx
  add r2.xyz, r1.zzzz, r2.xyzx
  add r0.w, r1.z, r1.x
  div r1.xyz, r2.xyzx, r0.wwww
  dp3 r2.x, l(1.73125386, -0.604043067, -0.0801077113, 0.000000), r1.xyzx
  dp3 r2.y, l(-0.131618932, 1.13484156, -0.00867943279, 0.000000), r1.xyzx
  dp3 r2.z, l(-0.0245682523, -0.125750408, 1.065637, 0.000000), r1.xyzx
  mul o0.xyz, r1.wwww, r2.xyzx
else 
  mov o0.xyz, r0.xyzx
endif 
ret 
// Approximately 0 instruction slots used