// asmtool.py --remap-cb 1 101 -i -f --only-autofixed --disable-driver-stereo-cb 12 17c082bbe3d5e08e-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:42:44 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// SV_POSITION              0   xyzw        1      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 0, -0.430000, 0, 0},
                              { 0.406000, 0.569800, 0, 0},
                              { -0.580000, 0.814000, 0, 0} }
dcl_constantbuffer cb0[31], immediateIndexed
dcl_constantbuffer cb1[54], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear noperspective v0.xyzw
dcl_input_ps_siv linear noperspective v1.xy, position
dcl_output o0.xyzw
dcl_temps 17
dcl_resource_structured t101, 864

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 -i -f --only-autofixed --disable-driver-stereo-cb 12 17c082bbe3d5e08e-ps.txt
ld_structured_indexable(structured_buffer, stride=864)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(128), t101.xyzw
ld_structured_indexable(structured_buffer, stride=864)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(144), t101.xyzw
ld_structured_indexable(structured_buffer, stride=864)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(160), t101.xyzw
ld_structured_indexable(structured_buffer, stride=864)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(848), t101.xyzw

mul r0.y, cb0[23].w, cb0[25].w
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[25].w
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
mov r1.z, l(1.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.w, v0.xyxx, t2.yzwx, s2, l(0.000000)
mad r1.w, r0.w, r16.x, r16.y
mad r0.w, r0.w, r16.z, -r16.w
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
add r2.z, r0.w, r1.w
sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, v0.xyxx, t0.xyzw, s0, l(0.000000)
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.w, v0.xyxx, t1.xyzw, s1, l(0.000000)
mul r0.w, r0.w, l(255.000000)
round_ne r0.w, r0.w
ftou r0.w, r0.w
and r0.w, r0.w, l(15)
ieq r0.w, r0.w, l(7)
movc r3.xyz, r0.wwww, l(0,0,0,0), r3.xyzx
mad r0.w, r2.z, cb0[26].x, cb0[26].y
lt r1.w, r0.w, l(1.000000)
mul r4.xyz, r3.yyyy, r14.xyzx
mad r4.xyz, r3.xxxx, r13.xyzx, r4.xyzx
mad r4.xyz, r3.zzzz, r15.xyzx, r4.xyzx
dp3 r2.w, r4.xyzx, r4.xyzx
rsq r2.w, r2.w
mul r4.yzw, r2.wwww, r4.xxyz
mul r2.xy, r2.zzzz, v0.zwzz
add r5.xy, -r2.zzzz, l(1.000000, 1000.000000, 0.000000, 0.000000)
mad r5.xy, cb0[24].zzzz, r5.xyxx, r2.zzzz
mul r2.w, r5.x, cb0[23].z
mul r3.w, r2.z, cb0[22].y
mul r3.w, r3.w, cb0[24].x
mov r0.x, cb0[25].w
mov r0.z, l(1.000000)
mul r5.xzw, r0.xxyz, r4.yyzw
mad r5.xzw, r3.wwww, r5.xxzw, r2.xxyz
mad r2.xy, v0.xyxx, cb0[23].xyxx, cb0[25].xyxx
sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t6.xyzw, s6
mad r6.xyz, r2.xyxx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r6.xyw, r2.wwww, r6.xyxz
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
mul r7.xyzw, r0.zzzz, r0.xyxy
mov r6.z, -r6.y
mul r6.xyzw, r6.xyzw, r7.xyzw
div r0.xy, r5.xzxx, r5.wwww
mul r0.z, r5.y, l(0.080000)
mul r2.xyw, r0.zzzz, r4.yzyw
mov r7.y, l(2.000000)
mov r8.xw, l(0.000100,0,0,0.000100)
mov r0.z, l(0)
loop 
  ige r3.w, r0.z, l(3)
  breakc_nz r3.w
  mul r9.xyzw, r6.xyzw, icb[r0.z + 0].xxyy
  add r7.zw, r9.zzzw, r9.xxxy
  itof r3.w, r0.z
  add r3.w, r3.w, l(0.500000)
  mul r3.w, r3.w, l(0.333333343)
  mov r9.xy, l(0,0,0,0)
  mov r4.w, l(0)
  loop 
    uge r5.y, r4.w, l(2)
    breakc_nz r5.y
    iadd r4.w, r4.w, l(1)
    utof r5.y, r4.w
    mul r5.y, r5.y, l(0.500000)
    itof r8.y, r4.w
    mul r8.y, r8.y, cb0[26].z
    mul r8.y, r3.w, r8.y
    mul r8.y, r8.y, l(0.500000)
    log r8.y, r8.y
    mad r9.zw, r5.yyyy, r7.zzzw, r0.xxxy
    mad r10.xy, -r5.yyyy, r7.zwzz, r0.xyxx
    mad r10.zw, cb0[30].xxxy, r9.zzzw, cb0[30].zzzw
    sample_l_indexable(texture2d)(float,float,float,float) r5.y, r10.zwzz, t5.yxzw, s5, r8.y
    mad r10.zw, cb0[30].xxxy, r10.xxxy, cb0[30].zzzw
    sample_l_indexable(texture2d)(float,float,float,float) r8.y, r10.zwzz, t5.yxzw, s5, r8.y
    mad r10.z, r5.y, r16.x, r16.y
    mad r5.y, r5.y, r16.z, -r16.w
    div r5.y, l(1.000000, 1.000000, 1.000000, 1.000000), r5.y
    add r11.z, r5.y, r10.z
    mad r5.y, r8.y, r16.x, r16.y
    mad r8.y, r8.y, r16.z, -r16.w
    div r8.y, l(1.000000, 1.000000, 1.000000, 1.000000), r8.y
    add r12.z, r5.y, r8.y
    mul r11.xy, r9.zwzz, r11.zzzz
    mul r12.xy, r10.xyxx, r12.zzzz
    add r10.xyz, -r5.xzwx, r11.xyzx
    mul r10.xyz, r1.xyzx, r10.xyzx
    add r11.xyz, -r5.xzwx, r12.xyzx
    mul r11.xyz, r1.xyzx, r11.xyzx
    dp3 r5.y, r10.xyzx, r2.xywx
    dp3 r8.y, r10.xyzx, r10.xyzx
    div_sat r10.x, r5.y, r8.y
    dp3 r5.y, r11.xyzx, r2.xywx
    dp3 r8.y, r11.xyzx, r11.xyzx
    div_sat r10.y, r5.y, r8.y
    max r9.xy, r9.xyxx, r10.xyxx
  endloop 
  add r7.zw, -r9.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
  mul r8.z, r7.w, r7.w
  mad r7.x, r7.z, r7.z, r8.x
  add r8.xw, r7.xxxy, r8.zzzw
  iadd r0.z, r0.z, l(1)
endloop 
div r0.x, r8.x, r8.w
mad r5.xyzw, cb0[3].zwzw, l(-0.500000, 0.500000, 0.500000, 0.500000), v0.xyxy
mad r6.xyzw, cb0[3].zwzw, l(-0.500000, -0.500000, 0.500000, -0.500000), v0.xyxy
sample_indexable(texture2d)(float,float,float,float) r0.y, r5.xyxx, t4.yxzw, s4
sample_indexable(texture2d)(float,float,float,float) r7.xyzw, r5.xyxx, t3.xyzw, s3
mad r0.z, r7.w, l(131072.000000), -r2.z
mad r0.z, -|r0.z|, l(0.003000), l(1.000000)
max r0.z, r0.z, l(0.000000)
mad r1.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3_sat r1.x, r1.xyzx, r3.xyzx
mul r1.y, r0.z, r1.x
mad r0.y, r0.y, r1.y, l(0.000100)
mad r0.z, r0.z, r1.x, l(0.000100)
sample_indexable(texture2d)(float,float,float,float) r1.x, r5.zwzz, t4.xyzw, s4
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r5.zwzz, t3.xyzw, s3
mad r1.y, r5.w, l(131072.000000), -r2.z
mad r1.y, -|r1.y|, l(0.003000), l(1.000000)
max r1.y, r1.y, l(0.000000)
mad r2.xyw, r5.xyxz, l(2.000000, 2.000000, 0.000000, 2.000000), l(-1.000000, -1.000000, 0.000000, -1.000000)
dp3_sat r1.z, r2.xywx, r3.xyzx
mul r2.x, r1.z, r1.y
mad r0.y, r1.x, r2.x, r0.y
mad r0.z, r1.y, r1.z, r0.z
sample_indexable(texture2d)(float,float,float,float) r1.x, r6.xyxx, t4.xyzw, s4
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r6.xyxx, t3.xyzw, s3
mad r1.y, r5.w, l(131072.000000), -r2.z
mad r1.y, -|r1.y|, l(0.003000), l(1.000000)
max r1.y, r1.y, l(0.000000)
mad r2.xyw, r5.xyxz, l(2.000000, 2.000000, 0.000000, 2.000000), l(-1.000000, -1.000000, 0.000000, -1.000000)
dp3_sat r1.z, r2.xywx, r3.xyzx
mul r2.x, r1.z, r1.y
mad r0.y, r1.x, r2.x, r0.y
mad r0.z, r1.y, r1.z, r0.z
sample_indexable(texture2d)(float,float,float,float) r1.x, r6.zwzz, t4.xyzw, s4
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r6.zwzz, t3.xyzw, s3
mad r1.y, r5.w, l(131072.000000), -r2.z
mad r1.y, -|r1.y|, l(0.003000), l(1.000000)
max r1.y, r1.y, l(0.000000)
mad r2.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3_sat r1.z, r2.xyzx, r3.xyzx
mul r2.x, r1.z, r1.y
mad r0.y, r1.x, r2.x, r0.y
mad r0.z, r1.y, r1.z, r0.z
div r0.y, r0.y, r0.z
add r0.y, -r0.x, r0.y
mad r0.x, cb0[24].w, r0.y, r0.x
mov_sat r0.w, r0.w
add r0.y, -r0.x, l(1.000000)
mad r0.x, r0.w, r0.y, r0.x
log r0.x, |r0.x|
mul r0.x, r0.x, cb0[22].x
exp r0.x, r0.x
add r0.x, -r0.x, l(1.000000)
mad r4.x, -r0.x, cb0[22].w, l(1.000000)
deriv_rtx_fine r0.xyz, r4.xyzx
deriv_rty_fine r1.xyz, r4.xyzx
if_nz r1.w
  ftou r2.xy, v1.xyxx
  bfi r2.xy, l(1, 1, 0, 0), l(1, 1, 0, 0), r2.xyxx, l(0, 0, 0, 0)
  iadd r2.xy, r2.xyxx, l(-1, -1, 0, 0)
  itof r2.xy, r2.xyxx
  mad r0.xyz, -r0.xyzx, r2.xxxx, r4.xyzx
  mad r1.xyz, -r1.xyzx, r2.yyyy, r4.xyzx
  dp2 r2.x, r4.yzyy, r4.yzyy
  add r2.x, -r2.x, l(1.000000)
  sqrt r2.z, r2.x
  dp2 r2.w, r0.yzyy, r0.yzyy
  add r2.w, -r2.w, l(1.000000)
  sqrt r0.w, r2.w
  dp2 r2.w, r1.yzyy, r1.yzyy
  add r2.w, -r2.w, l(1.000000)
  sqrt r1.w, r2.w
  mov r2.xy, r4.yzyy
  dp3_sat r0.y, r2.xyzx, r0.yzwy
  mul r0.y, r0.y, r0.y
  dp3_sat r0.z, r2.xyzx, r1.yzwy
  mul r0.z, r0.z, r0.z
  mul r0.yw, r0.yyyz, r0.yyyz
  mad r0.z, r0.z, r0.z, r0.y
  add r0.z, r0.z, l(1.000000)
  div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
  mul r0.yw, r0.zzzz, r0.yyyw
  mul r0.x, r0.x, r0.y
  mad r0.x, r0.z, r4.x, r0.x
  mad o0.xyzw, r0.wwww, r1.xxxx, r0.xxxx
else 
  mov o0.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
ret 
// Approximately 0 instruction slots used