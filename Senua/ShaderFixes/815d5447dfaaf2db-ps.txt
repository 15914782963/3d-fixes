// asmtool.py --remap-cb 0 100 -i --only-autofixed --disable-driver-stereo-cb 12 815d5447dfaaf2db-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 14:24:58 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[133], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_constantbuffer cb2[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps_siv linear noperspective v0.xyw, position
dcl_output o0.xyzw
dcl_temps 13
dcl_resource_structured t100, 2048

// cb0 remapped to t100 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 0 100 -i --only-autofixed --disable-driver-stereo-cb 12 815d5447dfaaf2db-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r2.xyzw, l(0), l(576), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r3.xyzw, l(0), l(592), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r4.xyzw, l(0), l(608), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r5.xyzw, l(0), l(624), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r6.xyzw, l(0), l(848), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r7.xyzw, l(0), l(864), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r8.xyzw, l(0), l(944), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r9.xyzw, l(0), l(1936), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r10.xyzw, l(0), l(1952), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r11.xyzw, l(0), l(1968), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r12.xyzw, l(1), l(64), t100.xyzw

mul r0.xy, v0.xyxx, r11.zwzz
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t3.xyzw, s3, l(0.000000)
max r0.x, r0.x, l(1.000000046E-018)
mul r0.yzw, v0.yyyy, r3.xxyw
mad r0.yzw, v0.xxxx, r2.xxyw, r0.yyzw
mad r0.xyz, r0.xxxx, r4.xywx, r0.yzwy
add r0.xyz, r0.xyzx, r5.xywx
div r0.xy, r0.xyxx, r0.zzzz
add r0.xy, r0.xyxx, -r8.xyxx
div r0.xy, r0.xyxx, cb2[4].xxxx
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.xyxx, t1.xyzw, s1
mul r0.z, r0.z, cb2[4].y
round_pi r0.z, r0.z
div r0.z, r0.z, cb2[4].y
add r1.x, -cb1[0].x, l(1.000000)
add r1.x, r0.z, -r1.x
mul_sat r1.x, r1.x, cb2[4].z
mul r1.x, r0.w, r1.x
mul r1.y, r12.z, cb2[5].x
mad r0.z, r0.z, cb2[4].w, r1.y
mul r0.z, r0.z, l(31.415928)
sincos r0.z, null, r0.z
max r0.z, r0.z, l(0.000001)
log r0.z, r0.z
mul r0.z, r0.z, cb2[5].y
exp r0.z, r0.z
mul r0.z, r0.z, r1.x
add r0.w, r0.w, r12.z
add r0.xy, r0.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r0.w, r0.w, l(8.975980)
sincos r0.w, null, r0.w
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), r0.wwww
mul r0.xy, r0.zzzz, r0.xyxx
mul r0.xy, r0.xyxx, cb2[5].zzzz
mov r0.z, cb2[5].w
sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s2
add r1.xy, v0.xyxx, -r9.xyxx
mad r1.xy, r1.xyxx, r10.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r1.xy, r1.xyxx, v0.wwww
mov r1.z, v0.w
mul r1.xyz, r1.xyzx, l(2.000000, -2.000000, 1.000000, 0.000000)
div r1.xy, r1.xyxx, r1.zzzz
mad r1.xy, r1.xyxx, r7.xyxx, r7.wzww
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r1.xyxx, t0.xywz, s0, l(0.000000)
mad r0.w, r0.w, l(2.000000), l(-1.000000)
add_sat r0.w, r0.w, -cb2[6].x
round_pi r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r0.xyz, r0.xyzx, cb2[6].yyyy
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r1.xyxx, t3.yzwx, s3, l(0.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t4.xyzw, s4
mad r1.w, r0.w, r6.z, -r6.w
mad r0.w, r0.w, r6.x, r6.y
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
add r0.w, r0.w, r1.w
div_sat r0.w, r0.w, cb2[6].z
add r0.w, -r0.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r1.xyzx
add r0.xyz, r0.xyzx, cb2[1].xyzx
max o0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used