// asmtool.py --remap-cb 1 101 -i -f --only-autofixed --disable-driver-stereo-cb 12 4cd3be3b41c92c06-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:42:53 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear noperspective v0.xyzw
dcl_output o0.xyzw
dcl_temps 27
dcl_resource_structured t101, 2048

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 -i -f --only-autofixed --disable-driver-stereo-cb 12 4cd3be3b41c92c06-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r11.xyzw, l(0), l(640), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(656), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(672), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(1968), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(2016), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(1), l(208), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(1), l(272), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(1), l(448), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(1), l(464), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(1), l(480), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(1), l(496), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(1), l(512), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(1), l(528), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(1), l(544), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(1), l(560), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r26.xyzw, l(1), l(768), t101.xyzw

sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v0.xyxx, t1.xyzw, s1, l(0.000000)
mul r0.w, r0.w, l(255.000000)
round_ne r0.w, r0.w
ftou r0.w, r0.w
and r1.x, r0.w, l(15)
if_nz r1.x
  sample_l_indexable(texture2d)(float,float,float,float) r1.yzw, v0.xyxx, t0.wxyz, s0, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, v0.xyxx, t2.xyzw, s2, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r3.xyzw, v0.xyxx, t3.xyzw, s3, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r2.w, v0.xyxx, t4.yzwx, s4, l(0.000000)
  mul r4.xy, v0.xyxx, r14.xyxx
  ftou r4.xy, r4.xyxx
  ftou r4.z, r16.x
  iadd r4.x, r4.y, r4.x
  iadd r4.x, r4.z, r4.x
  and r4.x, r4.x, l(1)
  mad r1.yzw, r1.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
  dp3 r4.y, r1.yzwy, r1.yzwy
  rsq r4.y, r4.y
  mul r5.xyz, r1.yzwy, r4.yyyy
  and r0.w, r0.w, l(16)
  movc r3.xyzw, r0.wwww, l(0,0,0,0), r3.xyzw
  ieq r6.xyzw, r1.xxxx, l(5, 6, 2, 3)
  lt r0.w, l(0.000000), r17.x
  lt r1.y, l(0.000000), r26.w
  and r0.w, r0.w, r1.y
  ne r1.y, l(0.000000, 0.000000, 0.000000, 0.000000), r17.x
  movc r7.xyz, r1.yyyy, l(1.000000,1.000000,1.000000,0), r2.xyzx
  movc r4.xy, r4.xxxx, l(1.000000,0,0,0), l(0,1.000000,0,0)
  mul r4.z, r0.y, r4.y
  mov r7.w, r0.y
  movc r4.xyzw, r0.wwww, r4.xxxz, r7.xyzw
  mov r7.xyz, r2.xyzx
  movc r4.xyzw, r6.xxxx, r4.xyzw, r7.xyzw
  mad r1.yzw, -r4.xxyz, r0.xxxx, r4.xxyz
  mad r1.yzw, r1.yyzw, r15.wwww, r15.xxyz
  mul r0.y, r2.w, r2.w
  sample_l_indexable(texture2d)(float,float,float,float) r0.w, v0.xyxx, t5.yzwx, s5, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r2.x, v0.xyxx, t6.xyzw, s6, l(0.000000)
  min r0.w, r0.w, l(1.000000)
  add r2.y, -r0.w, l(1.000000)
  mul r7.xyz, r2.yyyy, cb0[3].xyzx
  mad r0.w, cb0[3].w, r2.y, r0.w
  if_nz r6.y
    mov r8.xyz, -r5.xyzx
    mov r8.w, l(1.000000)
    dp4 r9.x, r19.xyzw, r8.xyzw
    dp4 r9.y, r20.xyzw, r8.xyzw
    dp4 r9.z, r21.xyzw, r8.xyzw
    mul r8.xyzw, r5.yzzx, r5.xyzz
    dp4 r10.x, r22.xyzw, r8.xyzw
    dp4 r10.y, r23.xyzw, r8.xyzw
    dp4 r10.z, r24.xyzw, r8.xyzw
    mul r2.y, r5.y, r5.y
    mad r2.y, r5.x, r5.x, -r2.y
    add r8.xyz, r9.xyzx, r10.xyzx
    mad r2.yzw, r25.xxyz, r2.yyyy, r8.xxyz
    max r2.yzw, r2.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    mul r2.yzw, r2.yyzw, r18.xxyz
    mul r2.yzw, r0.yyyy, r2.yyzw
    mul r8.xyz, r3.xyzx, r3.xyzx
    mul r2.yzw, r0.wwww, r2.yyzw
    mul r2.yzw, r8.xxyz, r2.yyzw
  else 
    mov r2.yzw, l(0,0,0,0)
  endif 
  or r6.x, r6.w, r6.z
  mad r6.yzw, r3.xxyz, r3.xxyz, r1.yyzw
  movc r1.yzw, r6.xxxx, r6.yyzw, r1.yyzw
  ieq r6.xy, r1.xxxx, l(7, 8, 0, 0)
  if_nz r6.x
    mul r6.xzw, v0.wwww, r12.xxyz
    mad r6.xzw, v0.zzzz, r11.xxyz, r6.xxzw
    add r6.xzw, r6.xxzw, r13.xxyz
    dp3 r7.w, r6.xzwx, r6.xzwx
    rsq r7.w, r7.w
    mul r6.xzw, r6.xxzw, r7.wwww
    dp3 r7.w, -r6.xzwx, r5.xyzx
    mad r8.xyz, -r5.xyzx, r7.wwww, -r6.xzwx
    dp3 r8.w, r8.xyzx, r8.xyzx
    rsq r9.x, r8.w
    mul r9.xyz, r8.xyzx, r9.xxxx
    max r0.z, r0.z, l(0.00392156886)
    min r0.z, r0.z, l(1.000000)
    dp3 r6.x, -r6.xzwx, r9.xyzx
    dp3 r6.z, r5.xyzx, r9.xyzx
    mad r6.w, |r7.w|, l(-0.156583), l(1.57079637)
    add r9.w, -|r7.w|, l(1.000000)
    sqrt r9.w, r9.w
    mul r10.x, r6.w, r9.w
    ge r10.y, r7.w, l(0.000000)
    mad r6.w, -r6.w, r9.w, l(3.14159274)
    movc r6.w, r10.y, r10.x, r6.w
    add r6.w, -r6.w, l(1.57079637)
    mad r9.w, |r6.z|, l(-0.156583), l(1.57079637)
    add r10.x, -|r6.z|, l(1.000000)
    sqrt r10.x, r10.x
    mul r10.y, r9.w, r10.x
    ge r10.z, r6.z, l(0.000000)
    mad r9.w, -r9.w, r10.x, l(3.14159274)
    movc r9.w, r10.z, r10.y, r9.w
    add r9.w, -r9.w, l(1.57079637)
    add r6.w, r6.w, -r9.w
    mul r6.w, |r6.w|, l(0.500000)
    sincos null, r6.w, r6.w
    mad r10.xyz, -r6.zzzz, r5.xyzx, r9.xyzx
    dp3 r8.x, r10.xyzx, r8.xyzx
    dp3 r8.y, r10.xyzx, r10.xyzx
    mad r8.y, r8.y, r8.w, l(0.000100)
    rsq r8.y, r8.y
    mul r8.x, r8.y, r8.x
    mad r8.xy, r8.xxxx, l(0.500000, 17.000000, 0.000000, 0.000000), l(0.500000, -16.780001, 0.000000, 0.000000)
    mov_sat r8.x, r8.x
    sqrt r8.x, r8.x
    mul r8.z, r0.z, r0.z
    mad r0.z, r0.z, r0.z, l(0.200000)
    mad r8.z, r8.z, l(2.000000), l(0.200000)
    mul r8.w, r8.x, l(0.997551)
    mad r9.w, -r7.w, r7.w, l(1.000000)
    sqrt r9.w, r9.w
    mul r10.x, r7.w, l(-0.0699428469)
    mad r8.w, r8.w, r9.w, r10.x
    mul r0.z, r8.x, r0.z
    mul r10.xy, r0.zzzz, l(1.41421354, 3.54490757, 0.000000, 0.000000)
    add r0.z, r7.w, r6.z
    mad r6.z, -r8.w, l(-0.139885694), r0.z
    mul r6.z, r6.z, r6.z
    mul r6.z, r6.z, l(-0.500000)
    mul r7.w, r10.x, r10.x
    div r6.z, r6.z, r7.w
    mul r6.z, r6.z, l(1.442695)
    exp r6.z, r6.z
    div r6.z, r6.z, r10.y
    mul r6.z, r8.x, r6.z
    mad_sat r7.w, r6.x, l(0.500000), l(0.500000)
    sqrt r7.w, r7.w
    add r7.w, -r7.w, l(1.000000)
    mul r8.x, r7.w, r7.w
    mul r8.x, r8.x, r8.x
    mul r7.w, r7.w, r8.x
    mad r7.w, r7.w, l(0.953479409), l(0.0465205684)
    mul r6.z, r6.z, r7.w
    mul r4.w, r4.w, r6.z
    mul r4.w, r4.w, l(0.500000)
    mov_sat r6.x, -r6.x
    add r6.x, -r6.x, l(1.000000)
    add r0.z, r0.z, l(-0.140000)
    mul r0.z, r0.z, r0.z
    mul r0.z, r0.z, l(-0.500000)
    mul r6.z, r8.z, r8.z
    div r0.z, r0.z, r6.z
    mul r0.z, r0.z, l(1.442695)
    exp r0.z, r0.z
    mul r6.z, r8.z, l(2.50662827)
    div r0.z, r0.z, r6.z
    mad r6.z, -r6.w, l(0.500000), l(1.000000)
    mul r7.w, r6.z, r6.z
    mul r7.w, r7.w, r7.w
    mul r6.z, r6.z, r7.w
    mad r6.z, r6.z, l(0.953479409), l(0.0465205684)
    add r7.w, -r6.z, l(1.000000)
    mul r7.w, r7.w, r7.w
    mul r6.z, r6.z, r7.w
    div r6.w, l(0.800000), r6.w
    log r8.xzw, r4.xxyz
    mul r8.xzw, r6.wwww, r8.xxzw
    exp r8.xzw, r8.xxzw
    mul r6.w, r8.y, l(1.442695)
    exp r6.w, r6.w
    mul r0.z, r0.z, r6.w
    mul r0.z, r6.z, r0.z
    mul r8.xyz, r8.xzwx, r0.zzzz
    mad r6.xzw, r4.wwww, r6.xxxx, r8.xxyz
    dp3 r0.z, r9.xyzx, r9.xyzx
    add r0.z, r0.z, l(1.000000)
    mul r0.z, r0.z, l(0.250000)
    min r0.z, r0.z, l(1.000000)
    mul r0.x, r0.z, r0.x
    mul r0.x, r0.x, l(0.318309873)
    sqrt r4.xyz, r4.xyzx
    mad r4.xyz, r4.xyzx, r0.xxxx, r6.xzwx
    min r4.xyz, -r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    mul r1.yzw, r4.xxyz, l(0.000000, -3.14159274, -3.14159274, -3.14159274)
    mov r5.xyz, r9.xyzx
  endif 
  mad r3.xyz, r3.xyzx, r3.wwww, r1.yzwy
  movc r1.yzw, r6.yyyy, r3.xxyz, r1.yyzw
  mov r5.w, l(1.000000)
  dp4 r3.x, r19.xyzw, r5.xyzw
  dp4 r3.y, r20.xyzw, r5.xyzw
  dp4 r3.z, r21.xyzw, r5.xyzw
  mul r4.xyzw, r5.yzzx, r5.xyzz
  dp4 r6.x, r22.xyzw, r4.xyzw
  dp4 r6.y, r23.xyzw, r4.xyzw
  dp4 r6.z, r24.xyzw, r4.xyzw
  mul r0.x, r5.y, r5.y
  mad r0.x, r5.x, r5.x, -r0.x
  add r3.xyz, r3.xyzx, r6.xyzx
  mad r3.xyz, r25.xyzx, r0.xxxx, r3.xyzx
  max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mul r3.xyz, r3.xyzx, r18.xyzx
  mul r0.xyz, r0.yyyy, r3.xyzx
  mul r0.xyz, r2.xxxx, r0.xyzx
  mad r0.xyz, r0.wwww, r0.xyzx, r7.xyzx
  mad r0.xyz, r0.xyzx, r1.yzwy, r2.yzwy
else 
  mov r0.xyz, l(0,0,0,0)
endif 
ieq r1.x, r1.x, l(5)
eq r1.y, r26.w, l(0.000000)
dp3 r1.z, r0.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
and r1.z, r1.z, r1.y
and r1.x, r1.z, r1.x
and r0.w, r1.x, r1.y
mov o0.xyzw, r0.xyzw
ret 
// Approximately 0 instruction slots used