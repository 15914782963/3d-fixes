// asmtool.py --remap-cb 1 101 -i -f 6973685ad9b1fe92-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 14:24:15 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[133], immediateIndexed
dcl_constantbuffer cb2[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 17
dcl_resource_structured t101, 2048
dcl_resource_structured t90, 64

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 -i -f 6973685ad9b1fe92-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r4.xyzw, l(0), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r5.xyzw, l(0), l(592), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r6.xyzw, l(0), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r7.xyzw, l(0), l(624), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r8.xyzw, l(0), l(896), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r9.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r10.xyzw, l(0), l(1968), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r11.xyzw, l(1), l(64), t101.xyzw

// SV_Position stereoisation matrix:
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(0), t90.xyzw
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(16), t90.xyzw
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(32), t90.xyzw
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(48), t90.xyzw

mul r1.xy, v0.xyxx, r10.zwzz
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t2.xyzw, s2, l(0.000000)

mul r16.xyzw, v0.xxxx, r12.xyzw
mad r16.xyzw, v0.yyyy, r13.xyzw, r16.xyzw
mad r16.xyzw, r1.xxxx, r14.xyzw, r16.xyzw
add r16.xyzw, r16.xyzw, r15.xyzw

mul r0.xyzw, r16.yyyy, cb0[9].xyzw
mad r0.xyzw, r16.xxxx, cb0[8].xyzw, r0.xyzw
mad r0.xyzw, r16.zzzz, cb0[10].xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, cb0[11].xyzw
div r0.xyz, r0.yzxy, r0.wwww
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.yzw, r0.wwww, r0.xxyz
max r0.w, |r1.z|, |r1.y|
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
min r2.x, |r1.z|, |r1.y|
mul r0.w, r0.w, r2.x
mul r2.x, r0.w, r0.w
mad r2.y, r2.x, l(0.0208350997), l(-0.085133)
mad r2.y, r2.x, r2.y, l(0.180141)
mad r2.y, r2.x, r2.y, l(-0.330299497)
mad r2.x, r2.x, r2.y, l(0.999866)
mul r2.y, r0.w, r2.x
mad r2.y, r2.y, l(-2.000000), l(1.57079637)
lt r2.z, |r1.z|, |r1.y|
and r2.y, r2.z, r2.y
mad r0.w, r0.w, r2.x, r2.y
lt r2.xy, r1.zwzz, -r1.zwzz
and r2.x, r2.x, l(0xc0490fdb)
add r0.w, r0.w, r2.x
min r2.x, r1.z, r1.y
lt r2.x, r2.x, -r2.x
max r1.y, r1.z, r1.y
ge r1.y, r1.y, -r1.y
and r1.y, r1.y, r2.x
movc r0.w, r1.y, -r0.w, r0.w
add r0.w, r0.w, l(3.14159274)
mul r3.x, r0.w, l(0.159154937)
mad r0.w, |r1.w|, l(-0.0187292993), l(0.074261)
mad r0.w, r0.w, |r1.w|, l(-0.212114394)
mad r0.w, r0.w, |r1.w|, l(1.57072878)
add r1.y, -|r1.w|, l(1.000000)
sqrt r1.y, r1.y
mul r1.z, r0.w, r1.y
mad r1.z, r1.z, l(-2.000000), l(3.14159274)
and r1.z, r2.y, r1.z
mad r0.w, r0.w, r1.y, r1.z
mul r3.y, r0.w, l(0.318309873)
lt r1.yz, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[3].zzwz
movc r1.zw, r1.zzzz, r3.xxxy, r0.yyyx
mul r0.z, r0.z, cb0[3].x
div r0.xy, r0.yxyy, r0.zzzz
mad r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
movc r0.xy, r1.yyyy, r0.xyxx, r1.zwzz
mul r0.z, r11.z, r11.z
mad r0.zw, cb2[5].zzzz, r0.zzzz, r0.xxxy
mul r0.xy, r0.xyxx, cb2[1].xyxx
sample_indexable(texture2d)(float,float,float,float) r0.zw, r0.zwzz, t1.zwxy, s1
mad r0.zw, r0.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r0.zw, r0.zzzw, cb2[5].wwww
sample_indexable(texture2d)(float,float,float,float) r1.y, r0.xyxx, t0.yxzw, s0
mad r0.xy, r1.yyyy, r0.zwzz, r0.xyxx
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t0.yxzw, s0
add r0.y, -cb2[6].y, cb2[6].x
mad r0.x, r0.x, r0.y, cb2[6].y
add r0.xyz, r0.xxxx, cb2[2].xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r0.x, r0.xyzx, l(0.333300, 0.333300, 0.333300, 0.000000)
add r0.x, r0.x, -cb0[12].y
mul r2.xyzw, v0.yyyy, r5.xyzw
mad r2.xyzw, v0.xxxx, r4.xyzw, r2.xyzw
mad r1.xyzw, r1.xxxx, r6.xyzw, r2.xyzw
add r1.xyzw, r1.xyzw, r7.xyzw
div r0.yzw, r1.xxyz, r1.wwww
add r0.yzw, r0.yyzw, -r9.xxyz
add r0.yzw, -r0.yyzw, r8.xxyz
dp3 r0.y, r0.yzwy, r0.yzwy
sqrt r0.y, r0.y
add r0.y, -r0.y, cb0[12].x
mul r0.z, cb0[12].x, l(0.200000)
div_sat r0.y, r0.y, r0.z
mul r0.x, r0.x, r0.y
mad r0.x, cb0[3].y, r0.x, cb0[12].y
sqrt r0.z, r0.x
mov r0.xyw, l(1.000000,1.000000,0,1.000000)
add r1.xyzw, -r0.wwzw, r0.zzzz
mad o0.xyzw, cb0[12].zzzz, r1.xyzw, r0.xyzw
ret 
// Approximately 0 instruction slots used
