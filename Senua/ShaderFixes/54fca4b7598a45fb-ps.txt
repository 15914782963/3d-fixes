// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i -f --only-autofixed --disable-driver-stereo-cb 12 54fca4b7598a45fb-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:42:57 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz 
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x   
// TEXCOORD                 7   xyzw        4     NONE   float   xyzw
// SV_Position              0   xyzw        5      POS   float   xyzw
// SV_IsFrontFace           0   x           6    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 0, 0, 0.500000, 0},
                              { 1.000000, 0.500000, 1.000000, 0} }
dcl_constantbuffer cb0[41], dynamicIndexed
dcl_constantbuffer cb1[167], immediateIndexed
dcl_constantbuffer cb2[167], immediateIndexed
dcl_constantbuffer cb3[10], immediateIndexed
dcl_constantbuffer cb4[4], immediateIndexed
dcl_constantbuffer cb5[4], immediateIndexed
dcl_constantbuffer cb6[2728], dynamicIndexed
dcl_constantbuffer cb7[1], immediateIndexed
dcl_constantbuffer cb8[11], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t11
dcl_resource_texture3d (float,float,float,float) t12
dcl_resource_texture3d (float,float,float,float) t13
dcl_resource_texture3d (float,float,float,float) t14
dcl_resource_buffer (uint,uint,uint,uint) t15
dcl_resource_buffer (uint,uint,uint,uint) t16
dcl_resource_buffer (uint,uint,uint,uint) t17
dcl_resource_buffer (uint,uint,uint,uint) t18
dcl_resource_texturecubearray (float,float,float,float) t19
dcl_resource_texturecubearray (float,float,float,float) t20
dcl_resource_texturecube (float,float,float,float) t21
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps linear v4.xyzw
dcl_input_ps_siv linear noperspective v5.xyzw, position
dcl_output o0.xyzw
dcl_temps 72
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 2048

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i -f --only-autofixed --disable-driver-stereo-cb 12 54fca4b7598a45fb-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(0), l(128), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(0), l(144), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r26.xyzw, l(0), l(160), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r27.xyzw, l(0), l(176), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r28.xyzw, l(0), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r29.xyzw, l(0), l(592), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r30.xyzw, l(0), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r31.xyzw, l(0), l(624), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r32.xyzw, l(0), l(896), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r33.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r34.xyzw, l(0), l(1936), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r35.xyzw, l(0), l(2016), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r36.xyzw, l(0), l(2032), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r37.xyzw, l(1), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r38.xyzw, l(1), l(16), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r39.xyzw, l(1), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r40.xyzw, l(1), l(96), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r41.xyzw, l(1), l(144), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r42.xyzw, l(1), l(160), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r43.xyzw, l(1), l(176), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r44.xyzw, l(1), l(192), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r45.xyzw, l(1), l(288), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r46.xyzw, l(1), l(384), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r47.xyzw, l(1), l(448), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r48.xyzw, l(1), l(464), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r49.xyzw, l(1), l(480), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r50.xyzw, l(1), l(496), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r51.xyzw, l(1), l(512), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r52.xyzw, l(1), l(528), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r53.xyzw, l(1), l(544), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r54.xyzw, l(1), l(560), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r55.xyzw, l(1), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r56.xyzw, l(1), l(608), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i -f --only-autofixed --disable-driver-stereo-cb 12 54fca4b7598a45fb-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r57.xyzw, l(0), l(128), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r58.xyzw, l(0), l(144), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r59.xyzw, l(0), l(160), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r60.xyzw, l(0), l(176), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r61.xyzw, l(0), l(576), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r62.xyzw, l(0), l(592), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r63.xyzw, l(0), l(608), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r64.xyzw, l(0), l(624), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r65.xyzw, l(0), l(896), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r66.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r67.xyzw, l(0), l(1936), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r68.xyzw, l(1), l(384), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r69.xyzw, l(1), l(448), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r70.xyzw, l(1), l(576), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r71.xyzw, l(1), l(608), t102.xyzw

and r0.x, v3.x, l(1)
if_z r0.x
  mov r1.x, r24.x
  mov r1.y, r25.x
  mov r1.z, r26.x
  mov r1.w, r27.x
  mov r2.x, r24.y
  mov r2.y, r25.y
  mov r2.z, r26.y
  mov r2.w, r27.y
  mov r3.x, r24.z
  mov r3.y, r25.z
  mov r3.z, r26.z
  mov r3.w, r27.z
  mov r4.x, r28.x
  mov r4.y, r29.x
  mov r4.z, r30.x
  mov r4.w, r31.x
  mov r5.x, r28.y
  mov r5.y, r29.y
  mov r5.z, r30.y
  mov r5.w, r31.y
  mov r6.x, r28.z
  mov r6.y, r29.z
  mov r6.z, r30.z
  mov r6.w, r31.z
  mov r7.x, r28.w
  mov r7.y, r29.w
  mov r7.z, r30.w
  mov r7.w, r31.w
  mov r0.yzw, r32.xxyz
  mov r8.xyz, r33.xyzx
  mov r9.xyz, r47.xyzx
  mov r10.xy, r34.xyxx
  mov r8.w, r46.w
  mov r9.w, r55.y
  mov r10.z, r56.w
else 
  mov r1.x, r57.x
  mov r1.y, r58.x
  mov r1.z, r59.x
  mov r1.w, r60.x
  mov r2.x, r57.y
  mov r2.y, r58.y
  mov r2.z, r59.y
  mov r2.w, r60.y
  mov r3.x, r57.z
  mov r3.y, r58.z
  mov r3.z, r59.z
  mov r3.w, r60.z
  mov r4.x, r61.x
  mov r4.y, r62.x
  mov r4.z, r63.x
  mov r4.w, r64.x
  mov r5.x, r61.y
  mov r5.y, r62.y
  mov r5.z, r63.y
  mov r5.w, r64.y
  mov r6.x, r61.z
  mov r6.y, r62.z
  mov r6.z, r63.z
  mov r6.w, r64.z
  mov r7.x, r61.w
  mov r7.y, r62.w
  mov r7.z, r63.w
  mov r7.w, r64.w
  mov r0.yzw, r65.xxyz
  mov r8.xyz, r66.xyzx
  mov r9.xyz, r69.xyzx
  mov r10.xy, r67.xyxx
  mov r8.w, r68.w
  mov r9.w, r70.y
  mov r10.z, r71.w
endif 
mul r11.xyz, v0.yzxy, v1.zxyz
mad r11.xyz, v1.yzxy, v0.zxyz, -r11.xyzx
mul r11.xyz, r11.xyzx, v1.wwww
mov r12.xyz, v5.xyzx
mov r12.w, l(1.000000)
dp4 r4.x, r12.xyzw, r4.xyzw
dp4 r4.y, r12.xyzw, r5.xyzw
dp4 r4.z, r12.xyzw, r6.xyzw
dp4 r4.w, r12.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.xyzx, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, -r4.xyzx
sample_indexable(texture2d)(float,float,float,float) r7.xyzw, v2.xyxx, t0.xyzw, s0
add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 0.000000, 1.000000, 0.000000)
mul r12.xy, v2.xyxx, cb8[8].xxxx
sample_indexable(texture2d)(float,float,float,float) r12.zw, r12.xyxx, t1.zwxy, s1
add r13.xy, r12.zwzz, r12.zwzz
mad r12.zw, r12.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r4.w, r12.zwzz, r12.zwzz
add r4.w, -r4.w, l(1.000000)
max r4.w, r4.w, l(0.000000)
sqrt r13.z, r4.w
add r13.xyz, r13.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r13.xyz, cb8[8].yyyy, r13.xyzx, l(1.000000, 1.000000, 2.000000, 0.000000)
mad r13.xyz, r13.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000), l(1.000000, 1.000000, -1.000000, 0.000000)
dp3 r4.w, r7.xyzx, r13.xyzx
mul r13.xyz, r7.zzzz, r13.xyzx
mad r7.xyz, r7.xyzx, r4.wwww, -r13.xyzx
mad r7.xyz, r7.xyzx, r37.wwww, r37.xyzx
dp3 r4.w, r7.xyzx, r7.xyzx
rsq r4.w, r4.w
mul r7.xyz, r4.wwww, r7.xyzx
mul r11.xyz, r11.xyzx, r7.yyyy
mad r11.xyz, r7.xxxx, v0.xyzx, r11.xyzx
mad r7.xyz, r7.zzzz, v1.xyzx, r11.xyzx
dp3 r4.w, r7.xyzx, r7.xyzx
rsq r4.w, r4.w
mul r11.xyz, r4.wwww, r7.xyzx
dp3 r6.w, r11.xyzx, r6.xyzx
mul r13.xyz, r6.wwww, r11.xyzx
mad r13.xyz, r13.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), -r6.xyzx
dp3 r10.w, cb8[2].xyzx, r13.xyzx
mad r13.xyz, -cb8[2].xyzx, r10.wwww, r13.xyzx
mul r14.xyz, r13.yzxy, cb8[2].zxyz
mad r14.xyz, cb8[2].yzxy, r13.zxyz, -r14.xyzx
sincos r15.x, r16.x, cb8[9].x
mul r14.xyz, r14.xyzx, r15.xxxx
mad r13.xyz, r13.xyzx, r16.xxxx, r14.xyzx
mad r13.xyz, cb8[2].xyzx, r10.wwww, r13.xyzx
dp3 r10.w, r13.xyzx, r13.xyzx
sqrt r10.w, r10.w
div r13.xyz, r13.xyzx, r10.wwww
sample_indexable(texturecube)(float,float,float,float) r13.xyz, r13.xyzx, t3.xyzw, s3
mul r13.xyz, r13.xyzx, cb8[4].xyzx
max r13.xyz, |r13.xyzx|, l(0.000001, 0.000001, 0.000001, 0.000000)
log r13.xyz, r13.xyzx
mul r13.xyz, r13.xyzx, cb8[9].yyyy
exp r13.xyz, r13.xyzx
mul r10.w, r7.w, r13.x
mad r13.xyz, r13.xyzx, r7.wwww, cb8[5].xyzx
add r7.w, cb7[0].x, cb8[9].z
mul_sat r14.xyz, r7.wwww, cb8[6].xyzx
sample_indexable(texture2d)(float,float,float,float) r7.w, r12.xyxx, t2.xyzw, s2
mad r7.w, r7.w, cb8[8].y, cb8[10].x
add r7.w, r7.w, l(-0.100000)
deriv_rtx_coarse r12.xyz, r11.xyzx
deriv_rty_coarse r15.xyz, r11.xyzx
add r12.xyz, |r12.xyzx|, |r15.xyzx|
mad r7.xyz, r7.xyzx, r4.wwww, r12.xyzx
dp3 r4.w, r7.xyzx, r7.xyzx
rsq r4.w, r4.w
mul r7.xyz, r4.wwww, r7.xyzx
dp3 r4.w, r7.xyzx, r11.xyzx
add r4.w, -r4.w, l(1.000000)
sqrt r4.w, r4.w
mul r7.x, r7.w, r7.w
mul r7.x, r7.x, r7.x
div r7.x, l(2.000000), r7.x
add r7.x, r7.x, l(-2.000000)
sqrt r7.x, r7.x
div r7.x, l(4.118930), r7.x
add r4.w, r4.w, r7.x
mul r4.w, r4.w, r4.w
div r4.w, l(16.965599), r4.w
add r4.w, r4.w, l(2.000000)
div r4.w, l(2.000000), r4.w
sqrt r4.w, r4.w
sqrt r4.w, r4.w
dp3 r7.x, v1.xyzx, r6.xyzx
add r7.x, -|r7.x|, l(1.000000)
max r7.x, |r7.x|, l(0.000001)
mul r7.y, r7.x, r7.x
mul r7.y, r7.y, r7.y
mul r7.x, r7.y, r7.x
add r7.y, -cb8[10].y, l(1.000000)
mad r7.x, r7.x, r7.y, cb8[10].y
mul_sat r7.w, r10.w, r7.x
mov_sat r10.w, cb8[9].w
mad r4.w, r4.w, r38.y, r38.x
add r12.xyz, r14.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r12.xyz, r10.wwww, r12.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r14.xyz, -r14.xyzx, r10.wwww, r14.xyzx
mad r14.xyz, r14.xyzx, r35.wwww, r35.xyzx
mad r12.xyz, r12.xyzx, r36.wwww, r36.xyzx
dp3 r4.x, r4.xyzx, r4.xyzx
sqrt r4.x, r4.x
div r4.x, r4.x, cb0[33].w
log r4.x, r4.x
max r4.x, r4.x, l(0.000000)
min r4.x, r4.x, l(6.000000)
round_pi r4.x, r4.x
mul r15.xyz, r5.xyzx, cb0[30].xyzx
mad r16.xyz, r5.xyzx, cb0[30].xyzx, -cb0[31].xyzx
max r4.y, |r16.y|, |r16.x|
max r4.y, |r16.z|, r4.y
mul r4.y, r4.y, l(4.000000)
log r4.y, r4.y
max r4.y, r4.y, l(0.000000)
round_ni r4.y, r4.y
max r4.x, r4.x, r4.y
exp r4.y, r4.x
div r16.xyz, r15.xyzx, r4.yyyy
frc r16.xyz, r16.xyzx
mul r4.x, r4.x, l(0.142857149)
mad r16.w, r16.z, l(0.142857149), r4.x
mul r4.xyz, cb0[32].xyzx, l(1.000000, 1.000000, 7.000000, 0.000000)
mul r16.xyz, r4.xyzx, r16.xywx
round_ni r16.xyz, r16.xyzx
add r16.xyz, r16.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
div r4.xyz, r16.xyzx, r4.xyzx
sample_l_indexable(texture3d)(float,float,float,float) r16.xyzw, r4.xyzx, t10.xyzw, s6, l(0.000000)
mul r16.xyzw, r16.xyzw, l(255.000000, 255.000000, 255.000000, 255.000000)
div r4.xyz, cb0[32].xyzx, r16.wwww
mul r4.xyz, r4.xyzx, r15.xyzx
frc r4.xyz, r4.xyzx
mad r4.xyz, r4.xyzx, l(0.666666687, 0.666666687, 0.666666687, 0.000000), r16.xyzx
add r4.xyz, r4.xyzx, l(0.166666672, 0.166666672, 0.166666672, 0.000000)
mul r4.xyz, r4.xyzx, cb0[33].xyzx
sample_l_indexable(texture3d)(float,float,float,float) r15.xyzw, r4.xyzx, t11.xyzw, s7, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r16.xyzw, r4.xyzx, t12.xyzw, s7, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r17.xyzw, r4.xyzx, t13.xyzw, s7, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r4.x, r4.xyzx, t14.yxzw, s7, l(0.000000)
dp3 r4.y, r15.yzwy, r15.yzwy
sqrt r4.z, r4.y
ne r10.w, r4.z, l(0.000000)
rsq r4.y, r4.y
mul r15.yzw, r4.yyyy, r15.yyzw
dp3 r4.y, r11.xyzx, r15.yzwy
mad r4.y, r4.y, l(0.500000), l(0.500000)
div r4.z, r4.z, r15.x
add r12.w, -r4.z, l(1.000000)
add r13.w, r4.z, l(1.000000)
div r12.w, r12.w, r13.w
mad r15.yz, r4.zzzz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
log r4.y, r4.y
mul r4.y, r4.y, r15.y
exp r4.y, r4.y
mul r4.z, r4.y, r15.z
mad r4.y, -r15.z, r4.y, l(1.000000)
mad r4.y, r12.w, r4.y, r4.z
mul r4.y, r4.y, r15.x
movc r15.x, r10.w, r4.y, r15.x
dp3 r4.y, r16.yzwy, r16.yzwy
sqrt r4.z, r4.y
ne r10.w, r4.z, l(0.000000)
rsq r4.y, r4.y
mul r16.yzw, r4.yyyy, r16.yyzw
dp3 r4.y, r11.xyzx, r16.yzwy
mad r4.y, r4.y, l(0.500000), l(0.500000)
div r4.z, r4.z, r16.x
add r12.w, -r4.z, l(1.000000)
add r13.w, r4.z, l(1.000000)
div r12.w, r12.w, r13.w
mad r16.yz, r4.zzzz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
log r4.y, r4.y
mul r4.y, r4.y, r16.y
exp r4.y, r4.y
mul r4.z, r4.y, r16.z
mad r4.y, -r16.z, r4.y, l(1.000000)
mad r4.y, r12.w, r4.y, r4.z
mul r4.y, r4.y, r16.x
movc r15.y, r10.w, r4.y, r16.x
dp3 r4.y, r17.yzwy, r17.yzwy
sqrt r4.z, r4.y
ne r10.w, r4.z, l(0.000000)
rsq r4.y, r4.y
mul r16.xyz, r4.yyyy, r17.yzwy
dp3 r4.y, r11.xyzx, r16.xyzx
mad r4.y, r4.y, l(0.500000), l(0.500000)
div r4.z, r4.z, r17.x
add r12.w, -r4.z, l(1.000000)
add r13.w, r4.z, l(1.000000)
div r12.w, r12.w, r13.w
mad r16.xy, r4.zzzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(1.000000, 2.000000, 0.000000, 0.000000)
log r4.y, r4.y
mul r4.y, r4.y, r16.x
exp r4.y, r4.y
mul r4.z, r4.y, r16.y
mad r4.y, -r16.y, r4.y, l(1.000000)
mad r4.y, r12.w, r4.y, r4.z
mul r4.y, r4.y, r17.x
movc r15.z, r10.w, r4.y, r17.x
max r15.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov r11.w, l(1.000000)
dp4 r16.x, r48.xyzw, r11.xyzw
dp4 r16.y, r49.xyzw, r11.xyzw
dp4 r16.z, r50.xyzw, r11.xyzw
mul r17.xyzw, r11.yzzx, r11.xyzz
dp4 r18.x, r51.xyzw, r17.xyzw
dp4 r18.y, r52.xyzw, r17.xyzw
dp4 r18.z, r53.xyzw, r17.xyzw
mul r4.y, r11.y, r11.y
mad r4.y, r11.x, r11.x, -r4.y
add r16.xyz, r16.xyzx, r18.xyzx
mad r16.xyz, r54.xyzx, r4.yyyy, r16.xyzx
max r16.xyz, r16.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r9.xyz, r9.xyzx, r16.xyzx
mad r4.xyz, r9.xyzx, r4.xxxx, r15.xyzx
add r9.xy, -r10.xyxx, v5.xyxx
if_z r0.x
  mov r9.z, cb5[3].x
  mov r10.xy, cb5[3].yzyy
  mov r10.w, cb5[1].z
  mov r15.xy, cb5[1].xyxx
  mov r11.w, cb5[2].x
else 
  mov r9.z, cb4[3].x
  mov r10.xy, cb4[3].yzyy
  mov r10.w, cb4[1].z
  mov r15.xy, cb4[1].xyxx
  mov r11.w, cb4[2].x
endif 
mad r9.z, v5.w, r9.z, r10.x
log r9.z, r9.z
mul r9.z, r10.y, r9.z
max r9.z, r9.z, l(0.000000)
ftou r9.xyz, r9.xyzx
iadd r10.x, r10.w, l(-1)
umin r9.z, r9.z, r10.x
ushr r9.xy, r9.xyxx, r11.wwww
imad r9.y, r9.z, r15.y, r9.y
imad r9.x, r9.y, r15.x, r9.x
add r9.y, r6.w, r6.w
mad r6.xyz, r9.yyyy, r11.xyzx, -r6.xyzx
mov_sat r6.w, r6.w
if_z r0.x
  iadd r9.y, r9.x, cb5[0].w
  ishl r9.z, r9.y, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r9.z, r9.zzzz, t15.yzxw
  bfi r9.y, l(31), l(1), r9.y, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r9.y, r9.yyyy, t15.yxzw
else 
  iadd r9.x, r9.x, cb4[0].w
  ishl r10.x, r9.x, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r9.z, r10.xxxx, t17.yzxw
  bfi r9.x, l(31), l(1), r9.x, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r9.y, r9.xxxx, t17.yxzw
endif 
log r9.x, r4.w
mad r10.x, -r9.x, l(1.200000), l(1.000000)
add r10.y, r55.z, l(-1.000000)
add r10.y, -r10.x, r10.y
mad r10.w, r9.x, l(2.000000), cb0[37].y
mov r15.xyz, l(0,0,0,0)
mov r11.w, l(1.000000)
mov r12.w, l(0)
mov r13.w, l(1.000000)
mov r14.w, l(0)
loop 
  uge r15.w, r14.w, r9.z
  breakc_nz r15.w
  lt r15.w, r11.w, l(0.001000)
  if_nz r15.w
    break 
  endif 
  if_z r0.x
    iadd r15.w, r9.y, r14.w
    ld_indexable(buffer)(uint,uint,uint,uint) r15.w, r15.wwww, t16.yzwx
  else 
    iadd r16.x, r9.y, r14.w
    ld_indexable(buffer)(uint,uint,uint,uint) r15.w, r16.xxxx, t18.yzwx
  endif 
  add r16.xyz, r5.xyzx, -cb6[r15.w + 0].xyzx
  dp3 r16.w, r16.xyzx, r16.xyzx
  sqrt r17.x, r16.w
  lt r17.y, r17.x, cb6[r15.w + 0].w
  if_nz r17.y
    lt r17.y, l(0.000000), cb6[r15.w + 341].z
    if_nz r17.y
      ishl r17.y, r15.w, l(2)
      mul r18.xyz, r5.yyyy, cb6[r17.y + 1024].xyzx
      mad r18.xyz, r5.xxxx, cb6[r17.y + 1023].xyzx, r18.xyzx
      mad r18.xyz, r5.zzzz, cb6[r17.y + 1025].xyzx, r18.xyzx
      add r18.xyz, r18.xyzx, cb6[r17.y + 1026].xyzx
      mul r19.xyz, r6.yyyy, cb6[r17.y + 1024].xyzx
      mad r19.xyz, r6.xxxx, cb6[r17.y + 1023].xyzx, r19.xyzx
      mad r17.yzw, r6.zzzz, cb6[r17.y + 1025].xxyz, r19.xxyz
      rcp r17.yzw, r17.yyzw
      mad r19.xyz, -r18.xyzx, r17.yzwy, -r17.yzwy
      mad r17.yzw, -r18.xxyz, r17.yyzw, r17.yyzw
      max r17.yzw, r17.yyzw, r19.xxyz
      min r17.z, r17.w, r17.z
      min r17.y, r17.z, r17.y
      mad r17.yzw, r17.yyyy, r6.xxyz, r5.xxyz
      add r19.xyz, cb6[r15.w + 0].xyzx, cb6[r15.w + 682].xyzx
      add r19.xyz, r17.yzwy, -r19.xyzx
      mul r17.y, l(0.700000), cb6[r15.w + 2387].w
      mad r20.xyz, -cb6[r15.w + 2387].wwww, l(0.500000, 0.500000, 0.500000, 0.000000), cb6[r15.w + 2387].xyzx
      mul r21.xyz, r18.xyzx, cb6[r15.w + 2387].xyzx
      lt r22.xyz, r21.xyzx, -r20.xyzx
      mad r23.xyz, r18.xyzx, cb6[r15.w + 2387].xyzx, r20.xyzx
      mov r23.xyz, |r23.xyzx|
      and r22.xyz, r22.xyzx, r23.xyzx
      lt r21.xyz, r20.xyzx, r21.xyzx
      mad r18.xyz, r18.xyzx, cb6[r15.w + 2387].xyzx, -r20.xyzx
      mov r18.xyz, |r18.xyzx|
      and r18.xyz, r18.xyzx, r21.xyzx
      dp3 r17.z, r22.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      dp3 r17.w, r18.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      add r17.z, r17.w, r17.z
      div r17.y, l(1.000000, 1.000000, 1.000000, 1.000000), r17.y
      mul_sat r17.y, r17.y, r17.z
      mad r17.z, r17.y, l(-2.000000), l(3.000000)
      mul r17.y, r17.y, r17.y
      mad r17.y, -r17.z, r17.y, l(1.000000)
    else 
      div_sat r17.x, r17.x, cb6[r15.w + 0].w
      dp3 r17.z, r6.xyzx, r16.xyzx
      mad r16.w, -cb6[r15.w + 0].w, cb6[r15.w + 0].w, r16.w
      mad r16.w, r17.z, r17.z, -r16.w
      ge r17.w, r16.w, l(0.000000)
      sqrt r16.w, r16.w
      add r16.w, -r17.z, r16.w
      mad r16.xyz, r16.wwww, r6.xyzx, r16.xyzx
      add r16.xyz, r16.xyzx, -cb6[r15.w + 682].xyzx
      mad r16.w, r17.x, l(2.500000), l(-1.500000)
      max r16.w, r16.w, l(0.000000)
      mul r17.x, r16.w, r16.w
      mad r16.w, -r16.w, l(2.000000), l(3.000000)
      mad r17.y, -r17.x, r16.w, l(1.000000)
      movc r19.xyz, r17.wwww, r16.xyzx, r6.xyzx
    endif 
    ge r16.x, cb6[r15.w + 341].y, l(0.000000)
    if_nz r16.x
      mov r19.w, cb6[r15.w + 341].y
      sample_l_indexable(texturecubearray)(float,float,float,float) r16.xyzw, r19.xyzw, t19.xyzw, s8, r10.y
    else 
      add r17.x, l(-1.000000), -cb6[r15.w + 341].y
      ftou r17.x, r17.x
      utof r19.w, r17.x
      sample_l_indexable(texturecubearray)(float,float,float,float) r16.xyzw, r19.xyzw, t20.xyzw, s8, r10.w
    endif 
    mul r16.xyz, r16.xyzx, cb6[r15.w + 341].xxxx
    mul r16.xyz, r17.yyyy, r16.xyzx
    mad r15.xyz, r16.xyzx, r11.wwww, r15.xyzx
    mad r16.x, -r16.w, r17.y, l(1.000000)
    mul r11.w, r11.w, r16.x
    mul r15.w, r17.y, cb6[r15.w + 341].x
    mad r12.w, r15.w, r13.w, r12.w
    add r15.w, -r17.y, l(1.000000)
    mul r13.w, r13.w, r15.w
  endif 
  iadd r14.w, r14.w, l(1)
endloop 
ine r0.x, cb0[40].x, l(0)
ge r9.y, r11.w, l(0.001000)
and r0.x, r0.x, r9.y
if_nz r0.x
  mad r0.x, -r9.x, l(1.150000), l(3.000000)
  add r9.x, cb0[39].w, l(-1.000000)
  add r0.x, -r0.x, r9.x
  sample_l_indexable(texturecube)(float,float,float,float) r9.xyz, r6.xyzx, t21.xyzw, s9, r0.x
  mad r9.xyz, r9.xyzx, cb0[38].xyzx, -r15.xyzx
  mad r15.xyz, r11.wwww, r9.xyzx, r15.xyzx
endif 
lt r0.x, l(0.000000), cb0[9].y
if_nz r0.x
  add r0.x, -r10.x, cb0[9].x
  add r0.x, r0.x, l(-1.000000)
  sample_l_indexable(texturecube)(float,float,float,float) r6.xyz, r6.xyzx, t8.xyzw, s5, r0.x
  mul r6.xyz, r6.xyzx, r47.xyzx
  mul r0.x, r12.w, cb0[38].w
  mul r6.xyz, r0.xxxx, r6.xyzx
  lt r0.x, cb0[9].z, l(1.000000)
  mad r9.xyz, r11.wwww, r6.xyzx, r15.xyzx
  movc r6.xyz, r0.xxxx, l(0,0,0,0), r6.xyzx
  movc r15.xyz, r0.xxxx, r9.xyzx, r15.xyzx
else 
  mov r6.xyz, l(0,0,0,0)
endif 
mad_sat r0.x, r4.w, r56.x, r56.y
mad r9.x, r0.x, l(-2.000000), l(3.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r9.x
min r9.x, r56.z, l(0.000000)
add r9.x, r9.x, l(-1.000000)
mad r0.x, r0.x, r9.x, l(1.000000)
mul r6.xyz, r6.xyzx, r11.wwww
mad r6.xyz, r15.xyzx, r0.xxxx, r6.xyzx
mul r6.xyz, r6.xyzx, r45.xyzx
mad r6.xyz, r8.wwww, -r6.xyzx, r6.xyzx
mad r15.xyzw, r4.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.x, r15.x, r15.x
mul r6.w, r6.w, l(-9.280000)
exp r6.w, r6.w
min r0.x, r0.x, r6.w
mad r0.x, r0.x, r15.x, r15.y
mad r9.xy, r0.xxxx, l(-1.040000, 1.040000, 0.000000, 0.000000), r15.zwzz
mul r0.x, r12.y, l(50.000000)
mov_sat r0.x, r0.x
mul r0.x, r0.x, r9.y
mad r9.xyz, r12.xyzx, r9.xxxx, r0.xxxx
dp3 r0.x, cb0[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
lt r0.x, l(0.000100), |r0.x|
if_nz r0.x
  mov r5.w, l(-1.000000)
  dp4 r0.x, cb0[11].xyzw, r5.xyzw
  mad_sat r0.x, |r0.x|, cb0[18].x, cb0[18].y
  add r0.x, -r0.x, l(1.000000)
  add r10.xyw, r5.xyxz, -cb0[12].xyxz
  dp3 r5.w, r10.xywx, cb0[13].xyzx
  add r5.w, -|r5.w|, cb0[13].w
  mul_sat r5.w, r5.w, cb0[18].x
  dp3 r6.w, r10.xywx, cb0[14].xyzx
  add r6.w, -|r6.w|, cb0[14].w
  mul_sat r6.w, r6.w, cb0[18].x
  mul r5.w, r5.w, r6.w
  mul r0.x, r0.x, r5.w
  lt r5.w, l(0.000000), r0.x
  if_nz r5.w
    add r0.yzw, -r0.yyzw, r5.xxyz
    dp3 r5.w, r0.yzwy, r0.yzwy
    rsq r5.w, r5.w
    mul r0.yzw, r0.yyzw, r5.wwww
    dp3 r5.w, r0.yzwy, -cb0[11].xyzx
    add r5.w, r5.w, r5.w
    mad r0.yzw, cb0[11].xxyz, r5.wwww, r0.yyzw
    mul r10.xyw, r11.yyyy, cb0[16].xyxz
    mad r10.xyw, r11.xxxx, cb0[15].xyxz, r10.xyxw
    mad r10.xyw, r11.zzzz, cb0[17].xyxz, r10.xyxw
    dp3 r5.w, r0.yzwy, r10.xywx
    add r5.w, r5.w, r5.w
    mad r0.yzw, r10.xxyw, -r5.wwww, r0.yyzw
    mad r0.yzw, r0.yyzw, cb0[18].zzzz, r5.xxyz
    add r8.xyz, r8.xyzx, r0.yzwy
    mov r8.w, l(1.000000)
    dp4 r0.y, r8.xyzw, r1.xyzw
    dp4 r0.z, r8.xyzw, r2.xyzw
    dp4 r0.w, r8.xyzw, r3.xyzw
    ishl r1.x, r10.z, l(2)
    mul r1.yzw, r0.zzzz, cb0[r1.x + 21].xxyw
    mad r1.yzw, r0.yyyy, cb0[r1.x + 20].xxyw, r1.yyzw
    mad r0.yzw, r0.wwww, cb0[r1.x + 22].xxyw, r1.yyzw
    add r0.yzw, r0.yyzw, cb0[r1.x + 23].xxyw
    div r0.yz, r0.yyzy, r0.wwww
    mad r1.yz, r0.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    if_nz cb0[28].x
      mul r0.y, r9.w, l(0.500000)
      mad r0.z, -r9.w, l(0.500000), l(1.000000)
      mul r0.z, r0.z, icb[r10.z + 0].x
      mad r0.y, r1.y, r0.y, r0.z
      max r0.y, r0.y, icb[r10.z + 0].y
      min r1.x, r0.y, icb[r10.z + 0].z
    else 
      mov r1.x, r1.y
    endif 
    dp3 r0.y, cb0[11].xyzx, r11.xyzx
    mad_sat r0.y, r0.y, cb0[19].x, cb0[19].y
    add r0.z, r4.w, l(-0.200000)
    mul_sat r0.z, r0.z, l(10.000000)
    add r0.z, -r0.z, l(1.000000)
    mul r0.x, r0.y, r0.x
    mul r0.x, r0.z, r0.x
    sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xzxx, t9.xyzw, s8, l(0.000000)
    mul r0.x, r0.x, r1.w
    mul r0.yzw, r0.xxxx, r1.xxyz
  else 
    mov r0.xyzw, l(0,0,0,0)
  endif 
  add r0.x, -r0.x, l(1.000000)
  mad r6.xyz, r0.xxxx, r6.xyzx, r0.yzwy
endif 
add r0.xyz, r5.xyzx, -r41.xyzx
mul r1.xyz, r0.xyzx, r43.xyzx
add r2.xyz, r5.xyzx, -r42.xyzx
mul r2.xyz, r2.xyzx, r44.xyzx
mad r0.xyz, r0.xyzx, r43.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r0.xyz, -|r0.xyzx|, l(0.500000, 0.500000, 0.500000, 0.000000)
mul_sat r0.xyz, r0.xyzx, l(6.000000, 6.000000, 6.000000, 0.000000)
mul r0.x, r0.y, r0.x
mul r0.x, r0.z, r0.x
sample_l_indexable(texture3d)(float,float,float,float) r0.yzw, r1.xyzx, t4.wxyz, s4, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r3.xyz, r2.xyzx, t5.xyzw, s4, l(0.000000)
add r0.yzw, r0.yyzw, -r3.xxyz
mad r0.yzw, r0.xxxx, r0.yyzw, r3.xxyz
sample_l_indexable(texture3d)(float,float,float,float) r1.xyz, r1.xyzx, t6.xyzw, s4, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r2.xyz, r2.xyzx, t7.xyzw, s4, l(0.000000)
add r1.xyz, r1.xyzx, -r2.xyzx
mad r1.xyz, r0.xxxx, r1.xyzx, r2.xyzx
dp3 r0.x, r0.yzwy, l(0.300000, 0.590000, 0.110000, 0.000000)
div r2.xyz, r0.yzwy, r0.xxxx
mul r3.yzw, r1.xxyz, r2.xxxx
mul r8.yzw, r1.xxyz, r2.yyyy
mul r1.yzw, r1.xxyz, r2.zzzz
mul r2.yzw, r11.yyzx, l(0.000000, -1.02332771, 1.02332771, -1.02332771)
mov r3.x, r0.y
mov r2.x, l(0.886227548)
dp4 r3.x, r3.xyzw, r2.xyzw
mov r8.x, r0.z
dp4 r3.y, r8.xyzw, r2.xyzw
mov r1.x, r0.w
dp4 r3.z, r1.xyzw, r2.xyzw
max r0.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.xyz, r0.xyzx, r14.xyzx
mad r0.xyz, r6.xyzx, r9.xyzx, r0.xyzx
mad r1.xyz, r12.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r14.xyzx
add r1.xyz, -r0.xyzx, r1.xyzx
mad r0.xyz, r40.xxxx, r1.xyzx, r0.xyzx
max r7.xyz, r13.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), r39.x
if_nz r0.w
  add r1.xyz, r5.xyzx, -cb3[8].xyzx
  add r2.xyz, cb3[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r1.xyz, r2.xyzx, |r1.xyzx|
  or r0.w, r1.y, r1.x
  or r0.w, r1.z, r0.w
  dp3 r1.x, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.x, r1.x, l(0.002000)
  frc r1.x, r1.x
  lt r1.x, l(0.500000), r1.x
  movc r1.yzw, r1.xxxx, l(0,0,1.000000,1.000000), l(0,1.000000,1.000000,0)
  mov r1.x, l(1.000000)
  movc r7.xyzw, r0.wwww, r1.yzwx, r7.xyzw
  mov o0.w, r7.w
else 
  mov o0.w, r7.w
endif 
mad r0.xyz, r4.xyzx, r14.xyzx, r0.xyzx
add r0.xyz, r7.xyzx, r0.xyzx
mad o0.xyz, r0.xyzx, v4.wwww, v4.xyzx
ret 
// Approximately 0 instruction slots used