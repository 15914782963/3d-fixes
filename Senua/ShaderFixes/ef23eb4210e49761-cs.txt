// asmtool.py --remap-cb 1 101 -i -f --only-autofixed --disable-driver-stereo-cb 12 ef23eb4210e49761-cs.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:42:54 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_constantbuffer cb3[1023], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_buffer (uint,uint,uint,uint) t9
dcl_resource_buffer (uint,uint,uint,uint) t10
dcl_resource_texturecubearray (float,float,float,float) t11
dcl_resource_texturecubearray (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texturecube (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t16
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_input vThreadID.xy
dcl_temps 37
dcl_thread_group 8, 8, 1
dcl_resource_structured t101, 2048

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 -i -f --only-autofixed --disable-driver-stereo-cb 12 ef23eb4210e49761-cs.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(640), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(656), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(672), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(688), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(848), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(864), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(896), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(1968), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(0), l(2032), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(1), l(208), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(1), l(272), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(1), l(288), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r26.xyzw, l(1), l(448), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r27.xyzw, l(1), l(464), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r28.xyzw, l(1), l(480), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r29.xyzw, l(1), l(496), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r30.xyzw, l(1), l(512), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r31.xyzw, l(1), l(528), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r32.xyzw, l(1), l(544), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r33.xyzw, l(1), l(560), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r34.xyzw, l(1), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r35.xyzw, l(1), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r36.xyzw, l(1), l(768), t101.xyzw

iadd r0.xy, vThreadID.xyxx, cb0[5].xyxx
utof r1.xy, vThreadID.xyxx
add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
iadd r1.zw, -cb0[5].xxxy, cb0[5].zzzw
utof r1.zw, r1.zzzw
div r1.xy, r1.xyxx, r1.zwzz
mad r1.xy, r1.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyz, r0.xyww, t0.xyzw
ld_indexable(texture2d)(float,float,float,float) r3.xyzw, r0.xyww, t1.xzyw
ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r0.xyww, t2.xyzw
mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.z, r2.xyzx, r2.xyzx
rsq r1.z, r1.z
mul r5.xyz, r1.zzzz, r2.xyzx
mul r1.w, r3.w, l(255.000000)
round_ne r1.w, r1.w
ftou r1.w, r1.w
and r1.w, r1.w, l(15)
mad r2.w, r4.w, l(16.000000), l(-8.000000)
exp r2.w, r2.w
add r2.w, r2.w, l(-0.00390625000)
lt r6.xy, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[1].yzyy
and r3.w, r6.y, r6.x
if_nz r3.w
  mad r6.yz, r1.xxyx, r19.xxyx, r19.wwzw
  sample_l_indexable(texture2d)(float,float,float,float) r6.yzw, r6.yzyy, t8.wxyz, s4, l(0.000000)
  dp3 r3.w, r6.yzwy, r6.yzwy
  sqrt r3.w, r3.w
  mov r5.w, l(1.000000)
  dp4 r7.x, r27.xyzw, r5.xyzw
  dp4 r7.y, r28.xyzw, r5.xyzw
  dp4 r7.z, r29.xyzw, r5.xyzw
  mul r8.xyzw, r5.yzzx, r5.xyzz
  dp4 r9.x, r30.xyzw, r8.xyzw
  dp4 r9.y, r31.xyzw, r8.xyzw
  dp4 r9.z, r32.xyzw, r8.xyzw
  mul r4.w, r5.y, r5.y
  mad r4.w, r5.x, r5.x, -r4.w
  add r6.yzw, r7.xxyz, r9.xxyz
  mad r6.yzw, r33.xxyz, r4.wwww, r6.yyzw
  max r6.yzw, r6.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  mul r6.yzw, r6.yyzw, r26.xxyz
  dp3 r4.w, r6.yzwy, l(0.300000, 0.590000, 0.110000, 0.000000)
  mad r2.w, r4.w, r3.w, r2.w
endif 
ine r6.yz, r1.wwww, l(0, 0, 7, 0)
and r3.w, r6.z, r6.y
if_nz r3.w
  ld_indexable(texture2d)(float,float,float,float) r3.w, r0.xyww, t3.yzwx
  mad r4.w, r3.w, r18.x, r18.y
  mad r3.w, r3.w, r18.z, -r18.w
  div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  add r3.w, r3.w, r4.w
  ftou r4.w, r23.x
  iadd r5.w, r0.y, r0.x
  iadd r4.w, r4.w, r5.w
  and r4.w, r4.w, l(1)
  mul r5.w, r3.z, l(0.080000)
  mad r4.xyz, -r3.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r4.xyzx
  mad r4.xyz, r3.xxxx, r4.xyzx, r5.wwww
  ieq r1.w, r1.w, l(5)
  lt r3.z, l(0.000000), r24.x
  lt r5.w, l(0.000000), r36.w
  and r3.z, r3.z, r5.w
  movc r4.w, r4.w, l(0), l(1.000000)
  mul r6.yzw, r4.wwww, r4.xxyz
  movc r6.yzw, r3.zzzz, r6.yyzw, r4.xxyz
  movc r4.xyz, r1.wwww, r6.yzwy, r4.xyzx
  mad r4.xyz, r4.xyzx, r22.wwww, r22.xyzx
  utof r6.yz, r0.xxyx
  add r6.yz, r6.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  mul r6.yz, r6.yyzy, r21.zzwz
  sample_l_indexable(texture2d)(float,float,float,float) r1.w, r6.yzyy, t4.yzwx, s0, l(0.000000)
  mul r1.xy, r1.xyxx, r3.wwww
  mul r7.xyzw, r1.yyyy, r15.xyzw
  mad r7.xyzw, r1.xxxx, r14.xyzw, r7.xyzw
  mad r7.xyzw, r3.wwww, r16.xyzw, r7.xyzw
  add r7.xyzw, r7.xyzw, r17.xyzw
  div r6.yzw, r7.xxyz, r7.wwww
  add r7.xyz, r6.yzwy, -r20.xyzx
  dp3 r1.x, r7.xyzx, r7.xyzx
  rsq r1.x, r1.x
  mul r7.xyz, r1.xxxx, r7.xyzx
  dp3 r3.x, -r7.xyzx, r5.xyzx
  add r1.x, r3.x, r3.x
  mad r7.xyz, r1.xxxx, r5.xyzx, r7.xyzx
  mov_sat r3.x, r3.x
  mul r1.x, r3.y, r3.y
  mad r1.y, -r3.y, r3.y, l(1.000000)
  sqrt r3.z, r1.y
  mad r3.z, r3.y, r3.y, r3.z
  mul r1.y, r1.y, r3.z
  mad r2.xyz, -r2.xyzx, r1.zzzz, r7.xyzx
  mad r2.xyz, r1.yyyy, r2.xyzx, r5.xyzx
  ld_indexable(texture2d)(float,float,float,float) r5.xyzw, r0.xyww, t15.xyzw
  add r1.y, -r5.w, l(1.000000)
  add r1.z, r1.w, r3.x
  log r1.z, r1.z
  mul r1.x, r1.z, r1.x
  exp r1.x, r1.x
  add r1.x, r1.w, r1.x
  add_sat r1.x, r1.x, l(-1.000000)
  mul r1.x, r1.x, r1.y
  mad r1.y, r3.w, cb2[3].x, cb2[3].y
  log r1.y, r1.y
  mul r1.y, r1.y, cb2[3].z
  max r1.y, r1.y, l(0.000000)
  ftou r1.y, r1.y
  iadd r1.z, cb2[1].z, l(-1)
  umin r1.y, r1.z, r1.y
  ushr r1.zw, vThreadID.xxxy, cb2[2].xxxx
  imad r1.y, r1.y, cb2[1].y, r1.w
  imad r1.y, r1.y, cb2[1].x, r1.z
  iadd r1.y, r1.y, cb2[0].w
  ishl r1.z, r1.y, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r1.z, r1.zzzz, t9.yzxw
  bfi r1.y, l(31), l(1), r1.y, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r1.y, r1.yyyy, t9.yxzw
  log r1.w, r3.y
  mad r3.z, -r1.w, l(1.200000), l(1.000000)
  add r3.w, r34.z, l(-1.000000)
  add r3.w, -r3.z, r3.w
  mad r4.w, r1.w, l(2.000000), cb0[9].y
  mov r7.yzw, l(0,0,0,0)
  mov r5.w, r1.x
  mov r8.xyzw, l(0,0,0,0)
  mov r9.xyzw, l(1.000000,0,1.000000,0)
  loop 
    uge r10.x, r9.w, r1.z
    breakc_nz r10.x
    lt r10.x, r5.w, l(0.001000)
    if_nz r10.x
      break 
    endif 
    iadd r10.x, r1.y, r9.w
    ld_indexable(buffer)(uint,uint,uint,uint) r10.x, r10.xxxx, t10.xyzw
    add r10.yzw, r6.yyzw, -cb3[r10.x + 0].xxyz
    dp3 r11.x, r10.yzwy, r10.yzwy
    sqrt r11.y, r11.x
    lt r11.z, r11.y, cb3[r10.x + 0].w
    if_nz r11.z
      div_sat r11.y, r11.y, cb3[r10.x + 0].w
      dp3 r11.z, r2.xyzx, r10.yzwy
      mad r11.x, -cb3[r10.x + 0].w, cb3[r10.x + 0].w, r11.x
      mad r11.x, r11.z, r11.z, -r11.x
      ge r11.w, r11.x, l(0.000000)
      sqrt r11.x, r11.x
      add r11.x, -r11.z, r11.x
      mad r10.yzw, r11.xxxx, r2.xxyz, r10.yyzw
      add r10.yzw, r10.yyzw, -cb3[r10.x + 682].xxyz
      mad r11.x, r11.y, l(2.500000), l(-1.500000)
      max r11.x, r11.x, l(0.000000)
      mul r11.y, r11.x, r11.x
      mad r11.x, -r11.x, l(2.000000), l(3.000000)
      mad r11.x, -r11.y, r11.x, l(1.000000)
      movc r12.xyz, r11.wwww, r10.yzwy, r2.xyzx
      ge r10.y, cb3[r10.x + 341].y, l(0.000000)
      if_nz r10.y
        mov r12.w, cb3[r10.x + 341].y
        sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyzw, r12.xyzw, t11.xyzw, s5, r3.w
        mov r10.y, cb3[r10.x + 682].w
      else 
        add r10.z, l(-1.000000), -cb3[r10.x + 341].y
        ftou r7.x, r10.z
        utof r12.w, r7.x
        sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyzw, r12.xyzw, t12.xyzw, s5, r4.w
        ld_indexable(texture2d)(float,float,float,float) r10.y, r7.xyzw, t13.yxzw
      endif 
      mul r11.yzw, r13.xxyz, cb3[r10.x + 341].xxxx
      mul r11.yzw, r11.xxxx, r11.yyzw
      mad r8.xyz, r11.yzwy, r5.wwww, r8.xyzx
      mad r7.x, -r13.w, r11.x, l(1.000000)
      mul r5.w, r5.w, r7.x
      mul r7.x, r11.x, r10.y
      mad r8.w, r7.x, r9.x, r8.w
      add r7.x, -r11.x, l(1.000000)
      mul r10.x, r11.x, cb3[r10.x + 341].x
      mad r9.y, r10.x, r9.z, r9.y
      mul r9.xz, r7.xxxx, r9.xxzx
    endif 
    iadd r9.w, r9.w, l(1)
  endloop 
  ine r1.x, cb0[12].x, l(0)
  ge r1.y, r5.w, l(0.001000)
  and r1.x, r1.y, r1.x
  if_nz r1.x
    mad r1.x, -r1.w, l(1.150000), l(3.000000)
    add r1.y, cb0[11].w, l(-1.000000)
    add r1.x, -r1.x, r1.y
    sample_l_indexable(texturecube)(float,float,float,float) r1.xyz, r2.xyzx, t14.xyzw, s6, r1.x
    sample_l_indexable(texturecube)(float,float,float,float) r6.yzw, r2.xyzx, t14.wxyz, s6, cb0[11].y
    dp3 r1.w, r6.yzwy, l(0.300000, 0.590000, 0.110000, 0.000000)
    add r1.w, -r8.w, r1.w
    mad r8.w, r5.w, r1.w, r8.w
    mad r1.xyz, r1.xyzx, cb0[10].xyzx, -r8.xyzx
    mad r8.xyz, r5.wwww, r1.xyzx, r8.xyzx
  endif 
  if_nz r6.x
    add r1.x, -r3.z, cb0[1].x
    add r1.x, r1.x, l(-1.000000)
    sample_l_indexable(texturecube)(float,float,float,float) r1.yzw, r2.xyzx, t6.wxyz, s2, r1.x
    mul r1.yzw, r1.yyzw, r26.xxyz
    lt r3.z, l(0.000000), cb0[1].w
    if_nz r3.z
      sample_l_indexable(texturecube)(float,float,float,float) r2.xyz, r2.xyzx, t7.xyzw, s3, r1.x
      mad r2.xyz, r2.xyzx, r26.xyzx, -r1.yzwy
      mad r1.yzw, cb0[1].wwww, r2.xxyz, r1.yyzw
    endif 
    mul r1.x, r9.y, cb0[10].w
    mul r1.yzw, r1.xxxx, r1.yyzw
    mul r1.x, r1.x, cb0[2].x
    lt r2.x, cb0[1].z, l(1.000000)
    mad r6.xyz, r5.wwww, r1.yzwy, r8.xyzx
    mad r6.w, r1.x, r9.x, r8.w
    movc r1.xyz, r2.xxxx, l(0,0,0,0), r1.yzwy
    movc r8.xyzw, r2.xxxx, r6.xyzw, r8.xyzw
  else 
    mov r1.xyz, l(0,0,0,0)
  endif 
  mad_sat r1.w, r3.y, r35.x, r35.y
  mad r2.x, r1.w, l(-2.000000), l(3.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r2.x
  max r2.x, r8.w, l(0.000100)
  div r2.x, r2.w, r2.x
  min r2.x, r2.x, r35.z
  add r2.x, r2.x, l(-1.000000)
  mad r1.w, r1.w, r2.x, l(1.000000)
  mul r1.xyz, r1.xyzx, r5.wwww
  mad r1.xyz, r8.xyzx, r1.wwww, r1.xyzx
  mad r1.xyz, r1.xyzx, r25.xyzx, r5.xyzx
  sample_l_indexable(texture2d)(float,float,float,float) r2.xy, r3.xyxx, t5.xyzw, s1, l(0.000000)
  mul_sat r1.w, r4.y, l(50.000000)
  mul r1.w, r2.y, r1.w
  mad r2.xyz, r4.xyzx, r2.xxxx, r1.wwww
  mul r1.xyz, r1.xyzx, r2.xyzx
else 
  mov r1.xyz, l(0,0,0,0)
endif 
ult r2.xy, vThreadID.xyxx, cb0[5].zwzz
and r1.w, r2.y, r2.x
if_nz r1.w
  min r1.xyz, -r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mov r1.xyz, -r1.xyzx
  ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r0.xyzw, t16.xyzw
  mov r1.w, l(0)
  add r1.xyzw, r1.xyzw, r2.xyzw
  store_uav_typed u0.xyzw, r0.xyyy, r1.xyzw
endif 
ret 
// Approximately 0 instruction slots used