// asmtool.py --remap-cb 1 101 -i --only-autofixed --disable-driver-stereo-cb 12 feee3094e02b7091-vs.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 14:20:41 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
// SV_InstanceID            0   x           1   INSTID    uint   x   
// ATTRIBUTE                0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 4   xyz         1     NONE   float   xyz 
// TEXCOORD                 5   xyzw        2     NONE   float   xyzw
// PARTICLE_LIGHTING_OFFSET     0   xyz         3     NONE   float   xyz 
// TANGENTX                 0   xyzw        4     NONE   float   xyzw
// TANGENTZ                 0   xyzw        5     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           6     NONE    uint   x   
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_POSITION              0   xyzw        8      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb1[140], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_constantbuffer cb3[4], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_sgv v0.x, vertex_id
dcl_input_sgv v1.x, instance_id
dcl_input v2.xy
dcl_output o0.xyzw
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_output o3.xyz
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.x
dcl_output o7.xyzw
dcl_output_siv o8.xyzw, position
dcl_temps 24
dcl_resource_structured t101, 2048
// Disables driver stereo correction:
dcl_constantbuffer cb12[4], immediateIndexed

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 -i --only-autofixed --disable-driver-stereo-cb 12 feee3094e02b7091-vs.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(16), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(48), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(784), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(800), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(816), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(832), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(912), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(1), l(176), t101.xyzw

ishl r0.x, v1.x, l(4)
ushr r0.y, v0.x, l(2)
iadd r0.x, r0.y, r0.x
iadd r0.x, r0.x, cb0[3].x
ld_indexable(buffer)(float,float,float,float) r0.xy, r0.xxxx, t0.xyzw
sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyxx, t1.xyzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r0.xyxx, t2.xyzw, s1, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r3.xyzw, r0.xyxx, t3.xyzw, s2, l(0.000000)
ge r0.z, l(1.000000), r1.w
and r0.z, r0.z, l(0x3f800000)
mul r4.xyz, r2.yyyy, cb2[1].xyzx
mad r2.xyw, r2.xxxx, cb2[0].xyxz, r4.xyxz
mad r2.xyz, r2.zzzz, cb2[2].xyzx, r2.xywx
dp3 r0.w, r2.xyzx, r2.xyzx
sqrt r0.w, r0.w
mad r4.xy, cb4[0].zwzz, r1.wwww, cb4[0].xyxx
sample_l_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyxx, t4.xyzw, s3, l(0.000000)
mad r4.xyzw, r4.xyzw, cb4[1].xyzw, cb4[2].xyzw
mul o2.xyzw, r4.xyzw, cb3[3].xyzw
mad r4.xy, cb4[3].zwzz, r1.wwww, cb4[3].xyxx
sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t4.xyzw, s3, l(0.000000)
mad r4.xyz, r4.xyzx, cb4[4].xyzx, cb4[5].xyzx
lt r5.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
movc r5.zw, r5.xxxy, l(0,0,0,0), l(0,0,-0.500000,-0.500000)
add r3.xy, r3.xyxx, r5.zwzz
add r3.xy, r3.xyxx, r3.xyxx
mul r4.xy, r4.xyxx, cb3[0].xyxx
mul r5.zw, r0.wwww, cb4[6].xxxy
max r5.zw, r5.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
min r5.zw, r5.zzzw, cb4[6].zzzw
mul r3.xy, r3.xyxx, r4.xyxx
mul r3.xy, r5.zwzz, r3.xyxx
mul r0.zw, r0.zzzz, r3.xxxy
add r3.xy, -v2.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
movc r3.xy, r5.xyxx, r3.xyxx, v2.xyxx
frc r2.w, r4.z
add r4.x, -r2.w, r4.z
div r4.y, r4.x, cb4[7].x
ge r4.z, r4.y, -r4.y
frc r4.y, |r4.y|
movc r4.y, r4.z, r4.y, -r4.y
mul r5.x, r4.y, cb4[7].x
mul r4.x, r4.x, cb4[7].z
round_ni r5.y, r4.x
add r3.xy, r3.xyxx, r5.xyxx
mul o0.xy, r3.xyxx, cb4[7].zwzz
mul r3.x, r3.w, cb4[10].x
mad r3.x, r3.x, r1.w, r3.z
mul r3.yzw, r1.yyyy, cb2[1].xxyz
mad r3.yzw, cb2[0].xxyz, r1.xxxx, r3.yyzw
mad r1.xyz, cb2[2].xyzx, r1.zzzz, r3.yzwy
add r3.yzw, r22.xxyz, cb2[3].xxyz
add r1.xyz, r1.xyzx, r3.yzwy
add r3.yzw, -r18.xxyz, r20.xxyz
mad r3.yzw, cb4[9].wwww, r3.yyzw, r18.xxyz
add r4.xyz, -r17.xyzx, r19.xyzx
mad r4.xyz, cb4[9].wwww, r4.xyzx, r17.xyzx
add r5.xyz, -r3.yzwy, cb3[1].xyzx
mad r3.yzw, cb3[1].wwww, r5.xxyz, r3.yyzw
add r5.xyz, r4.xyzx, cb3[2].xyzx
mad r4.xyz, cb3[2].wwww, r5.xyzx, -r4.xyzx
add r5.xyz, -r1.zxyz, r21.zxyz
dp3 r4.w, r5.xyzx, r5.xyzx
max r5.w, r4.w, l(0.010000)
sqrt r5.w, r5.w
div r5.xyz, r5.xyzx, r5.wwww
lt r5.w, l(0.000000), cb4[9].x
if_nz r5.w
  mad_sat r4.w, r4.w, cb4[9].y, -cb4[9].z
  mul r6.xyz, r5.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
  mad r6.xyz, r5.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r6.xyzx
  dp2 r5.w, r6.xyxx, r6.xyxx
  max r5.w, r5.w, l(0.010000)
  sqrt r5.w, r5.w
  div r6.xyz, r6.xyzx, r5.wwww
  mul r7.xyz, r5.xyzx, r6.yzxy
  mad r7.xyz, r5.zxyz, r6.zxyz, -r7.xyzx
  add r6.xyz, -r3.yzwy, r6.xyzx
  mad r6.xyz, r4.wwww, r6.xyzx, r3.yzwy
  dp3 r5.w, r6.xyzx, r6.xyzx
  rsq r5.w, r5.w
  mul r6.xyz, r5.wwww, r6.xyzx
  add r7.xyz, -r4.xyzx, r7.xyzx
  mad r7.xyz, r4.wwww, r7.xyzx, r4.xyzx
  dp3 r4.w, r7.xyzx, r7.xyzx
  rsq r4.w, r4.w
  mul r7.xyz, r4.wwww, r7.xyzx
else 
  add r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000100, 0.000000)
  dp3 r4.w, r2.xyzx, r2.xyzx
  rsq r4.w, r4.w
  mul r2.xyz, r2.xyzx, r4.wwww
  mul r8.xyz, r2.yzxy, r5.xyzx
  mad r8.xyz, r5.zxyz, r2.zxyz, -r8.xyzx
  dp3 r4.w, r8.xyzx, r8.xyzx
  max r4.w, r4.w, l(0.010000)
  sqrt r4.w, r4.w
  div r8.xyz, r8.xyzx, r4.wwww
  mul r9.xyz, r5.zxyz, cb3[1].zxyz
  mad r9.xyz, cb3[1].yzxy, r5.xyzx, -r9.xyzx
  dp3 r4.w, r9.xyzx, r9.xyzx
  max r4.w, r4.w, l(0.010000)
  sqrt r4.w, r4.w
  div r9.xyz, r9.xyzx, r4.wwww
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), cb4[8].yzwy
  mul r11.xyz, r5.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
  mad r11.xyz, r5.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r11.xyzx
  dp2 r4.w, r11.xyxx, r11.xyxx
  max r4.w, r4.w, l(0.010000)
  sqrt r4.w, r4.w
  div r11.xyz, r11.xyzx, r4.wwww
  mul r12.xyz, r5.xyzx, r11.yzxy
  mad r5.xyz, r5.zxyz, r11.zxyz, -r12.xyzx
  movc r3.yzw, r10.zzzz, r11.xxyz, r3.yyzw
  movc r4.xyz, r10.zzzz, r5.xyzx, r4.xyzx
  movc r3.yzw, r10.yyyy, cb3[1].xxyz, r3.yyzw
  movc r4.xyz, r10.yyyy, -r9.xyzx, r4.xyzx
  movc r6.xyz, r10.xxxx, r8.xyzx, r3.yzwy
  movc r7.xyz, r10.xxxx, -r2.xyzx, r4.xyzx
endif 
mad r2.x, r3.x, l(6.28318548), cb4[10].y
sincos r2.x, r3.x, r2.x
mul r3.yzw, r6.xxyz, r3.xxxx
mad r3.yzw, r2.xxxx, r7.xxyz, r3.yyzw
mul r2.xyz, r6.zxyz, r2.xxxx
mad r2.xyz, r3.xxxx, r7.zxyz, -r2.xyzx
add r4.xy, v2.xyxx, cb4[11].xyxx
mul r0.zw, r0.zzzw, r4.xxxy
mul r4.xyz, r2.yzxy, r0.wwww
mad r4.xyz, r0.zzzz, r3.yzwy, r4.xyzx
add r1.xyz, r1.xyzx, r4.xyzx
add r0.xy, r0.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)
mul r0.x, r0.y, r0.x
mul r0.xyz, r0.xxxx, l(1341.456299, 2633.577881, 5623.982910, 0.000000)
frc r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r0.w, r23.w, l(0.500000)
mul o3.xyz, r0.xyzx, r0.wwww
mul r0.xyzw, r1.yyyy, r14.xyzw
mad r0.xyzw, r1.xxxx, r13.xyzw, r0.xyzw
mad r0.xyzw, r1.zzzz, r15.xyzw, r0.xyzw
add o8.xyzw, r0.xyzw, r16.xyzw
mul r0.xyz, r2.zxyz, r3.wyzw
mad r0.xyz, r3.zwyz, r2.xyzx, -r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r4.xyz, r0.yzxy, r2.xyzx
mad r2.xyz, r2.zxyz, r0.zxyz, -r4.xyzx
dp3 r0.w, r2.xyzx, r3.yzwy
lt r2.x, l(0.000000), r0.w
lt r0.w, r0.w, l(0.000000)
iadd r0.w, -r2.x, r0.w
itof o5.w, r0.w
mov o0.zw, l(0,0,0,0)
mov o4.xyz, r3.yzwy
mov o4.w, l(0)
mov o5.xyz, r0.xyzx
mov o7.xyz, r1.xyzx
mov o7.w, l(1.000000)
mov o1.y, r1.w
mov o1.z, l(0)
mov o1.x, r2.w
mov o6.x, l(0)
ret 
// Approximately 0 instruction slots used