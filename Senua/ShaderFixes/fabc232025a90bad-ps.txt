// asmtool.py --remap-cb 0 100 --remap-cb 1 101 -i --only-autofixed --disable-driver-stereo-cb 12 fabc232025a90bad-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:42:50 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float       
// TEXCOORD                11   xyzw        1     NONE   float   xyz 
// TEXCOORD                 0   xyzw        2     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x   
// TEXCOORD                 7   xyzw        4     NONE   float      w
// SV_Position              0   xyzw        5      POS   float   xyz 
// SV_IsFrontFace           0   x           6    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[131], immediateIndexed
dcl_constantbuffer cb1[60], immediateIndexed
dcl_constantbuffer cb2[10], immediateIndexed
dcl_constantbuffer cb3[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear centroid v1.xyz
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps linear v4.w
dcl_input_ps_siv linear noperspective v5.xyz, position
dcl_output o0.xyzw
dcl_temps 17
dcl_resource_structured t100, 2048
dcl_resource_structured t101, 960

// cb0 remapped to t100 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 0 100 --remap-cb 1 101 -i --only-autofixed --disable-driver-stereo-cb 12 fabc232025a90bad-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r6.xyzw, l(0), l(576), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r7.xyzw, l(0), l(592), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r8.xyzw, l(0), l(608), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r9.xyzw, l(0), l(624), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r10.xyzw, l(0), l(944), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r11.xyzw, l(1), l(32), t100.xyzw


// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 0 100 --remap-cb 1 101 -i --only-autofixed --disable-driver-stereo-cb 12 fabc232025a90bad-ps.txt
ld_structured_indexable(structured_buffer, stride=960)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=960)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(592), t101.xyzw
ld_structured_indexable(structured_buffer, stride=960)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=960)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(624), t101.xyzw
ld_structured_indexable(structured_buffer, stride=960)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(944), t101.xyzw

and r0.x, v3.x, l(1)
if_z r0.x
  mov r0.x, r6.x
  mov r0.y, r7.x
  mov r0.z, r8.x
  mov r0.w, r9.x
  mov r1.x, r6.y
  mov r1.y, r7.y
  mov r1.z, r8.y
  mov r1.w, r9.y
  mov r2.x, r6.z
  mov r2.y, r7.z
  mov r2.z, r8.z
  mov r2.w, r9.z
  mov r3.x, r6.w
  mov r3.y, r7.w
  mov r3.z, r8.w
  mov r3.w, r9.w
  mov r4.xyz, r10.xyzx
else 
  mov r0.x, r12.x
  mov r0.y, r13.x
  mov r0.z, r14.x
  mov r0.w, r15.x
  mov r1.x, r12.y
  mov r1.y, r13.y
  mov r1.z, r14.y
  mov r1.w, r15.y
  mov r2.x, r12.z
  mov r2.y, r13.z
  mov r2.z, r14.z
  mov r2.w, r15.z
  mov r3.x, r12.w
  mov r3.y, r13.w
  mov r3.z, r14.w
  mov r3.w, r15.w
  mov r4.xyz, r16.xyzx
endif 
mov r5.xyz, v5.xyzx
mov r5.w, l(1.000000)
dp4 r0.x, r5.xyzw, r0.xyzw
dp4 r0.y, r5.xyzw, r1.xyzw
dp4 r0.z, r5.xyzw, r2.xyzw
dp4 r0.w, r5.xyzw, r3.xyzw
div r0.xyz, r0.xyzx, r0.wwww
dp3 r0.w, -r0.xyzx, -r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, -r0.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v2.xyxx, t0.xyzw, s0
dp3 r0.w, v1.xyzx, r1.xyzx
add r0.w, -|r0.w|, l(1.000000)
max r0.w, |r0.w|, l(0.000001)
log r0.w, r0.w
mul r0.w, r0.w, cb3[4].x
exp r0.w, r0.w
mul r1.xyz, r0.wwww, r2.xyzx
mad r1.xyz, r1.xyzx, cb3[4].yyyy, cb3[1].xyzx
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), r11.x
if_nz r0.w
  add r0.xyz, -r4.xyzx, r0.xyzx
  add r2.xyz, r0.xyzx, -cb2[8].xyzx
  add r3.xyz, cb2[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r2.xyz, r3.xyzx, |r2.xyzx|
  or r0.w, r2.y, r2.x
  or r0.w, r2.z, r0.w
  dp3 r0.x, r0.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r0.x, r0.x, l(0.002000)
  frc r0.x, r0.x
  lt r0.x, l(0.500000), r0.x
  movc r0.xyz, r0.xxxx, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r1.xyz, r0.wwww, r0.xyzx, r1.xyzx
endif 
mul o0.xyz, r1.xyzx, v4.wwww
mov o0.w, l(0)
ret 
// Approximately 0 instruction slots used