// asmtool.py --remap-cb 1 101 -i --only-autofixed --disable-driver-stereo-cb 12 96be72268d7d977e-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 14:24:26 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// SV_IsFrontFace           0   x           1    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[130], immediateIndexed
dcl_constantbuffer cb2[12], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 4
dcl_resource_structured t101, 2048

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 -i --only-autofixed --disable-driver-stereo-cb 12 96be72268d7d977e-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r2.xyzw, l(0), l(1968), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r3.xyzw, l(1), l(16), t101.xyzw

mul r0.xy, v0.xyxx, r2.zwzz
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t1.xyzw, s1, l(0.000000)
mul r1.xyzw, v0.yyyy, cb0[2].xyzw
mad r1.xyzw, v0.xxxx, cb0[1].xyzw, r1.xyzw
mad r0.xyzw, r0.xxxx, cb0[3].xyzw, r1.xyzw
add r0.xyzw, r0.xyzw, cb0[4].xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r1.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
lt r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
or r0.w, r1.y, r1.x
or r0.w, r1.z, r0.w
discard_nz r0.w
add r1.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
lt r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
or r0.w, r1.y, r1.x
or r0.w, r1.z, r0.w
discard_nz r0.w
mad r0.x, r0.x, l(2.000000), l(-1.000000)
mad r0.yz, r0.zzyz, l(0.000000, 0.200000, 0.200000, 0.000000), cb2[3].xxyx
mad_sat r0.x, -|r0.x|, l(4.000000), l(4.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.yzyy, t0.xyzw, s0
sample_l_indexable(texture2d)(float,float,float,float) r0.yzw, r0.yzyy, t0.wxyz, s0, l(5.000000)
mul_sat r1.w, r1.x, cb2[10].w
mul r1.xyz, r1.xyzx, cb2[5].xyzx
mul r0.x, r0.x, r1.w
mul r0.x, r0.x, cb0[13].x
mov o0.w, r0.x
mad r0.yzw, r0.yyzw, cb2[5].xxyz, -r1.xxyz
mad r0.yzw, cb2[10].zzzz, r0.yyzw, r1.xxyz
mad r1.xyz, r0.yzwy, cb2[11].zzzz, cb2[6].xyzx
mul r0.yzw, r0.yyzw, cb2[10].wwww
mul_sat o3.xyz, r0.yzwy, cb2[7].xyzx
max o0.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov o2.w, r0.x
mov o3.w, r0.x
mad o2.z, r3.y, l(0.500000), r3.x
mov o2.xy, l(0,0.500000,0,0)
ret 
// Approximately 0 instruction slots used