// asmtool.py --remap-cb 0 100 -i --only-autofixed --disable-driver-stereo-cb 12 446ac2ad14c63cf1-vs.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 14:21:00 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz 
// ATTRIBUTE                1   xyz         1     NONE   float   xyz 
// ATTRIBUTE                2   xyzw        2     NONE   float   xyzw
// ATTRIBUTE                3   xyzw        3     NONE   float       
// ATTRIBUTE                4   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyzw
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x   
// TEXCOORD                 6   xyzw        4     NONE   float   xyzw
// SV_POSITION              0   xyzw        5      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[133], immediateIndexed
dcl_constantbuffer cb1[15], immediateIndexed
dcl_constantbuffer cb2[11], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v4.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.x
dcl_output o4.xyzw
dcl_output_siv o5.xyzw, position
dcl_temps 11
dcl_resource_structured t100, 2048
// Disables driver stereo correction:
dcl_constantbuffer cb12[4], immediateIndexed

// cb0 remapped to t100 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 0 100 -i --only-autofixed --disable-driver-stereo-cb 12 446ac2ad14c63cf1-vs.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r5.xyzw, l(0), l(0), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r6.xyzw, l(0), l(16), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r7.xyzw, l(0), l(32), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r8.xyzw, l(0), l(48), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r9.xyzw, l(0), l(944), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r10.xyzw, l(1), l(64), t100.xyzw

mov o0.w, l(0)
mad r0.xyz, v1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyzw, v2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r2.xyz, r0.xyzx, r1.yzxy
mad r0.xyz, r1.xyzx, r0.yzxy, -r2.xyzx
mul r0.xyz, r1.wwww, r0.xyzx
mul r2.xyz, r1.yzxy, r0.xyzx
mad r0.xyz, r0.zxyz, r1.zxyz, -r2.xyzx
mul r0.xyz, r1.wwww, r0.xyzx
mul r2.xyz, cb1[1].xyzx, cb1[14].yyyy
mul r3.xyz, r0.yyyy, r2.xyzx
mul r2.xyz, r1.yyyy, r2.xyzx
mul r4.xyz, cb1[0].xyzx, cb1[14].xxxx
mad r0.xyw, r0.xxxx, r4.xyxz, r3.xyxz
mad r2.xyz, r1.xxxx, r4.xyzx, r2.xyzx
mul r3.xyz, cb1[2].xyzx, cb1[14].zzzz
mad o0.xyz, r0.zzzz, r3.xyzx, r0.xywx
mad r0.xyz, r1.zzzz, r3.xyzx, r2.xyzx
mul o1.w, r1.w, cb1[9].w
mov o1.xyz, r0.xyzx
mov o2.xy, v4.xyxx
mov o2.zw, l(0,0,0,0)
mov o3.x, l(0)
mul r1.xyz, v0.yyyy, cb1[1].xyzx
mad r1.xyz, cb1[0].xyzx, v0.xxxx, r1.xyzx
mad r1.xyz, cb1[2].xyzx, v0.zzzz, r1.xyzx
add r2.xyz, r9.xyzx, cb1[3].xyzx
add r1.xyz, r1.xyzx, r2.xyzx
add r2.xyzw, r1.xzyz, -r9.xzyz
div r2.xyzw, r2.xyzw, cb2[8].zzzz
mul r0.z, r10.z, cb2[8].x
mad r2.xyzw, r0.zzzz, l(-0.030000, 0.600000, -0.030000, 0.600000), r2.xyzw
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r2.zwzz, t0.yzxw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t0.yzwx, s0, l(0.000000)
mul r0.x, |r0.x|, r0.z
mad r0.x, r0.w, |r0.y|, r0.x
add r0.x, -r0.x, l(0.500000)
mad r0.xyz, r0.xxxx, cb2[10].yyyy, r1.xyzx
mov o4.xyz, r0.xyzx
mov o4.w, l(1.000000)
mul r1.xyzw, r0.yyyy, r6.xyzw
mad r1.xyzw, r0.xxxx, r5.xyzw, r1.xyzw
mad r0.xyzw, r0.zzzz, r7.xyzw, r1.xyzw
add o5.xyzw, r0.xyzw, r8.xyzw
ret 
// Approximately 0 instruction slots used