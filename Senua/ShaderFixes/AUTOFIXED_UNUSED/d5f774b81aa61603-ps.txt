// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 d5f774b81aa61603-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:43:25 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz 
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// COLOR                    0   xyzw        2     NONE   float       
// TEXCOORD                 0   xy          3     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x   
// VELOCITY_PREV_POS        0   xyzw        5     NONE   float   xyzw
// SV_Position              0   xyzw        6      POS   float   xyzw
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
// SV_Target                5   xyzw        5   TARGET   float   xyzw
// SV_Target                6   xyzw        6   TARGET   float   xyzw
// SV_Target                7   xyzw        7   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[142], immediateIndexed
dcl_constantbuffer cb2[123], immediateIndexed
dcl_constantbuffer cb3[20], immediateIndexed
dcl_constantbuffer cb4[6], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v3.xy
dcl_input_ps constant v4.x
dcl_input_ps linear v5.xyzw
dcl_input_ps_siv linear noperspective v6.xyzw, position
dcl_input_ps_sgv v7.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 36
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 1968

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 d5f774b81aa61603-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r10.xyzw, l(0), l(416), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r11.xyzw, l(0), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(592), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(624), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(992), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(1936), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(1952), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(2016), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(2032), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(1), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(1), l(16), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(1), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(1), l(48), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(1), l(96), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r26.xyzw, l(1), l(208), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 d5f774b81aa61603-ps.txt
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r27.xyzw, l(0), l(416), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r28.xyzw, l(0), l(576), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r29.xyzw, l(0), l(592), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r30.xyzw, l(0), l(608), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r31.xyzw, l(0), l(624), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r32.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r33.xyzw, l(0), l(992), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r34.xyzw, l(0), l(1936), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r35.xyzw, l(0), l(1952), t102.xyzw

and r0.x, v4.x, l(1)
if_z r0.x
  mov r0.x, r11.x
  mov r0.y, r12.x
  mov r0.z, r13.x
  mov r0.w, r14.x
  mov r1.x, r11.y
  mov r1.y, r12.y
  mov r1.z, r13.y
  mov r1.w, r14.y
  mov r2.x, r11.z
  mov r2.y, r12.z
  mov r2.z, r13.z
  mov r2.w, r14.z
  mov r3.x, r11.w
  mov r3.y, r12.w
  mov r3.z, r13.w
  mov r3.w, r14.w
  mov r4.xy, r17.xyxx
  mov r4.zw, r18.zzzw
  mov r5.xyz, r15.xyzx
  mov r6.xy, r10.xyxx
  mov r6.zw, r16.xxxy
else 
  mov r0.x, r28.x
  mov r0.y, r29.x
  mov r0.z, r30.x
  mov r0.w, r31.x
  mov r1.x, r28.y
  mov r1.y, r29.y
  mov r1.z, r30.y
  mov r1.w, r31.y
  mov r2.x, r28.z
  mov r2.y, r29.z
  mov r2.z, r30.z
  mov r2.w, r31.z
  mov r3.x, r28.w
  mov r3.y, r29.w
  mov r3.z, r30.w
  mov r3.w, r31.w
  mov r4.xy, r34.xyxx
  mov r4.zw, r35.zzzw
  mov r5.xyz, r32.xyzx
  mov r6.xy, r27.xyxx
  mov r6.zw, r33.xxxy
endif 
mul r7.xyz, v0.yzxy, v1.zxyz
mad r7.xyz, v1.yzxy, v0.zxyz, -r7.xyzx
mul r7.xyz, r7.xyzx, v1.wwww
add r4.xy, -r4.xyxx, v6.xyxx
mad r4.xy, r4.xyxx, r4.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, v6.wwww
mov r4.z, v6.w
mul r4.xyz, r4.xyzx, l(2.000000, -2.000000, 1.000000, 0.000000)
mov r8.xyz, v6.xyzx
mov r8.w, l(1.000000)
dp4 r0.x, r8.xyzw, r0.xyzw
dp4 r0.y, r8.xyzw, r1.xyzw
dp4 r0.z, r8.xyzw, r2.xyzw
dp4 r0.w, r8.xyzw, r3.xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r1.xyz, -r5.xyzx, r0.xyzx
mul r0.w, r24.w, cb3[9].w
movc r1.w, v7.x, l(1.000000), l(-1.000000)
mul r0.w, r0.w, r1.w
mad r2.xyz, r21.wwww, l(-1.000000, 0.000000, 0.000000, 0.000000), r21.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mul r3.xyz, r7.xyzx, r2.yyyy
mad r2.xyw, r2.xxxx, v0.xyxz, r3.xyxz
mad r2.xyz, r2.zzzz, v1.xyzx, r2.xywx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mul r2.xyz, r0.wwww, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v3.xyxx, t0.xyzw, s0
max r3.xyz, |r3.xyzx|, l(0.000001, 0.000001, 0.000001, 0.000000)
log r3.xyz, r3.xyzx
mul r3.xyz, r3.xyzx, cb6[7].xxxx
exp r3.xyz, r3.xyzx
mul r3.xyz, r3.xyzx, cb6[6].xyzx
mul_sat r3.xyz, r3.xyzx, cb6[3].xyzx
mul r0.w, r3.w, cb6[8].x
mul_sat r1.w, cb5[0].x, cb5[1].x
mad r2.w, v6.y, l(2.000000), v6.x
add r2.w, r2.w, r26.x
add r2.w, r2.w, l(-1.500000)
mul r2.w, r2.w, l(0.200000)
frc r2.w, r2.w
dp2 r3.w, l(2.40845060, 3.25352120, 0.000000, 0.000000), v6.xyxx
frc r3.w, r3.w
mad r2.w, r2.w, l(5.000000), r3.w
mad r0.w, r2.w, l(0.166666672), r0.w
add r0.w, r0.w, l(-0.833300)
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
mov_sat r5.xyz, cb6[7].yzwy
mad o2.z, r5.z, r22.y, r22.x
lt r0.w, l(0.000000), cb3[11].y
movc o6.x, r0.w, cb4[5].x, cb3[19].z
div r4.xy, r4.xyxx, r4.zzzz
div r4.zw, v5.xxxy, v5.wwww
add r4.xyzw, -r6.xyzw, r4.xyzw
add r4.xy, -r4.zwzz, r4.xyxx
mad r4.xy, r4.xyxx, l(0.249500, 0.249500, 0.000000, 0.000000), l(0.499992371, 0.499992371, 0.000000, 0.000000)
mul o4.xy, r4.xyxx, v5.zzzz
mov o4.zw, l(0,0,0,0)
mul r0.w, r5.y, l(0.080000)
mad r4.xyz, -r5.yyyy, l(0.080000, 0.080000, 0.080000, 0.000000), r3.xyzx
mad r4.xyz, r5.xxxx, r4.xyzx, r0.wwww
mad r6.xyz, -r3.xyzx, r5.xxxx, r3.xyzx
mad r6.xyz, r6.xyzx, r19.wwww, r19.xyzx
mad r4.xyz, r4.xyzx, r20.wwww, r20.xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
div r0.x, r0.x, cb0[33].w
log r0.x, r0.x
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(6.000000)
round_pi r0.x, r0.x
mul r0.yzw, r1.xxyz, cb0[30].xxyz
mad r7.xyz, r1.xyzx, cb0[30].xyzx, -cb0[31].xyzx
max r2.w, |r7.y|, |r7.x|
max r2.w, |r7.z|, r2.w
mul r2.w, r2.w, l(4.000000)
log r2.w, r2.w
max r2.w, r2.w, l(0.000000)
round_ni r2.w, r2.w
max r0.x, r0.x, r2.w
exp r2.w, r0.x
div r7.xyz, r0.yzwy, r2.wwww
frc r7.xyz, r7.xyzx
mul r0.x, r0.x, l(0.142857149)
mad r7.w, r7.z, l(0.142857149), r0.x
mul r8.xyz, cb0[32].xyzx, l(1.000000, 1.000000, 7.000000, 0.000000)
mul r7.xyz, r7.xywx, r8.xyzx
round_ni r7.xyz, r7.xyzx
add r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
div r7.xyz, r7.xyzx, r8.xyzx
sample_l_indexable(texture3d)(float,float,float,float) r7.xyzw, r7.xyzx, t1.xyzw, s1, l(0.000000)
mul r7.xyzw, r7.xyzw, l(255.000000, 255.000000, 255.000000, 255.000000)
div r8.xyz, cb0[32].xyzx, r7.wwww
mul r0.xyz, r0.yzwy, r8.xyzx
frc r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(0.666666687, 0.666666687, 0.666666687, 0.000000), r7.xyzx
add r0.xyz, r0.xyzx, l(0.166666672, 0.166666672, 0.166666672, 0.000000)
mul r0.xyz, r0.xyzx, cb0[33].xyzx
sample_l_indexable(texture3d)(float,float,float,float) r7.xyzw, r0.xyzx, t2.xyzw, s2, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r0.xyzx, t3.xyzw, s2, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r9.xyzw, r0.xyzx, t4.xyzw, s2, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r0.x, r0.xyzx, t5.yxzw, s2, l(0.000000)
dp3 r0.y, r7.yzwy, r7.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r7.yzw, r0.yyyy, r7.yyzw
dp3 r0.y, r2.xyzx, r7.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r7.x
add r2.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r2.w, r2.w, r3.w
mad r5.zw, r0.zzzz, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 1.000000, 2.000000)
log r0.y, r0.y
mul r0.y, r0.y, r5.z
exp r0.y, r0.y
mul r0.z, r0.y, r5.w
mad r0.y, -r5.w, r0.y, l(1.000000)
mad r0.y, r2.w, r0.y, r0.z
mul r0.y, r0.y, r7.x
movc r7.x, r0.w, r0.y, r7.x
dp3 r0.y, r8.yzwy, r8.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r8.yzw, r0.yyyy, r8.yyzw
dp3 r0.y, r2.xyzx, r8.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r8.x
add r2.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r2.w, r2.w, r3.w
mad r5.zw, r0.zzzz, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 1.000000, 2.000000)
log r0.y, r0.y
mul r0.y, r0.y, r5.z
exp r0.y, r0.y
mul r0.z, r0.y, r5.w
mad r0.y, -r5.w, r0.y, l(1.000000)
mad r0.y, r2.w, r0.y, r0.z
mul r0.y, r0.y, r8.x
movc r7.y, r0.w, r0.y, r8.x
dp3 r0.y, r9.yzwy, r9.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r8.xyz, r0.yyyy, r9.yzwy
dp3 r0.y, r2.xyzx, r8.xyzx
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r9.x
add r2.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r2.w, r2.w, r3.w
mad r5.zw, r0.zzzz, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 1.000000, 2.000000)
log r0.y, r0.y
mul r0.y, r0.y, r5.z
exp r0.y, r0.y
mul r0.z, r0.y, r5.w
mad r0.y, -r5.w, r0.y, l(1.000000)
mad r0.y, r2.w, r0.y, r0.z
mul r0.y, r0.y, r9.x
movc r7.z, r0.w, r0.y, r9.x
max r0.yzw, r7.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.yzw, r6.xxyz, r0.yyzw
mul r0.yzw, r1.wwww, r0.yyzw
mad r4.xyz, r4.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r6.xyzx
max r6.xyz, cb6[2].xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.w, l(0.000000), r23.x
if_nz r2.w
  add r7.xyz, r1.xyzx, -cb3[8].xyzx
  add r8.xyz, cb3[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r7.xyz, r8.xyzx, |r7.xyzx|
  or r2.w, r7.y, r7.x
  or r2.w, r7.z, r2.w
  dp3 r1.x, r1.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.x, r1.x, l(0.002000)
  frc r1.x, r1.x
  lt r1.x, l(0.500000), r1.x
  movc r1.xyz, r1.xxxx, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r6.xyz, r2.wwww, r1.xyzx, r6.xyzx
endif 
mad r0.yzw, r25.xxxx, r4.xxyz, r0.yyzw
add o0.xyz, r6.xyzx, r0.yzwy
mul r0.yzw, v6.xxyx, l(0.000000, 0.00781250000, 0.00781250000, 0.00781250000)
frc r0.yzw, r0.yyzw
mad r0.yzw, r0.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000), l(0.000000, -64.340622, -72.465622, -64.340622)
mul r0.yzw, r0.yyzz, r0.yyzw
dp3 r0.y, r0.yzwy, l(20.390625, 60.703125, 2.42812085, 0.000000)
frc r0.y, r0.y
add r0.y, r0.y, l(-0.500000)
mad o1.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mul o3.w, r0.y, l(0.00392156886)
min r0.x, r1.w, r0.x
max r0.x, r0.x, l(0.000000)
sqrt o7.xyzw, r0.xxxx
mov o0.w, l(0)
mov o1.w, cb3[11].x
mov o2.xy, r5.xyxx
mov o2.w, l(0.0666666701)
mov o3.xyz, r3.xyzx
mov o5.xyzw, l(0,0,0,0)
mov o6.yzw, cb3[19].zzzz
ret 
// Approximately 0 instruction slots used