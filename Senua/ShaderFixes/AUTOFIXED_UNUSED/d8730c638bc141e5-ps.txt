// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 d8730c638bc141e5-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:43:25 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz 
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// COLOR                    0   xyzw        2     NONE   float   x   
// TEXCOORD                 0   xy          3     NONE   float   xy  
// TEXCOORD                 1   xy          4     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           5     NONE    uint   x   
// VELOCITY_PREV_POS        0   xyzw        6     NONE   float   xyzw
// SV_Position              0   xyzw        7      POS   float   xyzw
// SV_IsFrontFace           0   x           8    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
// SV_Target                5   xyzw        5   TARGET   float   xyzw
// SV_Target                6   xyzw        6   TARGET   float   xyzw
// SV_Target                7   xyzw        7   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[123], immediateIndexed
dcl_constantbuffer cb3[20], immediateIndexed
dcl_constantbuffer cb4[6], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[2], immediateIndexed
dcl_constantbuffer cb7[16], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t11
dcl_resource_texture3d (float,float,float,float) t12
dcl_resource_texture3d (float,float,float,float) t13
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.x
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xy
dcl_input_ps constant v5.x
dcl_input_ps linear v6.xyzw
dcl_input_ps_siv linear noperspective v7.xyzw, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 40
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 1968

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 d8730c638bc141e5-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(416), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(592), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(624), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(992), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(1936), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(1952), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(2016), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(0), l(2032), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(1), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(1), l(16), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(1), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r26.xyzw, l(1), l(64), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r27.xyzw, l(1), l(96), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r28.xyzw, l(1), l(208), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r29.xyzw, l(1), l(272), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r30.xyzw, l(1), l(768), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 d8730c638bc141e5-ps.txt
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r31.xyzw, l(0), l(416), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r32.xyzw, l(0), l(576), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r33.xyzw, l(0), l(592), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r34.xyzw, l(0), l(608), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r35.xyzw, l(0), l(624), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r36.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r37.xyzw, l(0), l(992), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r38.xyzw, l(0), l(1936), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r39.xyzw, l(0), l(1952), t102.xyzw

and r0.x, v5.x, l(1)
if_z r0.x
  mov r0.x, r13.x
  mov r0.y, r14.x
  mov r0.z, r15.x
  mov r0.w, r16.x
  mov r1.x, r13.y
  mov r1.y, r14.y
  mov r1.z, r15.y
  mov r1.w, r16.y
  mov r2.x, r13.z
  mov r2.y, r14.z
  mov r2.z, r15.z
  mov r2.w, r16.z
  mov r3.x, r13.w
  mov r3.y, r14.w
  mov r3.z, r15.w
  mov r3.w, r16.w
  mov r4.xy, r19.xyxx
  mov r4.zw, r20.zzzw
  mov r5.xyz, r17.xyzx
  mov r6.xy, r12.xyxx
  mov r6.zw, r18.xxxy
else 
  mov r0.x, r32.x
  mov r0.y, r33.x
  mov r0.z, r34.x
  mov r0.w, r35.x
  mov r1.x, r32.y
  mov r1.y, r33.y
  mov r1.z, r34.y
  mov r1.w, r35.y
  mov r2.x, r32.z
  mov r2.y, r33.z
  mov r2.z, r34.z
  mov r2.w, r35.z
  mov r3.x, r32.w
  mov r3.y, r33.w
  mov r3.z, r34.w
  mov r3.w, r35.w
  mov r4.xy, r38.xyxx
  mov r4.zw, r39.zzzw
  mov r5.xyz, r36.xyzx
  mov r6.xy, r31.xyxx
  mov r6.zw, r37.xxxy
endif 
mul r7.xyz, v0.yzxy, v1.zxyz
mad r7.xyz, v1.yzxy, v0.zxyz, -r7.xyzx
mul r7.xyz, r7.xyzx, v1.wwww
add r4.xy, -r4.xyxx, v7.xyxx
mad r4.xy, r4.xyxx, r4.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, v7.wwww
mov r4.z, v7.w
mul r4.xyz, r4.xyzx, l(2.000000, -2.000000, 1.000000, 0.000000)
mov r8.xyz, v7.xyzx
mov r8.w, l(1.000000)
dp4 r0.x, r8.xyzw, r0.xyzw
dp4 r0.y, r8.xyzw, r1.xyzw
dp4 r0.z, r8.xyzw, r2.xyzw
dp4 r0.w, r8.xyzw, r3.xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r1.xyz, -r5.xyzx, r0.xyzx
dp3 r0.w, -r0.xyzx, -r0.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, -r0.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xy, v3.xyxx, t0.xyzw, s2
add r5.xy, r3.xyxx, r3.xyxx
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r3.xyxx, r3.xyxx
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
sqrt r5.z, r0.w
add r3.xyz, r5.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r8.xyz, v4.xyxx, t1.xyzw, s2
add r8.xyz, r8.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mul r0.w, r26.z, cb7[9].x
mul r9.y, r0.w, l(0.400000)
sample_indexable(texture2d)(float,float,float,float) r10.xyzw, v4.xyxx, t2.xyzw, s2
mul r9.zw, v4.xxxy, cb7[9].yyyy
mov r9.x, l(0)
mad r9.xy, r10.wwww, r9.zwzz, r9.xyxx
sample_indexable(texture2d)(float,float,float,float) r0.w, r9.xyxx, t1.xyzw, s2
mad r8.xyz, r8.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-0.000000, -0.000000, -1.000000, 0.000000)
mad r8.xyz, r0.wwww, r8.xyzx, l(1.000000, 1.000000, 2.000000, 0.000000)
mad r8.xyz, r8.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000), l(1.000000, 1.000000, -1.000000, 0.000000)
dp3 r0.w, r3.xyzx, r8.xyzx
mul r8.xyz, r3.zzzz, r8.xyzx
mad r3.xyz, r3.xyzx, r0.wwww, -r8.xyzx
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, v3.xyxx, t3.xyzw, s2
add r0.w, -cb7[9].w, cb7[9].z
mad r0.w, r10.w, r0.w, cb7[9].w
mul r0.w, r0.w, v2.x
mul_sat r1.w, cb5[1].y, l(1.33333337)
mul r1.w, r1.w, l(0.871000051)
mad_sat r0.w, r8.w, r0.w, r1.w
max r0.w, r0.w, l(0.000001)
log r0.w, r0.w
mul r0.w, r0.w, cb7[10].x
exp r0.w, r0.w
add r5.xyz, r5.xyzx, l(-1.000000, -1.000000, 0.000000, 0.000000)
add r3.xyz, r3.xyzx, -r5.xyzx
mad r3.xyz, r0.wwww, r3.xyzx, r5.xyzx
add r5.xyz, r3.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r9.xy, v3.xyxx, t4.xyzw, s2
add r11.xy, r9.xyxx, r9.xyxx
mad r9.xy, r9.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r9.xyxx, r9.xyxx
add r1.w, -r1.w, l(1.000000)
max r1.w, r1.w, l(0.000000)
sqrt r11.z, r1.w
add r9.xyz, r11.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mad r9.xyz, r9.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000), l(1.000000, 1.000000, -1.000000, 0.000000)
dp3 r1.w, r5.xyzx, r9.xyzx
mul r9.xyz, r5.zzzz, r9.xyzx
mad r5.xyz, r5.xyzx, r1.wwww, -r9.xyzx
add r1.w, cb5[0].w, cb5[0].w
add r5.xyz, -r3.xyzx, r5.xyzx
mad r3.xyz, r1.wwww, r5.xyzx, r3.xyzx
add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mul r5.xy, v3.xyxx, cb7[10].yyyy
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r5.xyxx, t5.xyzw, s2
add r5.xyz, r5.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r1.w, -cb7[10].z, l(1.000000)
mad r1.w, r8.x, r1.w, cb7[10].z
mul r1.w, r1.w, cb7[10].w
mad r5.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-0.000000, -0.000000, -1.000000, 0.000000)
mad r5.xyz, r1.wwww, r5.xyzx, l(1.000000, 1.000000, 2.000000, 0.000000)
mad r5.xyz, r5.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000), l(1.000000, 1.000000, -1.000000, 0.000000)
dp3 r1.w, r3.xyzx, r5.xyzx
mul r5.xyz, r3.zzzz, r5.xyzx
mad r5.xyz, r3.xyzx, r1.wwww, -r5.xyzx
mul r9.xy, v3.xyxx, cb7[11].xxxx
sample_indexable(texture2d)(float,float,float,float) r9.xyzw, r9.xyxx, t6.xyzw, s2
add r9.xyz, r9.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mul r1.w, r8.y, cb7[11].y
mad r9.xyz, r9.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-0.000000, -0.000000, -1.000000, 0.000000)
mad r9.xyz, r1.wwww, r9.xyzx, l(1.000000, 1.000000, 2.000000, 0.000000)
mad r9.xyz, r9.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000), l(1.000000, 1.000000, -1.000000, 0.000000)
dp3 r2.w, r3.xyzx, r9.xyzx
mul r9.xyz, r3.zzzz, r9.xyzx
mad r3.xyz, r3.xyzx, r2.wwww, -r9.xyzx
add r3.xyz, -r5.xyzx, r3.xyzx
mad r3.xyz, r8.yyyy, r3.xyzx, r5.xyzx
mad r3.xyz, r3.xyzx, r23.wwww, r23.xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx
mul r5.xyz, r7.xyzx, r3.yyyy
mad r3.xyw, r3.xxxx, v0.xyxz, r5.xyxz
mad r3.xyz, r3.zzzz, v1.xyzx, r3.xywx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx
sample_indexable(texture2d)(float,float,float,float) r7.xyzw, v3.xyxx, t7.yzxw, s0
dp3 r2.x, r3.xyzx, r2.xyzx
max r2.x, r2.x, l(0.000000)
add r2.x, -r2.x, l(1.000000)
max r2.x, |r2.x|, l(0.000001)
log r2.x, r2.x
mul r2.x, r2.x, cb7[11].z
exp r2.x, r2.x
mad r2.x, r2.x, cb7[12].x, cb7[11].w
mul r2.x, r2.x, r7.y
mul r2.x, r2.x, cb7[12].y
mul r2.xyz, r2.xxxx, cb7[6].xyzx
mul r2.xyz, r7.xxxx, r2.xyzx
max r2.w, |r9.w|, l(0.000001)
log r2.w, r2.w
mul r2.w, r2.w, cb7[12].z
exp r2.w, r2.w
mov_sat r1.w, r1.w
add r2.w, r2.w, l(-1.000000)
mad r1.w, r1.w, r2.w, l(1.000000)
min r1.w, r1.w, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r5.xyz, v3.xyxx, t8.xyzw, s1
dp3 r2.w, r5.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
add r9.xyz, -r5.xyzx, r2.wwww
mad r5.xyz, cb7[13].xxxx, r9.xyzx, r5.xyzx
mul r5.xyz, r5.xyzx, cb7[8].xyzx
mul r5.xyz, r5.xyzx, cb7[13].yyyy
max r5.xyz, |r5.xyzx|, l(0.000001, 0.000001, 0.000001, 0.000000)
log r5.xyz, r5.xyzx
mul r5.xyz, r5.xyzx, cb7[13].zzzz
exp r5.xyz, r5.xyzx
add r2.w, r7.x, l(-1.000000)
mad r2.w, cb7[13].w, r2.w, l(1.000000)
mul r5.xyz, r2.wwww, r5.xyzx
mad r2.xyz, r2.xyzx, r1.wwww, r5.xyzx
mad r5.xyz, r2.xyzx, r10.xyzx, -r2.xyzx
mad r2.xyz, r0.wwww, r5.xyzx, r2.xyzx
mul_sat r2.xyz, r2.xyzx, cb7[3].xyzx
mad r1.w, cb6[1].y, l(0.700000), cb7[14].x
mul r2.w, r8.x, r7.z
add r1.w, r1.w, -cb7[14].y
mad_sat r1.w, r2.w, r1.w, cb7[14].y
max r2.w, |r5.w|, l(0.000001)
log r2.w, r2.w
mul r2.w, r2.w, cb7[14].z
exp r2.w, r2.w
mul_sat r3.w, r8.z, cb7[10].w
add r2.w, r2.w, l(-1.000000)
mad r2.w, r3.w, r2.w, l(1.000000)
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, cb7[14].w
add r2.w, r2.w, l(1.000000)
mad r3.w, -cb6[1].y, l(0.700000), r7.w
add r2.w, r2.w, -cb7[15].x
mad r2.w, r3.w, r2.w, cb7[15].x
add r3.w, -cb7[15].y, l(1.000000)
mad r3.w, v2.x, r3.w, cb7[15].y
mad r3.w, r2.w, r3.w, -r2.w
mad_sat r0.w, r0.w, r3.w, r2.w
lt r2.w, r7.y, cb7[15].z
mad o2.z, r0.w, r24.y, r24.x
mov_sat r7.xy, r7.xyxx
movc r0.w, r2.w, l(0), r7.y
lt r2.w, l(0.000000), cb3[11].y
movc o6.x, r2.w, cb4[5].x, cb3[19].z
lt r2.w, l(0.000000), r0.w
and o5.x, r2.w, cb7[15].w
mov o5.yz, l(0,0,0,0)
and o5.w, r0.w, r2.w
div r4.xy, r4.xyxx, r4.zzzz
div r4.zw, v6.xxxy, v6.wwww
add r4.xyzw, -r6.xyzw, r4.xyzw
add r4.xy, -r4.zwzz, r4.xyxx
mad r4.xy, r4.xyxx, l(0.249500, 0.249500, 0.000000, 0.000000), l(0.499992371, 0.499992371, 0.000000, 0.000000)
mul o4.xy, r4.xyxx, v6.zzzz
mov o4.zw, l(0,0,0,0)
mul r0.w, r1.w, l(0.080000)
ftou r4.xy, v7.xyxx
ftou r3.w, r28.x
iadd r4.x, r4.y, r4.x
iadd r3.w, r3.w, r4.x
and r3.w, r3.w, l(1)
lt r4.x, l(0.000000), r29.x
lt r4.y, l(0.000000), r30.w
and r4.z, r4.y, r4.x
ne r4.w, l(0.000000, 0.000000, 0.000000, 0.000000), r29.x
movc r5.xyz, r4.wwww, l(1.000000,1.000000,1.000000,0), r2.xyzx
movc r6.xy, r3.wwww, l(1.000000,0,0,0), l(0,1.000000,0,0)
mul r3.w, r0.w, r6.y
movc r5.xyz, r4.zzzz, r6.xxxx, r5.xyzx
movc r3.w, r4.z, r3.w, r0.w
movc r5.xyz, r2.wwww, r5.xyzx, r2.xyzx
movc r0.w, r2.w, r3.w, r0.w
mad r5.xyz, r5.xyzx, r21.wwww, r21.xyzx
mad r6.xzw, r0.wwww, r22.wwww, r22.xxyz
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
div r0.x, r0.x, cb0[33].w
log r0.x, r0.x
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(6.000000)
round_pi r0.x, r0.x
mul r0.yzw, r1.xxyz, cb0[30].xxyz
mad r7.yzw, r1.xxyz, cb0[30].xxyz, -cb0[31].xxyz
max r3.w, |r7.z|, |r7.y|
max r3.w, |r7.w|, r3.w
mul r3.w, r3.w, l(4.000000)
log r3.w, r3.w
max r3.w, r3.w, l(0.000000)
round_ni r3.w, r3.w
max r0.x, r0.x, r3.w
exp r3.w, r0.x
div r7.yzw, r0.yyzw, r3.wwww
frc r8.xyz, r7.yzwy
mul r0.x, r0.x, l(0.142857149)
mad r8.w, r8.z, l(0.142857149), r0.x
mul r7.yzw, cb0[32].xxyz, l(0.000000, 1.000000, 1.000000, 7.000000)
mul r8.xyz, r7.yzwy, r8.xywx
round_ni r8.xyz, r8.xyzx
add r8.xyz, r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
div r7.yzw, r8.xxyz, r7.yyzw
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r7.yzwy, t9.xyzw, s3, l(0.000000)
mul r8.xyzw, r8.xyzw, l(255.000000, 255.000000, 255.000000, 255.000000)
div r7.yzw, cb0[32].xxyz, r8.wwww
mul r0.xyz, r0.yzwy, r7.yzwy
frc r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(0.666666687, 0.666666687, 0.666666687, 0.000000), r8.xyzx
add r0.xyz, r0.xyzx, l(0.166666672, 0.166666672, 0.166666672, 0.000000)
mul r0.xyz, r0.xyzx, cb0[33].xyzx
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r0.xyzx, t10.xyzw, s4, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r9.xyzw, r0.xyzx, t11.xyzw, s4, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r10.xyzw, r0.xyzx, t12.xyzw, s4, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r0.x, r0.xyzx, t13.yxzw, s4, l(0.000000)
dp3 r0.y, r8.yzwy, r8.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r7.yzw, r0.yyyy, r8.yyzw
dp3 r0.y, r3.xyzx, r7.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r8.x
add r3.w, -r0.z, l(1.000000)
add r4.z, r0.z, l(1.000000)
div r3.w, r3.w, r4.z
mad r4.zw, r0.zzzz, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 1.000000, 2.000000)
log r0.y, r0.y
mul r0.y, r0.y, r4.z
exp r0.y, r0.y
mul r0.z, r0.y, r4.w
mad r0.y, -r4.w, r0.y, l(1.000000)
mad r0.y, r3.w, r0.y, r0.z
mul r0.y, r0.y, r8.x
movc r8.x, r0.w, r0.y, r8.x
dp3 r0.y, r9.yzwy, r9.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r7.yzw, r0.yyyy, r9.yyzw
dp3 r0.y, r3.xyzx, r7.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r9.x
add r3.w, -r0.z, l(1.000000)
add r4.z, r0.z, l(1.000000)
div r3.w, r3.w, r4.z
mad r4.zw, r0.zzzz, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 1.000000, 2.000000)
log r0.y, r0.y
mul r0.y, r0.y, r4.z
exp r0.y, r0.y
mul r0.z, r0.y, r4.w
mad r0.y, -r4.w, r0.y, l(1.000000)
mad r0.y, r3.w, r0.y, r0.z
mul r0.y, r0.y, r9.x
movc r8.y, r0.w, r0.y, r9.x
dp3 r0.y, r10.yzwy, r10.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r7.yzw, r0.yyyy, r10.yyzw
dp3 r0.y, r3.xyzx, r7.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r10.x
add r3.w, -r0.z, l(1.000000)
add r4.z, r0.z, l(1.000000)
div r3.w, r3.w, r4.z
mad r4.zw, r0.zzzz, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 1.000000, 2.000000)
log r0.y, r0.y
mul r0.y, r0.y, r4.z
exp r0.y, r0.y
mul r0.z, r0.y, r4.w
mad r0.y, -r4.w, r0.y, l(1.000000)
mad r0.y, r3.w, r0.y, r0.z
mul r0.y, r0.y, r10.x
movc r8.z, r0.w, r0.y, r10.x
max r0.yzw, r8.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.yzw, r5.xxyz, r0.yyzw
mul r7.yzw, r7.xxxx, r0.yyzw
mad r5.xyz, r6.xzwx, l(0.450000, 0.450000, 0.450000, 0.000000), r5.xyzx
max r6.xzw, cb7[2].xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r3.w, l(0.000000), r25.x
if_nz r3.w
  add r8.xyz, r1.xyzx, -cb3[8].xyzx
  add r9.xyz, cb3[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r8.xyz, r9.xyzx, |r8.xyzx|
  or r3.w, r8.y, r8.x
  or r3.w, r8.z, r3.w
  dp3 r1.x, r1.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.x, r1.x, l(0.002000)
  frc r1.x, r1.x
  lt r1.x, l(0.500000), r1.x
  movc r1.xyz, r1.xxxx, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r6.xzw, r3.wwww, r1.xxyz, r6.xxzw
endif 
mad r1.xyz, r27.xxxx, r5.xyzx, r6.xzwx
and r3.w, r2.w, r4.x
and r3.w, r4.y, r3.w
mul r4.xyz, r6.yyyy, r1.xyzx
movc r1.xyz, r3.wwww, r4.xyzx, r1.xyzx
mad o0.xyz, r0.yzwy, r7.xxxx, r1.xyzx
eq r0.y, r30.w, l(0.000000)
dp3 r0.z, r7.yzwy, l(0.300000, 0.590000, 0.110000, 0.000000)
and r0.z, r0.z, r0.y
and r0.z, r0.z, r2.w
and o0.w, r0.z, r0.y
mul r0.yzw, v7.xxyx, l(0.000000, 0.00781250000, 0.00781250000, 0.00781250000)
frc r0.yzw, r0.yyzw
mad r0.yzw, r0.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000), l(0.000000, -64.340622, -72.465622, -64.340622)
mul r0.yzw, r0.yyzz, r0.yyzw
dp3 r0.y, r0.yzwy, l(20.390625, 60.703125, 2.42812085, 0.000000)
frc r0.y, r0.y
add r0.y, r0.y, l(-0.500000)
mad o1.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
movc o2.w, r2.w, l(0.0196078438), l(0.00392156886)
mul o3.w, r0.y, l(0.00392156886)
min r0.x, r7.x, r0.x
max r0.x, r0.x, l(0.000000)
sqrt o7.xyzw, r0.xxxx
mov o1.w, cb3[11].x
mov o2.x, l(0)
mov o2.y, r1.w
mov o3.xyz, r2.xyzx
mov o6.yzw, cb3[19].zzzz
ret 
// Approximately 0 instruction slots used