// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 acaf534cf84922bb-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 14:21:59 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float      w
// TEXCOORD                11   xyzw        1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// PARTICLE_SUBUVS          0   xyzw        3     NONE   float   xyzw
// PARTICLE_POSITION        0   xyzw        4     NONE   float   xyzw
// PARTICLE_LIGHTING_OFFSET     0   xyz         5     NONE   float   xyz 
// PACKED_EYE_INDEX         0   x           6     NONE    uint   x   
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// SV_Position              0   xyzw        8      POS   float   xyzw
// SV_IsFrontFace           0   x           9    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[29], immediateIndexed
dcl_constantbuffer cb1[164], immediateIndexed
dcl_constantbuffer cb2[157], immediateIndexed
dcl_constantbuffer cb3[10], immediateIndexed
dcl_constantbuffer cb4[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_input_ps linear v0.w
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps constant v6.x
dcl_input_ps linear v7.xyzw
dcl_input_ps_siv linear noperspective v8.xyzw, position
dcl_output o0.xyzw
dcl_temps 50
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 2048

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 acaf534cf84922bb-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r11.xyzw, l(0), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(592), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(624), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(768), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(784), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(848), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(864), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(1936), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(1952), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(0), l(2016), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(0), l(2032), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(1), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(1), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r26.xyzw, l(1), l(96), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r27.xyzw, l(1), l(144), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r28.xyzw, l(1), l(160), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r29.xyzw, l(1), l(176), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r30.xyzw, l(1), l(192), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r31.xyzw, l(1), l(448), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r32.xyzw, l(1), l(464), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r33.xyzw, l(1), l(480), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r34.xyzw, l(1), l(496), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r35.xyzw, l(1), l(512), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r36.xyzw, l(1), l(528), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r37.xyzw, l(1), l(544), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r38.xyzw, l(1), l(560), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 acaf534cf84922bb-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r39.xyzw, l(0), l(576), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r40.xyzw, l(0), l(592), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r41.xyzw, l(0), l(608), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r42.xyzw, l(0), l(624), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r43.xyzw, l(0), l(768), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r44.xyzw, l(0), l(784), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r45.xyzw, l(0), l(864), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r46.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r47.xyzw, l(0), l(1936), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r48.xyzw, l(0), l(1952), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r49.xyzw, l(1), l(448), t102.xyzw

and r0.x, v6.x, l(1)
if_z r0.x
  mov r0.x, r11.x
  mov r0.y, r12.x
  mov r0.z, r13.x
  mov r0.w, r14.x
  mov r1.x, r11.y
  mov r1.y, r12.y
  mov r1.z, r13.y
  mov r1.w, r14.y
  mov r2.x, r11.z
  mov r2.y, r12.z
  mov r2.z, r13.z
  mov r2.w, r14.z
  mov r3.x, r11.w
  mov r3.y, r12.w
  mov r3.z, r13.w
  mov r3.w, r14.w
  mov r4.xy, r20.xyxx
  mov r4.zw, r21.zzzw
  mov r5.xyz, r15.xyzx
  mov r6.xyz, r16.xyzx
  mov r7.xyz, r19.xyzx
  mov r8.xyz, r31.xyzx
  mov r9.xyzw, r18.xyzw
else 
  mov r0.x, r39.x
  mov r0.y, r40.x
  mov r0.z, r41.x
  mov r0.w, r42.x
  mov r1.x, r39.y
  mov r1.y, r40.y
  mov r1.z, r41.y
  mov r1.w, r42.y
  mov r2.x, r39.z
  mov r2.y, r40.z
  mov r2.z, r41.z
  mov r2.w, r42.z
  mov r3.x, r39.w
  mov r3.y, r40.w
  mov r3.z, r41.w
  mov r3.w, r42.w
  mov r4.xy, r47.xyxx
  mov r4.zw, r48.zzzw
  mov r5.xyz, r43.xyzx
  mov r6.xyz, r44.xyzx
  mov r7.xyz, r46.xyzx
  mov r8.xyz, r49.xyzx
  mov r9.xyzw, r45.xyzw
endif 
mov r10.xyz, v8.xyzx
mov r10.w, l(1.000000)
dp4 r0.x, r10.xyzw, r0.xyzw
dp4 r0.y, r10.xyzw, r1.xyzw
dp4 r0.z, r10.xyzw, r2.xyzw
dp4 r0.w, r10.xyzw, r3.xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r1.xyz, r0.xyzx, -v4.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
mad r0.w, v4.w, v4.w, -r0.w
lt r1.x, l(0.000000), r0.w
sqrt r0.w, r0.w
mad r1.yzw, -r5.xxyz, r0.wwww, r0.xxyz
add r1.yzw, r1.yyzw, -v4.xxyz
dp3 r0.w, r1.yzwy, r1.yzwy
rsq r0.w, r0.w
mul r1.yzw, r0.wwww, r1.yyzw
movc r1.xyz, r1.xxxx, r1.yzwy, l(0,0,1.000000,0)
mul r2.xyz, r1.yzxy, r6.zxyz
mad r2.xyz, r6.yzxy, r1.zxyz, -r2.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
mul r3.xyz, r1.zxyz, r2.yzxy
mad r3.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
add r4.xy, -r4.xyxx, v8.xyxx
mad r4.xy, r4.xyxx, r4.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, v8.wwww
mov r4.z, v8.w
mul r4.xyw, r4.xyxz, l(2.000000, -2.000000, 0.000000, 1.000000)
add r5.xyz, -r7.xyzx, r0.xyzx
mad r6.xyz, r24.wwww, l(0.000000, 0.000000, 1.000000, 0.000000), r24.xyzx
dp3 r0.w, r6.xyzx, r6.xyzx
rsq r0.w, r0.w
mul r6.xyz, r0.wwww, r6.xyzx
mul r3.xyz, r3.xyzx, r6.yyyy
mad r2.xyz, r6.xxxx, r2.xyzx, r3.xyzx
mad r1.xyz, r6.zzzz, r1.xyzx, r2.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
add r2.xyz, cb4[2].xyzx, cb4[3].xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v3.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r6.xyzw, v3.zwzz, t0.xyzw, s0
add r6.xyzw, -r3.xyzw, r6.xyzw
mad r3.xyzw, v0.wwww, r6.xyzw, r3.xyzw
mul r3.xyzw, r3.xyzw, v2.xyzw
mul r3.xyz, r3.xyzx, cb4[7].xyzx
mul_sat r3.xyz, r3.xyzx, cb4[4].xyzx
div r4.xy, r4.xyxx, r4.wwww
mad r4.xy, r4.xyxx, r9.xyxx, r9.wzww
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.yzwx, s1, l(0.000000)
mad r2.w, r0.w, r17.x, r17.y
mad r0.w, r0.w, r17.z, -r17.w
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
add r0.w, r0.w, r2.w
mad r0.w, -r4.z, l(1.000000), r0.w
div_sat r0.w, r0.w, cb4[8].y
mul r0.w, r0.w, r3.w
mad r2.w, r4.z, l(1.000000), cb4[8].z
div r2.w, r2.w, cb4[8].w
max r2.w, r2.w, l(0.000000)
min r2.w, r2.w, l(0.900000)
mul_sat r4.w, r0.w, r2.w
mad r3.xyz, r3.xyzx, r22.wwww, r22.xyzx
mad r6.xyz, r23.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r23.xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
div r0.x, r0.x, cb0[28].w
log r0.x, r0.x
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(6.000000)
round_pi r0.x, r0.x
mul r0.yzw, r5.xxyz, cb0[25].xxyz
mad r7.xyz, r5.xyzx, cb0[25].xyzx, -cb0[26].xyzx
max r2.w, |r7.y|, |r7.x|
max r2.w, |r7.z|, r2.w
mul r2.w, r2.w, l(4.000000)
log r2.w, r2.w
max r2.w, r2.w, l(0.000000)
round_ni r2.w, r2.w
max r0.x, r0.x, r2.w
exp r2.w, r0.x
div r7.xyz, r0.yzwy, r2.wwww
frc r7.xyz, r7.xyzx
mul r0.x, r0.x, l(0.142857149)
mad r7.w, r7.z, l(0.142857149), r0.x
mul r9.xyz, cb0[27].xyzx, l(1.000000, 1.000000, 7.000000, 0.000000)
mul r7.xyz, r7.xywx, r9.xyzx
round_ni r7.xyz, r7.xyzx
add r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
div r7.xyz, r7.xyzx, r9.xyzx
sample_l_indexable(texture3d)(float,float,float,float) r7.xyzw, r7.xyzx, t4.xyzw, s3, l(0.000000)
mul r7.xyzw, r7.xyzw, l(255.000000, 255.000000, 255.000000, 255.000000)
div r9.xyz, cb0[27].xyzx, r7.wwww
mul r0.xyz, r0.yzwy, r9.xyzx
frc r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(0.666666687, 0.666666687, 0.666666687, 0.000000), r7.xyzx
add r0.xyz, r0.xyzx, l(0.166666672, 0.166666672, 0.166666672, 0.000000)
mul r0.xyz, r0.xyzx, cb0[28].xyzx
sample_l_indexable(texture3d)(float,float,float,float) r7.xyzw, r0.xyzx, t5.xyzw, s4, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r9.xyzw, r0.xyzx, t6.xyzw, s4, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r10.xyzw, r0.xyzx, t7.xyzw, s4, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r0.x, r0.xyzx, t8.yxzw, s4, l(0.000000)
dp3 r0.y, r7.yzwy, r7.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r7.yzw, r0.yyyy, r7.yyzw
dp3 r0.y, r1.xyzx, r7.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r7.x
add r2.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r2.w, r2.w, r3.w
mad r7.yz, r0.zzzz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r7.y
exp r0.y, r0.y
mul r0.z, r0.y, r7.z
mad r0.y, -r7.z, r0.y, l(1.000000)
mad r0.y, r2.w, r0.y, r0.z
mul r0.y, r0.y, r7.x
movc r7.x, r0.w, r0.y, r7.x
dp3 r0.y, r9.yzwy, r9.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r9.yzw, r0.yyyy, r9.yyzw
dp3 r0.y, r1.xyzx, r9.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r9.x
add r2.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r2.w, r2.w, r3.w
mad r9.yz, r0.zzzz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r9.y
exp r0.y, r0.y
mul r0.z, r0.y, r9.z
mad r0.y, -r9.z, r0.y, l(1.000000)
mad r0.y, r2.w, r0.y, r0.z
mul r0.y, r0.y, r9.x
movc r7.y, r0.w, r0.y, r9.x
dp3 r0.y, r10.yzwy, r10.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r9.xyz, r0.yyyy, r10.yzwy
dp3 r0.y, r1.xyzx, r9.xyzx
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r10.x
add r2.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r2.w, r2.w, r3.w
mad r9.xy, r0.zzzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(1.000000, 2.000000, 0.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r9.x
exp r0.y, r0.y
mul r0.z, r0.y, r9.y
mad r0.y, -r9.y, r0.y, l(1.000000)
mad r0.y, r2.w, r0.y, r0.z
mul r0.y, r0.y, r10.x
movc r7.z, r0.w, r0.y, r10.x
max r0.yzw, r7.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
mov r1.w, l(1.000000)
dp4 r7.x, r32.xyzw, r1.xyzw
dp4 r7.y, r33.xyzw, r1.xyzw
dp4 r7.z, r34.xyzw, r1.xyzw
mul r9.xyzw, r1.yzzx, r1.xyzz
dp4 r10.x, r35.xyzw, r9.xyzw
dp4 r10.y, r36.xyzw, r9.xyzw
dp4 r10.z, r37.xyzw, r9.xyzw
mul r1.y, r1.y, r1.y
mad r1.x, r1.x, r1.x, -r1.y
add r1.yzw, r7.xxyz, r10.xxyz
mad r1.xyz, r38.xyzx, r1.xxxx, r1.yzwy
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.xyz, r8.xyzx, r1.xyzx
mad r0.xyz, r1.xyzx, r0.xxxx, r0.yzwy
add r1.xyz, r5.xyzx, v5.xyzx
add r7.xyz, r1.xyzx, -r27.xyzx
mul r8.xyz, r7.xyzx, r29.xyzx
add r1.xyz, r1.xyzx, -r28.xyzx
mul r1.xyz, r1.xyzx, r30.xyzx
mad r7.xyz, r7.xyzx, r29.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r7.xyz, -|r7.xyzx|, l(0.500000, 0.500000, 0.500000, 0.000000)
mul_sat r7.xyz, r7.xyzx, l(6.000000, 6.000000, 6.000000, 0.000000)
mul r0.w, r7.y, r7.x
mul r0.w, r7.z, r0.w
sample_l_indexable(texture3d)(float,float,float,float) r7.xyz, r8.xyzx, t2.xyzw, s2, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r1.xyz, r1.xyzx, t3.xyzw, s2, l(0.000000)
add r7.xyz, -r1.xyzx, r7.xyzx
mad r1.xyz, r0.wwww, r7.xyzx, r1.xyzx
mul r1.xyz, r3.xyzx, r1.xyzx
mul r7.xyz, r1.xyzx, l(0.886227548, 0.886227548, 0.886227548, 0.000000)
mad r6.xyz, r6.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r3.xyzx
mad r1.xyz, -r1.xyzx, l(0.886227548, 0.886227548, 0.886227548, 0.000000), r6.xyzx
mad r1.xyz, r26.xxxx, r1.xyzx, r7.xyzx
max r4.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), r25.x
if_nz r0.w
  add r2.xyz, r5.xyzx, -cb3[8].xyzx
  add r6.xyz, cb3[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r2.xyz, r6.xyzx, |r2.xyzx|
  or r0.w, r2.y, r2.x
  or r0.w, r2.z, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r2.yzw, r1.wwww, l(0,0,1.000000,1.000000), l(0,1.000000,1.000000,0)
  mov r2.x, l(1.000000)
  movc r4.xyzw, r0.wwww, r2.yzwx, r4.xyzw
  mov o0.w, r4.w
else 
  mov o0.w, r4.w
endif 
mad r0.xyz, r0.xyzx, r3.xyzx, r1.xyzx
add r0.xyz, r4.xyzx, r0.xyzx
mad o0.xyz, r0.xyzx, v7.wwww, v7.xyzx
ret 
// Approximately 0 instruction slots used