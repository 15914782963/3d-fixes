// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 491f49c807f5c2e2-vs.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:43:28 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz 
// ATTRIBUTE                1   xyz         1     NONE   float   xyz 
// ATTRIBUTE                2   xyzw        2     NONE   float   xyzw
// ATTRIBUTE                3   xyzw        3     NONE    uint   xyzw
// ATTRIBUTE               14   xyzw        4     NONE    uint   xyzw
// ATTRIBUTE                4   xyzw        5     NONE   float   xyzw
// ATTRIBUTE               15   xyzw        6     NONE   float   xyzw
// ATTRIBUTE                5   xy          7     NONE   float   xy  
// ATTRIBUTE                9   xyz         8     NONE   float   xyz 
// ATTRIBUTE               10   xyz         9     NONE   float   xyz 
// ATTRIBUTE               13   xyzw       10     NONE   float   xyzw
// SV_InstanceID            0   x          11   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyzw
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// COLOR                    0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x   
// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
// SV_POSITION              0   xyzw        6      POS   float   xyzw
// SV_ClipDistance          1   x           7  CLIPDST   float   x   
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} }
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[165], immediateIndexed
dcl_constantbuffer cb2[165], immediateIndexed
dcl_constantbuffer cb3[15], immediateIndexed
dcl_constantbuffer cb4[13], immediateIndexed
dcl_constantbuffer cb5[29], immediateIndexed
dcl_constantbuffer cb6[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_input v7.xy
dcl_input v8.xyz
dcl_input v9.xyz
dcl_input v10.xyzw
dcl_input_sgv v11.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xy
dcl_output o4.x
dcl_output o5.xyzw
dcl_output_siv o6.xyzw, position
dcl_output_siv o7.x, clip_distance
dcl_temps 26
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 2048
// Disables driver stereo correction:
dcl_constantbuffer cb12[4], immediateIndexed

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 491f49c807f5c2e2-vs.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(16), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(48), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(1), l(576), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 491f49c807f5c2e2-vs.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(0), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(16), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(0), l(32), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(0), l(48), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(1), l(576), t102.xyzw

and r0.x, v11.x, l(1)
if_z r0.x
  mov r1.x, r14.x
  mov r1.y, r15.x
  mov r1.z, r16.x
  mov r1.w, r17.x
  mov r2.x, r14.y
  mov r2.y, r15.y
  mov r2.z, r16.y
  mov r2.w, r17.y
  mov r3.x, r14.z
  mov r3.y, r15.z
  mov r3.z, r16.z
  mov r3.w, r17.z
  mov r4.x, r14.w
  mov r4.y, r15.w
  mov r4.z, r16.w
  mov r4.w, r17.w
  mov r0.yzw, r18.xxyz
  mov r5.x, r19.y
else 
  mov r1.x, r20.x
  mov r1.y, r21.x
  mov r1.z, r22.x
  mov r1.w, r23.x
  mov r2.x, r20.y
  mov r2.y, r21.y
  mov r2.z, r22.y
  mov r2.w, r23.y
  mov r3.x, r20.z
  mov r3.y, r21.z
  mov r3.z, r22.z
  mov r3.w, r23.z
  mov r4.x, r20.w
  mov r4.y, r21.w
  mov r4.z, r22.w
  mov r4.w, r23.w
  mov r0.yzw, r24.xxyz
  mov r5.x, r25.y
endif 
mad r5.yzw, v0.xxyz, cb0[8].xxyz, cb0[7].xxyz
imul null, r6.xyzw, v3.xyzw, l(3, 3, 3, 3)
ld_indexable(buffer)(float,float,float,float) r7.xyzw, r6.xxxx, t0.xyzw
imad r8.xyzw, v3.xxyy, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r9.xyzw, r8.xxxx, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r10.xyzw, r8.yyyy, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r11.xyzw, r6.yyyy, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r12.xyzw, r8.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r8.wwww, t0.xyzw
mul r11.xyzw, r11.xyzw, v5.yyyy
mul r12.xyzw, r12.xyzw, v5.yyyy
mul r8.xyzw, r8.xyzw, v5.yyyy
mad r7.xyzw, v5.xxxx, r7.xyzw, r11.xyzw
mad r9.xyzw, v5.xxxx, r9.xyzw, r12.xyzw
mad r8.xyzw, v5.xxxx, r10.xyzw, r8.xyzw
ld_indexable(buffer)(float,float,float,float) r10.xyzw, r6.zzzz, t0.xyzw
imad r11.xyzw, v3.zzww, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r12.xyzw, r11.xxxx, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r13.xyzw, r11.yyyy, t0.xyzw
mad r7.xyzw, v5.zzzz, r10.xyzw, r7.xyzw
mad r9.xyzw, v5.zzzz, r12.xyzw, r9.xyzw
mad r8.xyzw, v5.zzzz, r13.xyzw, r8.xyzw
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r6.wwww, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r10.xyzw, r11.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r11.xyzw, r11.wwww, t0.xyzw
mad r6.xyzw, v5.wwww, r6.xyzw, r7.xyzw
mad r7.xyzw, v5.wwww, r10.xyzw, r9.xyzw
mad r8.xyzw, v5.wwww, r11.xyzw, r8.xyzw
imul null, r9.xyzw, v4.xyzw, l(3, 3, 3, 3)
ld_indexable(buffer)(float,float,float,float) r10.xyzw, r9.xxxx, t0.xyzw
imad r11.xyzw, v4.xxyy, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r12.xyzw, r11.xxxx, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r13.xyzw, r11.yyyy, t0.xyzw
mad r6.xyzw, v6.xxxx, r10.xyzw, r6.xyzw
mad r7.xyzw, v6.xxxx, r12.xyzw, r7.xyzw
mad r8.xyzw, v6.xxxx, r13.xyzw, r8.xyzw
ld_indexable(buffer)(float,float,float,float) r10.xyzw, r9.yyyy, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r12.xyzw, r11.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r11.xyzw, r11.wwww, t0.xyzw
mad r6.xyzw, v6.yyyy, r10.xyzw, r6.xyzw
mad r7.xyzw, v6.yyyy, r12.xyzw, r7.xyzw
mad r8.xyzw, v6.yyyy, r11.xyzw, r8.xyzw
ld_indexable(buffer)(float,float,float,float) r10.xyzw, r9.zzzz, t0.xyzw
imad r11.xyzw, v4.zzww, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r12.xyzw, r11.xxxx, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r13.xyzw, r11.yyyy, t0.xyzw
mad r6.xyzw, v6.zzzz, r10.xyzw, r6.xyzw
mad r7.xyzw, v6.zzzz, r12.xyzw, r7.xyzw
mad r8.xyzw, v6.zzzz, r13.xyzw, r8.xyzw
ld_indexable(buffer)(float,float,float,float) r9.xyzw, r9.wwww, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r10.xyzw, r11.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r11.xyzw, r11.wwww, t0.xyzw
mad r6.xyzw, v6.wwww, r9.xyzw, r6.xyzw
mad r7.xyzw, v6.wwww, r10.xyzw, r7.xyzw
mad r8.xyzw, v6.wwww, r11.xyzw, r8.xyzw
mad r9.xyz, v1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r10.xyz, v2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), v9.xyzx
add r10.xyz, r10.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r9.w, r10.xyzx, r10.xyzx
rsq r9.w, r9.w
mul r10.xyz, r9.wwww, r10.xyzx
dp3 r9.w, r9.xyzx, r10.xyzx
mad r9.xyz, -r9.wwww, r10.xyzx, r9.xyzx
dp3 r9.w, r9.xyzx, r9.xyzx
rsq r9.w, r9.w
mul r9.xyz, r9.wwww, r9.xyzx
dp3 r9.w, r6.xyzx, r9.xyzx
dp3 r10.w, r7.xyzx, r9.xyzx
dp3 r9.x, r8.xyzx, r9.xyzx
dp3 r9.y, r6.xyzx, r10.xyzx
dp3 r9.z, r7.xyzx, r10.xyzx
dp3 r10.x, r8.xyzx, r10.xyzx
add r11.xyz, r5.yzwy, v8.xyzx
mov r11.w, l(1.000000)
dp4 r5.y, r6.xyzw, r11.xyzw
dp4 r5.z, r7.xyzw, r11.xyzw
dp4 r5.w, r8.xyzw, r11.xyzw
mul r6.xyz, r5.zzzz, cb3[1].xyzx
mad r6.xyz, cb3[0].xyzx, r5.yyyy, r6.xyzx
mad r5.yzw, cb3[2].xxyz, r5.wwww, r6.xxyz
add r0.yzw, r0.yyzw, cb3[3].xxyz
add r0.yzw, r0.yyzw, r5.yyzw
mul r5.yzw, r9.zzzz, cb3[1].xxyz
mad r5.yzw, r9.yyyy, cb3[0].xxyz, r5.yyzw
mad r5.yzw, r10.xxxx, cb3[2].xxyz, r5.yyzw
mad r6.xyz, r5.yzwy, cb6[5].zzzz, r0.yzwy
mov r6.w, l(1.000000)
dp4 r1.x, r6.xyzw, r1.xyzw
dp4 r1.y, r6.xyzw, r2.xyzw
dp4 r1.z, r6.xyzw, r3.xyzw
dp4 r1.w, r6.xyzw, r4.xyzw
if_nz cb0[0].x
  mov r2.x, icb[r0.x + 0].x
  mov r2.y, l(1.000000)
  dp2 o7.x, r1.xwxx, r2.xyxx
  mul r0.y, r5.x, l(0.500000)
  mul r0.z, r1.w, icb[r0.x + 0].x
  mad r0.w, -r5.x, l(0.500000), l(1.000000)
  mul r0.z, r0.w, r0.z
  mad r1.x, r1.x, r0.y, r0.z
else 
  mov o7.x, l(0)
endif 
mul r0.yzw, cb3[0].xxyz, cb3[14].xxxx
mul r2.xyz, cb3[1].xyzx, cb3[14].yyyy
mul r3.xyz, cb3[2].xyzx, cb3[14].zzzz
mul r4.xyz, r2.xyzx, r10.wwww
mad r4.xyz, r9.wwww, r0.yzwy, r4.xyzx
mad o0.xyz, r9.xxxx, r3.xyzx, r4.xyzx
mul r2.xyz, r2.xyzx, r9.zzzz
mad r0.yzw, r9.yyyy, r0.yyzw, r2.xxyz
mad o1.xyz, r10.xxxx, r3.xyzx, r0.yzwy
mad r0.y, v2.w, l(2.000000), l(-1.000000)
mul o1.w, r0.y, cb3[9].w
movc r0.y, cb0[0].x, l(1), l(0)
imad o4.x, r0.y, l(0x80000000), r0.x
add r0.xyz, r6.xyzx, -r18.xyzx
mul r2.xyz, r0.yyyy, cb4[1].xywx
mad r2.xyz, r0.xxxx, cb4[0].xywx, r2.xyzx
mad r2.xyz, r0.zzzz, cb4[2].xywx, r2.xyzx
add r2.xyz, r2.xyzx, cb4[3].xywx
div r2.xy, r2.xyxx, r2.zzzz
add r0.xyz, r0.xyzx, -cb4[12].xyzx
mul r0.y, r0.y, cb4[9].z
mad r0.x, r0.x, cb4[8].z, r0.y
mad r0.x, r0.z, cb4[10].z, r0.x
add r0.x, r0.x, cb4[11].z
mad r2.xy, r2.xyxx, cb5[26].xyxx, cb5[26].xyxx
add r0.x, r0.x, -cb4[12].w
div r0.x, r0.x, cb5[28].w
rsq r0.x, r0.x
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
itof r0.y, cb5[27].z
mul r2.z, r0.y, r0.x
mul r0.xyz, r2.xyzx, cb5[28].xyzx
sample_l_indexable(texture3d)(float,float,float,float) o5.xyzw, r0.xyzx, t1.xyzw, s0, l(0.000000)
mov o0.w, l(0)
mov o2.xyzw, v10.xyzw
mov o6.xyzw, r1.xyzw
mov o3.xy, v7.xyxx
ret 
// Approximately 0 instruction slots used