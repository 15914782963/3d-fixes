// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 510a57f0a177b952-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 14:20:45 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz 
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// COLOR                    0   xyzw        2     NONE   float    y  
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x   
// VELOCITY_PREV_POS        0   xyzw        5     NONE   float   xyzw
// TEXCOORD                 9   xyz         6     NONE   float   xyz 
// SV_Position              0   xyzw        7      POS   float   xyzw
// SV_IsFrontFace           0   x           8    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
// SV_Target                5   xyzw        5   TARGET   float   xyzw
// SV_Target                6   xyzw        6   TARGET   float   xyzw
// SV_Target                7   xyzw        7   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[33], immediateIndexed
dcl_constantbuffer cb1[135], immediateIndexed
dcl_constantbuffer cb2[123], immediateIndexed
dcl_constantbuffer cb3[20], immediateIndexed
dcl_constantbuffer cb4[6], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_constantbuffer cb6[19], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t11
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.y
dcl_input_ps linear v3.xy
dcl_input_ps constant v4.x
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps_siv linear noperspective v7.xyzw, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 34
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 1968

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 510a57f0a177b952-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r10.xyzw, l(0), l(416), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r11.xyzw, l(0), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(592), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(624), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(992), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(1936), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(1952), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(2016), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(2032), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(1), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(1), l(16), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(1), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(1), l(96), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 510a57f0a177b952-ps.txt
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r25.xyzw, l(0), l(416), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r26.xyzw, l(0), l(576), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r27.xyzw, l(0), l(592), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r28.xyzw, l(0), l(608), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r29.xyzw, l(0), l(624), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r30.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r31.xyzw, l(0), l(992), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r32.xyzw, l(0), l(1936), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r33.xyzw, l(0), l(1952), t102.xyzw

and r0.x, v4.x, l(1)
if_z r0.x
  mov r0.x, r11.x
  mov r0.y, r12.x
  mov r0.z, r13.x
  mov r0.w, r14.x
  mov r1.x, r11.y
  mov r1.y, r12.y
  mov r1.z, r13.y
  mov r1.w, r14.y
  mov r2.x, r11.z
  mov r2.y, r12.z
  mov r2.z, r13.z
  mov r2.w, r14.z
  mov r3.x, r11.w
  mov r3.y, r12.w
  mov r3.z, r13.w
  mov r3.w, r14.w
  mov r4.xy, r17.xyxx
  mov r4.zw, r18.zzzw
  mov r5.xyz, r15.xyzx
  mov r6.xy, r10.xyxx
  mov r6.zw, r16.xxxy
else 
  mov r0.x, r26.x
  mov r0.y, r27.x
  mov r0.z, r28.x
  mov r0.w, r29.x
  mov r1.x, r26.y
  mov r1.y, r27.y
  mov r1.z, r28.y
  mov r1.w, r29.y
  mov r2.x, r26.z
  mov r2.y, r27.z
  mov r2.z, r28.z
  mov r2.w, r29.z
  mov r3.x, r26.w
  mov r3.y, r27.w
  mov r3.z, r28.w
  mov r3.w, r29.w
  mov r4.xy, r32.xyxx
  mov r4.zw, r33.zzzw
  mov r5.xyz, r30.xyzx
  mov r6.xy, r25.xyxx
  mov r6.zw, r31.xxxy
endif 
mul r7.xyz, v0.yzxy, v1.zxyz
mad r7.xyz, v1.yzxy, v0.zxyz, -r7.xyzx
mul r7.xyz, r7.xyzx, v1.wwww
add r4.xy, -r4.xyxx, v7.xyxx
mad r4.xy, r4.xyxx, r4.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, v7.wwww
mov r4.z, v7.w
mul r4.xyz, r4.xyzx, l(2.000000, -2.000000, 1.000000, 0.000000)
mov r8.xyz, v7.xyzx
mov r8.w, l(1.000000)
dp4 r0.x, r8.xyzw, r0.xyzw
dp4 r0.y, r8.xyzw, r1.xyzw
dp4 r0.z, r8.xyzw, r2.xyzw
dp4 r0.w, r8.xyzw, r3.xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r1.xyz, -r5.xyzx, r0.xyzx
add r2.xyz, -r5.xyzx, v6.xyzx
div r2.xyz, r2.xyzx, cb6[4].xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xy, r2.xzxx, t0.xyzw, s0
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r3.xyxx, r3.xyxx
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
sqrt r3.z, r0.w
sample_indexable(texture2d)(float,float,float,float) r5.xy, r2.yzyy, t0.xyzw, s0
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r5.xyxx, r5.xyxx
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
sqrt r5.z, r0.w
add r0.w, -cb6[6].x, cb6[15].z
mad_sat r8.xy, |v1.xzxx|, r0.wwww, cb6[6].xxxx
add r5.xyz, -r3.xyzx, r5.xyzx
mad r3.xyz, r8.xxxx, r5.xyzx, r3.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.xy, r2.xyxx, t0.xyzw, s0
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r5.xyxx, r5.xyxx
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
sqrt r5.z, r0.w
add r5.xyz, -r3.xyzx, r5.xyzx
mad r3.xyz, r8.yyyy, r5.xyzx, r3.xyzx
mul r5.xy, v3.xyxx, cb6[15].wwww
sample_indexable(texture2d)(float,float,float,float) r5.zw, r5.xyxx, t1.zwxy, s0
mad r9.xy, r5.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r9.xyxx, r9.xyxx
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
sqrt r9.z, r0.w
sample_indexable(texture2d)(float,float,float,float) r0.w, r2.xzxx, t2.yzwx, s0
sample_indexable(texture2d)(float,float,float,float) r1.w, r2.yzyy, t2.yzwx, s0
add r1.w, -r0.w, r1.w
mad r0.w, r8.x, r1.w, r0.w
sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t2.yzwx, s0
add r1.w, -r0.w, r1.w
mad r0.w, r8.y, r1.w, r0.w
add r1.w, -r0.w, v2.y
div_sat r1.w, r1.w, cb6[16].y
add r9.xyz, -r3.xyzx, r9.xyzx
mad r3.xyz, r1.wwww, r9.xyzx, r3.xyzx
mad r3.xyz, r3.xyzx, r21.wwww, r21.xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx
mul r7.xyz, r7.xyzx, r3.yyyy
mad r3.xyw, r3.xxxx, v0.xyxz, r7.xyxz
mad r3.xyz, r3.zzzz, v1.xyzx, r3.xywx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx
sample_indexable(texture2d)(float,float,float,float) r7.xyz, r2.xzxx, t3.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r2.yzyy, t3.xyzw, s0
add r9.xyz, -r7.xyzx, r9.xyzx
mad r7.xyz, r8.xxxx, r9.xyzx, r7.xyzx
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r2.xyxx, t3.xyzw, s0
add r9.xyz, -r7.xyzx, r9.xyzx
mad r7.xyz, r8.yyyy, r9.xyzx, r7.xyzx
mul r7.xyz, r7.xyzx, cb6[12].xyzx
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r5.xyxx, t4.xyzw, s0
add r0.w, -r0.w, -v2.y
add r0.w, r0.w, l(1.000000)
div_sat r5.zw, r0.wwww, cb6[16].yyyw
add r0.w, -r5.z, l(1.000000)
mad r9.xyz, cb6[14].xyzx, r9.xyzx, -r7.xyzx
mad r7.xyz, r0.wwww, r9.xyzx, r7.xyzx
add r0.w, -r5.w, r5.z
add r0.w, -r0.w, l(1.000000)
add r2.w, -r0.w, l(1.000000)
mad r0.w, cb6[17].x, r2.w, r0.w
mul r2.w, cb5[0].x, cb6[17].y
mad_sat r7.xyz, r7.xyzx, r0.wwww, -r2.wwww
mul_sat r7.xyz, r7.xyzx, cb6[9].xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, r2.xzxx, t5.yzwx, s0
sample_indexable(texture2d)(float,float,float,float) r2.z, r2.yzyy, t5.yzxw, s0
add r2.z, -r0.w, r2.z
mad r0.w, r8.x, r2.z, r0.w
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t5.xyzw, s0
add r2.x, -r0.w, r2.x
mad r0.w, r8.y, r2.x, r0.w
add r0.w, r0.w, cb6[17].w
sample_indexable(texture2d)(float,float,float,float) r2.x, r5.xyxx, t6.xyzw, s0
add r2.x, r2.x, cb6[18].x
add r2.x, -r0.w, r2.x
mad r0.w, r1.w, r2.x, r0.w
mad_sat r0.w, -cb5[0].x, cb6[18].y, r0.w
mov_sat r1.w, cb6[17].z
mad o2.z, r0.w, r22.y, r22.x
lt r0.w, l(0.000000), cb3[11].y
movc o6.x, r0.w, cb4[5].x, cb3[19].z
div r2.xy, r4.xyxx, r4.zzzz
div r2.zw, v5.xxxy, v5.wwww
add r2.xyzw, -r6.xyzw, r2.xyzw
add r2.xy, -r2.zwzz, r2.xyxx
mad r2.xy, r2.xyxx, l(0.249500, 0.249500, 0.000000, 0.000000), l(0.499992371, 0.499992371, 0.000000, 0.000000)
mul o4.xy, r2.xyxx, v5.zzzz
mov o4.zw, l(0,0,0,0)
add r2.xyz, r7.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r4.xyz, -r7.xyzx, r1.wwww, r7.xyzx
mad r4.xyz, r4.xyzx, r19.wwww, r19.xyzx
mad r2.xyz, r2.xyzx, r20.wwww, r20.xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
div r0.x, r0.x, cb0[32].w
log r0.x, r0.x
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(6.000000)
round_pi r0.x, r0.x
mul r0.yzw, r1.xxyz, cb0[29].xxyz
mad r5.xyz, r1.xyzx, cb0[29].xyzx, -cb0[30].xyzx
max r2.w, |r5.y|, |r5.x|
max r2.w, |r5.z|, r2.w
mul r2.w, r2.w, l(4.000000)
log r2.w, r2.w
max r2.w, r2.w, l(0.000000)
round_ni r2.w, r2.w
max r0.x, r0.x, r2.w
exp r2.w, r0.x
div r5.xyz, r0.yzwy, r2.wwww
frc r5.xyz, r5.xyzx
mul r0.x, r0.x, l(0.142857149)
mad r5.w, r5.z, l(0.142857149), r0.x
mul r6.xyz, cb0[31].xyzx, l(1.000000, 1.000000, 7.000000, 0.000000)
mul r5.xyz, r5.xywx, r6.xyzx
round_ni r5.xyz, r5.xyzx
add r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
div r5.xyz, r5.xyzx, r6.xyzx
sample_l_indexable(texture3d)(float,float,float,float) r5.xyzw, r5.xyzx, t7.xyzw, s1, l(0.000000)
mul r5.xyzw, r5.xyzw, l(255.000000, 255.000000, 255.000000, 255.000000)
div r6.xyz, cb0[31].xyzx, r5.wwww
mul r0.xyz, r0.yzwy, r6.xyzx
frc r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(0.666666687, 0.666666687, 0.666666687, 0.000000), r5.xyzx
add r0.xyz, r0.xyzx, l(0.166666672, 0.166666672, 0.166666672, 0.000000)
mul r0.xyz, r0.xyzx, cb0[32].xyzx
sample_l_indexable(texture3d)(float,float,float,float) r5.xyzw, r0.xyzx, t8.xyzw, s2, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r0.xyzx, t9.xyzw, s2, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r0.xyzx, t10.xyzw, s2, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r0.x, r0.xyzx, t11.yxzw, s2, l(0.000000)
dp3 r0.y, r5.yzwy, r5.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r5.yzw, r0.yyyy, r5.yyzw
dp3 r0.y, r3.xyzx, r5.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r5.x
add r2.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r2.w, r2.w, r3.w
mad r5.yz, r0.zzzz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r5.y
exp r0.y, r0.y
mul r0.z, r0.y, r5.z
mad r0.y, -r5.z, r0.y, l(1.000000)
mad r0.y, r2.w, r0.y, r0.z
mul r0.y, r0.y, r5.x
movc r5.x, r0.w, r0.y, r5.x
dp3 r0.y, r6.yzwy, r6.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r6.yzw, r0.yyyy, r6.yyzw
dp3 r0.y, r3.xyzx, r6.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r6.x
add r2.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r2.w, r2.w, r3.w
mad r6.yz, r0.zzzz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r6.y
exp r0.y, r0.y
mul r0.z, r0.y, r6.z
mad r0.y, -r6.z, r0.y, l(1.000000)
mad r0.y, r2.w, r0.y, r0.z
mul r0.y, r0.y, r6.x
movc r5.y, r0.w, r0.y, r6.x
dp3 r0.y, r8.yzwy, r8.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r8.yzwy
dp3 r0.y, r3.xyzx, r6.xyzx
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r8.x
add r2.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r2.w, r2.w, r3.w
mad r6.xy, r0.zzzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(1.000000, 2.000000, 0.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r6.x
exp r0.y, r0.y
mul r0.z, r0.y, r6.y
mad r0.y, -r6.y, r0.y, l(1.000000)
mad r0.y, r2.w, r0.y, r0.z
mul r0.y, r0.y, r8.x
movc r5.z, r0.w, r0.y, r8.x
max r0.yzw, r5.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.yzw, r4.xxyz, r0.yyzw
mad r2.xyz, r2.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r4.xyzx
max r4.xyz, cb6[8].xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.w, l(0.000000), r23.x
if_nz r2.w
  add r5.xyz, r1.xyzx, -cb3[8].xyzx
  add r6.xyz, cb3[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r5.xyz, r6.xyzx, |r5.xyzx|
  or r2.w, r5.y, r5.x
  or r2.w, r5.z, r2.w
  dp3 r1.x, r1.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.x, r1.x, l(0.002000)
  frc r1.x, r1.x
  lt r1.x, l(0.500000), r1.x
  movc r1.xyz, r1.xxxx, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r4.xyz, r2.wwww, r1.xyzx, r4.xyzx
endif 
mad r0.yzw, r24.xxxx, r2.xxyz, r0.yyzw
add o0.xyz, r4.xyzx, r0.yzwy
mul r0.yzw, v7.xxyx, l(0.000000, 0.00781250000, 0.00781250000, 0.00781250000)
frc r0.yzw, r0.yyzw
mad r0.yzw, r0.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000), l(0.000000, -64.340622, -72.465622, -64.340622)
mul r0.yzw, r0.yyzz, r0.yyzw
dp3 r0.y, r0.yzwy, l(20.390625, 60.703125, 2.42812085, 0.000000)
frc r0.y, r0.y
add r0.y, r0.y, l(-0.500000)
mad o1.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mul o3.w, r0.y, l(0.00392156886)
mov_sat r0.x, r0.x
sqrt o7.xyzw, r0.xxxx
mov o0.w, l(0)
mov o1.w, cb3[11].x
mov o2.yw, l(0,0.500000,0,0.0666666701)
mov o2.x, r1.w
mov o3.xyz, r7.xyzx
mov o5.xyzw, l(0,0,0,0)
mov o6.yzw, cb3[19].zzzz
ret 
// Approximately 0 instruction slots used