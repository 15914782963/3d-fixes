// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 881be9dbca0d8a8a-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 14:24:59 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xy  
// TEXCOORD                 4   xyz         1     NONE   float       
// TEXCOORD                 5   xyzw        2     NONE   float   xyzw
// PARTICLE_POSITION        0   xyzw        3     NONE   float   xyz 
// PARTICLE_VELOCITY        0   xyzw        4     NONE   float       
// PARTICLE_LIGHTING_OFFSET     0   xyz         5     NONE   float   xyz 
// TANGENTX                 0   xyzw        6     NONE   float   xyz 
// TANGENTZ                 0   xyzw        7     NONE   float   xyzw
// PARTICLE_SIZE            0   xy          8     NONE   float       
// PACKED_EYE_INDEX         0   x           9     NONE    uint   x   
// SV_Position              0   xyzw       10      POS   float   xyzw
// SV_IsFrontFace           0   x          11    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[29], immediateIndexed
dcl_constantbuffer cb1[164], immediateIndexed
dcl_constantbuffer cb2[157], immediateIndexed
dcl_constantbuffer cb3[10], immediateIndexed
dcl_constantbuffer cb4[5], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_input_ps linear v0.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyzw
dcl_input_ps constant v9.x
dcl_input_ps_siv linear noperspective v10.xyzw, position
dcl_output o0.xyzw
dcl_temps 47
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 2048

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 881be9dbca0d8a8a-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r11.xyzw, l(0), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(592), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(624), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(848), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(864), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(1936), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(1952), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(2016), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(2032), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(1), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(1), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(1), l(64), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(1), l(96), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r26.xyzw, l(1), l(144), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r27.xyzw, l(1), l(160), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r28.xyzw, l(1), l(176), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r29.xyzw, l(1), l(192), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r30.xyzw, l(1), l(448), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r31.xyzw, l(1), l(464), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r32.xyzw, l(1), l(480), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r33.xyzw, l(1), l(496), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r34.xyzw, l(1), l(512), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r35.xyzw, l(1), l(528), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r36.xyzw, l(1), l(544), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r37.xyzw, l(1), l(560), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 881be9dbca0d8a8a-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r38.xyzw, l(0), l(576), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r39.xyzw, l(0), l(592), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r40.xyzw, l(0), l(608), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r41.xyzw, l(0), l(624), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r42.xyzw, l(0), l(864), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r43.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r44.xyzw, l(0), l(1936), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r45.xyzw, l(0), l(1952), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r46.xyzw, l(1), l(448), t102.xyzw

and r0.x, v9.x, l(1)
if_z r0.x
  mov r0.x, r11.x
  mov r0.y, r12.x
  mov r0.z, r13.x
  mov r0.w, r14.x
  mov r1.x, r11.y
  mov r1.y, r12.y
  mov r1.z, r13.y
  mov r1.w, r14.y
  mov r2.x, r11.z
  mov r2.y, r12.z
  mov r2.z, r13.z
  mov r2.w, r14.z
  mov r3.x, r11.w
  mov r3.y, r12.w
  mov r3.z, r13.w
  mov r3.w, r14.w
  mov r4.xy, r18.xyxx
  mov r4.zw, r19.zzzw
  mov r5.xyz, r17.xyzx
  mov r6.xyz, r30.xyzx
  mov r7.xyzw, r16.xyzw
else 
  mov r0.x, r38.x
  mov r0.y, r39.x
  mov r0.z, r40.x
  mov r0.w, r41.x
  mov r1.x, r38.y
  mov r1.y, r39.y
  mov r1.z, r40.y
  mov r1.w, r41.y
  mov r2.x, r38.z
  mov r2.y, r39.z
  mov r2.z, r40.z
  mov r2.w, r41.z
  mov r3.x, r38.w
  mov r3.y, r39.w
  mov r3.z, r40.w
  mov r3.w, r41.w
  mov r4.xy, r44.xyxx
  mov r4.zw, r45.zzzw
  mov r5.xyz, r43.xyzx
  mov r6.xyz, r46.xyzx
  mov r7.xyzw, r42.xyzw
endif 
mul r8.xyz, v6.yzxy, v7.zxyz
mad r8.xyz, v7.yzxy, v6.zxyz, -r8.xyzx
mul r8.xyz, r8.xyzx, v7.wwww
add r4.xy, -r4.xyxx, v10.xyxx
mad r4.xy, r4.xyxx, r4.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, v10.wwww
mov r4.z, v10.w
mul r4.xyw, r4.xyxz, l(2.000000, -2.000000, 0.000000, 1.000000)
mov r9.xyz, v10.xyzx
mov r9.w, l(1.000000)
dp4 r0.x, r9.xyzw, r0.xyzw
dp4 r0.y, r9.xyzw, r1.xyzw
dp4 r0.z, r9.xyzw, r2.xyzw
dp4 r0.w, r9.xyzw, r3.xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r1.xyz, -r5.xyzx, r0.xyzx
mad r2.xyz, r22.wwww, l(0.000000, 0.000000, 1.000000, 0.000000), r22.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
mul r3.xyz, r8.xyzx, r2.yyyy
mad r2.xyw, r2.xxxx, v6.xyxz, r3.xyxz
mad r2.xyz, r2.zzzz, v7.xyzx, r2.xywx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
div r3.xyzw, r4.xyxy, r4.wwww
mad r4.xy, r3.zwzz, r7.xyxx, r7.wzww
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t2.yzwx, s2, l(0.000000)
mad r1.w, r0.w, r15.x, r15.y
mad r0.w, r0.w, r15.z, -r15.w
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
add r0.w, r0.w, r1.w
div r7.xyzw, l(20.000000, 30.000000, -20.000000, -30.000000), r0.wwww
mad r3.xyzw, r7.xyzw, l(2.000000, -2.000000, 2.000000, -2.000000), r3.xyzw
max r3.xyzw, r3.xyzw, l(-0.999000, -0.999000, -0.999000, -0.999000)
min r3.xyzw, r3.xyzw, l(0.999000, 0.999000, 0.999000, 0.999000)
mad r3.xyzw, r3.xyzw, r16.xyxy, r16.wzwz
sample_indexable(texture2d)(float,float,float,float) r4.xyw, r3.xyxx, t3.xywz, s3
mul r4.xyw, r4.xyxw, r4.xyxw
mul r4.xyw, r4.xyxw, r4.xyxw
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zwzz, t3.xyzw, s3
mul r3.xyz, r3.xyzx, r3.xyzx
mul r3.xyz, r3.xyzx, r3.xyzx
mul r3.xyz, r3.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
mad r3.xyz, r4.xywx, l(10.000000, 10.000000, 10.000000, 0.000000), r3.xyzx
max r3.xyz, r3.xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
log r3.xyz, r3.xyzx
mul r3.xyz, r3.xyzx, l(1.200000, 1.200000, 1.200000, 0.000000)
exp r3.xyz, r3.xyzx
add r4.xyw, r3.xyxz, r3.xyxz
mad r3.xyz, r3.xyzx, cb6[6].xxxx, -r4.xywx
mad r3.xyz, cb4[4].xxxx, r3.xyzx, r4.xywx
add r3.xyz, r3.xyzx, cb6[1].xyzx
mad r0.w, r4.z, l(1.000000), l(-500.000000)
mul_sat r0.w, r0.w, l(-0.00333333341)
add r4.xyz, -r5.xyzx, v3.xyzx
dp3 r1.w, r4.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
add r4.y, r1.w, r24.z
mul r4.x, r4.y, l(0.400000)
mad r4.xy, v0.xyxx, l(0.500000, 1.000000, 0.000000, 0.000000), r4.xyxx
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t0.xyzw, s0
max r4.xyz, |r4.xyzx|, l(0.000001, 0.000001, 0.000001, 0.000000)
mul r5.xyz, r4.xyzx, r4.xyzx
mul r4.xyz, r4.xyzx, r5.xyzx
mad r5.xyz, r0.wwww, cb6[5].xyzx, -v2.xyzx
mad r4.xyz, r4.xyzx, r5.xyzx, v2.xyzx
max r4.yzw, |r4.xxyz|, l(0.000000, 0.000001, 0.000001, 0.000001)
log r4.yzw, r4.yyzw
mul r4.yzw, r4.yyzw, l(0.000000, 1.100000, 1.100000, 1.100000)
exp r4.yzw, r4.yyzw
add r0.w, -cb5[0].z, l(1.000000)
mad r0.w, r0.w, l(5.000000), l(2.000000)
mul r4.yzw, r0.wwww, r4.yyzw
mul_sat r4.yzw, r4.yyzw, cb6[2].xxyz
sample_indexable(texture2d)(float,float,float,float) r0.w, v0.xyxx, t1.yzwx, s1
mul_sat r0.w, r0.w, v2.w
mul_sat r5.w, r0.w, r4.x
mad r4.xyz, r4.yzwy, r20.wwww, r20.xyzx
mad r7.xyz, r21.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r21.xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
div r0.x, r0.x, cb0[28].w
log r0.x, r0.x
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(6.000000)
round_pi r0.x, r0.x
mul r0.yzw, r1.xxyz, cb0[25].xxyz
mad r8.xyz, r1.xyzx, cb0[25].xyzx, -cb0[26].xyzx
max r1.w, |r8.y|, |r8.x|
max r1.w, |r8.z|, r1.w
mul r1.w, r1.w, l(4.000000)
log r1.w, r1.w
max r1.w, r1.w, l(0.000000)
round_ni r1.w, r1.w
max r0.x, r0.x, r1.w
exp r1.w, r0.x
div r8.xyz, r0.yzwy, r1.wwww
frc r8.xyz, r8.xyzx
mul r0.x, r0.x, l(0.142857149)
mad r8.w, r8.z, l(0.142857149), r0.x
mul r9.xyz, cb0[27].xyzx, l(1.000000, 1.000000, 7.000000, 0.000000)
mul r8.xyz, r8.xywx, r9.xyzx
round_ni r8.xyz, r8.xyzx
add r8.xyz, r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
div r8.xyz, r8.xyzx, r9.xyzx
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r8.xyzx, t6.xyzw, s5, l(0.000000)
mul r8.xyzw, r8.xyzw, l(255.000000, 255.000000, 255.000000, 255.000000)
div r9.xyz, cb0[27].xyzx, r8.wwww
mul r0.xyz, r0.yzwy, r9.xyzx
frc r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(0.666666687, 0.666666687, 0.666666687, 0.000000), r8.xyzx
add r0.xyz, r0.xyzx, l(0.166666672, 0.166666672, 0.166666672, 0.000000)
mul r0.xyz, r0.xyzx, cb0[28].xyzx
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r0.xyzx, t7.xyzw, s6, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r9.xyzw, r0.xyzx, t8.xyzw, s6, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r10.xyzw, r0.xyzx, t9.xyzw, s6, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r0.x, r0.xyzx, t10.yxzw, s6, l(0.000000)
dp3 r0.y, r8.yzwy, r8.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r8.yzw, r0.yyyy, r8.yyzw
dp3 r0.y, r2.xyzx, r8.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r8.x
add r1.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r1.w, r1.w, r3.w
mad r8.yz, r0.zzzz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r8.y
exp r0.y, r0.y
mul r0.z, r0.y, r8.z
mad r0.y, -r8.z, r0.y, l(1.000000)
mad r0.y, r1.w, r0.y, r0.z
mul r0.y, r0.y, r8.x
movc r8.x, r0.w, r0.y, r8.x
dp3 r0.y, r9.yzwy, r9.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r9.yzw, r0.yyyy, r9.yyzw
dp3 r0.y, r2.xyzx, r9.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r9.x
add r1.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r1.w, r1.w, r3.w
mad r9.yz, r0.zzzz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r9.y
exp r0.y, r0.y
mul r0.z, r0.y, r9.z
mad r0.y, -r9.z, r0.y, l(1.000000)
mad r0.y, r1.w, r0.y, r0.z
mul r0.y, r0.y, r9.x
movc r8.y, r0.w, r0.y, r9.x
dp3 r0.y, r10.yzwy, r10.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r9.xyz, r0.yyyy, r10.yzwy
dp3 r0.y, r2.xyzx, r9.xyzx
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r10.x
add r1.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r1.w, r1.w, r3.w
mad r9.xy, r0.zzzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(1.000000, 2.000000, 0.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r9.x
exp r0.y, r0.y
mul r0.z, r0.y, r9.y
mad r0.y, -r9.y, r0.y, l(1.000000)
mad r0.y, r1.w, r0.y, r0.z
mul r0.y, r0.y, r10.x
movc r8.z, r0.w, r0.y, r10.x
max r0.yzw, r8.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
mov r2.w, l(1.000000)
dp4 r8.x, r31.xyzw, r2.xyzw
dp4 r8.y, r32.xyzw, r2.xyzw
dp4 r8.z, r33.xyzw, r2.xyzw
mul r9.xyzw, r2.yzzx, r2.xyzz
dp4 r10.x, r34.xyzw, r9.xyzw
dp4 r10.y, r35.xyzw, r9.xyzw
dp4 r10.z, r36.xyzw, r9.xyzw
mul r1.w, r2.y, r2.y
mad r1.w, r2.x, r2.x, -r1.w
add r2.xyz, r8.xyzx, r10.xyzx
mad r2.xyz, r37.xyzx, r1.wwww, r2.xyzx
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.xyz, r6.xyzx, r2.xyzx
mad r0.xyz, r2.xyzx, r0.xxxx, r0.yzwy
add r2.xyz, r1.xyzx, v5.xyzx
add r6.xyz, r2.xyzx, -r26.xyzx
mul r8.xyz, r6.xyzx, r28.xyzx
add r2.xyz, r2.xyzx, -r27.xyzx
mul r2.xyz, r2.xyzx, r29.xyzx
mad r6.xyz, r6.xyzx, r28.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r6.xyz, -|r6.xyzx|, l(0.500000, 0.500000, 0.500000, 0.000000)
mul_sat r6.xyz, r6.xyzx, l(6.000000, 6.000000, 6.000000, 0.000000)
mul r0.w, r6.y, r6.x
mul r0.w, r6.z, r0.w
sample_l_indexable(texture3d)(float,float,float,float) r6.xyz, r8.xyzx, t4.xyzw, s4, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r2.xyz, r2.xyzx, t5.xyzw, s4, l(0.000000)
add r6.xyz, -r2.xyzx, r6.xyzx
mad r2.xyz, r0.wwww, r6.xyzx, r2.xyzx
mul r2.xyz, r4.xyzx, r2.xyzx
mul r6.xyz, r2.xyzx, l(0.886227548, 0.886227548, 0.886227548, 0.000000)
mad r7.xyz, r7.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r4.xyzx
mad r2.xyz, -r2.xyzx, l(0.886227548, 0.886227548, 0.886227548, 0.000000), r7.xyzx
mad r2.xyz, r25.xxxx, r2.xyzx, r6.xyzx
max r5.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), r23.x
if_nz r0.w
  add r3.xyz, r1.xyzx, -cb3[8].xyzx
  add r6.xyz, cb3[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r3.xyz, r6.xyzx, |r3.xyzx|
  or r0.w, r3.y, r3.x
  or r0.w, r3.z, r0.w
  dp3 r1.x, r1.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.x, r1.x, l(0.002000)
  frc r1.x, r1.x
  lt r1.x, l(0.500000), r1.x
  movc r1.yzw, r1.xxxx, l(0,0,1.000000,1.000000), l(0,1.000000,1.000000,0)
  mov r1.x, l(1.000000)
  movc r5.xyzw, r0.wwww, r1.yzwx, r5.xyzw
  mov o0.w, r5.w
else 
  mov o0.w, r5.w
endif 
mad r0.xyz, r0.xyzx, r4.xyzx, r2.xyzx
add o0.xyz, r5.xyzx, r0.xyzx
ret 
// Approximately 0 instruction slots used