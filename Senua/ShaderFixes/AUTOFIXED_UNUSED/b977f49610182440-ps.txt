// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 b977f49610182440-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 14:24:18 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz 
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x   
// TEXCOORD                 7   xyzw        4     NONE   float   xyzw
// SV_Position              0   xyzw        5      POS   float   xyz 
// SV_IsFrontFace           0   x           6    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[164], immediateIndexed
dcl_constantbuffer cb2[157], immediateIndexed
dcl_constantbuffer cb3[10], immediateIndexed
dcl_constantbuffer cb4[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps linear v4.xyzw
dcl_input_ps_siv linear noperspective v5.xyz, position
dcl_output o0.xyzw
dcl_temps 38
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 2048

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 b977f49610182440-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r10.xyzw, l(0), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r11.xyzw, l(0), l(592), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(624), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(2016), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(2032), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(1), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(1), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(1), l(96), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(1), l(144), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(1), l(160), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(1), l(176), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(1), l(192), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(1), l(448), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(1), l(464), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r26.xyzw, l(1), l(480), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r27.xyzw, l(1), l(496), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r28.xyzw, l(1), l(512), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r29.xyzw, l(1), l(528), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r30.xyzw, l(1), l(544), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r31.xyzw, l(1), l(560), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 b977f49610182440-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r32.xyzw, l(0), l(576), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r33.xyzw, l(0), l(592), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r34.xyzw, l(0), l(608), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r35.xyzw, l(0), l(624), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r36.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r37.xyzw, l(1), l(448), t102.xyzw

and r0.x, v3.x, l(1)
if_z r0.x
  mov r0.x, r10.x
  mov r0.y, r11.x
  mov r0.z, r12.x
  mov r0.w, r13.x
  mov r1.x, r10.y
  mov r1.y, r11.y
  mov r1.z, r12.y
  mov r1.w, r13.y
  mov r2.x, r10.z
  mov r2.y, r11.z
  mov r2.z, r12.z
  mov r2.w, r13.z
  mov r3.x, r10.w
  mov r3.y, r11.w
  mov r3.z, r12.w
  mov r3.w, r13.w
  mov r4.xyz, r14.xyzx
  mov r5.xyz, r24.xyzx
else 
  mov r0.x, r32.x
  mov r0.y, r33.x
  mov r0.z, r34.x
  mov r0.w, r35.x
  mov r1.x, r32.y
  mov r1.y, r33.y
  mov r1.z, r34.y
  mov r1.w, r35.y
  mov r2.x, r32.z
  mov r2.y, r33.z
  mov r2.z, r34.z
  mov r2.w, r35.z
  mov r3.x, r32.w
  mov r3.y, r33.w
  mov r3.z, r34.w
  mov r3.w, r35.w
  mov r4.xyz, r36.xyzx
  mov r5.xyz, r37.xyzx
endif 
mul r6.xyz, v0.yzxy, v1.zxyz
mad r6.xyz, v1.yzxy, v0.zxyz, -r6.xyzx
mul r6.xyz, r6.xyzx, v1.wwww
mov r7.xyz, v5.xyzx
mov r7.w, l(1.000000)
dp4 r0.x, r7.xyzw, r0.xyzw
dp4 r0.y, r7.xyzw, r1.xyzw
dp4 r0.z, r7.xyzw, r2.xyzw
dp4 r0.w, r7.xyzw, r3.xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r1.xyz, -r4.xyzx, r0.xyzx
mad r2.xyz, r17.wwww, l(0.000000, 0.000000, 1.000000, 0.000000), r17.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
mul r3.xyz, r6.xyzx, r2.yyyy
mad r2.xyw, r2.xxxx, v0.xyxz, r3.xyxz
mad r2.xyz, r2.zzzz, v1.xyzx, r2.xywx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v2.xyxx, t0.xyzw, s0
mul_sat r3.xyz, r3.xyzx, cb4[3].xyzx
mul_sat r4.w, r3.w, cb4[5].x
mad r3.xyz, r3.xyzx, r15.wwww, r15.xyzx
mad r6.xyz, r16.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r16.xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
div r0.x, r0.x, cb0[33].w
log r0.x, r0.x
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(6.000000)
round_pi r0.x, r0.x
mul r0.yzw, r1.xxyz, cb0[30].xxyz
mad r7.xyz, r1.xyzx, cb0[30].xyzx, -cb0[31].xyzx
max r1.w, |r7.y|, |r7.x|
max r1.w, |r7.z|, r1.w
mul r1.w, r1.w, l(4.000000)
log r1.w, r1.w
max r1.w, r1.w, l(0.000000)
round_ni r1.w, r1.w
max r0.x, r0.x, r1.w
exp r1.w, r0.x
div r7.xyz, r0.yzwy, r1.wwww
frc r7.xyz, r7.xyzx
mul r0.x, r0.x, l(0.142857149)
mad r7.w, r7.z, l(0.142857149), r0.x
mul r8.xyz, cb0[32].xyzx, l(1.000000, 1.000000, 7.000000, 0.000000)
mul r7.xyz, r7.xywx, r8.xyzx
round_ni r7.xyz, r7.xyzx
add r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
div r7.xyz, r7.xyzx, r8.xyzx
sample_l_indexable(texture3d)(float,float,float,float) r7.xyzw, r7.xyzx, t3.xyzw, s2, l(0.000000)
mul r7.xyzw, r7.xyzw, l(255.000000, 255.000000, 255.000000, 255.000000)
div r8.xyz, cb0[32].xyzx, r7.wwww
mul r0.xyz, r0.yzwy, r8.xyzx
frc r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(0.666666687, 0.666666687, 0.666666687, 0.000000), r7.xyzx
add r0.xyz, r0.xyzx, l(0.166666672, 0.166666672, 0.166666672, 0.000000)
mul r0.xyz, r0.xyzx, cb0[33].xyzx
sample_l_indexable(texture3d)(float,float,float,float) r7.xyzw, r0.xyzx, t4.xyzw, s3, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r0.xyzx, t5.xyzw, s3, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r9.xyzw, r0.xyzx, t6.xyzw, s3, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r0.x, r0.xyzx, t7.yxzw, s3, l(0.000000)
dp3 r0.y, r7.yzwy, r7.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r7.yzw, r0.yyyy, r7.yyzw
dp3 r0.y, r2.xyzx, r7.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r7.x
add r1.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r1.w, r1.w, r3.w
mad r7.yz, r0.zzzz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r7.y
exp r0.y, r0.y
mul r0.z, r0.y, r7.z
mad r0.y, -r7.z, r0.y, l(1.000000)
mad r0.y, r1.w, r0.y, r0.z
mul r0.y, r0.y, r7.x
movc r7.x, r0.w, r0.y, r7.x
dp3 r0.y, r8.yzwy, r8.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r8.yzw, r0.yyyy, r8.yyzw
dp3 r0.y, r2.xyzx, r8.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r8.x
add r1.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r1.w, r1.w, r3.w
mad r8.yz, r0.zzzz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r8.y
exp r0.y, r0.y
mul r0.z, r0.y, r8.z
mad r0.y, -r8.z, r0.y, l(1.000000)
mad r0.y, r1.w, r0.y, r0.z
mul r0.y, r0.y, r8.x
movc r7.y, r0.w, r0.y, r8.x
dp3 r0.y, r9.yzwy, r9.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r8.xyz, r0.yyyy, r9.yzwy
dp3 r0.y, r2.xyzx, r8.xyzx
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r9.x
add r1.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r1.w, r1.w, r3.w
mad r8.xy, r0.zzzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(1.000000, 2.000000, 0.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r8.x
exp r0.y, r0.y
mul r0.z, r0.y, r8.y
mad r0.y, -r8.y, r0.y, l(1.000000)
mad r0.y, r1.w, r0.y, r0.z
mul r0.y, r0.y, r9.x
movc r7.z, r0.w, r0.y, r9.x
max r0.yzw, r7.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
mov r2.w, l(1.000000)
dp4 r7.x, r25.xyzw, r2.xyzw
dp4 r7.y, r26.xyzw, r2.xyzw
dp4 r7.z, r27.xyzw, r2.xyzw
mul r8.xyzw, r2.yzzx, r2.xyzz
dp4 r9.x, r28.xyzw, r8.xyzw
dp4 r9.y, r29.xyzw, r8.xyzw
dp4 r9.z, r30.xyzw, r8.xyzw
mul r1.w, r2.y, r2.y
mad r1.w, r2.x, r2.x, -r1.w
add r2.xyz, r7.xyzx, r9.xyzx
mad r2.xyz, r31.xyzx, r1.wwww, r2.xyzx
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.xyz, r5.xyzx, r2.xyzx
mad r0.xyz, r2.xyzx, r0.xxxx, r0.yzwy
add r2.xyz, r1.xyzx, -r20.xyzx
mul r5.xyz, r2.xyzx, r22.xyzx
add r7.xyz, r1.xyzx, -r21.xyzx
mul r7.xyz, r7.xyzx, r23.xyzx
mad r2.xyz, r2.xyzx, r22.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r2.xyz, -|r2.xyzx|, l(0.500000, 0.500000, 0.500000, 0.000000)
mul_sat r2.xyz, r2.xyzx, l(6.000000, 6.000000, 6.000000, 0.000000)
mul r0.w, r2.y, r2.x
mul r0.w, r2.z, r0.w
sample_l_indexable(texture3d)(float,float,float,float) r2.xyz, r5.xyzx, t1.xyzw, s1, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r5.xyz, r7.xyzx, t2.xyzw, s1, l(0.000000)
add r2.xyz, r2.xyzx, -r5.xyzx
mad r2.xyz, r0.wwww, r2.xyzx, r5.xyzx
mul r2.xyz, r3.xyzx, r2.xyzx
mul r5.xyz, r2.xyzx, l(0.886227548, 0.886227548, 0.886227548, 0.000000)
mad r6.xyz, r6.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r3.xyzx
mad r2.xyz, -r2.xyzx, l(0.886227548, 0.886227548, 0.886227548, 0.000000), r6.xyzx
mad r2.xyz, r19.xxxx, r2.xyzx, r5.xyzx
max r4.xyz, cb4[2].xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), r18.x
if_nz r0.w
  add r5.xyz, r1.xyzx, -cb3[8].xyzx
  add r6.xyz, cb3[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r5.xyz, r6.xyzx, |r5.xyzx|
  or r0.w, r5.y, r5.x
  or r0.w, r5.z, r0.w
  dp3 r1.x, r1.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.x, r1.x, l(0.002000)
  frc r1.x, r1.x
  lt r1.x, l(0.500000), r1.x
  movc r1.yzw, r1.xxxx, l(0,0,1.000000,1.000000), l(0,1.000000,1.000000,0)
  mov r1.x, l(1.000000)
  movc r4.xyzw, r0.wwww, r1.yzwx, r4.xyzw
  mov o0.w, r4.w
else 
  mov o0.w, r4.w
endif 
mad r0.xyz, r0.xyzx, r3.xyzx, r2.xyzx
add r0.xyz, r4.xyzx, r0.xyzx
mad o0.xyz, r0.xyzx, v4.wwww, v4.xyzx
ret 
// Approximately 0 instruction slots used