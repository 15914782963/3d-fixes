// asmtool.py --remap-cb 0 100 -i -f --only-autofixed --disable-driver-stereo-cb 12 c7aac7533293c65b-cs.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.63 on Tue Sep 12 13:32:49 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[60], immediateIndexed
dcl_constantbuffer cb1[341], dynamicIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_uav_typed_buffer (uint,uint,uint,uint) u0
dcl_uav_typed_buffer (uint,uint,uint,uint) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadID.xyz
dcl_temps 23
dcl_thread_group 4, 4, 4
dcl_resource_structured t100, 960

// cb0 remapped to t100 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 0 100 -i -f --only-autofixed --disable-driver-stereo-cb 12 c7aac7533293c65b-cs.txt
ld_structured_indexable(structured_buffer, stride=960)(mixed,mixed,mixed,mixed) r11.xyzw, l(0), l(128), t100.xyzw
ld_structured_indexable(structured_buffer, stride=960)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(144), t100.xyzw
ld_structured_indexable(structured_buffer, stride=960)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(160), t100.xyzw
ld_structured_indexable(structured_buffer, stride=960)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(176), t100.xyzw
ld_structured_indexable(structured_buffer, stride=960)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(416), t100.xyzw
ld_structured_indexable(structured_buffer, stride=960)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(432), t100.xyzw
ld_structured_indexable(structured_buffer, stride=960)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(448), t100.xyzw
ld_structured_indexable(structured_buffer, stride=960)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(464), t100.xyzw
ld_structured_indexable(structured_buffer, stride=960)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(480), t100.xyzw
ld_structured_indexable(structured_buffer, stride=960)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(496), t100.xyzw
ld_structured_indexable(structured_buffer, stride=960)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(848), t100.xyzw
ld_structured_indexable(structured_buffer, stride=960)(mixed,mixed,mixed,mixed) r22.xyzw, l(0), l(944), t100.xyzw

ult r0.xyz, vThreadID.xyzx, cb2[1].xyzx
and r0.x, r0.y, r0.x
and r0.x, r0.z, r0.x
if_nz r0.x
  imad r0.x, vThreadID.z, cb2[1].y, vThreadID.y
  imad r0.x, r0.x, cb2[1].x, vThreadID.x
  itof r0.yz, cb2[1].xxyx
  div r0.yz, l(0.000000, 2.000000, 2.000000, 0.000000), r0.yyzy
  utof r1.xyz, vThreadID.xyzx
  mad r1.xy, r1.xyxx, r0.yzyy, l(-1.000000, -1.000000, 0.000000, 0.000000)
  mul r1.xy, r1.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
  iadd r2.xyz, vThreadID.xyzx, l(1, 1, 1, 0)
  utof r2.xyw, r2.xyxz
  mad r0.yz, r2.xxyx, r0.yyzy, l(0.000000, -1.000000, -1.000000, 0.000000)
  mul r0.yz, r0.yyzy, l(0.000000, 1.000000, -1.000000, 0.000000)
  div r0.w, r1.z, cb2[3].z
  exp r0.w, r0.w
  add r0.w, r0.w, -cb2[3].y
  div r0.w, r0.w, cb2[3].x
  ieq r1.z, vThreadID.z, cb2[1].z
  movc r3.z, r1.z, l(2000000.000000), r0.w
  div r0.w, r2.w, cb2[3].z
  exp r0.w, r0.w
  add r0.w, r0.w, -cb2[3].y
  div r0.w, r0.w, cb2[3].x
  ieq r1.z, r2.z, cb2[1].z
  movc r2.z, r1.z, l(2000000.000000), r0.w
  lt r0.w, r16.w, l(1.000000)
  add r1.z, r3.z, r21.w
  mul r1.z, r1.z, r21.z
  div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
  mad r1.w, r3.z, r15.z, r16.z
  movc r1.z, r0.w, r1.z, r1.w
  mul r4.xyz, r1.yyyy, r18.xywx
  mad r5.xyz, r1.xxxx, r17.xywx, r4.xyzx
  mad r6.xyz, r1.zzzz, r19.xywx, r5.xyzx
  add r6.xyz, r6.xyzx, r20.xywx
  mul r7.xyz, r0.zzzz, r18.xywx
  mad r8.xyz, r0.yyyy, r17.xywx, r7.xyzx
  mad r9.xyz, r1.zzzz, r19.xywx, r8.xyzx
  add r9.xyz, r9.xyzx, r20.xywx
  mad r1.xyw, r1.xxxx, r17.xyxw, r7.xyxz
  mad r7.xyz, r1.zzzz, r19.xywx, r1.xywx
  add r7.xyz, r7.xyzx, r20.xywx
  mad r4.xyz, r0.yyyy, r17.xywx, r4.xyzx
  mad r10.xyz, r1.zzzz, r19.xywx, r4.xyzx
  add r10.xyz, r10.xyzx, r20.xywx
  add r0.y, r2.z, r21.w
  mul r0.y, r0.y, r21.z
  div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  mad r0.z, r2.z, r15.z, r16.z
  movc r0.y, r0.w, r0.y, r0.z
  mad r5.xyz, r0.yyyy, r19.xywx, r5.xyzx
  add r5.xyz, r5.xyzx, r20.xywx
  mad r8.xyz, r0.yyyy, r19.xywx, r8.xyzx
  add r8.xyz, r8.xyzx, r20.xywx
  mad r1.xyz, r0.yyyy, r19.xywx, r1.xywx
  add r1.xyz, r1.xyzx, r20.xywx
  mad r0.yzw, r0.yyyy, r19.xxyw, r4.xxyz
  add r0.yzw, r0.yyzw, r20.xxyw
  div r4.xy, r6.xyxx, r6.zzzz
  div r4.zw, r9.xxxy, r9.zzzz
  min r6.xy, r4.zwzz, r4.xyxx
  div r6.zw, r7.xxxy, r7.zzzz
  min r6.xy, r6.zwzz, r6.xyxx
  div r7.xy, r10.xyxx, r10.zzzz
  min r6.xy, r6.xyxx, r7.xyxx
  div r5.xy, r5.xyxx, r5.zzzz
  min r5.zw, r5.xxxy, r6.xxxy
  div r6.xy, r8.xyxx, r8.zzzz
  min r5.zw, r5.zzzw, r6.xxxy
  div r1.xy, r1.xyxx, r1.zzzz
  min r1.zw, r1.xxxy, r5.zzzw
  div r0.yz, r0.yyzy, r0.wwww
  min r3.xy, r0.yzyy, r1.zwzz
  max r1.zw, r4.zzzw, r4.xxxy
  max r1.zw, r6.zzzw, r1.zzzw
  max r1.zw, r7.xxxy, r1.zzzw
  max r1.zw, r5.xxxy, r1.zzzw
  max r1.zw, r6.xxxy, r1.zzzw
  max r1.xy, r1.xyxx, r1.zwzz
  max r2.xy, r0.yzyy, r1.xyxx
  add r0.yzw, r2.xxyz, r3.xxyz
  mad r1.xyz, -r0.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000), r2.xyzx
  imul null, r1.w, cb2[0].w, cb2[1].w
  ishl r1.w, r1.w, l(1)
  mov r2.x, l(0)
  loop 
    uge r2.y, r2.x, cb2[0].x
    breakc_nz r2.y
    ishl r2.y, r2.x, l(2)
    ld_indexable(buffer)(float,float,float,float) r3.xyzw, r2.yyyy, t0.xyzw
    div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
    bfi r2.z, l(30), l(2), r2.x, l(3)
    ld_indexable(buffer)(float,float,float,float) r2.z, r2.zzzz, t0.yzxw
    lt r2.w, l(-2.000000), r2.z
    if_nz r2.w
      bfi r2.w, l(30), l(2), r2.x, l(2)
      ld_indexable(buffer)(float,float,float,float) r4.xyz, r2.wwww, t0.xyzw
      mul r4.xyz, r2.yyyy, r4.xyzx
      mad r3.xyz, -r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
      mul r2.w, r2.y, r2.y
      mul r2.z, r2.z, r2.w
      mad r2.z, r2.w, l(1.250000), -r2.z
      sqrt r2.y, r2.z
    endif 
    add r3.xyz, r3.xyzx, r22.xyzx
    mul r4.xyz, r3.yyyy, r12.xyzx
    mad r3.xyw, r3.xxxx, r11.xyxz, r4.xyxz
    mad r3.xyz, r3.zzzz, r13.xyzx, r3.xywx
    add r3.xyz, r3.xyzx, r14.xyzx
    mad r3.xyz, -r0.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
    add r3.xyz, -r1.xyzx, |r3.xyzx|
    max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    dp3 r2.z, r3.xyzx, r3.xyzx
    mul r2.y, r2.y, r2.y
    lt r2.y, r2.z, r2.y
    if_nz r2.y
      imm_atomic_iadd r3.x, u0, l(0), l(1)
      ult r2.y, r3.x, r1.w
      if_nz r2.y
        imm_atomic_exch r4.x, u1, r0.x, r3.x
        ishl r2.y, r3.x, l(1)
        store_uav_typed u2.xyzw, r2.yyyy, r2.xxxx
        bfi r2.z, l(31), l(1), r3.x, l(1)
        store_uav_typed u2.xyzw, r2.zzzz, r4.xxxx
      endif 
    endif 
    iadd r2.x, r2.x, l(1)
  endloop 
  iadd r0.x, r0.x, cb2[0].w
  mov r2.x, l(0)
  loop 
    uge r2.y, r2.x, cb2[0].y
    breakc_nz r2.y
    add r2.yzw, r22.xxyz, cb1[r2.x + 0].xxyz
    mul r3.xyz, r2.zzzz, r12.xyzx
    mad r3.xyz, r2.yyyy, r11.xyzx, r3.xyzx
    mad r2.yzw, r2.wwww, r13.xxyz, r3.xxyz
    add r2.yzw, r2.yyzw, r14.xxyz
    mad r2.yzw, -r0.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000), r2.yyzw
    add r2.yzw, -r1.xxyz, |r2.yyzw|
    max r2.yzw, r2.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    dp3 r2.y, r2.yzwy, r2.yzwy
    mul r2.z, cb1[r2.x + 0].w, cb1[r2.x + 0].w
    lt r2.y, r2.y, r2.z
    if_nz r2.y
      imm_atomic_iadd r3.x, u0, l(0), l(1)
      ult r2.y, r3.x, r1.w
      if_nz r2.y
        imm_atomic_exch r4.x, u1, r0.x, r3.x
        ishl r2.y, r3.x, l(1)
        store_uav_typed u2.xyzw, r2.yyyy, r2.xxxx
        bfi r2.z, l(31), l(1), r3.x, l(1)
        store_uav_typed u2.xyzw, r2.zzzz, r4.xxxx
      endif 
    endif 
    iadd r2.x, r2.x, l(1)
  endloop 
endif 
ret 
// Approximately 0 instruction slots used