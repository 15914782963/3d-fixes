// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i -f --only-autofixed --disable-driver-stereo-cb 12 8bcac36e596bd4dd-vs.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:43:03 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz 
// ATTRIBUTE                1   xyz         1     NONE   float   xyz 
// ATTRIBUTE                2   xyzw        2     NONE   float   xyzw
// ATTRIBUTE                3   xyzw        3     NONE    uint   xyzw
// ATTRIBUTE                4   xyzw        4     NONE   float   xyzw
// ATTRIBUTE                5   xy          5     NONE   float   xy  
// ATTRIBUTE                9   xyzw        6     NONE   float   xyzw
// ATTRIBUTE               10   xyzw        7     NONE   float   xyzw
// ATTRIBUTE               11   xyzw        8     NONE   float   xyzw
// ATTRIBUTE               12   xyzw        9     NONE    uint   xyzw
// ATTRIBUTE               13   xyzw       10     NONE   float   xyzw
// SV_InstanceID            0   x          11   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyzw
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// COLOR                    0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x   
// VELOCITY_PREV_POS        0   xyzw        5     NONE   float   xyzw
// SV_POSITION              0   xyzw        6      POS   float   xyzw
// SV_ClipDistance          1   x           7  CLIPDST   float   x   
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} }
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[165], immediateIndexed
dcl_constantbuffer cb2[165], immediateIndexed
dcl_constantbuffer cb3[15], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (float,float,float,float) t1
dcl_resource_buffer (float,float,float,float) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input v5.xy
dcl_input v6.xyzw
dcl_input v7.xyzw
dcl_input v8.xyzw
dcl_input v9.xyzw
dcl_input v10.xyzw
dcl_input_sgv v11.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xy
dcl_output o4.x
dcl_output o5.xyzw
dcl_output_siv o6.xyzw, position
dcl_output_siv o7.x, clip_distance
dcl_temps 51
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 2048
// Disables driver stereo correction:
dcl_constantbuffer cb12[4], immediateIndexed

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i -f --only-autofixed --disable-driver-stereo-cb 12 8bcac36e596bd4dd-vs.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r29.xyzw, l(0), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r30.xyzw, l(0), l(16), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r31.xyzw, l(0), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r32.xyzw, l(0), l(48), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r33.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r34.xyzw, l(0), l(1280), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r35.xyzw, l(0), l(1296), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r36.xyzw, l(0), l(1312), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r37.xyzw, l(0), l(1328), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r38.xyzw, l(0), l(1632), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r39.xyzw, l(1), l(576), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i -f --only-autofixed --disable-driver-stereo-cb 12 8bcac36e596bd4dd-vs.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r40.xyzw, l(0), l(0), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r41.xyzw, l(0), l(16), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r42.xyzw, l(0), l(32), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r43.xyzw, l(0), l(48), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r44.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r45.xyzw, l(0), l(1280), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r46.xyzw, l(0), l(1296), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r47.xyzw, l(0), l(1312), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r48.xyzw, l(0), l(1328), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r49.xyzw, l(0), l(1632), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r50.xyzw, l(1), l(576), t102.xyzw

and r0.x, v11.x, l(1)
if_z r0.x
  mov r1.x, r29.x
  mov r1.y, r30.x
  mov r1.z, r31.x
  mov r1.w, r32.x
  mov r2.x, r29.y
  mov r2.y, r30.y
  mov r2.z, r31.y
  mov r2.w, r32.y
  mov r3.x, r29.z
  mov r3.y, r30.z
  mov r3.z, r31.z
  mov r3.w, r32.z
  mov r4.x, r29.w
  mov r4.y, r30.w
  mov r4.z, r31.w
  mov r4.w, r32.w
  mov r5.x, r34.x
  mov r5.y, r35.x
  mov r5.z, r36.x
  mov r5.w, r37.x
  mov r6.x, r34.y
  mov r6.y, r35.y
  mov r6.z, r36.y
  mov r6.w, r37.y
  mov r7.x, r34.w
  mov r7.y, r35.w
  mov r7.z, r36.w
  mov r7.w, r37.w
  mov r0.yzw, r38.xxyz
  mov r8.x, r39.y
  mov r8.yzw, r33.xxyz
else 
  mov r1.x, r40.x
  mov r1.y, r41.x
  mov r1.z, r42.x
  mov r1.w, r43.x
  mov r2.x, r40.y
  mov r2.y, r41.y
  mov r2.z, r42.y
  mov r2.w, r43.y
  mov r3.x, r40.z
  mov r3.y, r41.z
  mov r3.z, r42.z
  mov r3.w, r43.z
  mov r4.x, r40.w
  mov r4.y, r41.w
  mov r4.z, r42.w
  mov r4.w, r43.w
  mov r5.x, r45.x
  mov r5.y, r46.x
  mov r5.z, r47.x
  mov r5.w, r48.x
  mov r6.x, r45.y
  mov r6.y, r46.y
  mov r6.z, r47.y
  mov r6.w, r48.y
  mov r7.x, r45.w
  mov r7.y, r46.w
  mov r7.z, r47.w
  mov r7.w, r48.w
  mov r0.yzw, r49.xxyz
  mov r8.x, r50.y
  mov r8.yzw, r44.xxyz
endif 
mad r9.xyz, v0.xyzx, cb0[8].xyzx, cb0[7].xyzx
ult r10.x, v9.w, l(0x0000ffff)
if_nz r10.x
  imul null, r10.yzw, v9.xxyz, l(0, 3, 3, 3)
  ld_indexable(buffer)(float,float,float,float) r11.xy, r10.yyyy, t1.xyzw
  imad r12.xyzw, v9.xxyy, l(3, 3, 3, 3), l(1, 2, 1, 2)
  ld_indexable(buffer)(float,float,float,float) r13.xz, r12.xxxx, t1.yzxw
  ld_indexable(buffer)(float,float,float,float) r14.yz, r12.yyyy, t1.zxyw
  mov r14.x, r13.x
  mov r13.xy, r11.xyxx
  mad r11.xyz, r14.xyzx, v6.wwww, r13.xyzx
  ld_indexable(buffer)(float,float,float,float) r13.xy, r10.zzzz, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r14.xz, r12.zzzz, t1.yzxw
  ld_indexable(buffer)(float,float,float,float) r15.yz, r12.wwww, t1.zxyw
  mov r15.x, r14.x
  mov r14.xy, r13.xyxx
  mad r13.xyz, r15.xyzx, v6.wwww, r14.xyzx
  mul r13.xyz, r13.xyzx, v6.yyyy
  mad r11.xyz, v6.xxxx, r11.xyzx, r13.xyzx
  ld_indexable(buffer)(float,float,float,float) r13.xy, r10.wwww, t1.xyzw
  imad r13.zw, v9.zzzz, l(0, 0, 3, 3), l(0, 0, 1, 2)
  ld_indexable(buffer)(float,float,float,float) r14.xz, r13.zzzz, t1.yzxw
  ld_indexable(buffer)(float,float,float,float) r15.yz, r13.wwww, t1.zxyw
  mov r15.x, r14.x
  mov r14.xy, r13.xyxx
  mad r14.xyz, r15.xyzx, v6.wwww, r14.xyzx
  mad r11.xyz, v6.zzzz, r14.xyzx, r11.xyzx
  mad r11.xyz, r11.xyzx, cb0[8].xyzx, cb0[7].xyzx
  ld_indexable(buffer)(float,float,float,float) r13.xy, r10.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r14.xz, r12.xxxx, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r15.yz, r12.yyyy, t0.zxyw
  mov r15.x, r14.x
  mov r14.xy, r13.xyxx
  mad r14.xyz, r15.xyzx, v6.wwww, r14.xyzx
  ld_indexable(buffer)(float,float,float,float) r10.yz, r10.zzzz, t0.zxyw
  ld_indexable(buffer)(float,float,float,float) r12.xz, r12.zzzz, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r15.yz, r12.wwww, t0.zxyw
  mov r15.x, r12.x
  mov r12.xy, r10.yzyy
  mad r12.xyz, r15.xyzx, v6.wwww, r12.xyzx
  mul r12.xyz, r12.xyzx, v6.yyyy
  mad r12.xyz, v6.xxxx, r14.xyzx, r12.xyzx
  ld_indexable(buffer)(float,float,float,float) r10.yz, r10.wwww, t0.zxyw
  ld_indexable(buffer)(float,float,float,float) r13.xz, r13.zzzz, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r14.yz, r13.wwww, t0.zxyw
  mov r14.x, r13.x
  mov r13.xy, r10.yzyy
  mad r10.yzw, r14.xxyz, v6.wwww, r13.xxyz
  mad r10.yzw, v6.zzzz, r10.yyzw, r12.xxyz
  mad r10.yzw, r10.yyzw, cb0[8].xxyz, cb0[7].xxyz
else 
  mov r10.yzw, r9.xxyz
  mov r11.xyz, r9.xyzx
endif 
imul null, r12.xyzw, v3.xyzw, l(3, 3, 3, 3)
ld_indexable(buffer)(float,float,float,float) r13.xyzw, r12.xxxx, t2.xyzw
imad r14.xyzw, v3.xxyy, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r15.xyzw, r14.xxxx, t2.xyzw
ld_indexable(buffer)(float,float,float,float) r16.xyzw, r14.yyyy, t2.xyzw
ld_indexable(buffer)(float,float,float,float) r17.xyzw, r12.yyyy, t2.xyzw
ld_indexable(buffer)(float,float,float,float) r18.xyzw, r14.zzzz, t2.xyzw
ld_indexable(buffer)(float,float,float,float) r19.xyzw, r14.wwww, t2.xyzw
mul r17.xyzw, r17.xyzw, v4.yyyy
mul r18.xyzw, r18.xyzw, v4.yyyy
mul r19.xyzw, r19.xyzw, v4.yyyy
mad r13.xyzw, v4.xxxx, r13.xyzw, r17.xyzw
mad r15.xyzw, v4.xxxx, r15.xyzw, r18.xyzw
mad r16.xyzw, v4.xxxx, r16.xyzw, r19.xyzw
ld_indexable(buffer)(float,float,float,float) r17.xyzw, r12.zzzz, t2.xyzw
imad r18.xyzw, v3.zzww, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r19.xyzw, r18.xxxx, t2.xyzw
ld_indexable(buffer)(float,float,float,float) r20.xyzw, r18.yyyy, t2.xyzw
mad r13.xyzw, v4.zzzz, r17.xyzw, r13.xyzw
mad r15.xyzw, v4.zzzz, r19.xyzw, r15.xyzw
mad r16.xyzw, v4.zzzz, r20.xyzw, r16.xyzw
ld_indexable(buffer)(float,float,float,float) r17.xyzw, r12.wwww, t2.xyzw
ld_indexable(buffer)(float,float,float,float) r19.xyzw, r18.zzzz, t2.xyzw
ld_indexable(buffer)(float,float,float,float) r20.xyzw, r18.wwww, t2.xyzw
mad r13.xyzw, v4.wwww, r17.xyzw, r13.xyzw
mad r15.xyzw, v4.wwww, r19.xyzw, r15.xyzw
mad r16.xyzw, v4.wwww, r20.xyzw, r16.xyzw
mad r17.xyz, v1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r19.xyzw, v2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
if_nz r10.x
  imul null, r20.xyz, v9.yzxy, l(3, 3, 3, 0)
  ld_indexable(buffer)(float,float,float,float) r20.zw, r20.zzzz, t0.zwxy
  imad r21.xyzw, v9.xyzx, l(3, 3, 3, 3), l(1, 1, 1, 2)
  ld_indexable(buffer)(float,float,float,float) r22.xz, r21.xxxx, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r23.xy, r20.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r24.xz, r21.yyyy, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r20.xy, r20.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r21.xz, r21.zzzz, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r25.yz, r21.wwww, t0.zxyw
  imad r23.zw, v9.yyyz, l(0, 0, 3, 3), l(0, 0, 2, 2)
  ld_indexable(buffer)(float,float,float,float) r26.yz, r23.zzzz, t0.zxyw
  ld_indexable(buffer)(float,float,float,float) r27.yz, r23.wwww, t0.zxyw
  mov r25.x, r22.x
  mov r22.xy, r20.zwzz
  mad r28.xyz, r25.xyzx, v7.wwww, r22.xyzx
  mov r26.x, r24.x
  mov r24.xy, r23.xyxx
  mad r23.xyz, r26.xyzx, v7.wwww, r24.xyzx
  mul r23.xyz, r23.xyzx, v7.yyyy
  mad r23.xyz, v7.xxxx, r28.xyzx, r23.xyzx
  mov r27.x, r21.x
  mov r21.xy, r20.xyxx
  mad r20.xyz, r27.xyzx, v7.wwww, r21.xyzx
  mad r20.xyz, v7.zzzz, r20.xyzx, r23.xyzx
  mad r22.xyz, r25.xyzx, v8.wwww, r22.xyzx
  mad r23.xyz, r26.xyzx, v8.wwww, r24.xyzx
  mul r23.xyz, r23.xyzx, v8.yyyy
  mad r22.xyz, v8.xxxx, r22.xyzx, r23.xyzx
  mad r21.xyz, r27.xyzx, v8.wwww, r21.xyzx
  mad r21.xyz, v8.zzzz, r21.xyzx, r22.xyzx
  mad r21.xyz, r21.xyzx, cb0[8].xyzx, cb0[7].xyzx
  add r21.xyz, -r10.yzwy, r21.xyzx
  dp3 r11.w, r21.xyzx, r21.xyzx
  rsq r11.w, r11.w
  mul r21.xyz, r11.wwww, r21.xyzx
  mad r20.xyz, r20.xyzx, cb0[8].xyzx, cb0[7].xyzx
  add r20.xyz, -r10.yzwy, r20.xyzx
  dp3 r11.w, r20.xyzx, r20.xyzx
  rsq r11.w, r11.w
  mul r20.xyz, r11.wwww, r20.xyzx
  mul r22.xyz, r21.yyyy, cb3[5].xyzx
  mad r21.xyw, r21.xxxx, cb3[4].xyxz, r22.xyxz
  mad r21.xyz, r21.zzzz, cb3[6].xyzx, r21.xywx
  mul r22.xyz, r20.yyyy, cb3[5].xyzx
  mad r20.xyw, r20.xxxx, cb3[4].xyxz, r22.xyxz
  mad r20.yzw, r20.zzzz, cb3[6].xxyz, r20.xxyw
  mov r20.x, r21.z
  mov r11.w, cb0[9].x
else 
  mov r20.xyzw, l(0,0,0,1.000000)
  mov r21.xy, l(1.000000,0,0,0)
  mov r11.w, l(0)
endif 
dp3 r22.x, r13.xyzx, r17.xyzx
dp3 r22.y, r15.xyzx, r17.xyzx
dp3 r17.x, r16.xyzx, r17.xyzx
dp3 r17.y, r13.xyzx, r19.xyzx
dp3 r17.z, r15.xyzx, r19.xyzx
dp3 r17.w, r16.xyzx, r19.xyzx
add r19.x, -r11.w, l(1.000000)
mul r17.xyzw, r17.xyzw, r19.xxxx
mul r19.xy, r19.xxxx, r22.xyxx
mad r19.xy, r21.xyxx, r11.wwww, r19.xyxx
mad r17.xyzw, r20.xyzw, r11.wwww, r17.xyzw
mov r9.w, l(1.000000)
dp4 r11.w, r13.xyzw, r9.xyzw
dp4 r19.z, r15.xyzw, r9.xyzw
dp4 r20.x, r16.xyzw, r9.xyzw
mul r20.yzw, r19.zzzz, cb3[1].xxyz
mad r20.yzw, r11.wwww, cb3[0].xxyz, r20.yyzw
mad r20.xyz, r20.xxxx, cb3[2].xyzx, r20.yzwy
add r21.xyz, r20.xyzx, cb3[3].xyzx
add r10.yzw, r10.yyzw, -r21.xxyz
mad r10.yzw, cb0[9].xxxx, r10.yyzw, r21.xxyz
add r10.yzw, r8.yyzw, r10.yyzw
add r8.yzw, r8.yyzw, cb3[3].xxyz
add r8.yzw, r8.yyzw, r20.xxyz
movc r10.xyz, r10.xxxx, r10.yzwy, r8.yzwy
mov r10.w, l(1.000000)
dp4 r1.x, r10.xyzw, r1.xyzw
dp4 r1.y, r10.xyzw, r2.xyzw
dp4 r1.z, r10.xyzw, r3.xyzw
dp4 r1.w, r10.xyzw, r4.xyzw
if_nz cb0[0].x
  mov r2.x, icb[r0.x + 0].x
  mov r2.y, l(1.000000)
  dp2 o7.x, r1.xwxx, r2.xyxx
  mul r2.x, r8.x, l(0.500000)
  mul r2.y, r1.w, icb[r0.x + 0].x
  mad r2.z, -r8.x, l(0.500000), l(1.000000)
  mul r2.y, r2.z, r2.y
  mad r1.x, r1.x, r2.x, r2.y
else 
  mov o7.x, l(0)
endif 
mul r2.xyz, cb3[0].xyzx, cb3[14].xxxx
mul r3.xyz, cb3[1].xyzx, cb3[14].yyyy
mul r4.xyz, cb3[2].xyzx, cb3[14].zzzz
mul r8.xyz, r3.xyzx, r19.yyyy
mad r8.xyz, r19.xxxx, r2.xyzx, r8.xyzx
mad o0.xyz, r17.xxxx, r4.xyzx, r8.xyzx
mul r3.xyz, r3.xyzx, r17.zzzz
mad r2.xyz, r17.yyyy, r2.xyzx, r3.xyzx
mad o1.xyz, r17.wwww, r4.xyzx, r2.xyzx
mul o1.w, r19.w, cb3[9].w
movc r2.x, cb0[0].x, l(1), l(0)
imad o4.x, r2.x, l(0x80000000), r0.x
add r2.xyw, r0.yzyw, cb0[6].xyxz
if_nz cb0[8].w
  ld_indexable(buffer)(float,float,float,float) r3.xyzw, r12.xxxx, t3.xyzw
  ld_indexable(buffer)(float,float,float,float) r4.xyzw, r14.xxxx, t3.xyzw
  ld_indexable(buffer)(float,float,float,float) r8.xyzw, r14.yyyy, t3.xyzw
  ld_indexable(buffer)(float,float,float,float) r10.xyzw, r12.yyyy, t3.xyzw
  ld_indexable(buffer)(float,float,float,float) r17.xyzw, r14.zzzz, t3.xyzw
  ld_indexable(buffer)(float,float,float,float) r14.xyzw, r14.wwww, t3.xyzw
  mul r10.xyzw, r10.xyzw, v4.yyyy
  mul r17.xyzw, r17.xyzw, v4.yyyy
  mul r14.xyzw, r14.xyzw, v4.yyyy
  mad r3.xyzw, v4.xxxx, r3.xyzw, r10.xyzw
  mad r4.xyzw, v4.xxxx, r4.xyzw, r17.xyzw
  mad r8.xyzw, v4.xxxx, r8.xyzw, r14.xyzw
  ld_indexable(buffer)(float,float,float,float) r10.xyzw, r12.zzzz, t3.xyzw
  ld_indexable(buffer)(float,float,float,float) r14.xyzw, r18.xxxx, t3.xyzw
  ld_indexable(buffer)(float,float,float,float) r17.xyzw, r18.yyyy, t3.xyzw
  mad r3.xyzw, v4.zzzz, r10.xyzw, r3.xyzw
  mad r4.xyzw, v4.zzzz, r14.xyzw, r4.xyzw
  mad r8.xyzw, v4.zzzz, r17.xyzw, r8.xyzw
  ld_indexable(buffer)(float,float,float,float) r10.xyzw, r12.wwww, t3.xyzw
  ld_indexable(buffer)(float,float,float,float) r12.xyzw, r18.zzzz, t3.xyzw
  ld_indexable(buffer)(float,float,float,float) r14.xyzw, r18.wwww, t3.xyzw
  mad r13.xyzw, v4.wwww, r10.xyzw, r3.xyzw
  mad r15.xyzw, v4.wwww, r12.xyzw, r4.xyzw
  mad r16.xyzw, v4.wwww, r14.xyzw, r8.xyzw
endif 
dp4 r3.x, r13.xyzw, r9.xyzw
dp4 r3.y, r15.xyzw, r9.xyzw
dp4 r3.z, r16.xyzw, r9.xyzw
mov r3.w, l(1.000000)
mov r4.x, cb0[3].x
mov r4.y, cb0[4].x
mov r4.z, cb0[5].x
mov r4.w, r2.x
dp4 r4.x, r3.xyzw, r4.xyzw
mov r8.x, cb0[3].y
mov r8.y, cb0[4].y
mov r8.z, cb0[5].y
mov r8.w, r2.y
dp4 r4.y, r3.xyzw, r8.xyzw
mov r2.x, cb0[3].z
mov r2.y, cb0[4].z
mov r2.z, cb0[5].z
dp4 r4.z, r3.xyzw, r2.xyzw
add r0.xyz, r0.yzwy, r11.xyzx
add r0.xyz, -r4.xyzx, r0.xyzx
mad r0.xyz, cb0[9].xxxx, r0.xyzx, r4.xyzx
uge r0.w, v9.w, l(0x0000ffff)
movc r0.xyz, r0.wwww, r4.xyzx, r0.xyzx
mov r0.w, l(1.000000)
dp4 o5.x, r0.xyzw, r5.xyzw
dp4 o5.y, r0.xyzw, r6.xyzw
dp4 o5.w, r0.xyzw, r7.xyzw
add o5.z, -cb0[9].y, l(1.000000)
mov o0.w, l(0)
mov o2.xyzw, v10.xyzw
mov o6.xyzw, r1.xyzw
mov o3.xy, v5.xyxx
ret 
// Approximately 0 instruction slots used