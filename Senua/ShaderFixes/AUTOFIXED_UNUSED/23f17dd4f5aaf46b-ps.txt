// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 23f17dd4f5aaf46b-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:43:25 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz 
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// COLOR                    0   xyzw        2     NONE   float       
// TEXCOORD                 0   xy          3     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x   
// VELOCITY_PREV_POS        0   xyzw        5     NONE   float   xyzw
// SV_Position              0   xyzw        6      POS   float   xyzw
// SV_IsFrontFace           0   x           7    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
// SV_Target                5   xyzw        5   TARGET   float   xyzw
// SV_Target                6   xyzw        6   TARGET   float   xyzw
// SV_Target                7   xyzw        7   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[123], immediateIndexed
dcl_constantbuffer cb3[20], immediateIndexed
dcl_constantbuffer cb4[6], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[26], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t17
dcl_resource_texture2d (float,float,float,float) t18
dcl_resource_texture2d (float,float,float,float) t19
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_texture2d (float,float,float,float) t23
dcl_resource_texture3d (float,float,float,float) t24
dcl_resource_texture3d (float,float,float,float) t25
dcl_resource_texture3d (float,float,float,float) t26
dcl_resource_texture3d (float,float,float,float) t27
dcl_resource_texture3d (float,float,float,float) t28
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v3.xy
dcl_input_ps constant v4.x
dcl_input_ps linear v5.xyzw
dcl_input_ps_siv linear noperspective v6.xyzw, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 39
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 1968

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 23f17dd4f5aaf46b-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(416), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(592), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(624), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(992), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(1936), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(1952), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(2016), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(0), l(2032), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(1), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(1), l(16), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(1), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r26.xyzw, l(1), l(96), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r27.xyzw, l(1), l(208), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r28.xyzw, l(1), l(272), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r29.xyzw, l(1), l(768), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 23f17dd4f5aaf46b-ps.txt
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r30.xyzw, l(0), l(416), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r31.xyzw, l(0), l(576), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r32.xyzw, l(0), l(592), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r33.xyzw, l(0), l(608), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r34.xyzw, l(0), l(624), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r35.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r36.xyzw, l(0), l(992), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r37.xyzw, l(0), l(1936), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r38.xyzw, l(0), l(1952), t102.xyzw

and r0.x, v4.x, l(1)
if_z r0.x
  mov r0.x, r13.x
  mov r0.y, r14.x
  mov r0.z, r15.x
  mov r0.w, r16.x
  mov r1.x, r13.y
  mov r1.y, r14.y
  mov r1.z, r15.y
  mov r1.w, r16.y
  mov r2.x, r13.z
  mov r2.y, r14.z
  mov r2.z, r15.z
  mov r2.w, r16.z
  mov r3.x, r13.w
  mov r3.y, r14.w
  mov r3.z, r15.w
  mov r3.w, r16.w
  mov r4.xy, r19.xyxx
  mov r4.zw, r20.zzzw
  mov r5.xyz, r17.xyzx
  mov r6.xy, r12.xyxx
  mov r6.zw, r18.xxxy
else 
  mov r0.x, r31.x
  mov r0.y, r32.x
  mov r0.z, r33.x
  mov r0.w, r34.x
  mov r1.x, r31.y
  mov r1.y, r32.y
  mov r1.z, r33.y
  mov r1.w, r34.y
  mov r2.x, r31.z
  mov r2.y, r32.z
  mov r2.z, r33.z
  mov r2.w, r34.z
  mov r3.x, r31.w
  mov r3.y, r32.w
  mov r3.z, r33.w
  mov r3.w, r34.w
  mov r4.xy, r37.xyxx
  mov r4.zw, r38.zzzw
  mov r5.xyz, r35.xyzx
  mov r6.xy, r30.xyxx
  mov r6.zw, r36.xxxy
endif 
mul r7.xyz, v0.yzxy, v1.zxyz
mad r7.xyz, v1.yzxy, v0.zxyz, -r7.xyzx
mul r7.xyz, r7.xyzx, v1.wwww
add r4.xy, -r4.xyxx, v6.xyxx
mad r4.xy, r4.xyxx, r4.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, v6.wwww
mov r4.z, v6.w
mul r4.xyz, r4.xyzx, l(2.000000, -2.000000, 1.000000, 0.000000)
mov r8.xyz, v6.xyzx
mov r8.w, l(1.000000)
dp4 r0.x, r8.xyzw, r0.xyzw
dp4 r0.y, r8.xyzw, r1.xyzw
dp4 r0.z, r8.xyzw, r2.xyzw
dp4 r0.w, r8.xyzw, r3.xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r1.xyz, -r5.xyzx, r0.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xy, v3.xyxx, t0.xyzw, s1
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
sqrt r2.z, r0.w
sample_indexable(texture2d)(float,float,float,float) r3.xy, v3.xyxx, t1.xyzw, s1
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r3.xyxx, r3.xyxx
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
sqrt r3.z, r0.w
add r3.xyz, -r2.xyzx, r3.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, v3.xyxx, t2.xyzw, s0
dp4 r0.w, r5.xyzw, cb6[9].xyzw
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, v3.xyxx, t3.xyzw, s0
dp4 r1.w, r5.xyzw, cb6[10].xyzw
add r0.w, r0.w, r1.w
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, v3.xyxx, t4.xyzw, s0
dp4 r1.w, r5.xyzw, cb6[11].xyzw
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, v3.xyxx, t5.xyzw, s0
dp4 r2.w, r5.xyzw, cb6[12].xyzw
add r1.w, r1.w, r2.w
add r0.w, r0.w, r1.w
sample_indexable(texture2d)(float,float,float,float) r5.xyz, v3.xyxx, t6.xyzw, s0
dp3 r1.w, r5.xyzx, cb6[13].xyzx
add r0.w, r0.w, r1.w
sample_indexable(texture2d)(float,float,float,float) r5.xy, v3.xyxx, t7.xyzw, s1
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r5.xyxx, r5.xyxx
add r1.w, -r1.w, l(1.000000)
max r1.w, r1.w, l(0.000000)
sqrt r5.z, r1.w
add r5.xyz, -r2.xyzx, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, v3.xyxx, t8.xyzw, s0
mul r1.w, r8.y, cb6[14].x
mad r1.w, r8.x, cb6[13].w, r1.w
dp2 r2.w, r8.zwzz, cb6[14].yzyy
add r1.w, r1.w, r2.w
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, v3.xyxx, t9.xyzw, s0
mul r2.w, r8.y, cb6[15].x
mad r2.w, r8.x, cb6[14].w, r2.w
dp2 r3.w, r8.zwzz, cb6[15].yzyy
add r2.w, r2.w, r3.w
add r1.w, r1.w, r2.w
sample_indexable(texture2d)(float,float,float,float) r8.xy, v3.xyxx, t10.xyzw, s0
mul r2.w, r8.y, cb6[16].x
mad r2.w, r8.x, cb6[15].w, r2.w
add r1.w, r1.w, r2.w
mul r5.xyz, r1.wwww, r5.xyzx
mad r3.xyz, r3.xyzx, r0.wwww, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.xy, v3.xyxx, t11.xyzw, s1
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r5.xyxx, r5.xyxx
add r2.w, -r2.w, l(1.000000)
max r2.w, r2.w, l(0.000000)
sqrt r5.z, r2.w
add r5.xyz, -r2.xyzx, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, v3.xyxx, t12.xyzw, s0
dp2 r2.w, r8.xyxx, cb6[16].yzyy
mul r3.w, r8.w, cb6[17].x
mad r3.w, r8.z, cb6[16].w, r3.w
add r2.w, r2.w, r3.w
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, v3.xyxx, t13.xyzw, s0
dp2 r3.w, r8.xyxx, cb6[17].yzyy
mul r4.w, r8.w, cb6[18].x
mad r4.w, r8.z, cb6[17].w, r4.w
add r3.w, r3.w, r4.w
add r2.w, r2.w, r3.w
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, v3.xyxx, t14.xyzw, s0
dp2 r3.w, r8.xyxx, cb6[18].yzyy
mul r4.w, r8.w, cb6[19].x
mad r4.w, r8.z, cb6[18].w, r4.w
add r3.w, r3.w, r4.w
add r2.w, r2.w, r3.w
mad r3.xyz, r5.xyzx, r2.wwww, r3.xyzx
add r2.xyz, r2.xyzx, r3.xyzx
add r2.xyz, r2.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mul r3.xy, v3.xyxx, cb6[19].yyyy
sample_indexable(texture2d)(float,float,float,float) r3.zw, r3.xyxx, t15.zwxy, s0
add r5.xy, r3.zwzz, r3.zwzz
mad r3.zw, r3.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r3.z, r3.zwzz, r3.zwzz
add r3.z, -r3.z, l(1.000000)
max r3.z, r3.z, l(0.000000)
sqrt r5.z, r3.z
add r5.xyz, r5.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r5.xyz, cb6[19].zzzz, r5.xyzx, l(1.000000, 1.000000, 2.000000, 0.000000)
mad r5.xyz, r5.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000), l(1.000000, 1.000000, -1.000000, 0.000000)
dp3 r3.z, r2.xyzx, r5.xyzx
mul r5.xyz, r2.zzzz, r5.xyzx
mad r2.xyz, r2.xyzx, r3.zzzz, -r5.xyzx
mad r2.xyz, r2.xyzx, r23.wwww, r23.xyzx
dp3 r3.z, r2.xyzx, r2.xyzx
rsq r3.z, r3.z
mul r2.xyz, r2.xyzx, r3.zzzz
mul r5.xyz, r7.xyzx, r2.yyyy
mad r5.xyz, r2.xxxx, v0.xyzx, r5.xyzx
mad r2.xyz, r2.zzzz, v1.xyzx, r5.xyzx
dp3 r3.z, r2.xyzx, r2.xyzx
rsq r3.z, r3.z
mul r2.xyz, r2.xyzx, r3.zzzz
sample_indexable(texture2d)(float,float,float,float) r5.xyz, v3.xyxx, t16.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r7.xyz, v3.xyxx, t17.xyzw, s1
add r7.xyz, -r5.xyzx, r7.xyzx
sample_indexable(texture2d)(float,float,float,float) r8.xyz, v3.xyxx, t18.xyzw, s1
add r8.xyz, -r5.xyzx, r8.xyzx
mul r8.xyz, r1.wwww, r8.xyzx
mad r7.xyz, r7.xyzx, r0.wwww, r8.xyzx
sample_indexable(texture2d)(float,float,float,float) r8.xyz, v3.xyxx, t19.xyzw, s1
add r8.xyz, -r5.xyzx, r8.xyzx
mad r7.xyz, r8.xyzx, r2.wwww, r7.xyzx
add r5.xyz, r5.xyzx, r7.xyzx
dp3 r0.w, r5.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
add r7.xyz, -r5.xyzx, r0.wwww
mad r5.xyz, cb6[20].xxxx, r7.xyzx, r5.xyzx
mul r5.xyz, r5.xyzx, cb6[6].xyzx
mul r5.xyz, r5.xyzx, cb6[20].yyyy
max r5.xyz, |r5.xyzx|, l(0.000001, 0.000001, 0.000001, 0.000000)
log r5.xyz, r5.xyzx
mul r5.xyz, r5.xyzx, cb6[20].zzzz
exp r5.xyz, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r7.xyz, v3.xyxx, t20.xyzw, s1
add_sat r7.yzw, r7.xxyz, cb6[8].xxyz
add r7.yzw, r7.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r7.yzw, cb6[21].zzzz, r7.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
mul r5.xyz, r5.xyzx, r7.yzwy
mul_sat r5.xyz, r5.xyzx, cb6[3].xyzx
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, v3.xyxx, t21.xyzw, s1
add r0.w, cb6[21].w, -cb6[22].x
mad r0.w, r8.z, r0.w, cb6[22].x
mad r1.w, r8.z, cb6[22].y, -r0.w
mad r0.w, r8.w, r1.w, r0.w
add r1.w, r8.x, l(-1.000000)
mad r1.w, cb6[22].z, r1.w, l(1.000000)
mad r0.w, r0.w, r1.w, cb5[1].y
add r1.w, r7.x, l(-1.000000)
mad r1.w, cb6[23].x, r1.w, l(1.000000)
mul_sat r0.w, r0.w, r1.w
add r1.w, -cb6[23].z, cb6[23].y
mad r1.w, r8.y, r1.w, cb6[23].z
sample_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t22.xyzw, s0
mad r1.w, r2.w, cb6[19].z, r1.w
add r1.w, r1.w, l(-0.100000)
mad r2.w, r1.w, cb6[23].w, -r1.w
mad r1.w, r8.w, r2.w, r1.w
mad_sat r1.w, -cb5[1].y, cb6[24].x, r1.w
sample_indexable(texture2d)(float,float,float,float) r2.w, v3.xyxx, t23.xzwy, s1
mul r2.w, r8.w, r2.w
add r3.x, -cb6[24].z, cb6[24].y
mad r2.w, r2.w, r3.x, cb6[24].z
add r3.x, -r8.w, l(1.000000)
mul r2.w, r2.w, r3.x
lt r3.x, r2.w, cb6[24].w
mad o2.z, r1.w, r24.y, r24.x
mov_sat r2.w, r2.w
movc r1.w, r3.x, l(0), r2.w
lt r2.w, l(0.000000), cb3[11].y
movc o6.x, r2.w, cb4[5].x, cb3[19].z
lt r2.w, l(0.000000), r1.w
and o5.x, r2.w, cb6[25].x
mov o5.yz, l(0,0,0,0)
and o5.w, r1.w, r2.w
div r3.xy, r4.xyxx, r4.zzzz
div r3.zw, v5.xxxy, v5.wwww
add r3.xyzw, -r6.xyzw, r3.xyzw
add r3.xy, -r3.zwzz, r3.xyxx
mad r3.xy, r3.xyxx, l(0.249500, 0.249500, 0.000000, 0.000000), l(0.499992371, 0.499992371, 0.000000, 0.000000)
mul o4.xy, r3.xyxx, v5.zzzz
mov o4.zw, l(0,0,0,0)
mul r1.w, r0.w, l(0.080000)
ftou r3.xy, v6.xyxx
ftou r3.z, r27.x
iadd r3.x, r3.y, r3.x
iadd r3.x, r3.z, r3.x
and r3.x, r3.x, l(1)
lt r3.y, l(0.000000), r28.x
lt r3.z, l(0.000000), r29.w
and r3.w, r3.z, r3.y
ne r4.x, l(0.000000, 0.000000, 0.000000, 0.000000), r28.x
movc r4.xyz, r4.xxxx, l(1.000000,1.000000,1.000000,0), r5.xyzx
movc r6.xy, r3.xxxx, l(1.000000,0,0,0), l(0,1.000000,0,0)
mul r3.x, r1.w, r6.y
movc r4.xyz, r3.wwww, r6.xxxx, r4.xyzx
movc r3.x, r3.w, r3.x, r1.w
movc r4.xyz, r2.wwww, r4.xyzx, r5.xyzx
movc r1.w, r2.w, r3.x, r1.w
mad r4.xyz, r4.xyzx, r21.wwww, r21.xyzx
mad r6.xzw, r1.wwww, r22.wwww, r22.xxyz
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
div r0.x, r0.x, cb0[33].w
log r0.x, r0.x
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(6.000000)
round_pi r0.x, r0.x
mul r7.xyz, r1.xyzx, cb0[30].xyzx
mad r8.xyz, r1.xyzx, cb0[30].xyzx, -cb0[31].xyzx
max r0.y, |r8.y|, |r8.x|
max r0.y, |r8.z|, r0.y
mul r0.y, r0.y, l(4.000000)
log r0.y, r0.y
max r0.y, r0.y, l(0.000000)
round_ni r0.y, r0.y
max r0.x, r0.x, r0.y
exp r0.y, r0.x
div r8.xyz, r7.xyzx, r0.yyyy
frc r8.xyz, r8.xyzx
mul r0.x, r0.x, l(0.142857149)
mad r8.w, r8.z, l(0.142857149), r0.x
mul r0.xyz, cb0[32].xyzx, l(1.000000, 1.000000, 7.000000, 0.000000)
mul r8.xyz, r0.xyzx, r8.xywx
round_ni r8.xyz, r8.xyzx
add r8.xyz, r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
div r0.xyz, r8.xyzx, r0.xyzx
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r0.xyzx, t24.xyzw, s2, l(0.000000)
mul r8.xyzw, r8.xyzw, l(255.000000, 255.000000, 255.000000, 255.000000)
div r0.xyz, cb0[32].xyzx, r8.wwww
mul r0.xyz, r0.xyzx, r7.xyzx
frc r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(0.666666687, 0.666666687, 0.666666687, 0.000000), r8.xyzx
add r0.xyz, r0.xyzx, l(0.166666672, 0.166666672, 0.166666672, 0.000000)
mul r0.xyz, r0.xyzx, cb0[33].xyzx
sample_l_indexable(texture3d)(float,float,float,float) r7.xyzw, r0.xyzx, t25.xyzw, s3, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r0.xyzx, t26.xyzw, s3, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r9.xyzw, r0.xyzx, t27.xyzw, s3, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r0.x, r0.xyzx, t28.yxzw, s3, l(0.000000)
dp3 r0.y, r7.yzwy, r7.yzwy
sqrt r0.z, r0.y
ne r1.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r7.yzw, r0.yyyy, r7.yyzw
dp3 r0.y, r2.xyzx, r7.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r7.x
add r3.x, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r3.x, r3.x, r3.w
mad r7.yz, r0.zzzz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r7.y
exp r0.y, r0.y
mul r0.z, r0.y, r7.z
mad r0.y, -r7.z, r0.y, l(1.000000)
mad r0.y, r3.x, r0.y, r0.z
mul r0.y, r0.y, r7.x
movc r7.x, r1.w, r0.y, r7.x
dp3 r0.y, r8.yzwy, r8.yzwy
sqrt r0.z, r0.y
ne r1.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r8.yzw, r0.yyyy, r8.yyzw
dp3 r0.y, r2.xyzx, r8.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r8.x
add r3.x, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r3.x, r3.x, r3.w
mad r8.yz, r0.zzzz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r8.y
exp r0.y, r0.y
mul r0.z, r0.y, r8.z
mad r0.y, -r8.z, r0.y, l(1.000000)
mad r0.y, r3.x, r0.y, r0.z
mul r0.y, r0.y, r8.x
movc r7.y, r1.w, r0.y, r8.x
dp3 r0.y, r9.yzwy, r9.yzwy
sqrt r0.z, r0.y
ne r1.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r8.xyz, r0.yyyy, r9.yzwy
dp3 r0.y, r2.xyzx, r8.xyzx
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r9.x
add r3.x, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r3.x, r3.x, r3.w
mad r8.xy, r0.zzzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(1.000000, 2.000000, 0.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r8.x
exp r0.y, r0.y
mul r0.z, r0.y, r8.y
mad r0.y, -r8.y, r0.y, l(1.000000)
mad r0.y, r3.x, r0.y, r0.z
mul r0.y, r0.y, r9.x
movc r7.z, r1.w, r0.y, r9.x
max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r8.xyz, r4.xyzx, r7.xyzx
mad r6.xzw, r6.xxzw, l(0.450000, 0.000000, 0.450000, 0.450000), r4.xxyz
max r9.xyz, cb6[2].xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.y, l(0.000000), r25.x
if_nz r0.y
  add r10.xyz, r1.xyzx, -cb3[8].xyzx
  add r11.xyz, cb3[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r10.xyz, r11.xyzx, |r10.xyzx|
  or r0.y, r10.y, r10.x
  or r0.y, r10.z, r0.y
  dp3 r0.z, r1.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r0.z, r0.z, l(0.002000)
  frc r0.z, r0.z
  lt r0.z, l(0.500000), r0.z
  movc r1.xyz, r0.zzzz, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r9.xyz, r0.yyyy, r1.xyzx, r9.xyzx
endif 
mad r1.xyz, r26.xxxx, r6.xzwx, r9.xyzx
and r0.y, r2.w, r3.y
and r0.y, r3.z, r0.y
mul r3.xyz, r6.yyyy, r1.xyzx
movc r1.xyz, r0.yyyy, r3.xyzx, r1.xyzx
mad o0.xyz, r7.xyzx, r4.xyzx, r1.xyzx
eq r0.y, r29.w, l(0.000000)
dp3 r0.z, r8.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
and r0.z, r0.z, r0.y
and r0.z, r0.z, r2.w
and o0.w, r0.z, r0.y
mul r1.xyz, v6.xyxx, l(0.00781250000, 0.00781250000, 0.00781250000, 0.000000)
frc r1.xyz, r1.xyzx
mad r1.xyz, r1.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000), l(-64.340622, -72.465622, -64.340622, 0.000000)
mul r1.xyz, r1.xyyx, r1.xyzx
dp3 r0.y, r1.xyzx, l(20.390625, 60.703125, 2.42812085, 0.000000)
frc r0.y, r0.y
add r0.y, r0.y, l(-0.500000)
mad o1.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
movc o2.w, r2.w, l(0.0196078438), l(0.00392156886)
mul o3.w, r0.y, l(0.00392156886)
mov_sat r0.x, r0.x
sqrt o7.xyzw, r0.xxxx
mov o1.w, cb3[11].x
mov o2.x, l(0)
mov o2.y, r0.w
mov o3.xyz, r5.xyzx
mov o6.yzw, cb3[19].zzzz
ret 
// Approximately 0 instruction slots used