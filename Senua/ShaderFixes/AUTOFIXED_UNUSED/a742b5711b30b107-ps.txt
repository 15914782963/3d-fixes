// asmtool.py --remap-cb 1 101 -i --only-autofixed --disable-driver-stereo-cb 12 a742b5711b30b107-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 14:24:15 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// SV_POSITION              0   xyzw        1      POS   float       
// SV_RenderTargetArrayIndex     0   x           2  RTINDEX    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[53], dynamicIndexed
dcl_constantbuffer cb1[141], dynamicIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_comparison
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear noperspective v0.xy
dcl_input_ps_siv constant v2.x, rendertarget_array_index
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 9
dcl_resource_structured t101, 2048

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 -i --only-autofixed --disable-driver-stereo-cb 12 a742b5711b30b107-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r7.xyzw, l(1), l(64), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r8.xyzw, l(1), l(160), t101.xyzw

utof r0.x, v2.x
add r0.x, r0.x, l(0.500000)
mov r0.y, cb0[3].x
mad r1.z, r0.x, cb1[r0.y + 139].w, cb1[r0.y + 137].z
div r0.zw, v0.yyyx, cb1[r0.y + 139].yyyx
add r0.zw, r0.zzzw, cb1[r0.y + 137].yyyx
mul r1.w, l(0.500000), cb1[r0.y + 139].w
mad r1.xy, -cb1[r0.y + 139].wwww, l(0.500000, 0.500000, 0.000000, 0.000000), r0.zwzz
mul r0.z, r0.x, cb1[r0.y + 137].w
add r2.xyz, -r1.xzyx, cb2[0].yzxy
mul r0.w, cb2[0].w, cb2[0].w
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
dp3 r2.w, r2.xyzx, r2.xyzx
add r0.w, r0.w, -r2.w
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
rsq r0.w, r2.w
mul r2.xyz, r0.wwww, r2.xyzx
mul r3.xyz, r1.wwww, r2.zxyz
dp3 r0.w, |r3.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
add r1.xyz, r0.wwww, r1.xyzx
add r3.xyz, -r1.yxzy, cb2[0].xyzx
mul r4.xyz, r3.xyzx, cb2[0].wwww
dp3 r0.w, r4.xyzx, r4.xyzx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
log r0.w, r0.w
mul r0.w, r0.w, cb2[1].w
exp r0.w, r0.w
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r2.w, r1.w
mul r4.xyz, r2.wwww, r3.xyzx
dp3 r2.w, r4.xyzx, cb2[2].xyzx
add r2.w, r2.w, -cb2[3].x
mul_sat r2.w, r2.w, cb2[3].y
mul r2.w, r2.w, r2.w
mul r4.x, r0.w, r2.w
if_nz cb0[48].w
  lt r0.w, cb0[48].x, l(1.000000)
  if_nz r0.w
    add r5.xyz, r1.xyzx, -cb2[0].yxzy
    dp3 r0.w, r5.xyzx, r5.xyzx
    sqrt r0.w, r0.w
    div r5.xyz, r5.xyzx, r0.wwww
    min r2.w, |r5.y|, |r5.x|
    max r3.w, |r5.y|, |r5.x|
    div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
    mul r2.w, r2.w, r3.w
    mul r3.w, r2.w, r2.w
    mad r4.z, r3.w, l(0.0208350997), l(-0.085133)
    mad r4.z, r3.w, r4.z, l(0.180141)
    mad r4.z, r3.w, r4.z, l(-0.330299497)
    mad r3.w, r3.w, r4.z, l(0.999866)
    mul r4.z, r2.w, r3.w
    lt r4.w, |r5.y|, |r5.x|
    mad r4.z, r4.z, l(-2.000000), l(1.57079637)
    and r4.z, r4.w, r4.z
    mad r2.w, r2.w, r3.w, r4.z
    lt r4.zw, r5.yyyz, -r5.yyyz
    and r3.w, r4.z, l(0xc0490fdb)
    add r2.w, r2.w, r3.w
    min r3.w, r5.y, r5.x
    max r4.z, r5.y, r5.x
    lt r3.w, r3.w, -r3.w
    ge r4.z, r4.z, -r4.z
    and r3.w, r3.w, r4.z
    movc r2.w, r3.w, -r2.w, r2.w
    mul r3.w, r2.w, l(0.159154937)
    lt r4.z, l(0.000000), r2.w
    mad r2.w, r2.w, l(0.159154937), l(1.000000)
    movc r5.x, r4.z, r3.w, r2.w
    add r2.w, -|r5.z|, l(1.000000)
    sqrt r2.w, r2.w
    mad r3.w, |r5.z|, l(-0.0187292993), l(0.074261)
    mad r3.w, r3.w, |r5.z|, l(-0.212114394)
    mad r3.w, r3.w, |r5.z|, l(1.57072878)
    mul r4.z, r2.w, r3.w
    mad r4.z, r4.z, l(-2.000000), l(3.14159274)
    and r4.z, r4.w, r4.z
    mad r2.w, r3.w, r2.w, r4.z
    mul r5.y, r2.w, l(0.318309873)
    sample_l_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t4.yzwx, s4, l(0.000000)
    mul r0.w, r0.w, cb2[0].w
    lt r0.w, r0.w, r2.w
    and r0.w, r0.w, l(0x3f800000)
  else 
    mul r5.xyzw, r1.xxxx, cb0[50].xyzw
    mad r5.xyzw, r1.yyyy, cb0[49].xyzw, r5.xyzw
    mad r5.xyzw, r1.zzzz, cb0[51].xyzw, r5.xyzw
    add r5.xyzw, r5.xyzw, cb0[52].xyzw
    div r4.zw, r5.xxxy, r5.wwww
    ge r5.xy, r4.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
    ge r6.xy, l(1.000000, 1.000000, 0.000000, 0.000000), r4.zwzz
    and r5.xy, r5.xyxx, r6.xyxx
    and r2.w, r5.y, r5.x
    if_nz r2.w
      sample_l_indexable(texture2d)(float,float,float,float) r2.w, r4.zwzz, t4.yzwx, s4, l(0.000000)
      lt r2.w, r5.z, r2.w
      and r0.w, r2.w, l(0x3f800000)
    else 
      mov r0.w, l(1.000000)
    endif 
  endif 
else 
  mov r0.w, l(1.000000)
endif 
lt r2.w, cb0[48].x, l(1.000000)
if_nz r2.w
  sqrt r1.w, r1.w
  mul r2.w, r1.w, cb2[0].w
  lt r2.w, r2.w, l(1.000000)
  if_nz r2.w
    mul r2.w, cb0[32].x, l(15.360000)
    div r5.xyz, r3.xyzx, r1.wwww
    max r1.w, |r3.z|, |r3.y|
    max r1.w, r1.w, |r3.x|
    eq r6.xyz, r3.xyzx, |r3.xyzx|
    eq r3.xy, |r3.xyxx|, r1.wwww
    movc r6.xyz, r6.xyzx, l(0,2,4,0), l(1,3,5,0)
    movc r1.w, r3.y, r6.y, r6.z
    movc r1.w, r3.x, r6.x, r1.w
    ishl r1.w, r1.w, l(2)
    mul r3.xy, r1.xxxx, cb0[r1.w + 9].zwzz
    mad r3.xy, r1.yyyy, cb0[r1.w + 8].zwzz, r3.xyxx
    mad r3.xy, r1.zzzz, cb0[r1.w + 10].zwzz, r3.xyxx
    add r3.xy, r3.xyxx, cb0[r1.w + 11].zwzz
    div r1.w, r3.x, r3.y
    div r2.w, -r2.w, r3.y
    add r1.w, r1.w, r2.w
    sample_c_lz_indexable(texturecube)(float,float,float,float) r1.w, r5.xyzx, t3.xxxx, s3, r1.w
  else 
    mov r1.w, l(1.000000)
  endif 
else 
  mul r3.xyzw, r1.xxxx, cb0[39].xyzw
  mad r3.xyzw, r1.yyyy, cb0[38].xyzw, r3.xyzw
  mad r3.xyzw, r1.zzzz, cb0[40].xyzw, r3.xyzw
  add r3.xyzw, r3.xyzw, cb0[41].xyzw
  div r3.xy, r3.xyxx, r3.wwww
  ge r4.zw, r3.xxxy, cb0[42].xxxy
  ge r5.xy, cb0[42].zwzz, r3.xyxx
  and r4.zw, r4.zzzw, r5.xxxy
  and r2.w, r4.w, r4.z
  if_nz r2.w
    sample_l_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t2.yzwx, s2, l(0.000000)
    add r2.w, r2.w, -cb0[48].y
    lt r2.w, r3.z, r2.w
    and r1.w, r2.w, l(0x3f800000)
  else 
    mov r1.w, l(1.000000)
  endif 
endif 
min r4.y, r0.w, r1.w
ieq r0.w, cb0[3].x, l(1)
mad r1.w, r8.w, l(4.000000), l(1.000000)
mov r0.xy, v0.xyxx
add r2.w, r8.w, r8.w
mad r0.xyz, r0.xyzx, r1.wwww, -r2.wwww
add r0.xyz, r0.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r0.xyz, -|r0.xyzx|, l(0.500000, 0.500000, 0.500000, 0.000000)
mul_sat r0.xyz, r0.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
mul r0.x, r0.y, r0.x
mul r0.x, r0.z, r0.x
mul r0.xy, r4.xyxx, r0.xxxx
movc r0.xy, r0.wwww, r0.xyxx, r4.xyxx
mul r3.xyzw, r1.xxxx, cb0[35].xyzw
mad r3.xyzw, r1.yyyy, cb0[34].xyzw, r3.xyzw
mad r1.xyzw, r1.zzzz, cb0[36].xyzw, r3.xyzw
add r1.xyzw, r1.xyzw, cb0[37].xyzw
div r1.xyz, r1.yzxy, r1.wwww
mul r0.z, r1.z, cb0[33].x
div r0.zw, r1.yyyx, r0.zzzz
mad r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
lt r3.xy, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[33].zwzz
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r1.xyzx
min r1.z, |r4.y|, |r4.x|
max r1.w, |r4.y|, |r4.x|
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
mul r1.z, r1.w, r1.z
mul r1.w, r1.z, r1.z
mad r2.w, r1.w, l(0.0208350997), l(-0.085133)
mad r2.w, r1.w, r2.w, l(0.180141)
mad r2.w, r1.w, r2.w, l(-0.330299497)
mad r1.w, r1.w, r2.w, l(0.999866)
mul r2.w, r1.w, r1.z
lt r3.z, |r4.y|, |r4.x|
mad r2.w, r2.w, l(-2.000000), l(1.57079637)
and r2.w, r3.z, r2.w
mad r1.z, r1.z, r1.w, r2.w
lt r3.zw, r4.yyyz, -r4.yyyz
and r1.w, r3.z, l(0xc0490fdb)
add r1.z, r1.w, r1.z
min r1.w, r4.y, r4.x
max r2.w, r4.y, r4.x
lt r1.w, r1.w, -r1.w
ge r2.w, r2.w, -r2.w
and r1.w, r1.w, r2.w
movc r1.z, r1.w, -r1.z, r1.z
add r1.z, r1.z, l(3.14159274)
mul r4.x, r1.z, l(0.159154937)
add r1.z, -|r4.z|, l(1.000000)
sqrt r1.z, r1.z
mad r1.w, |r4.z|, l(-0.0187292993), l(0.074261)
mad r1.w, r1.w, |r4.z|, l(-0.212114394)
mad r1.w, r1.w, |r4.z|, l(1.57072878)
mul r2.w, r1.z, r1.w
mad r2.w, r2.w, l(-2.000000), l(3.14159274)
and r2.w, r3.w, r2.w
mad r1.z, r1.w, r1.z, r2.w
mul r4.y, r1.z, l(0.318309873)
movc r1.xy, r3.yyyy, r4.xyxx, r1.yxyy
movc r0.zw, r3.xxxx, r0.zzzw, r1.xxxy
mul r1.xy, r0.zwzz, cb3[1].xyxx
sample_indexable(texture2d)(float,float,float,float) r1.z, r1.xyxx, t0.yzxw, s0
mul r1.w, r7.z, r7.z
mad r0.zw, cb3[5].zzzz, r1.wwww, r0.zzzw
sample_indexable(texture2d)(float,float,float,float) r0.zw, r0.zwzz, t1.zwxy, s1
mad r0.zw, r0.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r0.zw, r0.zzzw, cb3[5].wwww
mad r0.zw, r1.zzzz, r0.zzzw, r1.xxxy
sample_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t0.xzyw, s0
add r0.w, -cb3[6].y, cb3[6].x
mad r0.z, r0.z, r0.w, cb3[6].y
add r1.xyz, r0.zzzz, cb3[2].xyzx
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r0.z, r1.xyzx, l(0.333300, 0.333300, 0.333300, 0.000000)
mul r0.y, r0.z, r0.y
mul r0.xzw, r0.xxxx, cb2[1].xxyz
mul r0.xyz, r0.yyyy, r0.xzwx
mul r1.yzw, r2.xxyz, l(0.000000, -0.488603, 0.488603, -0.488603)
mov r1.x, l(0.0897936225)
mul r0.w, r0.x, l(0.318309873)
mul r2.xyzw, r0.xwww, r1.xyzw
mul r3.xyzw, r0.yyyy, l(1.000000, 0.318309873, 0.318309873, 0.318309873)
mul r3.xyzw, r1.xyzw, r3.xyzw
mul r0.xyzw, r0.zzzz, l(1.000000, 0.318309873, 0.318309873, 0.318309873)
mul r0.xyzw, r0.xyzw, r1.xyzw
mov r1.x, r2.y
mov r1.y, r3.y
mov r1.z, r0.y
dp3 o1.x, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mov r1.x, r2.z
mov r1.y, r3.z
mov r1.z, r0.z
dp3 o1.y, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mov r1.x, r2.w
mov r1.y, r3.w
mov r1.z, r0.w
dp3 o1.z, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mov o0.x, r2.x
mov o0.y, r3.x
mov o0.z, r0.x
mov o0.w, l(0)
mov o1.w, l(0)
ret 
// Approximately 0 instruction slots used