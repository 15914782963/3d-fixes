// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 da70f9866efa6426-vs.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:43:22 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz 
// ATTRIBUTE                1   xyz         1     NONE   float       
// ATTRIBUTE                2   xyzw        2     NONE   float   xyz 
// ATTRIBUTE                3   xyzw        3     NONE    uint   xyzw
// ATTRIBUTE               14   xyzw        4     NONE    uint   xyzw
// ATTRIBUTE                4   xyzw        5     NONE   float   xyzw
// ATTRIBUTE               15   xyzw        6     NONE   float   xyzw
// ATTRIBUTE                5   xy          7     NONE   float   xy  
// ATTRIBUTE                9   xyz         8     NONE   float   xyz 
// ATTRIBUTE               10   xyz         9     NONE   float   xyz 
// ATTRIBUTE               13   xyzw       10     NONE   float       
// SV_InstanceID            0   x          11   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// SV_POSITION              0   xyzw        1      POS   float   xyzw
// SV_ClipDistance          1   x           2  CLIPDST   float   x   
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} }
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[167], immediateIndexed
dcl_constantbuffer cb2[165], immediateIndexed
dcl_constantbuffer cb3[4], immediateIndexed
dcl_constantbuffer cb4[13], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_input v0.xyz
dcl_input v2.xyz
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_input v7.xy
dcl_input v8.xyz
dcl_input v9.xyz
dcl_input_sgv v11.x, instance_id
dcl_output o0.xy
dcl_output_siv o1.xyzw, position
dcl_output_siv o2.x, clip_distance
dcl_temps 27
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 2048
// Disables driver stereo correction:
dcl_constantbuffer cb12[4], immediateIndexed

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 da70f9866efa6426-vs.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(16), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(48), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(1), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(1), l(608), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 da70f9866efa6426-vs.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(0), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(0), l(16), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(0), l(32), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(0), l(48), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r26.xyzw, l(1), l(576), t102.xyzw

if_nz cb0[9].x
  mov r0.x, r20.w
else 
  and r0.x, v11.x, l(1)
endif 
if_z r0.x
  mov r1.x, r14.x
  mov r1.y, r15.x
  mov r1.z, r16.x
  mov r1.w, r17.x
  mov r2.x, r14.y
  mov r2.y, r15.y
  mov r2.z, r16.y
  mov r2.w, r17.y
  mov r3.x, r14.z
  mov r3.y, r15.z
  mov r3.z, r16.z
  mov r3.w, r17.z
  mov r4.x, r14.w
  mov r4.y, r15.w
  mov r4.z, r16.w
  mov r4.w, r17.w
  mov r0.yzw, r18.xxyz
  mov r5.x, r19.y
else 
  mov r1.x, r21.x
  mov r1.y, r22.x
  mov r1.z, r23.x
  mov r1.w, r24.x
  mov r2.x, r21.y
  mov r2.y, r22.y
  mov r2.z, r23.y
  mov r2.w, r24.y
  mov r3.x, r21.z
  mov r3.y, r22.z
  mov r3.z, r23.z
  mov r3.w, r24.z
  mov r4.x, r21.w
  mov r4.y, r22.w
  mov r4.z, r23.w
  mov r4.w, r24.w
  mov r0.yzw, r25.xxyz
  mov r5.x, r26.y
endif 
mad r5.yzw, v0.xxyz, cb0[8].xxyz, cb0[7].xxyz
imul null, r6.xyzw, v3.xyzw, l(3, 3, 3, 3)
ld_indexable(buffer)(float,float,float,float) r7.xyzw, r6.xxxx, t0.xyzw
imad r8.xyzw, v3.xxyy, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r9.xyzw, r8.xxxx, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r10.xyzw, r8.yyyy, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r11.xyzw, r6.yyyy, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r12.xyzw, r8.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r8.wwww, t0.xyzw
mul r11.xyzw, r11.xyzw, v5.yyyy
mul r12.xyzw, r12.xyzw, v5.yyyy
mul r8.xyzw, r8.xyzw, v5.yyyy
mad r7.xyzw, v5.xxxx, r7.xyzw, r11.xyzw
mad r9.xyzw, v5.xxxx, r9.xyzw, r12.xyzw
mad r8.xyzw, v5.xxxx, r10.xyzw, r8.xyzw
ld_indexable(buffer)(float,float,float,float) r10.xyzw, r6.zzzz, t0.xyzw
imad r11.xyzw, v3.zzww, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r12.xyzw, r11.xxxx, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r13.xyzw, r11.yyyy, t0.xyzw
mad r7.xyzw, v5.zzzz, r10.xyzw, r7.xyzw
mad r9.xyzw, v5.zzzz, r12.xyzw, r9.xyzw
mad r8.xyzw, v5.zzzz, r13.xyzw, r8.xyzw
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r6.wwww, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r10.xyzw, r11.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r11.xyzw, r11.wwww, t0.xyzw
mad r6.xyzw, v5.wwww, r6.xyzw, r7.xyzw
mad r7.xyzw, v5.wwww, r10.xyzw, r9.xyzw
mad r8.xyzw, v5.wwww, r11.xyzw, r8.xyzw
imul null, r9.xyzw, v4.xyzw, l(3, 3, 3, 3)
ld_indexable(buffer)(float,float,float,float) r10.xyzw, r9.xxxx, t0.xyzw
imad r11.xyzw, v4.xxyy, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r12.xyzw, r11.xxxx, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r13.xyzw, r11.yyyy, t0.xyzw
mad r6.xyzw, v6.xxxx, r10.xyzw, r6.xyzw
mad r7.xyzw, v6.xxxx, r12.xyzw, r7.xyzw
mad r8.xyzw, v6.xxxx, r13.xyzw, r8.xyzw
ld_indexable(buffer)(float,float,float,float) r10.xyzw, r9.yyyy, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r12.xyzw, r11.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r11.xyzw, r11.wwww, t0.xyzw
mad r6.xyzw, v6.yyyy, r10.xyzw, r6.xyzw
mad r7.xyzw, v6.yyyy, r12.xyzw, r7.xyzw
mad r8.xyzw, v6.yyyy, r11.xyzw, r8.xyzw
ld_indexable(buffer)(float,float,float,float) r10.xyzw, r9.zzzz, t0.xyzw
imad r11.xyzw, v4.zzww, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r12.xyzw, r11.xxxx, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r13.xyzw, r11.yyyy, t0.xyzw
mad r6.xyzw, v6.zzzz, r10.xyzw, r6.xyzw
mad r7.xyzw, v6.zzzz, r12.xyzw, r7.xyzw
mad r8.xyzw, v6.zzzz, r13.xyzw, r8.xyzw
ld_indexable(buffer)(float,float,float,float) r9.xyzw, r9.wwww, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r10.xyzw, r11.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r11.xyzw, r11.wwww, t0.xyzw
mad r6.xyzw, v6.wwww, r9.xyzw, r6.xyzw
mad r7.xyzw, v6.wwww, r10.xyzw, r7.xyzw
mad r8.xyzw, v6.wwww, r11.xyzw, r8.xyzw
mad r9.xyz, v2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), v9.xyzx
add r9.xyz, r9.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r9.w, r9.xyzx, r9.xyzx
rsq r9.w, r9.w
mul r9.xyz, r9.wwww, r9.xyzx
dp3 r9.w, r6.xyzx, r9.xyzx
dp3 r10.x, r7.xyzx, r9.xyzx
dp3 r9.x, r8.xyzx, r9.xyzx
add r11.xyz, r5.yzwy, v8.xyzx
mov r11.w, l(1.000000)
dp4 r5.y, r6.xyzw, r11.xyzw
dp4 r5.z, r7.xyzw, r11.xyzw
dp4 r5.w, r8.xyzw, r11.xyzw
mul r6.xyz, r5.zzzz, cb3[1].xyzx
mad r6.xyz, cb3[0].xyzx, r5.yyyy, r6.xyzx
mad r5.yzw, cb3[2].xxyz, r5.wwww, r6.xxyz
add r0.yzw, r0.yyzw, cb3[3].xxyz
add r0.yzw, r0.yyzw, r5.yyzw
mul r5.yzw, r10.xxxx, cb3[1].xxyz
mad r5.yzw, r9.wwww, cb3[0].xxyz, r5.yyzw
mad r5.yzw, r9.xxxx, cb3[2].xxyz, r5.yyzw
add r6.x, -cb4[9].y, cb4[9].x
mad r6.x, v7.x, r6.x, cb4[9].y
max r6.x, |r6.x|, l(0.000001)
log r6.x, r6.x
mul r6.x, r6.x, cb4[9].z
exp r6.x, r6.x
mul r6.x, r6.x, cb4[12].x
mad r6.xyz, r5.yzwy, r6.xxxx, r0.yzwy
mov r6.w, l(1.000000)
dp4 r1.x, r6.xyzw, r1.xyzw
dp4 r1.y, r6.xyzw, r2.xyzw
dp4 r1.z, r6.xyzw, r3.xyzw
dp4 r1.w, r6.xyzw, r4.xyzw
or r0.y, cb0[0].x, cb0[9].x
if_nz r0.y
  mov r2.x, icb[r0.x + 0].x
  mov r2.y, l(1.000000)
  dp2 o2.x, r1.xwxx, r2.xyxx
  mul r0.y, r5.x, l(0.500000)
  mul r0.x, r1.w, icb[r0.x + 0].x
  mad r0.z, -r5.x, l(0.500000), l(1.000000)
  mul r0.x, r0.z, r0.x
  mad r1.x, r1.x, r0.y, r0.x
else 
  mov o2.x, l(0)
endif 
mov o1.xyzw, r1.xyzw
mov o0.xy, v7.xyxx
ret 
// Approximately 0 instruction slots used