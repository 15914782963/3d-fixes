// asmtool.py --remap-cb 0 100 --remap-cb 1 101 -i --only-autofixed --disable-driver-stereo-cb 12 0b52bbad697ff93f-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:43:21 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xy  
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
// PACKED_EYE_INDEX         0   x           2     NONE    uint   x   
// SV_Position              0   xyzw        3      POS   float   xy w
// SV_IsFrontFace           0   x           4    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[142], immediateIndexed
dcl_constantbuffer cb1[123], immediateIndexed
dcl_constantbuffer cb2[13], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps constant v2.x
dcl_input_ps_siv linear noperspective v3.xyw, position
dcl_output o0.xyzw
dcl_temps 11
dcl_resource_structured t100, 2048
dcl_resource_structured t101, 1968

// cb0 remapped to t100 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 0 100 --remap-cb 1 101 -i --only-autofixed --disable-driver-stereo-cb 12 0b52bbad697ff93f-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r3.xyzw, l(0), l(864), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r4.xyzw, l(0), l(1936), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r5.xyzw, l(0), l(1952), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r6.xyzw, l(0), l(1968), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r7.xyzw, l(1), l(208), t100.xyzw


// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 0 100 --remap-cb 1 101 -i --only-autofixed --disable-driver-stereo-cb 12 0b52bbad697ff93f-ps.txt
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r8.xyzw, l(0), l(864), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r9.xyzw, l(0), l(1936), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r10.xyzw, l(0), l(1952), t101.xyzw

and r0.x, v2.x, l(1)
if_z r0.x
  mov r0.xy, r4.xyxx
  mov r0.zw, r5.zzzw
  mov r1.xyzw, r3.xyzw
else 
  mov r0.xy, r9.xyxx
  mov r0.zw, r10.zzzw
  mov r1.xyzw, r8.xyzw
endif 
add r0.xy, -r0.xyxx, v3.xyxx
mad r0.xy, r0.xyxx, r0.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r0.xy, r0.xyxx, v3.wwww
mov r0.z, v3.w
mul r0.xyz, r0.xyzx, l(2.000000, -2.000000, 1.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.zwzz, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r2.x, v1.xyxx, t1.wxyz, s1
mul r2.x, r2.x, v0.y
mad r0.w, r0.w, v0.x, r2.x
div r0.xy, r0.xyxx, r0.zzzz
mad r0.xy, r0.xyxx, r1.xyxx, r1.wzww
mul r1.xy, r0.xyxx, r6.xyxx
mad r0.xy, r6.xyxx, r0.xyxx, r7.xxxx
ftou r0.xy, r0.xyxx
ishl r0.y, r0.y, l(1)
iadd r0.x, r0.y, r0.x
udiv null, r0.x, r0.x, l(5)
utof r0.x, r0.x
mul r0.yz, r1.xxyx, l(0.000000, 0.015625, 0.015625, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t2.yxzw, s2
mad r0.x, r0.y, cb2[12].y, r0.x
mul r0.x, r0.x, l(0.166666672)
mad r0.x, r0.w, cb2[12].x, r0.x
add r0.x, r0.x, l(-0.500000)
max r0.x, |r0.x|, l(0.000001)
log r0.x, r0.x
mul r0.x, r0.x, cb2[12].z
exp r0.x, r0.x
add r0.x, r0.x, l(-0.333300)
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
mov o0.xyzw, l(0,0,0,0)
ret 
// Approximately 0 instruction slots used