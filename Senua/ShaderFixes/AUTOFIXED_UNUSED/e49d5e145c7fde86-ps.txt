// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 e49d5e145c7fde86-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 14:21:00 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz 
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   x   
// TEXCOORD                 4   xyzw        3     NONE   float       
// TEXCOORD                 5   xy          4     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           5     NONE    uint   x   
// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
// TEXCOORD                12   xyz         7     NONE   float   xyz 
// TEXCOORD                13   xyz         8     NONE   float   xyz 
// SV_Position              0   xyzw        9      POS   float   xyzw
// SV_IsFrontFace           0   x          10    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[30], immediateIndexed
dcl_constantbuffer cb1[164], immediateIndexed
dcl_constantbuffer cb2[157], immediateIndexed
dcl_constantbuffer cb3[10], immediateIndexed
dcl_constantbuffer cb4[11], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.x
dcl_input_ps linear v4.xy
dcl_input_ps constant v5.x
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyz
dcl_input_ps_siv linear noperspective v9.xyzw, position
dcl_output o0.xyzw
dcl_temps 43
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 2048

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 e49d5e145c7fde86-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r11.xyzw, l(0), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(592), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(624), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(848), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(864), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(1936), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(1952), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(2016), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(2032), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(1), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(1), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(1), l(64), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(1), l(96), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r26.xyzw, l(1), l(448), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r27.xyzw, l(1), l(464), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r28.xyzw, l(1), l(480), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r29.xyzw, l(1), l(496), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r30.xyzw, l(1), l(512), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r31.xyzw, l(1), l(528), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r32.xyzw, l(1), l(544), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r33.xyzw, l(1), l(560), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 e49d5e145c7fde86-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r34.xyzw, l(0), l(576), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r35.xyzw, l(0), l(592), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r36.xyzw, l(0), l(608), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r37.xyzw, l(0), l(624), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r38.xyzw, l(0), l(864), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r39.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r40.xyzw, l(0), l(1936), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r41.xyzw, l(0), l(1952), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r42.xyzw, l(1), l(448), t102.xyzw

and r0.x, v5.x, l(1)
if_z r0.x
  mov r0.x, r11.x
  mov r0.y, r12.x
  mov r0.z, r13.x
  mov r0.w, r14.x
  mov r1.x, r11.y
  mov r1.y, r12.y
  mov r1.z, r13.y
  mov r1.w, r14.y
  mov r2.x, r11.z
  mov r2.y, r12.z
  mov r2.z, r13.z
  mov r2.w, r14.z
  mov r3.x, r11.w
  mov r3.y, r12.w
  mov r3.z, r13.w
  mov r3.w, r14.w
  mov r4.xy, r18.xyxx
  mov r4.zw, r19.zzzw
  mov r5.xyz, r17.xyzx
  mov r6.xyz, r26.xyzx
  mov r7.xyzw, r16.xyzw
else 
  mov r0.x, r34.x
  mov r0.y, r35.x
  mov r0.z, r36.x
  mov r0.w, r37.x
  mov r1.x, r34.y
  mov r1.y, r35.y
  mov r1.z, r36.y
  mov r1.w, r37.y
  mov r2.x, r34.z
  mov r2.y, r35.z
  mov r2.z, r36.z
  mov r2.w, r37.z
  mov r3.x, r34.w
  mov r3.y, r35.w
  mov r3.z, r36.w
  mov r3.w, r37.w
  mov r4.xy, r40.xyxx
  mov r4.zw, r41.zzzw
  mov r5.xyz, r39.xyzx
  mov r6.xyz, r42.xyzx
  mov r7.xyzw, r38.xyzw
endif 
mul r8.xyz, v0.yzxy, v1.zxyz
mad r8.xyz, v1.yzxy, v0.zxyz, -r8.xyzx
mul r8.xyz, r8.xyzx, v1.wwww
mov r9.xyz, v9.xyzx
mov r9.w, l(1.000000)
dp4 r0.x, r9.xyzw, r0.xyzw
dp4 r0.y, r9.xyzw, r1.xyzw
dp4 r0.z, r9.xyzw, r2.xyzw
dp4 r0.w, r9.xyzw, r3.xyzw
div r0.xyz, r0.xyzx, r0.wwww
resinfo_indexable(texture2d)(float,float,float,float) r1.xy, l(0), t5.xyzw
mul r1.xy, r1.xyxx, v4.xyxx
ftou r1.xy, r1.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.w, r1.xyzw, t5.yzwx
mad r0.w, r0.w, l(255.000000), l(0.500000)
ftou r0.w, r0.w
and r1.x, r0.w, l(15)
utof r1.x, r1.x
ushr r0.w, r0.w, l(4)
utof r0.w, r0.w
dp3 r1.y, r0.xyzx, r0.xyzx
sqrt r1.y, r1.y
div r1.y, r1.y, cb0[29].x
log r1.y, r1.y
max r1.x, r1.x, r1.y
min r0.w, r0.w, r1.x
add r1.xy, -r4.xyxx, v9.xyxx
mad r1.xy, r1.xyxx, r4.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r1.xy, r1.xyxx, v9.wwww
mov r1.z, v9.w
mul r1.xyw, r1.xyxz, l(2.000000, -2.000000, 0.000000, 1.000000)
add r0.xyz, -r5.xyzx, r0.xyzx
mad r2.xyz, r22.wwww, l(0.000000, 0.000000, 1.000000, 0.000000), r22.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mul r3.xyz, r8.xyzx, r2.yyyy
mad r2.xyw, r2.xxxx, v0.xyxz, r3.xyxz
mad r2.xyz, r2.zzzz, v1.xyzx, r2.xywx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mul r3.x, r24.z, cb4[8].x
div r4.xyzw, r0.xzyz, cb4[8].yyyy
mad r4.xyzw, r3.xxxx, l(0.010000, 0.700000, 0.010000, 0.700000), r4.xyzw
sample_indexable(texture2d)(float,float,float,float) r3.y, r4.xyxx, t0.yxzw, s0
div r5.xyzw, r0.xzyz, cb4[8].zzzz
mad r5.xyzw, r3.xxxx, l(-0.030000, 0.600000, -0.030000, 0.600000), r5.xyzw
sample_indexable(texture2d)(float,float,float,float) r3.x, r5.xyxx, t0.xyzw, s0
add r3.x, -r3.y, r3.x
mad r3.x, r3.x, l(0.500000), r3.y
sample_indexable(texture2d)(float,float,float,float) r3.y, r4.zwzz, t0.yxzw, s0
sample_indexable(texture2d)(float,float,float,float) r3.z, r5.zwzz, t0.yzxw, s0
add r3.z, -r3.y, r3.z
mad r3.y, r3.z, l(0.500000), r3.y
mul r3.y, r3.y, |v1.x|
mad r3.x, r3.x, |v1.y|, r3.y
mad r3.yzw, r3.xxxx, cb4[2].xxyz, cb4[3].xxyz
mul r4.xyz, r3.xxxx, cb4[7].xyzx
mul_sat r4.xyz, r4.xyzx, cb4[4].xyzx
add r3.x, r3.x, l(-1.000000)
mad r3.x, cb4[8].w, r3.x, l(1.000000)
add r4.w, -v2.x, l(1.000000)
mul r4.w, r4.w, v2.x
mul r4.w, r4.w, cb4[9].x
max r4.w, |r4.w|, l(0.000001)
log r4.w, r4.w
mul r4.w, r4.w, cb4[9].y
exp r4.w, r4.w
min r4.w, r4.w, l(1.000000)
mul r3.x, r3.x, r4.w
div r1.xy, r1.xyxx, r1.wwww
mad r1.xy, r1.xyxx, r7.xyxx, r7.wzww
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t1.xyzw, s1, l(0.000000)
mad r1.y, r1.x, r15.x, r15.y
mad r1.x, r1.x, r15.z, -r15.w
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
add r1.x, r1.x, r1.y
mad r1.x, -r1.z, l(1.000000), r1.x
div_sat r1.x, r1.x, cb4[9].w
mul r1.x, r1.x, cb4[10].x
mul_sat r1.w, r1.x, r3.x
mad r5.xyz, r4.xyzx, r20.wwww, r20.xyzx
mad r7.xyz, r21.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r21.xyzx
sample_l_indexable(texture2d)(float,float,float,float) r8.xyzw, v4.xyxx, t3.xyzw, s2, r0.w
max r3.x, r8.w, l(0.010000)
sample_l_indexable(texture2d)(float,float,float,float) r9.xyzw, v4.xyxx, t2.xyzw, s2, r0.w
div r9.xyzw, r9.yxzw, r3.xxxx
mad r4.w, r9.w, l(0.00390625000), r9.y
mov r9.y, l(1.000000)
dp3 r9.w, l(-1.000000, 1.000000, -1.000000, 0.000000), r9.xyzx
mul r9.xyz, r4.wwww, r9.xwzx
mul r9.xyz, r9.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r10.xyzw, v4.xyxx, t4.xyzw, s2, r0.w
div r10.xyzw, r10.xyzw, r3.xxxx
div r8.xyz, r8.xyzx, r3.xxxx
mad r8.xyz, r8.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r10.xyz, r10.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r10.xyzx, r2.xyzx
mad r0.w, -r0.w, l(0.500000), l(0.500000)
add r3.x, -r0.w, l(1.000000)
dp3 r4.w, r10.xyzx, r8.xyzx
add r8.xyz, r8.xyzx, r8.xyzx
mad r8.xyz, -r10.xyzx, r4.wwww, r8.xyzx
dp3 r4.w, r8.xyzx, r8.xyzx
rsq r4.w, r4.w
mul r8.xyz, r4.wwww, r8.xyzx
dp3 r4.w, r10.xyzx, r8.xyzx
min r5.w, r4.w, l(0.000000)
add r5.w, r5.w, l(1.000000)
add r4.w, r4.w, l(1.000000)
mul r4.w, r4.w, l(0.500000)
mul r6.w, r4.w, r4.w
dp2 r4.w, r6.wwww, r4.wwww
mad r4.w, -r6.w, r6.w, r4.w
mad r4.w, r4.w, l(3.33333325), l(-1.000000)
mad r4.w, r5.w, r4.w, l(1.000000)
dp3 r6.w, r2.xyzx, r8.xyzx
add r6.w, r6.w, l(1.000000)
mul r6.w, r6.w, l(0.500000)
mul r7.w, r6.w, r6.w
dp2 r6.w, r7.wwww, r6.wwww
mad r6.w, -r7.w, r7.w, r6.w
mad r6.w, r6.w, l(3.33333325), l(-1.000000)
mad r5.w, r5.w, r6.w, l(1.000000)
div r4.w, r5.w, r4.w
mul r3.x, r3.x, r4.w
mad r4.xyz, r0.wwww, r4.xyzx, r3.xxxx
mul r4.xyz, r4.xyzx, r9.xyzx
mov r2.w, l(1.000000)
dp4 r8.x, r27.xyzw, r2.xyzw
dp4 r8.y, r28.xyzw, r2.xyzw
dp4 r8.z, r29.xyzw, r2.xyzw
mul r9.xyzw, r2.yzzx, r2.xyzz
dp4 r10.x, r30.xyzw, r9.xyzw
dp4 r10.y, r31.xyzw, r9.xyzw
dp4 r10.z, r32.xyzw, r9.xyzw
mul r0.w, r2.y, r2.y
mad r0.w, r2.x, r2.x, -r0.w
add r8.xyz, r8.xyzx, r10.xyzx
mad r8.xyz, r33.xyzx, r0.wwww, r8.xyzx
max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r6.xyz, r6.xyzx, r8.xyzx
mad r4.xyz, r6.xyzx, r10.wwww, r4.xyzx
dp3 r0.w, v7.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
div r6.xyz, v7.xyzx, r0.wwww
mul r8.yzw, r6.xxxx, v8.xxyz
mul r9.yzw, r6.yyyy, v8.xxyz
mul r6.yzw, r6.zzzz, v8.xxyz
mul r2.yzw, r2.yyzx, l(0.000000, -1.02332771, 1.02332771, -1.02332771)
mov r8.x, v7.x
mov r2.x, l(0.886227548)
dp4 r8.x, r8.xyzw, r2.xyzw
mov r9.x, v7.y
dp4 r8.y, r9.xyzw, r2.xyzw
mov r6.x, v7.z
dp4 r8.z, r6.xyzw, r2.xyzw
max r2.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r6.xyz, r2.xyzx, r5.xyzx
mad r7.xyz, r7.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r5.xyzx
mad r2.xyz, -r5.xyzx, r2.xyzx, r7.xyzx
mad r2.xyz, r25.xxxx, r2.xyzx, r6.xyzx
max r1.xyz, r3.yzwy, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), r23.x
if_nz r0.w
  add r3.xyz, r0.xyzx, -cb3[8].xyzx
  add r6.xyz, cb3[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r3.xyz, r6.xyzx, |r3.xyzx|
  or r0.w, r3.y, r3.x
  or r0.w, r3.z, r0.w
  dp3 r0.x, r0.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r0.x, r0.x, l(0.002000)
  frc r0.x, r0.x
  lt r0.x, l(0.500000), r0.x
  movc r3.yzw, r0.xxxx, l(0,0,1.000000,1.000000), l(0,1.000000,1.000000,0)
  mov r3.x, l(1.000000)
  movc r1.xyzw, r0.wwww, r3.yzwx, r1.xyzw
  mov o0.w, r1.w
else 
  mov o0.w, r1.w
endif 
mad r0.xyz, r4.xyzx, r5.xyzx, r2.xyzx
add r0.xyz, r1.xyzx, r0.xyzx
mad o0.xyz, r0.xyzx, v6.wwww, v6.xyzx
ret 
// Approximately 0 instruction slots used