// asmtool.py --remap-cb 0 100 --remap-cb 1 101 -i -f --only-autofixed --disable-driver-stereo-cb 12 fb28ff7f74da9969-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:42:50 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float       
// TEXCOORD                11   xyzw        1     NONE   float       
// TEXCOORD                 0   xyzw        2     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x   
// TEXCOORD                 7   xyzw        4     NONE   float   xyzw
// SV_Position              0   xyzw        5      POS   float   xyzw
// SV_IsFrontFace           0   x           6    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[131], immediateIndexed
dcl_constantbuffer cb1[123], immediateIndexed
dcl_constantbuffer cb2[10], immediateIndexed
dcl_constantbuffer cb3[12], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps linear v4.xyzw
dcl_input_ps_siv linear noperspective v5.xyzw, position
dcl_output o0.xyzw
dcl_temps 31
dcl_resource_structured t100, 2048
dcl_resource_structured t101, 1968

// cb0 remapped to t100 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 0 100 --remap-cb 1 101 -i -f --only-autofixed --disable-driver-stereo-cb 12 fb28ff7f74da9969-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(576), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(592), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(608), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(624), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(848), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(864), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(944), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(1936), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(1952), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(1), l(32), t100.xyzw


// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 0 100 --remap-cb 1 101 -i -f --only-autofixed --disable-driver-stereo-cb 12 fb28ff7f74da9969-ps.txt
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r23.xyzw, l(0), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r24.xyzw, l(0), l(592), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r25.xyzw, l(0), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r26.xyzw, l(0), l(624), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r27.xyzw, l(0), l(864), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r28.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r29.xyzw, l(0), l(1936), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r30.xyzw, l(0), l(1952), t101.xyzw

and r0.x, v3.x, l(1)
if_z r0.x
  mov r0.x, r13.x
  mov r0.y, r14.x
  mov r0.z, r15.x
  mov r0.w, r16.x
  mov r1.x, r13.y
  mov r1.y, r14.y
  mov r1.z, r15.y
  mov r1.w, r16.y
  mov r2.x, r13.z
  mov r2.y, r14.z
  mov r2.z, r15.z
  mov r2.w, r16.z
  mov r3.x, r13.w
  mov r3.y, r14.w
  mov r3.z, r15.w
  mov r3.w, r16.w
  mov r4.xy, r20.xyxx
  mov r4.zw, r21.zzzw
  mov r5.xyz, r19.xyzx
  mov r6.xyzw, r18.xyzw
else 
  mov r0.x, r23.x
  mov r0.y, r24.x
  mov r0.z, r25.x
  mov r0.w, r26.x
  mov r1.x, r23.y
  mov r1.y, r24.y
  mov r1.z, r25.y
  mov r1.w, r26.y
  mov r2.x, r23.z
  mov r2.y, r24.z
  mov r2.z, r25.z
  mov r2.w, r26.z
  mov r3.x, r23.w
  mov r3.y, r24.w
  mov r3.z, r25.w
  mov r3.w, r26.w
  mov r4.xy, r29.xyxx
  mov r4.zw, r30.zzzw
  mov r5.xyz, r28.xyzx
  mov r6.xyzw, r27.xyzw
endif 
add r4.xy, -r4.xyxx, v5.xyxx
mad r4.xy, r4.xyxx, r4.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, v5.wwww
mov r4.z, v5.w
mul r4.xyw, r4.xyxz, l(2.000000, -2.000000, 0.000000, 1.000000)
add r7.xy, -v2.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
max r7.xy, |r7.xyxx|, l(0.000001, 0.000001, 0.000000, 0.000000)
log r7.xy, r7.xyxx
mul r5.w, r7.x, cb3[6].x
exp r5.w, r5.w
max r7.zw, |v2.yyyx|, l(0.000000, 0.000000, 0.000001, 0.000001)
log r7.zw, r7.zzzw
mul r8.x, r7.z, cb3[6].z
exp r8.x, r8.x
mul r8.x, r8.x, cb3[6].w
mad r5.w, r5.w, cb3[6].y, r8.x
sample_indexable(texture2d)(float,float,float,float) r8.x, v2.xyxx, t0.xyzw, s0
add r8.x, -r8.x, l(1.000000)
max r8.x, |r8.x|, l(0.000001)
log r8.x, r8.x
mul r8.x, r8.x, cb3[7].x
exp r8.x, r8.x
mul_sat r8.x, r8.x, cb3[7].y
add r8.y, v2.x, -cb3[7].z
mul r8.y, r8.y, cb3[7].w
min r8.y, |r8.y|, l(1.000000)
add r8.y, -r8.y, l(1.000000)
max r8.y, r8.y, l(0.000001)
log r8.y, r8.y
mul r8.y, r8.y, cb3[8].x
exp r8.y, r8.y
add r8.x, r8.y, r8.x
add r5.w, r5.w, r8.x
add r8.xyz, cb3[2].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r8.xyz, r5.wwww, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r8.w, r5.w, cb3[8].y
div r4.xy, r4.xyxx, r4.wwww
mad r6.xy, r4.xyxx, r6.xyxx, r6.wzww
sample_l_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t1.yzwx, s1, l(0.000000)
mad r6.x, r4.w, r17.x, r17.y
mad r4.w, r4.w, r17.z, -r17.w
div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
add r4.w, r4.w, r6.x
div r6.x, r8.w, r4.w
mad r9.xyzw, r6.xxxx, l(0.000000, -2.000000, 2.000000, -0.000000), r4.xyxy
max r9.xyzw, r9.xyzw, l(-0.999000, -0.999000, -0.999000, -0.999000)
min r9.xyzw, r9.xyzw, l(0.999000, 0.999000, 0.999000, 0.999000)
mad r9.xyzw, r9.xyzw, r18.xyxy, r18.wzwz
sample_indexable(texture2d)(float,float,float,float) r6.yzw, r9.xyxx, t2.wxyz, s2
mul r6.yzw, r6.yyzw, r6.yyzw
mul r6.yzw, r6.yyzw, r6.yyzw
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r9.zwzz, t2.xyzw, s2
mul r9.xyz, r9.xyzx, r9.xyzx
mul r9.xyz, r9.xyzx, r9.xyzx
mul r9.xyz, r9.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
mad r6.yzw, r6.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000), r9.xxyz
mad r9.xyzw, r6.xxxx, l(0.000000, 2.000000, -2.000000, -0.000000), r4.xyxy
max r9.xyzw, r9.xyzw, l(-0.999000, -0.999000, -0.999000, -0.999000)
min r9.xyzw, r9.xyzw, l(0.999000, 0.999000, 0.999000, 0.999000)
mad r9.xyzw, r9.xyzw, r18.xyxy, r18.wzwz
sample_indexable(texture2d)(float,float,float,float) r10.xyz, r9.xyxx, t2.xyzw, s2
mul r10.xyz, r10.xyzx, r10.xyzx
mul r10.xyz, r10.xyzx, r10.xyzx
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r9.zwzz, t2.xyzw, s2
mul r9.xyz, r9.xyzx, r9.xyzx
mul r9.xyz, r9.xyzx, r9.xyzx
mul r9.xyz, r9.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
mad r9.xyz, r10.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), r9.xyzx
add r6.yzw, r6.yyzw, r9.xxyz
add r9.xy, r4.xyxx, -r6.xxxx
max r9.xy, r9.xyxx, l(-0.999000, -0.999000, 0.000000, 0.000000)
min r9.xy, r9.xyxx, l(0.999000, 0.999000, 0.000000, 0.000000)
mad r9.xy, r9.xyxx, r18.xyxx, r18.wzww
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r9.xyxx, t2.xyzw, s2
mul r9.xyz, r9.xyzx, r9.xyzx
mul r9.xyz, r9.xyzx, r9.xyzx
mad r10.xyzw, r6.xxxx, l(1.000000, -1.000000, -1.000000, 1.000000), r4.xyxy
max r10.xyzw, r10.xyzw, l(-0.999000, -0.999000, -0.999000, -0.999000)
min r10.xyzw, r10.xyzw, l(0.999000, 0.999000, 0.999000, 0.999000)
mad r10.xyzw, r10.xyzw, r18.xyxy, r18.wzwz
sample_indexable(texture2d)(float,float,float,float) r11.xyz, r10.xyxx, t2.xyzw, s2
mul r11.xyz, r11.xyzx, r11.xyzx
mul r11.xyz, r11.xyzx, r11.xyzx
mul r11.xyz, r11.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
mad r9.xyz, r9.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), r11.xyzx
add r10.xy, r4.xyxx, r6.xxxx
max r10.xy, r10.xyxx, l(-0.999000, -0.999000, 0.000000, 0.000000)
min r10.xy, r10.xyxx, l(0.999000, 0.999000, 0.000000, 0.000000)
mad r10.xy, r10.xyxx, r18.xyxx, r18.wzww
sample_indexable(texture2d)(float,float,float,float) r11.xyz, r10.xyxx, t2.xyzw, s2
mul r11.xyz, r11.xyzx, r11.xyzx
mul r11.xyz, r11.xyzx, r11.xyzx
sample_indexable(texture2d)(float,float,float,float) r10.xyz, r10.zwzz, t2.xyzw, s2
mul r10.xyz, r10.xyzx, r10.xyzx
mul r10.xyz, r10.xyzx, r10.xyzx
mul r10.xyz, r10.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
mad r10.xyz, r11.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), r10.xyzx
add r9.xyz, r9.xyzx, r10.xyzx
add r6.yzw, r6.yyzw, r9.xxyz
mad r9.xy, r6.xxxx, l(0.000000, -1.000000, 0.000000, 0.000000), r4.xyxx
max r9.xy, r9.xyxx, l(-0.999000, -0.999000, 0.000000, 0.000000)
min r9.xy, r9.xyxx, l(0.999000, 0.999000, 0.000000, 0.000000)
mad r9.xy, r9.xyxx, r18.xyxx, r18.wzww
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r9.xyxx, t2.xyzw, s2
mul r9.xyz, r9.xyzx, r9.xyzx
mul r9.xyz, r9.xyzx, r9.xyzx
mad r10.xyzw, r6.xxxx, l(1.000000, -0.000000, 0.000000, 1.000000), r4.xyxy
max r10.xyzw, r10.xyzw, l(-0.999000, -0.999000, -0.999000, -0.999000)
min r10.xyzw, r10.xyzw, l(0.999000, 0.999000, 0.999000, 0.999000)
mad r10.xyzw, r10.xyzw, r18.xyxy, r18.wzwz
sample_indexable(texture2d)(float,float,float,float) r11.xyz, r10.xyxx, t2.xyzw, s2
mul r11.xyz, r11.xyzx, r11.xyzx
mul r11.xyz, r11.xyzx, r11.xyzx
mul r11.xyz, r11.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
mad r9.xyz, r9.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), r11.xyzx
sample_indexable(texture2d)(float,float,float,float) r10.xyz, r10.zwzz, t2.xyzw, s2
mul r10.xyz, r10.xyzx, r10.xyzx
mul r10.xyz, r10.xyzx, r10.xyzx
mad r11.xyzw, r6.xxxx, l(-1.000000, -0.000000, -0.500000, -0.500000), r4.xyxy
max r11.xyzw, r11.xyzw, l(-0.999000, -0.999000, -0.999000, -0.999000)
min r11.xyzw, r11.xyzw, l(0.999000, 0.999000, 0.999000, 0.999000)
mad r11.xyzw, r11.xyzw, r18.xyxy, r18.wzwz
sample_indexable(texture2d)(float,float,float,float) r12.xyz, r11.xyxx, t2.xyzw, s2
mul r12.xyz, r12.xyzx, r12.xyzx
mul r12.xyz, r12.xyzx, r12.xyzx
mul r12.xyz, r12.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
mad r10.xyz, r10.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), r12.xyzx
add r9.xyz, r9.xyzx, r10.xyzx
sample_indexable(texture2d)(float,float,float,float) r10.xyz, r11.zwzz, t2.xyzw, s2
mul r10.xyz, r10.xyzx, r10.xyzx
mul r10.xyz, r10.xyzx, r10.xyzx
mad r11.xyzw, r6.xxxx, l(0.500000, -0.500000, 0.500000, 0.500000), r4.xyxy
max r11.xyzw, r11.xyzw, l(-0.999000, -0.999000, -0.999000, -0.999000)
min r11.xyzw, r11.xyzw, l(0.999000, 0.999000, 0.999000, 0.999000)
mad r11.xyzw, r11.xyzw, r18.xyxy, r18.wzwz
sample_indexable(texture2d)(float,float,float,float) r12.xyz, r11.xyxx, t2.xyzw, s2
mul r12.xyz, r12.xyzx, r12.xyzx
mul r12.xyz, r12.xyzx, r12.xyzx
mul r12.xyz, r12.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
mad r10.xyz, r10.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), r12.xyzx
sample_indexable(texture2d)(float,float,float,float) r11.xyz, r11.zwzz, t2.xyzw, s2
mul r11.xyz, r11.xyzx, r11.xyzx
mul r11.xyz, r11.xyzx, r11.xyzx
mad r4.xy, r6.xxxx, l(-0.500000, 0.500000, 0.000000, 0.000000), r4.xyxx
max r4.xy, r4.xyxx, l(-0.999000, -0.999000, 0.000000, 0.000000)
min r4.xy, r4.xyxx, l(0.999000, 0.999000, 0.000000, 0.000000)
mad r4.xy, r4.xyxx, r18.xyxx, r18.wzww
sample_indexable(texture2d)(float,float,float,float) r12.xyz, r4.xyxx, t2.xyzw, s2
mul r12.xyz, r12.xyzx, r12.xyzx
mul r12.xyz, r12.xyzx, r12.xyzx
mul r12.xyz, r12.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
mad r11.xyz, r11.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), r12.xyzx
add r10.xyz, r10.xyzx, r11.xyzx
add r9.xyz, r9.xyzx, r10.xyzx
mul r9.xyz, r9.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000)
mad r6.xyz, r6.yzwy, l(0.125000, 0.125000, 0.125000, 0.000000), r9.xyzx
mul r6.xyz, r8.xyzx, r6.xyzx
mul r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r4.x, r7.x, cb3[8].z
exp r4.x, r4.x
mad r4.x, -r4.x, cb3[8].w, l(1.000000)
mul r4.y, r7.w, cb3[9].x
exp r4.y, r4.y
mad r4.y, -r4.y, cb3[9].y, l(1.000000)
mul r4.x, r4.y, r4.x
mul r4.y, r7.y, cb3[9].z
exp r4.y, r4.y
mad r4.y, -r4.y, cb3[9].w, l(1.000000)
mul r6.w, r7.z, cb3[10].x
exp r6.w, r6.w
mad r6.w, -r6.w, cb3[10].y, l(1.000000)
mul r4.y, r4.y, r6.w
mad r4.x, r4.x, r4.y, l(-1.000000)
mad r4.x, cb3[10].z, r4.x, l(1.000000)
mul r6.xyz, r4.xxxx, r6.xyzx
mul_sat r4.y, r5.w, cb3[10].w
add r5.w, -r4.y, l(1.000000)
mad r4.x, -r5.w, r4.x, l(1.000000)
div r4.y, r4.y, r4.x
mad r6.xyz, r6.xyzx, r4.yyyy, cb3[3].xyzx
mad r4.y, -r4.z, l(1.000000), r4.w
div_sat r4.y, r4.y, cb3[11].y
mul r4.x, r4.y, r4.x
mad r4.y, r4.z, l(1.000000), -cb3[11].z
div_sat r4.y, r4.y, cb3[11].w
mul_sat r4.w, r4.y, r4.x
max r4.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r5.w, l(0.000000), r22.x
if_nz r5.w
  mov r6.xyz, v5.xyzx
  mov r6.w, l(1.000000)
  dp4 r0.x, r6.xyzw, r0.xyzw
  dp4 r0.y, r6.xyzw, r1.xyzw
  dp4 r0.z, r6.xyzw, r2.xyzw
  dp4 r0.w, r6.xyzw, r3.xyzw
  div r0.xyz, r0.xyzx, r0.wwww
  add r0.xyz, -r5.xyzx, r0.xyzx
  add r1.xyz, r0.xyzx, -cb2[8].xyzx
  add r2.xyz, cb2[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r1.xyz, r2.xyzx, |r1.xyzx|
  or r0.w, r1.y, r1.x
  or r0.w, r1.z, r0.w
  dp3 r0.x, r0.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r0.x, r0.x, l(0.002000)
  frc r0.x, r0.x
  lt r0.x, l(0.500000), r0.x
  movc r1.yzw, r0.xxxx, l(0,0,1.000000,1.000000), l(0,1.000000,1.000000,0)
  mov r1.x, l(1.000000)
  movc r4.xyzw, r0.wwww, r1.yzwx, r4.xyzw
  mov o0.w, r4.w
else 
  mov o0.w, r4.w
endif 
mad o0.xyz, r4.xyzx, v4.wwww, v4.xyzx
ret 
// Approximately 0 instruction slots used