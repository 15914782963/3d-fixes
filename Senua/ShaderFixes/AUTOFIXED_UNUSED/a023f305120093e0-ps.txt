// asmtool.py --remap-cb 0 100 --remap-cb 1 101 -i -f --only-autofixed --disable-driver-stereo-cb 12 a023f305120093e0-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:42:21 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float       
// TEXCOORD                11   xyzw        1     NONE   float       
// TEXCOORD                 0   xyzw        2     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x   
// VELOCITY_PREV_POS        0   xyzw        4     NONE   float   xyzw
// SV_Position              0   xyzw        5      POS   float   xyzw
// SV_IsFrontFace           0   x           6    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
// SV_Target                5   xyzw        5   TARGET   float   xyzw
// SV_Target                6   xyzw        6   TARGET   float   xyzw
// SV_Target                7   xyzw        7   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[131], immediateIndexed
dcl_constantbuffer cb1[123], immediateIndexed
dcl_constantbuffer cb2[10], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps linear v4.xyzw
dcl_input_ps_siv linear noperspective v5.xyzw, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 30
dcl_resource_structured t100, 2048
dcl_resource_structured t101, 1968

// cb0 remapped to t100 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 0 100 --remap-cb 1 101 -i -f --only-autofixed --disable-driver-stereo-cb 12 a023f305120093e0-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r11.xyzw, l(0), l(416), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(576), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(592), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(608), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(624), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(944), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(992), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(1936), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(1952), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(1), l(32), t100.xyzw


// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 0 100 --remap-cb 1 101 -i -f --only-autofixed --disable-driver-stereo-cb 12 a023f305120093e0-ps.txt
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(416), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r22.xyzw, l(0), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r23.xyzw, l(0), l(592), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r24.xyzw, l(0), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r25.xyzw, l(0), l(624), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r26.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r27.xyzw, l(0), l(992), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r28.xyzw, l(0), l(1936), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r29.xyzw, l(0), l(1952), t101.xyzw

and r0.x, v3.x, l(1)
if_z r0.x
  mov r0.x, r12.x
  mov r0.y, r13.x
  mov r0.z, r14.x
  mov r0.w, r15.x
  mov r1.x, r12.y
  mov r1.y, r13.y
  mov r1.z, r14.y
  mov r1.w, r15.y
  mov r2.x, r12.z
  mov r2.y, r13.z
  mov r2.z, r14.z
  mov r2.w, r15.z
  mov r3.x, r12.w
  mov r3.y, r13.w
  mov r3.z, r14.w
  mov r3.w, r15.w
  mov r4.xy, r18.xyxx
  mov r4.zw, r19.zzzw
  mov r5.xyz, r16.xyzx
  mov r6.xy, r11.xyxx
  mov r6.zw, r17.xxxy
else 
  mov r0.x, r22.x
  mov r0.y, r23.x
  mov r0.z, r24.x
  mov r0.w, r25.x
  mov r1.x, r22.y
  mov r1.y, r23.y
  mov r1.z, r24.y
  mov r1.w, r25.y
  mov r2.x, r22.z
  mov r2.y, r23.z
  mov r2.z, r24.z
  mov r2.w, r25.z
  mov r3.x, r22.w
  mov r3.y, r23.w
  mov r3.z, r24.w
  mov r3.w, r25.w
  mov r4.xy, r28.xyxx
  mov r4.zw, r29.zzzw
  mov r5.xyz, r26.xyzx
  mov r6.xy, r21.xyxx
  mov r6.zw, r27.xxxy
endif 
add r4.xy, -r4.xyxx, v5.xyxx
mad r4.xy, r4.xyxx, r4.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, v5.wwww
mov r4.z, v5.w
mul r4.xyz, r4.xyzx, l(2.000000, -2.000000, 1.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r7.xyz, v2.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r8.xyz, v2.xyxx, t1.xyzw, s1
add r8.xyz, -r7.xyzx, r8.xyzx
mad r7.xyz, cb3[0].wwww, r8.xyzx, r7.xyzx
mul r8.xyz, r7.xyzx, cb5[6].xxxx
dp3 r4.w, r7.xyzx, l(0.330000, 0.500000, 0.160000, 0.000000)
add r9.xyz, -r7.xyzx, r4.wwww
mad r7.xyz, cb5[6].yyyy, r9.xyzx, r7.xyzx
max r7.xyz, |r7.xyzx|, l(0.000001, 0.000001, 0.000001, 0.000000)
log r7.xyz, r7.xyzx
mul r7.xyz, r7.xyzx, cb5[6].zzzz
exp r7.xyz, r7.xyzx
mad r9.xyz, -cb5[6].xxxx, r7.xyzx, cb5[6].xxxx
add r9.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.w, cb4[0].x, cb5[6].w
add r10.xyz, cb5[2].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r7.xyz, r7.xyzx, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r7.xyz, r4.wwww, r7.xyzx
div r7.xyz, r9.xyzx, r7.xyzx
div r7.xyz, r8.xyzx, r7.xyzx
add r7.xyz, r7.xyzx, cb5[3].xyzx
div r4.xy, r4.xyxx, r4.zzzz
div r4.zw, v4.xxxy, v4.wwww
add r4.xyzw, -r6.xyzw, r4.xyzw
add r4.xy, -r4.zwzz, r4.xyxx
mad r4.xy, r4.xyxx, l(0.249500, 0.249500, 0.000000, 0.000000), l(0.499992371, 0.499992371, 0.000000, 0.000000)
mul o4.xy, r4.xyxx, v4.zzzz
mov o4.zw, l(0,0,0,0)
max r4.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r4.w, l(0.000000), r20.x
if_nz r4.w
  mov r6.xyz, v5.xyzx
  mov r6.w, l(1.000000)
  dp4 r0.x, r6.xyzw, r0.xyzw
  dp4 r0.y, r6.xyzw, r1.xyzw
  dp4 r0.z, r6.xyzw, r2.xyzw
  dp4 r0.w, r6.xyzw, r3.xyzw
  div r0.xyz, r0.xyzx, r0.wwww
  add r0.xyz, -r5.xyzx, r0.xyzx
  add r1.xyz, r0.xyzx, -cb2[8].xyzx
  add r2.xyz, cb2[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r1.xyz, r2.xyzx, |r1.xyzx|
  or r0.w, r1.y, r1.x
  or r0.w, r1.z, r0.w
  dp3 r0.x, r0.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r0.x, r0.x, l(0.002000)
  frc r0.x, r0.x
  lt r0.x, l(0.500000), r0.x
  movc r0.xyz, r0.xxxx, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r4.xyz, r0.wwww, r0.xyzx, r4.xyzx
endif 
mov o0.xyz, r4.xyzx
mov o0.w, l(0)
mov o1.xyzw, l(0,0,0,0)
mov o2.xyzw, l(0,0,0,0)
mov o3.xyzw, l(0,0,0,0)
mov o5.xyzw, l(0,0,0,0)
mov o6.xyzw, l(0,0,0,0)
mov o7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
ret 
// Approximately 0 instruction slots used