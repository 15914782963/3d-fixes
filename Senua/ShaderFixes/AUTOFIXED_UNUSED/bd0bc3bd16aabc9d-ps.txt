// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 bd0bc3bd16aabc9d-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:43:24 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz 
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// COLOR                    0   xyzw        2     NONE   float   xy  
// TEXCOORD                 0   xy          3     NONE   float   xy  
// TEXCOORD                 1   xy          4     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           5     NONE    uint   x   
// VELOCITY_PREV_POS        0   xyzw        6     NONE   float   xyzw
// SV_Position              0   xyzw        7      POS   float   xyzw
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
// SV_Target                5   xyzw        5   TARGET   float   xyzw
// SV_Target                6   xyzw        6   TARGET   float   xyzw
// SV_Target                7   xyzw        7   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[142], immediateIndexed
dcl_constantbuffer cb2[123], immediateIndexed
dcl_constantbuffer cb3[20], immediateIndexed
dcl_constantbuffer cb4[6], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[13], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t11
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xy
dcl_input_ps constant v5.x
dcl_input_ps linear v6.xyzw
dcl_input_ps_siv linear noperspective v7.xyzw, position
dcl_input_ps_sgv v8.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 39
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 1968

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 bd0bc3bd16aabc9d-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r10.xyzw, l(0), l(416), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r11.xyzw, l(0), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(592), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(624), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(864), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(992), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(1936), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(1952), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(1968), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(2016), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(0), l(2032), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(1), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(1), l(16), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(1), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r26.xyzw, l(1), l(48), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r27.xyzw, l(1), l(96), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r28.xyzw, l(1), l(208), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 bd0bc3bd16aabc9d-ps.txt
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r29.xyzw, l(0), l(416), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r30.xyzw, l(0), l(576), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r31.xyzw, l(0), l(592), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r32.xyzw, l(0), l(608), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r33.xyzw, l(0), l(624), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r34.xyzw, l(0), l(864), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r35.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r36.xyzw, l(0), l(992), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r37.xyzw, l(0), l(1936), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r38.xyzw, l(0), l(1952), t102.xyzw

and r0.x, v5.x, l(1)
if_z r0.x
  mov r0.x, r11.x
  mov r0.y, r12.x
  mov r0.z, r13.x
  mov r0.w, r14.x
  mov r1.x, r11.y
  mov r1.y, r12.y
  mov r1.z, r13.y
  mov r1.w, r14.y
  mov r2.x, r11.z
  mov r2.y, r12.z
  mov r2.z, r13.z
  mov r2.w, r14.z
  mov r3.x, r11.w
  mov r3.y, r12.w
  mov r3.z, r13.w
  mov r3.w, r14.w
  mov r4.xy, r18.xyxx
  mov r4.zw, r19.zzzw
  mov r5.xyz, r16.xyzx
  mov r6.xy, r10.xyxx
  mov r6.zw, r15.xxxy
  mov r7.xy, r15.zwzz
  mov r7.zw, r17.xxxy
else 
  mov r0.x, r30.x
  mov r0.y, r31.x
  mov r0.z, r32.x
  mov r0.w, r33.x
  mov r1.x, r30.y
  mov r1.y, r31.y
  mov r1.z, r32.y
  mov r1.w, r33.y
  mov r2.x, r30.z
  mov r2.y, r31.z
  mov r2.z, r32.z
  mov r2.w, r33.z
  mov r3.x, r30.w
  mov r3.y, r31.w
  mov r3.z, r32.w
  mov r3.w, r33.w
  mov r4.xy, r37.xyxx
  mov r4.zw, r38.zzzw
  mov r5.xyz, r35.xyzx
  mov r6.xy, r29.xyxx
  mov r6.zw, r34.xxxy
  mov r7.xy, r34.zwzz
  mov r7.zw, r36.xxxy
endif 
mul r8.xyz, v0.yzxy, v1.zxyz
mad r8.xyz, v1.yzxy, v0.zxyz, -r8.xyzx
mul r8.xyz, r8.xyzx, v1.wwww
add r4.xy, -r4.xyxx, v7.xyxx
mad r4.xy, r4.xyxx, r4.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, v7.wwww
mov r4.z, v7.w
mul r4.xyz, r4.xyzx, l(2.000000, -2.000000, 1.000000, 0.000000)
mov r9.xyz, v7.xyzx
mov r9.w, l(1.000000)
dp4 r0.x, r9.xyzw, r0.xyzw
dp4 r0.y, r9.xyzw, r1.xyzw
dp4 r0.z, r9.xyzw, r2.xyzw
dp4 r0.w, r9.xyzw, r3.xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r1.xyz, -r5.xyzx, r0.xyzx
dp3 r0.w, -r0.xyzx, -r0.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, -r0.xyzx
mul r0.w, r26.w, cb3[9].w
movc r1.w, v8.x, l(1.000000), l(-1.000000)
mul r0.w, r0.w, r1.w
sample_indexable(texture2d)(float,float,float,float) r3.xy, v3.xyxx, t0.xyzw, s0
add r5.xy, r3.xyxx, r3.xyxx
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r3.xyxx, r3.xyxx
add r1.w, -r1.w, l(1.000000)
max r1.w, r1.w, l(0.000000)
sqrt r5.z, r1.w
add r3.xyz, r5.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000)
mul r5.xy, v3.xyxx, cb6[9].xxxx
sample_indexable(texture2d)(float,float,float,float) r5.zw, r5.xyxx, t1.zwxy, s1
mad r9.xy, r5.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r9.xyxx, r9.xyxx
add r1.w, -r1.w, l(1.000000)
max r1.w, r1.w, l(0.000000)
sqrt r9.z, r1.w
mad r9.xyz, r9.xyzx, cb6[2].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r9.xyz, r9.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000), l(1.000000, 1.000000, -1.000000, 0.000000)
dp3 r1.w, r3.xyzx, r9.xyzx
mul r9.xyz, r3.zzzz, r9.xyzx
mad r3.xyz, r3.xyzx, r1.wwww, -r9.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.zw, v3.xyxx, t2.zwxy, s2
mad r9.xy, r5.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r9.xyxx, r9.xyxx
add r1.w, -r1.w, l(1.000000)
max r1.w, r1.w, l(0.000000)
sqrt r9.z, r1.w
mul r9.xyz, r9.xyzx, v2.yyyy
mad r3.xyz, r3.xyzx, v2.xxxx, r9.xyzx
mad r3.xyz, r3.xyzx, r23.wwww, r23.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
mul r8.xyz, r8.xyzx, r3.yyyy
mad r3.xyw, r3.xxxx, v0.xyxz, r8.xyxz
mad r3.xyz, r3.zzzz, v1.xyzx, r3.xywx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r0.w, r3.xyzx, r2.xyzx
max r0.w, r0.w, l(0.000000)
add r0.w, -r0.w, l(1.000000)
max r0.w, |r0.w|, l(0.000001)
log r0.w, r0.w
mul r0.w, r0.w, cb6[9].z
exp r0.w, r0.w
mad r0.w, r0.w, cb6[10].x, cb6[9].w
sample_indexable(texture2d)(float,float,float,float) r2.xy, v3.xyxx, t3.zyxw, s3
add r1.w, r2.x, l(-1.000000)
mad r1.w, cb6[10].y, r1.w, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r2.z, r5.xyxx, t3.yzxw, s3
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r2.yxyy, t4.xyzw, s4
max r5.xyz, |r5.xyzx|, l(0.000001, 0.000001, 0.000001, 0.000000)
log r5.xyz, r5.xyzx
mul r5.xyz, r5.xyzx, cb6[10].zzzz
exp r5.xyz, r5.xyzx
mad r5.xyz, r5.xyzx, r2.zzzz, -r2.zzzz
mad r5.xyz, cb6[10].wwww, r5.xyzx, r2.zzzz
mul r5.xyz, r1.wwww, r5.xyzx
mul r5.xyz, r5.xyzx, cb6[8].xyzx
mul r8.xyz, r0.wwww, r5.xyzx
mad r5.xyz, r8.xyzx, cb6[11].xxxx, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, v3.xyxx, t5.xyzw, s5
mul r8.xyzw, r8.xyzw, v2.yyyy
mad r5.xyz, v2.xxxx, r5.xyzx, r8.xyzx
mul_sat r5.xyz, r5.xyzx, cb6[5].xyzx
mul r0.w, r2.z, cb6[11].z
mul_sat r8.y, r0.w, r2.x
add r0.w, -r2.z, l(1.000000)
mul r1.w, cb5[1].y, l(0.600000)
mad_sat r0.w, r0.w, cb6[11].w, -r1.w
sample_indexable(texture2d)(float,float,float,float) r1.w, v4.xyxx, t3.xyzw, s3
mad r1.w, r1.w, v2.x, r8.w
div r2.yz, r4.xxyx, r4.zzzz
mad r4.xy, r2.yzyy, r6.zwzz, r7.yxyy
mul r4.zw, r4.xxxy, r20.xxxy
mad r4.xy, r20.xyxx, r4.xyxx, r28.xxxx
ftou r4.xy, r4.xyxx
ishl r2.w, r4.y, l(1)
iadd r2.w, r2.w, r4.x
udiv null, r2.w, r2.w, l(5)
utof r2.w, r2.w
mul r4.xy, r4.zwzz, l(0.015625, 0.015625, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t6.yzwx, s6
mad r2.w, r3.w, cb6[12].y, r2.w
mul r2.w, r2.w, l(0.166666672)
mad r1.w, r1.w, cb6[12].x, r2.w
add r1.w, r1.w, l(-0.500000)
max r1.w, |r1.w|, l(0.000001)
log r1.w, r1.w
mul r1.w, r1.w, cb6[12].z
exp r1.w, r1.w
add r1.w, r1.w, l(-0.333300)
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
mov_sat r8.x, cb6[11].y
mov_sat r2.x, r2.x
mad o2.z, r0.w, r24.y, r24.x
lt r0.w, l(0.000000), cb3[11].y
movc o6.x, r0.w, cb4[5].x, cb3[19].z
add r2.yz, -r6.xxyx, r2.yyzy
div r4.xy, v6.xyxx, v6.wwww
add r4.xy, -r7.zwzz, r4.xyxx
add r2.yz, r2.yyzy, -r4.xxyx
mad r2.yz, r2.yyzy, l(0.000000, 0.249500, 0.249500, 0.000000), l(0.000000, 0.499992371, 0.499992371, 0.000000)
mul o4.xy, r2.yzyy, v6.zzzz
mov o4.zw, l(0,0,0,0)
mul r0.w, r8.y, l(0.080000)
mad r2.yzw, -r8.yyyy, l(0.000000, 0.080000, 0.080000, 0.080000), r5.xxyz
mad r2.yzw, r8.xxxx, r2.yyzw, r0.wwww
mad r4.xyz, -r5.xyzx, r8.xxxx, r5.xyzx
mad r4.xyz, r4.xyzx, r21.wwww, r21.xyzx
mad r2.yzw, r2.yyzw, r22.wwww, r22.xxyz
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
div r0.x, r0.x, cb0[33].w
log r0.x, r0.x
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(6.000000)
round_pi r0.x, r0.x
mul r0.yzw, r1.xxyz, cb0[30].xxyz
mad r6.xyz, r1.xyzx, cb0[30].xyzx, -cb0[31].xyzx
max r1.w, |r6.y|, |r6.x|
max r1.w, |r6.z|, r1.w
mul r1.w, r1.w, l(4.000000)
log r1.w, r1.w
max r1.w, r1.w, l(0.000000)
round_ni r1.w, r1.w
max r0.x, r0.x, r1.w
exp r1.w, r0.x
div r6.xyz, r0.yzwy, r1.wwww
frc r6.xyz, r6.xyzx
mul r0.x, r0.x, l(0.142857149)
mad r6.w, r6.z, l(0.142857149), r0.x
mul r7.xyz, cb0[32].xyzx, l(1.000000, 1.000000, 7.000000, 0.000000)
mul r6.xyz, r6.xywx, r7.xyzx
round_ni r6.xyz, r6.xyzx
add r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
div r6.xyz, r6.xyzx, r7.xyzx
sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r6.xyzx, t7.xyzw, s7, l(0.000000)
mul r6.xyzw, r6.xyzw, l(255.000000, 255.000000, 255.000000, 255.000000)
div r7.xyz, cb0[32].xyzx, r6.wwww
mul r0.xyz, r0.yzwy, r7.xyzx
frc r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(0.666666687, 0.666666687, 0.666666687, 0.000000), r6.xyzx
add r0.xyz, r0.xyzx, l(0.166666672, 0.166666672, 0.166666672, 0.000000)
mul r0.xyz, r0.xyzx, cb0[33].xyzx
sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r0.xyzx, t8.xyzw, s8, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r7.xyzw, r0.xyzx, t9.xyzw, s8, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r9.xyzw, r0.xyzx, t10.xyzw, s8, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r0.x, r0.xyzx, t11.yxzw, s8, l(0.000000)
dp3 r0.y, r6.yzwy, r6.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r6.yzw, r0.yyyy, r6.yyzw
dp3 r0.y, r3.xyzx, r6.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r6.x
add r1.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r1.w, r1.w, r3.w
mad r6.yz, r0.zzzz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r6.y
exp r0.y, r0.y
mul r0.z, r0.y, r6.z
mad r0.y, -r6.z, r0.y, l(1.000000)
mad r0.y, r1.w, r0.y, r0.z
mul r0.y, r0.y, r6.x
movc r6.x, r0.w, r0.y, r6.x
dp3 r0.y, r7.yzwy, r7.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r7.yzw, r0.yyyy, r7.yyzw
dp3 r0.y, r3.xyzx, r7.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r7.x
add r1.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r1.w, r1.w, r3.w
mad r7.yz, r0.zzzz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r7.y
exp r0.y, r0.y
mul r0.z, r0.y, r7.z
mad r0.y, -r7.z, r0.y, l(1.000000)
mad r0.y, r1.w, r0.y, r0.z
mul r0.y, r0.y, r7.x
movc r6.y, r0.w, r0.y, r7.x
dp3 r0.y, r9.yzwy, r9.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r7.xyz, r0.yyyy, r9.yzwy
dp3 r0.y, r3.xyzx, r7.xyzx
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r9.x
add r1.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r1.w, r1.w, r3.w
mad r7.xy, r0.zzzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(1.000000, 2.000000, 0.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r7.x
exp r0.y, r0.y
mul r0.z, r0.y, r7.y
mad r0.y, -r7.y, r0.y, l(1.000000)
mad r0.y, r1.w, r0.y, r0.z
mul r0.y, r0.y, r9.x
movc r6.z, r0.w, r0.y, r9.x
max r0.yzw, r6.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.yzw, r4.xxyz, r0.yyzw
mul r0.yzw, r2.xxxx, r0.yyzw
mad r2.yzw, r2.yyzw, l(0.000000, 0.450000, 0.450000, 0.450000), r4.xxyz
max r4.xyz, cb6[4].xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r1.w, l(0.000000), r25.x
if_nz r1.w
  add r6.xyz, r1.xyzx, -cb3[8].xyzx
  add r7.xyz, cb3[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r6.xyz, r7.xyzx, |r6.xyzx|
  or r1.w, r6.y, r6.x
  or r1.w, r6.z, r1.w
  dp3 r1.x, r1.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.x, r1.x, l(0.002000)
  frc r1.x, r1.x
  lt r1.x, l(0.500000), r1.x
  movc r1.xyz, r1.xxxx, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r4.xyz, r1.wwww, r1.xyzx, r4.xyzx
endif 
mad r0.yzw, r27.xxxx, r2.yyzw, r0.yyzw
add o0.xyz, r4.xyzx, r0.yzwy
mul r0.yzw, v7.xxyx, l(0.000000, 0.00781250000, 0.00781250000, 0.00781250000)
frc r0.yzw, r0.yyzw
mad r0.yzw, r0.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000), l(0.000000, -64.340622, -72.465622, -64.340622)
mul r0.yzw, r0.yyzz, r0.yyzw
dp3 r0.y, r0.yzwy, l(20.390625, 60.703125, 2.42812085, 0.000000)
frc r0.y, r0.y
add r0.y, r0.y, l(-0.500000)
mad o1.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mul o3.w, r0.y, l(0.00392156886)
min r0.x, r2.x, r0.x
max r0.x, r0.x, l(0.000000)
sqrt o7.xyzw, r0.xxxx
mov o0.w, l(0)
mov o1.w, cb3[11].x
mov o2.w, l(0.0666666701)
mov o2.xy, r8.xyxx
mov o3.xyz, r5.xyzx
mov o5.xyzw, l(0,0,0,0)
mov o6.yzw, cb3[19].zzzz
ret 
// Approximately 0 instruction slots used