// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 e6089760af9b59e5-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:42:42 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz 
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// COLOR                    0   xyzw        2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 5   xy          4     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           5     NONE    uint   x   
// VELOCITY_PREV_POS        0   xyzw        6     NONE   float   xyzw
// SV_Position              0   xyzw        7      POS   float   xyzw
// SV_IsFrontFace           0   x           8    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
// SV_Target                5   xyzw        5   TARGET   float   xyzw
// SV_Target                6   xyzw        6   TARGET   float   xyzw
// SV_Target                7   xyzw        7   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[31], immediateIndexed
dcl_constantbuffer cb1[135], immediateIndexed
dcl_constantbuffer cb2[123], immediateIndexed
dcl_constantbuffer cb3[20], immediateIndexed
dcl_constantbuffer cb4[6], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_constantbuffer cb6[14], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_input_ps constant v5.x
dcl_input_ps linear v6.xyzw
dcl_input_ps_siv linear noperspective v7.xyzw, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 35
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 1968

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 e6089760af9b59e5-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r11.xyzw, l(0), l(416), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(592), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(624), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(992), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(1936), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(1952), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(2016), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(2032), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(1), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(1), l(16), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(1), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(1), l(96), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 e6089760af9b59e5-ps.txt
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r26.xyzw, l(0), l(416), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r27.xyzw, l(0), l(576), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r28.xyzw, l(0), l(592), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r29.xyzw, l(0), l(608), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r30.xyzw, l(0), l(624), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r31.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r32.xyzw, l(0), l(992), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r33.xyzw, l(0), l(1936), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r34.xyzw, l(0), l(1952), t102.xyzw

and r0.x, v5.x, l(1)
if_z r0.x
  mov r0.x, r12.x
  mov r0.y, r13.x
  mov r0.z, r14.x
  mov r0.w, r15.x
  mov r1.x, r12.y
  mov r1.y, r13.y
  mov r1.z, r14.y
  mov r1.w, r15.y
  mov r2.x, r12.z
  mov r2.y, r13.z
  mov r2.z, r14.z
  mov r2.w, r15.z
  mov r3.x, r12.w
  mov r3.y, r13.w
  mov r3.z, r14.w
  mov r3.w, r15.w
  mov r4.xy, r18.xyxx
  mov r4.zw, r19.zzzw
  mov r5.xyz, r16.xyzx
  mov r6.xy, r11.xyxx
  mov r6.zw, r17.xxxy
else 
  mov r0.x, r27.x
  mov r0.y, r28.x
  mov r0.z, r29.x
  mov r0.w, r30.x
  mov r1.x, r27.y
  mov r1.y, r28.y
  mov r1.z, r29.y
  mov r1.w, r30.y
  mov r2.x, r27.z
  mov r2.y, r28.z
  mov r2.z, r29.z
  mov r2.w, r30.z
  mov r3.x, r27.w
  mov r3.y, r28.w
  mov r3.z, r29.w
  mov r3.w, r30.w
  mov r4.xy, r33.xyxx
  mov r4.zw, r34.zzzw
  mov r5.xyz, r31.xyzx
  mov r6.xy, r26.xyxx
  mov r6.zw, r32.xxxy
endif 
mul r7.xyz, v0.yzxy, v1.zxyz
mad r7.xyz, v1.yzxy, v0.zxyz, -r7.xyzx
mul r7.xyz, r7.xyzx, v1.wwww
mov r8.xyz, v7.xyzx
mov r8.w, l(1.000000)
dp4 r0.x, r8.xyzw, r0.xyzw
dp4 r0.y, r8.xyzw, r1.xyzw
dp4 r0.z, r8.xyzw, r2.xyzw
dp4 r0.w, r8.xyzw, r3.xyzw
div r0.xyz, r0.xyzx, r0.wwww
resinfo_indexable(texture2d)(float,float,float,float) r1.xy, l(0), t11.xyzw
mul r1.xy, r1.xyxx, v4.xyxx
ftou r1.xy, r1.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.w, r1.xyzw, t11.yzwx
mad r0.w, r0.w, l(255.000000), l(0.500000)
ftou r0.w, r0.w
and r1.x, r0.w, l(15)
utof r1.x, r1.x
ushr r0.w, r0.w, l(4)
utof r0.w, r0.w
dp3 r1.y, r0.xyzx, r0.xyzx
sqrt r1.y, r1.y
div r1.y, r1.y, cb0[30].x
log r1.y, r1.y
max r1.x, r1.x, r1.y
min r0.w, r0.w, r1.x
add r1.xy, -r4.xyxx, v7.xyxx
mad r1.xy, r1.xyxx, r4.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r1.xy, r1.xyxx, v7.wwww
mov r1.z, v7.w
mul r1.xyz, r1.xyzx, l(2.000000, -2.000000, 1.000000, 0.000000)
mul r2.xyzw, v3.zwxy, cb6[9].xxyy
sample_indexable(texture2d)(float,float,float,float) r3.xy, r2.xyxx, t0.xyzw, s0
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r3.xyxx, r3.xyxx
add r1.w, -r1.w, l(1.000000)
max r1.w, r1.w, l(0.000000)
sqrt r3.z, r1.w
sample_indexable(texture2d)(float,float,float,float) r4.xy, r2.zwzz, t1.xyzw, s0
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r4.xyxx, r4.xyxx
add r1.w, -r1.w, l(1.000000)
max r1.w, r1.w, l(0.000000)
sqrt r4.z, r1.w
sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t2.yzwx, s0
add r3.w, -r1.w, v2.y
div_sat r3.w, r3.w, cb6[9].w
add r4.xyz, -r3.xyzx, r4.xyzx
mad r3.xyz, r3.wwww, r4.xyzx, r3.xyzx
mad r3.xyz, r3.xyzx, r22.wwww, r22.xyzx
dp3 r4.x, r3.xyzx, r3.xyzx
rsq r4.x, r4.x
mul r3.xyz, r3.xyzx, r4.xxxx
mul r4.xyz, r7.xyzx, r3.yyyy
mad r4.xyz, r3.xxxx, v0.xyzx, r4.xyzx
mad r3.xyz, r3.zzzz, v1.xyzx, r4.xyzx
dp3 r4.x, r3.xyzx, r3.xyzx
rsq r4.x, r4.x
mul r3.xyz, r3.xyzx, r4.xxxx
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r2.xyxx, t3.xyzw, s0
mul r7.xyz, r4.xyzx, cb6[6].xyzx
mul r8.xy, v3.xyxx, cb6[10].xxxx
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r8.xyxx, t4.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r2.zwzz, t5.xyzw, s0
mul r10.xyz, r9.xyzx, cb6[8].xyzx
mul r8.xyz, r8.xyzx, r10.xyzx
mad r9.xyz, cb6[8].xyzx, r9.xyzx, -r8.xyzx
mad r8.xyz, v2.xxxx, r9.xyzx, r8.xyzx
add r4.w, -r1.w, -v2.y
add r4.w, r4.w, l(1.000000)
div_sat r5.w, r4.w, cb6[9].w
add r7.w, -r5.w, l(1.000000)
mad r4.xyz, -cb6[6].xyzx, r4.xyzx, r8.xyzx
mad r4.xyz, r7.wwww, r4.xyzx, r7.xyzx
div_sat r4.w, r4.w, cb6[10].z
add r4.w, -r4.w, r5.w
add r4.w, -r4.w, l(1.000000)
add r5.w, -r4.w, l(1.000000)
mad r4.w, cb6[10].w, r5.w, r4.w
mul r4.xyz, r4.wwww, r4.xyzx
add r4.w, -v2.z, l(1.000000)
mad r1.w, r4.w, cb6[11].z, -r1.w
div_sat r1.w, r1.w, cb6[11].y
mad r4.w, -cb6[11].w, r1.w, l(1.000000)
mul r5.w, cb5[0].x, cb6[12].x
mad_sat r4.xyz, r4.xyzx, r4.wwww, -r5.wwww
mul_sat r4.xyz, r4.xyzx, cb6[3].xyzx
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t6.xyzw, s0
add r2.x, r2.x, cb6[12].z
sample_indexable(texture2d)(float,float,float,float) r2.y, r2.zwzz, t7.yxzw, s0
add r2.y, r2.y, cb6[12].w
add r2.y, -r2.x, r2.y
mad r2.x, r3.w, r2.y, r2.x
mad r1.w, -cb6[13].y, r1.w, l(1.000000)
mul r2.y, cb5[0].x, cb6[13].z
mad_sat r1.w, r2.x, r1.w, -r2.y
ne r2.x, cb0[3].x, l(0.000000)
lt r2.y, l(0.001000), |cb0[3].x|
and r2.x, r2.y, r2.x
round_ni r2.yz, v7.xxyx
dp2 r2.y, r2.yzyy, l(347.834503, 3343.283691, 0.000000, 0.000000)
sincos null, r2.y, r2.y
mul r2.y, r2.y, l(1000.000000)
frc r2.y, r2.y
lt r2.z, cb0[3].x, l(0.000000)
add r2.w, cb0[3].x, l(1.000000)
lt r2.w, r2.y, r2.w
lt r2.y, cb0[3].x, r2.y
movc r2.y, r2.z, r2.w, r2.y
ieq r2.y, r2.y, l(0)
and r2.x, r2.x, r2.y
discard_nz r2.x
mov_sat r2.x, cb6[12].y
mad o2.z, r1.w, r23.y, r23.x
lt r1.w, l(0.000000), cb3[11].y
movc o6.x, r1.w, cb4[5].x, cb3[19].z
div r1.xy, r1.xyxx, r1.zzzz
div r1.zw, v6.xxxy, v6.wwww
add r1.xyzw, -r6.xyzw, r1.xyzw
add r1.xy, -r1.zwzz, r1.xyxx
mad r1.xy, r1.xyxx, l(0.249500, 0.249500, 0.000000, 0.000000), l(0.499992371, 0.499992371, 0.000000, 0.000000)
mul o4.xy, r1.xyxx, v6.zzzz
mov o4.zw, l(0,0,0,0)
add r1.xyz, r4.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r1.xyz, r2.xxxx, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r2.yzw, -r4.xxyz, r2.xxxx, r4.xxyz
mad r2.yzw, r2.yyzw, r20.wwww, r20.xxyz
mad r1.xyz, r1.xyzx, r21.wwww, r21.xyzx
sample_l_indexable(texture2d)(float,float,float,float) r6.xyzw, v4.xyxx, t9.xyzw, s1, r0.w
max r1.w, r6.w, l(0.010000)
sample_l_indexable(texture2d)(float,float,float,float) r7.xyzw, v4.xyxx, t8.xyzw, s1, r0.w
div r7.xyzw, r7.yxzw, r1.wwww
mad r3.w, r7.w, l(0.00390625000), r7.y
mov r7.y, l(1.000000)
dp3 r7.w, l(-1.000000, 1.000000, -1.000000, 0.000000), r7.xyzx
mul r7.xyz, r3.wwww, r7.xwzx
mul r7.xyz, r7.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r8.xyzw, v4.xyxx, t10.xyzw, s1, r0.w
div r8.xyzw, r8.wxyz, r1.wwww
div r6.xyz, r6.xyzx, r1.wwww
mad r6.xyz, r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r8.yzw, r8.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
dp3 r0.w, r8.yzwy, r3.xyzx
mad r0.w, -r0.w, l(0.500000), l(0.500000)
add r1.w, -r0.w, l(1.000000)
dp3 r3.w, r8.yzwy, r6.xyzx
add r6.xyz, r6.xyzx, r6.xyzx
mad r6.xyz, -r8.yzwy, r3.wwww, r6.xyzx
dp3 r3.w, r6.xyzx, r6.xyzx
rsq r3.w, r3.w
mul r6.xyz, r3.wwww, r6.xyzx
dp3 r3.w, r8.yzwy, r6.xyzx
min r4.w, r3.w, l(0.000000)
add r4.w, r4.w, l(1.000000)
add r3.w, r3.w, l(1.000000)
mul r3.w, r3.w, l(0.500000)
mul r5.w, r3.w, r3.w
dp2 r3.w, r5.wwww, r3.wwww
mad r3.w, -r5.w, r5.w, r3.w
mad r3.w, r3.w, l(3.33333325), l(-1.000000)
mad r3.w, r4.w, r3.w, l(1.000000)
dp3 r5.w, r3.xyzx, r6.xyzx
add r5.w, r5.w, l(1.000000)
mul r5.w, r5.w, l(0.500000)
mul r6.x, r5.w, r5.w
dp2 r5.w, r6.xxxx, r5.wwww
mad r5.w, -r6.x, r6.x, r5.w
mad r5.w, r5.w, l(3.33333325), l(-1.000000)
mad r4.w, r4.w, r5.w, l(1.000000)
div r3.w, r4.w, r3.w
mul r1.w, r1.w, r3.w
mad r6.xyz, r0.wwww, r4.xyzx, r1.wwww
mul r6.xyz, r6.xyzx, r7.xyzx
mul r6.xyz, r2.yzwy, r6.xyzx
mad r1.xyz, r1.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r2.yzwy
max r2.yzw, cb6[2].xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), r24.x
if_nz r0.w
  add r0.xyz, -r5.xyzx, r0.xyzx
  add r5.xyz, r0.xyzx, -cb3[8].xyzx
  add r7.xyz, cb3[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r5.xyz, r7.xyzx, |r5.xyzx|
  or r0.w, r5.y, r5.x
  or r0.w, r5.z, r0.w
  dp3 r0.x, r0.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r0.x, r0.x, l(0.002000)
  frc r0.x, r0.x
  lt r0.x, l(0.500000), r0.x
  movc r0.xyz, r0.xxxx, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r2.yzw, r0.wwww, r0.xxyz, r2.yyzw
endif 
mad r0.xyz, r25.xxxx, r1.xyzx, r6.xyzx
add o0.xyz, r2.yzwy, r0.xyzx
mul r0.xyz, v7.xyxx, l(0.00781250000, 0.00781250000, 0.00781250000, 0.000000)
frc r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000), l(-64.340622, -72.465622, -64.340622, 0.000000)
mul r0.xyz, r0.xyyx, r0.xyzx
dp3 r0.x, r0.xyzx, l(20.390625, 60.703125, 2.42812085, 0.000000)
frc r0.x, r0.x
add r0.x, r0.x, l(-0.500000)
mad o1.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mul o3.w, r0.x, l(0.00392156886)
mov_sat r8.x, r8.x
sqrt o7.xyzw, r8.xxxx
mov o0.w, l(0)
mov o1.w, cb3[11].x
mov o2.yw, l(0,0.500000,0,0.0666666701)
mov o2.x, r2.x
mov o3.xyz, r4.xyzx
mov o5.xyzw, l(0,0,0,0)
mov o6.yzw, cb3[19].zzzz
ret 
// Approximately 0 instruction slots used