// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 e8ab2e9467b2f930-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 14:24:59 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xy  
// TEXCOORD                 4   xyz         1     NONE   float       
// TEXCOORD                 5   xyzw        2     NONE   float   xy w
// PARTICLE_LIGHTING_OFFSET     0   xyz         3     NONE   float   xyz 
// TANGENTX                 0   xyzw        4     NONE   float   xyz 
// TANGENTZ                 0   xyzw        5     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           6     NONE    uint   x   
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// SV_Position              0   xyzw        8      POS   float   xyz 
// SV_IsFrontFace           0   x           9    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[29], immediateIndexed
dcl_constantbuffer cb1[164], immediateIndexed
dcl_constantbuffer cb2[157], immediateIndexed
dcl_constantbuffer cb3[10], immediateIndexed
dcl_constantbuffer cb4[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v0.xy
dcl_input_ps linear v2.xyw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyzw
dcl_input_ps constant v6.x
dcl_input_ps linear v7.xyzw
dcl_input_ps_siv linear noperspective v8.xyz, position
dcl_output o0.xyzw
dcl_temps 39
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 2048

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 e8ab2e9467b2f930-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r11.xyzw, l(0), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(592), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(624), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(2016), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(2032), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(1), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(1), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(1), l(96), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(1), l(144), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(1), l(160), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(1), l(176), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(1), l(192), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(1), l(448), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r26.xyzw, l(1), l(464), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r27.xyzw, l(1), l(480), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r28.xyzw, l(1), l(496), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r29.xyzw, l(1), l(512), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r30.xyzw, l(1), l(528), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r31.xyzw, l(1), l(544), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r32.xyzw, l(1), l(560), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 e8ab2e9467b2f930-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r33.xyzw, l(0), l(576), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r34.xyzw, l(0), l(592), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r35.xyzw, l(0), l(608), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r36.xyzw, l(0), l(624), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r37.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r38.xyzw, l(1), l(448), t102.xyzw

and r0.x, v6.x, l(1)
if_z r0.x
  mov r0.x, r11.x
  mov r0.y, r12.x
  mov r0.z, r13.x
  mov r0.w, r14.x
  mov r1.x, r11.y
  mov r1.y, r12.y
  mov r1.z, r13.y
  mov r1.w, r14.y
  mov r2.x, r11.z
  mov r2.y, r12.z
  mov r2.z, r13.z
  mov r2.w, r14.z
  mov r3.x, r11.w
  mov r3.y, r12.w
  mov r3.z, r13.w
  mov r3.w, r14.w
  mov r4.xyz, r15.xyzx
  mov r5.xyz, r25.xyzx
else 
  mov r0.x, r33.x
  mov r0.y, r34.x
  mov r0.z, r35.x
  mov r0.w, r36.x
  mov r1.x, r33.y
  mov r1.y, r34.y
  mov r1.z, r35.y
  mov r1.w, r36.y
  mov r2.x, r33.z
  mov r2.y, r34.z
  mov r2.z, r35.z
  mov r2.w, r36.z
  mov r3.x, r33.w
  mov r3.y, r34.w
  mov r3.z, r35.w
  mov r3.w, r36.w
  mov r4.xyz, r37.xyzx
  mov r5.xyz, r38.xyzx
endif 
mul r6.xyz, v4.yzxy, v5.zxyz
mad r6.xyz, v5.yzxy, v4.zxyz, -r6.xyzx
mul r6.xyz, r6.xyzx, v5.wwww
mov r7.xyz, v8.xyzx
mov r7.w, l(1.000000)
dp4 r0.x, r7.xyzw, r0.xyzw
dp4 r0.y, r7.xyzw, r1.xyzw
dp4 r0.z, r7.xyzw, r2.xyzw
dp4 r0.w, r7.xyzw, r3.xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r1.xyz, -r4.xyzx, r0.xyzx
mad r2.xyz, r18.wwww, l(0.000000, 0.000000, 1.000000, 0.000000), r18.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
mul r3.xyz, r6.xyzx, r2.yyyy
mad r2.xyw, r2.xxxx, v4.xyxz, r3.xyxz
mad r2.xyz, r2.zzzz, v5.xyzx, r2.xywx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
add r3.xyz, v2.yyyy, cb4[1].xyzx
mul_sat r4.xyz, v2.xxxx, cb4[2].xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, v0.xyxx, t0.yzwx, s0
mul_sat r6.w, r0.w, v2.w
mad r4.xyz, r4.xyzx, r16.wwww, r16.xyzx
mad r7.xyz, r17.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r17.xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
div r0.x, r0.x, cb0[28].w
log r0.x, r0.x
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(6.000000)
round_pi r0.x, r0.x
mul r0.yzw, r1.xxyz, cb0[25].xxyz
mad r8.xyz, r1.xyzx, cb0[25].xyzx, -cb0[26].xyzx
max r1.w, |r8.y|, |r8.x|
max r1.w, |r8.z|, r1.w
mul r1.w, r1.w, l(4.000000)
log r1.w, r1.w
max r1.w, r1.w, l(0.000000)
round_ni r1.w, r1.w
max r0.x, r0.x, r1.w
exp r1.w, r0.x
div r8.xyz, r0.yzwy, r1.wwww
frc r8.xyz, r8.xyzx
mul r0.x, r0.x, l(0.142857149)
mad r8.w, r8.z, l(0.142857149), r0.x
mul r9.xyz, cb0[27].xyzx, l(1.000000, 1.000000, 7.000000, 0.000000)
mul r8.xyz, r8.xywx, r9.xyzx
round_ni r8.xyz, r8.xyzx
add r8.xyz, r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
div r8.xyz, r8.xyzx, r9.xyzx
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r8.xyzx, t3.xyzw, s2, l(0.000000)
mul r8.xyzw, r8.xyzw, l(255.000000, 255.000000, 255.000000, 255.000000)
div r9.xyz, cb0[27].xyzx, r8.wwww
mul r0.xyz, r0.yzwy, r9.xyzx
frc r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(0.666666687, 0.666666687, 0.666666687, 0.000000), r8.xyzx
add r0.xyz, r0.xyzx, l(0.166666672, 0.166666672, 0.166666672, 0.000000)
mul r0.xyz, r0.xyzx, cb0[28].xyzx
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r0.xyzx, t4.xyzw, s3, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r9.xyzw, r0.xyzx, t5.xyzw, s3, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r10.xyzw, r0.xyzx, t6.xyzw, s3, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r0.x, r0.xyzx, t7.yxzw, s3, l(0.000000)
dp3 r0.y, r8.yzwy, r8.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r8.yzw, r0.yyyy, r8.yyzw
dp3 r0.y, r2.xyzx, r8.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r8.x
add r1.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r1.w, r1.w, r3.w
mad r8.yz, r0.zzzz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r8.y
exp r0.y, r0.y
mul r0.z, r0.y, r8.z
mad r0.y, -r8.z, r0.y, l(1.000000)
mad r0.y, r1.w, r0.y, r0.z
mul r0.y, r0.y, r8.x
movc r8.x, r0.w, r0.y, r8.x
dp3 r0.y, r9.yzwy, r9.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r9.yzw, r0.yyyy, r9.yyzw
dp3 r0.y, r2.xyzx, r9.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r9.x
add r1.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r1.w, r1.w, r3.w
mad r9.yz, r0.zzzz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r9.y
exp r0.y, r0.y
mul r0.z, r0.y, r9.z
mad r0.y, -r9.z, r0.y, l(1.000000)
mad r0.y, r1.w, r0.y, r0.z
mul r0.y, r0.y, r9.x
movc r8.y, r0.w, r0.y, r9.x
dp3 r0.y, r10.yzwy, r10.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r9.xyz, r0.yyyy, r10.yzwy
dp3 r0.y, r2.xyzx, r9.xyzx
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r10.x
add r1.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r1.w, r1.w, r3.w
mad r9.xy, r0.zzzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(1.000000, 2.000000, 0.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r9.x
exp r0.y, r0.y
mul r0.z, r0.y, r9.y
mad r0.y, -r9.y, r0.y, l(1.000000)
mad r0.y, r1.w, r0.y, r0.z
mul r0.y, r0.y, r10.x
movc r8.z, r0.w, r0.y, r10.x
max r0.yzw, r8.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
mov r2.w, l(1.000000)
dp4 r8.x, r26.xyzw, r2.xyzw
dp4 r8.y, r27.xyzw, r2.xyzw
dp4 r8.z, r28.xyzw, r2.xyzw
mul r9.xyzw, r2.yzzx, r2.xyzz
dp4 r10.x, r29.xyzw, r9.xyzw
dp4 r10.y, r30.xyzw, r9.xyzw
dp4 r10.z, r31.xyzw, r9.xyzw
mul r1.w, r2.y, r2.y
mad r1.w, r2.x, r2.x, -r1.w
add r2.xyz, r8.xyzx, r10.xyzx
mad r2.xyz, r32.xyzx, r1.wwww, r2.xyzx
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.xyz, r5.xyzx, r2.xyzx
mad r0.xyz, r2.xyzx, r0.xxxx, r0.yzwy
add r2.xyz, r1.xyzx, v3.xyzx
add r5.xyz, r2.xyzx, -r21.xyzx
mul r8.xyz, r5.xyzx, r23.xyzx
add r2.xyz, r2.xyzx, -r22.xyzx
mul r2.xyz, r2.xyzx, r24.xyzx
mad r5.xyz, r5.xyzx, r23.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r5.xyz, -|r5.xyzx|, l(0.500000, 0.500000, 0.500000, 0.000000)
mul_sat r5.xyz, r5.xyzx, l(6.000000, 6.000000, 6.000000, 0.000000)
mul r0.w, r5.y, r5.x
mul r0.w, r5.z, r0.w
sample_l_indexable(texture3d)(float,float,float,float) r5.xyz, r8.xyzx, t1.xyzw, s1, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r2.xyz, r2.xyzx, t2.xyzw, s1, l(0.000000)
add r5.xyz, -r2.xyzx, r5.xyzx
mad r2.xyz, r0.wwww, r5.xyzx, r2.xyzx
mul r2.xyz, r4.xyzx, r2.xyzx
mul r5.xyz, r2.xyzx, l(0.886227548, 0.886227548, 0.886227548, 0.000000)
mad r7.xyz, r7.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r4.xyzx
mad r2.xyz, -r2.xyzx, l(0.886227548, 0.886227548, 0.886227548, 0.000000), r7.xyzx
mad r2.xyz, r20.xxxx, r2.xyzx, r5.xyzx
max r6.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), r19.x
if_nz r0.w
  add r3.xyz, r1.xyzx, -cb3[8].xyzx
  add r5.xyz, cb3[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r3.xyz, r5.xyzx, |r3.xyzx|
  or r0.w, r3.y, r3.x
  or r0.w, r3.z, r0.w
  dp3 r1.x, r1.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.x, r1.x, l(0.002000)
  frc r1.x, r1.x
  lt r1.x, l(0.500000), r1.x
  movc r1.yzw, r1.xxxx, l(0,0,1.000000,1.000000), l(0,1.000000,1.000000,0)
  mov r1.x, l(1.000000)
  movc r6.xyzw, r0.wwww, r1.yzwx, r6.xyzw
  mov o0.w, r6.w
else 
  mov o0.w, r6.w
endif 
mad r0.xyz, r0.xyzx, r4.xyzx, r2.xyzx
add r0.xyz, r6.xyzx, r0.xyzx
mad o0.xyz, r0.xyzx, v7.wwww, v7.xyzx
ret 
// Approximately 0 instruction slots used