// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 87c564b4778f7354-vs.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 14:21:00 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz 
// ATTRIBUTE                1   xyz         1     NONE   float   xyz 
// ATTRIBUTE                2   xyzw        2     NONE   float   xyzw
// ATTRIBUTE                3   xyzw        3     NONE   float       
// ATTRIBUTE                4   xy          4     NONE   float   xy  
// ATTRIBUTE               15   xy          5     NONE   float   xy  
// ATTRIBUTE               14   xy          6     NONE   float   xy  
// SV_InstanceID            0   x           7   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyzw
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 4   xyzw        3     NONE   float   xyzw
// TEXCOORD                 5   xy          4     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           5     NONE    uint   x   
// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
// TEXCOORD                12   xyz         7     NONE   float   xyz 
// TEXCOORD                13   xyz         8     NONE   float   xyz 
// SV_POSITION              0   xyzw        9      POS   float   xyzw
// SV_ClipDistance          1   x          10  CLIPDST   float   x   
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} }
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[165], immediateIndexed
dcl_constantbuffer cb2[165], immediateIndexed
dcl_constantbuffer cb3[15], immediateIndexed
dcl_constantbuffer cb4[13], immediateIndexed
dcl_constantbuffer cb5[29], immediateIndexed
dcl_constantbuffer cb6[18], immediateIndexed
dcl_constantbuffer cb7[11], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v4.xy
dcl_input v5.xy
dcl_input v6.xy
dcl_input_sgv v7.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xy
dcl_output o5.x
dcl_output o6.xyzw
dcl_output o7.xyz
dcl_output o8.xyz
dcl_output_siv o9.xyzw, position
dcl_output_siv o10.x, clip_distance
dcl_temps 28
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 2048
// Disables driver stereo correction:
dcl_constantbuffer cb12[4], immediateIndexed

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 87c564b4778f7354-vs.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r11.xyzw, l(0), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(16), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(48), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(1), l(64), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(1), l(144), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(1), l(160), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(1), l(176), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(1), l(192), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(1), l(576), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 87c564b4778f7354-vs.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(0), l(0), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(0), l(16), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(0), l(32), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(0), l(48), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r26.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r27.xyzw, l(1), l(576), t102.xyzw

and r0.x, v7.x, l(1)
if_z r0.x
  mov r1.x, r11.x
  mov r1.y, r12.x
  mov r1.z, r13.x
  mov r1.w, r14.x
  mov r2.x, r11.y
  mov r2.y, r12.y
  mov r2.z, r13.y
  mov r2.w, r14.y
  mov r3.x, r11.z
  mov r3.y, r12.z
  mov r3.z, r13.z
  mov r3.w, r14.z
  mov r4.x, r11.w
  mov r4.y, r12.w
  mov r4.z, r13.w
  mov r4.w, r14.w
  mov r0.yzw, r15.xxyz
  mov r5.x, r21.y
else 
  mov r1.x, r22.x
  mov r1.y, r23.x
  mov r1.z, r24.x
  mov r1.w, r25.x
  mov r2.x, r22.y
  mov r2.y, r23.y
  mov r2.z, r24.y
  mov r2.w, r25.y
  mov r3.x, r22.z
  mov r3.y, r23.z
  mov r3.z, r24.z
  mov r3.w, r25.z
  mov r4.x, r22.w
  mov r4.y, r23.w
  mov r4.z, r24.w
  mov r4.w, r25.w
  mov r0.yzw, r26.xxyz
  mov r5.x, r27.y
endif 
mad r5.yzw, v1.xxyz, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
mad r6.xyzw, v2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r7.xyz, r5.yzwy, r6.yzxy
mad r5.yzw, r6.xxyz, r5.zzwy, -r7.xxyz
mul r5.yzw, r6.wwww, r5.yyzw
mul r7.xyz, r6.yzxy, r5.yzwy
mad r5.yzw, r5.wwyz, r6.zzxy, -r7.xxyz
mul r5.yzw, r6.wwww, r5.yyzw
mul r7.xyz, cb3[0].xyzx, cb3[14].xxxx
mul r8.xyz, cb3[1].xyzx, cb3[14].yyyy
mul r9.xyz, cb3[2].xyzx, cb3[14].zzzz
mul r10.xyz, r5.zzzz, r8.xyzx
mad r10.xyz, r5.yyyy, r7.xyzx, r10.xyzx
mad o0.xyz, r5.wwww, r9.xyzx, r10.xyzx
mul r5.yzw, r6.yyyy, r8.xxyz
mad r5.yzw, r6.xxxx, r7.xxyz, r5.yyzw
mad r5.yzw, r6.zzzz, r9.xxyz, r5.yyzw
mul o1.w, r6.w, cb3[9].w
mul r6.xyz, v0.yyyy, cb3[1].xyzx
mad r6.xyz, cb3[0].xyzx, v0.xxxx, r6.xyzx
mad r6.xyz, cb3[2].xyzx, v0.zzzz, r6.xyzx
add r7.xyz, r0.yzwy, cb3[3].xyzx
add r6.xyz, r6.xyzx, r7.xyzx
mul r6.w, r16.z, cb7[8].x
add r7.xyzw, -r0.ywzw, r6.xzyz
div r7.xyzw, r7.xyzw, cb7[8].zzzz
mad r7.xyzw, r6.wwww, l(-0.030000, 0.600000, -0.030000, 0.600000), r7.xyzw
sample_l_indexable(texture2d)(float,float,float,float) r6.w, r7.xyxx, t0.yzwx, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r7.x, r7.zwzz, t0.xyzw, s0, l(0.000000)
mul r7.x, |r5.y|, r7.x
mad r6.w, r6.w, |r5.z|, r7.x
add r6.w, -r6.w, l(0.500000)
mad r6.xyz, r6.wwww, cb7[10].yyyy, r6.xyzx
mov r6.w, l(1.000000)
dp4 r1.x, r6.xyzw, r1.xyzw
dp4 r1.y, r6.xyzw, r2.xyzw
dp4 r1.z, r6.xyzw, r3.xyzw
dp4 r1.w, r6.xyzw, r4.xyzw
if_nz cb0[0].x
  mov r2.x, icb[r0.x + 0].x
  mov r2.y, l(1.000000)
  dp2 o10.x, r1.xwxx, r2.xyxx
  mul r2.x, r5.x, l(0.500000)
  mul r2.y, r1.w, icb[r0.x + 0].x
  mad r2.z, -r5.x, l(0.500000), l(1.000000)
  mul r2.y, r2.z, r2.y
  mad r1.x, r1.x, r2.x, r2.y
else 
  mov o10.x, l(0)
endif 
mad o3.zw, v5.xxxy, cb6[17].xxxy, cb6[17].zzzw
mad o4.xy, v6.xyxx, cb0[7].xyxx, cb0[7].zwzz
movc r2.x, cb0[0].x, l(1), l(0)
imad o5.x, r2.x, l(0x80000000), r0.x
add r2.xyz, r6.xyzx, -r15.xyzx
mul r3.xyz, r2.yyyy, cb4[1].xywx
mad r3.xyz, r2.xxxx, cb4[0].xywx, r3.xyzx
mad r3.xyz, r2.zzzz, cb4[2].xywx, r3.xyzx
add r3.xyz, r3.xyzx, cb4[3].xywx
div r3.xy, r3.xyxx, r3.zzzz
add r2.xyz, r2.xyzx, -cb4[12].xyzx
mul r0.x, r2.y, cb4[9].z
mad r0.x, r2.x, cb4[8].z, r0.x
mad r0.x, r2.z, cb4[10].z, r0.x
add r0.x, r0.x, cb4[11].z
mad r2.xy, r3.xyxx, cb5[26].xyxx, cb5[26].xyxx
add r0.x, r0.x, -cb4[12].w
div r0.x, r0.x, cb5[28].w
rsq r0.x, r0.x
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
itof r2.w, cb5[27].z
mul r2.z, r0.x, r2.w
mul r2.xyz, r2.xyzx, cb5[28].xyzx
sample_l_indexable(texture3d)(float,float,float,float) o6.xyzw, r2.xyzx, t5.xyzw, s2, l(0.000000)
add r0.xyz, -r0.yzwy, r6.xyzx
add r2.xyz, r0.xyzx, -r17.xyzx
mul r3.xyz, r2.xyzx, r19.xyzx
add r0.xyz, r0.xyzx, -r18.xyzx
mul r0.xyz, r0.xyzx, r20.xyzx
mad r2.xyz, r2.xyzx, r19.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r2.xyz, -|r2.xyzx|, l(0.500000, 0.500000, 0.500000, 0.000000)
mul_sat r2.xyz, r2.xyzx, l(6.000000, 6.000000, 6.000000, 0.000000)
mul r0.w, r2.y, r2.x
mul r0.w, r2.z, r0.w
sample_l_indexable(texture3d)(float,float,float,float) r2.xyz, r3.xyzx, t1.xyzw, s1, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r4.xyz, r0.xyzx, t2.xyzw, s1, l(0.000000)
add r2.xyz, r2.xyzx, -r4.xyzx
mad o7.xyz, r0.wwww, r2.xyzx, r4.xyzx
sample_l_indexable(texture3d)(float,float,float,float) r2.xyz, r3.xyzx, t3.xyzw, s1, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r0.xyz, r0.xyzx, t4.xyzw, s1, l(0.000000)
add r2.xyz, -r0.xyzx, r2.xyzx
mad o8.xyz, r0.wwww, r2.xyzx, r0.xyzx
mov o0.w, l(0)
mov o1.xyz, r5.yzwy
mov o2.xy, v4.xyxx
mov o2.zw, l(0,0,0,0)
mov o3.xy, l(0,0,0,0)
mov o9.xyzw, r1.xyzw
ret 
// Approximately 0 instruction slots used