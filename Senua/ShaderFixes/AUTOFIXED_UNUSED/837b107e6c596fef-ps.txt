// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 837b107e6c596fef-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:43:25 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz 
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// COLOR                    0   xyzw        2     NONE   float       
// TEXCOORD                 0   xy          3     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x   
// VELOCITY_PREV_POS        0   xyzw        5     NONE   float   xyzw
// SV_Position              0   xyzw        6      POS   float   xyzw
// SV_IsFrontFace           0   x           7    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
// SV_Target                5   xyzw        5   TARGET   float   xyzw
// SV_Target                6   xyzw        6   TARGET   float   xyzw
// SV_Target                7   xyzw        7   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[135], immediateIndexed
dcl_constantbuffer cb2[123], immediateIndexed
dcl_constantbuffer cb3[20], immediateIndexed
dcl_constantbuffer cb4[6], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_constantbuffer cb6[28], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v3.xy
dcl_input_ps constant v4.x
dcl_input_ps linear v5.xyzw
dcl_input_ps_siv linear noperspective v6.xyzw, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 37
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 1968

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 837b107e6c596fef-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(416), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(592), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(624), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(992), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(1936), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(1952), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(0), l(2016), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(0), l(2032), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(1), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(1), l(16), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r26.xyzw, l(1), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r27.xyzw, l(1), l(96), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 837b107e6c596fef-ps.txt
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r28.xyzw, l(0), l(416), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r29.xyzw, l(0), l(576), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r30.xyzw, l(0), l(592), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r31.xyzw, l(0), l(608), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r32.xyzw, l(0), l(624), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r33.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r34.xyzw, l(0), l(992), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r35.xyzw, l(0), l(1936), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r36.xyzw, l(0), l(1952), t102.xyzw

and r0.x, v4.x, l(1)
if_z r0.x
  mov r0.x, r14.x
  mov r0.y, r15.x
  mov r0.z, r16.x
  mov r0.w, r17.x
  mov r1.x, r14.y
  mov r1.y, r15.y
  mov r1.z, r16.y
  mov r1.w, r17.y
  mov r2.x, r14.z
  mov r2.y, r15.z
  mov r2.z, r16.z
  mov r2.w, r17.z
  mov r3.x, r14.w
  mov r3.y, r15.w
  mov r3.z, r16.w
  mov r3.w, r17.w
  mov r4.xy, r20.xyxx
  mov r4.zw, r21.zzzw
  mov r5.xyz, r18.xyzx
  mov r6.xy, r13.xyxx
  mov r6.zw, r19.xxxy
else 
  mov r0.x, r29.x
  mov r0.y, r30.x
  mov r0.z, r31.x
  mov r0.w, r32.x
  mov r1.x, r29.y
  mov r1.y, r30.y
  mov r1.z, r31.y
  mov r1.w, r32.y
  mov r2.x, r29.z
  mov r2.y, r30.z
  mov r2.z, r31.z
  mov r2.w, r32.z
  mov r3.x, r29.w
  mov r3.y, r30.w
  mov r3.z, r31.w
  mov r3.w, r32.w
  mov r4.xy, r35.xyxx
  mov r4.zw, r36.zzzw
  mov r5.xyz, r33.xyzx
  mov r6.xy, r28.xyxx
  mov r6.zw, r34.xxxy
endif 
mul r7.xyz, v0.yzxy, v1.zxyz
mad r7.xyz, v1.yzxy, v0.zxyz, -r7.xyzx
mul r7.xyz, r7.xyzx, v1.wwww
add r4.xy, -r4.xyxx, v6.xyxx
mad r4.xy, r4.xyxx, r4.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, v6.wwww
mov r4.z, v6.w
mul r4.xyz, r4.xyzx, l(2.000000, -2.000000, 1.000000, 0.000000)
mov r8.xyz, v6.xyzx
mov r8.w, l(1.000000)
dp4 r0.x, r8.xyzw, r0.xyzw
dp4 r0.y, r8.xyzw, r1.xyzw
dp4 r0.z, r8.xyzw, r2.xyzw
dp4 r0.w, r8.xyzw, r3.xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r1.xyz, -r5.xyzx, r0.xyzx
dp3 r0.w, -r0.xyzx, -r0.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, -r0.xyzx
div r3.xyzw, v3.xyxy, cb6[17].xxzz
add r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
add r3.xyzw, r3.xyzw, -cb6[17].yyww
sample_indexable(texture2d)(float,float,float,float) r3.xy, r3.xyxx, t0.xyzw, s3
mad r5.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r5.xyxx, r5.xyxx
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
sqrt r5.z, r0.w
add r3.xy, r3.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
dp2 r0.w, r3.xyxx, r3.xyxx
sqrt r0.w, r0.w
add r3.xy, -cb6[1].xyxx, cb6[18].zzzz
add r3.xy, r0.wwww, -r3.xyxx
div r3.xy, r3.xyxx, cb6[1].xyxx
add_sat r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r8.xy, r3.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, r3.xyxx
mul r3.xy, r3.xyxx, r8.xyxx
add r1.w, -cb6[18].w, l(1.000000)
mad r1.w, r3.x, r1.w, cb6[18].w
add r8.xyz, -r5.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mad r5.xyz, r1.wwww, r8.xyzx, r5.xyzx
mad r5.xyz, r5.xyzx, r24.wwww, r24.xyzx
dp3 r1.w, r5.xyzx, r5.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, r5.xyzx
mul r8.xyz, r7.xyzx, r5.yyyy
mad r5.xyw, r5.xxxx, v0.xyxz, r8.xyxz
mad r5.xyz, r5.zzzz, v1.xyzx, r5.xywx
dp3 r1.w, r5.xyzx, r5.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, r5.xyzx
dp3 r1.w, r5.xyzx, r2.xyzx
mul r8.xyz, r1.wwww, r5.xyzx
mad r8.xyz, r8.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), -r2.xyzx
dp3 r2.w, cb6[3].xyzx, r8.xyzx
mad r8.xyz, -cb6[3].xyzx, r2.wwww, r8.xyzx
mul r9.xyz, r8.yzxy, cb6[3].zxyz
mad r9.xyz, cb6[3].yzxy, r8.zxyz, -r9.xyzx
sincos r10.x, r11.x, cb6[19].z
mul r9.xyz, r9.xyzx, r10.xxxx
mad r8.xyz, r8.xyzx, r11.xxxx, r9.xyzx
mad r8.xyz, cb6[3].xyzx, r2.wwww, r8.xyzx
dp3 r2.w, r8.xyzx, r8.xyzx
sqrt r2.w, r2.w
div r8.xyz, r8.xyzx, r2.wwww
sample_indexable(texturecube)(float,float,float,float) r8.xyz, r8.xyzx, t5.xyzw, s2
mul r8.xyz, r8.xyzx, cb6[5].xyzx
max r8.xyz, |r8.xyzx|, l(0.000001, 0.000001, 0.000001, 0.000000)
log r8.xyz, r8.xyzx
mul r8.xyz, r8.xyzx, cb6[19].wwww
exp r8.xyz, r8.xyzx
max r2.w, r1.w, l(0.000000)
add r2.w, -r2.w, l(1.000000)
max r2.w, |r2.w|, l(0.000001)
log r2.w, r2.w
mul r2.w, r2.w, cb6[20].x
exp r2.w, r2.w
mad r2.w, r2.w, cb6[20].w, cb6[20].z
mul r9.xyz, r2.wwww, cb6[7].xyzx
mad r8.xyz, -r9.xyzx, cb6[21].xxxx, r8.xyzx
add r8.xyz, r8.xyzx, cb6[8].xyzx
mad r0.w, -r0.w, cb6[21].w, l(1.000000)
mul_sat r0.w, r0.w, cb6[22].w
add r9.xyz, -cb6[12].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r9.xyz, r0.wwww, r9.xyzx, cb6[12].xyzx
add r10.xyz, cb6[14].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r10.xyz, r0.wwww, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r10.xyz, -r9.xyzx, r10.xyzx
mad r9.xyz, r0.wwww, r10.xyzx, r9.xyzx
sample_indexable(texture2d)(float,float,float,float) r10.xyz, r3.zwzz, t1.xyzw, s3
add r10.xyz, r10.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r10.xyz, cb6[23].xxxx, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r10.xyz, r10.xyzx, cb6[23].yyyy
mul r9.xyz, r9.xyzx, r10.xyzx
dp3 r0.w, v0.xyzx, v0.xyzx
sqrt r0.w, r0.w
div r10.xyz, v0.zxyz, r0.wwww
sample_indexable(texture2d)(float,float,float,float) r11.xy, v3.xyxx, t2.xyzw, s0
mad r11.xy, r11.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r11.xyxx, r11.xyxx
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
sqrt r0.w, r0.w
mul r7.xyz, r7.xyzx, r11.yyyy
mad r7.xyz, r11.xxxx, v0.xyzx, r7.xyzx
mad r7.xyz, r0.wwww, v1.xyzx, r7.xyzx
dp3 r0.w, r10.yzxy, r7.xyzx
mad r10.xyz, -r0.wwww, r7.zxyz, r10.xyzx
dp3 r0.w, r10.xyzx, r10.xyzx
sqrt r0.w, r0.w
div r10.xyz, r10.xyzx, r0.wwww
div r0.w, l(1.000290), cb6[23].z
mad r2.w, r0.w, r1.w, -r0.w
mad r4.w, r0.w, r1.w, r0.w
mad r2.w, r2.w, r4.w, l(1.000000)
sqrt r2.w, r2.w
mad r1.w, r0.w, r1.w, -r2.w
mul r11.xyz, r2.xyzx, r0.wwww
mad r11.xyz, r1.wwww, r5.xyzx, -r11.xyzx
dp3 r0.w, r11.xyzx, r11.xyzx
rsq r0.w, r0.w
mul r11.xyz, r0.wwww, r11.xyzx
sample_indexable(texture2d)(float,float,float,float) r12.xyz, v3.xyxx, t3.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r0.w, cb6[15].xyxx, t3.yzwx, s1
add r12.xyz, -r0.wwww, r12.xyzx
max r12.xyz, r12.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r12.xyz, r12.xyzx, cb6[24].yyyy
dp3 r0.w, r2.xyzx, r7.xyzx
mul r0.w, r0.w, r0.w
mad r0.w, r0.w, l(0.675000), l(0.325000)
div r2.xyz, r12.xyzx, r0.wwww
mul r2.xyz, r2.xyzx, -r11.xyzx
dp3 r11.x, r10.yzxy, r2.xyzx
mul r12.xyz, r7.yzxy, r10.xyzx
mad r10.xyz, r10.zxyz, r7.zxyz, -r12.xyzx
dp3 r11.y, r10.xyzx, r2.xyzx
mul r2.xy, r11.xyxx, cb6[16].xyxx
mul r2.zw, r2.xxxy, r3.xxxx
mad r2.xy, r3.xxxx, r2.xyxx, r3.zwzz
mad r2.zw, cb6[24].zzzz, r2.zzzw, r3.zzzw
add r2.xyzw, r2.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
mul r2.zw, r2.zzzw, cb6[25].xxxx
dp2 r0.w, r2.zwzz, r2.zwzz
sqrt r1.w, r0.w
rsq r0.w, r0.w
mul r2.zw, r0.wwww, r2.zzzw
mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
mad r0.w, -r1.w, l(2.000000), l(1.000000)
mul_sat r0.w, r0.w, cb6[25].y
mad r2.zw, r0.wwww, -r2.zzzw, r2.zzzw
add r3.zw, r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r10.xyz, r3.zwzz, t4.xyzw, s3
mul r10.xyz, r10.xyzx, cb6[25].zzzz
mul r2.zw, r2.zzzw, cb6[25].wwww
dp2 r0.w, r2.zwzz, r2.zwzz
sqrt r0.w, r0.w
max r0.w, r0.w, l(0.000001)
log r0.w, r0.w
mul r0.w, r0.w, cb6[26].x
exp r0.w, r0.w
add r0.w, -r0.w, l(1.000000)
mad r10.xyz, r10.xyzx, r0.wwww, -r9.xyzx
mad r9.xyz, r3.xxxx, r10.xyzx, r9.xyzx
mul_sat r9.xyz, r9.xyzx, cb6[9].xyzx
add r0.w, -cb6[26].z, cb6[26].y
mad_sat r0.w, r3.x, r0.w, cb6[26].z
add r1.w, cb6[26].w, -cb6[27].x
mad_sat r1.w, r3.x, r1.w, cb6[27].x
mov_sat r2.z, cb5[0].x
mad o2.z, r1.w, r25.y, r25.x
lt r1.w, l(0.000000), cb3[11].y
movc o6.x, r1.w, cb4[5].x, cb3[19].z
dp3 r1.w, r7.xyzx, r7.xyzx
rsq r1.w, r1.w
mul r3.xzw, r1.wwww, r7.xxyz
dp3 r1.w, l(1.000000, 1.000000, 1.000000, 0.000000), |r3.xzwx|
div r3.xz, r3.xxzx, r1.wwww
ge r1.w, l(0.000000), r3.w
add r7.xy, -|r3.zxzz|, l(1.000000, 1.000000, 0.000000, 0.000000)
ge r7.zw, r3.xxxz, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r7.zw, r7.zzzw, l(0,0,1.000000,1.000000), l(0,0,-1.000000,-1.000000)
mul r7.xy, r7.zwzz, r7.xyxx
movc r3.xz, r1.wwww, r7.xxyx, r3.xxzx
mad o5.xy, r3.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
min o5.z, r3.y, l(1.000000)
dp2 r1.w, r2.xyxx, r2.xyxx
sqrt r1.w, r1.w
div r1.w, r1.w, cb6[18].z
mul r1.w, r1.w, cb6[27].y
max r1.w, |r1.w|, l(0.000001)
log r1.w, r1.w
mul r1.w, r1.w, cb6[27].z
exp r1.w, r1.w
min o5.w, r1.w, l(1.000000)
div r2.xy, r4.xyxx, r4.zzzz
add r2.xy, -r6.xyxx, r2.xyxx
div r3.xy, v5.xyxx, v5.wwww
add r3.xy, -r6.zwzz, r3.xyxx
add r2.xy, r2.xyxx, -r3.xyxx
mad r2.xy, r2.xyxx, l(0.249500, 0.249500, 0.000000, 0.000000), l(0.499992371, 0.499992371, 0.000000, 0.000000)
mul o4.xy, r2.xyxx, v5.zzzz
mov o4.zw, l(0,0,0,0)
mul r1.w, r0.w, r23.w
mad r2.xyw, r9.xyxz, r22.wwww, r22.xyxz
mad r3.xyz, r1.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), r23.xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
div r0.x, r0.x, cb0[33].w
log r0.x, r0.x
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(6.000000)
round_pi r0.x, r0.x
mul r4.xyz, r1.xyzx, cb0[30].xyzx
mad r6.xyz, r1.xyzx, cb0[30].xyzx, -cb0[31].xyzx
max r0.y, |r6.y|, |r6.x|
max r0.y, |r6.z|, r0.y
mul r0.y, r0.y, l(4.000000)
log r0.y, r0.y
max r0.y, r0.y, l(0.000000)
round_ni r0.y, r0.y
max r0.x, r0.x, r0.y
exp r0.y, r0.x
div r6.xyz, r4.xyzx, r0.yyyy
frc r6.xyz, r6.xyzx
mul r0.x, r0.x, l(0.142857149)
mad r6.w, r6.z, l(0.142857149), r0.x
mul r0.xyz, cb0[32].xyzx, l(1.000000, 1.000000, 7.000000, 0.000000)
mul r6.xyz, r0.xyzx, r6.xywx
round_ni r6.xyz, r6.xyzx
add r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
div r0.xyz, r6.xyzx, r0.xyzx
sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r0.xyzx, t6.xyzw, s4, l(0.000000)
mul r6.xyzw, r6.xyzw, l(255.000000, 255.000000, 255.000000, 255.000000)
div r0.xyz, cb0[32].xyzx, r6.wwww
mul r0.xyz, r0.xyzx, r4.xyzx
frc r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(0.666666687, 0.666666687, 0.666666687, 0.000000), r6.xyzx
add r0.xyz, r0.xyzx, l(0.166666672, 0.166666672, 0.166666672, 0.000000)
mul r0.xyz, r0.xyzx, cb0[33].xyzx
sample_l_indexable(texture3d)(float,float,float,float) r4.xyzw, r0.xyzx, t7.xyzw, s5, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r0.xyzx, t8.xyzw, s5, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r7.xyzw, r0.xyzx, t9.xyzw, s5, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r0.x, r0.xyzx, t10.yxzw, s5, l(0.000000)
dp3 r0.y, r4.yzwy, r4.yzwy
sqrt r0.z, r0.y
ne r1.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r4.yzw, r0.yyyy, r4.yyzw
dp3 r0.y, r5.xyzx, r4.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r4.x
add r3.w, -r0.z, l(1.000000)
add r4.y, r0.z, l(1.000000)
div r3.w, r3.w, r4.y
mad r4.yz, r0.zzzz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r4.y
exp r0.y, r0.y
mul r0.z, r0.y, r4.z
mad r0.y, -r4.z, r0.y, l(1.000000)
mad r0.y, r3.w, r0.y, r0.z
mul r0.y, r0.y, r4.x
movc r4.x, r1.w, r0.y, r4.x
dp3 r0.y, r6.yzwy, r6.yzwy
sqrt r0.z, r0.y
ne r1.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r6.yzw, r0.yyyy, r6.yyzw
dp3 r0.y, r5.xyzx, r6.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r6.x
add r3.w, -r0.z, l(1.000000)
add r4.w, r0.z, l(1.000000)
div r3.w, r3.w, r4.w
mad r6.yz, r0.zzzz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r6.y
exp r0.y, r0.y
mul r0.z, r0.y, r6.z
mad r0.y, -r6.z, r0.y, l(1.000000)
mad r0.y, r3.w, r0.y, r0.z
mul r0.y, r0.y, r6.x
movc r4.y, r1.w, r0.y, r6.x
dp3 r0.y, r7.yzwy, r7.yzwy
sqrt r0.z, r0.y
ne r1.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r7.yzwy
dp3 r0.y, r5.xyzx, r6.xyzx
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r7.x
add r3.w, -r0.z, l(1.000000)
add r4.w, r0.z, l(1.000000)
div r3.w, r3.w, r4.w
mad r6.xy, r0.zzzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(1.000000, 2.000000, 0.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r6.x
exp r0.y, r0.y
mul r0.z, r0.y, r6.y
mad r0.y, -r6.y, r0.y, l(1.000000)
mad r0.y, r3.w, r0.y, r0.z
mul r0.y, r0.y, r7.x
movc r4.z, r1.w, r0.y, r7.x
max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r4.xyz, r2.xywx, r4.xyzx
mul r4.xyz, r2.zzzz, r4.xyzx
mad r2.xyw, r3.xyxz, l(0.450000, 0.450000, 0.000000, 0.450000), r2.xyxw
max r3.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.y, l(0.000000), r26.x
if_nz r0.y
  add r6.xyz, r1.xyzx, -cb3[8].xyzx
  add r7.xyz, cb3[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r6.xyz, r7.xyzx, |r6.xyzx|
  or r0.y, r6.y, r6.x
  or r0.y, r6.z, r0.y
  dp3 r0.z, r1.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r0.z, r0.z, l(0.002000)
  frc r0.z, r0.z
  lt r0.z, l(0.500000), r0.z
  movc r1.xyz, r0.zzzz, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r3.xyz, r0.yyyy, r1.xyzx, r3.xyzx
endif 
mad r1.xyz, r27.xxxx, r2.xywx, r4.xyzx
add o0.xyz, r3.xyzx, r1.xyzx
mul r1.xyz, v6.xyxx, l(0.00781250000, 0.00781250000, 0.00781250000, 0.000000)
frc r1.xyz, r1.xyzx
mad r1.xyz, r1.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000), l(-64.340622, -72.465622, -64.340622, 0.000000)
mul r1.xyz, r1.xyyx, r1.xyzx
dp3 r0.y, r1.xyzx, l(20.390625, 60.703125, 2.42812085, 0.000000)
frc r0.y, r0.y
add r0.y, r0.y, l(-0.500000)
mad o1.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mul o3.w, r0.y, l(0.00392156886)
min r0.x, r2.z, r0.x
max r0.x, r0.x, l(0.000000)
sqrt o7.xyzw, r0.xxxx
mov o0.w, l(0)
mov o1.w, cb3[11].x
mov o2.xw, l(0,0,0,0.0352941193)
mov o2.y, r0.w
mov o3.xyz, r9.xyzx
mov o6.yzw, cb3[19].zzzz
ret 
// Approximately 0 instruction slots used