// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i -f --only-autofixed --disable-driver-stereo-cb 12 0f8d9797a48a95cb-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:42:44 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz 
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x   
// VELOCITY_PREV_POS        0   xyzw        4     NONE   float   xyzw
// SV_Position              0   xyzw        5      POS   float   xyzw
// SV_IsFrontFace           0   x           6    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
// SV_Target                5   xyzw        5   TARGET   float   xyzw
// SV_Target                6   xyzw        6   TARGET   float   xyzw
// SV_Target                7   xyzw        7   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[135], immediateIndexed
dcl_constantbuffer cb2[123], immediateIndexed
dcl_constantbuffer cb3[20], immediateIndexed
dcl_constantbuffer cb4[6], immediateIndexed
dcl_constantbuffer cb5[3], immediateIndexed
dcl_constantbuffer cb6[2], immediateIndexed
dcl_constantbuffer cb7[15], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps linear v4.xyzw
dcl_input_ps_siv linear noperspective v5.xyzw, position
dcl_input_ps_sgv v6.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 36
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 1968

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i -f --only-autofixed --disable-driver-stereo-cb 12 0f8d9797a48a95cb-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r11.xyzw, l(0), l(416), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(592), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(624), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(992), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(1936), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(1952), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(2016), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(2032), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(1), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(1), l(16), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(1), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(1), l(48), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r26.xyzw, l(1), l(96), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i -f --only-autofixed --disable-driver-stereo-cb 12 0f8d9797a48a95cb-ps.txt
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r27.xyzw, l(0), l(416), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r28.xyzw, l(0), l(576), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r29.xyzw, l(0), l(592), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r30.xyzw, l(0), l(608), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r31.xyzw, l(0), l(624), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r32.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r33.xyzw, l(0), l(992), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r34.xyzw, l(0), l(1936), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r35.xyzw, l(0), l(1952), t102.xyzw

and r0.x, v3.x, l(1)
if_z r0.x
  mov r0.x, r12.x
  mov r0.y, r13.x
  mov r0.z, r14.x
  mov r0.w, r15.x
  mov r1.x, r12.y
  mov r1.y, r13.y
  mov r1.z, r14.y
  mov r1.w, r15.y
  mov r2.x, r12.z
  mov r2.y, r13.z
  mov r2.z, r14.z
  mov r2.w, r15.z
  mov r3.x, r12.w
  mov r3.y, r13.w
  mov r3.z, r14.w
  mov r3.w, r15.w
  mov r4.xy, r18.xyxx
  mov r4.zw, r19.zzzw
  mov r5.xyz, r16.xyzx
  mov r6.xy, r11.xyxx
  mov r6.zw, r17.xxxy
else 
  mov r0.x, r28.x
  mov r0.y, r29.x
  mov r0.z, r30.x
  mov r0.w, r31.x
  mov r1.x, r28.y
  mov r1.y, r29.y
  mov r1.z, r30.y
  mov r1.w, r31.y
  mov r2.x, r28.z
  mov r2.y, r29.z
  mov r2.z, r30.z
  mov r2.w, r31.z
  mov r3.x, r28.w
  mov r3.y, r29.w
  mov r3.z, r30.w
  mov r3.w, r31.w
  mov r4.xy, r34.xyxx
  mov r4.zw, r35.zzzw
  mov r5.xyz, r32.xyzx
  mov r6.xy, r27.xyxx
  mov r6.zw, r33.xxxy
endif 
mul r7.xyz, v0.yzxy, v1.zxyz
mad r7.xyz, v1.yzxy, v0.zxyz, -r7.xyzx
mul r7.xyz, r7.xyzx, v1.wwww
add r4.xy, -r4.xyxx, v5.xyxx
mad r4.xy, r4.xyxx, r4.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, v5.wwww
mov r4.z, v5.w
mul r4.xyz, r4.xyzx, l(2.000000, -2.000000, 1.000000, 0.000000)
mov r8.xyz, v5.xyzx
mov r8.w, l(1.000000)
dp4 r0.x, r8.xyzw, r0.xyzw
dp4 r0.y, r8.xyzw, r1.xyzw
dp4 r0.z, r8.xyzw, r2.xyzw
dp4 r0.w, r8.xyzw, r3.xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r1.xyz, -r5.xyzx, r0.xyzx
dp3 r0.w, -r0.xyzx, -r0.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, -r0.xyzx
mul r0.w, r25.w, cb3[9].w
movc r1.w, v6.x, l(1.000000), l(-1.000000)
mul r0.w, r0.w, r1.w
sample_indexable(texture2d)(float,float,float,float) r3.xy, v2.xyxx, t0.xyzw, s0
add r5.xy, r3.xyxx, r3.xyxx
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r3.xyxx, r3.xyxx
add r1.w, -r1.w, l(1.000000)
max r1.w, r1.w, l(0.000000)
sqrt r5.z, r1.w
add r3.xyz, r5.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000)
mul r5.xyzw, v2.xyxy, cb7[10].xxzz
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, r5.xyxx, t1.xyzw, s1
add r8.xyz, r8.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r5.xy, v2.xyxx, t2.xyzw, s2
mul r9.xy, r5.xyxx, cb7[10].ywyy
mad r8.xyz, r8.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-0.000000, -0.000000, -1.000000, 0.000000)
mad r8.xyz, r9.xxxx, r8.xyzx, l(1.000000, 1.000000, 2.000000, 0.000000)
mad r8.xyz, r8.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000), l(1.000000, 1.000000, -1.000000, 0.000000)
dp3 r1.w, r3.xyzx, r8.xyzx
mul r8.xyz, r3.zzzz, r8.xyzx
mad r8.xyz, r3.xyzx, r1.wwww, -r8.xyzx
sample_indexable(texture2d)(float,float,float,float) r10.xyzw, r5.zwzz, t3.xyzw, s3
add r5.xzw, r10.xxyz, l(-0.500000, 0.000000, -0.500000, -0.500000)
mad r5.xzw, r5.xxzw, l(2.000000, 0.000000, 2.000000, 2.000000), l(-0.000000, 0.000000, -0.000000, -1.000000)
mad r5.xzw, r9.yyyy, r5.xxzw, l(1.000000, 0.000000, 1.000000, 2.000000)
mad r5.xzw, r5.xxzw, l(-1.000000, 0.000000, -1.000000, 1.000000), l(1.000000, 0.000000, 1.000000, -1.000000)
dp3 r1.w, r3.xyzx, r5.xzwx
mul r5.xzw, r3.zzzz, r5.xxzw
mad r3.xyz, r3.xyzx, r1.wwww, -r5.xzwx
add r3.xyz, -r8.xyzx, r3.xyzx
mad r3.xyz, r5.yyyy, r3.xyzx, r8.xyzx
mad r3.xyz, r3.xyzx, r22.wwww, r22.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
mul r5.xzw, r7.xxyz, r3.yyyy
mad r3.xyw, r3.xxxx, v0.xyxz, r5.xzxw
mad r3.xyz, r3.zzzz, v1.xyzx, r3.xywx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r0.w, r3.xyzx, r2.xyzx
max r0.w, r0.w, l(0.000000)
add r0.w, -r0.w, l(1.000000)
max r0.w, |r0.w|, l(0.000001)
log r0.w, r0.w
mul r1.w, r0.w, cb7[11].x
exp r1.w, r1.w
mad r1.w, r1.w, cb7[11].z, cb7[11].y
mul r1.w, r1.w, cb7[11].w
mad r2.xyz, r1.wwww, cb5[2].xyzx, cb7[1].xyzx
sample_indexable(texture2d)(float,float,float,float) r7.xyzw, v2.xyxx, t4.xyzw, s4
mul r5.xzw, r7.xxyz, cb7[5].xxyz
max r1.w, |r8.w|, l(0.000001)
log r1.w, r1.w
mul r1.w, r1.w, cb7[12].x
exp r1.w, r1.w
mov_sat r9.xy, r9.xyxx
add r1.w, r1.w, l(-1.000000)
mad r1.w, r9.x, r1.w, l(1.000000)
min r1.w, r1.w, l(1.000000)
max r2.w, |r10.w|, l(0.000001)
log r2.w, r2.w
mul r2.w, r2.w, cb7[12].y
exp r2.w, r2.w
add r2.w, r2.w, l(-1.000000)
mad r2.w, r9.y, r2.w, l(1.000000)
min r2.w, r2.w, l(1.000000)
add r2.w, -r1.w, r2.w
mad r1.w, r5.y, r2.w, r1.w
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, v2.xyxx, t5.ywxz, s5
mul r0.w, r0.w, cb7[12].z
exp r0.w, r0.w
mad r0.w, r0.w, cb7[13].x, cb7[12].w
mul r0.w, r0.w, r8.w
mul r0.w, r0.w, cb7[11].w
mul r7.xyz, r0.wwww, cb7[7].xyzx
mad r5.xyz, r5.xzwx, r1.wwww, r7.xyzx
mul_sat r5.xyz, r5.xyzx, cb7[2].xyzx
add r0.w, -r8.z, l(1.000000)
max r0.w, |r0.w|, l(0.000001)
log r0.w, r0.w
mul r0.w, r0.w, cb7[13].y
exp r0.w, r0.w
mad_sat r0.w, cb7[9].x, r0.w, cb6[1].y
max r1.w, |r8.z|, l(0.000001)
log r1.w, r1.w
mul r1.w, r1.w, cb7[13].z
exp r1.w, r1.w
mad r1.w, -cb6[1].y, l(0.700000), r1.w
add r2.w, cb7[13].w, -cb7[14].x
mad_sat r1.w, r1.w, r2.w, cb7[14].x
add r2.w, r7.w, l(-0.333300)
lt r2.w, r2.w, l(0.000000)
discard_nz r2.w
mov_sat r8.xy, r8.xyxx
mad o2.z, r1.w, r23.y, r23.x
lt r1.w, l(0.000000), cb3[11].y
movc o6.x, r1.w, cb4[5].x, cb3[19].z
div r4.xy, r4.xyxx, r4.zzzz
div r4.zw, v4.xxxy, v4.wwww
add r4.xyzw, -r6.xyzw, r4.xyzw
add r4.xy, -r4.zwzz, r4.xyxx
mad r4.xy, r4.xyxx, l(0.249500, 0.249500, 0.000000, 0.000000), l(0.499992371, 0.499992371, 0.000000, 0.000000)
mul o4.xy, r4.xyxx, v4.zzzz
mov o4.zw, l(0,0,0,0)
mul r1.w, r0.w, l(0.080000)
mad r4.xyz, -r0.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), r5.xyzx
mad r4.xyz, r8.xxxx, r4.xyzx, r1.wwww
mad r6.xyz, -r5.xyzx, r8.xxxx, r5.xyzx
mad r6.xyz, r6.xyzx, r20.wwww, r20.xyzx
mad r4.xyz, r4.xyzx, r21.wwww, r21.xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
div r0.x, r0.x, cb0[33].w
log r0.x, r0.x
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(6.000000)
round_pi r0.x, r0.x
mul r7.xyz, r1.xyzx, cb0[30].xyzx
mad r9.xyz, r1.xyzx, cb0[30].xyzx, -cb0[31].xyzx
max r0.y, |r9.y|, |r9.x|
max r0.y, |r9.z|, r0.y
mul r0.y, r0.y, l(4.000000)
log r0.y, r0.y
max r0.y, r0.y, l(0.000000)
round_ni r0.y, r0.y
max r0.x, r0.x, r0.y
exp r0.y, r0.x
div r9.xyz, r7.xyzx, r0.yyyy
frc r9.xyz, r9.xyzx
mul r0.x, r0.x, l(0.142857149)
mad r9.w, r9.z, l(0.142857149), r0.x
mul r0.xyz, cb0[32].xyzx, l(1.000000, 1.000000, 7.000000, 0.000000)
mul r9.xyz, r0.xyzx, r9.xywx
round_ni r9.xyz, r9.xyzx
add r9.xyz, r9.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
div r0.xyz, r9.xyzx, r0.xyzx
sample_l_indexable(texture3d)(float,float,float,float) r9.xyzw, r0.xyzx, t6.xyzw, s6, l(0.000000)
mul r9.xyzw, r9.xyzw, l(255.000000, 255.000000, 255.000000, 255.000000)
div r0.xyz, cb0[32].xyzx, r9.wwww
mul r0.xyz, r0.xyzx, r7.xyzx
frc r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(0.666666687, 0.666666687, 0.666666687, 0.000000), r9.xyzx
add r0.xyz, r0.xyzx, l(0.166666672, 0.166666672, 0.166666672, 0.000000)
mul r0.xyz, r0.xyzx, cb0[33].xyzx
sample_l_indexable(texture3d)(float,float,float,float) r7.xyzw, r0.xyzx, t7.xyzw, s7, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r9.xyzw, r0.xyzx, t8.xyzw, s7, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r10.xyzw, r0.xyzx, t9.xyzw, s7, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r0.x, r0.xyzx, t10.yxzw, s7, l(0.000000)
dp3 r0.y, r7.yzwy, r7.yzwy
sqrt r0.z, r0.y
ne r1.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r7.yzw, r0.yyyy, r7.yyzw
dp3 r0.y, r3.xyzx, r7.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r7.x
add r2.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r2.w, r2.w, r3.w
mad r7.yz, r0.zzzz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r7.y
exp r0.y, r0.y
mul r0.z, r0.y, r7.z
mad r0.y, -r7.z, r0.y, l(1.000000)
mad r0.y, r2.w, r0.y, r0.z
mul r0.y, r0.y, r7.x
movc r7.x, r1.w, r0.y, r7.x
dp3 r0.y, r9.yzwy, r9.yzwy
sqrt r0.z, r0.y
ne r1.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r9.yzw, r0.yyyy, r9.yyzw
dp3 r0.y, r3.xyzx, r9.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r9.x
add r2.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r2.w, r2.w, r3.w
mad r8.zw, r0.zzzz, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 1.000000, 2.000000)
log r0.y, r0.y
mul r0.y, r0.y, r8.z
exp r0.y, r0.y
mul r0.z, r0.y, r8.w
mad r0.y, -r8.w, r0.y, l(1.000000)
mad r0.y, r2.w, r0.y, r0.z
mul r0.y, r0.y, r9.x
movc r7.y, r1.w, r0.y, r9.x
dp3 r0.y, r10.yzwy, r10.yzwy
sqrt r0.z, r0.y
ne r1.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r9.xyz, r0.yyyy, r10.yzwy
dp3 r0.y, r3.xyzx, r9.xyzx
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r10.x
add r2.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r2.w, r2.w, r3.w
mad r8.zw, r0.zzzz, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 1.000000, 2.000000)
log r0.y, r0.y
mul r0.y, r0.y, r8.z
exp r0.y, r0.y
mul r0.z, r0.y, r8.w
mad r0.y, -r8.w, r0.y, l(1.000000)
mad r0.y, r2.w, r0.y, r0.z
mul r0.y, r0.y, r10.x
movc r7.z, r1.w, r0.y, r10.x
max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r7.xyz, r6.xyzx, r7.xyzx
mul r7.xyz, r8.yyyy, r7.xyzx
mad r4.xyz, r4.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r6.xyzx
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.y, l(0.000000), r24.x
if_nz r0.y
  add r6.xyz, r1.xyzx, -cb3[8].xyzx
  add r9.xyz, cb3[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r6.xyz, r9.xyzx, |r6.xyzx|
  or r0.y, r6.y, r6.x
  or r0.y, r6.z, r0.y
  dp3 r0.z, r1.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r0.z, r0.z, l(0.002000)
  frc r0.z, r0.z
  lt r0.z, l(0.500000), r0.z
  movc r1.xyz, r0.zzzz, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r2.xyz, r0.yyyy, r1.xyzx, r2.xyzx
endif 
mad r1.xyz, r26.xxxx, r4.xyzx, r7.xyzx
add o0.xyz, r2.xyzx, r1.xyzx
mul r1.xyz, v5.xyxx, l(0.00781250000, 0.00781250000, 0.00781250000, 0.000000)
frc r1.xyz, r1.xyzx
mad r1.xyz, r1.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000), l(-64.340622, -72.465622, -64.340622, 0.000000)
mul r1.xyz, r1.xyyx, r1.xyzx
dp3 r0.y, r1.xyzx, l(20.390625, 60.703125, 2.42812085, 0.000000)
frc r0.y, r0.y
add r0.y, r0.y, l(-0.500000)
mad o1.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mul o3.w, r0.y, l(0.00392156886)
min r0.x, r8.y, r0.x
max r0.x, r0.x, l(0.000000)
sqrt o7.xyzw, r0.xxxx
mov o0.w, l(0)
mov o1.w, cb3[11].x
mov o2.x, r8.x
mov o2.w, l(0.0666666701)
mov o2.y, r0.w
mov o3.xyz, r5.xyzx
mov o5.xyzw, l(0,0,0,0)
mov o6.yzw, cb3[19].zzzz
ret 
// Approximately 0 instruction slots used