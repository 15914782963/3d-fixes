// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 7dd98ad46d2ea527-vs.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:43:24 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz 
// ATTRIBUTE                1   xyz         1     NONE   float   xyz 
// ATTRIBUTE                2   xyzw        2     NONE   float   xyzw
// ATTRIBUTE                3   xyzw        3     NONE    uint   xyzw
// ATTRIBUTE               14   xyzw        4     NONE    uint   xyzw
// ATTRIBUTE                4   xyzw        5     NONE   float   xyzw
// ATTRIBUTE               15   xyzw        6     NONE   float   xyzw
// ATTRIBUTE                5   xy          7     NONE   float   xy  
// ATTRIBUTE                6   xy          8     NONE   float   xy  
// ATTRIBUTE                9   xyz         9     NONE   float   xyz 
// ATTRIBUTE               10   xyz        10     NONE   float   xyz 
// ATTRIBUTE               13   xyzw       11     NONE   float   xyzw
// SV_InstanceID            0   x          12   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyzw
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// COLOR                    0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x   
// VELOCITY_PREV_POS        0   xyzw        5     NONE   float   xyzw
// SV_POSITION              0   xyzw        6      POS   float   xyzw
// SV_ClipDistance          1   x           7  CLIPDST   float   x   
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} }
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[165], immediateIndexed
dcl_constantbuffer cb2[165], immediateIndexed
dcl_constantbuffer cb3[15], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_constantbuffer cb5[18], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_buffer (float,float,float,float) t1
dcl_resource_buffer (float,float,float,float) t2
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_input v7.xy
dcl_input v8.xy
dcl_input v9.xyz
dcl_input v10.xyz
dcl_input v11.xyzw
dcl_input_sgv v12.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xy
dcl_output o4.x
dcl_output o5.xyzw
dcl_output_siv o6.xyzw, position
dcl_output_siv o7.x, clip_distance
dcl_temps 47
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 2048
// Disables driver stereo correction:
dcl_constantbuffer cb12[4], immediateIndexed

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 7dd98ad46d2ea527-vs.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(0), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(0), l(16), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(0), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r26.xyzw, l(0), l(48), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r27.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r28.xyzw, l(0), l(1280), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r29.xyzw, l(0), l(1296), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r30.xyzw, l(0), l(1312), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r31.xyzw, l(0), l(1328), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r32.xyzw, l(0), l(1632), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r33.xyzw, l(1), l(16), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r34.xyzw, l(1), l(64), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r35.xyzw, l(1), l(576), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 7dd98ad46d2ea527-vs.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r36.xyzw, l(0), l(0), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r37.xyzw, l(0), l(16), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r38.xyzw, l(0), l(32), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r39.xyzw, l(0), l(48), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r40.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r41.xyzw, l(0), l(1280), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r42.xyzw, l(0), l(1296), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r43.xyzw, l(0), l(1312), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r44.xyzw, l(0), l(1328), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r45.xyzw, l(0), l(1632), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r46.xyzw, l(1), l(576), t102.xyzw

and r0.x, v12.x, l(1)
if_z r0.x
  mov r1.x, r23.x
  mov r1.y, r24.x
  mov r1.z, r25.x
  mov r1.w, r26.x
  mov r2.x, r23.y
  mov r2.y, r24.y
  mov r2.z, r25.y
  mov r2.w, r26.y
  mov r3.x, r23.z
  mov r3.y, r24.z
  mov r3.z, r25.z
  mov r3.w, r26.z
  mov r4.x, r23.w
  mov r4.y, r24.w
  mov r4.z, r25.w
  mov r4.w, r26.w
  mov r5.x, r28.x
  mov r5.y, r29.x
  mov r5.z, r30.x
  mov r5.w, r31.x
  mov r6.x, r28.y
  mov r6.y, r29.y
  mov r6.z, r30.y
  mov r6.w, r31.y
  mov r7.x, r28.w
  mov r7.y, r29.w
  mov r7.z, r30.w
  mov r7.w, r31.w
  mov r0.yzw, r32.xxyz
  mov r8.x, r35.y
  mov r8.yzw, r27.xxyz
else 
  mov r1.x, r36.x
  mov r1.y, r37.x
  mov r1.z, r38.x
  mov r1.w, r39.x
  mov r2.x, r36.y
  mov r2.y, r37.y
  mov r2.z, r38.y
  mov r2.w, r39.y
  mov r3.x, r36.z
  mov r3.y, r37.z
  mov r3.z, r38.z
  mov r3.w, r39.z
  mov r4.x, r36.w
  mov r4.y, r37.w
  mov r4.z, r38.w
  mov r4.w, r39.w
  mov r5.x, r41.x
  mov r5.y, r42.x
  mov r5.z, r43.x
  mov r5.w, r44.x
  mov r6.x, r41.y
  mov r6.y, r42.y
  mov r6.z, r43.y
  mov r6.w, r44.y
  mov r7.x, r41.w
  mov r7.y, r42.w
  mov r7.z, r43.w
  mov r7.w, r44.w
  mov r0.yzw, r45.xxyz
  mov r8.x, r46.y
  mov r8.yzw, r40.xxyz
endif 
mad r9.xyz, v0.xyzx, cb0[8].xyzx, cb0[7].xyzx
imul null, r10.xyzw, v3.xyzw, l(3, 3, 3, 3)
ld_indexable(buffer)(float,float,float,float) r11.xyzw, r10.xxxx, t1.xyzw
imad r12.xyzw, v3.xxyy, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r13.xyzw, r12.xxxx, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r14.xyzw, r12.yyyy, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r15.xyzw, r10.yyyy, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r16.xyzw, r12.zzzz, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r17.xyzw, r12.wwww, t1.xyzw
mul r15.xyzw, r15.xyzw, v5.yyyy
mul r16.xyzw, r16.xyzw, v5.yyyy
mul r17.xyzw, r17.xyzw, v5.yyyy
mad r11.xyzw, v5.xxxx, r11.xyzw, r15.xyzw
mad r13.xyzw, v5.xxxx, r13.xyzw, r16.xyzw
mad r14.xyzw, v5.xxxx, r14.xyzw, r17.xyzw
ld_indexable(buffer)(float,float,float,float) r15.xyzw, r10.zzzz, t1.xyzw
imad r16.xyzw, v3.zzww, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r17.xyzw, r16.xxxx, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r18.xyzw, r16.yyyy, t1.xyzw
mad r11.xyzw, v5.zzzz, r15.xyzw, r11.xyzw
mad r13.xyzw, v5.zzzz, r17.xyzw, r13.xyzw
mad r14.xyzw, v5.zzzz, r18.xyzw, r14.xyzw
ld_indexable(buffer)(float,float,float,float) r15.xyzw, r10.wwww, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r17.xyzw, r16.zzzz, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r18.xyzw, r16.wwww, t1.xyzw
mad r11.xyzw, v5.wwww, r15.xyzw, r11.xyzw
mad r13.xyzw, v5.wwww, r17.xyzw, r13.xyzw
mad r14.xyzw, v5.wwww, r18.xyzw, r14.xyzw
imul null, r15.xyzw, v4.xyzw, l(3, 3, 3, 3)
ld_indexable(buffer)(float,float,float,float) r17.xyzw, r15.xxxx, t1.xyzw
imad r18.xyzw, v4.xxyy, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r19.xyzw, r18.xxxx, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r20.xyzw, r18.yyyy, t1.xyzw
mad r11.xyzw, v6.xxxx, r17.xyzw, r11.xyzw
mad r13.xyzw, v6.xxxx, r19.xyzw, r13.xyzw
mad r14.xyzw, v6.xxxx, r20.xyzw, r14.xyzw
ld_indexable(buffer)(float,float,float,float) r17.xyzw, r15.yyyy, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r19.xyzw, r18.zzzz, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r20.xyzw, r18.wwww, t1.xyzw
mad r11.xyzw, v6.yyyy, r17.xyzw, r11.xyzw
mad r13.xyzw, v6.yyyy, r19.xyzw, r13.xyzw
mad r14.xyzw, v6.yyyy, r20.xyzw, r14.xyzw
ld_indexable(buffer)(float,float,float,float) r17.xyzw, r15.zzzz, t1.xyzw
imad r19.xyzw, v4.zzww, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r20.xyzw, r19.xxxx, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r21.xyzw, r19.yyyy, t1.xyzw
mad r11.xyzw, v6.zzzz, r17.xyzw, r11.xyzw
mad r13.xyzw, v6.zzzz, r20.xyzw, r13.xyzw
mad r14.xyzw, v6.zzzz, r21.xyzw, r14.xyzw
ld_indexable(buffer)(float,float,float,float) r17.xyzw, r15.wwww, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r20.xyzw, r19.zzzz, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r21.xyzw, r19.wwww, t1.xyzw
mad r11.xyzw, v6.wwww, r17.xyzw, r11.xyzw
mad r13.xyzw, v6.wwww, r20.xyzw, r13.xyzw
mad r14.xyzw, v6.wwww, r21.xyzw, r14.xyzw
mad r17.xyz, v1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r20.xyz, v2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), v10.xyzx
add r20.xyz, r20.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r9.w, r20.xyzx, r20.xyzx
rsq r9.w, r9.w
mul r20.xyz, r9.wwww, r20.xyzx
dp3 r9.w, r17.xyzx, r20.xyzx
mad r17.xyz, -r9.wwww, r20.xyzx, r17.xyzx
dp3 r9.w, r17.xyzx, r17.xyzx
rsq r9.w, r9.w
mul r17.xyz, r9.wwww, r17.xyzx
dp3 r9.w, r11.xyzx, r17.xyzx
dp3 r17.w, r13.xyzx, r17.xyzx
dp3 r17.x, r14.xyzx, r17.xyzx
dp3 r17.y, r11.xyzx, r20.xyzx
dp3 r17.z, r13.xyzx, r20.xyzx
dp3 r20.x, r14.xyzx, r20.xyzx
add r21.xyz, r9.xyzx, v9.xyzx
mov r21.w, l(1.000000)
dp4 r9.x, r11.xyzw, r21.xyzw
dp4 r9.y, r13.xyzw, r21.xyzw
dp4 r9.z, r14.xyzw, r21.xyzw
mul r20.yzw, r9.yyyy, cb3[1].xxyz
mad r20.yzw, cb3[0].xxyz, r9.xxxx, r20.yyzw
mad r9.xyz, cb3[2].xyzx, r9.zzzz, r20.yzwy
add r20.yzw, r8.yyzw, cb3[3].xxyz
add r9.xyz, r9.xyzx, r20.yzwy
mul r20.yzw, r17.zzzz, cb3[1].xxyz
mad r20.yzw, r17.yyyy, cb3[0].xxyz, r20.yyzw
mad r20.yzw, r20.xxxx, cb3[2].xxyz, r20.yyzw
max r8.w, |v11.x|, l(0.000001)
log r8.w, r8.w
mul r8.w, r8.w, cb5[15].w
exp r8.w, r8.w
mul r20.yzw, r8.wwww, r20.yyzw
add r8.w, cb4[0].y, cb5[16].x
add r8.yz, -r8.yyzy, r9.xxyx
div r8.yz, r8.yyzy, cb5[16].yyyy
add r8.yz, r8.yyzy, v8.xxyx
mul r8.yz, r8.yyzy, cb5[16].zzzz
mad r8.yz, r34.zzzz, r8.wwww, r8.yyzy
sample_l_indexable(texture2d)(float,float,float,float) r22.xyz, r8.yzyy, t0.xyzw, s0, l(0.000000)
add r8.y, cb5[16].w, -cb5[17].x
mad r8.y, cb4[0].y, r8.y, cb5[17].x
mul r22.xyz, r8.yyyy, r22.xyzx
mad r22.xyz, r20.yzwy, r22.xyzx, r9.xyzx
mov r22.w, l(1.000000)
dp4 r1.x, r22.xyzw, r1.xyzw
dp4 r1.y, r22.xyzw, r2.xyzw
dp4 r1.z, r22.xyzw, r3.xyzw
dp4 r1.w, r22.xyzw, r4.xyzw
if_nz cb0[0].x
  mov r2.x, icb[r0.x + 0].x
  mov r2.y, l(1.000000)
  dp2 o7.x, r1.xwxx, r2.xyxx
  mul r2.x, r8.x, l(0.500000)
  mul r2.y, r1.w, icb[r0.x + 0].x
  mad r2.z, -r8.x, l(0.500000), l(1.000000)
  mul r2.y, r2.z, r2.y
  mad r1.x, r1.x, r2.x, r2.y
else 
  mov o7.x, l(0)
endif 
mul r2.xyz, cb3[0].xyzx, cb3[14].xxxx
mul r3.xyz, cb3[1].xyzx, cb3[14].yyyy
mul r4.xyz, cb3[2].xyzx, cb3[14].zzzz
mul r9.xyz, r3.xyzx, r17.wwww
mad r9.xyz, r9.wwww, r2.xyzx, r9.xyzx
mad o0.xyz, r17.xxxx, r4.xyzx, r9.xyzx
mul r3.xyz, r3.xyzx, r17.zzzz
mad r2.xyz, r17.yyyy, r2.xyzx, r3.xyzx
mad o1.xyz, r20.xxxx, r4.xyzx, r2.xyzx
mad r2.x, v2.w, l(2.000000), l(-1.000000)
mul o1.w, r2.x, cb3[9].w
movc r2.x, cb0[0].x, l(1), l(0)
imad o4.x, r2.x, l(0x80000000), r0.x
add r2.xyw, r0.yzyw, cb0[6].xyxz
if_nz cb0[8].w
  ld_indexable(buffer)(float,float,float,float) r3.xyzw, r10.xxxx, t2.xyzw
  ld_indexable(buffer)(float,float,float,float) r4.xyzw, r12.xxxx, t2.xyzw
  ld_indexable(buffer)(float,float,float,float) r9.xyzw, r12.yyyy, t2.xyzw
  ld_indexable(buffer)(float,float,float,float) r17.xyzw, r10.yyyy, t2.xyzw
  ld_indexable(buffer)(float,float,float,float) r22.xyzw, r12.zzzz, t2.xyzw
  ld_indexable(buffer)(float,float,float,float) r12.xyzw, r12.wwww, t2.xyzw
  mul r17.xyzw, r17.xyzw, v5.yyyy
  mul r22.xyzw, r22.xyzw, v5.yyyy
  mul r12.xyzw, r12.xyzw, v5.yyyy
  mad r3.xyzw, v5.xxxx, r3.xyzw, r17.xyzw
  mad r4.xyzw, v5.xxxx, r4.xyzw, r22.xyzw
  mad r9.xyzw, v5.xxxx, r9.xyzw, r12.xyzw
  ld_indexable(buffer)(float,float,float,float) r12.xyzw, r10.zzzz, t2.xyzw
  ld_indexable(buffer)(float,float,float,float) r17.xyzw, r16.xxxx, t2.xyzw
  ld_indexable(buffer)(float,float,float,float) r22.xyzw, r16.yyyy, t2.xyzw
  mad r3.xyzw, v5.zzzz, r12.xyzw, r3.xyzw
  mad r4.xyzw, v5.zzzz, r17.xyzw, r4.xyzw
  mad r9.xyzw, v5.zzzz, r22.xyzw, r9.xyzw
  ld_indexable(buffer)(float,float,float,float) r10.xyzw, r10.wwww, t2.xyzw
  ld_indexable(buffer)(float,float,float,float) r12.xyzw, r16.zzzz, t2.xyzw
  ld_indexable(buffer)(float,float,float,float) r16.xyzw, r16.wwww, t2.xyzw
  mad r3.xyzw, v5.wwww, r10.xyzw, r3.xyzw
  mad r4.xyzw, v5.wwww, r12.xyzw, r4.xyzw
  mad r9.xyzw, v5.wwww, r16.xyzw, r9.xyzw
  ld_indexable(buffer)(float,float,float,float) r10.xyzw, r15.xxxx, t2.xyzw
  ld_indexable(buffer)(float,float,float,float) r12.xyzw, r18.xxxx, t2.xyzw
  ld_indexable(buffer)(float,float,float,float) r16.xyzw, r18.yyyy, t2.xyzw
  mad r3.xyzw, v6.xxxx, r10.xyzw, r3.xyzw
  mad r4.xyzw, v6.xxxx, r12.xyzw, r4.xyzw
  mad r9.xyzw, v6.xxxx, r16.xyzw, r9.xyzw
  ld_indexable(buffer)(float,float,float,float) r10.xyzw, r15.yyyy, t2.xyzw
  ld_indexable(buffer)(float,float,float,float) r12.xyzw, r18.zzzz, t2.xyzw
  ld_indexable(buffer)(float,float,float,float) r16.xyzw, r18.wwww, t2.xyzw
  mad r3.xyzw, v6.yyyy, r10.xyzw, r3.xyzw
  mad r4.xyzw, v6.yyyy, r12.xyzw, r4.xyzw
  mad r9.xyzw, v6.yyyy, r16.xyzw, r9.xyzw
  ld_indexable(buffer)(float,float,float,float) r10.xyzw, r15.zzzz, t2.xyzw
  ld_indexable(buffer)(float,float,float,float) r12.xyzw, r19.xxxx, t2.xyzw
  ld_indexable(buffer)(float,float,float,float) r16.xyzw, r19.yyyy, t2.xyzw
  mad r3.xyzw, v6.zzzz, r10.xyzw, r3.xyzw
  mad r4.xyzw, v6.zzzz, r12.xyzw, r4.xyzw
  mad r9.xyzw, v6.zzzz, r16.xyzw, r9.xyzw
  ld_indexable(buffer)(float,float,float,float) r10.xyzw, r15.wwww, t2.xyzw
  ld_indexable(buffer)(float,float,float,float) r12.xyzw, r19.zzzz, t2.xyzw
  ld_indexable(buffer)(float,float,float,float) r15.xyzw, r19.wwww, t2.xyzw
  mad r11.xyzw, v6.wwww, r10.xyzw, r3.xyzw
  mad r13.xyzw, v6.wwww, r12.xyzw, r4.xyzw
  mad r14.xyzw, v6.wwww, r15.xyzw, r9.xyzw
endif 
dp4 r3.x, r11.xyzw, r21.xyzw
dp4 r3.y, r13.xyzw, r21.xyzw
dp4 r3.z, r14.xyzw, r21.xyzw
mov r3.w, l(1.000000)
mov r4.x, cb0[3].x
mov r4.y, cb0[4].x
mov r4.z, cb0[5].x
mov r4.w, r2.x
dp4 r4.x, r3.xyzw, r4.xyzw
mov r9.x, cb0[3].y
mov r9.y, cb0[4].y
mov r9.z, cb0[5].y
mov r9.w, r2.y
dp4 r4.y, r3.xyzw, r9.xyzw
mov r2.x, cb0[3].z
mov r2.y, cb0[4].z
mov r2.z, cb0[5].z
dp4 r4.z, r3.xyzw, r2.xyzw
add r0.xy, -r0.yzyy, r4.xyxx
div r0.xy, r0.xyxx, cb5[16].yyyy
add r0.xy, r0.xyxx, v8.xyxx
mul r0.xy, r0.xyxx, cb5[16].zzzz
mad r0.xy, r33.zzzz, r8.wwww, r0.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t0.xyzw, s0, l(0.000000)
mul r0.xyz, r8.yyyy, r0.xyzx
mad r0.xyz, r20.yzwy, r0.xyzx, r4.xyzx
mov r0.w, l(1.000000)
dp4 o5.x, r0.xyzw, r5.xyzw
dp4 o5.y, r0.xyzw, r6.xyzw
dp4 o5.w, r0.xyzw, r7.xyzw
add o5.z, -cb0[9].x, l(1.000000)
mov o0.w, l(0)
mov o2.xyzw, v11.xyzw
mov o6.xyzw, r1.xyzw
mov o3.xy, v7.xyxx
ret 
// Approximately 0 instruction slots used