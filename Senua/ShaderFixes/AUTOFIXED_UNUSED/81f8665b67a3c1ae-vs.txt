// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i -f --only-autofixed --disable-driver-stereo-cb 12 81f8665b67a3c1ae-vs.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:42:32 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyzw
// SV_InstanceID            0   x           1   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 4     zw        0     NONE   float     zw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x   
// VELOCITY_PREV_POS        0   xyzw        5     NONE   float   xyzw
// SV_POSITION              0   xyzw        6      POS   float   xyzw
// SV_ClipDistance          1   x           7  CLIPDST   float   x   
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} }
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[165], immediateIndexed
dcl_constantbuffer cb2[165], immediateIndexed
dcl_constantbuffer cb3[20], immediateIndexed
dcl_constantbuffer cb4[6], immediateIndexed
dcl_constantbuffer cb5[18], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input v0.xyzw
dcl_input_sgv v1.x, instance_id
dcl_output o0.xy
dcl_output o0.zw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.x
dcl_output o5.xyzw
dcl_output_siv o6.xyzw, position
dcl_output_siv o7.x, clip_distance
dcl_temps 37
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 2048
// Disables driver stereo correction:
dcl_constantbuffer cb12[4], immediateIndexed

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i -f --only-autofixed --disable-driver-stereo-cb 12 81f8665b67a3c1ae-vs.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(16), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(48), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(1280), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(1296), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(0), l(1312), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(0), l(1328), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(0), l(1632), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(1), l(576), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i -f --only-autofixed --disable-driver-stereo-cb 12 81f8665b67a3c1ae-vs.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r26.xyzw, l(0), l(0), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r27.xyzw, l(0), l(16), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r28.xyzw, l(0), l(32), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r29.xyzw, l(0), l(48), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r30.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r31.xyzw, l(0), l(1280), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r32.xyzw, l(0), l(1296), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r33.xyzw, l(0), l(1312), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r34.xyzw, l(0), l(1328), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r35.xyzw, l(0), l(1632), t102.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r36.xyzw, l(1), l(576), t102.xyzw

and r0.x, v1.x, l(1)
if_z r0.x
  mov r1.x, r15.x
  mov r1.y, r16.x
  mov r1.z, r17.x
  mov r1.w, r18.x
  mov r2.x, r15.y
  mov r2.y, r16.y
  mov r2.z, r17.y
  mov r2.w, r18.y
  mov r3.x, r15.z
  mov r3.y, r16.z
  mov r3.z, r17.z
  mov r3.w, r18.z
  mov r4.x, r15.w
  mov r4.y, r16.w
  mov r4.z, r17.w
  mov r4.w, r18.w
  mov r5.x, r20.x
  mov r5.y, r21.x
  mov r5.z, r22.x
  mov r5.w, r23.x
  mov r6.x, r20.y
  mov r6.y, r21.y
  mov r6.z, r22.y
  mov r6.w, r23.y
  mov r7.x, r20.w
  mov r7.y, r21.w
  mov r7.z, r22.w
  mov r7.w, r23.w
  mov r0.yzw, r24.xxyz
  mov r8.x, r25.y
  mov r8.yzw, r19.xxyz
else 
  mov r1.x, r26.x
  mov r1.y, r27.x
  mov r1.z, r28.x
  mov r1.w, r29.x
  mov r2.x, r26.y
  mov r2.y, r27.y
  mov r2.z, r28.y
  mov r2.w, r29.y
  mov r3.x, r26.z
  mov r3.y, r27.z
  mov r3.z, r28.z
  mov r3.w, r29.z
  mov r4.x, r26.w
  mov r4.y, r27.w
  mov r4.z, r28.w
  mov r4.w, r29.w
  mov r5.x, r31.x
  mov r5.y, r32.x
  mov r5.z, r33.x
  mov r5.w, r34.x
  mov r6.x, r31.y
  mov r6.y, r32.y
  mov r6.z, r33.y
  mov r6.w, r34.y
  mov r7.x, r31.w
  mov r7.y, r32.w
  mov r7.z, r33.w
  mov r7.w, r34.w
  mov r0.yzw, r35.xxyz
  mov r8.x, r36.y
  mov r8.yzw, r30.xxyz
endif 
mul r9.xy, v0.yxyy, cb0[4].wwww
mad r9.zw, -v0.xxxy, cb0[4].wwww, l(0.000000, 0.000000, 1.000000, 1.000000)
add r10.xyzw, r9.xyzw, r9.xyzw
lt r11.xy, l(0.500000, 0.500000, 0.000000, 0.000000), v0.wzww
mad r12.xyzw, -r9.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
mul r13.xyzw, r12.xyzw, cb0[9].xyzw
mad r13.xyzw, r10.xyzw, cb0[5].wwww, r13.xyzw
mul r14.xyzw, r12.xyzw, cb0[8].xyzw
mad r14.xyzw, r10.xyzw, cb0[5].zzzz, r14.xyzw
movc r13.xyzw, r11.yyyy, r13.xyzw, r14.xyzw
mul r14.xyzw, r12.xyzw, cb0[7].xyzw
mad r14.xyzw, r10.xyzw, cb0[5].yyyy, r14.xyzw
mul r12.xyzw, r12.xyzw, cb0[6].xyzw
mad r10.xyzw, r10.xyzw, cb0[5].xxxx, r12.xyzw
movc r10.xyzw, r11.yyyy, r14.xyzw, r10.xyzw
movc r10.xyzw, r11.xxxx, r13.xyzw, r10.xyzw
add r9.z, r9.x, r9.y
lt r9.z, l(1.000000), r9.z
lt r9.x, r9.y, r9.x
movc r9.xy, r9.xxxx, r10.wyww, r10.zxzz
movc r9.x, r9.z, r9.x, r9.y
round_ni r9.y, r9.x
frc r9.x, r9.x
add r9.z, r9.y, -cb0[4].x
exp r9.z, -r9.z
mul r9.zw, r9.zzzz, v0.xxxy
round_ni r9.zw, r9.zzzw
exp r10.x, -r9.y
mul r10.y, r10.x, cb4[3].x
mad r11.x, cb4[3].x, r10.x, l(-1.000000)
mul r10.x, r10.y, l(0.500000)
max r10.x, r10.x, l(2.000000)
add r11.y, r10.x, l(-1.000000)
mul r10.xy, r11.xyxx, cb4[3].yyyy
div r11.xy, r9.zwzz, r10.xxxx
mul r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
round_ni r9.zw, r9.zzzw
div r10.xy, r9.zwzz, r10.yyyy
mad r9.zw, r11.xxxy, cb4[0].xxxy, cb4[0].zzzw
mad r9.zw, cb4[0].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000), r9.zzzw
mul r12.xy, v0.zwzz, cb4[4].wwww
mad r9.zw, v0.zzzw, cb4[4].xxxy, r9.zzzw
add r9.y, r9.y, -cb0[3].z
sample_l_indexable(texture2d)(float,float,float,float) r9.zw, r9.zwzz, t0.zwxy, s0, r9.y
dp2 r9.z, r9.zwzz, l(65280.000000, 255.000000, 0.000000, 0.000000)
add r9.yz, r9.yyzy, l(0.000000, 1.000000, -32768.000000, 0.000000)
mul r11.z, r9.z, l(0.00781250000)
mad r9.zw, r10.xxxy, cb4[0].xxxy, cb4[0].zzzw
mad r9.zw, cb4[0].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000), r9.zzzw
mad r9.zw, v0.zzzw, cb4[4].xxxy, r9.zzzw
sample_l_indexable(texture2d)(float,float,float,float) r9.yz, r9.zwzz, t0.zxyw, s0, r9.y
dp2 r9.y, r9.yzyy, l(65280.000000, 255.000000, 0.000000, 0.000000)
add r9.y, r9.y, l(-32768.000000)
mul r10.z, r9.y, l(0.00781250000)
add r9.yzw, r10.xxyz, -r11.xxyz
mad r9.xyz, r9.xxxx, r9.yzwy, r11.xyzx
mov r12.zw, l(0,0,0,1.000000)
add r10.xyz, r9.xyzx, r12.xyzx
mul r11.xyz, r10.yyyy, cb3[1].xyzx
mad r11.xyz, cb3[0].xyzx, r10.xxxx, r11.xyzx
mad r11.xyz, cb3[2].xyzx, r10.zzzz, r11.xyzx
add r8.yzw, r8.yyzw, cb3[3].xxyz
add r12.xyz, r8.yzwy, r11.xyzx
add r8.yz, r9.xxyx, cb4[3].zzwz
mad r8.yz, v0.zzwz, cb4[4].wwww, r8.yyzy
dp4 r1.x, r12.xyzw, r1.xyzw
dp4 r1.y, r12.xyzw, r2.xyzw
dp4 r1.z, r12.xyzw, r3.xyzw
dp4 r1.w, r12.xyzw, r4.xyzw
if_nz cb0[0].x
  mov r2.x, icb[r0.x + 0].x
  mov r2.y, l(1.000000)
  dp2 o7.x, r1.xwxx, r2.xyxx
  mul r2.x, r8.x, l(0.500000)
  mul r2.y, r1.w, icb[r0.x + 0].x
  mad r2.z, -r8.x, l(0.500000), l(1.000000)
  mul r2.y, r2.z, r2.y
  mad r1.x, r1.x, r2.x, r2.y
else 
  mov o7.x, l(0)
endif 
mad r2.xy, r9.xyxx, cb4[1].xyxx, cb4[1].zwzz
mad o1.xy, v0.zwzz, cb4[4].zzzz, r2.xyxx
mad r2.xy, r9.xyxx, cb4[0].xyxx, cb4[0].zwzz
mad r2.xy, cb4[0].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), r2.xyxx
mad o1.zw, v0.zzzw, cb4[4].xxxy, r2.xxxy
mad r2.xy, r9.xyxx, cb4[2].xyxx, cb4[2].wzww
mad r2.xy, v0.zwzz, cb4[5].xyxx, r2.xyxx
mad o3.zw, r2.xxxy, cb5[17].xxxy, cb5[17].zzzw
dp2 r2.z, cb3[18].xyxx, r10.xyxx
dp2 r2.w, cb3[18].zwzz, r10.xyxx
add o0.zw, r2.zzzw, cb3[19].xxxy
movc r2.x, cb0[0].x, l(1), l(0)
imad o4.x, r2.x, l(0x80000000), r0.x
add r0.xyz, r0.yzwy, cb3[3].xyzx
add r0.xyz, r0.xyzx, r11.xyzx
mov r0.w, l(1.000000)
dp4 o5.x, r0.xyzw, r5.xyzw
dp4 o5.y, r0.xyzw, r6.xyzw
dp4 o5.w, r0.xyzw, r7.xyzw
add o5.z, -cb0[14].x, l(1.000000)
mov o0.xy, r8.yzyy
mov o2.xz, r8.yyzy
mov o2.yw, r9.zzzz
mov o3.xy, l(0,0,0,0)
mov o6.xyzw, r1.xyzw
ret 
// Approximately 0 instruction slots used