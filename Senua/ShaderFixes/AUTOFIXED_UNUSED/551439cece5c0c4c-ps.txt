// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 551439cece5c0c4c-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:42:26 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz 
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// COLOR                    0   xyzw        2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float     zw
// PACKED_EYE_INDEX         0   x           5     NONE    uint   x   
// VELOCITY_PREV_POS        0   xyzw        6     NONE   float   xyzw
// TEXCOORD                 9   xyz         7     NONE   float   xyz 
// SV_Position              0   xyzw        8      POS   float   xyzw
// SV_IsFrontFace           0   x           9    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
// SV_Target                5   xyzw        5   TARGET   float   xyzw
// SV_Target                6   xyzw        6   TARGET   float   xyzw
// SV_Target                7   xyzw        7   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[135], immediateIndexed
dcl_constantbuffer cb2[123], immediateIndexed
dcl_constantbuffer cb3[12], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_constantbuffer cb6[15], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture3d (float,float,float,float) t12
dcl_resource_texture3d (float,float,float,float) t13
dcl_resource_texture3d (float,float,float,float) t14
dcl_resource_texture3d (float,float,float,float) t15
dcl_resource_texture3d (float,float,float,float) t16
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.zw
dcl_input_ps constant v5.x
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyz
dcl_input_ps_siv linear noperspective v8.xyzw, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 35
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 1968

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 551439cece5c0c4c-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r11.xyzw, l(0), l(416), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(592), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(624), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(992), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(1936), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(1952), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(2016), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(2032), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(1), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(1), l(16), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(1), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(1), l(96), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i --only-autofixed --disable-driver-stereo-cb 12 551439cece5c0c4c-ps.txt
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r26.xyzw, l(0), l(416), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r27.xyzw, l(0), l(576), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r28.xyzw, l(0), l(592), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r29.xyzw, l(0), l(608), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r30.xyzw, l(0), l(624), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r31.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r32.xyzw, l(0), l(992), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r33.xyzw, l(0), l(1936), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r34.xyzw, l(0), l(1952), t102.xyzw

and r0.x, v5.x, l(1)
if_z r0.x
  mov r0.x, r12.x
  mov r0.y, r13.x
  mov r0.z, r14.x
  mov r0.w, r15.x
  mov r1.x, r12.y
  mov r1.y, r13.y
  mov r1.z, r14.y
  mov r1.w, r15.y
  mov r2.x, r12.z
  mov r2.y, r13.z
  mov r2.z, r14.z
  mov r2.w, r15.z
  mov r3.x, r12.w
  mov r3.y, r13.w
  mov r3.z, r14.w
  mov r3.w, r15.w
  mov r4.xy, r18.xyxx
  mov r4.zw, r19.zzzw
  mov r5.xyz, r16.xyzx
  mov r6.xy, r11.xyxx
  mov r6.zw, r17.xxxy
else 
  mov r0.x, r27.x
  mov r0.y, r28.x
  mov r0.z, r29.x
  mov r0.w, r30.x
  mov r1.x, r27.y
  mov r1.y, r28.y
  mov r1.z, r29.y
  mov r1.w, r30.y
  mov r2.x, r27.z
  mov r2.y, r28.z
  mov r2.z, r29.z
  mov r2.w, r30.z
  mov r3.x, r27.w
  mov r3.y, r28.w
  mov r3.z, r29.w
  mov r3.w, r30.w
  mov r4.xy, r33.xyxx
  mov r4.zw, r34.zzzw
  mov r5.xyz, r31.xyzx
  mov r6.xy, r26.xyxx
  mov r6.zw, r32.xxxy
endif 
mul r7.xyz, v0.yzxy, v1.zxyz
mad r7.xyz, v1.yzxy, v0.zxyz, -r7.xyzx
mul r7.xyz, r7.xyzx, v1.wwww
add r4.xy, -r4.xyxx, v8.xyxx
mad r4.xy, r4.xyxx, r4.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, v8.wwww
mov r4.z, v8.w
mul r4.xyz, r4.xyzx, l(2.000000, -2.000000, 1.000000, 0.000000)
mov r8.xyz, v8.xyzx
mov r8.w, l(1.000000)
dp4 r0.x, r8.xyzw, r0.xyzw
dp4 r0.y, r8.xyzw, r1.xyzw
dp4 r0.z, r8.xyzw, r2.xyzw
dp4 r0.w, r8.xyzw, r3.xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r1.xyz, -r5.xyzx, r0.xyzx
add r2.xyz, -r5.xyzx, v7.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xy, v3.xyxx, t1.xyzw, s1
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r3.xyxx, r3.xyxx
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
sqrt r3.z, r0.w
mul r5.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mov r5.z, l(0)
dp3 r0.w, cb3[0].xyzx, cb3[0].xyzx
sqrt r0.w, r0.w
mul r8.xyzw, r0.wwww, cb6[11].xxyy
mul r8.xyzw, r8.xyzw, v3.xyxy
sample_indexable(texture2d)(float,float,float,float) r9.xy, r8.xyxx, t2.xyzw, s1
mad r9.xy, r9.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r9.xyxx, r9.xyxx
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
sqrt r9.z, r0.w
add r5.xyz, r5.xyzx, r9.xyzx
sample_indexable(texture2d)(float,float,float,float) r9.xy, r8.zwzz, t3.xyzw, s1
mad r9.xy, r9.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r9.xy, r9.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mov r9.z, l(0)
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 1.000000, 0.000000), r9.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, r8.zwzz, t4.yzwx, s1
mad r9.xy, v2.yxyy, cb6[11].wwww, -r0.wwww
div_sat r9.xy, r9.xyxx, cb6[11].zzzz
add r3.xyz, -r5.xyzx, r3.xyzx
mad r3.xyz, r9.xxxx, r3.xyzx, r5.xyzx
mad r3.xyz, r3.xyzx, r22.wwww, r22.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
mul r5.xyz, r7.xyzx, r3.yyyy
mad r3.xyw, r3.xxxx, v0.xyxz, r5.xyxz
mad r3.xyz, r3.zzzz, v1.xyzx, r3.xywx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r8.xyxx, t5.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r7.xyz, r8.zwzz, t6.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r10.xyz, v3.xyxx, t7.xyzw, s1
add_sat r0.w, r10.x, r10.x
mul r7.xyz, r0.wwww, r7.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, r8.zwzz, t8.yzwx, s1
mul_sat r1.w, r0.w, cb6[12].x
mad r10.xyz, r1.wwww, r10.xyzx, -r7.xyzx
mad r7.xyz, r9.yyyy, r10.xyzx, r7.xyzx
mul r10.xyz, r7.xyzx, cb6[6].xyzx
div r2.xyz, r2.xyzx, cb6[10].xyzx
sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t9.yzwx, s1
sample_indexable(texture2d)(float,float,float,float) r2.z, r2.yzyy, t9.yzxw, s1
mad_sat r8.xy, |v1.xzxx|, l(3.000000, 3.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
add r2.z, -r1.w, r2.z
mad r1.w, r8.x, r2.z, r1.w
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t9.xyzw, s1
add r2.x, -r1.w, r2.x
mad r1.w, r8.y, r2.x, r1.w
mad r1.w, v2.z, cb6[12].z, -r1.w
div_sat r1.w, r1.w, cb6[12].y
mad r2.xyz, -r7.xyzx, cb6[6].xyzx, r7.xyzx
mad r2.xyz, r1.wwww, r2.xyzx, r10.xyzx
add r2.xyz, -r5.xyzx, r2.xyzx
mad r2.xyz, r9.xxxx, r2.xyzx, r5.xyzx
mad r2.xyz, -cb5[0].xxxx, cb6[12].wwww, r2.xyzx
mul_sat r2.xyz, r2.xyzx, cb6[13].xxxx
mul_sat r2.xyz, r2.xyzx, cb6[3].xyzx
sample_indexable(texture2d)(float,float,float,float) r2.w, r8.zwzz, t10.yzwx, s1
sample_indexable(texture2d)(float,float,float,float) r5.xy, v3.xyxx, t11.zxyw, s1
mul_sat r0.w, r0.w, cb6[13].z
mad r0.w, r0.w, r5.y, -r5.y
mad r0.w, r5.x, r0.w, r5.y
add r0.w, -r2.w, r0.w
mad r0.w, r9.y, r0.w, r2.w
mul r2.w, r0.w, cb6[13].w
mad r0.w, -r0.w, cb6[13].w, r0.w
mad r0.w, r1.w, r0.w, r2.w
add r0.w, -r5.w, r0.w
mad r0.w, r9.x, r0.w, r5.w
mad_sat r0.w, -cb5[0].x, cb6[14].x, r0.w
ne r1.w, cb0[3].x, l(0.000000)
lt r2.w, l(0.001000), |cb0[3].x|
and r1.w, r1.w, r2.w
round_ni r5.yz, v8.xxyx
dp2 r2.w, r5.yzyy, l(347.834503, 3343.283691, 0.000000, 0.000000)
sincos null, r2.w, r2.w
mul r2.w, r2.w, l(1000.000000)
frc r2.w, r2.w
lt r3.w, cb0[3].x, l(0.000000)
add r4.w, cb0[3].x, l(1.000000)
lt r4.w, r2.w, r4.w
lt r2.w, cb0[3].x, r2.w
movc r2.w, r3.w, r4.w, r2.w
ieq r2.w, r2.w, l(0)
and r1.w, r1.w, r2.w
discard_nz r1.w
mov_sat r1.w, cb6[13].y
mov_sat r5.x, r5.x
mad o2.z, r0.w, r23.y, r23.x
sample_indexable(texture2d)(float,float,float,float) r7.xyzw, v4.zwzz, t0.xyzw, s0
mad r8.xyzw, cb4[7].xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000), l(0.500000, 0.500000, 0.500000, 0.500000)
mad_sat r7.xyzw, r7.xyzw, cb4[7].xyzw, r8.xyzw
mul r7.xyzw, r7.xyzw, r7.xyzw
mul o6.xyzw, r7.xyzw, cb4[6].xyzw
div r4.xy, r4.xyxx, r4.zzzz
div r4.zw, v6.xxxy, v6.wwww
add r4.xyzw, -r6.xyzw, r4.xyzw
add r4.xy, -r4.zwzz, r4.xyxx
mad r4.xy, r4.xyxx, l(0.249500, 0.249500, 0.000000, 0.000000), l(0.499992371, 0.499992371, 0.000000, 0.000000)
mul o4.xy, r4.xyxx, v6.zzzz
mov o4.zw, l(0,0,0,0)
mul r0.w, r1.w, r21.w
mad r4.xyz, r2.xyzx, r20.wwww, r20.xyzx
mad r5.yzw, r0.wwww, l(0.000000, 0.080000, 0.080000, 0.080000), r21.xxyz
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
div r0.x, r0.x, cb0[33].w
log r0.x, r0.x
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(6.000000)
round_pi r0.x, r0.x
mul r0.yzw, r1.xxyz, cb0[30].xxyz
mad r6.xyz, r1.xyzx, cb0[30].xyzx, -cb0[31].xyzx
max r2.w, |r6.y|, |r6.x|
max r2.w, |r6.z|, r2.w
mul r2.w, r2.w, l(4.000000)
log r2.w, r2.w
max r2.w, r2.w, l(0.000000)
round_ni r2.w, r2.w
max r0.x, r0.x, r2.w
exp r2.w, r0.x
div r6.xyz, r0.yzwy, r2.wwww
frc r6.xyz, r6.xyzx
mul r0.x, r0.x, l(0.142857149)
mad r6.w, r6.z, l(0.142857149), r0.x
mul r7.xyz, cb0[32].xyzx, l(1.000000, 1.000000, 7.000000, 0.000000)
mul r6.xyz, r6.xywx, r7.xyzx
round_ni r6.xyz, r6.xyzx
add r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
div r6.xyz, r6.xyzx, r7.xyzx
sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r6.xyzx, t12.xyzw, s2, l(0.000000)
mul r6.xyzw, r6.xyzw, l(255.000000, 255.000000, 255.000000, 255.000000)
div r7.xyz, cb0[32].xyzx, r6.wwww
mul r0.xyz, r0.yzwy, r7.xyzx
frc r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(0.666666687, 0.666666687, 0.666666687, 0.000000), r6.xyzx
add r0.xyz, r0.xyzx, l(0.166666672, 0.166666672, 0.166666672, 0.000000)
mul r0.xyz, r0.xyzx, cb0[33].xyzx
sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r0.xyzx, t13.xyzw, s3, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r7.xyzw, r0.xyzx, t14.xyzw, s3, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r0.xyzx, t15.xyzw, s3, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r0.x, r0.xyzx, t16.yxzw, s3, l(0.000000)
dp3 r0.y, r6.yzwy, r6.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r6.yzw, r0.yyyy, r6.yyzw
dp3 r0.y, r3.xyzx, r6.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r6.x
add r2.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r2.w, r2.w, r3.w
mad r6.yz, r0.zzzz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r6.y
exp r0.y, r0.y
mul r0.z, r0.y, r6.z
mad r0.y, -r6.z, r0.y, l(1.000000)
mad r0.y, r2.w, r0.y, r0.z
mul r0.y, r0.y, r6.x
movc r6.x, r0.w, r0.y, r6.x
dp3 r0.y, r7.yzwy, r7.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r7.yzw, r0.yyyy, r7.yyzw
dp3 r0.y, r3.xyzx, r7.yzwy
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r7.x
add r2.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r2.w, r2.w, r3.w
mad r7.yz, r0.zzzz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 1.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r7.y
exp r0.y, r0.y
mul r0.z, r0.y, r7.z
mad r0.y, -r7.z, r0.y, l(1.000000)
mad r0.y, r2.w, r0.y, r0.z
mul r0.y, r0.y, r7.x
movc r6.y, r0.w, r0.y, r7.x
dp3 r0.y, r8.yzwy, r8.yzwy
sqrt r0.z, r0.y
ne r0.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r7.xyz, r0.yyyy, r8.yzwy
dp3 r0.y, r3.xyzx, r7.xyzx
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r8.x
add r2.w, -r0.z, l(1.000000)
add r3.w, r0.z, l(1.000000)
div r2.w, r2.w, r3.w
mad r7.xy, r0.zzzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(1.000000, 2.000000, 0.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r7.x
exp r0.y, r0.y
mul r0.z, r0.y, r7.y
mad r0.y, -r7.y, r0.y, l(1.000000)
mad r0.y, r2.w, r0.y, r0.z
mul r0.y, r0.y, r8.x
movc r6.z, r0.w, r0.y, r8.x
max r0.yzw, r6.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.yzw, r4.xxyz, r0.yyzw
mul r0.yzw, r5.xxxx, r0.yyzw
mad r4.xyz, r5.yzwy, l(0.450000, 0.450000, 0.450000, 0.000000), r4.xyzx
max r5.yzw, cb6[2].xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.w, l(0.000000), r24.x
if_nz r2.w
  add r6.xyz, r1.xyzx, -cb3[8].xyzx
  add r7.xyz, cb3[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r6.xyz, r7.xyzx, |r6.xyzx|
  or r2.w, r6.y, r6.x
  or r2.w, r6.z, r2.w
  dp3 r1.x, r1.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.x, r1.x, l(0.002000)
  frc r1.x, r1.x
  lt r1.x, l(0.500000), r1.x
  movc r1.xyz, r1.xxxx, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r5.yzw, r2.wwww, r1.xxyz, r5.yyzw
endif 
mad r0.yzw, r25.xxxx, r4.xxyz, r0.yyzw
add o0.xyz, r5.yzwy, r0.yzwy
mul r0.yzw, v8.xxyx, l(0.000000, 0.00781250000, 0.00781250000, 0.00781250000)
frc r0.yzw, r0.yyzw
mad r0.yzw, r0.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000), l(0.000000, -64.340622, -72.465622, -64.340622)
mul r0.yzw, r0.yyzz, r0.yyzw
dp3 r0.y, r0.yzwy, l(20.390625, 60.703125, 2.42812085, 0.000000)
frc r0.y, r0.y
add r0.y, r0.y, l(-0.500000)
mad o1.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mul o3.w, r0.y, l(0.00392156886)
min r0.x, r5.x, r0.x
max r0.x, r0.x, l(0.000000)
sqrt o7.xyzw, r0.xxxx
mov o0.w, l(0)
mov o1.w, cb3[11].x
mov o2.xw, l(0,0,0,0.0666666701)
mov o2.y, r1.w
mov o3.xyz, r2.xyzx
mov o5.xyzw, l(0,0,0,0)
ret 
// Approximately 0 instruction slots used