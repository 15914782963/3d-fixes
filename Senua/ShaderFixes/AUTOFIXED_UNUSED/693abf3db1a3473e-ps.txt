// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i -f --only-autofixed --disable-driver-stereo-cb 12 693abf3db1a3473e-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:42:26 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz 
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// COLOR                    0   xyzw        2     NONE   float   x   
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x   
// VELOCITY_PREV_POS        0   xyzw        5     NONE   float   xyzw
// SV_Position              0   xyzw        6      POS   float   xyzw
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
// SV_Target                5   xyzw        5   TARGET   float   xyzw
// SV_Target                6   xyzw        6   TARGET   float   xyzw
// SV_Target                7   xyzw        7   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[123], immediateIndexed
dcl_constantbuffer cb3[20], immediateIndexed
dcl_constantbuffer cb4[6], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.x
dcl_input_ps linear v3.xy
dcl_input_ps constant v4.x
dcl_input_ps linear v5.xyzw
dcl_input_ps_siv linear noperspective v6.xyzw, position
dcl_input_ps_sgv v7.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 39
dcl_resource_structured t101, 2048
dcl_resource_structured t102, 1968

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i -f --only-autofixed --disable-driver-stereo-cb 12 693abf3db1a3473e-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r11.xyzw, l(0), l(416), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(592), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(624), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(992), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(1936), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(1952), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(2016), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(2032), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(1), l(0), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(1), l(16), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(1), l(32), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(1), l(48), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r26.xyzw, l(1), l(96), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r27.xyzw, l(1), l(208), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r28.xyzw, l(1), l(272), t101.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r29.xyzw, l(1), l(768), t101.xyzw


// cb2 remapped to t102 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 --remap-cb 2 102 -i -f --only-autofixed --disable-driver-stereo-cb 12 693abf3db1a3473e-ps.txt
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r30.xyzw, l(0), l(416), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r31.xyzw, l(0), l(576), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r32.xyzw, l(0), l(592), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r33.xyzw, l(0), l(608), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r34.xyzw, l(0), l(624), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r35.xyzw, l(0), l(944), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r36.xyzw, l(0), l(992), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r37.xyzw, l(0), l(1936), t102.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r38.xyzw, l(0), l(1952), t102.xyzw

and r0.x, v4.x, l(1)
if_z r0.x
  mov r0.x, r12.x
  mov r0.y, r13.x
  mov r0.z, r14.x
  mov r0.w, r15.x
  mov r1.x, r12.y
  mov r1.y, r13.y
  mov r1.z, r14.y
  mov r1.w, r15.y
  mov r2.x, r12.z
  mov r2.y, r13.z
  mov r2.z, r14.z
  mov r2.w, r15.z
  mov r3.x, r12.w
  mov r3.y, r13.w
  mov r3.z, r14.w
  mov r3.w, r15.w
  mov r4.xy, r18.xyxx
  mov r4.zw, r19.zzzw
  mov r5.xyz, r16.xyzx
  mov r6.xy, r11.xyxx
  mov r6.zw, r17.xxxy
else 
  mov r0.x, r31.x
  mov r0.y, r32.x
  mov r0.z, r33.x
  mov r0.w, r34.x
  mov r1.x, r31.y
  mov r1.y, r32.y
  mov r1.z, r33.y
  mov r1.w, r34.y
  mov r2.x, r31.z
  mov r2.y, r32.z
  mov r2.z, r33.z
  mov r2.w, r34.z
  mov r3.x, r31.w
  mov r3.y, r32.w
  mov r3.z, r33.w
  mov r3.w, r34.w
  mov r4.xy, r37.xyxx
  mov r4.zw, r38.zzzw
  mov r5.xyz, r35.xyzx
  mov r6.xy, r30.xyxx
  mov r6.zw, r36.xxxy
endif 
mul r7.xyz, v0.yzxy, v1.zxyz
mad r7.xyz, v1.yzxy, v0.zxyz, -r7.xyzx
mul r7.xyz, r7.xyzx, v1.wwww
add r4.xy, -r4.xyxx, v6.xyxx
mad r4.xy, r4.xyxx, r4.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, v6.wwww
mov r4.z, v6.w
mul r4.xyz, r4.xyzx, l(2.000000, -2.000000, 1.000000, 0.000000)
mov r8.xyz, v6.xyzx
mov r8.w, l(1.000000)
dp4 r0.x, r8.xyzw, r0.xyzw
dp4 r0.y, r8.xyzw, r1.xyzw
dp4 r0.z, r8.xyzw, r2.xyzw
dp4 r0.w, r8.xyzw, r3.xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r1.xyz, -r5.xyzx, r0.xyzx
mul r0.w, r25.w, cb3[9].w
movc r1.w, v7.x, l(1.000000), l(-1.000000)
mul r0.w, r0.w, r1.w
sample_indexable(texture2d)(float,float,float,float) r2.xy, v3.xyxx, t0.xyzw, s0
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r2.xyxx, r2.xyxx
add r1.w, -r1.w, l(1.000000)
max r1.w, r1.w, l(0.000000)
sqrt r2.z, r1.w
sample_indexable(texture2d)(float,float,float,float) r3.xy, v3.xyxx, t1.xyzw, s1
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r3.xyxx, r3.xyxx
add r1.w, -r1.w, l(1.000000)
max r1.w, r1.w, l(0.000000)
sqrt r3.z, r1.w
sample_indexable(texture2d)(float,float,float,float) r1.w, v3.xyxx, t2.xzwy, s2
mad r1.w, v2.x, cb5[5].y, -r1.w
div_sat r1.w, r1.w, cb5[5].x
add r3.xyz, -r2.xyzx, r3.xyzx
mad r2.xyz, r1.wwww, r3.xyzx, r2.xyzx
mad r2.xyz, r2.xyzx, r22.wwww, r22.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mul r3.xyz, r7.xyzx, r2.yyyy
mad r2.xyw, r2.xxxx, v0.xyxz, r3.xyxz
mad r2.xyz, r2.zzzz, v1.xyzx, r2.xywx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mul r2.xyz, r0.wwww, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v3.xyxx, t3.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r5.xyz, v3.xyxx, t4.xyzw, s4
sample_indexable(texture2d)(float,float,float,float) r7.xyz, v3.xyxx, t5.yzxw, s5
add r5.xyz, -r3.xyzx, r5.xyzx
mad r3.xyz, r1.wwww, r5.xyzx, r3.xyzx
mad r0.w, cb5[5].z, l(-0.659999967), l(1.000000)
mul r3.xyz, r0.wwww, r3.xyzx
mul_sat r3.xyz, r3.xyzx, cb5[3].xyzx
mul_sat r0.w, r7.z, cb5[5].w
ne r1.w, cb0[3].x, l(0.000000)
lt r2.w, l(0.001000), |cb0[3].x|
and r1.w, r1.w, r2.w
round_ni r5.xy, v6.xyxx
dp2 r2.w, r5.xyxx, l(347.834503, 3343.283691, 0.000000, 0.000000)
sincos null, r2.w, r2.w
mul r2.w, r2.w, l(1000.000000)
frc r2.w, r2.w
lt r3.w, cb0[3].x, l(0.000000)
add r4.w, cb0[3].x, l(1.000000)
lt r4.w, r2.w, r4.w
lt r2.w, cb0[3].x, r2.w
movc r2.w, r3.w, r4.w, r2.w
ieq r2.w, r2.w, l(0)
and r1.w, r1.w, r2.w
discard_nz r1.w
mad o2.z, r0.w, r23.y, r23.x
mov_sat r7.xy, r7.xyxx
lt r0.w, l(0.000000), cb3[11].y
movc o6.x, r0.w, cb4[5].x, cb3[19].z
lt r0.w, l(0.000000), r7.y
and o5.x, r0.w, cb5[6].x
mov o5.yz, l(0,0,0,0)
and o5.w, r7.y, r0.w
div r4.xy, r4.xyxx, r4.zzzz
div r4.zw, v5.xxxy, v5.wwww
add r4.xyzw, -r6.xyzw, r4.xyzw
add r4.xy, -r4.zwzz, r4.xyxx
mad r4.xy, r4.xyxx, l(0.249500, 0.249500, 0.000000, 0.000000), l(0.499992371, 0.499992371, 0.000000, 0.000000)
mul o4.xy, r4.xyxx, v5.zzzz
mov o4.zw, l(0,0,0,0)
add r4.xyz, r3.xyzx, l(-0.080000, -0.080000, -0.080000, 0.000000)
mad r4.xyz, r7.xxxx, r4.xyzx, l(0.080000, 0.080000, 0.080000, 0.000000)
ftou r5.xy, v6.xyxx
ftou r1.w, r27.x
iadd r2.w, r5.y, r5.x
iadd r1.w, r1.w, r2.w
and r1.w, r1.w, l(1)
lt r2.w, l(0.000000), r28.x
lt r3.w, l(0.000000), r29.w
and r4.w, r2.w, r3.w
ne r5.x, l(0.000000, 0.000000, 0.000000, 0.000000), r28.x
movc r5.xyz, r5.xxxx, l(1.000000,1.000000,1.000000,0), r3.xyzx
movc r6.xy, r1.wwww, l(1.000000,0,0,0), l(0,1.000000,0,0)
mul r7.yzw, r4.xxyz, r6.yyyy
movc r5.xyz, r4.wwww, r6.xxxx, r5.xyzx
movc r6.xzw, r4.wwww, r7.yyzw, r4.xxyz
movc r5.xyz, r0.wwww, r5.xyzx, r3.xyzx
movc r4.xyz, r0.wwww, r6.xzwx, r4.xyzx
mad r5.xyz, -r5.xyzx, r7.xxxx, r5.xyzx
mad r5.xyz, r5.xyzx, r20.wwww, r20.xyzx
mad r4.xyz, r4.xyzx, r21.wwww, r21.xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
div r0.x, r0.x, cb0[33].w
log r0.x, r0.x
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(6.000000)
round_pi r0.x, r0.x
mul r6.xzw, r1.xxyz, cb0[30].xxyz
mad r7.yzw, r1.xxyz, cb0[30].xxyz, -cb0[31].xxyz
max r0.y, |r7.z|, |r7.y|
max r0.y, |r7.w|, r0.y
mul r0.y, r0.y, l(4.000000)
log r0.y, r0.y
max r0.y, r0.y, l(0.000000)
round_ni r0.y, r0.y
max r0.x, r0.x, r0.y
exp r0.y, r0.x
div r7.yzw, r6.xxzw, r0.yyyy
frc r8.xyz, r7.yzwy
mul r0.x, r0.x, l(0.142857149)
mad r8.w, r8.z, l(0.142857149), r0.x
mul r0.xyz, cb0[32].xyzx, l(1.000000, 1.000000, 7.000000, 0.000000)
mul r7.yzw, r0.xxyz, r8.xxyw
round_ni r7.yzw, r7.yyzw
add r7.yzw, r7.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
div r0.xyz, r7.yzwy, r0.xyzx
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r0.xyzx, t6.xyzw, s6, l(0.000000)
mul r8.xyzw, r8.xyzw, l(255.000000, 255.000000, 255.000000, 255.000000)
div r0.xyz, cb0[32].xyzx, r8.wwww
mul r0.xyz, r0.xyzx, r6.xzwx
frc r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(0.666666687, 0.666666687, 0.666666687, 0.000000), r8.xyzx
add r0.xyz, r0.xyzx, l(0.166666672, 0.166666672, 0.166666672, 0.000000)
mul r0.xyz, r0.xyzx, cb0[33].xyzx
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r0.xyzx, t7.xyzw, s7, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r9.xyzw, r0.xyzx, t8.xyzw, s7, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r10.xyzw, r0.xyzx, t9.xyzw, s7, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r0.x, r0.xyzx, t10.yxzw, s7, l(0.000000)
dp3 r0.y, r8.yzwy, r8.yzwy
sqrt r0.z, r0.y
ne r1.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r6.xzw, r0.yyyy, r8.yyzw
dp3 r0.y, r2.xyzx, r6.xzwx
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r8.x
add r4.w, -r0.z, l(1.000000)
add r5.w, r0.z, l(1.000000)
div r4.w, r4.w, r5.w
mad r6.xz, r0.zzzz, l(2.000000, 0.000000, 2.000000, 0.000000), l(1.000000, 0.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r6.x
exp r0.y, r0.y
mul r0.z, r0.y, r6.z
mad r0.y, -r6.z, r0.y, l(1.000000)
mad r0.y, r4.w, r0.y, r0.z
mul r0.y, r0.y, r8.x
movc r8.x, r1.w, r0.y, r8.x
dp3 r0.y, r9.yzwy, r9.yzwy
sqrt r0.z, r0.y
ne r1.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r6.xzw, r0.yyyy, r9.yyzw
dp3 r0.y, r2.xyzx, r6.xzwx
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r9.x
add r4.w, -r0.z, l(1.000000)
add r5.w, r0.z, l(1.000000)
div r4.w, r4.w, r5.w
mad r6.xz, r0.zzzz, l(2.000000, 0.000000, 2.000000, 0.000000), l(1.000000, 0.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r6.x
exp r0.y, r0.y
mul r0.z, r0.y, r6.z
mad r0.y, -r6.z, r0.y, l(1.000000)
mad r0.y, r4.w, r0.y, r0.z
mul r0.y, r0.y, r9.x
movc r8.y, r1.w, r0.y, r9.x
dp3 r0.y, r10.yzwy, r10.yzwy
sqrt r0.z, r0.y
ne r1.w, r0.z, l(0.000000)
rsq r0.y, r0.y
mul r6.xzw, r0.yyyy, r10.yyzw
dp3 r0.y, r2.xyzx, r6.xzwx
mad r0.y, r0.y, l(0.500000), l(0.500000)
div r0.z, r0.z, r10.x
add r4.w, -r0.z, l(1.000000)
add r5.w, r0.z, l(1.000000)
div r4.w, r4.w, r5.w
mad r6.xz, r0.zzzz, l(2.000000, 0.000000, 2.000000, 0.000000), l(1.000000, 0.000000, 2.000000, 0.000000)
log r0.y, r0.y
mul r0.y, r0.y, r6.x
exp r0.y, r0.y
mul r0.z, r0.y, r6.z
mad r0.y, -r6.z, r0.y, l(1.000000)
mad r0.y, r4.w, r0.y, r0.z
mul r0.y, r0.y, r10.x
movc r8.z, r1.w, r0.y, r10.x
max r6.xzw, r8.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r7.yzw, r5.xxyz, r6.xxzw
mad r4.xyz, r4.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r5.xyzx
max r8.xyz, cb5[2].xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.y, l(0.000000), r24.x
if_nz r0.y
  add r9.xyz, r1.xyzx, -cb3[8].xyzx
  add r10.xyz, cb3[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r9.xyz, r10.xyzx, |r9.xyzx|
  or r0.y, r9.y, r9.x
  or r0.y, r9.z, r0.y
  dp3 r0.z, r1.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r0.z, r0.z, l(0.002000)
  frc r0.z, r0.z
  lt r0.z, l(0.500000), r0.z
  movc r1.xyz, r0.zzzz, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r8.xyz, r0.yyyy, r1.xyzx, r8.xyzx
endif 
mad r1.xyz, r26.xxxx, r4.xyzx, r8.xyzx
and r0.y, r0.w, r2.w
and r0.y, r3.w, r0.y
mul r4.xyz, r6.yyyy, r1.xyzx
movc r1.xyz, r0.yyyy, r4.xyzx, r1.xyzx
mad o0.xyz, r6.xzwx, r5.xyzx, r1.xyzx
eq r0.y, r29.w, l(0.000000)
dp3 r0.z, r7.yzwy, l(0.300000, 0.590000, 0.110000, 0.000000)
and r0.z, r0.z, r0.y
and r0.z, r0.z, r0.w
and o0.w, r0.z, r0.y
mul r1.xyz, v6.xyxx, l(0.00781250000, 0.00781250000, 0.00781250000, 0.000000)
frc r1.xyz, r1.xyzx
mad r1.xyz, r1.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000), l(-64.340622, -72.465622, -64.340622, 0.000000)
mul r1.xyz, r1.xyyx, r1.xyzx
dp3 r0.y, r1.xyzx, l(20.390625, 60.703125, 2.42812085, 0.000000)
frc r0.y, r0.y
add r0.y, r0.y, l(-0.500000)
mad o1.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
movc o2.w, r0.w, l(0.0196078438), l(0.00392156886)
mul o3.w, r0.y, l(0.00392156886)
mov_sat r0.x, r0.x
sqrt o7.xyzw, r0.xxxx
mov o1.w, cb3[11].x
mov o2.x, r7.x
mov o2.y, l(1.000000)
mov o3.xyz, r3.xyzx
mov o6.yzw, cb3[19].zzzz
ret 
// Approximately 0 instruction slots used