// asmtool.py --remap-cb 1 101 -i -f --only-autofixed --disable-driver-stereo-cb 12 465dc1724a761d2c-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:45:00 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyz         1     NONE   float   x   
// TEXCOORD                 2   xyzw        2     NONE   float       
// TEXCOORD                 3   xyzw        3     NONE   float       
// TEXCOORD                 4   xyzw        4     NONE   float       
// SV_POSITION              0   xyzw        5      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[36], immediateIndexed
dcl_constantbuffer cb1[119], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear noperspective v0.xy
dcl_input_ps linear noperspective v1.x
dcl_output o0.xyzw
dcl_temps 13
dcl_resource_structured t101, 1904

// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 1 101 -i -f --only-autofixed --disable-driver-stereo-cb 12 465dc1724a761d2c-ps.txt
ld_structured_indexable(structured_buffer, stride=1904)(mixed,mixed,mixed,mixed) r9.xyzw, l(0), l(1840), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1904)(mixed,mixed,mixed,mixed) r10.xyzw, l(0), l(1856), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1904)(mixed,mixed,mixed,mixed) r11.xyzw, l(0), l(1872), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1904)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(1888), t101.xyzw

sample_l_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r0.xyzw, v0.xyxx, t1.xyzw, s1, l(0.000000)
add r1.xy, r0.yzyy, r0.yxyy
add r1.x, r1.y, r1.x
mad r1.x, r1.x, v1.x, l(4.000000)
rcp r1.x, r1.x
mul r0.xyz, r0.xyzx, r1.xxxx
mul r1.xyzw, r0.xyzw, cb0[23].xxxx
sample_l_aoffimmi_indexable(-1,-1,0)(texture2d)(float,float,float,float) r2.xyzw, v0.xyxx, t1.xyzw, s1, l(0.000000)
add r3.xy, r2.yzyy, r2.yxyy
add r0.w, r3.y, r3.x
mad r0.w, r0.w, v1.x, l(4.000000)
rcp r0.w, r0.w
mad r3.xyz, r2.xyzx, r0.wwww, r0.xyzx
mul r0.xyz, r0.xyzx, r0.xyzx
mul r2.xyz, r0.wwww, r2.xyzx
mad r1.xyzw, r2.xyzw, cb0[22].xxxx, r1.xyzw
mad r0.xyz, r2.xyzx, r2.xyzx, r0.xyzx
sample_l_aoffimmi_indexable(1,-1,0)(texture2d)(float,float,float,float) r2.xyzw, v0.xyxx, t1.xyzw, s1, l(0.000000)
add r4.xy, r2.yzyy, r2.yxyy
add r0.w, r4.y, r4.x
mad r0.w, r0.w, v1.x, l(4.000000)
rcp r0.w, r0.w
mad r3.xyz, r2.xyzx, r0.wwww, r3.xyzx
mul r2.xyz, r0.wwww, r2.xyzx
mad r1.xyzw, r2.xyzw, cb0[24].xxxx, r1.xyzw
mad r0.xyz, r2.xyzx, r2.xyzx, r0.xyzx
sample_l_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r2.xyzw, v0.xyxx, t1.xyzw, s1, l(0.000000)
add r4.xy, r2.yzyy, r2.yxyy
add r0.w, r4.y, r4.x
mad r0.w, r0.w, v1.x, l(4.000000)
rcp r0.w, r0.w
mad r3.xyz, r2.xyzx, r0.wwww, r3.xyzx
mul r2.xyz, r0.wwww, r2.xyzx
mad r1.xyzw, r2.xyzw, cb0[25].xxxx, r1.xyzw
mad r0.xyz, r2.xyzx, r2.xyzx, r0.xyzx
sample_l_indexable(texture2d)(float,float,float,float) r2.xyzw, v0.xyxx, t1.xyzw, s1, l(0.000000)
add r4.xy, r2.yzyy, r2.yxyy
add r0.w, r4.y, r4.x
mad r0.w, r0.w, v1.x, l(4.000000)
rcp r0.w, r0.w
mad r3.xyz, r2.xyzx, r0.wwww, r3.xyzx
sample_l_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r4.xyzw, v0.xyxx, t1.xyzw, s1, l(0.000000)
add r5.xy, r4.yzyy, r4.yxyy
add r3.w, r5.y, r5.x
mad r3.w, r3.w, v1.x, l(4.000000)
rcp r3.w, r3.w
mad r3.xyz, r4.xyzx, r3.wwww, r3.xyzx
mul r4.xyz, r3.wwww, r4.xyzx
sample_l_aoffimmi_indexable(-1,1,0)(texture2d)(float,float,float,float) r5.xyzw, v0.xyxx, t1.xyzw, s1, l(0.000000)
add r6.xy, r5.yzyy, r5.yxyy
add r3.w, r6.y, r6.x
mad r3.w, r3.w, v1.x, l(4.000000)
rcp r3.w, r3.w
mad r3.xyz, r5.xyzx, r3.wwww, r3.xyzx
mul r5.xyz, r3.wwww, r5.xyzx
sample_l_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r6.xyzw, v0.xyxx, t1.xyzw, s1, l(0.000000)
add r7.xy, r6.yzyy, r6.yxyy
add r3.w, r7.y, r7.x
mad r3.w, r3.w, v1.x, l(4.000000)
rcp r3.w, r3.w
mad r3.xyz, r6.xyzx, r3.wwww, r3.xyzx
mul r6.xyz, r3.wwww, r6.xyzx
mul r7.xyz, r3.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000)
mul r7.xyz, r7.xyzx, r7.xyzx
mul r8.xyz, r0.wwww, r2.xyzx
mad r0.xyz, r8.xyzx, r8.xyzx, r0.xyzx
mad r0.xyz, r4.xyzx, r4.xyzx, r0.xyzx
mad r0.xyz, r5.xyzx, r5.xyzx, r0.xyzx
mad r0.xyz, r6.xyzx, r6.xyzx, r0.xyzx
mad r0.xyz, r0.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000), -r7.xyzx
sqrt r0.xyz, |r0.xyzx|
mad r7.xyz, r3.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000), -r0.xyzx
mad r0.xyz, r3.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000), r0.xyzx
min r3.xyz, r0.xyzx, r7.xyzx
mov r8.w, r2.w
mad r1.xyzw, r8.xyzw, cb0[26].xxxx, r1.xyzw
mad r1.xyzw, r4.xyzw, cb0[27].xxxx, r1.xyzw
mad r1.xyzw, r5.xyzw, cb0[28].xxxx, r1.xyzw
mad r1.xyzw, r6.xyzw, cb0[29].xxxx, r1.xyzw
sample_l_aoffimmi_indexable(1,1,0)(texture2d)(float,float,float,float) r4.xyzw, v0.xyxx, t1.xyzw, s1, l(0.000000)
add r5.xy, r4.yzyy, r4.yxyy
add r2.w, r5.y, r5.x
mad r2.w, r2.w, v1.x, l(4.000000)
rcp r2.w, r2.w
mul r4.xyz, r2.wwww, r4.xyzx
mad r1.xyzw, r4.xyzw, cb0[30].xxxx, r1.xyzw
min r3.xyz, r3.xyzx, r1.xyzx
max r4.xyz, r0.xyzx, r7.xyzx
add r5.xy, r7.yzyy, r7.yxyy
add r2.w, r5.y, r5.x
add r0.xy, r0.yzyy, r0.yxyy
add r0.x, r0.y, r0.x
add r0.x, -r2.w, r0.x
mad r0.x, r0.x, l(32.000000), l(1.000000)
rcp r0.x, r0.x
max r4.xyz, r1.xyzx, r4.xyzx
add r3.xyz, r3.xyzx, r4.xyzx
mad r4.xyz, -r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
mul r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.y, v0.xyxx, t0.yxzw, s0, l(0.000000)
mad r5.xy, v0.xyxx, cb0[1].xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r5.xy, r5.xyxx, -cb0[17].zwzz
div r5.xy, r5.xyxx, cb0[17].xyxx
mul r6.xyz, r5.yyyy, r10.xywx
mad r6.xyz, r5.xxxx, r9.xywx, r6.xyzx
mad r6.xyz, r0.yyyy, r11.xywx, r6.xyzx
add r6.xyz, r6.xyzx, r12.xywx
div r0.yz, r6.xxyx, r6.zzzz
add r0.yz, -r0.yyzy, r5.xxyx
sample_l_indexable(texture2d)(float,float,float,float) r5.zw, v0.xyxx, t3.zwxy, s3, l(0.000000)
mul r5.zw, r5.zzzw, cb0[35].yyyy
lt r2.w, l(0.000000), r5.z
mad r5.zw, r5.zzzw, l(0.000000, 0.000000, 4.008016, 4.008016), l(0.000000, 0.000000, -2.00397754, -2.00397754)
movc r0.yz, r2.wwww, r5.zzwz, r0.yyzy
add r5.xy, -r0.yzyy, r5.xyxx
mul r0.yz, r0.yyzy, cb0[18].xxyx
add r0.yz, |r0.yyzy|, |r0.yyzy|
add r0.y, r0.z, r0.y
min r0.y, r0.y, l(1.000000)
mad_sat r0.x, r0.y, l(0.500000), r0.x
add r0.yz, cb0[18].zzwz, l(0.000000, -1.000000, -1.000000, 0.000000)
max r0.yz, r0.yyzy, r5.xxyx
max r2.w, |r5.y|, |r5.x|
ge r2.w, r2.w, l(1.000000)
add r5.xy, -cb0[18].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
min r0.yz, r0.yyzy, r5.xxyx
mad r0.yz, r0.yyzy, cb0[20].xxyx, cb0[20].zzwz
add r0.yz, r0.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
mul r0.yz, r0.yyzy, cb0[2].zzwz
sample_l_indexable(texture2d)(float,float,float,float) r5.xyzw, r0.yzyy, t2.xyzw, s2, l(0.000000)
add r0.yz, r5.yyzy, r5.yyxy
add r0.y, r0.z, r0.y
mad r0.y, r0.y, v1.x, l(4.000000)
rcp r0.y, r0.y
mad r3.xyz, r5.xyzx, r0.yyyy, -r3.xyzx
add r6.xyz, -r3.xyzx, r4.xyzx
add r3.xyz, -r3.xyzx, -r4.xyzx
mad r4.xyz, -r5.xyzx, r0.yyyy, r1.xyzx
mul r5.xyz, r0.yyyy, r5.xyzx
rcp r4.xyz, r4.xyzx
mul r6.xyz, r4.xyzx, r6.xyzx
mul r3.xyz, r3.xyzx, r4.xyzx
min r3.xyz, r3.xyzx, r6.xyzx
max r0.y, r3.y, r3.x
max_sat r0.y, r3.z, r0.y
add r3.xyzw, r1.xyzw, -r5.xyzw
mad r3.xyzw, r0.yyyy, r3.xyzw, r5.xyzw
mad r0.yzw, r2.xxyz, r0.wwww, -r1.xxyz
mad r1.xyz, r0.xxxx, r0.yzwy, r1.xyzx
movc r0.xyzw, r2.wwww, r1.xyzw, r3.xyzw
add r1.xyzw, -r0.xyzw, r1.xyzw
movc r2.x, r2.w, l(1.000000), l(0.125000)
mad r0.xyzw, r2.xxxx, r1.xyzw, r0.xyzw
add r1.xy, r0.yzyy, r0.yxyy
add r1.x, r1.y, r1.x
mad r1.x, r1.x, -v1.x, l(1.000000)
rcp r1.x, r1.x
mul r1.x, r1.x, l(4.000000)
mul r0.xyz, r0.xyzx, r1.xxxx
mov o0.w, r0.w
min r0.xyz, -r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov o0.xyz, -r0.xyzx
ret 
// Approximately 0 instruction slots used