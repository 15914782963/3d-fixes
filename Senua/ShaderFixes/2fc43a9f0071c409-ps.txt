// asmtool.py --remap-cb 0 100 --remap-cb 1 101 -i --only-autofixed --disable-driver-stereo-cb 12 2fc43a9f0071c409-ps.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:42:34 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz 
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy  
// TEXCOORD                 4   xyzw        3     NONE   float     zw
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x   
// VELOCITY_PREV_POS        0   xyzw        5     NONE   float   xyzw
// SV_Position              0   xyzw        6      POS   float   xyzw
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
// SV_Target                5   xyzw        5   TARGET   float   xyzw
// SV_Target                6   xyzw        6   TARGET   float   xyzw
// SV_Target                7   xyzw        7   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[135], immediateIndexed
dcl_constantbuffer cb1[123], immediateIndexed
dcl_constantbuffer cb2[12], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.zw
dcl_input_ps constant v4.x
dcl_input_ps linear v5.xyzw
dcl_input_ps_siv linear noperspective v6.xyzw, position
dcl_input_ps_sgv v7.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 36
dcl_resource_structured t100, 2048
dcl_resource_structured t101, 1968

// cb0 remapped to t100 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 0 100 --remap-cb 1 101 -i --only-autofixed --disable-driver-stereo-cb 12 2fc43a9f0071c409-ps.txt
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r11.xyzw, l(0), l(416), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(576), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(592), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(608), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(624), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(944), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(992), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(1936), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(1952), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(2016), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(2032), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r22.xyzw, l(1), l(0), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r23.xyzw, l(1), l(16), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r24.xyzw, l(1), l(32), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r25.xyzw, l(1), l(48), t100.xyzw
ld_structured_indexable(structured_buffer, stride=2048)(mixed,mixed,mixed,mixed) r26.xyzw, l(1), l(96), t100.xyzw


// cb1 remapped to t101 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 0 100 --remap-cb 1 101 -i --only-autofixed --disable-driver-stereo-cb 12 2fc43a9f0071c409-ps.txt
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r27.xyzw, l(0), l(416), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r28.xyzw, l(0), l(576), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r29.xyzw, l(0), l(592), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r30.xyzw, l(0), l(608), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r31.xyzw, l(0), l(624), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r32.xyzw, l(0), l(944), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r33.xyzw, l(0), l(992), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r34.xyzw, l(0), l(1936), t101.xyzw
ld_structured_indexable(structured_buffer, stride=1968)(mixed,mixed,mixed,mixed) r35.xyzw, l(0), l(1952), t101.xyzw

and r0.x, v4.x, l(1)
if_z r0.x
  mov r0.x, r12.x
  mov r0.y, r13.x
  mov r0.z, r14.x
  mov r0.w, r15.x
  mov r1.x, r12.y
  mov r1.y, r13.y
  mov r1.z, r14.y
  mov r1.w, r15.y
  mov r2.x, r12.z
  mov r2.y, r13.z
  mov r2.z, r14.z
  mov r2.w, r15.z
  mov r3.x, r12.w
  mov r3.y, r13.w
  mov r3.z, r14.w
  mov r3.w, r15.w
  mov r4.xy, r18.xyxx
  mov r4.zw, r19.zzzw
  mov r5.xyz, r16.xyzx
  mov r6.xy, r11.xyxx
  mov r6.zw, r17.xxxy
else 
  mov r0.x, r28.x
  mov r0.y, r29.x
  mov r0.z, r30.x
  mov r0.w, r31.x
  mov r1.x, r28.y
  mov r1.y, r29.y
  mov r1.z, r30.y
  mov r1.w, r31.y
  mov r2.x, r28.z
  mov r2.y, r29.z
  mov r2.z, r30.z
  mov r2.w, r31.z
  mov r3.x, r28.w
  mov r3.y, r29.w
  mov r3.z, r30.w
  mov r3.w, r31.w
  mov r4.xy, r34.xyxx
  mov r4.zw, r35.zzzw
  mov r5.xyz, r32.xyzx
  mov r6.xy, r27.xyxx
  mov r6.zw, r33.xxxy
endif 
mul r7.xyz, v0.yzxy, v1.zxyz
mad r7.xyz, v1.yzxy, v0.zxyz, -r7.xyzx
mul r7.xyz, r7.xyzx, v1.wwww
add r4.xy, -r4.xyxx, v6.xyxx
mad r4.xy, r4.xyxx, r4.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, v6.wwww
mov r4.z, v6.w
mul r4.xyz, r4.xyzx, l(2.000000, -2.000000, 1.000000, 0.000000)
mul r4.w, r25.w, cb2[9].w
movc r5.w, v7.x, l(1.000000), l(-1.000000)
mul r4.w, r4.w, r5.w
mul r8.xy, v2.xyxx, cb4[1].xyxx
sample_indexable(texture2d)(float,float,float,float) r8.zw, r8.xyxx, t1.zwxy, s1
mad r9.xy, r8.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r5.w, r9.xyxx, r9.xyxx
add r5.w, -r5.w, l(1.000000)
max r5.w, r5.w, l(0.000000)
sqrt r9.z, r5.w
mad r9.xyz, r9.xyzx, r22.wwww, r22.xyzx
dp3 r5.w, r9.xyzx, r9.xyzx
rsq r5.w, r5.w
mul r9.xyz, r5.wwww, r9.xyzx
mul r7.xyz, r7.xyzx, r9.yyyy
mad r7.xyz, r9.xxxx, v0.xyzx, r7.xyzx
mad r7.xyz, r9.zzzz, v1.xyzx, r7.xyzx
dp3 r5.w, r7.xyzx, r7.xyzx
rsq r5.w, r5.w
mul r7.xyz, r5.wwww, r7.xyzx
mul r7.xyz, r4.wwww, r7.xyzx
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r8.xyxx, t2.xyzw, s2
mul r9.xyz, r9.xyzx, cb4[7].xyzx
mul_sat r9.xyz, r9.xyzx, cb4[4].xyzx
sample_indexable(texture2d)(float,float,float,float) r4.w, r8.xyxx, t3.yzwx, s3
mov_sat r4.w, r4.w
mad o2.z, r4.w, r23.y, r23.x
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, v3.zwzz, t0.xyzw, s0
mad r10.xyzw, cb3[7].xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000), l(0.500000, 0.500000, 0.500000, 0.500000)
mad_sat r8.xyzw, r8.xyzw, cb3[7].xyzw, r10.xyzw
mul r8.xyzw, r8.xyzw, r8.xyzw
mul o6.xyzw, r8.xyzw, cb3[6].xyzw
div r4.xy, r4.xyxx, r4.zzzz
div r4.zw, v5.xxxy, v5.wwww
add r4.xyzw, -r6.xyzw, r4.xyzw
add r4.xy, -r4.zwzz, r4.xyxx
mad r4.xy, r4.xyxx, l(0.249500, 0.249500, 0.000000, 0.000000), l(0.499992371, 0.499992371, 0.000000, 0.000000)
mul o4.xy, r4.xyxx, v5.zzzz
mov o4.zw, l(0,0,0,0)
mad r4.xyz, r9.xyzx, r20.wwww, r20.xyzx
mad r6.xyz, r21.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r21.xyzx
mad r4.xyz, r6.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r4.xyzx
max r6.xyz, cb4[3].xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r4.w, l(0.000000), r24.x
if_nz r4.w
  mov r8.xyz, v6.xyzx
  mov r8.w, l(1.000000)
  dp4 r0.x, r8.xyzw, r0.xyzw
  dp4 r0.y, r8.xyzw, r1.xyzw
  dp4 r0.z, r8.xyzw, r2.xyzw
  dp4 r0.w, r8.xyzw, r3.xyzw
  div r0.xyz, r0.xyzx, r0.wwww
  add r0.xyz, -r5.xyzx, r0.xyzx
  add r1.xyz, r0.xyzx, -cb2[8].xyzx
  add r2.xyz, cb2[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r1.xyz, r2.xyzx, |r1.xyzx|
  or r0.w, r1.y, r1.x
  or r0.w, r1.z, r0.w
  dp3 r0.x, r0.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r0.x, r0.x, l(0.002000)
  frc r0.x, r0.x
  lt r0.x, l(0.500000), r0.x
  movc r0.xyz, r0.xxxx, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r6.xyz, r0.wwww, r0.xyzx, r6.xyzx
endif 
mad o0.xyz, r26.xxxx, r4.xyzx, r6.xyzx
mul r0.xyz, v6.xyxx, l(0.00781250000, 0.00781250000, 0.00781250000, 0.000000)
frc r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000), l(-64.340622, -72.465622, -64.340622, 0.000000)
mul r0.xyz, r0.xyyx, r0.xyzx
dp3 r0.x, r0.xyzx, l(20.390625, 60.703125, 2.42812085, 0.000000)
frc r0.x, r0.x
add r0.x, r0.x, l(-0.500000)
mad o1.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mul o3.w, r0.x, l(0.00392156886)
mov o0.w, l(0)
mov o1.w, cb2[11].x
mov o2.xyw, l(0,0.500000,0,0.0666666701)
mov o3.xyz, r9.xyzx
mov o5.xyzw, l(0,0,0,0)
mov o7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
ret 
// Approximately 0 instruction slots used