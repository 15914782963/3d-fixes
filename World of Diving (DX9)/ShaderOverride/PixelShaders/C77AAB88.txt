// CRC32: C77AAB88 | Matched 3 variants of 1 shaders: Relief Pack/ReliefTerrain-AddPass
// 
//    Unity headers extracted from ReliefTerrain-AddPass.shader
//    Shader "Relief Pack/ReliefTerrain-AddPass" {
//      Properties {
//       _Control ("Control (RGBA)", 2D) = "black" { }
//       _Splat3 ("Layer 3 (A)", 2D) = "white" { }
//       _Splat2 ("Layer 2 (B)", 2D) = "white" { }
//       _Splat1 ("Layer 1 (G)", 2D) = "white" { }
//       _Splat0 ("Layer 0 (R)", 2D) = "white" { }
//      }
//      Fallback Off
//      SubShader 1/2 {
//        LOD 700
//        Tags { "QUEUE"="Geometry-99" "IGNOREPROJECTOR"="true" "RenderType"="Opaque" "SplatCount"="4" }
//        Pass 3/4 {
//          Name "PREPASS"
//          Tags { "LIGHTMODE"="PrePassBase" "QUEUE"="Geometry-99" "IGNOREPROJECTOR"="true" "RenderType"="Opaque" "SplatCount"="4" }
//          ZWrite Off
//          Fog { Mode Off }
//          Blend SrcAlpha OneMinusSrcAlpha
//          ColorMask RGB
//          GpuProgramID 148663
//          Program "fp" {
//            SubProgram "d3d9 " {
// 4:           Keywords { "FOG_EXP" "RTP_PM_SHADING" }
// 2:           Keywords { "FOG_LINEAR" "RTP_PM_SHADING" }
// 1:           Keywords { "RTP_PM_SHADING" }
//              Float 1 [_BumpMapGlobalScale]
//              Vector 12 [_BumpMapGlobalStrength89AB]
//              Float 3 [_GlobalColorMapDistortByPerlin]
//              Float 2 [_GlobalColorMapNearMIP]
//              Float 13 [_RTP_MIP_BIAS]
//              Float 5 [_TERRAIN_ExtrudeHeight]
//              Vector 4 [_TERRAIN_ReliefTransform]
//              Float 7 [_TERRAIN_distance_start]
//              Float 9 [_TERRAIN_distance_start_bumpglobal]
//              Float 8 [_TERRAIN_distance_transition]
//              Float 10 [_TERRAIN_distance_transition_bumpglobal]
//              Vector 0 [_WorldSpaceCameraPos]
//              Float 6 [rtp_mipoffset_globalnorm]
//              Float 11 [rtp_perlin_start_val]
//              SetTexture 0 [_Control3] 2D 0
//              SetTexture 1 [_BumpMap89] 2D 1
//              SetTexture 2 [_BumpMapAB] 2D 2
//              SetTexture 3 [_ColorMapGlobal] 2D 3
//              SetTexture 4 [_BumpMapGlobal] 2D 4
//              SetTexture 5 [_TERRAIN_HeightMap3] 2D 5
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    def c14, 1024, 1, 0, 0.5
    def c15, 0.400000006, 0.600000024, 0.00100000005, -0.666666687
    def c16, 8, 1, 0, 3
    def c17, 3, -1.5, 9.99999975e-005, 10000
    def c18, 0.419999987, 2, -1, 1
    dcl_texcoord v0.xy
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15

texldl r31, c220.z, s15

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --stereo-sampler-ps=s15 --fix-unity-reflection --only-autofixed --ignore-register-errors Relief Pack_ReliefTerrain-AddPass/fp/C77AAB88.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    rcp r0.x, c4.x
    rcp r0.y, c4.y
    mov r1.x, v1.w
    mov r1.z, v3.w
    mad r0.xy, r1.xzzw, r0, c4.zwzw
    dsx r0.zw, r0.xyxy
    dsy r2.xy, r0
    mul r2.zw, r0.xyxy, c14.x
    mov r3.yw, c14
    add r1.w, r3.y, c13.x
    mul r2.zw, r1.w, r2
    dsx r3.xz, r2.zyww
    dsy r2.zw, r2
    texld_pp r4, v0, s0
    dp4_pp r5.w, r4, c14.y
    dp2add r1.w, r3.xzzw, r3.xzzw, c14.z
    dp2add r2.z, r2.zwzw, r2.zwzw, c14.z
    max r3.x, r1.w, r2.z
    log r1.w, r3.x
    mul r6.xy, r0, c1.x
    mad r6.zw, r1.w, r3.w, c6.x
    texldl r7, r6.xyww, s4
    mad r6, r6, c16.xxyy, c16.zzww
    texldl r6, r6, s4
    mul r2.zw, r6.xyxy, c15.x
    mad r2.zw, r7.xyxy, c15.y, r2
    add r3.xz, r2.zyww, -c14.w
    mad r6.xy, r3.xzzw, c3.x, v0
    texld_pp r7, r6, s3
    if_lt r5.w, c15.z
    mov_pp r7.xyz, c14.zzyw
    mov_pp r5.w, c14.z
    else
    mov r1.y, v2.w
    add r1.xyz, -r1, r30
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    rcp r3.x, r1.w
    mov r3.w, c15.w
    mul r3.z, r3.w, c13.x
    exp r3.z, r3.z
    rcp r3.z, r3.z
    mul r0.zw, r0, r3.z
    mul r2.xy, r2, r3.z
    add r3.z, r3.x, -c9.x
    rcp r3.w, c10.x
    mul_sat r3.z, r3.w, r3.z
    add r3.x, r3.x, -c7.x
    rcp r3.w, c8.x
    mul_sat r3.x, r3.w, r3.x
    add r3.x, -r3.x, c14.y
    texldd_pp r8, r0, s5, r0.zwzw, r2
    add_sat r8, r8, c15.z
    mul r4, r4, r8
    mul r4, r4, r4
    dp4 r3.w, r4, c14.y
    rcp r3.w, r3.w
    mul r4, r3.w, r4
    mul r9, r4, r4
    dp4 r3.w, r9, c14.y
    rcp r3.w, r3.w
    mad r9, r9, r3.w, -r4
    mad r4, r3.x, r9, r4
    mad r9.xy, r2.zwzw, c17.x, c17.y
    dp2add_sat r2.z, r9, r9, c14.z
    add r2.z, -r2.z, c14.y
    rsq r2.z, r2.z
    rcp r2.z, r2.z
    if_lt -r3.x, c14.z
    mul_pp r1.xyz, r1.w, r1
    mul r10.xyz, r1.y, v2
    mad r1.xyw, v1.xyzz, r1.x, r10.xyzz
    mad_pp r1.xyz, v3, r1.z, r1.xyww
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    rcp r2.w, r1.w
    add r2.w, -r2.w, c17.z
    cmp r1.w, r2.w, c17.w, r1.w
    mul_pp r1.xyz, r1.w, r1
    mov_sat_pp r1.w, r1.z
    mov r6.zw, c2.x
    texldl r6, r6, s3
    lrp r1.z, r3.z, r7.w, r6.w
    dp4_pp r2.w, r4, r8
    mul r3.w, r3.x, c5.x
    mul_pp r1.z, r1.z, r3.w
    mul_pp r3.w, r1.z, c14.w
    mad_pp r1.z, r2.w, r1.z, -r3.w
    dp3_pp r2.w, r1.xyww, r1.xyww
    rsq_pp r2.w, r2.w
    mul r1.xy, r1, r2.w
    mad r1.w, r1.w, r2.w, c18.x
    rcp r1.w, r1.w
    mul r1.xy, r1.w, r1
    mad r0.xy, r1.z, r1, r0
    texldd_pp r1, r0, s1, r0.zwzw, r2
    texldd_pp r0, r0, s2, r0.zwzw, r2
    mul r0, r4.zzww, r0
    mad r0, r1, r4.xxyy, r0
    add r0.xy, r0.zwzw, r0
    mad r0.xy, r0, c18.y, c18.z
    mul_pp r0.xy, r3.x, r0
    dp2add_sat r0.w, r0, r0, c14.z
    add r0.w, -r0.w, c14.y
    rsq r0.w, r0.w
    rcp_pp r0.z, r0.w
    else
    mov_pp r0.xyz, c14.zzyw
    endif
    dp4 r0.w, c12, r4
    add r9.z, r2.z, c14.y
    mul r1.xyz, r0, c18.zzww
    dp3 r1.w, r9, r1
    mul r1.xyz, r9.z, r1
    mad r1.xyz, r9, r1.w, -r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    lrp r2.x, r3.z, r3.y, c11.x
    mul_sat r0.w, r0.w, r2.x
    mad r1.xyz, r1, r1.w, -r0
    mad_pp r0.xyz, r0.w, r1, r0
    nrm_pp r7.xyz, r0
    endif
    dp3_pp r0.x, v1, r7
    dp3_pp r0.y, v2, r7
    dp3_pp r0.z, v3, r7
    mad_pp r5.xyz, r0, c14.w, c14.w
    mov_pp oC0, r5
