//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 CameraPositionVS;
//   float4 CameraRight;
//   float4 CameraUp;
//   float4 FogInScattering[4];
//   float4 FogMaxHeight;
//   float4x4 LocalToWorld;
//   float4 SharedFogParameter0;
//   float4 SharedFogParameter1;
//   float4 SharedFogParameter2;
//   float4 SharedFogParameter3;
//   float4x4 ViewProjectionMatrix;
//   float bUseExponentialHeightFog;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   ViewProjectionMatrix     c0       4
//   CameraPositionVS         c4       1
//   LocalToWorld             c6       4
//   FogInScattering          c10      4
//   CameraRight              c14      1
//   CameraUp                 c15      1
//   SharedFogParameter0      c16      1
//   SharedFogParameter1      c17      1
//   SharedFogParameter2      c18      1
//   SharedFogParameter3      c19      1
//   bUseExponentialHeightFog c20      1
//   FogMaxHeight             c21      1
//
// Glow around sun and sun

    vs_3_0
    def c5, 0.159154937, 0.5, 6.28318548, -3.14159274
    def c22, 0, 0.00999999978, -0.00999999978, 1
    def c23, 0.499000013, 0.5, 0.00100000005, 0
    dcl_position v0
    dcl_tangent v1
    dcl_blendweight v2
    dcl_texcoord v3
    dcl_texcoord1 v4
    dcl_texcoord2 v5
    dcl_texcoord o0.xy
    dcl_texcoord1 o1
    dcl_texcoord2 o2
    dcl_texcoord4 o3
    dcl_texcoord6 o4
    dcl_texcoord5 o5
    dcl_position o6

def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    mul r0, c7, v0.y
    mad r0, c6, v0.x, r0
    mad r0, c8, v0.z, r0
    mad r0, c9, v0.w, r0
    mad r1.x, v2.x, c5.x, c5.y
    frc r1.x, r1.x
    mad r1.x, r1.x, c5.z, c5.w
    sincos r2.xy, r1.x
    mul r1, r2.y, c14
    mad r1, -r2.x, c15, r1
    mul r3, r2.x, c14
    mad r2, r2.y, c15, r3
    mul r3.xy, v1.zwzw, v1
    add r3.zw, -c5.y, v3.xyxy
    mul r3.xy, r3.zwzw, r3
    mad r0, r3.x, r1, r0
    mad r0, r3.y, r2, r0
    mul r3.xyz, r1.zxyw, r2.yzxw
    mad r3.xyz, r1.yzxw, r2.zxyw, -r3
    nrm r4.xyz, r3
    mul r3, r0.y, c1
    mad r3, c0, r0.x, r3
    mad r3, c2, r0.z, r3
    mad r3, c3, r0.w, r3
    mad r5.xyz, r0, -c4.w, c4
    dp3 o4.x, r1, r5
    dp3 o4.y, r2, r5
    dp3 o4.z, r4, r5
    abs r0.w, c20.x
    if_lt -r0.w, r0.w
      add r1.xyz, r0, -c4
      dp3 r0.w, r1, r1
      rsq r0.w, r0.w
      rcp r1.w, r0.w
      add r1.w, r1.w, -c16.w
      max r1.w, r1.w, c22.x
      mul r1.w, r1.w, c16.x
      slt r2.x, c22.y, r1_abs.z
      add r2.y, r1.z, c22.z
      mad r2.x, r2.x, r2.y, c22.y
      mul r2.y, r2.x, -c16.y
      exp r2.y, r2.y
      add r2.y, -r2.y, c22.w
      mul r2.x, r2.x, c16.y
      rcp r2.x, r2.x
      mul r2.x, r2.x, r2.y
      mul r1.w, r1.w, r2.x
      mul r1.xyz, r0.w, r1
      dp3 r0.w, c19, r1
      mad r0.w, r0.w, -c23.x, c23.y
      pow r1.x, r0.w, c16.z
      mov r2.xyz, c18
      add r2.xyz, -r2, c17
      mad r1.xyz, r1.x, r2, c18
      exp r0.w, -r1.w
      min r0.w, r0.w, c22.w
      max r0.w, r0.w, c17.w
      add r1.w, -r0.w, c22.w
      mul o3.xyz, r1.w, r1
      mov o3.w, r0.w
    else
      add r1.xyz, r0, -c4
      dp3 r0.w, r1, r1
      rsq r0.w, r0.w
      rcp r0.w, r0.w
      mov r2.z, c4.z
      add r4, -r2.z, c19
      sge r1.x, c23.z, r1_abs.z
      lrp r2.x, r1.x, c23.z, r1.z
      rcp r1.x, r2.x
      mul_sat r4, r1.x, r4
      add r2, -r2.z, c21
      mul_sat r1, r1.x, r2
      add r2, r0.w, -c18
      max r2, r2, c22.x
      add r1, -r4, r1
      mul r1, r1_abs, r2
      slt r2, r1, c17
      mul r1, r1, c16
      exp r4.x, r1.x
      exp r4.y, r1.y
      exp r4.z, r1.z
      exp r4.w, r1.w
      mul r1, r2, r4
      mad r2, r2, r4, -c22.w
      mul r4.xyz, r2.x, c10
      mov r4.w, r1.x
      mul r4, r1.y, r4
      mad r4.xyz, r2.y, c11, r4
      mul r4, r1.z, r4
      mad r4.xyz, r2.z, c12, r4
      mul r1, r1.w, r4
      mad o3.xyz, r2.w, c13, r1
      mov o3.w, r1.w
    endif
    mov o0.xy, v3
    mov o1, v4
    mov o2, v5
    mov o4.w, r3.z
    mov o5.xyz, r0
    mov o5.w, r3.w

// This shader is responsible for both the sun (which is already correct) and
// the glow around the sun (which varies wildly with convergence). In order to
// fix this for both, I'm doing a simple skybox depth correction that moves
// both of them to infinty independent of their original placements (and since
// the sun is already there it won't move), which turns out to simplify down to
// X += separation * convergence

texldl r31, c220.z, s0
mad r3.x, r31.x, r31.y, r3.x

    mov o6, r3

// approximately 115 instruction slots used
