// UI - some fonts

//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4x4 Transform;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   Transform    c6       4
//

    vs_3_0
    dcl_position v0
    dcl_texcoord v1
    dcl_color v2
    dcl_texcoord o0.xy
    dcl_color o1
    dcl_position o2

def c220, 0, 1, 0.0625, 0.5
def c221, 510, 0.1, 0, 0
dcl_2d s0

    mul r0, c7, v0.y
    mad r0, c6, v0.x, r0
    mad r0, c8, v0.z, r0
    mad r2, c9, v0.w, r0
    mov o0.xy, v1
    mov o1, v2.zyxw

mov r30, c200
if_eq r30.x, c220.y // Subtitle depth adjustment enabled
	// Only adjust UI elements at approximately W=510 - texture filtering
	// is not precise enough and I can't find a better way to match the
	// subtitles. This can affect in-world elements, so it must be
	// explicitly enabled.
	add r30.w, r2.w, -c221.x
	abs r30.w, r30.w
	if_lt r30.w, c221.y
		// Subtitle depth adjustment. This game already renders the
		// subtitles in the world, so we undo the stereo correction for
		// that, then apply our own with an adjustable depth.

		// The difference between the two stereo corrections is this:
		// X += S * ((W * (UI - 1)) + C)
		texldl r31, c220.z, s0
		mov r31.w, c200.z		// UI
		add r31.w, r31.w, -c220.y	// UI - 1
		mad r31.w, r2.w, r31.w, r31.y	// (W * (UI - 1)) + C
		mad r2.x, r31.x, r31.w, r2.x	// X += S * (W * (UI - 1)) + C)

	endif
endif

mov o2, r2

// approximately 6 instruction slots used
