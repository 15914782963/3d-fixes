//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DebugMode[5];
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   sampler2D MipTextureParameter;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_10;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//   float4 UniformPixelVector_7;
//   float4 UniformPixelVector_8;
//   float4 UniformPixelVector_9;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEResolution             c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DebugMode                 c7       5
//   UniformPixelVector_0      c12      1
//   UniformPixelVector_1      c13      1
//   UniformPixelVector_2      c14      1
//   UniformPixelVector_3      c15      1
//   UniformPixelVector_4      c16      1
//   UniformPixelVector_5      c17      1
//   UniformPixelVector_6      c18      1
//   UniformPixelVector_7      c19      1
//   UniformPixelVector_8      c20      1
//   UniformPixelVector_9      c21      1
//   UniformPixelVector_10     c22      1
//   SceneColorTexture         s0       1
//   NvStereoFixTexture        s1       1
//   PixelTexture2D_0          s2       1
//   PixelTexture2D_1          s3       1
//   PixelTexture2D_2          s4       1
//   PixelTexture2D_3          s5       1
//   PixelTexture2D_4          s6       1
//   MipTextureParameter       s7       1
//

    ps_3_0
    def c6, 0.75, 0.419999987, 9.99999997e-007, 1.20000005
    def c23, 0.800000012, 0.200000003, 0.349999994, 0.150000006
    def c24, 4, 0.649999976, 0.0625, 0
    def c25, 9.99999975e-006, 100000, 0, 0
    def c26, -0, 0, 1, 0
    def c27, 1, 0, 0.5, 0.400000006
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_81AB7F0A_676.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mul r0, r0.x, v1.yzxy
    dp3_pp r1.x, v0, v0
    rsq_pp r1.x, r1.x
    mul r1, r1.x, v0.zyyx
    mul_pp r2.xy, r0.ywzw, r1.zwzw
    mad_pp r1.yz, r0.xxzw, r1.xxyw, -r2.xxyw
    mul r2.xy, r1.yzzw, v1.w
    mad r1.yz, vPos.xxyw, c0.xxyw, c0.xzww
    mul r3.xy, r1.yzzw, v4.w
    dp3_pp r0.w, v3, v3
    rsq_pp r0.w, r0.w
    mul_pp r1.y, r0.w, v3.z
    texld r4, v2, s7
    mad r4, r4.xyzx, c27.xxxy, c27.yyyx
    mul r5, r4, c7.y
    mad r4, c7.x, r4, r5
    mov r5.zw, c7
    mul r6.xyz, r5.z, c4
    mov r6.w, c7.z
    add r4, r4, r6
    mad r4, r5.w, c27.zzxx, r4
    mov r5.xyw, c27
    mad r4, c8.x, r5.yxyx, r4
    mov r6.yw, c8.y
    mul r6.xyz, r6.y, c5
    add r4, r4, r6
    mul r6.xy, c13, v2
    mov r7.xy, c13
    mad r6.zw, v2.xyxy, r7.xyxy, c14.xyxy
    texld_pp r8, r6.zwzw, s2
    mad r6.zw, r6.xyxy, r5.w, c15.xyxy
    texld_pp r9, r6.zwzw, s2
    mad r6.zw, r8.xyxy, c6.x, r9.xyxy
    mov r8.y, c6.y
    mad r7.zw, r6.xyxy, r8.y, c16.xyxy
    texld_pp r8, r7.zwzw, s3
    add_sat r6.zw, r6, r8.xyxy
    mad r6.zw, v2.xyxy, c13.xyxy, r6
    texld r8, r6.zwzw, s4
    max r6.zw, r8_abs.xyxy, c6.z
    log r8.x, r6.z
    log r8.y, r6.w
    mul r6.zw, r8.xyxy, c6.w
    exp_sat r8.x, r6.z
    exp_sat r8.y, r6.w
    mov r9.xyz, c23
    mad r6.zw, r6.xyxy, r9.x, c17.xyxy
    texld_pp r10, r6.zwzw, s2
    mad r6.zw, r6.xyxy, r9.y, c18.xyxy
    texld_pp r11, r6.zwzw, s2
    mad_sat r6.zw, r10.xyxy, c6.x, r11.xyxy
    mad r6.zw, v2.xyxy, c13.xyxy, r6
    texld r10, r6.zwzw, s4
    max r6.zw, r10_abs.xyxy, c6.z
    log r10.x, r6.z
    log r10.y, r6.w
    mul r6.zw, r10.xyxy, c23.y
    exp_sat r10.x, r6.z
    exp_sat r10.y, r6.w
    mul r6.zw, r8.xyxy, r10.xyxy
    texld r8, r6.zwzw, s5
    mad r6.zw, v2.xyxy, r7.xyxy, c19.xyxy
    texld_pp r7, r6.zwzw, s3
    mad r5.zw, r6.xyxy, r5.w, c20.xyxy
    texld_pp r10, r5.zwzw, s3
    mad_sat r5.zw, r7.xyxy, c6.x, r10.xyxy
    mad r5.zw, v2.xyxy, c13.xyxy, r5
    texld r7, r5.zwzw, s4
    max r5.zw, r7_abs.xyxy, c6.z
    mul r6.zw, r5, r5
    mul_sat r5.zw, r5, r6
    mad r6.zw, r6.xyxy, r9.z, c21.xyxy
    texld_pp r10, r6.zwzw, s3
    mad r6.xy, r6, r9.y, c22
    texld_pp r6, r6, s3
    mad_sat r6.xy, r10, c27.z, r6
    mad r6.xy, v2, c13, r6
    texld r6, r6, s4
    max r7.zw, r6_abs.xyxy, c6.z
    mul r6.zw, r7, r7
    mul_sat r6.zw, r6, r7
    mul r5.zw, r5, r6
    texld r9, r5.zwzw, s6
    mad r8.xyz, r8, c23.w, r9
    mad r0.w, v3.z, -r0.w, c27.x
    cmp r0.w, r1.y, r0_abs.w, c27.x
    add r1.y, r0.w, -c6.z
    mul r1.z, r0.w, r0.w
    mul r0.w, r0.w, r1.z
    mul r9.xyz, r0.w, r8
    mul r9.xyz, r9, c24.x
    cmp r9.xyz, r1.y, r9, c27.y
    add r8.xyz, r8, r9
    mov_sat r7.xy, r7
    mov_sat r6.xy, r6
    mul r1.yz, r6.xxyw, r7.xxyw
    texld r6, r1.yzzw, s6
    mul r6.xyz, r6, c24.y
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r7, c24.zwzw, s1
      add r1.y, -r7.y, v4.w
      mad r3.z, r7.x, r1.y, r3.x
      mov r3.w, v4.w
      mov r7.xyz, r3.zyww
    else
      mov r7.xyz, c27.y
    endif
    mov r3.z, v4.w
    cmp r3.xyz, -r0.w, r3, r7
    rcp r0.w, r3.z
    mul r1.yz, r0.w, r3.xxyw
    mad r3.xy, r1.yzzw, c1, c1.wzzw
    mov r3.zw, c27.y
    texldl r3, r3, s0
    add r0.w, r3.w, -c2.y
    add r1.y, -r0.w, c25.x
    rcp r0.w, r0.w
    cmp r0.w, r1.y, c25.y, r0.w
    mad r0.w, c2.x, r0.w, -v4.w
    mul_sat r0.w, r0.w, c23.x
    add r0.w, -r0.w, c27.x
    mad r3.xyz, r0.w, r6, r8
    add_pp r3.xyz, r3, c12
    mov r3.w, c27.x
    mad r3, c8.z, r3, r4
    mov_pp r2.z, r1.x
    mov_pp r2.w, r0.y
    mad r4.xyz, r2.zyww, c27.z, c27.z
    mov r4.w, c27.x
    mad r3, c8.w, r4, r3
    mov r0.x, r1.w
    mov r0.y, r2.x
    mad r0.xyz, r0, c27.z, c27.z
    mov r0.w, c27.x
    mad r0, c9.x, r0, r3
    add r0, r0, c9.y
    add r0, r0, c9.z
    mov r1.w, c9.w
    mad r0, r1.w, c26.xxyz, r0
    mad r0, c10.x, r5.yyyx, r0
    mad r0, c10.y, r5.yyyx, r0
    mad r0, c10.z, r5.yyyx, r0
    mad r0, c10.w, r5.yyyx, r0
    mad r0, c11.x, r5.yyyx, r0
    mad r0, c11.y, r5.yyyx, r0
    mad r0, c11.z, r5.yyyx, r0
    mad oC0, c11.w, r5.yyyx, r0

// approximately 153 instruction slots used (20 texture, 133 arithmetic)
