//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   sampler2D HeightmapTexture;
//   float3x3 LocalToWorldMatrix;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   DNEResolution            c0       1
//   ScreenPositionScaleBias  c1       1
//   MinZ_MaxZRatio           c2       1
//   NvStereoEnabled          c3       1
//   DiffuseOverrideParameter c4       1
//   LocalToWorldMatrix       c7       3
//   UniformPixelVector_0     c10      1
//   UniformPixelVector_1     c11      1
//   UpperSkyColor            c12      1
//   AmbientColorAndSkyFactor c13      1
//   NvStereoFixTexture       s0       1
//   HeightmapTexture         s1       1
//   VAOBuffer                s2       1
//

    ps_3_0
    def c5, 2, -1, 1, 0
    def c6, 0.300000012, 0.589999974, 0.109999999, 0
    def c14, 0.0625, 0, 0, 0
    dcl_texcoord2_pp v0.xyz
    dcl_texcoord5 v1.w
    dcl_texcoord1 v2.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_D258F400_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    texld r0, v2, s1
    mad r0.xy, r0.zwzw, c5.x, c5.y
    dp2add r0.w, r0, -r0, c5.z
    rsq r0.w, r0.w
    rcp r0.z, r0.w
    dp3_pp r0.w, c7, r0
    dp3_pp r1.x, c8, r0
    dp3_pp r0.x, c9, r0
    mad r0.yz, vPos.xxyw, c0.xxyw, c0.xzww
    mul r2.xy, r0.yzzw, v1.w
    abs r3.y, r1.x
    abs r3.xz, r0.wyxw
    dp3 r0.x, r3, c6
    mul r0.xyz, r0.x, c11
    mov r1.z, c5.z
    add r1.xyz, r1.z, -c10
    mul_pp r0.xyz, r0, r1
    mad_pp r0.xyz, r0, c4.w, c4
    mad_pp r1.xyz, v0, r0, c10
    mul r0.xyz, r0, c12
    mad_pp r0.xyz, r0, c13.w, r1
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r1, c14, s0
      add r1.y, -r1.y, v1.w
      mad r2.z, r1.x, r1.y, r2.x
      mov r2.w, v1.w
      mov r1.xyz, r2.zyww
    else
      mov r1.xyz, c5.w
    endif
    mov r2.z, v1.w
    cmp r1.xyz, -r0.w, r2, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s2
    mul_pp oC0.xyz, r0, r1.x
    rcp r0.x, v1.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 43 instruction slots used (3 texture, 40 arithmetic)
