//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4x4 DNECubemapParallaxBox;
//   float4 DNECubemapParallaxBoxCenter;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ObjectWorldPositionAndRadius;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   samplerCUBE PixelTextureCube_0;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   float3x3 WorldToLocalMatrix;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNEEnvMapParameter           c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNECubemapParallaxBox        c7       3
//   WorldToLocalMatrix           c10      3
//   DNEMiscParameter             c13      1
//   DNECubemapPosition           c14      1
//   DNECubemapParallaxBoxCenter  c15      1
//   CameraWorldPos               c16      1
//   DNEResolution                c17      1
//   ObjectWorldPositionAndRadius c18      1
//   UniformPixelVector_0         c19      1
//   UniformPixelVector_1         c20      1
//   UniformPixelVector_2         c21      1
//   UniformPixelVector_3         c22      1
//   UniformPixelVector_4         c23      1
//   UniformPixelVector_5         c24      1
//   UniformPixelVector_6         c25      1
//   UniformPixelScalars_0        c26      1
//   UniformPixelScalars_1        c27      1
//   UpperSkyColor                c28      1
//   AmbientColorAndSkyFactor     c29      1
//   NvStereoFixTexture           s0       1
//   DNEEnvironmentTexture        s1       1
//   PixelTexture2D_0             s2       1
//   PixelTexture2D_1             s3       1
//   PixelTexture2D_2             s4       1
//   PixelTexture2D_3             s5       1
//   PixelTextureCube_0           s6       1
//   VAOBuffer                    s7       1
//

    ps_3_0
    def c6, 1, 9.99999975e-006, -1, -0
    def c30, 0, 2, -5.55472994, -6.98316002
    def c31, -9.99999997e-007, 0.333333343, 0.0625, 0
    dcl_texcoord2_pp v0.xyz
    dcl_texcoord3_pp v1.xyz
    dcl_texcoord6 v2.xyz
    dcl_texcoord5 v3
    dcl_color v4.xyz
    dcl_color1 v5
    dcl_texcoord v6.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_cube s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_F45B7B74_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v5
    nrm_pp r1.xyz, v4
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v5.w
    add r3.xyz, c16, v3
    mad r4.xy, vPos, c17, c17.zwzw
    mul r4.xy, r4, v3.w
    dp3_pp r0.w, v2, v2
    rsq_pp r0.w, r0.w
    mul_pp r5.xyz, r0.w, v2
    mad_sat_pp r1.w, c13.x, v3.w, c13.y
    mad_pp r6.xyz, r5.z, c30.xxyw, -r5
    texld_pp r7, v6, s3
    mad_pp r7.yzw, r7.xxyz, c5.w, c5.xxyz
    texld_pp r8, v6, s4
    mov_sat_pp r2.w, r5.z
    max_pp r3.w, r8.w, r7.x
    mad_pp r5.w, r2.w, c30.z, c30.w
    mul_pp r2.w, r2.w, r5.w
    exp_pp r2.w, r2.w
    lrp_pp r5.w, r2.w, r3.w, r7.x
    add_pp r3.w, -r5.w, c6.x
    texld_pp r9, v6, s2
    mul_sat_pp r5.w, r9.w, c26.z
    mul_pp r6.w, r3.w, r5.w
    texld_pp r10, v6, s5
    mad r8.xyz, r9, c25, -r9
    mad_pp r8.xyz, r10.z, r8, r9
    mul_pp r8.xyz, r6.w, r8
    mul_pp r8.xyz, r8, c27.y
    mov r7.x, c6.x
    add_pp r10.xyw, r7.x, -c19.xyzz
    mul_pp r8.xyz, r8, r10.xyww
    mad_pp r8.xyz, r8, c4.w, c4
    add_pp r10.xyw, r3.xyzz, -c18.xyzz
    mul r11.xyz, r10.y, c11
    mad r11.xyz, c10, r10.x, r11
    mad_pp r10.xyw, c12.xyzz, r10.w, r11.xyzz
    dp3 r6.w, r1, r5
    dp3 r7.x, r2, r5
    dp3 r9.w, r0, r5
    mul r11.xyz, r7.x, c11
    mad r11.xyz, c10, r6.w, r11
    mad_pp r11.xyz, c12, r9.w, r11
    nrm_pp r12.xyz, r11
    add r10.xyw, r10, -c21.xyzz
    rcp r11.x, c20.x
    rcp r11.y, c20.y
    rcp r11.z, c20.z
    mul r13.xyz, r10.xyww, r11
    mad r12.xyz, -r12, r11, c6.y
    mad r14.xyz, r10.xyww, -r11, c6.x
    rcp r15.x, r12.x
    rcp r15.y, r12.y
    rcp r15.z, r12.z
    mul r14.xyz, r14, r15
    mad r10.xyw, r10, -r11.xyzz, c6.z
    mul r10.xyw, r15.xyzz, r10
    max r15.xyz, r14, r10.xyww
    min r6.w, r15.z, r15.y
    min r7.x, r6.w, r15.x
    mad r10.xyw, r12.xyzz, r7.x, r13.xyzz
    mad r10.xyw, c22.xyzz, -r11.xyzz, r10
    mul_pp r10.xyw, r10, c20.xyzz
    mul r11, r10.xyyx, c23.xxyy
    mad_pp r10.xy, r11.zwzw, c6.xzzw, r11
    mad_pp r11.xyz, v2, r0.w, c6.wwzw
    mad_pp r5.xyz, c26.x, r11, -r5
    dp3_pp r11.x, r1, r5
    dp3_pp r11.y, r2, r5
    dp3_pp r11.z, r0, r5
    add_pp r11.xyz, r10.xyww, r11
    mov r11.w, c26.y
    texldl_pp r11, r11, s6
    add r0.w, r5.w, c31.x
    pow_pp r6.w, r5.w, c24.w
    add_pp r5.x, -r6.w, c6.x
    cmp_pp r0.w, r0.w, r5.x, c6.x
    add r5.x, -r0.w, c6.x
    mad_pp r0.w, c26.w, r5.x, r0.w
    mul_pp r5.xyz, r11, r0.w
    mul_pp r5.xyz, r5, c24
    mul_pp r9.xyz, r9, r10.z
    mul_pp r9.xyz, r9, c25
    dp3_pp r1.x, r1, r6
    dp3_pp r1.y, r2, r6
    dp3_pp r1.z, r0, r6
    mul_pp r0.xyz, r1.y, c8
    mad_pp r0.xyz, c7, r1.x, r0
    mad_pp r0.xyz, c9, r1.z, r0
    add r2.xyz, r3, -c15
    mul r6.xyz, r2.y, c8
    mad r6.xyz, c7, r2.x, r6
    mad r2.xyz, c9, r2.z, r6
    add r6.xyz, -r2, c6.x
    rcp r10.x, r0.x
    rcp r10.y, r0.y
    rcp r10.z, r0.z
    mul_pp r0.xyz, r6, r10
    add r2.xyz, -r2, c6.z
    mul_pp r2.xyz, r10, r2
    max_pp r6.xyz, r0, r2
    min_pp r0.x, r6.z, r6.y
    min_pp r2.x, r0.x, r6.x
    mad r0.xyz, r2.x, r1, r3
    add_pp r0.xyz, r0, -c14
    mad_pp r0.w, c13.z, r8.w, c13.w
    texldl_pp r0, r0, s1
    max_pp r1.xyz, r8.w, r7.yzww
    lrp_pp r3.xyz, r2.w, r1, r7.yzww
    mul_pp r0.xyz, r0, r3
    mul_pp r0.xyz, r0, c0
    mul_pp r0.xyz, r0, r1.w
    mad_pp r0.xyz, c27.x, r9, r0
    mad_pp r0.xyz, r5, r3.w, r0
    add_pp r0.xyz, r0, c19
    dp3_pp r0.w, v1, c31.y
    mul_pp r1.xyz, r0.w, v0
    mad_pp r0.xyz, r8, r1, r0
    mul r1.xyz, r8, c28
    mad_pp r0.xyz, r1, c29.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r1, c31.zwzw, s0
      add r1.y, -r1.y, v3.w
      mad r4.z, r1.x, r1.y, r4.x
      mov r4.w, v3.w
      mov r1.xyz, r4.zyww
    else
      mov r1.xyz, c30.x
    endif
    mov r4.z, v3.w
    cmp r1.xyz, -r0.w, r4, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s7
    mul r1.yzw, r8.xxyz, c29.xxyz
    mad_pp oC0.xyz, r0, r1.x, r1.yzww
    rcp r0.x, v3.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 154 instruction slots used (10 texture, 144 arithmetic)
