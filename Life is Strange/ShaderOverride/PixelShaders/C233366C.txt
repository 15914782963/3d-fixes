//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float3 DistanceFieldParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D PixelTexture2D_6;
//   sampler2D PixelTexture2D_7;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowTexture;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   CameraWorldPos               c8       1
//   DNEResolution                c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelVector_1         c11      1
//   UniformPixelScalars_0        c12      1
//   LightColorAndFalloffExponent c13      1
//   DistanceFieldParameters      c14      1
//   SpotDirection                c15      1
//   SpotAngles                   c16      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//   PixelTexture2D_4             s7       1
//   PixelTexture2D_5             s8       1
//   PixelTexture2D_6             s9       1
//   PixelTexture2D_7             s10      1
//   ShadowTexture                s11      1
//

    ps_3_0
    def c2, 2, -1, 0, 15
    def c6, 20, 0, 0.333332986, 0.666665971
    def c17, -0.5, 0.949999988, 0.666666687, -0.899999976
    def c18, 0.00390625, 0.0078125, 9.99999997e-007, 0.125
    def c19, 10, 1.52876604, 0.0625, 0
    def c20, 0.693147004, 2, -5.55472994, -6.98316002
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xy
    dcl_texcoord3_pp v2.w
    dcl_texcoord4_pp v3.xyz
    dcl_texcoord5 v4.xyz
    dcl_texcoord6 v5.xyz
    dcl_texcoord7 v6.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9
    dcl_2d s10
    dcl_2d s11

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_C233366C_242.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    add r0.xy, c8, v6
    dp3_pp r0.z, v5, v5
    rsq_pp r0.z, r0.z
    mad_sat_pp r0.w, c7.x, v6.w, c7.y
    mul_pp r0.w, r0.w, c0.x
    texld_pp r1, v1, s3
    mad_pp r1.xyz, r1, c2.x, c2.y
    texld_pp r2, v1, s4
    mad_pp r2.xyz, r2, c2.x, c2.y
    texld_pp r3, v1, s5
    max_pp r4.x, r3.x, c2.z
    add r3.yz, r4.x, c17.xxyw
    mad r3.z, r3.z, c17.z, c17.w
    mul_sat_pp r3.z, r3.z, c2.w
    cmp_pp r3.y, r3.y, -c2.y, r3.z
    add r3.z, r3.x, c17.x
    mov_sat r3.w, r3.x
    add r3.w, r3.w, c17.x
    mul_sat_pp r3.w, r3.w, c6.x
    cmp_pp r3.z, r3.z, r3.w, c2.z
    mad_sat_pp r3.x, r3.y, r3.x, r3.z
    add_pp r3.y, c17.x, v2.w
    mad_sat_pp r3.x, r3.y, c2.x, r3.x
    lrp_pp r4.xyz, r3.x, r2, r1
    nrm_pp r1.xyz, r4
    nrm_pp r2.xyz, v3
    mad_pp r3.yzw, v5.xxyz, r0.z, r2.xxyz
    nrm_pp r4.xyz, r3.yzww
    lrp_pp r0.z, r3.x, r2.w, r1.w
    mov r3.yzw, c6
    add_pp r3.yzw, r3, c12.y
    mul_pp r0.xy, r0, c18
    texld_pp r5, r0, s10
    add_pp r3.yzw, r3, r5.xxyz
    frc_pp r3.yzw, r3
    add r3.yzw, -r3, -c2.y
    max r6.xyz, c18.z, r3.yzww
    mul r3.yzw, r6.xxyz, r6.xxyz
    mul_pp r3.yzw, r3, r6.xxyz
    frc_pp r6.xyz, -r5
    add_sat_pp r5.xyz, r5, r6
    mul_pp r0.xy, r3.yzzw, r5
    add_pp r0.x, r0.y, r0.x
    mad_pp r0.x, r3.w, r5.z, r0.x
    mul_pp r0.x, r0.x, v2.w
    mad r0.y, r0.z, -c2.x, -c2.y
    mad_pp r0.x, r0.x, r0.y, r0.z
    mad_pp r0.x, r0.x, c19.x, c19.y
    exp_pp r0.x, r0.x
    texld_pp r5, v0, s11
    add r0.y, r5.x, c14.x
    mul_sat_pp r0.y, r0.y, c14.y
    pow_sat_pp r5.x, r0.y, c14.z
    dp3 r0.y, v4, v4
    rsq r0.z, r0.y
    mul r3.yzw, r0.z, v4.xxyz
    dp3 r0.z, r3.yzww, -c15
    add r0.z, r0.z, -c16.x
    mul_sat r0.z, r0.z, c16.y
    mul_pp r5.z, r0.z, r0.z
    mov r5.yw, -c17.x
    texld_pp r6, r5, s0
    texld_pp r5, r5.zwzw, s0
    add r0.z, -r0.y, -c2.y
    mul r0.z, r6.x, r0.z
    mul r7, r5.x, r0.z
    mov r8, r7
    texkill r8
    if b0
      mad r3.yz, vPos.xxyw, c9.xxyw, c9.xzww
      mul r7.xy, r3.yzzw, v6.w
      if_ne c3.x, -c3.x
        texld r8, c19.zwzw, s1
        add r0.z, -r8.y, v6.w
        mad r7.z, r8.x, r0.z, r7.x
        mov r7.xy, r7.zyzw
        mov r0.z, v6.w
      else
        mov r0.z, v6.w
      endif
      rcp r0.z, r0.z
      mul r3.yz, r0.z, r7.xxyw
      mad r3.yz, r3, c1.xxyw, c1.xwzw
      texld r8, r3.yzzw, s2
      mul_pp r3.yzw, r8.xxyz, r8.xxyz
      mul_pp r3.yzw, r3, r6.x
    else
      mov_pp r3.yzw, r6.x
    endif
    texld_pp r6, v1, s8
    texld_pp r8, v1, s9
    lrp_pp r5.yzw, r3.x, r8.xxyz, r6.xxyz
    mad_pp r5.yzw, r5, c5.w, c5.xxyz
    mov_sat r0.y, r0.y
    add r0.y, -r0.y, -c2.y
    pow_sat_pp r6.x, r0.y, c13.w
    mov r6.y, -c17.x
    texld_pp r6, r6, s0
    texld_pp r8, v1, s6
    texld_pp r9, v1, s7
    lrp_pp r6.yzw, r3.x, r9.xxyz, r8.xxyz
    mul_pp r6.yzw, r6, c11.xxyz
    mov r0.y, c2.y
    add_pp r7.xyz, -r0.y, -c10
    mul_pp r6.yzw, r6, r7.xxyz
    mad_pp r6.yzw, r6, c4.w, c4.xxyz
    mul_pp r0.y, r5.x, r6.x
    dp3_sat_pp r0.z, r1, r2
    mul_pp r1.w, r0.z, c0.w
    mul_sat_pp r0.y, r0.y, c0.y
    mul_pp r0.y, r0.y, r0.y
    mul_pp r0.x, r0.x, r0.y
    dp3_sat_pp r0.y, r1, r4
    mad_pp r1.x, r0.x, c20.x, c20.y
    mul_pp r1.x, r1.x, c18.w
    mad r0.x, r0.x, r0.y, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r1.x
    mul_pp r0.x, r0.z, r0.x
    mul_pp r0.x, r0.w, r0.x
    dp3_sat_pp r0.y, r2, r4
    mad_pp r0.z, r0.y, c20.z, c20.w
    mul_pp r0.y, r0.y, r0.z
    exp_pp r0.y, r0.y
    lrp_pp r1.xyz, r0.y, -c2.y, r5.yzww
    mul_pp r0.xyz, r0.x, r1
    mad_pp r0.xyz, r6.yzww, r1.w, r0
    mul_pp r0.xyz, r3.yzww, r0
    mul r0.xyz, r0, c13
    mul r0.xyz, r6.x, r0
    mul r0.xyz, r5.x, r0
    cmp oC0.xyz, -r7.w, c2.z, r0
    mov oC0.w, c2.z

// approximately 147 instruction slots used (14 texture, 133 arithmetic)
