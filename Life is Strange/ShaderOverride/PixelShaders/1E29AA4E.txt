//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEResolution           c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   UniformPixelVector_1    c7       1
//   UniformPixelVector_2    c8       1
//   UniformPixelScalars_1   c9       1
//   UniformPixelScalars_2   c10      1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//

    ps_3_0
    def c4, 0.0865169987, 0.138745993, 1, 0
    def c5, 0.5, -9.99999997e-007, -0.480000019, 0.980000019
    def c6, 0.066666998, 0.315685004, 0.800000012, 9.99999975e-006
    def c11, 50, 5, 0.0625, 0
    def c12, 100000, 10, -0.00100000005, 1000
    def c13, -0.00392156886, 0, 0, 0
    dcl_texcoord v0.xyz
    dcl_texcoord4 v1.w
    dcl_texcoord5 v2.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_1E29AA4E_281.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v2.w
    mov r1.x, c5.x
    mul r1.x, r1.x, c10.y
    add r1.y, c5.y, v0_abs.z
    mul r1.z, v0_abs.z, v0_abs.z
    mul r1.z, r1.z, v0_abs.z
    mad r1.z, r1.z, c5.z, c5.w
    cmp r1.y, r1.y, r1.z, c5.w
    mov r2.xy, c4
    mad r1.zw, v0.xyxy, r2.xyxy, c7.xyxy
    texld_pp r2, r1.zwzw, s2
    dp2add_pp r1.z, r2, -r2, c4.z
    max_pp r2.w, r1.z, c4.w
    rsq_pp r1.z, r2.w
    rcp_pp r2.z, r1.z
    mov r3.xy, c6
    mad r1.zw, v0.xyxy, r3.xyxy, c8.xyxy
    texld_pp r3, r1.zwzw, s2
    dp2add_pp r1.z, r3, -r3, c4.z
    max_pp r2.w, r1.z, c4.w
    rsq_pp r1.z, r2.w
    rcp_pp r3.z, r1.z
    add r2.xyz, r2, r3
    dp3 r1.z, r2, r2
    rsq r1.z, r1.z
    mul_sat r1.z, r1.z, r2.z
    add r1.y, -r1.z, r1.y
    frc r1.z, -r1.y
    add_sat r1.y, r1.z, r1.y
    mul r1.x, r1.y, r1.x
    mad r1.y, r1.y, c6.z, -r1.x
    mad r1.x, c9.w, r1.y, r1.x
    mul_sat r1.yz, c11.xxyw, v0.z
    mul r1.x, r1.x, r1.y
    add r1.y, -r1.z, c4.z
    abs r1.z, c3.x
    if_ne c3.x, -c3.x
      texld r2, c11.zwzw, s1
      add r1.w, -r2.y, v2.w
      mad r0.z, r2.x, r1.w, r0.x
      mov r0.w, v2.w
      mov r2.xyz, r0.zyww
    else
      mov r2.xyz, c4.w
    endif
    mov r0.z, v2.w
    cmp r0.xyz, -r1.z, r0, r2
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.w
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c6.w
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c12.x, r0.x
    add r0.y, -r1.y, c4.z
    mul r0.z, r0.y, c12.y
    mad r0.x, c2.x, r0.x, -v2.w
    mad r0.y, r0.y, c12.y, c12.z
    rcp r0.z, r0.z
    cmp r0.y, r0.y, r0.z, c12.w
    mul_sat r0.x, r0.y, r0.x
    mad r0, r1.x, r0.x, c13.x
    texkill r0
    rcp r0.x, v2.w
    mul oC0.w, r0.x, v1.w
    mov oC0.xyz, c4.w

// approximately 74 instruction slots used (5 texture, 69 arithmetic)
