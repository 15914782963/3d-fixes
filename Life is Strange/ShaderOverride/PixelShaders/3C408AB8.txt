//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float2 DistanceFadeParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   bool bEnableDistanceShadowFading;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   bEnableDistanceShadowFading  b1       1
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNESpecularAttenuation       c7       1
//   DNEMiscParameter             c8       1
//   DNEResolution                c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelVector_1         c11      1
//   UniformPixelScalars_0        c12      1
//   UniformPixelScalars_1        c13      1
//   LightColorAndFalloffExponent c14      1
//   DistanceFadeParameters       c15      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//   PixelTexture2D_4             s7       1
//

    ps_3_0
    def c2, 9.99999997e-007, 0.5, -1, 1
    def c6, 0.100000001, 0, 0.333332986, 0.666665971
    def c16, 6, 10, 1, 0
    def c17, 0.0500000007, -0.949999988, 10, 1.52876604
    def c18, 0.0700000003, -0.099999994, 0.800000012, 0.125
    def c19, 2089.24487, -0.330000013, 0.0625, 0
    def c20, 0.693147004, 2, -5.55472994, -6.98316002
    dcl_color1 v0.xyz
    dcl_texcoord v1.xy
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_3C408AB8_242.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v0, v0
    rsq_pp r0.x, r0.x
    dp3_pp r0.y, v3, v3
    rsq_pp r0.y, r0.y
    mad_sat_pp r0.z, c8.x, v4.w, c8.y
    mul_pp r0.z, r0.z, c7.x
    mul_pp r1.xy, c16, v1
    texld_pp r2, r1, s3
    dp2add_pp r0.w, r2, -r2, c16.z
    max_pp r1.z, r0.w, c16.w
    rsq_pp r0.w, r1.z
    rcp_pp r2.z, r0.w
    add_pp r2.xyz, r2, -c16.wwzw
    mul_pp r2.xyz, r2, c6.x
    mov r3.xy, c12
    mad_pp r3.xyz, r3.y, r3.x, c6.yzww
    texld_pp r1, r1, s4
    add_pp r3.xyz, r1, r3
    frc_pp r3.xyz, r3
    add r3.xyz, -r3, c16.z
    max r4.xyz, c2.x, r3
    mul r3.xyz, r4, r4
    mul_pp r3.xyz, r3, r3
    frc_pp r4.xyz, -r1
    add_sat_pp r1.xyz, r1, r4
    mul_pp r1.xy, r1, r3
    add_pp r0.w, r1.y, r1.x
    mad_pp r0.w, r3.z, r1.z, r0.w
    mul_pp r0.w, r0.w, c12.z
    mad_pp r0.x, v0.z, r0.x, c16.z
    mul_pp r0.x, r0.w, r0.x
    mul_pp r0.w, r0.x, c2.y
    mul_pp r1.xyz, r2, r0.w
    texld_pp r2, v1, s5
    mul_pp r1.w, r2.y, c12.w
    mad_pp r1.xyz, r1.w, r1, c16.wwzw
    nrm_pp r2.xyz, r1
    nrm_pp r1.xyz, v2
    cmp r2.w, vFace, c2.z, c2.w
    mul r2.w, r2.w, c0.x
    mul_pp r2.xyz, r2.w, r2
    mad_pp r3.xyz, v3, r0.y, r1
    nrm_pp r4.xyz, r3
    mov r3.xy, c13
    lrp_pp r0.y, r3.y, c11.y, c11.x
    lrp_pp r2.w, r0.w, c16.z, r0.y
    lrp_pp r0.y, r1.w, r2.w, c13.y
    max_pp r2.w, r0.y, c17.x
    add r0.y, r2.w, c17.y
    mad r2.w, r2.w, c17.z, c17.w
    exp_pp r2.w, r2.w
    cmp_pp r0.y, r0.y, c19.x, r2.w
    texld_pp r5, c2.wyzw, s0
    texld_pp r6, v1, s6
    add_pp r7, r6.w, c19.y
    texkill r7
    if b0
      mad r3.yz, vPos.xxyw, c9.xxyw, c9.xzww
      mul r7.xy, r3.yzzw, v4.w
      if_ne c3.x, -c3.x
        texld r8, c19.zwzw, s1
        add r2.w, -r8.y, v4.w
        mad r7.z, r8.x, r2.w, r7.x
        mov r7.xy, r7.zyzw
        mov r2.w, v4.w
      else
        mov r2.w, v4.w
      endif
      rcp r2.w, r2.w
      mul r3.yz, r2.w, r7.xxyw
      mad r3.yz, r3, c1.xxyw, c1.xwzw
      texld r7, r3.yzzw, s2
      mul_pp r3.yzw, r7.xxyz, r7.xxyz
      if b1
        dp3 r2.w, v4, v4
        rsq r2.w, r2.w
        rcp r2.w, r2.w
        add r2.w, -r2.w, c15.x
        mul_sat_pp r2.w, r2.w, c15.y
        mul_pp r2.w, r2.w, r2.w
        mad_pp r4.w, r7.w, r7.w, -r5.x
        mad_pp r5.yzw, r2.w, r4.w, r5.x
      else
        mov_pp r5.yzw, r5.x
      endif
      mul_pp r3.yzw, r3, r5
    else
      mov_pp r3.yzw, r5.x
    endif
    texld_pp r5, v1, s7
    mul_pp r7.xyz, r5, c13.x
    mul_pp r0.w, r0.w, r1.w
    mad r5.xyz, r3.x, -r5, c18.x
    mad_pp r5.xyz, r0.w, r5, r7
    mad_pp r5.xyz, r5, c5.w, c5
    mul_pp r7.xyz, r6, r6
    mad_pp r0.x, r0.x, c18.y, c18.z
    mad r7.xyz, r0.x, r7, -r6
    mad_pp r6.xyz, r1.w, r7, r6
    mov_pp r7.z, c16.z
    add_pp r7.xyz, r7.z, -c10
    mul_pp r6.xyz, r6, r7
    mad_pp r6.xyz, r6, c4.w, c4
    dp3_sat_pp r0.x, r2, r1
    mul_pp r0.w, r0.x, c7.w
    mov_sat_pp r1.w, c7.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.y, r0.y, r1.w
    dp3_sat_pp r1.w, r2, r4
    mad_pp r2.x, r0.y, c20.x, c20.y
    mul_pp r2.x, r2.x, c18.w
    mad r0.y, r0.y, r1.w, -r0.y
    exp_pp r0.y, r0.y
    mul_pp r0.y, r0.y, r2.x
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.x, r0.z, r0.x
    dp3_sat_pp r0.y, r1, r4
    mad_pp r0.z, r0.y, c20.z, c20.w
    mul_pp r0.y, r0.y, r0.z
    exp_pp r0.y, r0.y
    lrp_pp r1.xyz, r0.y, c16.z, r5
    mul_pp r0.xyz, r0.x, r1
    mad_pp r0.xyz, r6, r0.w, r0
    mul_pp r0.xyz, r3.yzww, r0
    mul oC0.xyz, r0, c14
    mov_pp oC0.w, c16.w

// approximately 139 instruction slots used (8 texture, 131 arithmetic)
