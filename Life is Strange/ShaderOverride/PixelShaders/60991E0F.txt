//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 EdgeSampleOffsets[4];
//   float2 InvRandomAngleTextureSize;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D RandomAngleTexture;
//   float4 RefiningSampleOffsets[16];
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4x4 ScreenToShadowMatrix;
//   sampler2D ShadowDepthTexture;
//   float4 ShadowModulateColor;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   InvRandomAngleTextureSize c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   RefiningSampleOffsets     c7      16
//   ScreenToShadowMatrix      c23      4
//   EdgeSampleOffsets         c27      4
//   ShadowModulateColor       c31      1
//   SceneColorTexture         s0       1
//   NvStereoFixTexture        s1       1
//   ShadowDepthTexture        s2       1
//   RandomAngleTexture        s3       1
//

    ps_3_0
    def c4, 0.0625, 0, 9.99999975e-006, 100000
    def c5, 0.999000013, 1, 0.5, -2
    def c6, 1, -1, 0, 0.125
    def c32, 9.99999975e-005, -0.999899983, 0.03125, 0.699999988
    dcl_texcoord v0.xyw
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13


// Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-unreal-shadows --only-autofixed --git --quiet CRC32_60991E0F_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

texldl r7, c220.z, s13
mov r8.xyw, v0
add r7.w, r8.w, -r7.y
mad r8.x, r7.w, r7.x, r8.x

    if_ne c3.x, -c3.x
      texld r0, c4, s1
      add r0.y, -r0.y, r8.w
      mad r0.x, r0.x, r0.y, r8.x
      mov r0.yz, r8.xyww
    else
      mov r0.xyz, r8.xyww
    endif
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.y
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c4.z
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c4.w, r0.x
    mul r0.x, r0.x, c2.x
    rcp r0.y, r8.w
    mul r0.zw, r0.y, r8.xyxy
    mul r0.zw, r0.x, r0
    mul r1, r0.w, c24

// Unreal Engine shadow fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-unreal-shadows --only-autofixed --git --quiet CRC32_60991E0F_0.txt
add r7.w, r0.x, -r7.y
mad r0.z, -r7.w, r7.x, r0.z

    mad r1, c23, r0.z, r1
    mad r1, c25, r0.x, r1
    add r1, r1, c26
    rcp r0.x, r1.w
    mul r0.zw, r0.x, r1.xyxy
    min r2.x, r1.z, c5.x
    mad r1.zw, r8.xyxy, r0.y, c5.y
    mul r1.zw, r1, c0.xyxy
    mul r1.zw, r1, c5.z
    texld r3, r1.zwzw, s3
    mad_pp r3, r3.yxyx, -c5.w, -c5.y
    mul_pp r4, r3.wzwz, c6.xyxy
    mad r5, r4.zwzw, c27.xxzz, r0.zwzw
    mad_pp r5, r3.zwzw, c27.yyww, r5
    texld_pp r6, r5, s2
    texld_pp r5, r5.zwzw, s2
    mov_pp r6.y, r5.x
    add r1.zw, r2.x, -r6.xyxy
    cmp r1.zw, r1, c6.z, c6.x
    mad r5, r4.zwzw, c28.xxzz, r0.zwzw
    mad_pp r5, r3.zwzw, c28.yyww, r5
    texld_pp r6, r5, s2
    texld_pp r5, r5.zwzw, s2
    mov_pp r6.y, r5.x
    add r2.yz, r2.x, -r6.xxyw
    cmp r2.yz, r2, c6.z, c6.x
    dp2add_pp r0.y, r2.yzzw, c6.w, c6.z
    dp2add_pp r0.y, r1.zwzw, c6.w, r0.y
    mad r5, r4.zwzw, c29.xxzz, r0.zwzw
    mad_pp r5, r3.zwzw, c29.yyww, r5
    texld_pp r6, r5, s2
    texld_pp r5, r5.zwzw, s2
    mov_pp r6.y, r5.x
    add r1.zw, r2.x, -r6.xyxy
    cmp r1.zw, r1, c6.z, c6.x
    dp2add_pp r0.y, r1.zwzw, c6.w, r0.y
    mad r4, r4, c30.xxzz, r0.zwzw
    mad_pp r3, r3, c30.yyww, r4
    texld_pp r4, r3, s2
    texld_pp r3, r3.zwzw, s2
    mov_pp r4.y, r3.x
    add r0.zw, r2.x, -r4.xyxy
    cmp r0.zw, r0, c6.z, c6.x
    dp2add_pp r0.y, r0.zwzw, c6.w, r0.y
    add r0.z, -r0.y, c32.x
    add r0.w, r0.y, c32.y
    cmp r0.w, r0.w, c6.z, c6.x
    cmp r0.z, r0.z, c4.y, r0.w
    if_ne r0.z, -r0.z
      mad_pp r3, r1.xyxy, r0.x, c7
      mul r4, r3.xyxx, c6.xxzz
      texldl_pp r4, r4, s2
      mul r3, r3.zwxx, c6.xxzz
      texldl_pp r3, r3, s2
      mad_pp r5, r1.xyxy, r0.x, c8
      mul r6, r5.xyxx, c6.xxzz
      texldl_pp r6, r6, s2
      mul r5, r5.zwxx, c6.xxzz
      texldl_pp r5, r5, s2
      mov_pp r4.y, r3.x
      mov_pp r4.z, r6.x
      mov_pp r4.w, r5.x
      add r3, r2.x, -r4
      cmp r3, r3, c6.z, c6.x
      dp4_pp r0.z, r3, c32.z
      mad_pp r3, r1.xyxy, r0.x, c9
      mul r4, r3.xyxx, c6.xxzz
      texldl r4, r4, s2
      mul r3, r3.zwxx, c6.xxzz
      texldl r3, r3, s2
      mad_pp r5, r1.xyxy, r0.x, c10
      mul r6, r5.xyxx, c6.xxzz
      texldl r6, r6, s2
      mul r5, r5.zwxx, c6.xxzz
      texldl r5, r5, s2
      mov r4.y, r3.x
      mov r4.z, r6.x
      mov r4.w, r5.x
      add r3, r2.x, -r4
      cmp r3, r3, c6.z, c6.x
      dp4_pp r0.w, r3, c32.z
      add_pp r0.z, r0.w, r0.z
      mad_pp r3, r1.xyxy, r0.x, c11
      mul r4, r3.xyxx, c6.xxzz
      texldl r4, r4, s2
      mul r3, r3.zwxx, c6.xxzz
      texldl r3, r3, s2
      mad_pp r5, r1.xyxy, r0.x, c12
      mul r6, r5.xyxx, c6.xxzz
      texldl r6, r6, s2
      mul r5, r5.zwxx, c6.xxzz
      texldl r5, r5, s2
      mov r4.y, r3.x
      mov r4.z, r6.x
      mov r4.w, r5.x
      add r3, r2.x, -r4
      cmp r3, r3, c6.z, c6.x
      dp4_pp r0.w, r3, c32.z
      add_pp r0.z, r0.w, r0.z
      mad_pp r3, r1.xyxy, r0.x, c13
      mul r4, r3.xyxx, c6.xxzz
      texldl r4, r4, s2
      mul r3, r3.zwxx, c6.xxzz
      texldl r3, r3, s2
      mad_pp r5, r1.xyxy, r0.x, c14
      mul r6, r5.xyxx, c6.xxzz
      texldl r6, r6, s2
      mul r5, r5.zwxx, c6.xxzz
      texldl r5, r5, s2
      mov r4.y, r3.x
      mov r4.z, r6.x
      mov r4.w, r5.x
      add r3, r2.x, -r4
      cmp r3, r3, c6.z, c6.x
      dp4_pp r0.w, r3, c32.z
      add_pp r0.z, r0.w, r0.z
      mad_pp r3, r1.xyxy, r0.x, c15
      mul r4, r3.xyxx, c6.xxzz
      texldl r4, r4, s2
      mul r3, r3.zwxx, c6.xxzz
      texldl r3, r3, s2
      mad_pp r5, r1.xyxy, r0.x, c16
      mul r6, r5.xyxx, c6.xxzz
      texldl r6, r6, s2
      mul r5, r5.zwxx, c6.xxzz
      texldl r5, r5, s2
      mov r4.y, r3.x
      mov r4.z, r6.x
      mov r4.w, r5.x
      add r3, r2.x, -r4
      cmp r3, r3, c6.z, c6.x
      dp4_pp r0.w, r3, c32.z
      add_pp r0.z, r0.w, r0.z
      mad_pp r3, r1.xyxy, r0.x, c17
      mul r4, r3.xyxx, c6.xxzz
      texldl r4, r4, s2
      mul r3, r3.zwxx, c6.xxzz
      texldl r3, r3, s2
      mad_pp r5, r1.xyxy, r0.x, c18
      mul r6, r5.xyxx, c6.xxzz
      texldl r6, r6, s2
      mul r5, r5.zwxx, c6.xxzz
      texldl r5, r5, s2
      mov r4.y, r3.x
      mov r4.z, r6.x
      mov r4.w, r5.x
      add r3, r2.x, -r4
      cmp r3, r3, c6.z, c6.x
      dp4_pp r0.w, r3, c32.z
      add_pp r0.z, r0.w, r0.z
      mad_pp r3, r1.xyxy, r0.x, c19
      mul r4, r3.xyxx, c6.xxzz
      texldl r4, r4, s2
      mul r3, r3.zwxx, c6.xxzz
      texldl r3, r3, s2
      mad_pp r5, r1.xyxy, r0.x, c20
      mul r6, r5.xyxx, c6.xxzz
      texldl r6, r6, s2
      mul r5, r5.zwxx, c6.xxzz
      texldl r5, r5, s2
      mov r4.y, r3.x
      mov r4.z, r6.x
      mov r4.w, r5.x
      add r3, r2.x, -r4
      cmp r3, r3, c6.z, c6.x
      dp4_pp r0.w, r3, c32.z
      add_pp r0.z, r0.w, r0.z
      mad_pp r3, r1.xyxy, r0.x, c21
      mul r4, r3.xyxx, c6.xxzz
      texldl r4, r4, s2
      mul r3, r3.zwxx, c6.xxzz
      texldl r3, r3, s2
      mad_pp r1, r1.xyxy, r0.x, c22
      mul r5, r1.xyxx, c6.xxzz
      texldl r5, r5, s2
      mul r1, r1.zwxx, c6.xxzz
      texldl r1, r1, s2
      mov r4.y, r3.x
      mov r4.z, r5.x
      mov r4.w, r1.x
      add r1, r2.x, -r4
      cmp r1, r1, c6.z, c6.x
      dp4_pp r0.x, r1, c32.z
      add_pp r0.x, r0.x, r0.z
      lrp_pp r1.x, c32.w, r0.x, r0.y
      mov_pp r0.y, r1.x
    endif
    mul_pp r0.x, r0.y, r0.y
    mul_pp r0.x, r0.y, r0.x
    mov r0.y, c5.y
    add_pp r1, r0.y, -c31
    mad_pp oC0, r0.x, r1, c31

// approximately 255 instruction slots used (76 texture, 179 arithmetic)
