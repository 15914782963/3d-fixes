//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelVector_0;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEResolution           c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   UniformPixelVector_0    c7       1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//

    ps_3_0
    def c4, -0.5, 0, 4.19999981, 1
    def c5, -9.99999997e-007, -19.9315681, 0.0625, 0
    def c6, 9.99999975e-006, 100000, 256, -0.00100000005
    def c8, 1000, 0, 0, 0
    dcl_texcoord4 v0.w
    dcl_texcoord7_pp v1
    dcl_texcoord5 v2.w
    dcl_texcoord v3.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_8D5162C6_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v2.w
    add r1.xy, c4.x, v3
    dp2add r1.x, r1, r1, c4.y
    mul_sat r1.x, r1.x, c4.z
    add r1.x, -r1.x, c4.w
    mul r1.y, r1.x, r1.x
    mad r1.z, r1.x, r1.x, c5.x
    log r1.y, r1.y
    cmp r1.y, r1.z, r1.y, c5.y
    mul r1.y, r1.y, v1.w
    exp r1.y, r1.y
    mul r1.yzw, r1.y, v1.xxyz
    abs r2.x, c3.x
    if_ne c3.x, -c3.x
      texld r3, c5.zwzw, s1
      add r2.y, -r3.y, v2.w
      mad r0.z, r3.x, r2.y, r0.x
      mov r0.w, v2.w
      mov r2.yzw, r0.xzyw
    else
      mov r2.yzw, c4.y
    endif
    mov r0.z, v2.w
    cmp r0.xyz, -r2.x, r0, r2.yzww
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.y
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c6.x
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c6.y, r0.x
    mul r0.y, r1.x, c6.z
    mad r0.x, c2.x, r0.x, -v2.w
    mad r0.z, r1.x, c6.z, c6.w
    rcp r0.y, r0.y
    cmp r0.y, r0.z, r0.y, c8.x
    mul_sat r0.x, r0.y, r0.x
    mad_pp r0.xyz, r0.x, r1.yzww, c7
    mul_pp oC0.xyz, r0, v0.w
    mov oC0.w, c4.y

// approximately 47 instruction slots used (3 texture, 44 arithmetic)
