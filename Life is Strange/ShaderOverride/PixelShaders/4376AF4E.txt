//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEMiscParameter;
//   sampler2D DNEReflectionTexture;
//   float4 DNEResolution;
//   float4 DebugMode[5];
//   float4 DiffuseOverrideParameter;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//   float4 UniformPixelVector_7;
//   float4 UniformPixelVector_8;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEMiscParameter          c0       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DebugMode                 c7       5
//   CameraWorldPos            c12      1
//   DNEResolution             c13      1
//   UniformPixelVector_0      c14      1
//   UniformPixelVector_1      c15      1
//   UniformPixelVector_2      c16      1
//   UniformPixelVector_3      c17      1
//   UniformPixelVector_4      c18      1
//   UniformPixelVector_5      c19      1
//   UniformPixelVector_6      c20      1
//   UniformPixelVector_7      c21      1
//   UniformPixelVector_8      c22      1
//   UniformPixelScalars_0     c23      1
//   DNEReflectionTexture      s0       1
//   PixelTexture2D_0          s1       1
//   PixelTexture2D_1          s2       1
//   PixelTexture2D_2          s3       1
//   PixelTexture2D_3          s4       1
//   PixelTexture2D_4          s5       1
//

    ps_3_0
    def c1, 3.12500015e-005, 0.000624999986, 0.00022365569, 25
    def c2, 6.28318548, -3.14159274, 0.125, 0.550000012
    def c3, 4, 0.0432900488, 0.5, 1.79999995
    def c6, 0.699999988, 0.400000006, -9.99999997e-007, 2.20000005
    def c24, 0.400000036, 0.800000012, 0.5, -0.5
    def c25, -0.5, 0.315322369, 0.948984623, 0
    def c26, -0.948984623, 0.315322369, 0, 2.79415617e-005
    def c27, -5.55472994, -6.98316002, -0.0170000009, -0.330000013
    def c28, 0.0670000017, 0.330000013, 0.879999995, 0.100000001
    def c29, 0.222450897, 0.716925859, 0.06062451, -0.00885600038
    def c30, 7.7870369, 0.137931034, 0.333333343, 95
    def c31, 116, -16, -31, 0
    def c32, 15, 0.0500000007, 0.5, 1.40624998e-005
    def c33, -0, 0, 1, -0.0245999992
    def c34, 0.0299999993, 0, 1.00999999, 0.0399999991
    def c35, 1, 7.60526891e-005, 0.899999976, 0
    def c36, 0.200000003, 0, 1.00999999, -0.330000013
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord6 v2.xyz
    dcl_texcoord7 v3.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15

    mad r0.xy, vPos, c13, c13.zwzw
    mul r0.xy, r0, v3.w
    rcp r0.z, v3.w
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c24.zwzw, c24.z
    add r1, c12.xyxy, v3.xyxy
    add_pp r0.zw, r1, c25.x
    dp2add_pp r2.x, c25.yzzw, r0.zwzw, c25.w
    dp2add_pp r2.y, c26, r0.zwzw, c26.z
    add_pp r2, r2.xyxy, -c25.x
    mov r0.w, c26.w
    mad_pp r0.zw, r2.xyxy, r0.w, c15.xyxy
    mov r3.xyw, c35
    mad_pp r2.xy, r2.zwzw, r3.y, c16
    texld_pp r2, r2, s1
    texld_pp r4, r0.zwzw, s1
    dp2add_pp r0.z, r4, -r4, c35.x
    max_pp r2.w, r0.z, c25.w
    rsq_pp r0.z, r2.w
    rcp_pp r4.z, r0.z
    dp2add_pp r0.z, r2, -r2, c35.x
    max_pp r2.w, r0.z, c25.w
    rsq_pp r0.z, r2.w
    rcp_pp r2.z, r0.z
    mad_pp r2.xyz, r2, -c35.z, r4
    dp3_pp r0.z, r2, r2
    rsq_pp r0.z, r0.z
    mad_pp r2.xyz, r2, r0.z, -c35.wwxw
    mad_pp r4.xyz, r2, c36.x, c36.yyzw
    mad_pp r2.xyz, r2, c34.x, c34.yyzw
    nrm_pp r5.xyz, r2
    dp3_pp r0.z, r4, r4
    rsq_pp r0.z, r0.z
    mul_pp r0.zw, r0.z, r4.xyxy
    mad_pp r0.xy, r5, r0.zwzw, r0
    mov r2, c1
    mad_pp r3.yz, r1.xzww, r2.x, c19.xxyw
    texld_pp r4, r3.yzzw, s3
    mad_pp r3.yz, r1.xzww, r2.x, c20.xxyw
    texld_pp r6, r3.yzzw, s3
    add_pp r2.x, r4.y, r6.y
    mad_pp r1.xy, r1, r2.z, c21
    texld_pp r4, r1, s3
    add_pp r1.x, r2.x, r4.y
    mad_pp r1.y, r1.x, r2.w, c23.x
    mad_pp r2.xy, r1.zwzw, r2.y, c22
    texld_pp r2, r2, s5
    mad_pp r1.y, r2.x, c32.x, r1.y
    mad_pp r1.y, r1.y, c32.y, c32.z
    frc_pp r1.y, r1.y
    mad_pp r1.y, r1.y, c2.x, c2.y
    sincos_pp r2.y, r1.y
    add_pp r1.y, r2.y, c35.x
    mad_pp r1.y, r1.y, c2.z, c2.w
    mad_pp r0.w, -c0.w, r1.y, c0.w
    mov r0.z, c25.w

// DNERefelctionTexture fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i -f --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed CRC32_4376AF4E_166.txt
texldl r9, c220.z, s15
mad r0.x, -r9.x, c220.w, r0.x

    texldl_pp r0, r0, s0
    nrm_pp r2.xyz, v2
    dp3_sat_pp r0.w, r5, r2
    mad_pp r2.x, r0.w, c27.x, c27.y
    mul_pp r0.w, r0.w, r2.x
    exp_pp r0.w, r0.w
    mov r2.w, c34.w
    mad_pp r2.xyz, c5.w, r2.w, c5
    max_pp r4.xyz, r1.y, r2
    log r1.y, r1.y
    mul r1.y, r1.y, c6.w
    exp r6.xyz, r1.y
    lrp_pp r7.xyz, r0.w, r4, r2
    mul_pp r0.xyz, r0, r7
    mul_pp r0.xyz, r0, c0.z
    mad_sat_pp r0.w, c0.x, v3.w, c0.y
    mad_pp r0.xyz, r0.w, r0, c14
    mul_pp r3.yz, r1.xzww, c1.x
    texld_pp r4, r3.yzzw, s2
    mov_pp r4.x, c3.x
    mad_pp r1.y, r4.w, r4.x, c23.x
    mad_pp r1.y, r1.y, c3.y, c3.z
    frc_pp r1.y, r1.y
    mad_pp r1.y, r1.y, c2.x, c2.y
    sincos_pp r4.y, r1.y
    add_pp r1.y, r4.y, c35.x
    mul_pp r1.y, r1.y, -c25.x
    mov r4.w, c32.w
    mad_pp r3.yz, r1.xzww, r4.w, c17.xxyw
    mad_pp r1.zw, r1, r4.w, c18.xyxy
    texld_pp r4, r1.zwzw, s2
    texld_pp r7, r3.yzzw, s2
    lrp_pp r3.y, r1.y, r4.w, r7.w
    lrp_pp r3.z, r1.y, r7.w, r4.w
    add_pp r1.y, -r3.z, c35.x
    mad_pp r1.y, r1.y, c24.x, c24.y
    mad_pp r1.z, r3.y, c6.x, c6.y
    mul_pp r1.x, r1.x, r1.z
    mul_sat_pp r1.x, r1.x, c3.w
    add r1.z, r1.x, c6.z
    mul_pp r1.x, r1.x, r1.x
    cmp_pp r1.x, r1.z, r1.x, c25.w
    texld_pp r4, r1.x, s4
    mul_pp r1.xyz, r1.y, r4
    add_pp r4.xyz, r3.x, -c14
    mul_pp r1.xyz, r1, r4
    mad_pp r1.xyz, r1, c4.w, c4
    mul r4, r3.wxwx, c7.xxyy
    add r4, r4.zzzw, r4.xxxy
    mov r1.w, c35.x
    mad r4, c7.z, r1, r4
    mad r7.xyz, r5, -c25.x, -c25.x
    mov r7.w, c35.x
    mad r4, c7.w, r7, r4
    mov r6.w, c35.x
    mad r4, c8.x, r6, r4
    mov r2.w, c35.x
    mad r4, c8.y, r2, r4
    mov r0.w, c35.x
    mad r0, c8.z, r0, r4
    nrm r4.xyz, v0
    dp3 r6.x, r4, r5
    nrm r7.xyz, v1
    dp3 r6.z, r7, r5
    mul_pp r8.xyz, r4.yzxw, r7.zxyw
    mad_pp r7.yzw, r7.xyzx, r4.xzxy, -r8.xxyz
    mov r4.z, r7.x
    mul r7.xyz, r7.yzww, v1.w
    dp3 r6.y, r7, r5
    mov r4.y, r7.x
    mad r4.xyz, r4, -c25.x, -c25.x
    mad r5.xyz, r6, -c25.x, -c25.x
    mov r5.w, c35.x
    mad r0, c8.w, r5, r0
    mov r4.w, c35.x
    mad r0, c9.x, r4, r0
    add r0, r0, c9.y
    add r0, r0, c9.z
    mov r1.w, c9.w
    mad r0, r1.w, c33.xxyz, r0
    mad r0, c10.x, r3.wwwx, r0
    mov r4.yw, c35.xwzx
    add r3.yz, r2, c36.w
    cmp r3.yz, r3, -c35.w, -c35.x
    add r5, -r2.xyzx, c28.xxxy
    cmp r3.yz, r5, -c25.w, r3
    add r6, r2.xyzx, c27.zzzw
    add r2.xy, -r2.yzzw, -c36.w
    cmp r2.zw, r6.xyxw, c35.w, c35.x
    cmp r1.w, r5.x, c25.w, r2.w
    cmp r2.z, r6.y, r2.z, c35.x
    cmp r4.x, r6.z, r2.z, c35.x
    cmp r1.w, r3.y, r1.w, c35.x
    cmp r4.z, r3.z, r1.w, c35.x
    mad r0, c10.y, r4, r0
    add r4, -r1.xyzx, c28.zzzw
    cmp r2.zw, r4.xyxw, c35.w, c35.x
    cmp r1.w, r4.y, r2.z, c35.x
    cmp r4.z, r4.z, r1.w, c35.x
    cmp r1.w, r2.y, c35.w, c35.x
    cmp r1.w, r2.x, c25.w, r1.w
    cmp r1.w, r5.w, c25.w, r1.w
    add r2.xyz, r1, c33.w
    cmp r2.z, r2.z, c35.w, c35.x
    cmp r2.y, r2.y, c25.w, r2.z
    cmp r2.x, r2.x, c25.w, r2.y
    cmp r4.x, -r1.w, r2.x, c25.w
    mul r1.w, r1.w, r4.x
    add r2.xy, -r1.yzzw, c28.w
    dp3 r1.x, r1, c29
    cmp r1.yz, r2.xxyw, c35.w, c35.x
    add r1.y, r1.y, r2.w
    cmp r1.y, -r1.y, c35.w, c35.x
    add r1.y, r1.z, r1.y
    cmp r1.y, -r1.y, c35.w, c35.x
    cmp r4.y, -r1.w, c25.w, r1.y
    mov r4.w, c35.x
    mad r0, c10.z, r4, r0
    mad r1.y, r1.x, c30.x, c30.y
    add r1.z, r1.x, c29.w
    pow r2.x, r1.x, c30.z
    cmp r1.x, r1.z, r2.x, r1.y
    mad r1.xy, r1.x, c31.x, c31.yzzw
    add r1.x, -r1.x, c30.w
    cmp r2.xz, r1.yyxw, c35.w, c35.x
    mov r2.yw, c35.xwzx
    mad r0, c10.w, r2, r0
    mad r0, c11.x, r3.wwwx, r0
    mad r0, c11.y, r3.wwwx, r0
    mad r0, c11.z, r3.wwwx, r0
    mad oC0, c11.w, r3.wwwx, r0

// approximately 216 instruction slots used (12 texture, 204 arithmetic)
