//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNEMiscParameter;
//   sampler2D DNEReflectionTexture;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_4;
//   float4 UniformPixelScalars_5;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float3 UpperSkyColor;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEMiscParameter          c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   CameraWorldPos            c7       1
//   DNEResolution             c8       1
//   UniformPixelVector_0      c9       1
//   UniformPixelVector_1      c10      1
//   UniformPixelVector_2      c11      1
//   UniformPixelVector_3      c12      1
//   UniformPixelVector_4      c13      1
//   UniformPixelScalars_1     c14      1
//   UniformPixelScalars_2     c15      1
//   UniformPixelScalars_3     c16      1
//   UniformPixelScalars_4     c17      1
//   UniformPixelScalars_5     c18      1
//   UpperSkyColor             c19      1
//   AmbientColorAndSkyFactor  c20      1
//   SceneColorTexture         s0       1
//   NvStereoFixTexture        s1       1
//   DNEReflectionTexture      s2       1
//   PixelTexture2D_0          s3       1
//   PixelTexture2D_1          s4       1
//

    ps_3_0
    def c6, 10, 1.52876604, -9.99999997e-007, 0.5
    def c21, 0.930000007, 0.0700000003, 0.5, -0.5
    def c22, -5.55472994, -6.98316002, 0.0625, 0
    def c23, 1, 0, 1.41789806, 0.00999999978
    def c24, 0.816496611, 0.577350259, 0, 9.99999975e-006
    def c25, 0, -0.99000001, 2, 0.0700000003
    def c26, 100000, 0, 0, 0
    def c27, -0.707106769, -0.408248305, 0.577350259, 0.707106769
    dcl_texcoord2_pp v0.xyz
    dcl_texcoord3_pp v1.xyz
    dcl_texcoord4 v2
    dcl_texcoord6 v3.xyz
    dcl_texcoord5 v4.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_A2F586BD_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine


def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

    add r0.xy, c7, v4
    mad r0.zw, vPos.xyxy, c8.xyxy, c8
    mul r1.xy, r0.zwzw, v4.w
    nrm_pp r2.xyz, v3
    mad_sat_pp r0.z, c0.x, v4.w, c0.y
    rcp r0.w, c14.x
    mul_pp r3.xy, r0.w, r0
    mad_pp r0.xy, r0, r0.w, c10
    texld_pp r4, r0, s3
    dp2add_pp r0.x, r4, -r4, c23.x
    max_pp r2.w, r0.x, c23.y
    rsq_pp r0.x, r2.w
    rcp_pp r4.z, r0.x
    mov r5.xz, c23
    mad_pp r0.xy, r3, r5.z, c11
    texld_pp r6, r0, s3
    dp2add_pp r0.x, r6, -r6, c23.x
    max_pp r2.w, r0.x, c23.y
    rsq_pp r0.x, r2.w
    rcp_pp r6.z, r0.x
    add_pp r0.xyw, r4.xyzz, r6.xyzz
    nrm_pp r4.xyz, r0.xyww
    mul_pp r0.xyw, r4.xyzz, c15.x
    frc_pp r4.xyz, r0.xyww
    add_pp r0.xyw, r0, -r4.xyzz
    rcp r2.w, c15.x
    mad_pp r4.xyz, r0.xyww, r2.w, c23.yyww
    mov r3.w, c15.w
    mad_pp r3.xy, r3.w, r3, c12
    texld_pp r3, r3, s4
    lrp_sat_pp r4.w, r3.x, c16.z, c16.w
    mad_pp r0.xyw, r0, r2.w, c25.xxzy
    mad_pp r0.xyw, r4.w, r0, c23.yyzx
    nrm_pp r6.xyz, r0.xyww
    dp3_pp r0.x, r6, r2
    mul_pp r3.yzw, r0.x, r6.xxyz
    mad_pp r2.xyz, r3.yzww, c25.z, -r2
    mov r0.y, c17.y
    mad_pp r0.w, r0.y, c6.x, c6.y
    exp_pp r0.w, r0.w
    mov r2.w, c25.w
    mad_pp r3.yzw, c5.w, r2.w, c5.xxyz
    max_pp r2.w, r0.x, c23.y
    add_pp r0.x, -r2.w, c23.x
    add r4.w, r0_abs.x, c6.z
    mul r5.y, r0_abs.x, r0_abs.x
    mad_pp r5.z, r5.y, c21.x, c21.y
    cmp_pp r5.z, r4.w, r5.z, c25.w
    add_pp r5.w, -r5.z, c23.x
    mul_pp r7.xyz, r5.w, c13
    add_pp r8.xyz, r5.x, -c9
    mul_pp r7.xyz, r7, r8
    mad_pp r7.xyz, r7, c4.w, c4
    rcp r5.x, v4.w
    mul r5.xw, r1.xyzy, r5.x
    mad r5.xw, r5, c21.zyzw, r6.xyzy
    add_pp r8.xy, r5.xwzw, c6.w
    mad_pp r8.w, -c0.w, r0.y, c0.w
    mov r8.z, c23.y

// DNERefelctionTexture fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_A2F586BD_166.txt
texldl r11, c220.z, s13
mad r8.x, -r11.x, c220.w, r8.x

    texldl_pp r8, r8, s2
    mov_sat_pp r2.w, r2.w
    max_pp r9.xyz, c17.y, r3.yzww
    mad_pp r0.y, r2.w, c22.x, c22.y
    mul_pp r0.y, r2.w, r0.y
    exp_pp r0.y, r0.y
    lrp_pp r10.xyz, r0.y, r9, r3.yzww
    mul_pp r8.xyz, r8, r10
    mul_pp r8.xyz, r8, c0.z
    mul_pp r8.xyz, r0.z, r8
    mad_pp r5.xzw, r5.z, r8.xyyz, c9.xyyz
    dp2add_sat_pp r8.x, r6.yzzw, c24, c24.z
    dp3_sat_pp r8.y, r6, c27
    dp3_sat_pp r8.z, r6.yzxw, c27.yzww
    dp2add_sat_pp r6.x, r2.yzzw, c24, c24.z
    dp3_sat_pp r6.y, r2, c27
    dp3_sat_pp r6.z, r2.yzxw, c27.yzww
    mul_pp r2.xyz, r8, r8
    mad_pp r0.yzw, r0.w, r6.xxyz, -r0.w
    exp_pp r6.x, r0.y
    exp_pp r6.y, r0.z
    exp_pp r6.z, r0.w
    dp3_pp r0.y, v1, r2
    mul_pp r0.yzw, r0.y, v0.xxyz
    mul r2.xyz, r3.yzww, v0
    dp3_pp r2.w, v1, r6
    mul r2.xyz, r2.w, r2
    mad_pp r0.yzw, r7.xxyz, r0, r2.xxyz
    add_pp r0.yzw, r0, r5.xxzw
    mul r2.xyz, r7, c19
    mad_pp r0.yzw, r2.xxyz, c20.w, r0
    mad_pp r0.yzw, r7.xxyz, c20.xxyz, r0
    dp3_pp r2.x, r4, r4
    rsq_pp r2.x, r2.x
    mul_sat_pp r2.x, r2.x, r4.z
    add r2.y, r2.x, c6.z
    mul r2.x, r2.x, r2.x
    mul_pp r2.x, r2.x, r2.x
    abs r2.z, c3.x
    if_ne c3.x, -c3.x
      texld r6, c22.zwzw, s1
      add r2.w, -r6.y, v4.w
      mad r1.z, r6.x, r2.w, r1.x
      mov r1.w, v4.w
      mov r3.yzw, r1.xzyw
    else
      mov_pp r3.yzw, c23.y
    endif
    mov r1.z, v4.w
    cmp r1.xyz, -r2.z, r1, r3.yzww
    rcp r1.z, r1.z
    mul r1.xy, r1.z, r1
    mad r1.xy, r1, c1, c1.wzzw
    mov r1.zw, c23.y
    texldl r1, r1, s0
    add r1.x, r1.w, -c2.y
    add r1.y, -r1.x, c24.w
    rcp r1.x, r1.x
    cmp r1.x, r1.y, c26.x, r1.x
    mad_pp r1.x, c2.x, r1.x, -v4.w
    lrp_pp r1.y, r3.x, c17.z, c17.w
    rcp r1.y, r1.y
    mul_sat_pp r1.x, r1.y, r1.x
    mul_pp r1.y, r1.x, r2.x
    cmp_pp r1.y, r2.y, r1.y, c23.y
    add_pp r1.y, r1.x, r1.y
    add_pp r1.y, r1.y, -c6.w
    frc_pp r1.z, -r1.y
    add_sat_pp r1.y, r1.z, r1.y
    mul_pp r0.x, r0_abs.x, r5.y
    add r1.z, -c18.y, c18.x
    mul r0.x, r0.x, r1.z
    cmp r0.x, r4.w, r0.x, c23.y
    add_pp r0.x, r0.x, c18.y
    mul_pp r0.x, r1.x, r0.x
    mul_sat_pp oC0.w, r1.y, r0.x
    mad_pp oC0.xyz, r0.yzww, v2.w, v2

// approximately 150 instruction slots used (8 texture, 142 arithmetic)
