//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_4;
//   float4 UniformPixelScalars_5;
//   float4 UniformPixelScalars_6;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 WorldIncidentLighting[7];
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   CameraWorldPos           c0       1
//   ScreenPositionScaleBias  c1       1
//   MinZ_MaxZRatio           c2       1
//   NvStereoEnabled          c3       1
//   DiffuseOverrideParameter c4       1
//   WorldIncidentLighting    c7       7
//   DNEResolution            c14      1
//   UniformPixelVector_0     c15      1
//   UniformPixelVector_1     c16      1
//   UniformPixelVector_2     c17      1
//   UniformPixelVector_3     c18      1
//   UniformPixelVector_4     c19      1
//   UniformPixelScalars_1    c20      1
//   UniformPixelScalars_2    c21      1
//   UniformPixelScalars_3    c22      1
//   UniformPixelScalars_4    c23      1
//   UniformPixelScalars_5    c24      1
//   UniformPixelScalars_6    c25      1
//   SceneColorTexture        s0       1
//   NvStereoFixTexture       s1       1
//   PixelTexture2D_0         s2       1
//   PixelTexture2D_1         s3       1
//   PixelTexture2D_2         s4       1
//

    ps_3_0
    def c5, -9.99999997e-007, 0.930000007, 0.0700000003, 0.858085215
    def c6, 3, -1, -1.02332771, 1.02332771
    def c26, -0.858085215, 0.247708291, 0.429042608, 0.886227608
    def c27, 0.0625, 0, 9.99999975e-006, 100000
    def c28, 1, 0, 1.41789806, -0.99000001
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord6 v2.xyz
    dcl_texcoord7 v3.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_84877C2E_359.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v1.w
    add r3.xy, c0, v3
    mad r3.zw, vPos.xyxy, c14.xyxy, c14
    mul r4.xy, r3.zwzw, v3.w
    nrm_pp r5.xyz, v2
    rcp r0.w, c20.x
    mul_pp r3.zw, r0.w, r3.xyxy
    mad_pp r6.xy, r3, r0.w, c16
    texld_pp r6, r6, s2
    dp2add_pp r0.w, r6, -r6, c28.x
    max_pp r1.w, r0.w, c28.y
    rsq_pp r0.w, r1.w
    rcp_pp r6.z, r0.w
    mov r7.xz, c28
    mad_pp r7.yz, r3.xzww, r7.z, c17.xxyw
    texld_pp r8, r7.yzzw, s2
    dp2add_pp r0.w, r8, -r8, c28.x
    max_pp r1.w, r0.w, c28.y
    rsq_pp r0.w, r1.w
    rcp_pp r8.z, r0.w
    add_pp r6.xyz, r6, r8
    nrm_pp r8.xyz, r6
    mul_pp r6.xyz, r8, c21.x
    frc_pp r7.yzw, r6.xxyz
    add_pp r6.xyz, r6, -r7.yzww
    rcp r0.w, c21.x
    mov r1.w, c21.w
    mad_pp r3.zw, r1.w, r3, c18.xyxy
    texld_pp r8, r3.zwzw, s3
    lrp_sat_pp r1.w, r8.x, c22.z, c22.w
    mad_pp r6.xyz, r6, r0.w, c28.yyww
    mad_pp r6.xyz, r1.w, r6, c28.yyxw
    nrm_pp r9.xyz, r6
    dp3_pp r1.z, r1, r9
    dp3_pp r1.x, r2, r9
    dp3_pp r1.y, r0, r9
    dp3_pp r0.x, r9, r5
    add r0.y, -r0.x, c28.x
    cmp_pp r0.x, r0.x, r0_abs.y, c28.x
    add r0.y, r0.x, c5.x
    mul r0.z, r0.x, r0.x
    mad r0.w, r0.z, c5.y, c5.z
    add_pp r0.w, -r0.w, c28.x
    cmp_pp r0.w, r0.y, r0.w, c5.y
    mul_pp r2.xyz, r0.w, c19
    add_pp r5.xyz, r7.x, -c15
    mul_pp r2.xyz, r2, r5
    mad_pp r2.xyz, r2, c4.w, c4
    mul r5.xyz, r1, r1.xyxw
    mad r7.y, r5.y, c6.x, c6.y
    mul r7.xz, r1, r1.y
    mad_pp r7.w, r1.z, r1.z, -r5.x
    mul r1.xyz, r1, c6.zwzw
    mul r1.w, r5.z, c5.w
    mul r5, r7, c26.xyxz
    dp4 r0.w, c8, r1
    mov r2.w, c26.w
    mad_pp r0.w, c7.x, r2.w, r0.w
    dp4 r3.z, c9, r5
    add_pp r7.x, r0.w, r3.z
    dp4 r0.w, c10, r1
    mad_pp r0.w, c7.y, r2.w, r0.w
    dp4 r3.z, c11, r5
    add_pp r7.y, r0.w, r3.z
    dp4 r0.w, c12, r1
    mad_pp r0.w, c7.z, r2.w, r0.w
    dp4 r1.x, c13, r5
    add_pp r7.z, r0.w, r1.x
    max_pp r1.xyz, r7, c28.y
    mul_pp oC0.xyz, r1, r2
    rcp r0.w, c23.x
    mad_pp r1.xy, r3, r0.w, r6
    texld_pp r1, r1, s4
    mad_sat_pp r0.w, r1.x, c23.y, c23.z
    mul_pp r0.x, r0.z, r0.x
    mov r1.x, c25.x
    add r0.z, -r1.x, c24.w
    mul r0.x, r0.z, r0.x
    cmp r0.x, r0.y, r0.x, c28.y
    add_pp r0.x, r0.x, c25.x
    if_ne c3.x, -c3.x
      texld r1, c27, s1
      add r0.y, -r1.y, v3.w
      mad r4.z, r1.x, r0.y, r4.x
      mov r4.xy, r4.zyzw
      mov r0.y, v3.w
    else
      mov r0.y, v3.w
    endif
    rcp r0.y, r0.y
    mul r0.yz, r0.y, r4.xxyw
    mad r1.xy, r0.yzzw, c1, c1.wzzw
    mov r1.zw, c28.y
    texldl r1, r1, s0
    add r0.y, r1.w, -c2.y
    add r0.z, -r0.y, c27.z
    rcp r0.y, r0.y
    cmp r0.y, r0.z, c27.w, r0.y
    mad_pp r0.y, c2.x, r0.y, -v3.w
    lrp_pp r0.z, r8.x, c25.y, c25.z
    rcp r0.z, r0.z
    mul_sat_pp r0.y, r0.z, r0.y
    mul_pp r0.x, r0.y, r0.x
    mad_sat_pp oC0.w, r0.w, c24.z, r0.x

// approximately 123 instruction slots used (7 texture, 116 arithmetic)
