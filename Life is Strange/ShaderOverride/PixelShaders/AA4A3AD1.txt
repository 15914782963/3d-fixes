//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_1;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNESpecularAttenuation       c7       1
//   DNEResolution                c8       1
//   UniformPixelVector_1         c9       1
//   UniformPixelScalars_0        c10      1
//   LightColorAndFalloffExponent c11      1
//   SpotDirection                c12      1
//   SpotAngles                   c13      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//

    ps_3_0
    def c2, -1, 1, 0, 2
    def c6, 0.200000003, 0.5, 6.28318548, -3.14159274
    def c14, -0.75, 0, 0.5, 0.100000001
    def c15, 13, 0.0769230798, 1, -0.333299994
    def c16, 1, 0.5, 0.0625, 0
    def c17, -9.99999997e-007, 15, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord2 v1.xy
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord7 v5.w
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_AA4A3AD1_723.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v4
    nrm_pp r1.xyz, v2
    cmp r0.w, vFace, c2.x, c2.y
    mul_pp r0.w, r0.w, c0.x
    mul_pp r2.xy, r0.z, r0.w
    mul_pp r2.z, r0.w, r2.y
    mad_pp r0.xyz, r2, c2.zzww, -r0
    add r1.w, c10.x, v1.x
    mad r1.w, v0.y, v0.y, r1.w
    mad r1.w, r1.w, c6.x, c6.y
    frc r1.w, r1.w
    mad r1.w, r1.w, c6.z, c6.w
    sincos r2.y, r1.w
    add r1.w, c14.x, v0.y
    frc r2.x, r1.w
    add r2.x, r1.w, -r2.x
    mul r1.w, r1.w, r2.x
    mul r2.x, r1_abs.w, r2.y
    mov r2.yw, c14.xyzz
    mul r1.w, c14.w, v1.y
    mad r2.xy, r1.w, r2, v0
    add r1.w, v1.y, v1.x
    frc r3.x, r1_abs.w
    cmp r1.w, r1.w, r3.x, -r3.x
    mul r3.x, r1.w, c15.x
    frc r3.y, r3.x
    add r3.x, -r3.y, r3.x
    frc r3.z, r1.w
    add r3.y, r1.w, -r3.z
    mul r3.xy, r3, c15.yzzw
    mad r2.xy, r2, c15.yzzw, r3
    texld r3, r2, s3
    mov r1.w, c15.w
    mad r3, c9.w, r3.w, r1.w
    texkill r3
    dp3 r1.w, v3, v3
    rsq r2.x, r1.w
    mul r3.xyz, r2.x, v3
    dp3 r2.x, r3, -c12
    add r2.x, r2.x, -c13.x
    mul_sat r2.x, r2.x, c13.y
    mul_pp r2.z, r2.x, r2.x
    texld_pp r3, c16, s0
    texld_pp r2, r2.zwzw, s0
    add r2.y, -r1.w, c2.y
    mul r2.y, r3.x, r2.y
    mul r4, r2.x, r2.y
    mov r5, r4
    texkill r5
    if b0
      mad r2.yz, vPos.xxyw, c8.xxyw, c8.xzww
      mul r4.xy, r2.yzzw, v5.w
      if_ne c3.x, -c3.x
        texld r5, c16.zwzw, s1
        add r2.y, -r5.y, v5.w
        mad r4.z, r5.x, r2.y, r4.x
        mov r4.xy, r4.zyzw
        mov r2.y, v5.w
      else
        mov r2.y, v5.w
      endif
      rcp r2.y, r2.y
      mul r2.yz, r2.y, r4.xxyw
      mad r2.yz, r2, c1.xxyw, c1.xwzw
      texld r5, r2.yzzw, s2
      mul_pp r2.yzw, r5.xxyz, r5.xxyz
      mul_pp r2.yzw, r2, r3.x
    else
      mov_pp r2.yzw, r3.x
    endif
    mov_sat r1.w, r1.w
    add r1.w, -r1.w, c2.y
    pow_sat_pp r3.x, r1.w, c11.w
    mov r3.y, c6.y
    texld_pp r3, r3, s0
    mul_sat_pp r0.w, r1.z, r0.w
    add r1.w, r0.w, c17.x
    mul r0.w, r0.w, c7.w
    dp3_sat_pp r0.x, r0, r1
    add r0.y, r0.x, c17.x
    pow_pp r1.x, r0.x, c17.y
    mul r0.x, r1.x, c7.x
    mul r1.xyz, r0.w, c4
    cmp r1.xyz, r1.w, r1, c2.z
    mul_pp r0.xzw, r0.x, c5.xyyz
    cmp_pp r0.xyz, r0.y, r0.xzww, c2.z
    add_pp r0.xyz, r0, r1
    mul_pp r0.xyz, r2.yzww, r0
    mul r0.xyz, r0, c11
    mul r0.xyz, r3.x, r0
    mul r0.xyz, r2.x, r0
    cmp oC0.xyz, -r4.w, c2.z, r0
    mov oC0.w, c2.z

// approximately 112 instruction slots used (6 texture, 106 arithmetic)
