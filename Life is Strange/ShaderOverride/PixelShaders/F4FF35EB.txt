//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D PixelTexture2D_6;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   float4 UniformPixelVector_0;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   DNEResolution                c8       1
//   UniformPixelVector_0         c9       1
//   LightColorAndFalloffExponent c10      1
//   SpotDirection                c11      1
//   SpotAngles                   c12      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//   PixelTexture2D_4             s7       1
//   PixelTexture2D_5             s8       1
//   PixelTexture2D_6             s9       1
//

    ps_3_0
    def c2, 1, 0.5, 0.0625, 0
    def c6, 0, -0.5, 0.949999988, 15
    def c13, 0.666666687, -0.899999976, 1, 20
    def c14, 2, 10, 1.52876604, 0.693147004
    def c15, 0.125, -5.55472994, -6.98316002, 0
    dcl_texcoord v0.xy
    dcl_texcoord3_pp v1.w
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord7 v5.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_F4FF35EB_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v4, v4
    rsq_pp r0.x, r0.x
    mad_sat_pp r0.y, c7.x, v5.w, c7.y
    mul_pp r0.y, r0.y, c0.x
    nrm_pp r1.xyz, v2
    mad_pp r0.xzw, v4.xyyz, r0.x, r1.xyyz
    nrm_pp r2.xyz, r0.xzww
    texld_pp r3, v0, s8
    texld_pp r4, v0, s9
    texld_pp r5, v0, s5
    max_pp r0.x, r5.x, c6.x
    add r0.xz, r0.x, c6.yyzw
    mad r0.z, r0.z, c13.x, c13.y
    mul_sat_pp r0.z, r0.z, c6.w
    cmp_pp r0.x, r0.x, c13.z, r0.z
    add r0.z, r5.x, c6.y
    mov_sat r0.w, r5.x
    add r0.w, r0.w, c6.y
    mul_sat_pp r0.w, r0.w, c13.w
    cmp_pp r0.z, r0.z, r0.w, c6.x
    mad_sat_pp r0.x, r0.x, r5.x, r0.z
    add_pp r0.z, c6.y, v1.w
    mad_sat_pp r0.x, r0.z, c14.x, r0.x
    lrp_pp r1.w, r0.x, r4.w, r3.w
    mad_pp r0.z, r1.w, c14.y, c14.z
    exp_pp r0.z, r0.z
    dp3 r0.w, v3, v3
    rsq r1.w, r0.w
    mul r3.xyz, r1.w, v3
    dp3 r1.w, r3, -c11
    add r1.w, r1.w, -c12.x
    mul_sat r1.w, r1.w, c12.y
    mul_pp r3.x, r1.w, r1.w
    texld_pp r4, c2, s0
    mov r3.yw, -c6.y
    texld_pp r5, r3, s0
    add r1.w, -r0.w, c13.z
    mul r1.w, r4.x, r1.w
    mul r6, r5.x, r1.w
    mov r7, r6
    texkill r7
    if b0
      mad r3.xy, vPos, c8, c8.zwzw
      mul r6.xy, r3, v5.w
      if_ne c3.x, -c3.x
        texld r7, c2.zwzw, s1
        add r1.w, -r7.y, v5.w
        mad r6.z, r7.x, r1.w, r6.x
        mov r6.xy, r6.zyzw
        mov r1.w, v5.w
      else
        mov r1.w, v5.w
      endif
      rcp r1.w, r1.w
      mul r3.xy, r1.w, r6
      mad r3.xy, r3, c1, c1.wzzw
      texld r7, r3, s2
      mul_pp r4.yzw, r7.xxyz, r7.xxyz
      mul_pp r4.yzw, r4, r4.x
    else
      mov_pp r4.yzw, r4.x
    endif
    texld_pp r7, v0, s6
    texld_pp r8, v0, s7
    lrp_pp r5.yzw, r0.x, r8.xxyz, r7.xxyz
    mad_pp r5.yzw, r5, c5.w, c5.xxyz
    mov_sat r0.w, r0.w
    add r0.w, -r0.w, c13.z
    pow_sat_pp r3.z, r0.w, c10.w
    texld_pp r3, r3.zwzw, s0
    texld_pp r7, v0, s3
    texld_pp r8, v0, s4
    lrp_pp r3.yzw, r0.x, r8.xxyz, r7.xxyz
    mov r6.z, c13.z
    add_pp r6.xyz, r6.z, -c9
    mul_pp r3.yzw, r3, r6.xxyz
    mad_pp r3.yzw, r3, c4.w, c4.xxyz
    mul_pp r0.x, r5.x, r3.x
    mov_sat_pp r0.w, r1.z
    mul_pp r1.w, r0.w, c0.w
    mul_sat_pp r0.x, r0.x, c0.y
    mul_pp r0.x, r0.x, r0.x
    mul_pp r0.x, r0.z, r0.x
    mov_sat_pp r0.z, r2.z
    mad_pp r2.w, r0.x, c14.w, c14.x
    mul_pp r2.w, r2.w, c15.x
    mad r0.x, r0.x, r0.z, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r2.w
    mul_pp r0.x, r0.w, r0.x
    mul_pp r0.x, r0.y, r0.x
    dp3_sat_pp r0.y, r1, r2
    mad_pp r0.z, r0.y, c15.y, c15.z
    mul_pp r0.y, r0.y, r0.z
    exp_pp r0.y, r0.y
    lrp_pp r1.xyz, r0.y, c13.z, r5.yzww
    mul_pp r0.xyz, r0.x, r1
    mad_pp r0.xyz, r3.yzww, r1.w, r0
    mul_pp r0.xyz, r4.yzww, r0
    mul r0.xyz, r0, c10
    mul r0.xyz, r3.x, r0
    mul r0.xyz, r5.x, r0
    cmp oC0.xyz, -r6.w, c6.x, r0
    mov oC0.w, c6.x

// approximately 114 instruction slots used (12 texture, 102 arithmetic)
