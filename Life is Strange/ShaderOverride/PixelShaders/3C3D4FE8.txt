//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 SampleOffsets[8];
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4x4 ScreenToShadowMatrix;
//   float3 ShadowBufferSizeAndSoftTransitionScale;
//   sampler2D ShadowDepthTexture;
//   float ShadowFadeFraction;
//
//
// Registers:
//
//   Name                                   Reg   Size
//   -------------------------------------- ----- ----
//   ShadowBufferSizeAndSoftTransitionScale c0       1
//   ScreenPositionScaleBias                c1       1
//   MinZ_MaxZRatio                         c2       1
//   NvStereoEnabled                        c3       1
//   SampleOffsets                          c7       8
//   ScreenToShadowMatrix                   c15      4
//   ShadowFadeFraction                     c19      1
//   SceneColorTexture                      s0       1
//   NvStereoFixTexture                     s1       1
//   ShadowDepthTexture                     s2       1
//

    ps_3_0
    def c4, 0.0625, 0, 9.99999975e-006, 100000
    def c5, 0.999000013, 0, 1, -1
    dcl_texcoord v0.xyw
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15


// Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-unreal-shadows --only-autofixed --git --quiet CRC32_3C3D4FE8_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

texldl r8, c220.z, s15
mov r9.xyw, v0
add r8.w, r9.w, -r8.y
mad r9.x, r8.w, r8.x, r9.x

    abs r0.x, c3.x
    if_ne c3.x, -c3.x
      texld r1, c4, s1
      add r0.y, -r1.y, r9.w
      mad r1.x, r1.x, r0.y, r9.x
      mov r1.yz, r9.xyww
    else
      mov r1.xyz, c4.y
    endif
    cmp r0.xyz, -r0.x, r9.xyww, r1
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.y
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c4.z
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c4.w, r0.x
    mul r0.x, r0.x, c2.x
    rcp r0.y, r9.w
    mul r0.yz, r0.y, r9.xxyw
    mul r0.yz, r0.x, r0
    mul r1, r0.z, c16

// Unreal Engine shadow fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-unreal-shadows --only-autofixed --git --quiet CRC32_3C3D4FE8_0.txt
add r8.w, r0.x, -r8.y
mad r0.y, -r8.w, r8.x, r0.y

    mad r1, c15, r0.y, r1
    mad r0, c17, r0.x, r1
    add r0, r0, c18
    rcp r0.w, r0.w
    min r1.x, r0.z, c5.x
    mad_pp r2, r0.xyxy, r0.w, c7
    texld_pp r3, r2, s2
    texld_pp r4, r2.zwzw, s2
    add r3, r1.x, -r3.wxyz
    add r4, r1.x, -r4.wxyz
    cmp_pp r3, r3, c5.y, c5.z
    cmp_pp r4, r4, c5.y, c5.z
    mul r2, r2, c0.xyxy
    frc_pp r2, r2
    mov_pp r5.xy, r3
    mov_pp r5.zw, r4.xyxy
    mov_pp r4.xy, r3.zwzw
    lrp_pp r3, r2.yyww, r4, r5
    mad_pp r4, r0.xyxy, r0.w, c8
    texld_pp r5, r4, s2
    texld_pp r6, r4.zwzw, s2
    add r5, r1.x, -r5.wxyz
    add r6, r1.x, -r6.wxyz
    cmp_pp r5, r5, c5.y, c5.z
    cmp_pp r6, r6, c5.y, c5.z
    mul r4, r4, c0.xyxy
    frc_pp r4, r4
    mov_pp r7.xy, r5
    mov_pp r7.zw, r6.xyxy
    mov_pp r6.xy, r5.zwzw
    lrp_pp r5, r4.yyww, r6, r7
    lrp_pp r6.xy, r2.xzzw, r3.ywzw, r3.xzzw
    lrp_pp r6.zw, r4.xyxz, r5.xyyw, r5.xyxz
    dp4_pp r0.z, r6, c4.x
    mad_pp r2, r0.xyxy, r0.w, c9
    texld_pp r3, r2, s2
    texld_pp r4, r2.zwzw, s2
    add r3, r1.x, -r3.wxyz
    add r4, r1.x, -r4.wxyz
    cmp_pp r3, r3, c5.y, c5.z
    cmp_pp r4, r4, c5.y, c5.z
    mul r2, r2, c0.xyxy
    frc_pp r2, r2
    mov_pp r5.xy, r3
    mov_pp r5.zw, r4.xyxy
    mov_pp r4.xy, r3.zwzw
    lrp_pp r3, r2.yyww, r4, r5
    mad_pp r4, r0.xyxy, r0.w, c10
    texld_pp r5, r4, s2
    texld_pp r6, r4.zwzw, s2
    add r5, r1.x, -r5.wxyz
    add r6, r1.x, -r6.wxyz
    cmp_pp r5, r5, c5.y, c5.z
    cmp_pp r6, r6, c5.y, c5.z
    mul r4, r4, c0.xyxy
    frc_pp r4, r4
    mov_pp r7.xy, r5
    mov_pp r7.zw, r6.xyxy
    mov_pp r6.xy, r5.zwzw
    lrp_pp r5, r4.yyww, r6, r7
    lrp_pp r6.xy, r2.xzzw, r3.ywzw, r3.xzzw
    lrp_pp r6.zw, r4.xyxz, r5.xyyw, r5.xyxz
    dp4_pp r1.y, r6, c4.x
    add_pp r0.z, r0.z, r1.y
    mad_pp r2, r0.xyxy, r0.w, c11
    texld_pp r3, r2, s2
    texld_pp r4, r2.zwzw, s2
    add r3, r1.x, -r3.wxyz
    add r4, r1.x, -r4.wxyz
    cmp_pp r3, r3, c5.y, c5.z
    cmp_pp r4, r4, c5.y, c5.z
    mul r2, r2, c0.xyxy
    frc_pp r2, r2
    mov_pp r5.xy, r3
    mov_pp r5.zw, r4.xyxy
    mov_pp r4.xy, r3.zwzw
    lrp_pp r3, r2.yyww, r4, r5
    mad_pp r4, r0.xyxy, r0.w, c12
    texld_pp r5, r4, s2
    texld_pp r6, r4.zwzw, s2
    add r5, r1.x, -r5.wxyz
    add r6, r1.x, -r6.wxyz
    cmp_pp r5, r5, c5.y, c5.z
    cmp_pp r6, r6, c5.y, c5.z
    mul r4, r4, c0.xyxy
    frc_pp r4, r4
    mov_pp r7.xy, r5
    mov_pp r7.zw, r6.xyxy
    mov_pp r6.xy, r5.zwzw
    lrp_pp r5, r4.yyww, r6, r7
    lrp_pp r6.xy, r2.xzzw, r3.ywzw, r3.xzzw
    lrp_pp r6.zw, r4.xyxz, r5.xyyw, r5.xyxz
    dp4_pp r1.y, r6, c4.x
    add_pp r0.z, r0.z, r1.y
    mad_pp r2, r0.xyxy, r0.w, c13
    texld_pp r3, r2, s2
    texld_pp r4, r2.zwzw, s2
    add r3, r1.x, -r3.wxyz
    add r4, r1.x, -r4.wxyz
    cmp_pp r3, r3, c5.y, c5.z
    cmp_pp r4, r4, c5.y, c5.z
    mul r2, r2, c0.xyxy
    frc_pp r2, r2
    mov_pp r5.xy, r3
    mov_pp r5.zw, r4.xyxy
    mov_pp r4.xy, r3.zwzw
    lrp_pp r3, r2.yyww, r4, r5
    mad_pp r4, r0.xyxy, r0.w, c14
    texld_pp r5, r4, s2
    texld_pp r6, r4.zwzw, s2
    add r5, r1.x, -r5.wxyz
    add r1, r1.x, -r6.wxyz
    cmp_pp r5, r5, c5.y, c5.z
    cmp_pp r1, r1, c5.y, c5.z
    mul r4, r4, c0.xyxy
    frc_pp r4, r4
    mov_pp r6.xy, r5
    mov_pp r6.zw, r1.xyxy
    mov_pp r1.xy, r5.zwzw
    lrp_pp r5, r4.yyww, r1, r6
    lrp_pp r1.xy, r2.xzzw, r3.ywzw, r3.xzzw
    lrp_pp r1.zw, r4.xyxz, r5.xyyw, r5.xyxz
    dp4_pp r0.x, r1, c4.x
    add_pp r0.x, r0.x, r0.z
    mad r0.x, r0.x, r0.x, c5.w
    mov r0.z, c5.z
    mad_pp r0.x, c19.x, r0.x, r0.z
    rsq_pp r0.x, r0.x
    rcp_pp oC0, r0.x

// approximately 156 instruction slots used (19 texture, 137 arithmetic)
