//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   DNEResolution            c0       1
//   ScreenPositionScaleBias  c1       1
//   MinZ_MaxZRatio           c2       1
//   NvStereoEnabled          c3       1
//   DiffuseOverrideParameter c4       1
//   UniformPixelVector_0     c7       1
//   UniformPixelScalars_0    c8       1
//   UpperSkyColor            c9       1
//   AmbientColorAndSkyFactor c10      1
//   NvStereoFixTexture       s0       1
//   PixelTexture2D_0         s1       1
//   PixelTexture2D_1         s2       1
//   PixelTexture2D_2         s3       1
//   PixelTexture2D_3         s4       1
//   VAOBuffer                s5       1
//

    ps_3_0
    def c5, 0.200000003, -9.99999997e-007, 0.800000012, 0
    def c6, 0.0625, 0, 0, 0
    def c11, 2, -1, -2, -0
    dcl_texcoord6 v0.xyz
    dcl_texcoord7_pp v1.w
    dcl_texcoord5 v2.w
    dcl_texcoord v3.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_60AF3167_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v2.w
    dp3_pp r1.x, v0, v0
    rsq_pp r1.x, r1.x
    mul_pp r1.yzw, r1.x, v0.xxyz
    texld_pp r2, v3, s1
    mov_sat_pp r2.w, v1.w
    mad r2.xyz, r2, c11.x, c11.yyzw
    mad_pp r2.xyz, r2.w, r2, -c11.wwyw
    nrm_pp r3.xyz, r2
    dp3_pp r2.x, r3, r1.yzww
    mul_pp r2.xy, r2.x, r3
    mad_pp r1.yz, r2.xxyw, c11.x, -r1
    mul r2.xy, c8.x, v3
    texld r3, r2, s2
    texld_pp r4, r1.yzzw, s3
    mad r4.xyz, r3, c5.x, r4
    mad r1.x, v0.z, -r1.x, -c11.y
    cmp r1.x, r1.w, r1_abs.x, -c11.y
    add r1.y, r1.x, c5.y
    mul r1.z, r1.x, r1.x
    mul r1.x, r1.z, r1.x
    mad r1.x, r1.x, c5.z, c5.x
    cmp r1.x, r1.y, r1.x, c5.x
    lrp r5.xyz, r1.x, r4, r3
    texld r1, r2, s4
    lrp r3.xyz, r2.w, r1, r5
    mov r1.y, c11.y
    add r1.xyz, -r1.y, -c7
    mul_pp r1.xyz, r1, r3
    mad_pp r1.xyz, r1, c4.w, c4
    mul r2.xyz, r1, c9
    mov_pp r1.w, c10.w
    mad_pp r2.xyz, r2, r1.w, c7
    abs r1.w, c3.x
    if_ne c3.x, -c3.x
      texld r3, c6, s0
      add r2.w, -r3.y, v2.w
      mad r0.z, r3.x, r2.w, r0.x
      mov r0.w, v2.w
      mov r3.xyz, r0.zyww
    else
      mov r3.xyz, -c11.w
    endif
    mov r0.z, v2.w
    cmp r0.xyz, -r1.w, r0, r3
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s5
    mul r0.yzw, r1.xxyz, c10.xxyz
    mad_pp oC0.xyz, r2, r0.x, r0.yzww
    rcp r0.x, v2.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 58 instruction slots used (6 texture, 52 arithmetic)
