//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ObjectWorldPositionAndRadius;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_1;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNESpecularAttenuation       c7       1
//   DNEResolution                c8       1
//   ObjectWorldPositionAndRadius c9       1
//   UniformPixelVector_1         c10      1
//   UniformPixelScalars_0        c11      1
//   LightColorAndFalloffExponent c12      1
//   SpotDirection                c13      1
//   SpotAngles                   c14      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//

    ps_3_0
    def c2, 0.200000003, 0.5, 6.28318548, -3.14159274
    def c6, -0.75, 0.100000001, 17.1891651, 9.76982021
    def c15, 0.0581761822, 0.102356032, 0.0840932205, 11.8915653
    def c16, 63.6942711, 0.5, 8, 32
    def c17, 0.00390625, 16, 0.0625, 0.5
    def c18, -1, 1, 0, 2
    def c19, -0.333299994, 1, 0.5, -9.99999997e-007
    def c20, 0.0625, 0, 15, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5 v2.xyz
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4.w
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_74EE8AE5_359.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v3
    nrm_pp r1.xyz, v1
    cmp r0.w, vFace, c18.x, c18.y
    mul_pp r0.w, r0.w, c0.x
    mul_pp r2.xy, r0.z, r0.w
    mul_pp r2.z, r0.w, r2.y
    mad_pp r0.xyz, r2, c18.zzww, -r0
    mov r2.y, c18.y
    add r1.w, r2.y, c11.x
    mad r1.w, v0.y, v0.y, r1.w
    mad r1.w, r1.w, c2.x, c2.y
    frc r1.w, r1.w
    mad r1.w, r1.w, c2.z, c2.w
    sincos r2.y, r1.w
    add r1.w, c6.x, v0.y
    frc r2.x, r1.w
    add r2.x, r1.w, -r2.x
    mul r1.w, r1.w, r2.x
    mul r1.w, r1_abs.w, r2.y
    mul r2.x, r1.w, c6.y
    mov r2.y, c18.z
    add r2.xy, r2, v0
    mov r3.xyz, c9
    mul r3.xyz, r3, c15
    frc r3.xyz, r3_abs
    cmp r3.xyz, c9, r3, -r3
    mul r2.zw, r3.xyxy, c6
    add r1.w, r2.w, r2.z
    mad r1.w, r3.z, c15.w, r1.w
    mad r1.w, r1.w, c16.x, c16.y
    frc r1.w, r1.w
    mad r1.w, r1.w, c2.z, c2.w
    sincos r3.y, r1.w
    add r1.w, r3.y, c18.y
    mul r1.w, r1.w, c2.y
    texld r3, r1.w, s4
    mul r1.w, r3.x, c16.z
    frc r2.z, r1.w
    add r1.w, r1.w, -r2.z
    mad r1.w, r1.w, c16.w, c16.w
    mul r1.w, r1.w, c17.x
    texld r3, r1.w, s4
    add r1.w, r3.x, r3.x
    frc r1.w, r1_abs.w
    cmp r1.w, r3.x, r1.w, -r1.w
    mul r1.w, r1.w, c17.y
    frc r2.z, r1.w
    add r4.x, r1.w, -r2.z
    frc r1.w, r3_abs.x
    cmp r1.w, r3.x, r1.w, -r1.w
    add r1.w, r1.w, r1.w
    frc r2.z, r1.w
    add r4.y, r1.w, -r2.z
    mul r2.zw, r4.xyxy, c17
    mad r2.xy, r2, c17.zwzw, r2.zwzw
    texld r2, r2, s3
    mov r2.x, c19.x
    mad r2, c10.w, r2.w, r2.x
    texkill r2
    dp3 r1.w, v2, v2
    rsq r2.x, r1.w
    mul r2.xyz, r2.x, v2
    dp3 r2.x, r2, -c13
    add r2.x, r2.x, -c14.x
    mul_sat r2.x, r2.x, c14.y
    mul_pp r2.x, r2.x, r2.x
    texld_pp r3, c19.yzzw, s0
    mov r2.yw, c2.y
    texld_pp r4, r2, s0
    add r2.x, -r1.w, c18.y
    mul r2.x, r3.x, r2.x
    mul r5, r4.x, r2.x
    mov r6, r5
    texkill r6
    if b0
      mad r2.xy, vPos, c8, c8.zwzw
      mul r5.xy, r2, v4.w
      if_ne c3.x, -c3.x
        texld r6, c20, s1
        add r2.x, -r6.y, v4.w
        mad r5.z, r6.x, r2.x, r5.x
        mov r5.xy, r5.zyzw
        mov r2.x, v4.w
      else
        mov r2.x, v4.w
      endif
      rcp r2.x, r2.x
      mul r2.xy, r2.x, r5
      mad r2.xy, r2, c1, c1.wzzw
      texld r6, r2, s2
      mul_pp r3.yzw, r6.xxyz, r6.xxyz
      mul_pp r3.yzw, r3, r3.x
    else
      mov_pp r3.yzw, r3.x
    endif
    mov_sat r1.w, r1.w
    add r1.w, -r1.w, c18.y
    pow_sat_pp r2.z, r1.w, c12.w
    texld_pp r2, r2.zwzw, s0
    mul_sat_pp r0.w, r1.z, r0.w
    add r1.w, r0.w, c19.w
    mul r0.w, r0.w, c7.w
    dp3_sat_pp r0.x, r0, r1
    add r0.y, r0.x, c19.w
    pow_pp r1.x, r0.x, c20.z
    mul r0.x, r1.x, c7.x
    mul r1.xyz, r0.w, c4
    cmp r1.xyz, r1.w, r1, c18.z
    mul_pp r0.xzw, r0.x, c5.xyyz
    cmp_pp r0.xyz, r0.y, r0.xzww, c18.z
    add_pp r0.xyz, r0, r1
    mul_pp r0.xyz, r3.yzww, r0
    mul r0.xyz, r0, c12
    mul r0.xyz, r2.x, r0
    mul r0.xyz, r4.x, r0
    cmp oC0.xyz, -r5.w, c18.z, r0
    mov oC0.w, c18.z

// approximately 143 instruction slots used (8 texture, 135 arithmetic)
