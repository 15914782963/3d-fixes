//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4x4 ScreenToShadowMatrix;
//   float4 ShadowBufferAndTexelSize;
//   sampler2D ShadowDepthTexture;
//   float ShadowOverrideFactor;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   ScreenToShadowMatrix         c7       4
//   DNEResolution                c11      1
//   LightColorAndFalloffExponent c12      1
//   ShadowBufferAndTexelSize     c13      1
//   ShadowOverrideFactor         c14      1
//   ShadowWarpFunctionTexture    s0       1
//   ShadowDepthTexture           s1       1
//

    ps_3_0
    def c1, 0, 2, 1, 0.5
    def c2, -9.99999997e-007, 200, 0, 0
    dcl_texcoord4_pp v0.xyz
    dcl_texcoord5 v1.xyz
    dcl_texcoord6 v2
    dcl_texcoord7 v3.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

    nrm_pp r0.xyz, v2
    nrm_pp r1.xyz, v0
    mad_pp r0.xyz, r0.z, c1.xxyw, -r0
    texld_pp r2, c1.zwzw, s0
    dp3 r0.w, v1, v1
    add r1.w, -r0.w, c1.z
    mul r3, r2.x, r1.w
    mov r4, r3
    texkill r4
    if b0
      mad r2.yz, vPos.xxyw, c11.xxyw, c11.xzww
      mul r2.yz, r2, v3.w
      mul r4, r2.z, c8

// Unreal Engine shadow fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-unreal-shadows --only-autofixed --git --quiet CRC32_AA8838E0_0.txt
add r9.w, v2.w, -r9.y
mad r2.y, -r9.w, r9.x, r2.y

      mad r4, c7, r2.y, r4
      mad r4, c9, v2.w, r4
      mad r4, c10, v3.w, r4
      rcp r1.w, r4.w
      mul r2.yz, r1.w, r4.xxyw
      texld r5, r2.yzzw, s1
      mov r3.xz, c1
      mad r6, c13.wwzw, r3.xzzx, r2.yzyz
      texld r7, r6, s1
      texld r6, r6.zwzw, s1
      mad r3.xy, r4, r1.w, c13.zwzw
      texld r8, r3, s1
      mov r5.y, r7.x
      mov r5.z, r6.x
      mov r5.w, r8.x
      add r4, r4.z, -r5
      cmp r5, r4, c1.x, c1.z
      mul r2.yz, r2, c13.xxyw
      frc r2.yz, r2
      cmp r3.xy, r4, -c1.x, -c1.z
      add r3.xy, r3, r5.zwzw
      mad r2.yw, r2.y, r3.xxzy, r5.xxzy
      lrp r1.w, r2.z, r2.w, r2.y
      mul r1.w, r1.w, c14.x
      mul_pp r2.yzw, r1.w, r2.x
    else
      mov_pp r2.yzw, r2.x
    endif
    add_pp r3.xyz, c5, c5.w
    mov_sat r0.w, r0.w
    add r0.w, -r0.w, c1.z
    pow_sat_pp r4.x, r0.w, c12.w
    mov r4.y, c1.w
    texld_pp r4, r4, s0
    mov_sat_pp r0.w, r1.z
    add r1.w, r0.w, c2.x
    mul r0.w, r0.w, c0.w
    dp3_sat_pp r0.x, r0, r1
    add r0.y, r0.x, c2.x
    pow_pp r1.x, r0.x, c2.y
    mul r0.x, r1.x, c0.x
    mul r1.xyz, r0.w, c4
    cmp r1.xyz, r1.w, r1, c1.x
    mul_pp r0.xzw, r3.xyyz, r0.x
    cmp_pp r0.xyz, r0.y, r0.xzww, c1.x
    add_pp r0.xyz, r0, r1
    mul_pp r0.xyz, r2.yzww, r0
    mul r0.xyz, r4.x, r0
    mul r0.xyz, r0, c12
    cmp oC0.xyz, -r3.w, c1.x, r0
    mov oC0.w, c1.x

// approximately 74 instruction slots used (6 texture, 68 arithmetic)
