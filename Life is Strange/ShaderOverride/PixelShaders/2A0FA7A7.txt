//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   DNEResolution                c8       1
//   LightColorAndFalloffExponent c9       1
//   SpotDirection                c10      1
//   SpotAngles                   c11      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//

    ps_3_0
    def c2, 1, 0.5, 0.0625, 0
    def c6, 0.0700000003, 2954.63867, 2047.9989, 2
    def c12, 0.125, -5.55472994, -6.98316002, 0
    dcl_texcoord4_pp v0.xyz
    dcl_texcoord5 v1.xyz
    dcl_texcoord6 v2.xyz
    dcl_texcoord7 v3.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_2A0FA7A7_359.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v2, v2
    rsq_pp r0.x, r0.x
    mad_sat_pp r0.y, c7.x, v3.w, c7.y
    mul_pp r0.y, r0.y, c0.x
    nrm_pp r1.xyz, v0
    mad_pp r0.xzw, v2.xyyz, r0.x, r1.xyyz
    nrm_pp r2.xyz, r0.xzww
    dp3 r0.x, v1, v1
    rsq r0.z, r0.x
    mul r3.xyz, r0.z, v1
    dp3 r0.z, r3, -c10
    add r0.z, r0.z, -c11.x
    mul_sat r0.z, r0.z, c11.y
    mul_pp r3.x, r0.z, r0.z
    texld_pp r4, c2, s0
    mov r3.yw, c2.y
    texld_pp r5, r3, s0
    add r0.z, -r0.x, c2.x
    mul r0.z, r4.x, r0.z
    mul r6, r5.x, r0.z
    mov r7, r6
    texkill r7
    if b0
      mad r0.zw, vPos.xyxy, c8.xyxy, c8
      mul r6.xy, r0.zwzw, v3.w
      if_ne c3.x, -c3.x
        texld r7, c2.zwzw, s1
        add r0.z, -r7.y, v3.w
        mad r6.z, r7.x, r0.z, r6.x
        mov r6.xy, r6.zyzw
        mov r0.z, v3.w
      else
        mov r0.z, v3.w
      endif
      rcp r0.z, r0.z
      mul r0.zw, r0.z, r6.xyxy
      mad r0.zw, r0, c1.xyxy, c1.xywz
      texld r7, r0.zwzw, s2
      mul_pp r4.yzw, r7.xxyz, r7.xxyz
      mul_pp r4.yzw, r4, r4.x
    else
      mov_pp r4.yzw, r4.x
    endif
    mov r7, c5
    mad_pp r5.yzw, r7.w, c6.x, r7.xxyz
    mov_sat r0.x, r0.x
    add r0.x, -r0.x, c2.x
    pow_sat_pp r3.z, r0.x, c9.w
    texld_pp r3, r3.zwzw, s0
    mul_pp r0.x, r5.x, r3.x
    mov_sat_pp r0.z, r1.z
    mul_pp r0.w, r0.z, c0.w
    mul_sat_pp r0.x, r0.x, c0.y
    mul_pp r0.x, r0.x, r0.x
    mov_sat_pp r1.w, r2.z
    mul_pp r2.w, r0.x, c6.y
    mad_pp r0.x, r0.x, c6.z, c6.w
    mul_pp r0.x, r0.x, c12.x
    mad r1.w, r2.w, r1.w, -r2.w
    exp_pp r1.w, r1.w
    mul_pp r0.x, r0.x, r1.w
    mul_pp r0.x, r0.z, r0.x
    mul_pp r0.x, r0.y, r0.x
    dp3_sat_pp r0.y, r1, r2
    mad_pp r0.z, r0.y, c12.y, c12.z
    mul_pp r0.y, r0.y, r0.z
    exp_pp r0.y, r0.y
    lrp_pp r1.xyz, r0.y, c2.x, r5.yzww
    mul_pp r0.xyz, r0.x, r1
    mad_pp r0.xyz, c4, r0.w, r0
    mul_pp r0.xyz, r4.yzww, r0
    mul r0.xyz, r0, c9
    mul r0.xyz, r3.x, r0
    mul r0.xyz, r5.x, r0
    cmp oC0.xyz, -r6.w, c2.w, r0
    mov oC0.w, c2.w

// approximately 86 instruction slots used (5 texture, 81 arithmetic)
