//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_4;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   CameraWorldPos          c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   DNEResolution           c7       1
//   UniformPixelVector_0    c8       1
//   UniformPixelVector_1    c9       1
//   UniformPixelVector_2    c10      1
//   UniformPixelVector_3    c11      1
//   UniformPixelVector_4    c12      1
//   UniformPixelVector_5    c13      1
//   UniformPixelVector_6    c14      1
//   UniformPixelScalars_0   c15      1
//   UniformPixelScalars_1   c16      1
//   UniformPixelScalars_2   c17      1
//   UniformPixelScalars_4   c18      1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//   PixelTexture2D_1        s3       1
//   PixelTexture2D_2        s4       1
//

    ps_3_0
    def c4, 9.99999997e-007, 0.300000012, 0.589999974, 0.109999999
    def c5, 0.0625, 0, 9.99999975e-006, 100000
    def c6, -0.5, 0.5, 0.000976999989, 0
    def c19, 2, 1, 0, 0
    dcl_texcoord4 v0
    dcl_texcoord7_pp v1.x
    dcl_texcoord5 v2
    dcl_color v3.xyz
    dcl_color1 v4
    dcl_texcoord v5.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_CBC967E9_433.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v4
    nrm_pp r1.xyz, v3
    mul_pp r0.y, r0.y, r1.x
    mad_pp r0.x, r0.x, r1.y, -r0.y
    mul_pp r0.x, r0.x, v4.w
    add r1.xyw, c0.xyzz, v2.xyzz
    mad r0.yw, vPos.xxzy, c7.xxzy, c7.xzzw
    mul r2.yz, r0.xyww, v2.w
    rcp r0.y, v2.w
    mul r0.yw, r0.y, r2.xyzz
    mad r0.yw, r0, c1.xxzy, c1.xwzz
    texld r3, r0.ywzw, s0
    max r4.xyz, r3_abs, c4.x
    log r3.x, r4.x
    log r3.y, r4.y
    log r3.z, r4.z
    mul r3.xyz, r3, c15.x
    exp r4.x, r3.x
    exp r4.y, r3.y
    exp r4.z, r3.z
    add r3.xyz, r4, c15.y
    rcp r0.y, c15.z
    mul r5.xyz, r0.y, r3
    dp3 r0.w, r5, c4.yzww
    mad r3.xyz, r3, -r0.y, r0.w
    mad r3.xyz, c15.w, r3, r5
    abs r0.y, c3.x
    if_ne c3.x, -c3.x
      texld r5, c5, s1
      add r0.w, -r5.y, v2.w
      mad r2.x, r5.x, r0.w, r2.y
      mov r2.w, v2.w
      mov r5.xyz, r2.xzww
    else
      mov r5.xyz, c5.y
    endif
    mov r2.w, v2.w
    cmp r5.xyz, -r0.y, r2.yzww, r5
    rcp r0.w, r5.z
    mul r5.xy, r0.w, r5
    mad r5.xy, r5, c1, c1.wzzw
    mov r5.zw, c5.y
    texldl r5, r5, s0
    add r0.w, r5.w, -c2.y
    add r3.w, -r0.w, c5.z
    rcp r0.w, r0.w
    cmp r0.w, r3.w, c5.w, r0.w
    add r3.w, -c16.x, v2.w
    mad r0.w, c2.x, r0.w, -r3.w
    rcp r4.w, c16.y
    mul_sat r0.w, r0.w, r4.w
    add r5.xy, c6.x, v5
    mov r6.y, c5.y
    dp2add r7.x, c10, r5, r6.y
    dp2add r7.y, c11, r5, r6.y
    add r5.zw, r7.xyxy, c6.y
    mul r5.zw, r5, c17.w
    texld r7, r5.zwzw, s2
    dp2add r8.x, c12, r5, r6.y
    dp2add r8.y, c13, r5, r6.y
    add r5.xy, r8, c6.y
    mul r5.xy, r5, c17.w
    texld r5, r5, s2
    max r6.x, r7.x, r5.x
    mul r5.x, r6.x, v1.x
    mad r5.y, r0.w, v1.x, r5.x
    mul r5.y, r5.y, c18.x
    texld r6, r5.y, s3
    mul r1.xyw, r1, c6.z
    texld r7, r1.ywzw, s4
    texld r8, r1.xwzw, s4
    mul r0.x, r0_abs.x, r8.y
    mad r0.x, r1_abs.z, r7.y, r0.x
    texld r1, r1, s4
    mad r0.x, r0_abs.z, r1.y, r0.x
    mad r0.x, r0.x, c19.x, c19.y
    add r0.z, -c4.x, v1_abs.x
    pow r1.x, v1_abs.x, r0.x
    cmp r0.x, r0.z, r1.x, c5.y
    add_sat r0.z, r0.x, r6.x
    mul r1.x, r0.z, r0.w
    mad r0.z, r0.w, r0.z, -c4.x
    pow r0.w, r1.x, c18.y
    cmp r0.z, r0.z, r0.w, c5.y
    mad r1.xyz, r3, c9, -r4
    mad_sat r1.xyz, r0.z, r1, r4
    max r3.xyz, r1, c4.x
    log r1.x, r3.x
    log r1.y, r3.y
    log r1.z, r3.z
    mul r1.xyz, r1, c14
    exp r3.x, r1.x
    exp r3.y, r1.y
    exp r3.z, r1.z
    add_pp r1.xyz, r3, c8
    if_ne c3.x, -c3.x
      texld r6, c5, s1
      add r0.z, -r6.y, v2.w
      mad r2.x, r6.x, r0.z, r2.y
      mov r3.xyz, r2.xzww
    else
      mov r3.xyz, c5.y
    endif
    cmp r0.yzw, -r0.y, r2, r3.xxyz
    rcp r0.w, r0.w
    mul r0.yz, r0.w, r0
    mad r2.xy, r0.yzzw, c1, c1.wzzw
    mov r2.zw, c5.y
    texldl r2, r2, s0
    add r0.y, r2.w, -c2.y
    add r0.z, -r0.y, c5.z
    rcp r0.y, r0.y
    cmp r0.y, r0.z, c5.w, r0.y
    mad r0.y, c2.x, r0.y, -r3.w
    mul_sat r0.y, r4.w, r0.y
    mad r0.z, r0.y, v1.x, r5.x
    mul r0.z, r0.z, c18.x
    texld r2, r0.z, s3
    add_sat r0.x, r0.x, r2.x
    mul r0.z, r0.x, r0.y
    mad r0.x, r0.y, r0.x, -c4.x
    pow r1.w, r0.z, c18.y
    cmp r0.x, r0.x, r1.w, c5.y
    frc r0.y, -r0.x
    add_pp oC0.w, r0.y, r0.x
    mad_pp oC0.xyz, r1, v0.w, v0

// approximately 146 instruction slots used (14 texture, 132 arithmetic)
