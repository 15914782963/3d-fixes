//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   DNEEnvMapParameter       c0       1
//   ScreenPositionScaleBias  c1       1
//   MinZ_MaxZRatio           c2       1
//   NvStereoEnabled          c3       1
//   DiffuseOverrideParameter c4       1
//   DNEResolution            c7       1
//   UniformPixelVector_0     c8       1
//   UpperSkyColor            c9       1
//   AmbientColorAndSkyFactor c10      1
//   NvStereoFixTexture       s0       1
//   DNEEnvironmentTexture    s1       1
//   VAOBuffer                s2       1
//

    ps_3_0
    def c5, 0.0500000007, 0.100000001, 0.200000003, 10
    def c6, 0.0625, 0, 0, 0
    def c11, 0, 2, 1, -9.99999997e-007
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord6 v2.xyz
    dcl_texcoord5 v3.w
    dcl vPos.xy
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_89448E36_359.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v1.w
    mad r3.xy, vPos, c7, c7.zwzw
    mul r3.xy, r3, v3.w
    dp3_pp r1.w, v2, v2
    rsq_pp r1.w, r1.w
    mul_pp r4.xyz, r1.w, v2
    mad_pp r4.xyw, r4.z, c11.xxzy, -r4.xyzz
    mov r5.z, c11.z
    add_pp r5.xyz, r5.z, -c8
    mul_pp r5.xyz, r5, c4.w
    mov_pp r6.xy, c5
    mad_pp r5.xyz, r5, r6.xyyw, c4
    mad r1.w, v2.z, -r1.w, c11.z
    cmp_pp r1.w, r4.z, r1_abs.w, c11.z
    add r2.w, r1.w, c11.w
    pow_pp r4.z, r1.w, c5.z
    add r4.z, -r4.z, c11.z
    mul_pp r4.z, r4.z, c5.z
    cmp_pp r4.z, r2.w, r4.z, c5.z
    lrp_pp r6.xyz, c11.y, r4.xyww, c11.xxzw
    dp3_pp r7.x, r1, r6
    dp3_pp r7.y, r2, r6
    dp3_pp r7.z, r0, r6
    mov r7.w, c11.x
    texldl_pp r6, r7, s1
    mul_pp r4.xyw, r6.xyzz, c0.xyzz
    mul_pp r4.xyz, r4.xyww, r4.z
    mul r0.xw, r1.z, c11.zyzx
    mov_pp r0.y, r2.z
    texldl_pp r0, r0, s1
    mul_pp r0.xyz, r0, c0
    mul r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    cmp_pp r0.w, r2.w, r0.w, c11.x
    mad_pp r0.xyz, r0, c5.w, -r4
    mad_pp r0.xyz, r0.w, r0, r4
    add_pp r0.xyz, r0, c8
    mul r1.xyz, r5, c9
    mad_pp r0.xyz, r1, c10.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r1, c6, s0
      add r1.y, -r1.y, v3.w
      mad r3.z, r1.x, r1.y, r3.x
      mov r3.w, v3.w
      mov r1.xyz, r3.zyww
    else
      mov_pp r1.xyz, c11.x
    endif
    mov r3.z, v3.w
    cmp r1.xyz, -r0.w, r3, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s2
    mul r1.yzw, r5.xxyz, c10.xxyz
    mad_pp oC0.xyz, r0, r1.x, r1.yzww
    rcp r0.x, v3.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 73 instruction slots used (6 texture, 67 arithmetic)
