//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowTexture;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_5;
//   float4 UniformPixelScalars_6;
//   float4 UniformPixelScalars_7;
//   float4 UniformPixelScalars_8;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   CameraWorldPos               c8       1
//   DNEResolution                c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelVector_1         c11      1
//   UniformPixelVector_2         c12      1
//   UniformPixelVector_3         c13      1
//   UniformPixelVector_4         c14      1
//   UniformPixelVector_5         c15      1
//   UniformPixelVector_6         c16      1
//   UniformPixelScalars_1        c17      1
//   UniformPixelScalars_2        c18      1
//   UniformPixelScalars_3        c19      1
//   UniformPixelScalars_5        c20      1
//   UniformPixelScalars_6        c21      1
//   UniformPixelScalars_7        c22      1
//   UniformPixelScalars_8        c23      1
//   LightColorAndFalloffExponent c24      1
//   ShadowWarpFunctionTexture    s0       1
//   SceneColorTexture            s1       1
//   NvStereoFixTexture           s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   ShadowTexture                s6       1
//

    ps_3_0
    def c6, 1, 0, 1.41789806, 1.37
    def c25, 0, -0.99000001, 10, 1.52876604
    def c26, 0.5, 0.0700000003, -9.99999997e-007, 0.930000007
    def c27, 0.693147004, 2, 0.125, 9.99999975e-006
    def c28, -5.55472994, -6.98316002, 0.0625, 0
    def c29, 100000, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord6 v2.xyz
    dcl_texcoord7 v3.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_7E79C725_749.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    add r0.xy, c8, v3
    mad r0.zw, vPos.xyxy, c9.xyxy, c9
    mul r1.xy, r0.zwzw, v3.w
    nrm_pp r2.xyz, v2
    mad_sat_pp r0.z, c7.x, v3.w, c7.y
    mul_pp r0.z, r0.z, c0.x
    rcp r0.w, c17.x
    mul_pp r3.xy, r0.w, r0
    mad_pp r0.xy, r0, r0.w, c11
    texld_pp r4, r0, s3
    dp2add_pp r0.x, r4, -r4, c6.x
    max_pp r1.w, r0.x, c6.y
    rsq_pp r0.x, r1.w
    rcp_pp r4.z, r0.x
    mov r5.xzw, c6
    mad_pp r0.xy, r3, r5.z, c12
    texld_pp r6, r0, s3
    dp2add_pp r0.x, r6, -r6, c6.x
    max_pp r1.w, r0.x, c6.y
    rsq_pp r0.x, r1.w
    rcp_pp r6.z, r0.x
    add_pp r0.xyw, r4.xyzz, r6.xyzz
    nrm_pp r4.xyz, r0.xyww
    mul_pp r0.xyw, r4.xyzz, c18.x
    frc_pp r4.xyz, r0.xyww
    add_pp r0.xyw, r0, -r4.xyzz
    rcp r1.w, c18.x
    mov r2.w, c18.w
    mad_pp r3.zw, r2.w, r3.xyxy, c13.xyxy
    texld_pp r4, r3.zwzw, s4
    lrp_pp r2.w, r4.x, c19.z, c19.w
    mul_pp r3.zw, r3.xyxy, c20.x
    mov r6.x, c20.x
    mad_pp r3.xy, r6.x, r3, c14
    texld_pp r6, r3, s5
    mad_pp r3.xy, r3.zwzw, r5.w, c15
    texld_pp r3, r3, s5
    mul_pp r3.x, r3.y, r6.y
    mad_sat_pp r2.w, r3.x, c21.w, r2.w
    mad_pp r0.xyw, r0, r1.w, c25.xxzy
    mad_pp r0.xyw, r2.w, r0, c6.yyzx
    nrm_pp r6.xyz, r0.xyww
    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mul_pp r3.yzw, r0.x, v1.xxyz
    mad_pp r0.xyw, v1.xyzz, r0.x, r2.xyzz
    nrm_pp r7.xyz, r0.xyww
    mad_sat_pp r0.x, c22.x, r3.x, c22.y
    mad_pp r0.x, r0.x, c25.z, c25.w
    exp_pp r0.x, r0.x
    texld_pp r8, v0, s6
    mov_sat_pp r8.x, r8.x
    mov_pp r8.y, c26.x
    texld_pp r8, r8, s0
    mov r0.y, c26.y
    mad_pp r4.yzw, c5.w, r0.y, c5.xxyz
    dp3_pp r0.y, r6, r2
    add r0.w, -r0.y, c6.x
    cmp_pp r0.y, r0.y, r0_abs.w, c6.x
    add r0.w, r0.y, c26.z
    mul r1.w, r0.y, r0.y
    mad r2.x, r1.w, c26.w, c26.y
    add_pp r2.x, -r2.x, c6.x
    cmp_pp r2.x, r0.w, r2.x, c26.w
    mul_pp r2.xyz, r2.x, c16
    add_pp r5.xyz, r5.x, -c10
    mul_pp r2.xyz, r2, r5
    mad_pp r2.xyz, r2, c4.w, c4
    dp3_sat_pp r2.w, r6, r3.yzww
    mul_pp r3.x, r2.w, c0.w
    mov_sat_pp r5.x, c0.y
    mul_pp r5.x, r5.x, r5.x
    mul_pp r0.x, r0.x, r5.x
    dp3_sat_pp r5.x, r6, r7
    mad_pp r5.y, r0.x, c27.x, c27.y
    mul_pp r5.y, r5.y, c27.z
    mad r0.x, r0.x, r5.x, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r5.y
    mul_pp r0.x, r2.w, r0.x
    mul_pp r0.x, r0.z, r0.x
    dp3_sat_pp r0.z, r3.yzww, r7
    mad_pp r2.w, r0.z, c28.x, c28.y
    mul_pp r0.z, r0.z, r2.w
    exp_pp r0.z, r0.z
    lrp_pp r3.yzw, r0.z, c6.x, r4
    mul_pp r3.yzw, r0.x, r3
    mad_pp r2.xyz, r2, r3.x, r3.yzww
    mul_pp r2.xyz, r8.x, r2
    mul oC0.xyz, r2, c24
    mul_pp r0.x, r0.y, r1.w
    add r0.y, -c22.w, c22.z
    mul r0.x, r0.y, r0.x
    cmp r0.x, r0.w, r0.x, c6.y
    add_pp r0.x, r0.x, c22.w
    if_ne c3.x, -c3.x
      texld r2, c28.zwzw, s2
      add r0.y, -r2.y, v3.w
      mad r1.z, r2.x, r0.y, r1.x
      mov r1.xy, r1.zyzw
      mov r0.y, v3.w
    else
      mov r0.y, v3.w
    endif
    rcp r0.y, r0.y
    mul r0.yz, r0.y, r1.xxyw
    mad r1.xy, r0.yzzw, c1, c1.wzzw
    mov_pp r1.zw, c6.y
    texldl r1, r1, s1
    add r0.y, r1.w, -c2.y
    add r0.z, -r0.y, c27.w
    rcp r0.y, r0.y
    cmp r0.y, r0.z, c29.x, r0.y
    mad_pp r0.y, c2.x, r0.y, -v3.w
    lrp_pp r0.z, r4.x, c23.x, c23.y
    rcp r0.z, r0.z
    mul_sat_pp r0.y, r0.z, r0.y
    mul_sat_pp oC0.w, r0.y, r0.x

// approximately 131 instruction slots used (10 texture, 121 arithmetic)
