//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   DNEResolution            c0       1
//   ScreenPositionScaleBias  c1       1
//   MinZ_MaxZRatio           c2       1
//   NvStereoEnabled          c3       1
//   DiffuseOverrideParameter c4       1
//   UniformPixelVector_0     c7       1
//   UpperSkyColor            c8       1
//   AmbientColorAndSkyFactor c9       1
//   SceneColorTexture        s0       1
//   NvStereoFixTexture       s1       1
//   PixelTexture2D_0         s2       1
//   PixelTexture2D_1         s3       1
//   PixelTexture2D_2         s4       1
//

    ps_3_0
    def c5, 1, 0, 0.5, 0.0625
    def c6, 6, 5, 9.99999975e-006, 100000
    def c10, 150, -0.00100000005, 1000, -0.100000001
    dcl_color1 v0.xyz
    dcl_texcoord v1.xy
    dcl_texcoord1 v2
    dcl_texcoord4 v3
    dcl_texcoord5 v4.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_C1F9D91_1068.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v0
    mad r1.xy, vPos, c0, c0.zwzw
    mul r1.xy, r1, v4.w
    texld_pp r2, v1, s2
    dp2add_pp r0.w, r2, -r2, c5.x
    max_pp r2.w, r0.w, c5.y
    rsq_pp r0.w, r2.w
    rcp_pp r2.z, r0.w
    dp3 r0.x, r0, r2
    add r0.x, r0.x, c5.x
    mul r0.x, r0.x, c5.z
    mul r0.x, r0.x, r0.x
    texld r2, v1, s3
    mul r0.x, r0.x, r2.y
    mad r0.x, r0.x, c5.z, c5.z
    mad_pp r0.xyz, r0.x, v2, c7
    mov r2.xyz, c4
    mul r3.xyz, r2, c8
    mad_pp r0.xyz, r3, c9.w, r0
    mad_pp r0.xyz, r2, c9, r0
    mul r0.w, r2.w, v2.w
    mul r2.xy, c6, v1
    texld r2, r2, s4
    abs r2.y, c3.x
    if_ne c3.x, -c3.x
      texld r3, c5.wyzw, s1
      add r2.z, -r3.y, v4.w
      mad r1.z, r3.x, r2.z, r1.x
      mov r1.w, v4.w
      mov r3.xyz, r1.zyww
    else
      mov r3.xyz, c5.y
    endif
    mov r1.z, v4.w
    cmp r1.xyz, -r2.y, r1, r3
    rcp r1.z, r1.z
    mul r1.xy, r1.z, r1
    mad r1.xy, r1, c1, c1.wzzw
    mov r1.zw, c5.y
    texldl r1, r1, s0
    add r1.x, r1.w, -c2.y
    add r1.y, -r1.x, c6.z
    rcp r1.x, r1.x
    cmp r1.x, r1.y, c6.w, r1.x
    add r1.y, -r2.x, c5.x
    mul r1.z, r1.y, c10.x
    mad r1.x, c2.x, r1.x, -v4.w
    mad r1.y, r1.y, c10.x, c10.y
    rcp r1.z, r1.z
    cmp r1.y, r1.y, r1.z, c10.z
    mul_sat r1.x, r1.y, r1.x
    mad r0.w, r0.w, r1.x, c10.w
    frc r1.x, -r0.w
    add_sat_pp oC0.w, r0.w, r1.x
    mad_pp oC0.xyz, r0, v3.w, v3

// approximately 61 instruction slots used (6 texture, 55 arithmetic)
