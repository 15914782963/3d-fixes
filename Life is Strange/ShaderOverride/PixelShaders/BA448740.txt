//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D PixelTexture2D_6;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_7;
//   float4 UniformPixelScalars_8;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//   float4 UniformPixelVector_7;
//   float4 UniformPixelVector_8;
//   float4 UniformPixelVector_9;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   CameraWorldPos               c8       1
//   DNEResolution                c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelVector_1         c11      1
//   UniformPixelVector_2         c12      1
//   UniformPixelVector_3         c13      1
//   UniformPixelVector_4         c14      1
//   UniformPixelVector_5         c15      1
//   UniformPixelVector_6         c16      1
//   UniformPixelVector_7         c17      1
//   UniformPixelVector_8         c18      1
//   UniformPixelVector_9         c19      1
//   UniformPixelScalars_0        c20      1
//   UniformPixelScalars_3        c21      1
//   UniformPixelScalars_7        c22      1
//   UniformPixelScalars_8        c23      1
//   LightColorAndFalloffExponent c24      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//   PixelTexture2D_4             s7       1
//   PixelTexture2D_5             s8       1
//   PixelTexture2D_6             s9       1
//

    ps_3_0
    def c2, -0.5, 0.315322369, 0.948984623, 0
    def c6, -0.948984623, 0.315322369, 0, 2.79415617e-005
    def c25, 3.12500015e-005, 9.37500008e-005, -3.25, 2
    def c26, 15, 0.200000003, 0.5, 0.000624999986
    def c27, 6.28318548, -3.14159274, 30, 2
    def c28, 10, 1.52876604, 2.88538933, 5
    def c29, -20, -12, 0.25, 7
    def c30, 0.100000001, 0.5, -0.949999988, 0.75
    def c31, 1, 0.5, 0.0625, 0
    def c32, 0.00571428565, 1.40624998e-005, 4, 5.58284373e-005
    def c33, 0.129870132, 0.5, 0.699999988, 0.400000006
    def c34, 0.00022365569, 1.25, -9.99999997e-007, 0.125
    def c35, 1, 7.60526891e-005, 0.800000012, 0
    def c36, 0.0901960805, 0.0784313828, 0.0509804003, 0
    def c37, 0.400000036, 0.800000012, 0.693147004, 2
    def c38, -5.55472994, -6.98316002, 0, 0
    def c39, 0.0299999993, 0, 1.00999999, 9.37500008e-005
    def c40, 2.5, 6.24999984e-006, 0.000781250012, 6.2500003e-005
    dcl_texcoord v0.y
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5 v2.xyz
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_BA448740_100.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    add r0, c8.xyxy, v4.xyxy
    dp3_pp r1.x, v3, v3
    rsq_pp r1.x, r1.x
    mad_sat_pp r1.y, c7.x, v4.w, c7.y
    mul_pp r1.y, r1.y, c0.x
    add_pp r1.zw, r0, c2.x
    dp2add_pp r2.x, c2.yzzw, r1.zwzw, c2.w
    dp2add_pp r2.y, c6, r1.zwzw, c6.z
    add_pp r2, r2.xyxy, -c2.x
    mov r1.w, c6.w
    mad_pp r1.zw, r2.xyxy, r1.w, c11.xyxy
    texld_pp r3, r1.zwzw, s3
    dp2add_pp r1.z, r3, -r3, c35.x
    max_pp r2.x, r1.z, c2.w
    rsq_pp r1.z, r2.x
    rcp_pp r3.z, r1.z
    mov r2.xy, c35
    mad_pp r1.zw, r2, r2.y, c12.xyxy
    texld_pp r4, r1.zwzw, s3
    dp2add_pp r1.z, r4, -r4, c35.x
    max_pp r2.y, r1.z, c2.w
    rsq_pp r1.z, r2.y
    rcp_pp r4.z, r1.z
    mad_pp r2.yzw, r4.xxyz, -c35.z, r3.xxyz
    dp3_pp r1.z, r2.yzww, r2.yzww
    rsq_pp r1.z, r1.z
    mad_pp r2.yzw, r2, r1.z, -c35.xwwx
    mad_pp r2.yzw, r2, c39.x, c39.xyyz
    nrm_pp r3.xyz, r2.yzww
    mul_pp r4, r0.zwzw, c25.xxyy
    mov r1.w, c39.w
    mad_pp r1.zw, r0, r1.w, c13.xyxy
    texld_pp r5, r1.zwzw, s4
    mov_pp r6.x, r4.z
    mov r6.yw, c21.xxzz
    texld_pp r7, r6, s5
    add_pp r1.z, r7.y, c2.x
    mul_pp r1.z, r5.x, r1.z
    mad_pp r1.w, v0.y, c25.z, c25.w
    texld_pp r5, r4.zwzw, s5
    add_pp r2.y, r5.y, c2.x
    mul_pp r2.z, r2.y, c40.x
    mad_pp r1.w, r2.y, -c2.x, r1.w
    mad_pp r1.z, r1.z, -c2.x, r1.w
    mul_pp r5, r0.zzzw, c40.wyzz
    mov_pp r6.z, r5.y
    texld_pp r6, r6.zwzw, s5
    mov r6.xw, c26
    mad_pp r1.w, r6.y, r6.x, c20.x
    mad_pp r1.w, r1.w, c26.y, c26.z
    frc_pp r1.w, r1.w
    mad_pp r1.w, r1.w, c27.x, c27.y
    sincos_pp r7.y, r1.w
    add_pp r1.w, r1.z, r7.y
    max_pp r2.y, r7.y, c2.w
    texld_pp r7, r5.zwzw, s4
    add_pp r2.y, r2.y, r7.x
    mad_pp r2.y, r2.y, c27.z, c27.w
    mul_sat_pp r2.y, r1.w, r2.y
    frc_pp r2.w, -r2.y
    add_sat_pp r2.w, r2.w, r2.y
    cmp_pp r3.xyz, -r2.w, c35.wwxw, r3
    nrm_pp r6.xyz, r3
    nrm_pp r3.xyz, v1
    mad_pp r7.xyz, v3, r1.x, r3
    nrm_pp r8.xyz, r7
    mad_pp r4.zw, r0, r6.w, c19.xyxy
    texld_pp r7, r4.zwzw, s9
    mad_pp r1.x, r7.x, -c2.x, -c2.x
    mad r1.x, r1.x, c28.x, c28.y
    exp_pp r1.x, r1.x
    cmp_pp r1.x, -r2.w, c28.z, r1.x
    texld_pp r7, c31, s0
    dp3 r3.w, v2, v2
    add r4.z, -r3.w, c35.x
    mul r9, r7.x, r4.z
    mov r10, r9
    texkill r10
    if b0
      mad r4.zw, vPos.xyxy, c9.xyxy, c9
      mul r9.xy, r4.zwzw, v4.w
      if_ne c3.x, -c3.x
        texld r10, c31.zwzw, s1
        add r4.z, -r10.y, v4.w
        mad r9.z, r10.x, r4.z, r9.x
        mov r9.xy, r9.zyzw
        mov r4.z, v4.w
      else
        mov r4.z, v4.w
      endif
      rcp r4.z, r4.z
      mul r4.zw, r4.z, r9.xyxy
      mad r4.zw, r4, c1.xyxy, c1.xywz
      texld r10, r4.zwzw, s2
      mul_pp r7.yzw, r10.xxyz, r10.xxyz
      mul_pp r7.yzw, r7, r7.x
    else
      mov_pp r7.yzw, r7.x
    endif
    mov r5.y, c22.w
    texld_pp r5, r5, s5
    mov r4.w, c28.w
    mad_pp r4.z, r5.y, r4.w, c23.x
    mad_pp r4.z, r4.z, c30.x, c30.y
    frc_pp r4.z, r4.z
    mad_pp r4.z, r4.z, c27.x, c27.y
    sincos_pp r5.y, r4.z
    add_pp r1.z, r1.z, r5.y
    mov_sat_pp r1.z, -r1.z
    add_pp r1.z, -r1.z, c35.x
    add_pp r4.z, c30.z, v0.y
    mad_sat_pp r4.zw, r4.z, c29.xyxy, r2.z
    mul_pp r1.z, r1.z, r4.z
    mul_pp r2.z, r4.w, c30.w
    mad_pp r1.z, r1.z, c29.z, r2.z
    mul_pp r1.z, r1.z, c29.w
    frc_pp r2.z, r1.z
    add_pp r1.z, r1.z, -r2.z
    mul_pp r1.z, r1.z, c5.w
    mul r1.z, r1.z, c32.x
    cmp r1.z, -r2.w, c2.w, r1.z
    add_pp r5.xyz, r1.z, c5
    mov_sat r3.w, r3.w
    add r1.z, -r3.w, c35.x
    pow_sat_pp r9.x, r1.z, c24.w
    mov r9.y, -c2.x
    texld_pp r10, r9, s0
    mov r10.yzw, c32
    mad_pp r4.zw, r0, r10.y, c14.xyxy
    texld_pp r11, r4.zwzw, s6
    mad_pp r4.zw, r0, r10.y, c15.xyxy
    texld_pp r12, r4.zwzw, s6
    texld_pp r4, r4, s6
    mad_pp r1.z, r4.w, r10.z, c20.x
    mad_pp r1.z, r1.z, c33.x, c33.y
    frc_pp r1.z, r1.z
    mad_pp r1.z, r1.z, c27.x, c27.y
    sincos_pp r4.y, r1.z
    add_pp r1.z, r4.y, c35.x
    mul_pp r1.z, r1.z, -c2.x
    lrp_pp r2.z, r1.z, r12.w, r11.w
    mad_pp r2.z, r2.z, c33.z, c33.w
    mov r4.x, c25.x
    mad_pp r4.xy, r0.zwzw, r4.x, c16
    texld_pp r4, r4, s7
    mad_pp r0.xy, r0, r10.w, c17
    texld_pp r13, r0, s7
    add_pp r0.x, r4.y, r13.y
    mov r4.x, c34.x
    mad_pp r0.yz, r0.xzww, r4.x, c18.xxyw
    texld_pp r4, r0.yzzw, s7
    add_pp r0.x, r0.x, r4.y
    mul_pp r0.x, r0.x, r2.z
    mov_sat_pp r1.w, r1.w
    mad_pp r0.x, r0.x, c34.y, -r1.w
    add_sat_pp r0.x, r0.x, c35.x
    add r0.y, r0.x, c34.z
    mul_pp r0.x, r0.x, r0.x
    cmp_pp r0.x, r0.y, r0.x, c2.w
    texld_pp r0, r0.x, s8
    lrp_pp r0.w, r1.z, r11.w, r12.w
    add_pp r0.w, -r0.w, c35.x
    mad_pp r0.w, r0.w, c37.x, c37.y
    mul_pp r0.xyz, r0, r0.w
    frc_pp r0.w, r2.y
    add_pp r0.w, -r0.w, r2.y
    add_sat_pp r0.w, -r0.w, c35.x
    mul_pp r0.w, r2.w, r0.w
    cmp_pp r0.xyz, -r0.w, r0, c35.x
    cmp_pp r0.xyz, -r2.w, c36, r0
    add_pp r2.xyz, r2.x, -c10
    mul_pp r0.xyz, r0, r2
    mad_pp r0.xyz, r0, c4.w, c4
    dp3_sat_pp r0.w, r6, r3
    mul_pp r1.z, r0.w, c0.w
    mul_sat_pp r1.w, r10.x, c0.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.x, r1.x, r1.w
    dp3_sat_pp r1.w, r6, r8
    mad_pp r2.x, r1.x, c37.z, c37.w
    mul_pp r2.x, r2.x, c34.w
    mad r1.x, r1.x, r1.w, -r1.x
    exp_pp r1.x, r1.x
    mul_pp r1.x, r1.x, r2.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.y, r0.w
    dp3_sat_pp r1.x, r3, r8
    mad_pp r1.y, r1.x, c38.x, c38.y
    mul_pp r1.x, r1.x, r1.y
    exp_pp r1.x, r1.x
    lrp_pp r2.xyz, r1.x, c35.x, r5
    mul_pp r1.xyw, r0.w, r2.xyzz
    mad_pp r0.xyz, r0, r1.z, r1.xyww
    mul_pp r0.xyz, r7.yzww, r0
    mul r0.xyz, r10.x, r0
    mul r0.xyz, r0, c24
    cmp oC0.xyz, -r9.w, c2.w, r0
    mov oC0.w, c2.w

// approximately 237 instruction slots used (20 texture, 217 arithmetic)
