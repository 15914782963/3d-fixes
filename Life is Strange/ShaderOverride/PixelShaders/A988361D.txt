//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float3 DecalLocalBinormal;
//   float3 DecalLocalTangent;
//   float4 DiffuseOverrideParameter;
//   sampler2D HeightmapTexture;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   float4 WorldIncidentLighting[7];
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   WorldIncidentLighting        c7       7
//   DNEResolution                c14      1
//   UniformPixelVector_0         c15      1
//   UniformPixelVector_1         c16      1
//   DecalLocalBinormal           c17      1
//   DecalLocalTangent            c18      1
//   LightColorAndFalloffExponent c19      1
//   UpperSkyColor                c20      1
//   AmbientColorAndSkyFactor     c21      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   HeightmapTexture             s2       1
//   VAOBuffer                    s3       1
//

    ps_3_0
    def c6, 2, -1, 1, 0
    def c22, 0.300000012, 0.589999974, 0.109999999, 0.858085215
    def c23, -0.858085215, 0.247708291, 0.429042608, 0.886227608
    def c24, 0.0625, 0, 1, 0.5
    def c25, -9.99999997e-007, 15, 0, 0
    def c26, 3, -1, -1.02332771, 1.02332771
    dcl_texcoord4 v0.xyz
    dcl_texcoord6 v1.xyz
    dcl_texcoord5 v2.w
    dcl_texcoord v3.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_A988361D_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    texld r0, v3, s2
    mad r0.xz, r0.wyzw, c6.x, c6.y
    dp2add r0.w, r0.zxzw, -r0.zxzw, c6.z
    rsq r0.w, r0.w
    rcp r0.y, r0.w
    mul r1.xyz, r0.zxyw, c18.zxyw
    mad r1.xyz, r0.yzxw, c18, -r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul r1.xyz, r0.w, r1
    mul r2.xyz, r0.yzxw, r1
    mad r1.xyz, r0, r1.yzxw, -r2
    mul r2.xyz, r0.zxyw, c17.zxyw
    mad r2.xyz, r0.yzxw, c17, -r2
    dp3 r0.w, r2, r2
    rsq r0.w, r0.w
    mul r2.xyz, r0.w, r2
    mul r3.xyz, r0.yzxw, r2
    mad r2.xyz, r0, r2.yzxw, -r3
    nrm r3.xyz, v0
    dp3_pp r4.x, r1, r3
    dp3_pp r4.y, r2, r3
    dp3_pp r4.z, r0.zxyw, r3
    nrm r3.xyz, v1
    dp3_pp r1.x, r1, r3
    dp3_pp r1.y, r2, r3
    dp3_pp r1.z, r0.zxyw, r3
    mad r2.xy, vPos, c14, c14.zwzw
    mul r2.xy, r2, v2.w
    nrm_pp r3.xyz, r1
    nrm_pp r1.xyz, r4
    mad_pp r3.xyz, r3.z, c6.wwxw, -r3
    abs r4.xy, r0.zxzw
    mov r4.z, r0.y
    dp3 r0.w, r4, c22
    mul r4.xyz, r0.w, c16
    mov_pp r5.z, c6.z
    add r5.xyz, r5.z, -c15
    mul_pp r4.xyz, r4, r5
    mad_pp r4.xyz, r4, c4.w, c4
    mul r5.xyz, r4, c20
    mov_pp r0.w, c21.w
    mad_pp r5.xyz, r5, r0.w, c15
    mul r6.xyz, r0, r0.xyxw
    mad r7.y, r6.y, c26.x, c26.y
    mul r7.xz, r0, r0.y
    mad_pp r7.w, r0.z, r0.z, -r6.x
    mul r0.xyz, r0, c26.zwzw
    mul r0.w, r6.z, c22.w
    mul r6, r7, c23.xyxz
    dp4 r1.w, c8, r0
    mov r3.w, c23.w
    mad_pp r1.w, c7.x, r3.w, r1.w
    dp4 r4.w, c9, r6
    add_pp r7.x, r1.w, r4.w
    dp4 r1.w, c10, r0
    mad_pp r1.w, c7.y, r3.w, r1.w
    dp4 r4.w, c11, r6
    add_pp r7.y, r1.w, r4.w
    dp4 r0.x, c12, r0
    mad_pp r0.x, c7.z, r3.w, r0.x
    dp4 r0.y, c13, r6
    add_pp r7.z, r0.y, r0.x
    max_pp r0.xyz, r7, c6.w
    mad_pp r0.xyz, r4, r0, r5
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r5, c24, s1
      add r1.w, -r5.y, v2.w
      mad r2.z, r5.x, r1.w, r2.x
      mov r2.w, v2.w
      mov r5.xyz, r2.zyww
    else
      mov r5.xyz, c6.w
    endif
    mov r2.z, v2.w
    cmp r2.xyz, -r0.w, r2, r5
    rcp r0.w, r2.z
    mul r2.xy, r0.w, r2
    mad r2.xy, r2, c1, c1.wzzw
    texld_pp r2, r2, s3
    texld_pp r5, c24.zwzw, s0
    mov_sat_pp r0.w, r1.z
    add r1.w, r0.w, c25.x
    mul_pp r0.w, r0.w, c0.w
    cmp_pp r0.w, r1.w, r0.w, c6.w
    dp3_sat_pp r1.x, r3, r1
    add r1.y, r1.x, c25.x
    pow_pp r2.y, r1.x, c25.y
    mul r1.x, r2.y, c0.x
    mul_pp r1.xzw, r1.x, c5.xyyz
    cmp_pp r1.xyz, r1.y, r1.xzww, c6.w
    mad_pp r1.xyz, r4, r0.w, r1
    mul_pp r1.xyz, r5.x, r1
    mul_pp r1.xyz, r1, c19
    mad_pp r0.xyz, r0, r2.x, r1
    mad_pp oC0.xyz, r4, c21, r0
    rcp r0.x, v2.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 112 instruction slots used (4 texture, 108 arithmetic)
