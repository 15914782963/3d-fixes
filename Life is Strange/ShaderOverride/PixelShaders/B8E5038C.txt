//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float3 DistanceFieldParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowTexture;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   DNEResolution                c8       1
//   UniformPixelVector_0         c9       1
//   UniformPixelVector_1         c10      1
//   UniformPixelScalars_0        c11      1
//   LightColorAndFalloffExponent c12      1
//   DistanceFieldParameters      c13      1
//   SpotDirection                c14      1
//   SpotAngles                   c15      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//   ShadowTexture                s7       1
//

    ps_3_0
    def c2, 10, 1.52876604, 0.5, 1
    def c6, 0.0625, 0, 0.693147004, 2
    def c16, 0.125, 0, 1, 0
    def c17, -5.55472994, -6.98316002, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xy
    dcl_texcoord2 v2.xy
    dcl_texcoord4_pp v3.xyz
    dcl_texcoord5 v4.xyz
    dcl_texcoord6 v5.xyz
    dcl_texcoord7 v6.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_B8E5038C_281.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v5
    mad_sat_pp r0.w, c7.x, v6.w, c7.y
    mul_pp r0.w, r0.w, c0.x
    dp3_pp r1.x, v3, v3
    rsq_pp r1.x, r1.x
    mul_pp r1.yzw, r1.x, v3.xxyz
    mad_pp r2.xyz, v3, r1.x, r0
    nrm_pp r3.xyz, r2
    texld_pp r2, v1, s5
    mad_pp r1.x, r2.w, c2.x, c2.y
    exp_pp r1.x, r1.x
    texld_pp r2, v0, s7
    add r2.x, r2.x, c13.x
    mul_sat_pp r2.x, r2.x, c13.y
    pow_sat_pp r4.x, r2.x, c13.z
    dp3 r2.x, v4, v4
    rsq r2.y, r2.x
    mul r2.yzw, r2.y, v4.xxyz
    dp3 r2.y, r2.yzww, -c14
    add r2.y, r2.y, -c15.x
    mul_sat r2.y, r2.y, c15.y
    mul_pp r4.z, r2.y, r2.y
    mov r4.yw, c2.z
    texld_pp r5, r4, s0
    texld_pp r4, r4.zwzw, s0
    add r2.y, -r2.x, c2.w
    mul r2.y, r5.x, r2.y
    mul r6, r4.x, r2.y
    mov r7, r6
    texkill r7
    if b0
      mad r2.yz, vPos.xxyw, c8.xxyw, c8.xzww
      mul r6.xy, r2.yzzw, v6.w
      if_ne c3.x, -c3.x
        texld r7, c6, s1
        add r2.y, -r7.y, v6.w
        mad r6.z, r7.x, r2.y, r6.x
        mov r6.xy, r6.zyzw
        mov r2.y, v6.w
      else
        mov r2.y, v6.w
      endif
      rcp r2.y, r2.y
      mul r2.yz, r2.y, r6.xxyw
      mad r2.yz, r2, c1.xxyw, c1.xwzw
      texld r7, r2.yzzw, s2
      mul_pp r2.yzw, r7.xxyz, r7.xxyz
      mul_pp r2.yzw, r2, r5.x
    else
      mov_pp r2.yzw, r5.x
    endif
    texld_pp r5, v1, s4
    mad_pp r4.yzw, r5.xxyz, c5.w, c5.xxyz
    mov_sat r2.x, r2.x
    add r2.x, -r2.x, c2.w
    pow_sat_pp r5.x, r2.x, c12.w
    mov r5.y, c2.z
    texld_pp r5, r5, s0
    texld_pp r7, v1, s3
    mov r3.w, c2.w
    add_pp r5.yzw, r3.w, -c9.xxyz
    mul_pp r5.yzw, r5, r7.xxyz
    mad_pp r5.yzw, r5, c4.w, c4.xxyz
    mul_pp r2.x, r4.x, r5.x
    mov_sat_pp r3.w, c11.x
    texld_pp r7, v2, s6
    mov_sat_pp r6.x, r1.w
    mul_pp r6.y, r6.x, c0.w
    mul_sat_pp r2.x, r2.x, c0.y
    mul_pp r2.x, r2.x, r2.x
    mul_pp r1.x, r1.x, r2.x
    mov_sat_pp r2.x, r3.z
    mad_pp r6.z, r1.x, c6.z, c6.w
    mul_pp r6.z, r6.z, c16.x
    mad r1.x, r1.x, r2.x, -r1.x
    exp_pp r1.x, r1.x
    mul_pp r1.x, r1.x, r6.z
    mul_pp r1.x, r6.x, r1.x
    mul_pp r0.w, r0.w, r1.x
    mad_pp r7.xyw, r3.w, c16.yyzz, r1.yzzw
    dp3_sat_pp r0.x, r0, -r7.xyww
    mad r0.x, r0.x, c11.y, -c11.y
    exp r0.x, r0.x
    mov_pp r0.z, c0.z
    mad_pp r0.xyz, r0.x, r0.z, c10
    mul_pp r0.xyz, r7.z, r0
    max_pp r7.xyz, r6.y, r0
    dp3_sat_pp r0.x, r1.yzww, r3
    mad_pp r0.y, r0.x, c17.x, c17.y
    mul_pp r0.x, r0.x, r0.y
    exp_pp r0.x, r0.x
    lrp_pp r1.xyz, r0.x, c2.w, r4.yzww
    mul_pp r0.xyz, r0.w, r1
    mad_pp r0.xyz, r5.yzww, r7, r0
    mul_pp r0.xyz, r2.yzww, r0
    mul r0.xyz, r0, c12
    mul r0.xyz, r5.x, r0
    mul r0.xyz, r4.x, r0
    cmp oC0.xyz, -r6.w, c6.y, r0
    mov oC0.w, c6.y

// approximately 112 instruction slots used (10 texture, 102 arithmetic)
