//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float2 DecalNearFarPlaneDistance;
//   float4 DiffuseOverrideParameter;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEResolution             c0       1
//   ScreenPositionScaleBias   c1       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   DecalNearFarPlaneDistance c7       1
//   UniformPixelVector_0      c8       1
//   UniformPixelVector_1      c9       1
//   UniformPixelVector_2      c10      1
//   UniformPixelScalars_1     c11      1
//   UpperSkyColor             c12      1
//   AmbientColorAndSkyFactor  c13      1
//   NvStereoFixTexture        s0       1
//   PixelTexture2D_0          s1       1
//   PixelTexture2D_1          s2       1
//   VAOBuffer                 s3       1
//

    ps_3_0
    def c2, 1, -1, 0.00100000005, -0.5
    def c5, 0, 0.0625, 5, 0
    dcl_texcoord v0.xy
    dcl_texcoord5 v1.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_776170A8_676.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v1.w
    add r1.xy, c2.x, -v0
    mul r1.xy, r1, v0
    mov r2.xyz, c2
    mad r1.zw, c7.xyxy, r2.xyyx, r2.z
    texkill r1
    add r1.xy, c2.w, v0
    mov r3.xz, c5
    dp2add r4.x, c9, r1, r3.x
    dp2add r4.y, c10, r1, r3.x
    add r1.zw, r4.xyxy, -c2.w
    texld r4, r1.zwzw, s1
    add r2.xyz, r2.x, -c8
    mul_pp r2.xyz, r2, r4
    mad_pp r2.xyz, r2, c4.w, c4
    mul r3.xyw, r2.xyzz, c12.xyzz
    mov_pp r1.w, c13.w
    mad_pp r3.xyw, r3, r1.w, c8.xyzz
    abs r1.z, c3.x
    if_ne c3.x, -c3.x
      texld r4, c5.yxzw, s0
      add r1.w, -r4.y, v1.w
      mad r0.z, r4.x, r1.w, r0.x
      mov r0.w, v1.w
      mov r4.xyz, r0.zyww
    else
      mov r4.xyz, c5.x
    endif
    mov r0.z, v1.w
    cmp r0.xyz, -r1.z, r0, r4
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s3
    mul r0.yzw, r2.xxyz, c13.xxyz
    mad_pp oC0.xyz, r3.xyww, r0.x, r0.yzww
    texld r0, v0, s2
    dp2add r0.y, r1, r1, c5.x
    mul r0.y, r0.y, c11.y
    mul_sat r0.y, r0.y, r0.y
    add r0.y, -r0.y, c2.x
    mul_pp r0.x, r0.x, r0.y
    mul r0.y, r3.z, c7.y
    rcp r0.z, c7.y
    mul_sat r0.y, r0.z, r0.y
    mul_pp oC0.w, r0.y, r0.x

// approximately 52 instruction slots used (4 texture, 48 arithmetic)
