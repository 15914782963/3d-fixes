//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEEnvMapParameter      c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   CameraWorldPos          c7       1
//   DNEResolution           c8       1
//   UniformPixelVector_0    c9       1
//   UniformPixelVector_1    c10      1
//   UniformPixelVector_2    c11      1
//   UniformPixelVector_3    c12      1
//   UniformPixelVector_4    c13      1
//   UniformPixelVector_5    c14      1
//   UniformPixelScalars_0   c15      1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   DNEEnvironmentTexture   s2       1
//   PixelTexture2D_0        s3       1
//   PixelTexture2D_1        s4       1
//   PixelTexture2D_2        s5       1
//   PixelTexture2D_3        s6       1
//

    ps_3_0
    def c4, 2.21680999, 2.74865007, -1.10500002, -1.37
    def c5, 1.21000004, 1.86000001, 5, 0.5
    def c6, 0, 2, -1, 0.0500000007
    def c16, 0.0625, 0, 9.99999975e-006, 100000
    def c17, 0.0399999991, 0, 0, 0
    dcl_texcoord4 v0
    dcl_texcoord6 v1.xyz
    dcl_texcoord7_pp v2.x
    dcl_texcoord5 v3.xyw
    dcl_color v4.xyz
    dcl_color1 v5
    dcl_texcoord v6.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_17DF6756_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v5
    nrm_pp r1.xyz, v4
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v5.w
    add r3.xy, c7, v3
    mad r3.zw, vPos.xyxy, c8.xyxy, c8
    mul r4.xy, r3.zwzw, v3.w
    nrm_pp r5.xyz, v1
    rcp r0.w, c15.w
    mul r3.zw, r0.w, r3.xyxy
    mad r3.xy, r3, r0.w, c10
    mad r6.xy, v6, c4, c4.zwzw
    mov r7.x, c6.x
    dp2add r8.x, c11, r6, r7.x
    dp2add r8.y, c12, r6, r7.x
    add r6.xy, r8, -c4.zwzw
    texld r6, r6, s3
    mad r6.xy, r6, c6.y, c6.z
    mad r3.xy, r6, c6.w, r3
    texld_pp r7, r3, s4
    mad_pp r7.xyz, r7, c6.y, c6.z
    mov r3.xy, c5
    mad r3.xy, r3.zwzw, r3, c13
    mad r3.xy, r6, c6.w, r3
    texld_pp r3, r3, s4
    mad_pp r3.xyz, r3, c6.y, r7
    add r3.xyz, r3, c6.z
    nrm_pp r6.xyz, r3
    dp3_pp r0.w, r6, r5
    mul_pp r3.xyz, r0.w, r6
    mad_pp r3.xyz, r3, c6.y, -r5
    dp3_pp r1.x, r1, r3
    dp3_pp r1.y, r2, r3
    dp3_pp r1.z, r0, r3
    mov_pp r1.w, c5.z
    texldl_pp r0, r1, s2
    mov_pp r1.xyz, c0
    mad r0.xyz, r0, r1, c14
    add_pp r0.xyz, r0, c9
    add r0.w, r7.w, r3.w
    mad r0.w, r0.w, c5.w, c5.w
    mul r0.w, r0.w, v2.x
    mad r1.xy, r6, c5.w, v6
    texld r1, r1, s5
    add r1.x, r1.x, r1.x
    frc r1.y, r1.x
    add r1.x, -r1.y, r1.x
    mul r0.w, r0.w, r1.x
    mul r0.w, r0.w, c5.w
    abs r1.x, c3.x
    if_ne c3.x, -c3.x
      texld r2, c16, s1
      add r1.y, -r2.y, v3.w
      mad r4.z, r2.x, r1.y, r4.x
      mov r4.w, v3.w
      mov r1.yzw, r4.xzyw
    else
      mov r1.yzw, c6.x
    endif
    mov r4.z, v3.w
    cmp r1.xyz, -r1.x, r4, r1.yzww
    rcp r1.z, r1.z
    mul r1.xy, r1.z, r1
    mad r1.xy, r1, c1, c1.wzzw
    mov r1.zw, c6.x
    texldl r1, r1, s0
    add r1.x, r1.w, -c2.y
    add r1.y, -r1.x, c16.z
    rcp r1.x, r1.x
    cmp r1.x, r1.y, c16.w, r1.x
    mad r1.x, c2.x, r1.x, -v3.w
    mul_sat r1.x, r1.x, c17.x
    mul r0.w, r0.w, r1.x
    texld_pp r1, r0.w, s6
    mad_pp oC0.xyz, r0, v0.w, v0
    mov_pp oC0.w, r1.y

// approximately 91 instruction slots used (10 texture, 81 arithmetic)
