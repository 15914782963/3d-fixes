//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D HeightmapTexture;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenDoorFadeSettings;
//   float4 ScreenDoorFadeSettings2;
//   sampler2D ScreenDoorNoiseTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float TwoSidedSign;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   bool bEnableScreenDoorFade;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bEnableScreenDoorFade        b0       1
//   bReceiveDynamicShadows       b1       1
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNESpecularAttenuation       c7       1
//   DNEMiscParameter             c8       1
//   DNEResolution                c9       1
//   ScreenDoorFadeSettings       c10      1
//   ScreenDoorFadeSettings2      c11      1
//   UniformPixelVector_0         c12      1
//   UniformPixelVector_1         c13      1
//   LightColorAndFalloffExponent c14      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   ScreenDoorNoiseTexture       s3       1
//   PixelTexture2D_0             s4       1
//   PixelTexture2D_1             s5       1
//   PixelTexture2D_2             s6       1
//   HeightmapTexture             s7       1
//

    ps_3_0
    def c2, 10, 1.52876604, 0.5, 0.125
    def c6, 0.0625, 0, 0.693147004, 2
    def c15, -5.55472994, -6.98316002, 0, 0
    def c16, 2, -1, 1, 0
    dcl_texcoord1 v0.xy
    dcl_texcoord4 v1.xyz
    dcl_texcoord5_pp v2
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4.w
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_900BDC87_281.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    texld r0, v0, s7
    mad r0.xy, r0.zwzw, c16.x, c16.y
    dp2add r1.x, r0, -r0, c16.z
    rsq r1.x, r1.x
    rcp r0.z, r1.x
    mov r0.w, -r0.x
    dp2add r1.x, r0.zwzw, r0.zwzw, c16.w
    rsq r1.x, r1.x
    mul r1.yz, r0.xwzw, r1.x
    mov r1.x, c16.w
    mul r2.xyz, r0.zxyw, r1
    mad r2.xyz, r0.yzxw, r1.yzxw, -r2
    nrm r3.xyz, v1
    dp2add_pp r4.x, r1.zyzw, r3.xzzw, c16.w
    dp3_pp r4.y, r2, r3
    dp3_pp r4.z, r0, r3
    nrm r3.xyz, v3
    dp2add_pp r1.x, r1.zyzw, r3.xzzw, c16.w
    dp3_pp r1.y, r2, r3
    dp3_pp r1.z, r0, r3
    dp3_pp r0.x, r1, r1
    rsq_pp r0.x, r0.x
    mad_sat_pp r0.y, c8.x, v4.w, c8.y
    mul_pp r0.y, r0.y, c7.x
    texld_pp r2, v0, s4
    mad_pp r2.xyz, r2, c16.x, c16.y
    nrm_pp r3.xyz, r2
    nrm_pp r2.xyz, r4
    cmp r0.z, vFace, c16.y, c16.z
    mul r0.z, r0.z, c0.x
    mul_pp r3.xyz, r0.z, r3
    mad_pp r0.xzw, r1.xyyz, r0.x, r2.xyyz
    nrm_pp r1.xyz, r0.xzww
    mad_pp r0.x, r2.w, c2.x, c2.y
    exp_pp r0.x, r0.x
    mov_sat_pp r4.x, v2.w
    mov r4.yw, c2.z
    texld_pp r5, r4, s0
    dp3 r0.z, v2, v2
    add r0.w, -r0.z, c16.z
    mul r6, r5.x, r0.w
    mov r7, r6
    texkill r7
    if b0
      mad r4.xy, vPos, c11.zwzw, c11
      texld_pp r7, r4, s3
      mad r0.w, c10.y, r7.x, c10.z
      mov r5.z, c16.z
      add r1.w, r5.z, -c10.x
      add r0.w, r0.w, -r1.w
      cmp r7, -r6.w, c16.w, r0.w
      texkill r7
    endif
    if b1
      mad r4.xy, vPos, c9, c9.zwzw
      mul r6.xy, r4, v4.w
      if_ne c3.x, -c3.x
        texld r7, c6, s1
        add r0.w, -r7.y, v4.w
        mad r6.z, r7.x, r0.w, r6.x
        mov r6.xy, r6.zyzw
        mov r0.w, v4.w
      else
        mov r0.w, v4.w
      endif
      rcp r0.w, r0.w
      mul r4.xy, r0.w, r6
      mad r4.xy, r4, c1, c1.wzzw
      texld r7, r4, s2
      mul_pp r5.yzw, r7.xxyz, r7.xxyz
      mul_pp r5.yzw, r5, r5.x
    else
      mov_pp r5.yzw, r5.x
    endif
    texld_pp r7, v0, s6
    mad_pp r6.xyz, r7, c5.w, c5
    mov_sat r0.z, r0.z
    add r0.z, -r0.z, c16.z
    pow_sat_pp r4.z, r0.z, c14.w
    texld_pp r4, r4.zwzw, s0
    texld_pp r7, v0, s5
    mul_pp r4.yzw, r7.xxyz, c13.xxyz
    mov r0.z, c16.z
    add_pp r7.xyz, r0.z, -c12
    mul_pp r4.yzw, r4, r7.xxyz
    mad_pp r4.yzw, r4, c4.w, c4.xxyz
    dp3_sat_pp r0.z, r3, r2
    mul_pp r0.w, r0.z, c7.w
    mul_sat_pp r1.w, r4.x, c7.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.x, r0.x, r1.w
    dp3_sat_pp r1.w, r3, r1
    mad_pp r2.w, r0.x, c6.z, c6.w
    mul_pp r2.w, r2.w, c2.w
    mad r0.x, r0.x, r1.w, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r2.w
    mul_pp r0.x, r0.z, r0.x
    mul_pp r0.x, r0.y, r0.x
    dp3_sat_pp r0.y, r2, r1
    mad_pp r0.z, r0.y, c15.x, c15.y
    mul_pp r0.y, r0.y, r0.z
    exp_pp r0.y, r0.y
    lrp_pp r1.xyz, r0.y, c16.z, r6
    mul_pp r0.xyz, r0.x, r1
    mad_pp r0.xyz, r4.yzww, r0.w, r0
    mul_pp r0.xyz, r5.yzww, r0
    mul r0.xyz, r4.x, r0
    mul r0.xyz, r0, c14
    cmp oC0.xyz, -r6.w, c16.w, r0
    mov oC0.w, c16.w

// approximately 133 instruction slots used (9 texture, 124 arithmetic)
