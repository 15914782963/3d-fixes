//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float3 DistanceFieldParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowTexture;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEResolution                c7       1
//   UniformPixelVector_0         c8       1
//   UniformPixelVector_1         c9       1
//   UniformPixelScalars_0        c10      1
//   LightColorAndFalloffExponent c11      1
//   DistanceFieldParameters      c12      1
//   SpotDirection                c13      1
//   SpotAngles                   c14      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//   ShadowTexture                s7       1
//

    ps_3_0
    def c2, 0.0625, 0, 0.25, 1
    def c6, 1, 8, 3, -9.99999997e-007
    def c15, 0.75, 3, 0.5, -0.199999988
    def c16, 0, 2, 0.5, 1
    def c17, 15, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xy
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord7 v5.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_7692E80E_535.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v4
    nrm_pp r1.xyz, v2
    mad_pp r0.xyz, r0.z, c16.xxyw, -r0
    texld_pp r2, v0, s7
    add r0.w, r2.x, c12.x
    mul_sat_pp r0.w, r0.w, c12.y
    pow_sat_pp r2.x, r0.w, c12.z
    dp3 r0.w, v3, v3
    rsq r1.w, r0.w
    mul r3.xyz, r1.w, v3
    dp3 r1.w, r3, -c13
    add r1.w, r1.w, -c14.x
    mul_sat r1.w, r1.w, c14.y
    mul_pp r2.z, r1.w, r1.w
    mov r2.yw, c16.z
    texld_pp r3, r2, s0
    texld_pp r2, r2.zwzw, s0
    add r1.w, -r0.w, c16.w
    mul r1.w, r3.x, r1.w
    mul r4, r2.x, r1.w
    mov r5, r4
    texkill r5
    if b0
      mad r2.yz, vPos.xxyw, c7.xxyw, c7.xzww
      mul r4.xy, r2.yzzw, v5.w
      if_ne c3.x, -c3.x
        texld r5, c2, s1
        add r1.w, -r5.y, v5.w
        mad r4.z, r5.x, r1.w, r4.x
        mov r4.xy, r4.zyzw
        mov r1.w, v5.w
      else
        mov r1.w, v5.w
      endif
      rcp r1.w, r1.w
      mul r2.yz, r1.w, r4.xxyw
      mad r2.yz, r2, c1.xxyw, c1.xwzw
      texld r5, r2.yzzw, s2
      mul_pp r2.yzw, r5.xxyz, r5.xxyz
      mul_pp r2.yzw, r2, r3.x
    else
      mov_pp r2.yzw, r3.x
    endif
    mov_sat r0.w, r0.w
    add r0.w, -r0.w, c16.w
    pow_sat_pp r3.x, r0.w, c11.w
    mov r3.y, c16.z
    texld_pp r3, r3, s0
    texld r5, v1, s3
    mov r3.zw, c2
    mov r4.x, c10.x
    mad r6, r4.x, c15, r3.zwww
    mul r3.yz, c6.xxyw, v1.xxyw
    texld r7, r3.yzzw, s4
    mad r0.w, r6.x, -r7.z, c16.w
    mov r3.yz, c6
    mad r3.yz, v1.xxyw, r3.xzyw, c9.xxyw
    texld r8, r3.yzzw, s5
    mad r1.w, r7.z, r8.x, r7.z
    mul r1.w, r1.w, c10.x
    texld r7, r1.w, s6
    mul r3.yzw, r6, r7.xxyz
    mad r3.yzw, r0.w, r5.xxyz, r3
    mov r0.w, c16.w
    add r4.xyz, r0.w, -c8
    mul_pp r3.yzw, r3, r4.xxyz
    mad_pp r3.yzw, r3, c4.w, c4.xxyz
    mov_sat_pp r0.w, r1.z
    add r1.w, r0.w, c6.w
    mul r0.w, r0.w, c0.w
    dp3_sat_pp r0.x, r0, r1
    add r0.y, r0.x, c6.w
    pow_pp r1.x, r0.x, c17.x
    mul r0.x, r1.x, c0.x
    mul r1.xyz, r0.w, r3.yzww
    cmp r1.xyz, r1.w, r1, c16.x
    mul_pp r0.xzw, r0.x, c5.xyyz
    cmp_pp r0.xyz, r0.y, r0.xzww, c16.x
    add_pp r0.xyz, r0, r1
    mul_pp r0.xyz, r2.yzww, r0
    mul r0.xyz, r0, c11
    mul r0.xyz, r3.x, r0
    mul r0.xyz, r2.x, r0
    cmp oC0.xyz, -r4.w, c16.x, r0
    mov oC0.w, c16.x

// approximately 99 instruction slots used (10 texture, 89 arithmetic)
