//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   float4 WindDirectionAndSpeed;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   CameraWorldPos               c7       1
//   DNEResolution                c8       1
//   WindDirectionAndSpeed        c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelVector_1         c11      1
//   UniformPixelVector_2         c12      1
//   UniformPixelVector_3         c13      1
//   UniformPixelVector_4         c14      1
//   UniformPixelVector_5         c15      1
//   UniformPixelScalars_0        c16      1
//   UniformPixelScalars_1        c17      1
//   LightColorAndFalloffExponent c18      1
//   UpperSkyColor                c19      1
//   AmbientColorAndSkyFactor     c20      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   PixelTexture2D_0             s2       1
//   PixelTexture2D_1             s3       1
//   VAOBuffer                    s4       1
//

    ps_3_0
    def c6, -0.649999976, 0.0625, 0, -9.99999997e-007
    def c21, 1, 0.5, 15, 0
    def c22, 1.75, 0.875, 1, 0.100000001
    def c23, 0, 2, 0.100000001, 1.89999998
    dcl_texcoord4 v0.xyz
    dcl_texcoord6 v1.xyz
    dcl_texcoord5 v2
    dcl_texcoord v3.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_3CA4FBAF_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    add r0.xyz, c7, v2
    mad r1.xy, vPos, c8, c8.zwzw
    mul r1.xy, r1, v2.w
    nrm_pp r2.xyz, v1
    nrm_pp r3.xyz, v0
    mad_pp r2.xyz, r2.z, c23.xxyw, -r2
    mad r0.xy, r0.z, c12, r0
    rcp r0.z, c16.x
    mul r4.xy, r0.z, r0
    mov r5.xyw, c9
    mul r4.zw, r5.xyxy, c16.w
    mul r4.zw, r4, c23.z
    frc r4.zw, r4
    mad r0.xy, r0, r0.z, r4.zwzw
    texld_pp r0, r0, s2
    mad r0.zw, r4.xyxy, c23.w, r4
    texld_pp r4, r0.zwzw, s2
    add_sat r0.xy, r0, r4
    mul r0.xy, r0, c17.x
    mad_sat r0.xy, r5.w, r0, c17.y
    mul r0.zw, c13.xyxy, v3.xyxy
    mov r4.xy, c13
    mad r4.xy, v3, r4, c14
    texld_pp r4, r4, s2
    mov r5.xyz, c22
    mad r0.zw, r0, r5.xyxy, c15.xyxy
    texld_pp r6, r0.zwzw, s2
    add r0.zw, r4.xyxy, r6.xyxy
    mul r0.xy, r0.zwzw, r0
    mad r0.xy, r0, c22.zwzw, v3
    texld r0, r0, s3
    add r4, r0.w, c6.x
    texkill r4
    mul r0.xyz, r0, c11
    add r4.xyz, r5.z, -c10
    mul_pp r0.xyz, r0, r4
    mad_pp r0.xyz, r0, c4.w, c4
    mul r4.xyz, r0, c19
    mov_pp r0.w, c20.w
    mad_pp r4.xyz, r4, r0.w, c10
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r5, c6.yzzw, s1
      add r2.w, -r5.y, v2.w
      mad r1.z, r5.x, r2.w, r1.x
      mov r1.w, v2.w
      mov r5.xyz, r1.zyww
    else
      mov_pp r5.xyz, c23.x
    endif
    mov r1.z, v2.w
    cmp r1.xyz, -r0.w, r1, r5
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s4
    texld_pp r5, c21, s0
    mov_sat_pp r0.w, r3.z
    add r1.y, r0.w, c6.w
    mul r0.w, r0.w, c0.w
    dp3_sat_pp r1.z, r2, r3
    add r1.w, r1.z, c6.w
    pow_pp r2.x, r1.z, c21.z
    mul r1.z, r2.x, c0.x
    mul r2.xyz, r0.w, r0
    cmp r2.xyz, r1.y, r2, c23.x
    mul_pp r3.xyz, r1.z, c5
    cmp_pp r1.yzw, r1.w, r3.xxyz, c23.x
    add_pp r1.yzw, r1, r2.xxyz
    mul_pp r1.yzw, r5.x, r1
    mul_pp r1.yzw, r1, c18.xxyz
    mad_pp r1.xyz, r4, r1.x, r1.yzww
    mad_pp oC0.xyz, r0, c20, r1
    rcp r0.x, v2.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 83 instruction slots used (8 texture, 75 arithmetic)
