//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D HeightmapTexture;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenDoorFadeSettings;
//   float4 ScreenDoorFadeSettings2;
//   sampler2D ScreenDoorNoiseTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   float4 UniformPixelVector_0;
//   bool bEnableScreenDoorFade;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bEnableScreenDoorFade        b0       1
//   bReceiveDynamicShadows       b1       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   DNEResolution                c8       1
//   ScreenDoorFadeSettings       c9       1
//   ScreenDoorFadeSettings2      c10      1
//   UniformPixelVector_0         c11      1
//   LightColorAndFalloffExponent c12      1
//   SpotDirection                c13      1
//   SpotAngles                   c14      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   ScreenDoorNoiseTexture       s3       1
//   PixelTexture2D_0             s4       1
//   PixelTexture2D_1             s5       1
//   PixelTexture2D_2             s6       1
//   HeightmapTexture             s7       1
//

    ps_3_0
    def c2, 2, -1, 1, 0
    def c6, 10, 1.52876604, 0.5, 0.125
    def c15, 0.0625, 0, 0.693147004, 2
    def c16, -5.55472994, -6.98316002, 0, 0
    dcl_texcoord1 v0.xy
    dcl_texcoord4 v1.xyz
    dcl_texcoord5_pp v2
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_1438EA8E_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    texld r0, v0, s7
    mad r0.xy, r0.zwzw, c2.x, c2.y
    dp2add r1.x, r0, -r0, c2.z
    rsq r1.x, r1.x
    rcp r0.z, r1.x
    mov r0.w, -r0.x
    dp2add r1.x, r0.zwzw, r0.zwzw, c2.w
    rsq r1.x, r1.x
    mul r1.yz, r0.xwzw, r1.x
    mov r1.x, c2.w
    mul r2.xyz, r0.zxyw, r1
    mad r2.xyz, r0.yzxw, r1.yzxw, -r2
    nrm r3.xyz, v1
    dp2add_pp r4.x, r1.zyzw, r3.xzzw, c2.w
    dp3_pp r4.y, r2, r3
    dp3_pp r4.z, r0, r3
    nrm r3.xyz, v3
    dp2add_pp r1.x, r1.zyzw, r3.xzzw, c2.w
    dp3_pp r1.y, r2, r3
    dp3_pp r1.z, r0, r3
    dp3_pp r0.x, r1, r1
    rsq_pp r0.x, r0.x
    mad_sat_pp r0.y, c7.x, v4.w, c7.y
    mul_pp r0.y, r0.y, c0.x
    texld_pp r2, v0, s4
    mad_pp r2.xyz, r2, c2.x, c2.y
    nrm_pp r3.xyz, r2
    nrm_pp r2.xyz, r4
    mad_pp r0.xzw, r1.xyyz, r0.x, r2.xyyz
    nrm_pp r1.xyz, r0.xzww
    mad_pp r0.x, r2.w, c6.x, c6.y
    exp_pp r0.x, r0.x
    if b0
      mad r0.zw, vPos.xyxy, c10, c10.xyxy
      texld_pp r4, r0.zwzw, s3
      mad r0.z, c9.y, r4.x, c9.z
      mov r4.z, c2.z
      add r0.w, r4.z, -c9.x
      add r4, -r0.w, r0.z
      texkill r4
    endif
    dp3 r0.z, v2, v2
    rsq r0.w, r0.z
    mul r4.xyz, r0.w, v2
    dp3 r0.w, r4, -c13
    add r0.w, r0.w, -c14.x
    mul_sat r0.w, r0.w, c14.y
    mul_pp r4.z, r0.w, r0.w
    mov_sat_pp r4.x, v2.w
    mov r4.yw, c6.z
    texld_pp r5, r4, s0
    texld_pp r4, r4.zwzw, s0
    add r0.w, -r0.z, c2.z
    mul r0.w, r5.x, r0.w
    mul r6, r4.x, r0.w
    mov r7, r6
    texkill r7
    if b1
      mad r4.yz, vPos.xxyw, c8.xxyw, c8.xzww
      mul r6.xy, r4.yzzw, v4.w
      if_ne c3.x, -c3.x
        texld r7, c15, s1
        add r0.w, -r7.y, v4.w
        mad r6.z, r7.x, r0.w, r6.x
        mov r6.xy, r6.zyzw
        mov r0.w, v4.w
      else
        mov r0.w, v4.w
      endif
      rcp r0.w, r0.w
      mul r4.yz, r0.w, r6.xxyw
      mad r4.yz, r4, c1.xxyw, c1.xwzw
      texld r7, r4.yzzw, s2
      mul_pp r4.yzw, r7.xxyz, r7.xxyz
      mul_pp r4.yzw, r4, r5.x
    else
      mov_pp r4.yzw, r5.x
    endif
    texld_pp r5, v0, s6
    mad_pp r5.xyz, r5, c5.w, c5
    mov_sat r0.z, r0.z
    add r0.z, -r0.z, c2.z
    pow_sat_pp r6.x, r0.z, c12.w
    mov r6.y, c6.z
    texld_pp r7, r6, s0
    texld_pp r8, v0, s5
    mov r0.z, c2.z
    add_pp r6.xyz, r0.z, -c11
    mul_pp r6.xyz, r6, r8
    mad_pp r6.xyz, r6, c4.w, c4
    mul_pp r0.z, r4.x, r7.x
    dp3_sat_pp r0.w, r3, r2
    mul_pp r1.w, r0.w, c0.w
    mul_sat_pp r0.z, r0.z, c0.y
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    dp3_sat_pp r0.z, r3, r1
    mad_pp r2.w, r0.x, c15.z, c15.w
    mul_pp r2.w, r2.w, c6.w
    mad r0.x, r0.x, r0.z, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r2.w
    mul_pp r0.x, r0.w, r0.x
    mul_pp r0.x, r0.y, r0.x
    dp3_sat_pp r0.y, r2, r1
    mad_pp r0.z, r0.y, c16.x, c16.y
    mul_pp r0.y, r0.y, r0.z
    exp_pp r0.y, r0.y
    lrp_pp r1.xyz, r0.y, c2.z, r5
    mul_pp r0.xyz, r0.x, r1
    mad_pp r0.xyz, r6, r1.w, r0
    mul_pp r0.xyz, r4.yzww, r0
    mul r0.xyz, r0, c12
    mul r0.xyz, r7.x, r0
    mul r0.xyz, r4.x, r0
    cmp oC0.xyz, -r6.w, c2.w, r0
    mov oC0.w, c2.w

// approximately 139 instruction slots used (10 texture, 129 arithmetic)
