//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEResolution             c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   UniformPixelVector_0      c7       1
//   UniformPixelScalars_0     c8       1
//   UpperSkyColor             c9       1
//   AmbientColorAndSkyFactor  c10      1
//   NvStereoFixTexture        s0       1
//   VAOBuffer                 s1       1
//

    ps_3_0
    def c6, 0.816496611, 0.577350259, 0, 0.333333343
    def c11, 0.0625, 0, 0, 0
    def c12, 0, 2, 1, -9.99999997e-007
    def c13, -0.707106769, -0.408248305, 0.577350259, 0.707106769
    dcl_texcoord2_pp v0.xyz
    dcl_texcoord3_pp v1.xyz
    dcl_texcoord6 v2.xyz
    dcl_texcoord5 v3.w
    dcl_texcoord v4.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_5D2AD040_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v3.w
    dp3_pp r1.x, v2, v2
    rsq_pp r1.x, r1.x
    mul_pp r1.yzw, r1.x, v2.xxyz
    mad_pp r2.xyz, r1.w, c12.xxyw, -r1.yzww
    mad r1.x, v2.z, -r1.x, c12.z
    cmp r1.x, r1.w, r1_abs.x, c12.z
    add r1.y, r1.x, c12.w
    mul r1.z, r1.x, r1.x
    mul r1.z, r1.z, r1.z
    mul r1.x, r1.z, r1.x
    cmp r1.x, r1.y, r1.x, c12.x
    mul r1.yzw, c12.xzzx, v4.xxyx
    mul r3.xyz, c12.xzzw, v4.xxyw
    mul r3.xyz, r3, c8.z
    mad r1.yzw, c8.w, r1, r3.xxyz
    add r1.xyz, r1.yzww, r1.x
    mov r3.z, c12.z
    add r3.xyz, r3.z, -c7
    mul_pp r1.xyz, r1, r3
    mad_pp r1.xyz, r1, c4.w, c4
    mov r3.y, c8.y
    add_pp r3.xyz, r3.y, c7
    dp2add_sat_pp r4.x, r2.yzzw, c6, c6.z
    dp3_sat_pp r4.y, r2, c13
    dp3_sat_pp r4.z, r2.yzxw, c13.yzww
    mul_pp r2.xyz, r4, r4
    mul_pp r2.xyz, r2, r2
    mul_pp r2.xyz, r2, r2
    mul_pp r2.xyz, r2, r2
    dp3_pp r1.w, v1, c6.w
    mul_pp r4.xyz, r1.w, v0
    mul r5.xyz, c5, v0
    dp3_pp r1.w, v1, r2
    mul r2.xyz, r1.w, r5
    mad_pp r2.xyz, r1, r4, r2
    add_pp r2.xyz, r2, r3
    mul r3.xyz, r1, c9
    mad_pp r2.xyz, r3, c10.w, r2
    abs r1.w, c3.x
    if_ne c3.x, -c3.x
      texld r3, c11, s0
      add r2.w, -r3.y, v3.w
      mad r0.z, r3.x, r2.w, r0.x
      mov r0.w, v3.w
      mov r3.xyz, r0.zyww
    else
      mov r3.xyz, c12.x
    endif
    mov r0.z, v3.w
    cmp r0.xyz, -r1.w, r0, r3
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s1
    mul r0.yzw, r1.xxyz, c10.xxyz
    mad_pp oC0.xyz, r2, r0.x, r0.yzww
    rcp r0.x, v3.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 63 instruction slots used (2 texture, 61 arithmetic)
