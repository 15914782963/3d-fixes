//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   float4 WorldIncidentLighting[7];
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   WorldIncidentLighting        c7       7
//   DNEResolution                c14      1
//   UniformPixelVector_0         c15      1
//   UniformPixelScalars_0        c16      1
//   LightColorAndFalloffExponent c17      1
//   UpperSkyColor                c18      1
//   AmbientColorAndSkyFactor     c19      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   PixelTexture2D_0             s2       1
//   PixelTexture2D_1             s3       1
//   VAOBuffer                    s4       1
//

    ps_3_0
    def c6, 0.849999964, -0.200000003, -0.333299994, 3
    def c20, 0, 2, 1.53846157, 1
    def c21, 4, 3, -1, 0.858085215
    def c22, -1.02332771, 1.02332771, 0.886227608, -9.99999997e-007
    def c23, 0.0625, 0, 1, 0.5
    def c24, -0.858085215, 0.247708291, 0.429042608, 15
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord4 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord5 v5.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_4B778AE1_5093.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    dp3_pp r0.w, v0, v0
    rsq_pp r0.w, r0.w
    mul_pp r1.xyz, r0.w, v0.yxzw
    mul r2.yz, r0, r1
    mad_pp r0.x, r0.x, r1.x, -r2.y
    mul_pp r1.x, r0.x, v1.w
    mad r0.xy, vPos, c14, c14.zwzw
    mul r3.xy, r0, v5.w
    nrm_pp r4.xyz, v4
    nrm_pp r5.xyz, v3
    mad_pp r0.xyw, r4.z, c20.xxzy, -r4.xyzz
    mad r1.w, v2.x, -c20.z, c20.w
    mov r4.xy, c6
    mad r4.x, c16.x, r4.x, r4.y
    add r1.w, r1.w, -r4.x
    frc r4.x, -r1.w
    add_sat r4.x, r1.w, r4.x
    add r4, r4.x, c6.z
    texkill r4
    texld r4, v2, s3
    mul_sat r1.w, r1.w, c6.w
    mul r4.xyz, r4, r1.w
    mov r4.w, c20.w
    add r6.xyz, r4.w, -c15
    mul_pp r4.xyz, r4, r6
    mad_pp r4.xyz, r4, c4.w, c4
    add r1.w, -r1.w, c20.w
    mul r1.w, r1.w, r1.w
    texld r6, r1.w, s2
    mov r7.x, c21.x
    mad_pp r6.xyz, r6, r7.x, c15
    mul r7.xyz, r4, c18
    mad_pp r6.xyz, r7, c19.w, r6
    mov_pp r1.y, r0.z
    mul r7.xyz, r1, r1.xyxw
    mul r2.x, r0.z, r1.x
    mad r2.y, r7.y, c21.y, c21.z
    mad_pp r2.w, r1.z, r1.z, -r7.x
    mul r1.xyz, r1, c22.xyxw
    mul r1.w, r7.z, c21.w
    mul r2, r2, c24.xyxz
    dp4 r0.z, c8, r1
    mov r7.z, c22.z
    mad_pp r0.z, c7.x, r7.z, r0.z
    dp4 r4.w, c9, r2
    add_pp r8.x, r0.z, r4.w
    dp4 r0.z, c10, r1
    mad_pp r0.z, c7.y, r7.z, r0.z
    dp4 r4.w, c11, r2
    add_pp r8.y, r0.z, r4.w
    dp4 r0.z, c12, r1
    mad_pp r0.z, c7.z, r7.z, r0.z
    dp4 r1.x, c13, r2
    add_pp r8.z, r0.z, r1.x
    mul_pp r1.xyz, r4, r8
    cmp_pp r1.xyz, r8, r1, c20.x
    add_pp r1.xyz, r1, r6
    abs r0.z, c3.x
    if_ne c3.x, -c3.x
      texld r2, c23, s1
      add r1.w, -r2.y, v5.w
      mad r3.z, r2.x, r1.w, r3.x
      mov r3.w, v5.w
      mov r2.xyz, r3.zyww
    else
      mov r2.xyz, c20.x
    endif
    mov r3.z, v5.w
    cmp r2.xyz, -r0.z, r3, r2
    rcp r0.z, r2.z
    mul r2.xy, r0.z, r2
    mad r2.xy, r2, c1, c1.wzzw
    texld_pp r2, r2, s4
    texld_pp r3, c23.zwzw, s0
    mov_sat_pp r0.z, r5.z
    add r1.w, r0.z, c22.w
    mul r0.z, r0.z, c0.w
    dp3_sat_pp r0.x, r0.xyww, r5
    add r0.y, r0.x, c22.w
    pow_pp r2.y, r0.x, c24.w
    mul r0.x, r2.y, c0.x
    mul r2.yzw, r0.z, r4.xxyz
    cmp r2.yzw, r1.w, r2, c20.x
    mul_pp r0.xzw, r0.x, c5.xyyz
    cmp_pp r0.xyz, r0.y, r0.xzww, c20.x
    add_pp r0.xyz, r0, r2.yzww
    mul_pp r0.xyz, r3.x, r0
    mul_pp r0.xyz, r0, c17
    mad_pp r0.xyz, r1, r2.x, r0
    mad_pp oC0.xyz, r4, c19, r0
    rcp r0.x, v5.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 103 instruction slots used (5 texture, 98 arithmetic)
