//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEResolution           c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   UniformPixelVector_0    c7       1
//   UniformPixelVector_1    c8       1
//   UniformPixelVector_2    c9       1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//   PixelTexture2D_1        s3       1
//   PixelTexture2D_2        s4       1
//

    ps_3_0
    def c4, 0, 6.80000019, 2.26999998, 0.800000012
    def c5, 10, 2.24000001, -0.5, 1
    def c6, 2, -1, -0.0500000007, -9.99999997e-007
    def c10, 4, 1, 0.100000001, 0.0250000004
    def c11, 0.899999976, 0.0625, 0, 9.99999975e-006
    def c12, 100000, 250, -0.00100000005, 1000
    def c13, 10, 2, 1, 0
    dcl_texcoord4 v0.w
    dcl_texcoord6 v1.xyz
    dcl_texcoord5 v2.w
    dcl_texcoord v3.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_744E5EAF_242.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v2.w
    nrm_pp r1.xyz, v1
    mul r2.xy, c10, v3
    mul_pp r2.zw, r1.xyxy, c10.z
    mad r2.xy, r1, c10.w, r2
    add r2.xy, r2, c8
    texld r3, r2, s2
    mad r3.xyz, r3, c6.x, c6.y
    mad r1.w, r3.y, c6.z, v3.y
    add r2.x, r1_abs.w, c6.w
    mul r2.y, r1_abs.w, r1_abs.w
    mul r1.w, r1_abs.w, r2.y
    cmp r1.w, r2.x, r1.w, c4.x
    mov r4.yz, c4
    mad r2.xy, v3, r4.yzzw, c9
    mad r2.zw, v3.xyxy, c5.xyxy, r2
    add r2.zw, r2, c9.xyxy
    texld r4, r2.zwzw, s2
    mov r3.w, -c10.y
    mad r4.xyz, r4, c6.x, r3.wwzw
    mad r2.xy, r4, c10.z, r2
    texld r2, r2, s3
    mov r5.xy, c10
    mad r2.yz, v3.xxyw, r5.xxyw, c8.xxyw
    mad r2.yz, r3.xxyw, c6.z, r2
    texld r5, r2.yzzw, s3
    add r2.x, r2.x, r5.x
    add r2.yzw, r3.xxyw, r4.xxyz
    nrm r3.xyz, r2.yzww
    dp3 r1.x, r3, r1
    mov_sat r1.y, r1.x
    mad r1.y, r1.y, c5.z, c5.w
    mul_sat r1.y, r2.x, r1.y
    add r1.y, -r1.y, c10.y
    mul r1.y, r1.y, r1.w
    mad r1.y, r1.y, c10.x, r1.w
    mul r1.x, r1.y, r1.x
    mul r1.x, r1.x, c4.w
    max r2.x, r1.x, c4.x
    min r1.x, r2.x, c11.x
    abs r1.y, c3.x
    if_ne c3.x, -c3.x
      texld r2, c11.yzzw, s1
      add r1.z, -r2.y, v2.w
      mad r0.z, r2.x, r1.z, r0.x
      mov r0.w, v2.w
      mov r2.xyz, r0.zyww
    else
      mov r2.xyz, c4.x
    endif
    mov r0.z, v2.w
    cmp r0.xyz, -r1.y, r0, r2
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.x
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c11.w
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c12.x, r0.x
    add r0.y, -r5.x, c10.y
    mul r0.z, r0.y, c12.y
    mad r0.x, c2.x, r0.x, -v2.w
    mad r0.y, r0.y, c12.y, c12.z
    rcp r0.z, r0.z
    cmp r0.y, r0.y, r0.z, c12.w
    mul_sat r0.x, r0.y, r0.x
    mul r0.x, r0.x, r1.x
    texld r0, r0.x, s4
    mov r1.xyz, c13
    mad_pp r0.xyz, r0, r1, c7
    mul_pp oC0.xyz, r0, v0.w
    mov oC0.w, c4.x

// approximately 82 instruction slots used (8 texture, 74 arithmetic)
