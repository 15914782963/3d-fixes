//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float2 DistanceFadeParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_2;
//   bool bEnableDistanceShadowFading;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   bEnableDistanceShadowFading  b1       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   DNEResolution                c8       1
//   UniformPixelVector_0         c9       1
//   UniformPixelVector_2         c10      1
//   UniformPixelScalars_0        c11      1
//   UniformPixelScalars_1        c12      1
//   UniformPixelScalars_2        c13      1
//   LightColorAndFalloffExponent c14      1
//   DistanceFadeParameters       c15      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//   PixelTexture2D_4             s7       1
//

    ps_3_0
    def c2, 2, -1, 1, 0.5
    def c6, 0.0625, 0, 0.0500000007, 153.600006
    def c16, -0.5, -0.0599999987, -0.75, -0.699999988
    def c17, 1.44927537, 1.43884897, -0.0869565234, -0.115107916
    def c18, 0.699999988, 1, 0, -0.699999988
    def c19, -0.699999988, 0.699999988, -1, 0
    def c20, 6, 5, -0.0799999982, -0.774999976
    def c21, 0.166666672, 0.200000003, 0.0333333351, 0.111111
    def c22, 0.0599999987, 0.75, 0.0799999982, 0.774999976
    def c23, 2954.63867, 2047.9989, 2, 0.125
    def c24, -5.55472994, -6.98316002, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord6 v2.xyz
    dcl_texcoord7 v3
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_5F3040F6_787.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v2, v2
    rsq_pp r0.x, r0.x
    mad_sat_pp r0.y, c7.x, v3.w, c7.y
    mul_pp r0.y, r0.y, c0.x
    texld_pp r1, v0, s3
    mad_pp r1.xyz, r1, c2.x, c2.y
    nrm_pp r2.xyz, r1
    nrm_pp r1.xyz, v1
    mad_pp r0.xzw, v2.xyyz, r0.x, r1.xyyz
    nrm_pp r3.xyz, r0.xzww
    texld_pp r4, c2.zwzw, s0
    if b0
      mad r0.xz, vPos.xyyw, c8.xyyw, c8.zyww
      mul r5.xy, r0.xzzw, v3.w
      if_ne c3.x, -c3.x
        texld r6, c6, s1
        add r0.x, -r6.y, v3.w
        mad r5.z, r6.x, r0.x, r5.x
        mov r5.xy, r5.zyzw
        mov r0.x, v3.w
      else
        mov r0.x, v3.w
      endif
      rcp r0.x, r0.x
      mul r0.xz, r0.x, r5.xyyw
      mad r0.xz, r0, c1.xyyw, c1.wyzw
      texld r5, r0.xzzw, s2
      mul_pp r0.xzw, r5.xyyz, r5.xyyz
      if b1
        dp3 r1.w, v3, v3
        rsq r1.w, r1.w
        rcp r1.w, r1.w
        add r1.w, -r1.w, c15.x
        mul_sat_pp r1.w, r1.w, c15.y
        mul_pp r1.w, r1.w, r1.w
        mad_pp r2.w, r5.w, r5.w, -r4.x
        mad_pp r4.yzw, r1.w, r2.w, r4.x
      else
        mov_pp r4.yzw, r4.x
      endif
      mul_pp r0.xzw, r0, r4.yyzw
    else
      mov_pp r0.xzw, r4.x
    endif
    mov r4.z, c6.z
    mad_pp r4.xyz, c5.w, r4.z, c5
    texld_pp r5, v0, s4
    add r6, c16.xxyz, v0.xyxx
    texld_pp r7, c10, s5
    mov r8.yz, c2
    add r1.w, r8.y, c12.y
    mul r1.w, r1.w, r7.y
    mad_pp r1.w, c12.z, r1.w, r8.z
    mad_pp r6.xy, r1.w, r6, c2.w
    mad_pp r9.xy, r6, c17, c17.zwzw
    mul_pp r1.w, c12.w, c12.z
    mul_pp r1.w, r7.x, r1.w
    frc_pp r2.w, r1.w
    add_pp r7.w, r1.w, -r2.w
    exp_pp r1.w, r7.w
    rcp r1.w, r1.w
    mul_pp r1.w, r1.w, c6.w
    rcp r1.w, r1.w
    mul_pp r1.w, r1.w, r2.w
    mad_pp r10, r1.w, c18.xxyz, r9.xyxy
    mul r7.xyz, r10.xyxw, c18.yyzw
    texldl_pp r11, r7, s6
    mul r7.xyz, r10.zwxw, c18.yyzw
    texldl_pp r10, r7, s6
    add_pp r8.xyw, r10.xyzz, r11.xyzz
    mad_pp r10.xyz, r1.w, -c18.wyxw, r9.xyyw
    mov_pp r7.xy, r10.xzzw
    texldl_pp r11, r7, s6
    add_pp r8.xyw, r8, r11.xyzz
    mad_pp r7.xy, r1.w, c18.zyzw, r9
    texldl_pp r11, r7, s6
    mov r9.zw, r7
    texldl_pp r7, r9, s6
    add_pp r7.xyz, r7, r11
    mov r10.xzw, r9
    texldl_pp r11, r10, s6
    add_pp r7.xyz, r7, r11
    add_pp r7.xyz, r7, r8.xyww
    mad_pp r11, r1.w, c19, r9.xyxy
    mov_pp r10.xy, r11
    texldl_pp r12, r10, s6
    mov_pp r10.xy, r11.zwzw
    texldl_pp r11, r10, s6
    add_pp r8.xyw, r11.xyzz, r12.xyzz
    mad_pp r10.xy, r1.w, c16.w, r9
    texldl_pp r10, r10, s6
    add_pp r8.xyw, r8, r10.xyzz
    add_pp r7.xyz, r7, r8.xyww
    mul_pp r6.xy, r9, c21
    mov r8.xy, c13
    mul_pp r1.w, r8.x, c11.x
    mul_pp r8.xw, r1.w, c21.xyzz
    frc_pp r8.xw, r8_abs
    cmp_pp r8.xw, r1.w, r8, -r8
    mul_pp r8.xw, r8, c20.xyzy
    frc_pp r9.xy, r8.xwzw
    add_pp r8.xw, r8, -r9.xyzy
    mad_pp r8.xw, r8, c21.xyzy, r6.xyzy
    texld_pp r9, r8.xwzw, s7
    rcp_pp r2.w, c13.x
    add_pp r3.w, r2.w, c11.x
    mul_pp r3.w, r3.w, c13.x
    mul_pp r8.xw, r3.w, c21.xyzz
    frc_pp r8.xw, r8_abs
    cmp_pp r8.xw, r3.w, r8, -r8
    mul_pp r8.xw, r8, c20.xyzy
    frc_pp r10.xy, r8.xwzw
    add_pp r8.xw, r8, -r10.xyzy
    mad_pp r6.xy, r8.xwzw, c21, r6
    texld_pp r10, r6, s7
    frc r3.w, r1_abs.w
    cmp r1.w, r1.w, r3.w, -r3.w
    mul_pp r1.w, r2.w, r1.w
    mul_pp r1.w, r1.w, c13.x
    lrp_pp r11.xyz, r1.w, r10, r9
    mul_pp r1.w, r8.y, c12.z
    mul_pp r8.xyw, r11.xyzz, r1.w
    mad_pp r7.xyz, r7, c21.w, r8.xyww
    add r9, c22, -v0.xxyy
    cmp_pp r6.xy, r9.ywzw, c18.y, c18.z
    cmp_pp r1.w, r6.w, r6.x, c2.z
    add r6.xw, c20.zyzw, v0.y
    cmp_pp r2.w, r6.w, r6.y, c2.z
    mul_pp r1.w, r1.w, r2.w
    cmp_pp r1.w, r9.z, -c6.y, -r1.w
    cmp_pp r1.w, r6.x, r1.w, -c6.y
    cmp_pp r1.w, r9.x, -c6.y, r1.w
    cmp_pp r1.w, r6.z, r1.w, -c6.y
    cmp_pp r5.xyz, r1.w, r5, r7
    add_pp r6.xyz, r8.z, -c9
    mul_pp r5.xyz, r5, r6
    mad_pp r5.xyz, r5, c4.w, c4
    dp3_sat_pp r1.w, r2, r1
    mul_pp r2.w, r1.w, c0.w
    mov_sat_pp r3.w, c0.y
    mul_pp r3.w, r3.w, r3.w
    dp3_sat_pp r2.x, r2, r3
    mul_pp r2.y, r3.w, c23.x
    mad_pp r2.z, r3.w, c23.y, c23.z
    mul_pp r2.z, r2.z, c23.w
    mad r2.x, r2.y, r2.x, -r2.y
    exp_pp r2.x, r2.x
    mul_pp r2.x, r2.x, r2.z
    mul_pp r1.w, r1.w, r2.x
    mul_pp r0.y, r0.y, r1.w
    dp3_sat_pp r1.x, r1, r3
    mad_pp r1.y, r1.x, c24.x, c24.y
    mul_pp r1.x, r1.x, r1.y
    exp_pp r1.x, r1.x
    lrp_pp r2.xyz, r1.x, c2.z, r4
    mul_pp r1.xyz, r0.y, r2
    mad_pp r1.xyz, r5, r2.w, r1
    mul_pp r0.xyz, r0.xzww, r1
    mul oC0.xyz, r0, c14
    mov oC0.w, c6.y

// approximately 181 instruction slots used (26 texture, 155 arithmetic)
