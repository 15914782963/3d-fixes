//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEMiscParameter;
//   sampler2D DNEReflectionTexture;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D HeightmapTexture;
//   float4 LightColorAndFalloffExponent;
//   float3x3 LocalToWorldMatrix;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenDoorFadeSettings;
//   float4 ScreenDoorFadeSettings2;
//   sampler2D ScreenDoorNoiseTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   float4 WorldIncidentLighting[7];
//   bool bEnableScreenDoorFade;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bEnableScreenDoorFade        b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   WorldIncidentLighting        c7       7
//   LocalToWorldMatrix           c14      3
//   DNEMiscParameter             c17      1
//   DNEResolution                c18      1
//   ScreenDoorFadeSettings       c19      1
//   ScreenDoorFadeSettings2      c20      1
//   UniformPixelVector_0         c21      1
//   UniformPixelVector_1         c22      1
//   UniformPixelScalars_0        c23      1
//   LightColorAndFalloffExponent c24      1
//   UpperSkyColor                c25      1
//   AmbientColorAndSkyFactor     c26      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   DNEReflectionTexture         s2       1
//   ScreenDoorNoiseTexture       s3       1
//   PixelTexture2D_0             s4       1
//   PixelTexture2D_1             s5       1
//   PixelTexture2D_2             s6       1
//   HeightmapTexture             s7       1
//   VAOBuffer                    s8       1
//

    ps_3_0
    def c6, 10, 1.52876604, 0.5, -0.5
    def c27, 2, -1, -2, -0.0199999996
    def c28, -1.02332771, 1.02332771, 0.858085215, 0.886227608
    def c29, 0.0625, 0, 1, 0.5
    def c30, -0.858085215, 0.247708291, 0.429042608, 0.125
    def c31, -5.55472994, -6.98316002, 3, -1
    def c32, 2, -1, 1, 0
    def c33, 0.693147004, 2, 0, 0
    dcl_texcoord4 v0.xyz
    dcl_texcoord6 v1.xyz
    dcl_texcoord7_pp v2.w
    dcl_texcoord5 v3.w
    dcl_texcoord1 v4.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_2D0FCF73_351.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    texld r0, v4, s7
    mad r0.xy, r0.zwzw, c32.x, c32.y
    dp2add r1.x, r0, -r0, c32.z
    rsq r1.x, r1.x
    rcp r0.z, r1.x
    mov r0.w, -r0.x
    dp2add r1.x, r0.zwzw, r0.zwzw, c32.w
    rsq r1.x, r1.x
    mul r1.yz, r0.xwzw, r1.x
    mov r1.x, c32.w
    mul r2.xyz, r0.zxyw, r1
    mad r2.xyz, r0.yzxw, r1.yzxw, -r2
    nrm r3.xyz, v0
    dp2add_pp r4.x, r1.zyzw, r3.xzzw, c32.w
    dp3_pp r4.y, r2, r3
    dp3_pp r4.z, r0, r3
    nrm r3.xyz, v1
    dp2add_pp r5.x, r1.zyzw, r3.xzzw, c32.w
    dp3_pp r5.y, r2, r3
    dp3_pp r5.z, r0, r3
    mov r3.zw, c32
    dp2add_pp r6.x, c14.xzzw, r1.zyzw, r3.w
    dp3_pp r6.y, c14, r2
    dp3_pp r6.z, c14, r0
    dp2add_pp r7.x, c15.xzzw, r1.zyzw, r3.w
    dp3_pp r7.y, c15, r2
    dp3_pp r7.z, c15, r0
    dp2add_pp r1.x, c16.xzzw, r1.zyzw, r3.w
    dp3_pp r1.y, c16, r2
    dp3_pp r1.z, c16, r0
    mad r0.xy, vPos, c18, c18.zwzw
    mul r0.xy, r0, v3.w
    nrm_pp r2.xyz, r5
    mad_sat_pp r1.w, c17.x, v3.w, c17.y
    mul_pp r2.w, r1.w, c0.x
    texld_pp r5, v4, s4
    mad_pp r3.xyw, r5.xyzz, c27.x, c27.yyzz
    mad_pp r3.xyw, v2.w, r3, c32.wwzz
    nrm_pp r5.xyz, r3.xyww
    dp3_pp r3.x, r4, r4
    rsq_pp r3.x, r3.x
    mul_pp r8.xyz, r3.x, r4
    mad_pp r3.xyw, r4.xyzz, r3.x, r2.xyzz
    nrm_pp r4.xyz, r3.xyww
    add r3.x, r5.w, c32.y
    mad_pp r3.x, v2.w, r3.x, c32.z
    mad_pp r3.y, r3.x, c6.x, c6.y
    exp_pp r3.y, r3.y
    texld_pp r9, v4, s6
    lrp_pp r10.xyz, v2.w, r9, -c27.w
    mad_pp r9.xyz, r10, c5.w, c5
    if b0
      mad r10.xy, vPos, c20.zwzw, c20
      texld_pp r10, r10, s3
      mad r3.w, c19.y, r10.x, c19.z
      add r4.w, r3.z, -c19.x
      add r10, r3.w, -r4.w
      texkill r10
    endif
    max_pp r3.w, v2.w, c22.y
    max_pp r4.w, r3.w, c6.z
    texld_pp r10, v4, s5
    mul_pp r10.xyz, r4.w, r10
    add_pp r11.xyz, r3.z, -c21
    mul_pp r10.xyz, r10, r11
    mad_pp r10.xyz, r10, c4.w, c4
    rcp r3.z, v3.w
    mul r11.xy, r0, r3.z
    mad r11.xy, r11, c6.zwzw, c6.z
    mad_pp r11.xy, r5, c23.x, r11
    mad_pp r11.w, -c17.w, r3.x, c17.w
    mov r11.z, c32.w
    texldl_pp r11, r11, s2
    dp3_sat_pp r2.x, r5, r2
    max_pp r12.xyz, r3.x, r9
    mad_pp r2.y, r2.x, c31.x, c31.y
    mul_pp r2.x, r2.x, r2.y
    exp_pp r2.x, r2.x
    lrp_pp r13.xyz, r2.x, r12, r9
    mul_pp r2.xyz, r11, r13
    mul_pp r2.xyz, r2, c17.z
    mad_pp r2.xyz, r1.w, r2, c21
    mul r11.xyz, r10, c25
    mad_pp r2.xyz, r11, c26.w, r2
    dp3_pp r6.z, r6, r5
    dp3_pp r6.x, r7, r5
    dp3_pp r6.y, r1, r5
    mul r1.xyz, r6, r6.xyxw
    mad r7.y, r1.y, c31.z, c31.w
    mul r7.xz, r6, r6.y
    mad_pp r7.w, r6.z, r6.z, -r1.x
    mul r6.xyz, r6, c28.xyxw
    mul r6.w, r1.z, c28.z
    mul r1, r7, c30.xyxz
    dp4 r3.x, c8, r6
    mov r3.w, c28.w
    mad_pp r3.x, c7.x, r3.w, r3.x
    dp4 r4.w, c9, r1
    add_pp r7.x, r3.x, r4.w
    dp4 r3.x, c10, r6
    mad_pp r3.x, c7.y, r3.w, r3.x
    dp4 r4.w, c11, r1
    add_pp r7.y, r3.x, r4.w
    dp4 r3.x, c12, r6
    mad_pp r3.x, c7.z, r3.w, r3.x
    dp4 r1.x, c13, r1
    add_pp r7.z, r1.x, r3.x
    mul_pp r1.xyz, r7, r10
    cmp_pp r1.xyz, r7, r1, c32.w
    add_pp r1.xyz, r1, r2
    abs r1.w, c3.x
    if_ne c3.x, -c3.x
      texld r6, c29, s1
      add r2.x, -r6.y, v3.w
      mad r0.z, r6.x, r2.x, r0.x
      mov r0.w, v3.w
      mov r2.xyz, r0.zyww
    else
      mov r2.xyz, c32.w
    endif
    mov r0.z, v3.w
    cmp r0.xyz, -r1.w, r0, r2
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s8
    texld_pp r6, c29.zwzw, s0
    dp3_sat_pp r0.y, r5, r8
    mul_pp r0.z, r0.y, c0.w
    mov_sat_pp r0.w, c0.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r3.y, r0.w
    dp3_sat_pp r1.w, r5, r4
    mad_pp r2.x, r0.w, c33.x, c33.y
    mul_pp r2.x, r2.x, c30.w
    mad r0.w, r0.w, r1.w, -r0.w
    exp_pp r0.w, r0.w
    mul_pp r0.w, r0.w, r2.x
    mul_pp r0.y, r0.y, r0.w
    mul_pp r0.y, r2.w, r0.y
    dp3_sat_pp r0.w, r8, r4
    mad_pp r1.w, r0.w, c31.x, c31.y
    mul_pp r0.w, r0.w, r1.w
    exp_pp r0.w, r0.w
    lrp_pp r2.xyz, r0.w, c32.z, r9
    mul_pp r2.xyz, r0.y, r2
    mad_pp r0.yzw, r10.xxyz, r0.z, r2.xxyz
    mul_pp r0.yzw, r6.x, r0
    mul_pp r0.yzw, r0, c24.xxyz
    mad_pp r0.xyz, r1, r0.x, r0.yzww
    mad_pp oC0.xyz, r10, c26, r0
    mad oC0.w, c2.x, r3.z, c2.y

// approximately 174 instruction slots used (10 texture, 164 arithmetic)
