//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_6;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEResolution           c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   UniformPixelVector_0    c7       1
//   UniformPixelVector_1    c8       1
//   UniformPixelVector_2    c9       1
//   UniformPixelVector_3    c10      1
//   UniformPixelVector_4    c11      1
//   UniformPixelVector_5    c12      1
//   UniformPixelVector_6    c13      1
//   UniformPixelScalars_0   c14      1
//   UniformPixelScalars_1   c15      1
//   UniformPixelScalars_2   c16      1
//   UniformPixelScalars_3   c17      1
//   UniformPixelScalars_6   c18      1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//   PixelTexture2D_1        s3       1
//   PixelTexture2D_2        s4       1
//   PixelTexture2D_3        s5       1
//

    ps_3_0
    def c4, 0.00100000005, 5, 0.0625, 0
    def c5, 0.300000012, 0.589999974, 0.109999999, 9.99999975e-006
    def c6, 100000, 0.0208350997, -0.0851330012, 0.180141002
    def c19, -0.330299497, 0.999866009, 0, 1
    def c20, -2, 1.57079637, -0, -3.14159274
    def c21, 60, 20, 0.0299999993, -9.99999997e-007
    def c22, -0.774999976, 0.600000024, 0.699999988, 0.170000002
    def c23, 0.150000006, 2.79999995, 0.680000007, -0.0850000009
    def c24, 0.159154937, 0.5, 1, -0.5
    def c25, 0.25, 0.5, 6.28318548, -3.14159274
    def c26, 0.135626316, 0, 1, 0.800000012
    def c27, 0.0115282368, 0, 0.0850000009, 3
    def c28, 0.185000002, 1, 0.00377358496, 0
    def c29, 0.75, 0.600000024, 0.5, 0
    dcl_texcoord4 v0
    dcl_texcoord6 v1.xyz
    dcl_texcoord7_pp v2.xyz
    dcl_texcoord5 v3
    dcl_texcoord v4.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_ACC75682_433.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.yz, r0.xxyw, v3.w
    dp3_pp r1.x, v1, v1
    rsq_pp r1.x, r1.x
    mul_pp r1.xy, r1.x, v1
    rcp r1.z, v3.w
    mul r1.zw, r0.xyyz, r1.z
    mad r1.zw, r1, c1.xyxy, c1.xywz
    texld r2, r1.zwzw, s0
    max r3.xyz, r2, c4.x
    min r4.xyz, r3, c4.y
    log r3.x, r4.x
    log r3.y, r4.y
    log r3.z, r4.z
    mul r3.xyz, r3, c14.x
    exp r4.x, r3.x
    exp r4.y, r3.y
    exp r4.z, r3.z
    add r3.xyz, r4, c14.y
    rcp r2.w, c14.z
    mul r5.xyz, r2.w, r3
    dp3 r3.w, r5, c5
    mad r3.xyz, r3, -r2.w, r3.w
    mad r3.xyz, c14.w, r3, r5
    abs r2.w, c3.x
    if_ne c3.x, -c3.x
      texld r5, c4.zwzw, s1
      add r3.w, -r5.y, v3.w
      mad r0.x, r5.x, r3.w, r0.y
      mov r0.w, v3.w
      mov r5.xyz, r0.xzww
    else
      mov r5.xyz, c4.w
    endif
    mov r0.w, v3.w
    cmp r5.xyz, -r2.w, r0.yzww, r5
    rcp r3.w, r5.z
    mul r5.xy, r3.w, r5
    mad r5.xy, r5, c1, c1.wzzw
    mov r5.zw, c4.w
    texldl r5, r5, s0
    add r3.w, r5.w, -c2.y
    add r4.w, -r3.w, c5.w
    rcp r3.w, r3.w
    cmp r3.w, r4.w, c6.x, r3.w
    mad r3.w, c2.x, r3.w, -v3.w
    add r3.w, r3.w, -c15.x
    rcp r4.w, c15.y
    mul_sat r3.w, r3.w, r4.w
    dp3 r4.w, v3, v3
    rsq r4.w, r4.w
    mul r5.xy, r4.w, v3
    add r5.zw, -r5_abs.xyxy, r5_abs.xyyx
    cmp r6.xy, r5.z, r5_abs, r5_abs.yxzw
    rcp r5.z, r6.y
    mul r5.z, r5.z, r6.x
    mul r6.x, r5.z, r5.z
    mad r6.y, r6.x, c6.y, c6.z
    mad r6.y, r6.x, r6.y, c6.w
    mad r6.y, r6.x, r6.y, c19.x
    mad r6.x, r6.x, r6.y, c19.y
    mul r5.z, r5.z, r6.x
    cmp r5.w, r5.w, c19.z, c19.w
    mad r6.x, r5.z, c20.x, c20.y
    mad r5.z, r6.x, r5.w, r5.z
    cmp r5.w, r5.x, c20.z, c20.w
    add r5.z, r5.w, r5.z
    mad r5.w, v3.y, r4.w, -r5.x
    cmp r5.xy, r5.w, r5, r5.yxzw
    cmp r5.y, r5.y, c19.w, c19.z
    cmp r5.x, r5.x, c4.w, r5.y
    add r5.y, r5.z, r5.z
    mad r5.x, r5.x, -r5.y, r5.z
    mad r5.x, r5.x, c24.x, c24.y
    mad r4.w, v3.z, r4.w, c19.w
    mad r5.y, r4.w, -c24.y, c24.z
    mul r5.xy, r5, c21
    texld r5, r5, s2
    add r5.xyz, r5, c15.z
    frc r5.xyz, r5
    add r5.xyz, r5, c24.w
    mad r2.xyz, r5, c21.z, r2
    dp3 r2.x, r2, c5
    mov r4.w, c15.w
    lrp r5.x, r2.x, r4.w, c16.x
    add r2.x, r3.w, c21.w
    pow r2.y, r3.w, r5.x
    cmp r2.x, r2.x, r2.y, c4.w
    mad r3.xyz, r3, c8, -r4
    mad_sat r2.xyz, r2.x, r3, r4
    mul_pp r3.xy, r1, c22.x
    mad r3.zw, r1.xyxy, c22.x, v4.xyxy
    mad r4.xy, v4, c22.y, r3
    add r4.xy, r4, c22.zwzw
    texld_pp r4, r4, s3
    mad r3.zw, r4.xyxy, c23.x, r3
    add r3.zw, r3, c24.w
    dp2add r4.z, r3.zwzw, r3.zwzw, c4.w
    dp2add r3.z, r3.zwzw, -r3.zwzw, c19.w
    mul r3.z, r3.z, c17.y
    mad r3.xy, v4, -c20.x, r3
    add r3.xy, r3, c23.yzzw
    texld_pp r5, r3, s3
    dp2add_pp r3.x, r5, -r5, c19.w
    max_pp r4.w, r3.x, c4.w
    rsq_pp r3.x, r4.w
    rcp_pp r3.x, r3.x
    mul r3.x, r4.z, r3.x
    dp2add_pp r3.y, r4, -r4, c19.w
    max_pp r4.x, r3.y, c4.w
    rsq_pp r3.y, r4.x
    rcp_pp r3.y, r3.y
    mul r3.y, r3.y, r3.y
    mul r3.x, r3.y, r3.x
    add r3.yw, c24.w, v4.xxzy
    mov r4.w, c4.w
    dp2add r4.x, c9, r3.ywzw, r4.w
    dp2add r4.y, c10, r3.ywzw, r4.w
    mad r4.xy, r1, c22.x, r4
    add r4.xy, r4, c24.y
    texld_pp r5, r4, s3
    mad r4.x, r5.y, c25.x, c25.y
    frc r4.x, r4.x
    mad r4.x, r4.x, c25.z, c25.w
    sincos r5.y, r4.x
    dp2add r4.x, c11, r3.ywzw, r4.w
    dp2add r4.y, c12, r3.ywzw, r4.w
    mad r1.xy, r1, c22.x, r4
    add r1.xy, r1, c24.y
    texld_pp r4, r1, s3
    mad r1.x, r4.y, c25.x, c25.y
    frc r1.x, r1.x
    mad r1.x, r1.x, c25.z, c25.w
    sincos r4.y, r1.x
    add r1.x, r4.y, r5.y
    add r1.x, r1.x, -c20.x
    dp2add_sat r1.x, r3.x, r1.x, r3.z
    texld r3, r1.x, s4
    max r1.x, r3.x, c4.w
    add r1.y, r1.x, c23.w
    mul r4.xyz, r1.x, c26
    cmp r4.xyz, r1.y, c27, r4
    mul r1.x, r1.w, c24.y
    mov r1.w, c26.w
    mad r1.y, r1.z, r1.w, c13.x
    add r5.x, r1.y, c23.x
    add r5.y, r1.x, c13.y
    texld r1, r5, s5
    add r1.x, r1.x, -c19.w
    mad r1.x, r1.x, c28.x, c28.y
    mul r1.xyz, r1.x, v2
    mul r1.xyz, r1, r3.x
    mad r1.xyz, r1, c29, r4
    mul_sat r1.w, r3.z, c27.w
    if_ne c3.x, -c3.x
      texld r3, c4.zwzw, s1
      add r3.y, -r3.y, v3.w
      mad r0.x, r3.x, r3.y, r0.y
      mov r3.xyz, r0.xzww
    else
      mov r3.xyz, c4.w
    endif
    cmp r0.xyz, -r2.w, r0.yzww, r3
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.w
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c5.w
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c6.x, r0.x
    mad r0.x, c2.x, r0.x, -v3.w
    mul_sat r0.x, r0.x, c28.z
    mul r0.x, r0.x, r0.x
    mul r0.x, r0.x, r1.w
    lrp r3.xyz, r0.x, r1, r2
    max r0.xyz, r3_abs, -c21.w
    log r1.x, r0.x
    log r1.y, r0.y
    log r1.z, r0.z
    mul r0.xyz, r1, c18.z
    exp r1.x, r0.x
    exp r1.y, r0.y
    exp r1.z, r0.z
    add_pp r0.xyz, r1, c7
    mad_pp oC0.xyz, r0, v0.w, v0
    mov_pp oC0.w, c19.w

// approximately 219 instruction slots used (14 texture, 205 arithmetic)
