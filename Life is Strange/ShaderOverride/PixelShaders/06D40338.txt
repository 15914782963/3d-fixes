//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   sampler2D DNEReflectionTexture;
//   float4 DNEResolution;
//   float4 DebugMode[5];
//   float4 DiffuseOverrideParameter;
//   sampler2D MipTextureParameter;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenDoorFadeSettings;
//   float4 ScreenDoorFadeSettings2;
//   sampler2D ScreenDoorNoiseTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   bool bEnableScreenDoorFade;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   bEnableScreenDoorFade     b0       1
//   DNEMiscParameter          c0       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DebugMode                 c7       5
//   DNEResolution             c12      1
//   ScreenDoorFadeSettings    c13      1
//   ScreenDoorFadeSettings2   c14      1
//   UniformPixelVector_0      c15      1
//   UniformPixelVector_1      c16      1
//   UniformPixelScalars_0     c17      1
//   DNEReflectionTexture      s0       1
//   ScreenDoorNoiseTexture    s1       1
//   PixelTexture2D_0          s2       1
//   PixelTexture2D_1          s3       1
//   PixelTexture2D_2          s4       1
//   MipTextureParameter       s5       1
//

    ps_3_0
    def c1, -0.0199999996, 0.0199999996, 0.5, 1.00010002
    def c2, 2.20000005, 0.5, -0.5, -0.330000013
    def c3, -5.55472994, -6.98316002, -0.0170000009, -0.330000013
    def c6, 0.0670000017, 0.330000013, 0.879999995, 0.100000001
    def c18, 0.222450897, 0.716925859, 0.06062451, -0.00885600038
    def c19, 7.7870369, 0.137931034, 0.333333343, 95
    def c20, 116, -16, -31, 0
    def c21, -0, 0, 1, -0.0245999992
    def c22, 2, -1, -2, -0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord1 v3
    dcl_texcoord6 v4.xyz
    dcl_texcoord7 v5.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

    nrm r0.xyz, v1
    nrm r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul r2.xyz, r2.yxzw, v1.w
    mad r3.xy, vPos, c12, c12.zwzw
    mul r3.xy, r3, v5.w
    nrm_pp r4.xyz, v4
    mad_sat_pp r0.w, c0.x, v5.w, c0.y
    texld_pp r5, v2, s2
    mad_pp r5.xyz, r5, c22.x, c22.yyzw
    mad_pp r5.xyz, v3.w, r5, -c22.wwyw
    nrm_pp r6.xyz, r5
    texld_pp r7, v2, s4
    add_pp r5.xyz, r7, c1.x
    mad_pp r5.xyz, v3.w, r5, c1.y
    mad_pp r7.xyz, r5, c5.w, c5
    lrp_pp r1.w, v3.w, r5.w, -c22.y
    if b0
      mad r3.zw, vPos.xyxy, c14, c14.xyxy
      texld_pp r5, r3.zwzw, s1
      mad r2.w, c13.y, r5.x, c13.z
      mov r5.y, c22.y
      add r3.z, -r5.y, -c13.x
      add r5, r2.w, -r3.z
      texkill r5
    endif
    texld r5, v2, s5
    mad r5, r5.xyzx, -c22.yyyw, -c22.wwwy
    mul r8, r5, c7.y
    mad r5, c7.x, r5, r8
    max_pp r2.w, v3.w, c16.y
    max_pp r3.z, r2.w, c1.z
    texld_pp r8, v2, s3
    mul_pp r8.xyz, r3.z, r8
    mov r9.yw, c22
    add_pp r10.xyz, -r9.y, -c15
    mul_pp r8.xyz, r8, r10
    mad_pp r8.xyz, r8, c4.w, c4
    mov r8.w, -c22.y
    mad r5, c7.z, r8, r5
    mad r10.xyz, r6, c1.z, c1.z
    mov r10.w, -c22.y
    mad r5, c7.w, r10, r5
    add r2.w, -r1.w, c1.w
    cmp r3.zw, r2.w, r1.w, -c22.xyyw
    log r10.x, r3.z
    log r10.y, r3.w
    mul r3.zw, r10.xyxy, c2.x
    exp r10.x, r3.z
    exp r10.yz, r3.w
    mov r10.w, -c22.y
    mad r5, c8.x, r10, r5
    mov r7.w, -c22.y
    mad r5, c8.y, r7, r5
    rcp r2.w, v5.w
    mul r3.xy, r2.w, r3
    mad r3.xy, r3, c2.yzzw, c2.y
    mad_pp r3.xy, r6, c17.x, r3
    mad_pp r3.w, -c0.w, r1.w, c0.w
    mov r3.z, -c22.w

// DNERefelctionTexture fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i -f --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed CRC32_6D40338_166.txt
texldl r11, c220.z, s13
mad r3.x, -r11.x, c220.w, r3.x

    texldl_pp r3, r3, s0
    dp3_sat_pp r2.w, r6, r4
    max_pp r4.xyz, r1.w, r7
    mad_pp r1.w, r2.w, c3.x, c3.y
    mul_pp r1.w, r2.w, r1.w
    exp_pp r1.w, r1.w
    lrp_pp r10.xyz, r1.w, r4, r7
    mul_pp r3.xyz, r3, r10
    mul_pp r3.xyz, r3, c0.z
    mad_pp r3.xyz, r0.w, r3, c15
    mov r3.w, -c22.y
    mad r3, c8.z, r3, r5
    dp3 r4.x, r1, r6
    dp3 r4.y, r2.yxzw, r6
    dp3 r4.z, r0, r6
    mad r4.xyz, r4, c1.z, c1.z
    mov r4.w, -c22.y
    mad r3, c8.w, r4, r3
    mov r2.x, r1.x
    mov r2.z, r0.x
    mad r0.xyz, r2, c1.z, c1.z
    mov r0.w, -c22.y
    mad r0, c9.x, r0, r3
    mad r1, v3.xyzx, -c22.yyyw, -c22.wwwy
    mad r0, c9.y, r1, r0
    mad r1, v3.wwwx, -c22.yyyw, -c22.wwwy
    mad r0, c9.z, r1, r0
    mov r1.w, c9.w
    mad r0, r1.w, c21.xxyz, r0
    mad r0, c10.x, -r9.wwwy, r0
    add r1, r7.xyzx, c3.zzzw
    cmp r1.xw, r1, -c22.w, -c22.y
    cmp r1.x, r1.y, r1.x, -c22.y
    cmp r2.x, r1.z, r1.x, -c22.y
    add r3, -r7.xyzx, c6.xxxy
    cmp r1.x, r3.x, -c22.w, r1.w
    add r1.yz, r7, c2.w
    cmp r1.yz, r1, c22.w, c22.y
    cmp r1.yz, r3, c22.w, r1
    cmp r1.x, r1.y, r1.x, -c22.y
    cmp r2.z, r1.z, r1.x, -c22.y
    mov r2.yw, -c22.xwzy
    mad r0, c10.y, r2, r0
    add r1.xyz, r8, c21.w
    cmp r1.z, r1.z, -c22.w, -c22.y
    cmp r1.y, r1.y, -c22.w, r1.z
    cmp r1.x, r1.x, -c22.w, r1.y
    add r2, -r8.xyzx, c6.zzzw
    cmp r1.yz, r2.xxww, -c22.w, -c22.y
    cmp r1.y, r2.y, r1.y, -c22.y
    cmp r2.z, r2.z, r1.y, -c22.y
    add r1.yw, -r7.xyzz, -c2.w
    cmp r1.w, r1.w, -c22.w, -c22.y
    cmp r1.y, r1.y, -c22.w, r1.w
    cmp r1.y, r3.w, -c22.w, r1.y
    cmp r2.x, -r1.y, r1.x, -c22.w
    mul r1.x, r1.y, r2.x
    add r1.yw, -r8.xyzz, c6.w
    cmp r1.yw, r1, -c22.w, -c22.y
    add r1.y, r1.y, r1.z
    cmp r1.y, -r1.y, -c22.w, -c22.y
    add r1.y, r1.w, r1.y
    cmp r1.y, -r1.y, -c22.w, -c22.y
    cmp r2.y, -r1.x, -c22.w, r1.y
    mov r2.w, -c22.y
    mad r0, c10.z, r2, r0
    dp3 r1.x, r8, c18
    mad r1.y, r1.x, c19.x, c19.y
    add r1.z, r1.x, c18.w
    pow r2.x, r1.x, c19.z
    cmp r1.x, r1.z, r2.x, r1.y
    mad r1.xy, r1.x, c20.x, c20.yzzw
    add r1.x, -r1.x, c19.w
    cmp r2.xz, r1.yyxw, -c22.w, -c22.y
    mov r2.yw, -c22.xwzy
    mad r0, c10.w, r2, r0
    mad r0, c11.x, -r9.wywy, r0
    mad r0, c11.y, -r9.wwwy, r0
    mad r0, c11.z, -r9.wwwy, r0
    mad oC0, c11.w, -r9.wwwy, r0

// approximately 154 instruction slots used (7 texture, 147 arithmetic)
