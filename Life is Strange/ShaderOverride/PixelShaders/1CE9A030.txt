//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   DNEResolution                c8       1
//   UniformPixelVector_0         c9       1
//   UniformPixelVector_1         c10      1
//   UniformPixelVector_2         c11      1
//   UniformPixelScalars_0        c12      1
//   LightColorAndFalloffExponent c13      1
//   SpotDirection                c14      1
//   SpotAngles                   c15      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//

    ps_3_0
    def c2, 10, 1.52876604, 1, 0.5
    def c6, 0.0625, 0, 0.693147004, 2
    def c16, 0.125, -5.55472994, -6.98316002, 0
    dcl_texcoord4_pp v0.xyz
    dcl_texcoord5 v1.xyz
    dcl_texcoord6 v2.xyz
    dcl_texcoord7 v3.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_1CE9A030_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v2, v2
    rsq_pp r0.x, r0.x
    mad_sat_pp r0.y, c7.x, v3.w, c7.y
    mul_pp r0.y, r0.y, c0.x
    nrm_pp r1.xyz, v0
    mad_pp r0.xzw, v2.xyyz, r0.x, r1.xyyz
    nrm_pp r2.xyz, r0.xzww
    mov r3.xyz, c2
    mad_pp r0.x, c12.x, r3.x, r3.y
    exp_pp r0.x, r0.x
    dp3 r0.z, v1, v1
    rsq r0.w, r0.z
    mul r3.xyw, r0.w, v1.xyzz
    dp3 r0.w, r3.xyww, -c14
    add r0.w, r0.w, -c15.x
    mul_sat r0.w, r0.w, c15.y
    mul_pp r4.x, r0.w, r0.w
    texld_pp r5, c2.zwzw, s0
    mov r4.yw, c2.w
    texld_pp r6, r4, s0
    add r0.w, -r0.z, c2.z
    mul r0.w, r5.x, r0.w
    mul r7, r6.x, r0.w
    mov r8, r7
    texkill r8
    if b0
      mad r3.xy, vPos, c8, c8.zwzw
      mul r7.xy, r3, v3.w
      if_ne c3.x, -c3.x
        texld r8, c6, s1
        add r0.w, -r8.y, v3.w
        mad r7.z, r8.x, r0.w, r7.x
        mov r7.xy, r7.zyzw
        mov r0.w, v3.w
      else
        mov r0.w, v3.w
      endif
      rcp r0.w, r0.w
      mul r3.xy, r0.w, r7
      mad r3.xy, r3, c1, c1.wzzw
      texld r8, r3, s2
      mul_pp r3.xyw, r8.xyzz, r8.xyzz
      mul_pp r3.xyw, r3, r5.x
    else
      mov_pp r3.xyw, r5.x
    endif
    mov r5, c5
    mad_pp r5.xyz, c11, r5.w, r5
    mov_sat r0.z, r0.z
    add r0.z, -r0.z, c2.z
    pow_sat_pp r4.z, r0.z, c13.w
    texld_pp r4, r4.zwzw, s0
    add_pp r4.yzw, r3.z, -c9.xxyz
    mul_pp r4.yzw, r4, c10.xxyz
    mad_pp r4.yzw, r4, c4.w, c4.xxyz
    mul_pp r0.z, r6.x, r4.x
    mov_sat_pp r0.w, r1.z
    mul_pp r1.w, r0.w, c0.w
    mul_sat_pp r0.z, r0.z, c0.y
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    mov_sat_pp r0.z, r2.z
    mad_pp r2.w, r0.x, c6.z, c6.w
    mul_pp r2.w, r2.w, c16.x
    mad r0.x, r0.x, r0.z, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r2.w
    mul_pp r0.x, r0.w, r0.x
    mul_pp r0.x, r0.y, r0.x
    dp3_sat_pp r0.y, r1, r2
    mad_pp r0.z, r0.y, c16.y, c16.z
    mul_pp r0.y, r0.y, r0.z
    exp_pp r0.y, r0.y
    lrp_pp r1.xyz, r0.y, c2.z, r5
    mul_pp r0.xyz, r0.x, r1
    mad_pp r0.xyz, r4.yzww, r1.w, r0
    mul_pp r0.xyz, r3.xyww, r0
    mul r0.xyz, r0, c13
    mul r0.xyz, r4.x, r0
    mul r0.xyz, r6.x, r0
    cmp oC0.xyz, -r7.w, c6.y, r0
    mov oC0.w, c6.y

// approximately 92 instruction slots used (5 texture, 87 arithmetic)
