//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float2 DistanceFadeParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   bool bEnableDistanceShadowFading;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   bEnableDistanceShadowFading  b1       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEResolution                c7       1
//   UniformPixelVector_0         c8       1
//   UniformPixelScalars_0        c9       1
//   LightColorAndFalloffExponent c10      1
//   DistanceFadeParameters       c11      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//

    ps_3_0
    def c2, 1, 0.5, 0.0625, 0
    def c6, 0.200000003, -9.99999997e-007, 0.800000012, 15
    def c12, 2, -1, -2, -0
    dcl_texcoord v0.xy
    dcl_texcoord3_pp v1.w
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_9FFD5340_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v3, v3
    rsq_pp r0.x, r0.x
    mul_pp r0.yzw, r0.x, v3.xxyz
    texld_pp r1, v0, s3
    mov_sat_pp r1.w, v1.w
    mad r1.xyz, r1, c12.x, c12.yyzw
    mad_pp r1.xyz, r1.w, r1, -c12.wwyw
    nrm_pp r2.xyz, r1
    nrm_pp r1.xyz, v2
    dp3_pp r2.w, r2, r0.yzww
    mul_pp r3.xyz, r2.w, r2
    mad_pp r3.xyz, r3, c12.x, -r0.yzww
    texld_pp r4, c2, s0
    if b0
      mad r0.yz, vPos.xxyw, c7.xxyw, c7.xzww
      mul r5.xy, r0.yzzw, v4.w
      if_ne c3.x, -c3.x
        texld r6, c2.zwzw, s1
        add r0.y, -r6.y, v4.w
        mad r5.z, r6.x, r0.y, r5.x
        mov r5.xy, r5.zyzw
        mov r0.y, v4.w
      else
        mov r0.y, v4.w
      endif
      rcp r0.y, r0.y
      mul r0.yz, r0.y, r5.xxyw
      mad r0.yz, r0, c1.xxyw, c1.xwzw
      texld r5, r0.yzzw, s2
      mul_pp r4.yzw, r5.xxyz, r5.xxyz
      if b1
        dp3 r0.y, v4, v4
        rsq r0.y, r0.y
        rcp r0.y, r0.y
        add r0.y, -r0.y, c11.x
        mul_sat_pp r0.y, r0.y, c11.y
        mul_pp r0.y, r0.y, r0.y
        mad_pp r0.z, r5.w, r5.w, -r4.x
        mad_pp r5.xyz, r0.y, r0.z, r4.x
      else
        mov_pp r5.xyz, r4.x
      endif
      mul_pp r4.yzw, r4, r5.xxyz
    else
      mov_pp r4.yzw, r4.x
    endif
    mul r0.yz, c9.x, v0.xxyw
    texld r5, r0.yzzw, s4
    texld_pp r6, r3, s5
    mad r6.xyz, r5, c6.x, r6
    mad r0.x, v3.z, -r0.x, -c12.y
    cmp r0.x, r0.w, r0_abs.x, -c12.y
    add r0.w, r0.x, c6.y
    mul r2.w, r0.x, r0.x
    mul r0.x, r0.x, r2.w
    mad r0.x, r0.x, c6.z, c6.x
    cmp r0.x, r0.w, r0.x, c6.x
    lrp r7.xyz, r0.x, r6, r5
    texld r0, r0.yzzw, s6
    lrp r5.xyz, r1.w, r0, r7
    mov r0.y, c12.y
    add r0.xyz, -r0.y, -c8
    mul_pp r0.xyz, r0, r5
    mad_pp r0.xyz, r0, c4.w, c4
    dp3_sat_pp r0.w, r2, r1
    add r1.w, r0.w, c6.y
    mul_pp r0.w, r0.w, c0.w
    cmp_pp r0.w, r1.w, r0.w, -c12.w
    dp3_sat_pp r1.x, r3, r1
    add r1.y, r1.x, c6.y
    pow_pp r2.x, r1.x, c6.w
    mul r1.x, r2.x, c0.x
    mul_pp r1.xzw, r1.x, c5.xyyz
    cmp_pp r1.xyz, r1.y, r1.xzww, -c12.w
    mad_pp r0.xyz, r0, r0.w, r1
    mul_pp r0.xyz, r4.yzww, r0
    mul oC0.xyz, r0, c10
    mov oC0.w, -c12.w

// approximately 90 instruction slots used (7 texture, 83 arithmetic)
