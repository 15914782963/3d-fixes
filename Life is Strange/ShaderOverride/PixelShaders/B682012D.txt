//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEResolution             c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   UniformPixelVector_0      c7       1
//   UniformPixelVector_1      c8       1
//   UniformPixelVector_2      c9       1
//   UniformPixelVector_3      c10      1
//   UniformPixelVector_4      c11      1
//   UniformPixelVector_5      c12      1
//   UniformPixelScalars_0     c13      1
//   UpperSkyColor             c14      1
//   AmbientColorAndSkyFactor  c15      1
//   NvStereoFixTexture        s0       1
//   PixelTexture2D_0          s1       1
//   PixelTexture2D_1          s2       1
//   PixelTexture2D_2          s3       1
//   PixelTexture2D_3          s4       1
//   PixelTexture2D_4          s5       1
//   PixelTexture2D_5          s6       1
//   VAOBuffer                 s7       1
//

    ps_3_0
    def c6, 2, -1, 10, 1.52876604
    def c16, 0.5, -9.99999997e-007, 0.0625, 0
    def c17, 0.816496611, 0.577350259, 0, 0
    def c18, -0.707106769, -0.408248305, 0.577350259, 0.707106769
    dcl_texcoord2_pp v0.xyz
    dcl_texcoord3_pp v1.xyz
    dcl_texcoord6 v2.xyz
    dcl_texcoord5 v3.w
    dcl_texcoord v4.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_B682012D_363.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v3.w
    dp3_pp r1.x, v2, v2
    rsq_pp r1.x, r1.x
    mul_pp r1.yzw, r1.x, v2.xxyz
    texld_pp r2, v4, s1
    mad_pp r2.xyz, r2, c6.x, c6.y
    nrm_pp r3.xyz, r2
    dp3_pp r2.x, r3, r1.yzww
    mul_pp r2.xyz, r2.x, r3
    mad_pp r2.xyz, r2, c6.x, -r1.yzww
    mad_pp r1.y, r2.w, c6.z, c6.w
    exp_pp r1.y, r1.y
    texld_pp r4, v4, s5
    mov r5.y, c6.y
    add_pp r5.xyz, -r5.y, -c7
    mul_pp r4.xyz, r4, r5
    mad_pp r4.xyz, r4, c4.w, c4
    texld_pp r5, v4, s6
    mad_pp r5.xyz, r5, c5.w, c5
    mov r6.xy, c8
    mad_pp r6.xy, v4.yxzw, r6, c9
    rcp r7.x, c10.x
    rcp r7.y, c10.y
    mul_pp r1.z, c13.y, c13.x
    mul r1.z, r7.x, r1.z
    frc r2.w, r1_abs.z
    cmp r2.w, r1.z, r2.w, -r2.w
    mul_pp r2.w, r2.w, c10.x
    frc_pp r3.w, r2.w
    add_pp r8.x, r2.w, -r3.w
    mul r1.z, r7.y, r1.z
    frc r2.w, r1_abs.z
    cmp r1.z, r1.z, r2.w, -r2.w
    mul_pp r1.z, r1.z, c10.y
    frc_pp r2.w, r1.z
    add_pp r8.y, r1.z, -r2.w
    mul_pp r6.zw, r7.xyxy, r8.xyxy
    mad_pp r6.zw, r6.xyxy, r7.xyxy, r6
    texld_pp r7, r6.zwzw, s2
    add_pp r1.z, r6.y, c11.y
    texld_pp r8, r1.z, s3
    add_pp r1.z, r8.y, c16.x
    mul_pp r7.xyz, r7, r1.z
    texld_pp r6, r6, s4
    mul_pp r6.xyz, r7, r6.y
    mad r1.x, v2.z, -r1.x, -c6.y
    cmp_pp r1.x, r1.w, r1_abs.x, -c6.y
    add r1.z, r1.x, c16.y
    mul r1.w, r1.x, r1.x
    mad_pp r1.x, r1.x, -r1.w, -c6.y
    cmp_pp r1.x, r1.z, r1.x, -c6.y
    mul_pp r1.xzw, r1.x, c12.xyyz
    mul_sat_pp r1.xzw, r1, r6.xyyz
    add_pp r1.xzw, r1, c7.xyyz
    dp2add_sat_pp r6.x, r3.yzzw, c17, c17.z
    dp3_sat_pp r6.y, r3, c18
    dp3_sat_pp r6.z, r3.yzxw, c18.yzww
    dp2add_sat_pp r3.x, r2.yzzw, c17, c17.z
    dp3_sat_pp r3.y, r2, c18
    dp3_sat_pp r3.z, r2.yzxw, c18.yzww
    mul_pp r2.xyz, r6, r6
    mad_pp r3.xyz, r1.y, r3, -r1.y
    exp_pp r6.x, r3.x
    exp_pp r6.y, r3.y
    exp_pp r6.z, r3.z
    dp3_pp r1.y, v1, r2
    mul_pp r2.xyz, r1.y, v0
    mul r3.xyz, r5, v0
    dp3_pp r1.y, v1, r6
    mul r3.xyz, r1.y, r3
    mad_pp r2.xyz, r4, r2, r3
    add_pp r1.xyz, r1.xzww, r2
    mul r2.xyz, r4, c14
    mad_pp r1.xyz, r2, c15.w, r1
    abs r1.w, c3.x
    if_ne c3.x, -c3.x
      texld r2, c16.zwzw, s0
      add r2.y, -r2.y, v3.w
      mad r0.z, r2.x, r2.y, r0.x
      mov r0.w, v3.w
      mov r2.xyz, r0.zyww
    else
      mov_pp r2.xyz, c16.w
    endif
    mov r0.z, v3.w
    cmp r0.xyz, -r1.w, r0, r2
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s7
    mul r0.yzw, r4.xxyz, c15.xxyz
    mad_pp oC0.xyz, r1, r0.x, r0.yzww
    rcp r0.x, v3.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 101 instruction slots used (8 texture, 93 arithmetic)
