//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenDoorFadeSettings;
//   float4 ScreenDoorFadeSettings2;
//   sampler2D ScreenDoorNoiseTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   bool bEnableScreenDoorFade;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bEnableScreenDoorFade        b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEEnvMapParameter           c7       1
//   DNEMiscParameter             c8       1
//   DNECubemapPosition           c9       1
//   CameraWorldPos               c10      1
//   DNEResolution                c11      1
//   ScreenDoorFadeSettings       c12      1
//   ScreenDoorFadeSettings2      c13      1
//   UniformPixelVector_0         c14      1
//   UniformPixelVector_1         c15      1
//   LightColorAndFalloffExponent c16      1
//   UpperSkyColor                c17      1
//   AmbientColorAndSkyFactor     c18      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   DNEEnvironmentTexture        s2       1
//   ScreenDoorNoiseTexture       s3       1
//   PixelTexture2D_0             s4       1
//   PixelTexture2D_1             s5       1
//   PixelTexture2D_2             s6       1
//   VAOBuffer                    s7       1
//

    ps_3_0
    def c6, 0, 2, 10, 1.52876604
    def c19, 0.0625, 0, 0.693147004, 2
    def c20, 1, -5.55472994, -6.98316002, 0.5
    def c21, 0.125, 0, 0, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord4 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord5 v5
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_60D57B3A_8509.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v1.w
    add r3.xyz, c10, v5
    mad r4.xy, vPos, c11, c11.zwzw
    mul r4.xy, r4, v5.w
    nrm_pp r5.xyz, v4
    mad_sat_pp r0.w, c8.x, v5.w, c8.y
    mul_pp r1.w, r0.w, c0.x
    dp3_pp r2.w, v3, v3
    rsq_pp r2.w, r2.w
    mul_pp r6.xyz, r2.w, v3
    mad_pp r7.xyz, r5.z, c6.xxyw, -r5
    mad_pp r5.xyw, v3.xyzz, r2.w, r5.xyzz
    nrm_pp r8.xyz, r5.xyww
    texld_pp r9, v2, s6
    mad_pp r2.w, r9.w, c6.z, c6.w
    exp_pp r2.w, r2.w
    texld_pp r10, v2, s5
    mad_pp r5.xyw, r10.xyzz, c5.w, c5.xyzz
    if b0
      mad r9.xy, vPos, c13.zwzw, c13
      texld_pp r10, r9, s3
      mad r3.w, c12.y, r10.x, c12.z
      mov r9.x, c20.x
      add r6.w, r9.x, -c12.x
      add r10, r3.w, -r6.w
      texkill r10
    endif
    texld_pp r10, v2, s4
    mul_pp r9.xyz, r10, c15
    mov r10.x, c20.x
    add_pp r10.xyz, r10.x, -c14
    mul_pp r9.xyz, r9, r10
    mad_pp r9.xyz, r9, c4.w, c4
    dp3_pp r1.x, r1, r7
    dp3_pp r1.y, r2, r7
    dp3_pp r1.z, r0, r7
    add r0.xyz, r3, -c9
    mad_pp r3.xyz, c7.w, r0, r1
    mad_pp r3.w, c8.z, r9.w, c8.w
    texldl_pp r3, r3, s2
    mov_sat_pp r0.x, r5.z
    max_pp r1.xyz, r9.w, r5.xyww
    mad_pp r0.y, r0.x, c20.y, c20.z
    mul_pp r0.x, r0.x, r0.y
    exp_pp r0.x, r0.x
    lrp_pp r2.xyz, r0.x, r1, r5.xyww
    mul_pp r0.xyz, r3, r2
    mul_pp r0.xyz, r0, c7
    mad_pp r0.xyz, r0.w, r0, c14
    mul r1.xyz, r9, c17
    mad_pp r0.xyz, r1, c18.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r3, c19, s1
      add r1.x, -r3.y, v5.w
      mad r4.z, r3.x, r1.x, r4.x
      mov r4.w, v5.w
      mov r1.xyz, r4.zyww
    else
      mov_pp r1.xyz, c6.x
    endif
    mov r4.z, v5.w
    cmp r1.xyz, -r0.w, r4, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r3, r1, s7
    texld_pp r4, c20.xwzw, s0
    mov_sat_pp r0.w, r6.z
    mul_pp r1.x, r0.w, c0.w
    mov_sat_pp r1.y, c0.y
    mul_pp r1.y, r1.y, r1.y
    mul_pp r1.y, r2.w, r1.y
    mov_sat_pp r1.z, r8.z
    mad_pp r2.x, r1.y, c19.z, c19.w
    mul_pp r2.x, r2.x, c21.x
    mad r1.y, r1.y, r1.z, -r1.y
    exp_pp r1.y, r1.y
    mul_pp r1.y, r1.y, r2.x
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.w, r0.w
    dp3_sat_pp r1.y, r6, r8
    mad_pp r1.z, r1.y, c20.y, c20.z
    mul_pp r1.y, r1.y, r1.z
    exp_pp r1.y, r1.y
    lrp_pp r2.xyz, r1.y, c20.x, r5.xyww
    mul_pp r1.yzw, r0.w, r2.xxyz
    mad_pp r1.xyz, r9, r1.x, r1.yzww
    mul_pp r1.xyz, r4.x, r1
    mul_pp r1.xyz, r1, c16
    mad_pp r0.xyz, r0, r3.x, r1
    mad_pp oC0.xyz, r9, c18, r0
    rcp r0.x, v5.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 111 instruction slots used (9 texture, 102 arithmetic)
