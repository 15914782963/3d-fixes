//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEResolution           c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   UniformPixelVector_1    c7       1
//   UniformPixelVector_2    c8       1
//   UniformPixelScalars_1   c9       1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//

    ps_3_0
    def c4, 0.5, 1, 1.5, -0.5
    def c5, 0.800000012, 1, 0.0625, 0
    def c6, -52, 0.75, 64, 0.25
    def c10, 9.99999975e-006, 100000, 1.20000005, -0.100000001
    def c11, 4, 0.00392156886, -0.00392156886, -255
    def c12, 2.74000001, 1, 0, 2
    dcl_texcoord v0.xy
    dcl_texcoord5 v1.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_B9DDC62F_376.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.yz, r0.xxyw, v1.w
    mov r1.xw, c12
    mad r1.xy, v0, r1.x, c7
    texld_pp r2, r1, s2
    dp2add_pp r1.x, r2, -r2, c12.y
    max_pp r2.w, r1.x, c12.z
    rsq_pp r1.x, r2.w
    rcp_pp r2.z, r1.x
    mad r1.xy, v0, r1.w, c8
    texld_pp r1, r1, s2
    dp2add_pp r1.w, r1, -r1, c12.y
    max_pp r2.w, r1.w, c12.z
    rsq_pp r1.w, r2.w
    rcp_pp r1.z, r1.w
    add r1.xyz, r1, r2
    dp3 r1.z, r1, r1
    rsq r1.z, r1.z
    mul r1, r1.z, r1.xyxy
    add r1, r1, r1
    frc r2, r1.zwzw
    add r1, r1, -r2
    mul r1, r1, c4.x
    mad r2.xy, v0, c4.yzzw, c4.w
    mul r2.xy, r2, c4.zyzw
    dp2add r2.x, r2, r2, c12.z
    mad r2.x, r2.x, -c5.x, c5.y
    mov r3, c6
    mad r2.yz, c9.w, r3.xxyw, r3.xzww
    mad r2.x, r2.y, r2.x, -r2.y
    exp_pp r2.x, r2.x
    mul r2.x, r2.z, r2.x
    mul r1, r1, r2.x
    abs r2.x, c3.x
    if_ne c3.x, -c3.x
      texld r3, c5.zwzw, s1
      add r2.y, -r3.y, v1.w
      mad r0.x, r3.x, r2.y, r0.y
      mov r0.w, v1.w
      mov r2.yzw, r0.xxzw
    else
      mov r2.yzw, c12.z
    endif
    mov r3.xy, r0.yzzw
    mov r3.z, v1.w
    cmp r2.xyz, -r2.x, r3, r2.yzww
    rcp r0.x, r2.z
    mul r0.xw, r0.x, r2.xyzy
    mad r2.xy, r0.xwzw, c1, c1.wzzw
    mov r2.zw, c12.z
    texldl r2, r2, s0
    add r0.x, r2.w, -c2.y
    add r0.w, -r0.x, c10.x
    rcp r0.x, r0.x
    cmp r0.x, r0.w, c10.y, r0.x
    mad r0.x, c2.x, r0.x, -v1.w
    add_sat r0.x, r0.x, r0.x
    mul r0.x, r0.x, c10.z
    mul r1, r1, r0.x
    dp2add r2, r1.zwzw, r1.zwzw, c10.w
    texkill r2
    rcp r0.x, v1.w
    mul r0.xy, r0.x, r0.yzzw
    mad r0.xy, r0, c1, c1.wzzw
    mul r0.zw, r1, c11.x
    mad r1.xy, r1, c11.yzzw, r0
    mov r1.zw, c12.z
    texldl r1, r1, s0
    add r0.x, r1.w, -c2.y
    add r0.y, -r0.x, c10.x
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c10.y, r0.x
    mad r0.x, c2.x, -r0.x, v1.w
    cmp r0.xy, r0.x, c12.z, r0.zwzw
    max r1.xy, r0, c11.w
    add r0.xy, r1, c11.w
    mul r0.zw, r1.xyxy, c11.y
    cmp r0.xy, r0, c12.y, r0.zwzw
    max oC0.xy, r0, c12.z
    cmp oC0.zw, r0.xyxy, -c12.z, -r0.xyxy

// approximately 88 instruction slots used (7 texture, 81 arithmetic)
