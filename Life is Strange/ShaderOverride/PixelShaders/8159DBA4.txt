//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   float4 WorldIncidentLighting[7];
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   WorldIncidentLighting        c7       7
//   DNESpecularAttenuation       c14      1
//   DNEEnvMapParameter           c15      1
//   DNEMiscParameter             c16      1
//   DNEResolution                c17      1
//   UniformPixelVector_0         c18      1
//   UniformPixelVector_1         c19      1
//   UniformPixelScalars_0        c20      1
//   UniformPixelScalars_1        c21      1
//   LightColorAndFalloffExponent c22      1
//   UpperSkyColor                c23      1
//   AmbientColorAndSkyFactor     c24      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   DNEEnvironmentTexture        s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//   PixelTexture2D_4             s7       1
//   PixelTexture2D_5             s8       1
//   VAOBuffer                    s9       1
//

    ps_3_0
    def c6, 2, -1, 6, 10
    def c25, 0, 0.333332986, 0.666665971, 9.99999997e-007
    def c26, 0.5, -1, 1, 0.0500000007
    def c27, -0.949999988, 10, 1.52876604, 2089.24487
    def c28, 0.800000012, 1, 0.5, 0.0700000003
    def c29, -0.330000013, -0.099999994, -0.5, 0.375
    def c30, 0.0399999991, 0.300000012, 0.589999974, 0.109999999
    def c31, 0.886227608, 0.0625, 0, 0.125
    def c32, 0, -0, -1, -0.100000001
    def c33, 0.693147004, 2, -5.55472994, -6.98316002
    def c34, 3, -1, -1.02332771, 1.02332771
    def c35, 0.858085215, -0.858085215, 0.247708291, 0.429042608
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord4 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord5 v5.w
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_8159DBA4_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mul_pp r0.yzw, r0.x, v1.xxyz
    nrm_pp r1.xyz, v0
    mul_pp r2.xyz, r0.wyzw, r1.yzxw
    mad_pp r2.xyz, r0.zwyw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v1.w
    mad r3.xy, vPos, c17, c17.zwzw
    mul r3.xy, r3, v5.w
    nrm_pp r4.xyz, v4
    mad_sat_pp r1.w, c16.x, v5.w, c16.y
    mul_pp r1.w, r1.w, c14.x
    texld_pp r5, v2, s3
    mad_pp r5.xyz, r5, c6.x, c6.y
    mul_pp r6.xy, c6.zwzw, v2
    texld_pp r7, r6, s4
    dp2add_pp r2.w, r7, -r7, -c6.y
    max_pp r4.w, r2.w, c32.x
    rsq_pp r2.w, r4.w
    rcp_pp r7.z, r2.w
    lrp_pp r8.xyz, -c32.w, r7, -c32.yyzw
    mov r9.xyw, c20
    mad_pp r9.xyz, r9.y, r9.x, c25
    texld_pp r6, r6, s5
    add_pp r9.xyz, r6, r9
    frc_pp r9.xyz, r9
    add r9.xyz, -r9, -c6.y
    max r10.xyz, c25.w, r9
    mul r9.xyz, r10, r10
    mul_pp r9.xyz, r9, r9
    frc_pp r10.xyz, -r6
    add_sat_pp r6.xyz, r6, r10
    mul_pp r6.xy, r6, r9
    add_pp r2.w, r6.y, r6.x
    mad_pp r2.w, r9.z, r6.z, r2.w
    mad_pp r0.x, v1.z, r0.x, -c6.y
    mul_pp r0.x, r2.w, r0.x
    mul_pp r2.w, r0.x, c26.x
    add_pp r6.xyz, -r5, r8
    mul_pp r6.xyz, r2.w, r6
    texld_pp r8, v2, s6
    mul_pp r4.w, r8.y, c20.z
    mad_pp r6.xyz, r4.w, r6, r5
    nrm_pp r8.xyz, r6
    dp3_pp r5.w, v3, v3
    rsq_pp r5.w, r5.w
    mul_pp r6.xyz, r5.w, v3
    cmp r6.w, vFace, c26.y, c26.z
    mul r6.w, r6.w, c0.x
    mad_pp r9.xyz, v3, r5.w, r4
    nrm_pp r10.xyz, r9
    add r5.w, -c19.x, c19.y
    mov r9.x, c19.x
    mad_pp r5.w, c21.x, r5.w, r9.x
    lrp_pp r7.w, r2.w, -c6.y, r5.w
    lrp_pp r5.w, r4.w, r7.w, c21.x
    max_pp r7.w, r5.w, c26.w
    add r5.w, r7.w, c27.x
    mad r7.w, r7.w, c27.y, c27.z
    exp_pp r7.w, r7.w
    cmp_pp r5.w, r5.w, c27.w, r7.w
    texld_pp r11, v2, s7
    add_pp r12, r11.w, c29.x
    texkill r12
    mul_pp r9.xyz, r11, r11
    mov r12.yzw, c29
    mad_pp r12.xyz, r0.x, r12.yzww, c28
    mad r9.xyz, r12.x, r9, -r11
    mad_pp r9.xyz, r4.w, r9, r11
    mov r11.y, c6.y
    add_pp r11.xyz, -r11.y, -c18
    mul_pp r9.xyz, r9, r11
    mad_pp r9.xyz, r9, c4.w, c4
    texld_pp r11, v2, s8
    mul_pp r13.xyz, r11, c20.w
    mul_pp r0.x, r2.w, r4.w
    mad r11.xyz, r9.w, -r11, c28.w
    mad_pp r11.xyz, r0.x, r11, r13
    mad_pp r11.xyz, r11, c5.w, c5
    lrp_pp r13.xyz, r2.w, r7, r5
    mov_pp r13.w, r12.y
    texldl_pp r7, r13, s2
    mul_pp r5.xyz, r7, c15
    dp3_pp r0.x, r4, r13
    add_pp r0.x, -r0_abs.x, -c6.y
    add r2.w, r0_abs.x, -c25.w
    mul r4.x, r0_abs.x, r0_abs.x
    mad_pp r0.x, r0_abs.x, r4.x, c30.x
    cmp_pp r0.x, r2.w, r0.x, c30.x
    mul_pp r4.xyz, r5, r0.x
    mul_pp r5.xyz, r4, r12.z
    dp3_pp r0.x, r5, c30.yzww
    mad r4.xyz, r12.z, -r4, r0.x
    mad_pp r4.xyz, r4, c26.x, r5
    mad_pp r4.xyz, r4.w, r4, c18
    mul r5.xyz, r9, c23
    mad_pp r4.xyz, r5, c24.w, r4
    dp3_pp r1.z, r1, r8
    dp3_pp r1.x, r2, r8
    dp3_pp r1.y, r0.yzww, r8
    mul r0.xyz, r1, r1.xyxw
    mad r2.y, r0.y, c34.x, c34.y
    mul r2.xz, r1, r1.y
    mad_pp r2.w, r1.z, r1.z, -r0.x
    mul r7.xyz, r1, c34.zwzw
    mul r7.w, r0.z, c35.x
    mul r0, r2, c35.yzyw
    dp4 r1.x, c8, r7
    mov r2.x, c31.x
    mad_pp r1.x, c7.x, r2.x, r1.x
    dp4 r1.y, c9, r0
    add_pp r1.x, r1.y, r1.x
    dp4 r2.y, c10, r7
    mad_pp r2.y, c7.y, r2.x, r2.y
    dp4 r2.z, c11, r0
    add_pp r1.y, r2.z, r2.y
    dp4 r2.y, c12, r7
    mad_pp r2.x, c7.z, r2.x, r2.y
    dp4 r0.x, c13, r0
    add_pp r1.z, r0.x, r2.x
    max_pp r0.xyz, r1, c32.x
    mad_pp r0.xyz, r9, r0, r4
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r2, c31.yzzw, s1
      add r1.x, -r2.y, v5.w
      mad r3.z, r2.x, r1.x, r3.x
      mov r3.w, v5.w
      mov r1.xyz, r3.zyww
    else
      mov r1.xyz, c32.x
    endif
    mov r3.z, v5.w
    cmp r1.xyz, -r0.w, r3, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r2, r1, s9
    mul_pp r1.xyz, r6.w, r8
    texld_pp r3, c26.zxzw, s0
    dp3_sat_pp r0.w, r1, r6
    mul_pp r2.y, r0.w, c14.w
    mov_sat_pp r2.z, c14.y
    mul_pp r2.z, r2.z, r2.z
    mul_pp r2.z, r5.w, r2.z
    dp3_sat_pp r1.x, r1, r10
    mad_pp r1.y, r2.z, c33.x, c33.y
    mul_pp r1.y, r1.y, c31.w
    mad r1.x, r2.z, r1.x, -r2.z
    exp_pp r1.x, r1.x
    mul_pp r1.x, r1.x, r1.y
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.w, r0.w
    dp3_sat_pp r1.x, r6, r10
    mad_pp r1.y, r1.x, c33.z, c33.w
    mul_pp r1.x, r1.x, r1.y
    exp_pp r1.x, r1.x
    lrp_pp r3.yzw, r1.x, -c6.y, r11.xxyz
    mul_pp r1.xyz, r0.w, r3.yzww
    mad_pp r1.xyz, r9, r2.y, r1
    mul_pp r1.xyz, r3.x, r1
    mul_pp r1.xyz, r1, c22
    mad_pp r0.xyz, r0, r2.x, r1
    mad_pp oC0.xyz, r9, c24, r0
    rcp r0.x, v5.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 178 instruction slots used (11 texture, 167 arithmetic)
