//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowTexture;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEResolution                c7       1
//   UniformPixelVector_0         c8       1
//   UniformPixelScalars_0        c9       1
//   LightColorAndFalloffExponent c10      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   ShadowTexture                s3       1
//

    ps_3_0
    def c2, 0, 2, 0.5, 1
    def c6, 0.0625, 0, -9.99999997e-007, 15
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xy
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord7 v5.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_E802128A_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v4, v4
    rsq_pp r0.x, r0.x
    mul_pp r0.yzw, r0.x, v4.xxyz
    nrm_pp r1.xyz, v2
    mad_pp r2.xyz, r0.w, c2.xxyw, -r0.yzww
    texld_pp r3, v0, s3
    mov_sat_pp r3.x, r3.x
    mov r3.yw, c2.z
    texld_pp r4, r3, s0
    dp3 r0.y, v3, v3
    add r0.z, -r0.y, c2.w
    mul r5, r4.x, r0.z
    mov r6, r5
    texkill r6
    if b0
      mad r3.xy, vPos, c7, c7.zwzw
      mul r5.xy, r3, v5.w
      if_ne c3.x, -c3.x
        texld r6, c6, s1
        add r0.z, -r6.y, v5.w
        mad r5.z, r6.x, r0.z, r5.x
        mov r5.xy, r5.zyzw
        mov r0.z, v5.w
      else
        mov r0.z, v5.w
      endif
      rcp r0.z, r0.z
      mul r3.xy, r0.z, r5
      mad r3.xy, r3, c1, c1.wzzw
      texld r6, r3, s2
      mul_pp r4.yzw, r6.xxyz, r6.xxyz
      mul_pp r4.yzw, r4, r4.x
    else
      mov_pp r4.yzw, r4.x
    endif
    mov_sat r0.y, r0.y
    add r0.y, -r0.y, c2.w
    pow_sat_pp r3.z, r0.y, c10.w
    texld_pp r3, r3.zwzw, s0
    mad r0.x, v4.z, -r0.x, c2.w
    cmp r0.x, r0.w, r0_abs.x, c2.w
    add r0.y, r0.x, c6.z
    mul r0.z, r0.x, r0.x
    mul r0.z, r0.z, r0.z
    mul r0.x, r0.z, r0.x
    cmp r0.x, r0.y, r0.x, c2.x
    mul r0.yzw, c2.xwwx, v1.xxyx
    mul r3.yzw, c2.xxww, v1.xxxy
    mul r3.yzw, r3, c9.z
    mad r0.yzw, c9.w, r0, r3
    add r0.xyz, r0.yzww, r0.x
    mov r0.w, c2.w
    add r3.yzw, r0.w, -c8.xxyz
    mul_pp r0.xyz, r0, r3.yzww
    mad_pp r0.xyz, r0, c4.w, c4
    mov_sat_pp r0.w, r1.z
    add r1.w, r0.w, c6.z
    mul_pp r0.w, r0.w, c0.w
    cmp_pp r0.w, r1.w, r0.w, c2.x
    dp3_sat_pp r1.x, r2, r1
    add r1.y, r1.x, c6.z
    pow_pp r2.x, r1.x, c6.w
    mul r1.x, r2.x, c0.x
    mul_pp r1.xzw, r1.x, c5.xyyz
    cmp_pp r1.xyz, r1.y, r1.xzww, c2.x
    mad_pp r0.xyz, r0, r0.w, r1
    mul_pp r0.xyz, r4.yzww, r0
    mul r0.xyz, r3.x, r0
    mul r0.xyz, r0, c10
    cmp oC0.xyz, -r5.w, c2.x, r0
    mov oC0.w, c2.x

// approximately 81 instruction slots used (5 texture, 76 arithmetic)
