//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEResolution           c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   UniformPixelVector_0    c7       1
//   UniformPixelVector_1    c8       1
//   UniformPixelScalars_0   c9       1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//

    ps_3_0
    def c4, 8, 0.0625, 0, 1
    def c5, 0.5, 9.99999975e-006, 100000, 0.0133333337
    dcl_texcoord4 v0.w
    dcl_texcoord7_pp v1.yz
    dcl_texcoord5 v2.w
    dcl_texcoord v3.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_1E83EC52_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v2.w
    mov r1.xyz, c8
    add_pp r1.xyz, r1, c7
    mul_pp r1.w, c4.x, v1.z
    frc_pp r2.x, r1.w
    add_pp r1.w, r1.w, -r2.x
    mul r2.x, r1.w, c4.y
    mov r2.y, c4.z
    mad r2.xy, v3, c4.ywzw, r2
    texld r2, r2, s2
    add_pp r1.w, c5.x, v1.y
    mul r1.w, r1.w, c9.x
    mul r1.w, r1.w, r2.y
    abs r2.x, c3.x
    if_ne c3.x, -c3.x
      texld r3, c4.yzzw, s1
      add r2.y, -r3.y, v2.w
      mad r0.z, r3.x, r2.y, r0.x
      mov r0.w, v2.w
      mov r2.yzw, r0.xzyw
    else
      mov r2.yzw, c4.z
    endif
    mov r0.z, v2.w
    cmp r0.xyz, -r2.x, r0, r2.yzww
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.z
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c5.y
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c5.z, r0.x
    mad r0.x, c2.x, r0.x, -v2.w
    mul_sat r0.x, r0.x, c5.w
    mul_pp r0.x, r0.x, r1.w
    mul r0.yzw, r1.xxyz, v0.w
    mul_pp oC0.xyz, r0.x, r0.yzww
    mov oC0.w, c4.z

// approximately 44 instruction slots used (4 texture, 40 arithmetic)
