//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4x4 ScreenToShadowMatrix;
//   float4 ShadowBufferAndTexelSize;
//   sampler2D ShadowDepthTexture;
//   float ShadowOverrideFactor;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   ScreenToShadowMatrix         c7       4
//   DNEMiscParameter             c11      1
//   DNEResolution                c12      1
//   LightColorAndFalloffExponent c13      1
//   ShadowBufferAndTexelSize     c14      1
//   ShadowOverrideFactor         c15      1
//   ShadowWarpFunctionTexture    s0       1
//   ShadowDepthTexture           s1       1
//

    ps_3_0
    def c1, 1, 0.5, 0, 0.0399999991
    def c2, 2954.63867, 2047.9989, 2, 0.125
    def c3, -5.55472994, -6.98316002, 0.200000003, 0
    dcl_texcoord4_pp v0.xyz
    dcl_texcoord6 v1
    dcl_texcoord7 v2.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mad_sat_pp r0.y, c11.x, v2.w, c11.y
    mul_pp r0.y, r0.y, c0.x
    nrm_pp r1.xyz, v0
    mad_pp r0.xzw, v1.xyyz, r0.x, r1.xyyz
    nrm_pp r2.xyz, r0.xzww
    texld_pp r3, c1, s0
    if b0
      mad r0.xz, vPos.xyyw, c12.xyyw, c12.zyww
      mul r0.xz, r0, v2.w
      mul r4, r0.z, c8

// Unreal Engine shadow fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-unreal-shadows --only-autofixed --git --quiet CRC32_FCEE8210_0.txt
add r9.w, v1.w, -r9.y
mad r0.x, -r9.w, r9.x, r0.x

      mad r4, c7, r0.x, r4
      mad r4, c9, v1.w, r4
      mad r4, c10, v2.w, r4
      rcp r0.x, r4.w
      mul r0.zw, r0.x, r4.xyxy
      texld r5, r0.zwzw, s1
      mov r6.xz, c1
      mad r6, c14.wwzw, r6.zxxz, r0.zwzw
      texld r7, r6, s1
      texld r6, r6.zwzw, s1
      mad r3.yz, r4.xxyw, r0.x, c14.xzww
      texld r8, r3.yzzw, s1
      mov r5.y, r7.x
      mov r5.z, r6.x
      mov r5.w, r8.x
      add r4, r4.z, -r5
      cmp r5, r4, c1.z, c1.x
      mul r0.xz, r0.zyww, c14.xyyw
      frc r0.xz, r0
      cmp r3.yz, r4.xxyw, -c1.z, -c1.x
      add r3.yz, r3, r5.xzww
      mad r0.xw, r0.x, r3.yyzz, r5.xyzy
      lrp r1.w, r0.z, r0.w, r0.x
      mul r0.x, r1.w, c15.x
      mul_pp r0.xzw, r0.x, r3.x
    else
      mov_pp r0.xzw, r3.x
    endif
    mov r1.w, c1.w
    mad_pp r3.xyz, c5.w, r1.w, c5
    mov_sat_pp r1.w, r1.z
    mul_pp r2.w, r1.w, c0.w
    mov_sat_pp r3.w, c0.y
    mul_pp r3.w, r3.w, r3.w
    mov_sat_pp r4.x, r2.z
    mul_pp r4.y, r3.w, c2.x
    mad_pp r3.w, r3.w, c2.y, c2.z
    mul_pp r3.w, r3.w, c2.w
    mad r4.x, r4.y, r4.x, -r4.y
    exp_pp r4.x, r4.x
    mul_pp r3.w, r3.w, r4.x
    mul_pp r1.w, r1.w, r3.w
    mul_pp r0.y, r0.y, r1.w
    dp3_sat_pp r1.x, r1, r2
    mad_pp r1.y, r1.x, c3.x, c3.y
    mul_pp r1.x, r1.x, r1.y
    exp_pp r1.x, r1.x
    lrp_pp r2.xyz, r1.x, c1.x, r3
    mul_pp r1.xyz, r0.y, r2
    mad_pp r1.xyz, c4, r2.w, r1
    mul_pp r0.xyz, r0.xzww, r1
    mul oC0.xyz, r0, c13
    mov_pp oC0.w, c3.z

// approximately 71 instruction slots used (5 texture, 66 arithmetic)
