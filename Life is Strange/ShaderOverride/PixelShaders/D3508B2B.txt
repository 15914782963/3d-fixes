//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNESpecularAttenuation       c7       1
//   DNEEnvMapParameter           c8       1
//   DNEMiscParameter             c9       1
//   DNEResolution                c10      1
//   UniformPixelVector_0         c11      1
//   UniformPixelVector_1         c12      1
//   UniformPixelScalars_0        c13      1
//   UniformPixelScalars_1        c14      1
//   LightColorAndFalloffExponent c15      1
//   UpperSkyColor                c16      1
//   AmbientColorAndSkyFactor     c17      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   DNEEnvironmentTexture        s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//   PixelTexture2D_4             s7       1
//   VAOBuffer                    s8       1
//

    ps_3_0
    def c6, 9.99999997e-007, 0.5, -1, 1
    def c18, 6, 10, 1, 0
    def c19, 0.0500000007, -0.949999988, 10, 1.52876604
    def c20, 2089.24487, -0.330000013, 0.0700000003, 0.0399999991
    def c21, 0.100000001, 0, 0.333332986, 0.666665971
    def c22, 0.800000012, 1, 0.5, 0
    def c23, 0.300000012, 0.589999974, 0.109999999, 0
    def c24, 0.0625, 0, 0.693147004, 2
    def c25, -0.099999994, -0.5, 0.375, 0.125
    def c26, -5.55472994, -6.98316002, 0, 0
    dcl_color1 v0.xyz
    dcl_texcoord v1.xy
    dcl_texcoord4 v2.xyz
    dcl_texcoord6 v3.xyz
    dcl_texcoord5 v4.w
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_D3508B2B_242.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v0, v0
    rsq_pp r0.x, r0.x
    mad r0.yz, vPos.xxyw, c10.xxyw, c10.xzww
    mul r1.xy, r0.yzzw, v4.w
    nrm_pp r2.xyz, v3
    mad_sat_pp r0.y, c9.x, v4.w, c9.y
    mul_pp r0.y, r0.y, c7.x
    mul_pp r0.zw, c18.xyxy, v1.xyxy
    texld_pp r3, r0.zwzw, s3
    dp2add_pp r2.w, r3, -r3, c18.z
    max_pp r3.w, r2.w, c18.w
    rsq_pp r2.w, r3.w
    rcp_pp r3.z, r2.w
    add_pp r4.xyz, r3, -c18.wwzw
    mul_pp r4.xyz, r4, c21.x
    mov r5.xy, c13
    mad_pp r5.xyz, r5.y, r5.x, c21.yzww
    texld_pp r6, r0.zwzw, s4
    add_pp r5.xyz, r5, r6
    frc_pp r5.xyz, r5
    add r5.xyz, -r5, c18.z
    max r7.xyz, c6.x, r5
    mul r5.xyz, r7, r7
    mul_pp r5.xyz, r5, r5
    frc_pp r7.xyz, -r6
    add_sat_pp r6.xyz, r6, r7
    mul_pp r0.zw, r5.xyxy, r6.xyxy
    add_pp r0.z, r0.w, r0.z
    mad_pp r0.z, r5.z, r6.z, r0.z
    mul_pp r0.z, r0.z, c13.z
    mad_pp r0.x, v0.z, r0.x, c18.z
    mul_pp r0.x, r0.z, r0.x
    mul_pp r0.z, r0.x, c6.y
    mul_pp r4.xyz, r4, r0.z
    texld_pp r5, v1, s5
    mul_pp r0.w, r5.y, c13.w
    mad_pp r4.xyz, r0.w, r4, c18.wwzw
    nrm_pp r5.xyz, r4
    dp3_pp r2.w, v2, v2
    rsq_pp r2.w, r2.w
    mul_pp r4.xyz, r2.w, v2
    cmp r3.w, vFace, c6.z, c6.w
    mul r3.w, r3.w, c0.x
    mad_pp r6.xyz, v2, r2.w, r2
    nrm_pp r7.xyz, r6
    mov r6.xy, c14
    lrp_pp r2.w, r6.y, c12.y, c12.x
    lrp_pp r4.w, r0.z, c18.z, r2.w
    lrp_pp r2.w, r0.w, r4.w, c14.y
    max_pp r4.w, r2.w, c19.x
    add r2.w, r4.w, c19.y
    mad r4.w, r4.w, c19.z, c19.w
    exp_pp r4.w, r4.w
    cmp_pp r2.w, r2.w, c20.x, r4.w
    texld_pp r8, v1, s6
    add_pp r9, r8.w, c20.y
    texkill r9
    mul_pp r6.yzw, r8.xxyz, r8.xxyz
    mov r9.xyz, c25
    mad_pp r9.xyz, r0.x, r9, c22
    mad r6.yzw, r9.x, r6, -r8.xxyz
    mad_pp r6.yzw, r0.w, r6, r8.xxyz
    mov r8.z, c18.z
    add_pp r8.xyz, r8.z, -c11
    mul_pp r6.yzw, r6, r8.xxyz
    mad_pp r6.yzw, r6, c4.w, c4.xxyz
    texld_pp r8, v1, s7
    mul_pp r10.xyz, r8, c14.x
    mul_pp r0.x, r0.w, r0.z
    mad r8.xyz, r6.x, -r8, c20.z
    mad_pp r8.xyz, r0.x, r8, r10
    mad_pp r8.xyz, r8, c5.w, c5
    lrp_pp r10.xyz, r0.z, r3, c18.wwzw
    mov_pp r10.w, r9.y
    texldl_pp r11, r10, s2
    mul_pp r3.xyz, r11, c8
    dp3_pp r0.x, r2, r10
    add_pp r0.x, -r0_abs.x, c18.z
    add r0.z, r0_abs.x, -c6.x
    mul r2.x, r0_abs.x, r0_abs.x
    mad_pp r0.x, r0_abs.x, r2.x, c20.w
    cmp_pp r0.x, r0.z, r0.x, c20.w
    mul_pp r2.xyz, r3, r0.x
    mul_pp r3.xyz, r2, r9.z
    dp3_pp r0.x, r3, c23
    mad r2.xyz, r9.z, -r2, r0.x
    mad_pp r2.xyz, r2, c6.y, r3
    mad_pp r0.xzw, r0.w, r2.xyyz, c11.xyyz
    mul r2.xyz, r6.yzww, c16
    mad_pp r0.xzw, r2.xyyz, c17.w, r0
    abs r2.x, c3.x
    if_ne c3.x, -c3.x
      texld r9, c24, s1
      add r2.y, -r9.y, v4.w
      mad r1.z, r9.x, r2.y, r1.x
      mov r1.w, v4.w
      mov r3.xyz, r1.zyww
    else
      mov_pp r3.xyz, c18.w
    endif
    mov r1.z, v4.w
    cmp r1.xyz, -r2.x, r1, r3
    rcp r1.z, r1.z
    mul r1.xy, r1.z, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s8
    mul_pp r1.yzw, r3.w, r5.xxyz
    texld_pp r3, c6.wyzw, s0
    dp3_sat_pp r2.x, r1.yzww, r4
    mul_pp r2.y, r2.x, c7.w
    mov_sat_pp r2.z, c7.y
    mul_pp r2.z, r2.z, r2.z
    mul_pp r2.z, r2.w, r2.z
    dp3_sat_pp r1.y, r1.yzww, r7
    mad_pp r1.z, r2.z, c24.z, c24.w
    mul_pp r1.z, r1.z, c25.w
    mad r1.y, r2.z, r1.y, -r2.z
    exp_pp r1.y, r1.y
    mul_pp r1.y, r1.y, r1.z
    mul_pp r1.y, r2.x, r1.y
    mul_pp r0.y, r0.y, r1.y
    dp3_sat_pp r1.y, r4, r7
    mad_pp r1.z, r1.y, c26.x, c26.y
    mul_pp r1.y, r1.y, r1.z
    exp_pp r1.y, r1.y
    lrp_pp r2.xzw, r1.y, c18.z, r8.xyyz
    mul_pp r1.yzw, r0.y, r2.xxzw
    mad_pp r1.yzw, r6, r2.y, r1
    mul_pp r1.yzw, r3.x, r1
    mul_pp r1.yzw, r1, c15.xxyz
    mad_pp r0.xyz, r0.xzww, r1.x, r1.yzww
    mad_pp oC0.xyz, r6.yzww, c17, r0
    rcp r0.x, v4.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 144 instruction slots used (10 texture, 134 arithmetic)
