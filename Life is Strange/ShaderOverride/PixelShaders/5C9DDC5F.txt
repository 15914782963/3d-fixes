//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEResolution           c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   UniformPixelVector_0    c7       1
//   UniformPixelVector_1    c8       1
//   UniformPixelVector_2    c9       1
//   UniformPixelVector_3    c10      1
//   UniformPixelVector_4    c11      1
//   UniformPixelVector_5    c12      1
//   UniformPixelScalars_1   c13      1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//   PixelTexture2D_1        s3       1
//   PixelTexture2D_2        s4       1
//

    ps_3_0
    def c4, 0.699999988, 0.170000002, 2.79999995, 0.680000007
    def c5, -0.774999976, 0.600000024, 0.150000006, -0.5
    def c6, 0.25, 0.5, 6.28318548, -3.14159274
    def c14, 0.135626316, 0, 1, 0.800000012
    def c15, 0.0115282368, 0, 0.0850000009, 3
    def c16, 0.185000002, 1, 0.0625, 0
    def c17, 0.75, 0.600000024, 0.5, 9.99999975e-006
    def c18, 100000, 0.00377358496, 0, 0
    def c19, 0, 1, 2, -0.0850000009
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xyz
    dcl_texcoord2 v2.x
    dcl_texcoord4 v3
    dcl_texcoord6 v4.xyz
    dcl_texcoord5 v5.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_5C9DDC5F_359.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v5.w
    dp3_pp r1.x, v4, v4
    rsq_pp r1.x, r1.x
    mul_pp r1.xy, r1.x, v4
    mad r1.zw, r1.xyxy, c5.x, v0.xyxy
    mul r2, c4, v2.x
    mad r2.xy, v0, c5.y, r2
    mad r2.xy, r1, c5.x, r2
    texld_pp r3, r2, s2
    mad r1.zw, r3.xyxy, c5.z, r1
    add r1.zw, r1, c5.w
    dp2add r2.x, r1.zwzw, r1.zwzw, c19.x
    dp2add r1.z, r1.zwzw, -r1.zwzw, c19.y
    mul r1.z, r1.z, c13.y
    mad r2.yz, v0.xxyw, c19.z, r2.xzww
    mad r2.yz, r1.xxyw, c5.x, r2
    texld_pp r4, r2.yzzw, s2
    dp2add_pp r1.w, r4, -r4, c19.y
    max_pp r2.y, r1.w, c19.x
    rsq_pp r1.w, r2.y
    rcp_pp r1.w, r1.w
    mul r1.w, r2.x, r1.w
    dp2add_pp r2.x, r3, -r3, c19.y
    max_pp r3.x, r2.x, c19.x
    rsq_pp r2.x, r3.x
    rcp_pp r2.x, r2.x
    mul r2.x, r2.x, r2.x
    mul r1.w, r1.w, r2.x
    add r2.xy, c5.w, v0
    mov r3.x, c19.x
    dp2add r4.x, c8, r2, r3.x
    dp2add r4.y, c9, r2, r3.x
    mad r2.zw, r1.xyxy, c5.x, r4.xyxy
    add r2.zw, r2, -c5.w
    texld_pp r4, r2.zwzw, s2
    mad r2.z, r4.y, c6.x, c6.y
    frc r2.z, r2.z
    mad r2.z, r2.z, c6.z, c6.w
    sincos r4.y, r2.z
    dp2add r5.x, c10, r2, r3.x
    dp2add r5.y, c11, r2, r3.x
    mad r1.xy, r1, c5.x, r5
    add r1.xy, r1, -c5.w
    texld_pp r2, r1, s2
    mad r1.x, r2.y, c6.x, c6.y
    frc r1.x, r1.x
    mad r1.x, r1.x, c6.z, c6.w
    sincos r2.y, r1.x
    add r1.x, r2.y, r4.y
    add r1.x, r1.x, c19.z
    dp2add_sat r1.x, r1.w, r1.x, r1.z
    texld r1, r1.x, s3
    max r2.x, r1.x, c19.x
    add r1.y, r2.x, c19.w
    mul r2.xyz, r2.x, c14
    cmp r2.xyz, r1.y, c15, r2
    rcp r1.y, v5.w
    mul r1.yw, r0.xxzy, r1.y
    mad r1.yw, r1, c1.xxzy, c1.xwzz
    mul r3.x, r1.w, -c5.w
    mov r1.w, c14.w
    mad r1.y, r1.y, r1.w, c12.x
    add r4.x, r1.y, c5.z
    add r4.y, r3.x, c12.y
    texld r3, r4, s4
    add r1.y, r3.x, -c19.y
    mad r1.y, r1.y, c16.x, c16.y
    mul r3.xyz, r1.y, v1
    mul r1.xyw, r1.x, r3.xyzz
    mad r1.xyw, r1, c17.xyzz, r2.xyzz
    add_pp r1.xyw, r1, c7.xyzz
    mul_sat r1.z, r1.z, c15.w
    abs r2.x, c3.x
    if_ne c3.x, -c3.x
      texld r3, c16.zwzw, s1
      add r2.y, -r3.y, v5.w
      mad r0.z, r3.x, r2.y, r0.x
      mov r0.w, v5.w
      mov r2.yzw, r0.xzyw
    else
      mov r2.yzw, c19.x
    endif
    mov r0.z, v5.w
    cmp r0.xyz, -r2.x, r0, r2.yzww
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c19.x
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c17.w
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c18.x, r0.x
    mad r0.x, c2.x, r0.x, -v5.w
    mul_sat r0.x, r0.x, c18.y
    mul r0.x, r0.x, r0.x
    mul_pp oC0.w, r0.x, r1.z
    mad_pp oC0.xyz, r1.xyww, v3.w, v3

// approximately 125 instruction slots used (9 texture, 116 arithmetic)
