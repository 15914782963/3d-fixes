//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_5;
//   float4 UniformPixelScalars_6;
//   float4 UniformPixelScalars_7;
//   float4 UniformPixelScalars_8;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//   float3 UpperSkyColor;
//   float4 WorldIncidentLighting[7];
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   WorldIncidentLighting        c7       7
//   CameraWorldPos               c14      1
//   DNEResolution                c15      1
//   UniformPixelVector_0         c16      1
//   UniformPixelVector_1         c17      1
//   UniformPixelVector_2         c18      1
//   UniformPixelVector_3         c19      1
//   UniformPixelVector_4         c20      1
//   UniformPixelVector_5         c21      1
//   UniformPixelVector_6         c22      1
//   UniformPixelScalars_1        c23      1
//   UniformPixelScalars_2        c24      1
//   UniformPixelScalars_3        c25      1
//   UniformPixelScalars_5        c26      1
//   UniformPixelScalars_6        c27      1
//   UniformPixelScalars_7        c28      1
//   UniformPixelScalars_8        c29      1
//   LightColorAndFalloffExponent c30      1
//   UpperSkyColor                c31      1
//   AmbientColorAndSkyFactor     c32      1
//   ShadowWarpFunctionTexture    s0       1
//   SceneColorTexture            s1       1
//   NvStereoFixTexture           s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//

    ps_3_0
    def c5, 0.930000007, 0.0700000003, 3, -1
    def c6, -1.02332771, 1.02332771, 0.858085215, 0.886227608
    def c33, 1, 0.5, 0.0625, 0
    def c34, -0.858085215, 0.247708291, 0.429042608, 9.99999975e-006
    def c35, 0, -0.99000001, -9.99999997e-007, 0.930000007
    def c36, 1, 0, 1.41789806, 1.37
    def c37, 100000, 0, 0, 0
    dcl_texcoord3 v0.xyz
    dcl_texcoord4 v1
    dcl_texcoord6 v2.xyz
    dcl_texcoord5 v3.xyw
    dcl_color v4.xyz
    dcl_color1 v5
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_69613C66_749.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v5
    dp3_pp r0.w, v4, v4
    rsq_pp r0.w, r0.w
    mul_pp r1.xyz, r0.w, v4.yxzw
    mul r2.yz, r0, r1
    mad_pp r0.x, r0.x, r1.x, -r2.y
    mul_pp r1.x, r0.x, v5.w
    add r0.xy, c14, v3
    mad r3.xy, vPos, c15, c15.zwzw
    mul r3.xy, r3, v3.w
    nrm_pp r4.xyz, v2
    dp3_pp r0.w, v0, v0
    rsq_pp r0.w, r0.w
    mul_sat_pp r0.w, r0.w, v0.z
    rcp r1.w, c23.x
    mul_pp r5.xy, r0, r1.w
    mad_pp r0.xy, r0, r1.w, c17
    texld_pp r6, r0, s3
    dp2add_pp r0.x, r6, -r6, c36.x
    max_pp r1.w, r0.x, c36.y
    rsq_pp r0.x, r1.w
    rcp_pp r6.z, r0.x
    mov r7.xzw, c36
    mad_pp r0.xy, r5, r7.z, c18
    texld_pp r8, r0, s3
    dp2add_pp r0.x, r8, -r8, c36.x
    max_pp r1.w, r0.x, c36.y
    rsq_pp r0.x, r1.w
    rcp_pp r8.z, r0.x
    add_pp r6.xyz, r6, r8
    nrm_pp r8.xyz, r6
    mul_pp r6.xyz, r8, c24.x
    frc_pp r8.xyz, r6
    add_pp r6.xyz, r6, -r8
    rcp r0.x, c24.x
    mov r1.w, c24.w
    mad_pp r5.zw, r1.w, r5.xyxy, c19.xyxy
    texld_pp r8, r5.zwzw, s4
    lrp_pp r0.y, r8.x, c25.z, c25.w
    mul_pp r5.zw, r5.xyxy, c26.x
    mov r9.x, c26.x
    mad_pp r5.xy, r9.x, r5, c20
    texld_pp r9, r5, s5
    mad_pp r5.xy, r5.zwzw, r7.w, c21
    texld_pp r5, r5, s5
    mul_pp r1.w, r5.y, r9.y
    mad_sat_pp r0.y, r1.w, c27.w, r0.y
    mad_pp r5.xyz, r6, r0.x, c35.xxyw
    mad_pp r5.xyz, r0.y, r5, c36.yyxw
    nrm_pp r6.xyz, r5
    dp3_pp r0.x, r6, r4
    add r0.y, -r0.x, c36.x
    cmp_pp r0.x, r0.x, r0_abs.y, c36.x
    add r0.y, r0.x, c35.z
    mul r1.w, r0.x, r0.x
    mad r4.x, r1.w, c5.x, c5.y
    add_pp r4.x, -r4.x, c36.x
    cmp_pp r4.x, r0.y, r4.x, c35.w
    mul_pp r4.xyz, r4.x, c22
    add_pp r5.xyz, r7.x, -c16
    mul_pp r4.xyz, r4, r5
    mad_pp r4.xyz, r4, c4.w, c4
    mul r5.xyz, r4, c31
    mov_pp r4.w, c32.w
    mad_pp r5.xyz, r5, r4.w, c16
    mov_pp r1.y, r0.z
    mul r6.xyz, r1, r1.xyxw
    mul r2.x, r0.z, r1.x
    mad r2.y, r6.y, c5.z, c5.w
    mad_pp r2.w, r1.z, r1.z, -r6.x
    mul r7.xyz, r1, c6.xyxw
    mul r7.w, r6.z, c6.z
    mul r2, r2, c34.xyxz
    dp4 r0.z, c8, r7
    mov r4.w, c6.w
    mad_pp r0.z, c7.x, r4.w, r0.z
    dp4 r1.x, c9, r2
    add_pp r1.x, r0.z, r1.x
    dp4 r0.z, c10, r7
    mad_pp r0.z, c7.y, r4.w, r0.z
    dp4 r5.w, c11, r2
    add_pp r1.y, r0.z, r5.w
    dp4 r0.z, c12, r7
    mad_pp r0.z, c7.z, r4.w, r0.z
    dp4 r2.x, c13, r2
    add_pp r1.z, r0.z, r2.x
    max_pp r2.xyz, r1, c36.y
    mad_pp r1.xyz, r4, r2, r5
    texld_pp r2, c33, s0
    mul_pp r0.z, r0.w, c0.w
    mul_pp r2.yzw, r0.z, r4.xxyz
    mul_pp r2.xyz, r2.x, r2.yzww
    mad_pp r1.xyz, r2, c30, r1
    mad_pp r1.xyz, r4, c32, r1
    mul_pp r0.x, r0.x, r1.w
    add r0.z, -c28.w, c28.z
    mul r0.x, r0.z, r0.x
    cmp r0.x, r0.y, r0.x, c36.y
    add_pp r0.x, r0.x, c28.w
    abs r0.y, c3.x
    if_ne c3.x, -c3.x
      texld r2, c33.zwzw, s2
      add r0.z, -r2.y, v3.w
      mad r3.z, r2.x, r0.z, r3.x
      mov r3.w, v3.w
      mov r2.xyz, r3.zyww
    else
      mov_pp r2.xyz, c36.y
    endif
    mov r3.z, v3.w
    cmp r0.yzw, -r0.y, r3.xxyz, r2.xxyz
    rcp r0.w, r0.w
    mul r0.yz, r0.w, r0
    mad r2.xy, r0.yzzw, c1, c1.wzzw
    mov r2.zw, c36.y
    texldl r2, r2, s1
    add r0.y, r2.w, -c2.y
    add r0.z, -r0.y, c34.w
    rcp r0.y, r0.y
    cmp r0.y, r0.z, c37.x, r0.y
    mad_pp r0.y, c2.x, r0.y, -v3.w
    lrp_pp r0.z, r8.x, c29.x, c29.y
    rcp r0.z, r0.z
    mul_sat_pp r0.y, r0.z, r0.y
    mul_sat_pp oC0.w, r0.y, r0.x
    mad_pp oC0.xyz, r1, v1.w, v1

// approximately 139 instruction slots used (9 texture, 130 arithmetic)
