//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   float4 WorldIncidentLighting[7];
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   WorldIncidentLighting        c7       7
//   DNEResolution                c14      1
//   UniformPixelVector_0         c15      1
//   UniformPixelVector_1         c16      1
//   UniformPixelScalars_0        c17      1
//   LightColorAndFalloffExponent c18      1
//   UpperSkyColor                c19      1
//   AmbientColorAndSkyFactor     c20      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   PixelTexture2D_0             s2       1
//   PixelTexture2D_1             s3       1
//   PixelTexture2D_2             s4       1
//   PixelTexture2D_3             s5       1
//   VAOBuffer                    s6       1
//

    ps_3_0
    def c6, 0, 2, 0.25, 1
    def c21, 0.75, 3, 0.5, -0.199999988
    def c22, 1, 8, 3, -1
    def c23, -1.02332771, 1.02332771, 0.858085215, 0.886227608
    def c24, 0.0625, 0, 1, 0.5
    def c25, -0.858085215, 0.247708291, 0.429042608, -9.99999997e-007
    def c26, 15, 0, 0, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord4 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord5 v5.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_DFE94A4C_535.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    dp3_pp r0.w, v0, v0
    rsq_pp r0.w, r0.w
    mul_pp r1.xyz, r0.w, v0.yxzw
    mul r2.yz, r0, r1
    mad_pp r0.x, r0.x, r1.x, -r2.y
    mul_pp r1.x, r0.x, v1.w
    mad r0.xy, vPos, c14, c14.zwzw
    mul r3.xy, r0, v5.w
    nrm_pp r4.xyz, v4
    nrm_pp r5.xyz, v3
    mad_pp r0.xyw, r4.z, c6.xxzy, -r4.xyzz
    texld r4, v2, s2
    mov r6.zw, c6
    mov r6.x, c17.x
    mad r7, r6.x, c21, r6.zwww
    mul r6.xy, c22, v2
    texld r8, r6, s3
    mad r1.w, r7.x, -r8.z, c6.w
    mov r6.yz, c22
    mad r6.xy, v2, r6.zyzw, c16
    texld r9, r6, s4
    mad r4.w, r8.z, r9.x, r8.z
    mul r4.w, r4.w, c17.x
    texld r8, r4.w, s5
    mul r6.xyz, r7.yzww, r8
    mad r4.xyz, r1.w, r4, r6
    add r6.xyz, r6.w, -c15
    mul_pp r4.xyz, r4, r6
    mad_pp r4.xyz, r4, c4.w, c4
    mul r6.xyz, r4, c19
    mov_pp r1.w, c20.w
    mad_pp r6.xyz, r6, r1.w, c15
    mov_pp r1.y, r0.z
    mul r7.xyz, r1, r1.xyxw
    mul r2.x, r0.z, r1.x
    mad r2.y, r7.y, c22.z, c22.w
    mad_pp r2.w, r1.z, r1.z, -r7.x
    mul r1.xyz, r1, c23.xyxw
    mul r1.w, r7.z, c23.z
    mul r2, r2, c25.xyxz
    dp4 r0.z, c8, r1
    mov r4.w, c23.w
    mad_pp r0.z, c7.x, r4.w, r0.z
    dp4 r5.w, c9, r2
    add_pp r7.x, r0.z, r5.w
    dp4 r0.z, c10, r1
    mad_pp r0.z, c7.y, r4.w, r0.z
    dp4 r5.w, c11, r2
    add_pp r7.y, r0.z, r5.w
    dp4 r0.z, c12, r1
    mad_pp r0.z, c7.z, r4.w, r0.z
    dp4 r1.x, c13, r2
    add_pp r7.z, r0.z, r1.x
    mul_pp r1.xyz, r4, r7
    cmp_pp r1.xyz, r7, r1, c6.x
    add_pp r1.xyz, r1, r6
    abs r0.z, c3.x
    if_ne c3.x, -c3.x
      texld r2, c24, s1
      add r1.w, -r2.y, v5.w
      mad r3.z, r2.x, r1.w, r3.x
      mov r3.w, v5.w
      mov r2.xyz, r3.zyww
    else
      mov_pp r2.xyz, c6.x
    endif
    mov r3.z, v5.w
    cmp r2.xyz, -r0.z, r3, r2
    rcp r0.z, r2.z
    mul r2.xy, r0.z, r2
    mad r2.xy, r2, c1, c1.wzzw
    texld_pp r2, r2, s6
    texld_pp r3, c24.zwzw, s0
    mov_sat_pp r0.z, r5.z
    add r1.w, r0.z, c25.w
    mul r0.z, r0.z, c0.w
    dp3_sat_pp r0.x, r0.xyww, r5
    add r0.y, r0.x, c25.w
    pow_pp r2.y, r0.x, c26.x
    mul r0.x, r2.y, c0.x
    mul r2.yzw, r0.z, r4.xxyz
    cmp r2.yzw, r1.w, r2, c6.x
    mul_pp r0.xzw, r0.x, c5.xyyz
    cmp_pp r0.xyz, r0.y, r0.xzww, c6.x
    add_pp r0.xyz, r0, r2.yzww
    mul_pp r0.xyz, r3.x, r0
    mul_pp r0.xyz, r0, c18
    mad_pp r0.xyz, r1, r2.x, r0
    mad_pp oC0.xyz, r4, c20, r0
    rcp r0.x, v5.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 102 instruction slots used (7 texture, 95 arithmetic)
