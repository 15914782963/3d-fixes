//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   float4 UniformPixelScalars_0;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNEResolution                c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   UniformPixelScalars_0        c7       1
//   LightColorAndFalloffExponent c8       1
//   SpotDirection                c9       1
//   SpotAngles                   c10      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//

    ps_3_0
    def c2, 1, 0.5, 0.0625, 0
    def c5, -100, 2, -1, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5 v2.xyz
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_A85943F5_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v3, v3
    rsq_pp r0.x, r0.x
    nrm_pp r1.xyz, v1
    dp3 r0.y, v2, v2
    rsq r0.z, r0.y
    mul r2.xyz, r0.z, v2
    dp3 r0.z, r2, -c9
    add r0.z, r0.z, -c10.x
    mul_sat r0.z, r0.z, c10.y
    mul_pp r2.x, r0.z, r0.z
    texld_pp r3, c2, s0
    mov r2.yw, c2.y
    texld_pp r4, r2, s0
    add r0.z, -r0.y, c2.x
    mul r0.z, r3.x, r0.z
    mul r5, r4.x, r0.z
    mov r6, r5
    texkill r6
    if b0
      mad r0.zw, vPos.xyxy, c0.xyxy, c0
      mul r5.xy, r0.zwzw, v4.w
      if_ne c3.x, -c3.x
        texld r6, c2.zwzw, s1
        add r0.z, -r6.y, v4.w
        mad r5.z, r6.x, r0.z, r5.x
        mov r5.xy, r5.zyzw
        mov r0.z, v4.w
      else
        mov r0.z, v4.w
      endif
      rcp r0.z, r0.z
      mul r0.zw, r0.z, r5.xyxy
      mad r0.zw, r0, c1.xyxy, c1.xywz
      texld r6, r0.zwzw, s2
      mul_pp r3.yzw, r6.xxyz, r6.xxyz
      mul_pp r3.yzw, r3, r3.x
    else
      mov_pp r3.yzw, r3.x
    endif
    mov_sat r0.y, r0.y
    add r0.y, -r0.y, c2.x
    pow_sat_pp r2.z, r0.y, c8.w
    texld_pp r2, r2.zwzw, s0
    mov r3.x, c5.x
    max r0.y, -c7.y, r3.x
    min r1.w, r0.y, c2.w
    mov r5.xy, c2
    mad r0.y, c7.y, r5.y, r5.x
    mad_pp r0.xz, v3.xyyw, r0.x, r1.xyyw
    texld_pp r6, v0, s4
    mad r2.yzw, r6.xxyz, c5.y, c5.z
    add r0.xz, r0, -r2.yyzw
    mad_sat r0.xz, r0, c2.y, c2.y
    texld r6, r0.xzzw, s5
    lrp_sat r3.x, r6.x, r0.y, r1.w
    texld r0, v0, s3
    dp3_sat r0.w, r1, r2.yzww
    mad r0.xyz, r0.w, r0, r3.x
    mul r1.xyw, r1.z, c4.xyzz
    cmp r1.xyz, r1.z, r1.xyww, c2.w
    mad r0.xyz, r0, c4.w, r1
    mul r0.xyz, r3.yzww, r0
    mul r0.xyz, r0, c8
    mul r0.xyz, r2.x, r0
    mul r0.xyz, r4.x, r0
    cmp oC0.xyz, -r5.w, c2.w, r0
    mov oC0.w, c2.w

// approximately 75 instruction slots used (8 texture, 67 arithmetic)
