//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   float4 WorldIncidentLighting[7];
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   WorldIncidentLighting        c7       7
//   DNEEnvMapParameter           c14      1
//   DNEMiscParameter             c15      1
//   DNECubemapPosition           c16      1
//   CameraWorldPos               c17      1
//   DNEResolution                c18      1
//   UniformPixelVector_0         c19      1
//   UniformPixelVector_1         c20      1
//   UniformPixelVector_2         c21      1
//   UniformPixelVector_3         c22      1
//   UniformPixelVector_4         c23      1
//   UniformPixelVector_5         c24      1
//   UniformPixelVector_6         c25      1
//   LightColorAndFalloffExponent c26      1
//   UpperSkyColor                c27      1
//   AmbientColorAndSkyFactor     c28      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   DNEEnvironmentTexture        s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   VAOBuffer                    s6       1
//

    ps_3_0
    def c6, 1, -0.75, -0.25, 0
    def c29, 2, -1, 10, 1.52876604
    def c30, -5.55472994, -6.98316002, 3, -1
    def c31, -1.02332771, 1.02332771, 0.858085215, 0.886227608
    def c32, 0.0625, 0, 1, 0.5
    def c33, -0.858085215, 0.247708291, 0.429042608, 0.125
    def c34, 0.693147004, 2, 0, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord4 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord5 v5
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_B5B9414F_364.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v1.w
    add r3.xyz, c17, v5
    mad r4.xy, vPos, c18, c18.zwzw
    mul r4.xy, r4, v5.w
    nrm_pp r5.xyz, v4
    mad_sat_pp r0.w, c15.x, v5.w, c15.y
    mul_pp r1.w, r0.w, c0.x
    add_pp r6.xy, c20, v2
    add_pp r6.zw, v2.xyxy, v2.xyxy
    frc_pp r7.xy, r6.zwzw
    add_pp r6.zw, r6, -r7.xyxy
    add_pp r7.xy, -r6.zwzw, c6.x
    mul_pp r2.w, r6.z, r7.y
    add_pp r8, c6.yzyy, v2.xyxy
    mov r9.xw, c6
    dp2add_pp r10.x, c21, r8, r9.w
    dp2add_pp r10.y, c22, r8, r9.w
    add_pp r7.yz, r10.xxyw, -c6
    mul_pp r3.w, r6.w, r6.z
    dp2add_pp r8.x, c21, r8.zwzw, r9.w
    dp2add_pp r8.y, c22, r8.zwzw, r9.w
    add_pp r8.xy, r8, -c6.y
    mul_pp r8.xy, r3.w, r8
    mad_pp r7.yz, r2.w, r7, r8.xxyw
    mad_pp r6.xy, r7.x, r6, r7.yzzw
    texld_pp r7, r6, s3
    mad_pp r7.xyz, r7, c29.x, c29.y
    mul_pp r8.xy, r7, c23
    dp2add_pp r10.x, c24, r8, r9.w
    dp2add_pp r10.y, c25, r8, r9.w
    mov_pp r10.z, r7.w
    lrp_pp r8.xyz, r6.z, r10, r7
    nrm_pp r7.xyz, r8
    dp3_pp r2.w, v3, v3
    rsq_pp r2.w, r2.w
    mul_pp r8.xyz, r2.w, v3
    dp3_pp r3.w, r7, r5
    mul_pp r9.yzw, r3.w, r7.xxyz
    mad_pp r9.yzw, r9, c29.x, -r5.xxyz
    mad_pp r5.xyz, v3, r2.w, r5
    nrm_pp r10.xyz, r5
    mad_pp r2.w, r7.w, c29.z, c29.w
    exp_pp r2.w, r2.w
    texld_pp r5, r6, s5
    mad_pp r5.xyz, r5, c5.w, c5
    texld_pp r6, r6, s4
    add_pp r11.xyz, r9.x, -c19
    mul_pp r6.xyz, r6, r11
    mad_pp r6.xyz, r6, c4.w, c4
    dp3_pp r11.x, r1, r9.yzww
    dp3_pp r11.y, r2, r9.yzww
    dp3_pp r11.z, r0, r9.yzww
    add r3.xyz, r3, -c16
    mad_pp r9.xyz, c14.w, r3, r11
    mad_pp r9.w, c15.z, r7.w, c15.w
    texldl_pp r9, r9, s2
    mov_sat_pp r3.w, r3.w
    max_pp r3.xyz, r7.w, r5
    mad_pp r5.w, r3.w, c30.x, c30.y
    mul_pp r3.w, r3.w, r5.w
    exp_pp r3.w, r3.w
    lrp_pp r11.xyz, r3.w, r3, r5
    mul_pp r3.xyz, r9, r11
    mul_pp r3.xyz, r3, c14
    mad_pp r3.xyz, r0.w, r3, c19
    mul r9.xyz, r6, c27
    mad_pp r3.xyz, r9, c28.w, r3
    dp3_pp r1.z, r1, r7
    dp3_pp r1.x, r2, r7
    dp3_pp r1.y, r0, r7
    mul r0.xyz, r1, r1.xyxw
    mad r9.y, r0.y, c30.z, c30.w
    mul r9.xz, r1, r1.y
    mad_pp r9.w, r1.z, r1.z, -r0.x
    mul r11.xyz, r1, c31.xyxw
    mul r11.w, r0.z, c31.z
    mul r0, r9, c33.xyxz
    dp4 r1.x, c8, r11
    mov r3.w, c31.w
    mad_pp r1.x, c7.x, r3.w, r1.x
    dp4 r1.y, c9, r0
    add_pp r1.x, r1.y, r1.x
    dp4 r2.x, c10, r11
    mad_pp r2.x, c7.y, r3.w, r2.x
    dp4 r2.y, c11, r0
    add_pp r1.y, r2.y, r2.x
    dp4 r2.x, c12, r11
    mad_pp r2.x, c7.z, r3.w, r2.x
    dp4 r0.x, c13, r0
    add_pp r1.z, r0.x, r2.x
    mul_pp r0.xyz, r1, r6
    cmp_pp r0.xyz, r1, r0, c6.w
    add_pp r0.xyz, r0, r3
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r3, c32, s1
      add r1.x, -r3.y, v5.w
      mad r4.z, r3.x, r1.x, r4.x
      mov r4.w, v5.w
      mov r1.xyz, r4.zyww
    else
      mov_pp r1.xyz, c6.w
    endif
    mov r4.z, v5.w
    cmp r1.xyz, -r0.w, r4, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r3, r1, s6
    texld_pp r4, c32.zwzw, s0
    dp3_sat_pp r0.w, r7, r8
    mul_pp r1.x, r0.w, c0.w
    mov_sat_pp r1.y, c0.y
    mul_pp r1.y, r1.y, r1.y
    mul_pp r1.y, r2.w, r1.y
    dp3_sat_pp r1.z, r7, r10
    mad_pp r2.x, r1.y, c34.x, c34.y
    mul_pp r2.x, r2.x, c33.w
    mad r1.y, r1.y, r1.z, -r1.y
    exp_pp r1.y, r1.y
    mul_pp r1.y, r1.y, r2.x
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.w, r0.w
    dp3_sat_pp r1.y, r8, r10
    mad_pp r1.z, r1.y, c30.x, c30.y
    mul_pp r1.y, r1.y, r1.z
    exp_pp r1.y, r1.y
    lrp_pp r2.xyz, r1.y, c6.x, r5
    mul_pp r1.yzw, r0.w, r2.xxyz
    mad_pp r1.xyz, r6, r1.x, r1.yzww
    mul_pp r1.xyz, r4.x, r1
    mul_pp r1.xyz, r1, c26
    mad_pp r0.xyz, r0, r3.x, r1
    mad_pp oC0.xyz, r6, c28, r0
    rcp r0.x, v5.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 159 instruction slots used (8 texture, 151 arithmetic)
