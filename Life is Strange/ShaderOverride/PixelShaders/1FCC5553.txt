//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   float4 WorldIncidentLighting[7];
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   WorldIncidentLighting        c7       7
//   DNESpecularAttenuation       c14      1
//   DNEMiscParameter             c15      1
//   DNEResolution                c16      1
//   UniformPixelVector_0         c17      1
//   UniformPixelVector_1         c18      1
//   UniformPixelVector_2         c19      1
//   UniformPixelScalars_0        c20      1
//   LightColorAndFalloffExponent c21      1
//   UpperSkyColor                c22      1
//   AmbientColorAndSkyFactor     c23      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   PixelTexture2D_0             s2       1
//   PixelTexture2D_1             s3       1
//   PixelTexture2D_2             s4       1
//   PixelTexture2D_3             s5       1
//   PixelTexture2D_4             s6       1
//   VAOBuffer                    s7       1
//

    ps_3_0
    def c6, -0.899999976, 10, 1, 1.52876604
    def c24, -0.858085215, 0.247708291, 0.429042608, 0.886227608
    def c25, 0.0625, 0, 1, 0.5
    def c26, 0.693147004, 2, 0.125, 0
    def c27, -5.55472994, -6.98316002, 0, 0
    def c28, 3, -1, -1.02332771, 1.02332771
    def c29, 0, 0.200000003, 184.664948, 0.858085215
    def c30, 2, -1, 4, 1
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord4 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord5 v5.w
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_1FCC5553_1068.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v1.w
    mad r3.xy, vPos, c16, c16.zwzw
    mul r3.xy, r3, v5.w
    dp3_pp r0.w, v4, v4
    rsq_pp r0.w, r0.w
    mad_sat_pp r1.w, c15.x, v5.w, c15.y
    mul_pp r1.w, r1.w, c14.x
    texld_pp r4, v2, s2
    mad_pp r4.xyz, r4, c30.x, c30.y
    mul_pp r5.xy, c30.z, v2
    texld_pp r5, r5, s3
    dp2add_pp r2.w, r5, -r5, c30.w
    max_pp r4.w, r2.w, c29.x
    rsq_pp r2.w, r4.w
    rcp_pp r5.z, r2.w
    lrp_pp r6.xyz, c29.y, r5, r4
    texld_pp r5, v2, s4
    mov r5.yw, c20
    mad r5.yz, r5.xyww, c6.xxyw, c6.xzww
    add_pp r2.w, -r5.y, r5.x
    frc_pp r4.w, -r2.w
    add_sat_pp r2.w, r2.w, r4.w
    cmp_pp r4.xyz, -r2.w, r4, r6
    nrm_pp r6.xyz, r4
    nrm_pp r4.xyz, v3
    cmp r4.w, vFace, c30.y, c30.w
    mul r4.w, r4.w, c0.x
    mad_pp r5.xyw, v4.xyzz, r0.w, r4.xyzz
    nrm_pp r7.xyz, r5.xyww
    exp_pp r0.w, r5.z
    cmp_pp r0.w, -r2.w, r0.w, c29.z
    texld_pp r5, v2, s5
    cmp_pp r5.xyz, -r2.w, r5, c18
    mov r5.w, c30.w
    add_pp r8.xyz, r5.w, -c17
    mul_pp r5.xyz, r5, r8
    mad_pp r5.xyz, r5, c4.w, c4
    texld_pp r8, v2, s6
    mul_pp r8.xyz, r8, c20.z
    cmp_pp r8.xyz, -r2.w, r8, c19
    mad_pp r8.xyz, r8, c5.w, c5
    mul r9.xyz, r5, c22
    mov_pp r2.w, c23.w
    mad_pp r9.xyz, r9, r2.w, c17
    dp3_pp r1.z, r1, r6
    dp3_pp r1.x, r2, r6
    dp3_pp r1.y, r0, r6
    mul r0.xyz, r1, r1.xyxw
    mad r2.y, r0.y, c28.x, c28.y
    mul r2.xz, r1, r1.y
    mad_pp r2.w, r1.z, r1.z, -r0.x
    mul r10.xyz, r1, c28.zwzw
    mul r10.w, r0.z, c29.w
    mul r2, r2, c24.xyxz
    dp4 r0.x, c8, r10
    mov r5.w, c24.w
    mad_pp r0.x, c7.x, r5.w, r0.x
    dp4 r0.y, c9, r2
    add_pp r0.x, r0.y, r0.x
    dp4 r1.x, c10, r10
    mad_pp r1.x, c7.y, r5.w, r1.x
    dp4 r1.y, c11, r2
    add_pp r0.y, r1.y, r1.x
    dp4 r1.x, c12, r10
    mad_pp r1.x, c7.z, r5.w, r1.x
    dp4 r1.y, c13, r2
    add_pp r0.z, r1.y, r1.x
    mul_pp r1.xyz, r0, r5
    cmp_pp r0.xyz, r0, r1, c29.x
    add_pp r0.xyz, r0, r9
    abs r1.x, c3.x
    if_ne c3.x, -c3.x
      texld r2, c25, s1
      add r1.y, -r2.y, v5.w
      mad r3.z, r2.x, r1.y, r3.x
      mov r3.w, v5.w
      mov r2.xyz, r3.zyww
    else
      mov r2.xyz, c29.x
    endif
    mov r3.z, v5.w
    cmp r1.xyz, -r1.x, r3, r2
    rcp r1.z, r1.z
    mul r1.xy, r1.z, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r2, r1, s7
    mul_pp r1.xyz, r4.w, r6
    texld_pp r3, c25.zwzw, s0
    dp3_sat_pp r2.y, r1, r4
    mul_pp r2.z, r2.y, c14.w
    mov_sat_pp r2.w, c14.y
    mul_pp r2.w, r2.w, r2.w
    mul_pp r0.w, r0.w, r2.w
    dp3_sat_pp r1.x, r1, r7
    mad_pp r1.y, r0.w, c26.x, c26.y
    mul_pp r1.y, r1.y, c26.z
    mad r0.w, r0.w, r1.x, -r0.w
    exp_pp r0.w, r0.w
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r2.y, r0.w
    mul_pp r0.w, r1.w, r0.w
    dp3_sat_pp r1.x, r4, r7
    mad_pp r1.y, r1.x, c27.x, c27.y
    mul_pp r1.x, r1.x, r1.y
    exp_pp r1.x, r1.x
    lrp_pp r3.yzw, r1.x, c30.w, r8.xxyz
    mul_pp r1.xyz, r0.w, r3.yzww
    mad_pp r1.xyz, r5, r2.z, r1
    mul_pp r1.xyz, r3.x, r1
    mul_pp r1.xyz, r1, c21
    mad_pp r0.xyz, r0, r2.x, r1
    mad_pp oC0.xyz, r5, c23, r0
    rcp r0.x, v5.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 131 instruction slots used (8 texture, 123 arithmetic)
