//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 LightMapScale[2];
//   sampler2D LightMapTextures[2];
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D PixelTexture2D_6;
//   sampler2D PixelTexture2D_7;
//   sampler2D PixelTexture2D_8;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_4;
//   float4 UniformPixelScalars_8;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//   float4 UniformPixelVector_7;
//   float4 UniformPixelVector_8;
//   float4 UniformPixelVector_9;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEEnvMapParameter        c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   LightMapScale             c7       2
//   DNEMiscParameter          c9       1
//   DNECubemapPosition        c10      1
//   CameraWorldPos            c11      1
//   DNEResolution             c12      1
//   UniformPixelVector_0      c13      1
//   UniformPixelVector_1      c14      1
//   UniformPixelVector_2      c15      1
//   UniformPixelVector_3      c16      1
//   UniformPixelVector_4      c17      1
//   UniformPixelVector_5      c18      1
//   UniformPixelVector_6      c19      1
//   UniformPixelVector_7      c20      1
//   UniformPixelVector_8      c21      1
//   UniformPixelVector_9      c22      1
//   UniformPixelScalars_0     c23      1
//   UniformPixelScalars_3     c24      1
//   UniformPixelScalars_4     c25      1
//   UniformPixelScalars_8     c26      1
//   UpperSkyColor             c27      1
//   AmbientColorAndSkyFactor  c28      1
//   LightMapTextures          s0       2
//   NvStereoFixTexture        s2       1
//   DNEEnvironmentTexture     s3       1
//   PixelTexture2D_0          s4       1
//   PixelTexture2D_1          s5       1
//   PixelTexture2D_2          s6       1
//   PixelTexture2D_3          s7       1
//   PixelTexture2D_4          s8       1
//   PixelTexture2D_5          s9       1
//   PixelTexture2D_6          s10      1
//   PixelTexture2D_7          s11      1
//   PixelTexture2D_8          s12      1
//   VAOBuffer                 s13      1
//

    ps_3_0
    def c6, -0.5, 0.315322369, 0.948984623, 0
    def c29, -0.948984623, 0.315322369, 0, 2.79415617e-005
    def c30, 7.5, 0.100000001, 0.5, 0.000976999989
    def c31, 6.28318548, -3.14159274, 30, 2
    def c32, 0.000624999986, 10, 1.52876604, 0.75
    def c33, 7, 0.142857149, 0.00571428565, 0.0399999991
    def c34, 0.25, 0.5, 0.300000012, 5
    def c35, 3.12500015e-005, 9.37500008e-005, -3.25, 2
    def c36, 0.25, -0.949999988, -12, -20
    def c37, 0.00195299997, 0.200000003, 0.170000002, 0.109999999
    def c38, 1.40624998e-005, 4, 0.129870132, 0.5
    def c39, 0.699999988, 0.400000006, 5.58284373e-005, 0.00022365569
    def c40, 1.25, -9.99999997e-007, 0.400000036, 0.800000012
    def c41, -5.55472994, -6.98316002, 0.0625, 0
    def c42, 1, 7.60526891e-005, 0.800000012, 0
    def c43, 0.0299999993, 0, 1.00999999, 9.37500008e-005
    def c44, 2.5, 6.24999984e-006, 0.000781250012, 6.2500003e-005
    def c45, 0.816496611, 0.577350259, 0, 0
    def c46, -0.707106769, -0.408248305, 0.577350259, 0.707106769
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord1 v3.y
    dcl_texcoord6 v4.xyz
    dcl_texcoord5 v5
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_cube s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9
    dcl_2d s10
    dcl_2d s11
    dcl_2d s12
    dcl_2d s13

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_EEE4A9C1_723.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v1.w
    add r3.xyz, c11, v5
    mad r4.xy, vPos, c12, c12.zwzw
    mul r4.xy, r4, v5.w
    nrm_pp r5.xyz, v4
    mad_sat_pp r0.w, c9.x, v5.w, c9.y
    add_pp r6.xy, r3, c6.x
    dp2add_pp r7.x, c6.yzzw, r6, c6.w
    dp2add_pp r7.y, c29, r6, c29.z
    add_pp r6, r7.xyxy, -c6.x
    mov r1.w, c29.w
    mad_pp r6.xy, r6, r1.w, c14
    texld_pp r7, r6, s4
    dp2add_pp r1.w, r7, -r7, c42.x
    max_pp r2.w, r1.w, c6.w
    rsq_pp r1.w, r2.w
    rcp_pp r7.z, r1.w
    mov r6.xy, c42
    mad_pp r6.yz, r6.xzww, r6.y, c15.xxyw
    texld_pp r8, r6.yzzw, s4
    dp2add_pp r1.w, r8, -r8, c42.x
    max_pp r2.w, r1.w, c6.w
    rsq_pp r1.w, r2.w
    rcp_pp r8.z, r1.w
    mad_pp r6.yzw, r8.xxyz, -c42.z, r7.xxyz
    dp3_pp r1.w, r6.yzww, r6.yzww
    rsq_pp r1.w, r1.w
    mad_pp r6.yzw, r6, r1.w, -c42.xwwx
    mad_pp r6.yzw, r6, c43.x, c43.xyyz
    nrm_pp r7.xyz, r6.yzww
    mul_pp r8, r3.xyxy, c35.xxyy
    mov r1.w, c43.w
    mad_pp r6.yz, r3.xxyw, r1.w, c16.xxyw
    texld_pp r9, r6.yzzw, s5
    mov_pp r10.x, r8.z
    mov r10.yw, c24.xxzz
    texld_pp r11, r10, s6
    add_pp r1.w, r11.y, c6.x
    mul_pp r1.w, r9.x, r1.w
    mad_pp r2.w, v3.y, c35.z, c35.w
    texld_pp r9, r8.zwzw, s6
    add_pp r3.w, r9.y, c6.x
    mul_pp r5.w, r3.w, c44.x
    mad_pp r2.w, r3.w, -c6.x, r2.w
    mad_pp r1.w, r1.w, -c6.x, r2.w
    mul_pp r9, r3.xxxy, c44.wyzz
    mov_pp r10.z, r9.y
    texld_pp r10, r10.zwzw, s6
    mov r10.x, c30.x
    mad_pp r2.w, r10.y, r10.x, c23.x
    mad_pp r2.w, r2.w, c30.y, c30.z
    frc_pp r2.w, r2.w
    mad_pp r2.w, r2.w, c31.x, c31.y
    sincos_pp r10.y, r2.w
    add_pp r2.w, r1.w, r10.y
    max_pp r3.w, r10.y, c6.w
    texld_pp r10, r9.zwzw, s5
    add_pp r3.w, r3.w, r10.x
    mad_pp r3.w, r3.w, c31.z, c31.w
    mul_sat_pp r3.w, r2.w, r3.w
    frc_pp r6.y, -r3.w
    add_sat_pp r6.y, r3.w, r6.y
    cmp_pp r7.xyz, -r6.y, c42.wwxw, r7
    nrm_pp r10.xyz, r7
    dp3_pp r6.z, r10, r5
    mul_pp r7.xyz, r6.z, r10
    mad_pp r5.xyz, r7, c35.w, -r5
    mul_pp r7.xy, r3, c30.w
    texld_pp r7, r7, s11
    mul_pp r6.w, r7.x, c36.x
    add_pp r7.y, c36.y, v3.y
    mad_sat_pp r7.yz, r7.y, c36.xzww, r5.w
    mad r5.w, r7.x, -c34.x, c34.y
    mad_pp r5.w, r7.y, r5.w, r6.w
    mov r11.xw, c35
    mad_pp r6.w, r7.x, r11.w, c26.y
    frc_pp r6.w, r6.w
    mad_pp r6.w, r6.w, c34.z, c34.y
    mov r9.y, c24.w
    texld_pp r9, r9, s6
    mov_pp r7.w, c34.w
    mad_pp r7.x, r9.y, r7.w, c25.x
    mad_pp r7.x, r7.x, c30.y, c30.z
    frc_pp r7.x, r7.x
    mad_pp r7.x, r7.x, c31.x, c31.y
    sincos_pp r9.y, r7.x
    add_pp r1.w, r1.w, r9.y
    mov_sat_pp r1.w, -r1.w
    add_pp r1.w, -r1.w, c42.x
    mul_pp r7.xz, r7.yyzw, r1.w
    lrp_pp r1.w, r7.x, r6.w, r5.w
    mov r7.x, c32.x
    mad_pp r7.xw, r3.xyzy, r7.x, c22.xyzy
    texld_pp r9, r7.xwzw, s12
    mad_pp r5.w, r9.x, -c6.x, -c6.x
    cmp_pp r1.w, -r6.y, r1.w, r5.w
    mad_pp r5.w, r1.w, c32.y, c32.z
    exp_pp r5.w, r5.w
    mul_pp r6.w, r7.y, c32.w
    mad_pp r6.w, r7.z, c36.x, r6.w
    mul_pp r6.w, r6.w, c33.x
    frc_pp r7.x, r6.w
    add_pp r6.w, r6.w, -r7.x
    mul_pp r7.xy, r6.w, c33.yzzw
    cmp_pp r6.w, -r6.y, r7.y, c33.w
    mad_pp r7.yzw, r6.w, c5.w, c5.xxyz
    mul_pp r8.zw, r3.xyxy, c37.x
    texld_pp r9, r8.zwzw, s7
    lrp_pp r11.yzw, r7.x, c37, r9.xxyz
    mov r9.xy, c38
    mad_pp r8.zw, r3.xyxy, r9.x, c17.xyxy
    texld_pp r12, r8.zwzw, s8
    mad_pp r8.zw, r3.xyxy, r9.x, c18.xyxy
    texld_pp r13, r8.zwzw, s8
    texld_pp r8, r8, s8
    mad_pp r6.w, r8.w, r9.y, c23.x
    mad_pp r6.w, r6.w, c38.z, c38.w
    frc_pp r6.w, r6.w
    mad_pp r6.w, r6.w, c31.x, c31.y
    sincos_pp r8.y, r6.w
    add_pp r6.w, r8.y, c42.x
    mul_pp r6.w, r6.w, -c6.x
    lrp_pp r7.x, r6.w, r13.w, r12.w
    mad_pp r7.x, r7.x, c39.x, c39.y
    mad_pp r8.xy, r3, r11.x, c19
    texld_pp r8, r8, s9
    mov r8.zw, c39
    mad_pp r8.xz, r3.xyyw, r8.z, c20.xyyw
    texld_pp r9, r8.xzzw, s9
    add_pp r8.x, r8.y, r9.y
    mad_pp r8.yz, r3.xxyw, r8.w, c21.xxyw
    texld_pp r9, r8.yzzw, s9
    add_pp r8.x, r8.x, r9.y
    mul_pp r7.x, r7.x, r8.x
    mov_sat_pp r2.w, r2.w
    mad_pp r2.w, r7.x, c40.x, -r2.w
    add_sat_pp r2.w, r2.w, c42.x
    add r7.x, r2.w, c40.y
    mul_pp r2.w, r2.w, r2.w
    cmp_pp r2.w, r7.x, r2.w, c6.w
    texld_pp r8, r2.w, s10
    lrp_pp r2.w, r6.w, r12.w, r13.w
    add_pp r2.w, -r2.w, c42.x
    mad_pp r2.w, r2.w, c40.z, c40.w
    mul_pp r8.xyz, r8, r2.w
    frc_pp r2.w, r3.w
    add_pp r2.w, -r2.w, r3.w
    add_sat_pp r2.w, -r2.w, c42.x
    mul_pp r2.w, r6.y, r2.w
    cmp_pp r8.xyz, -r2.w, r8, c42.x
    cmp_pp r8.xyz, -r6.y, r11.yzww, r8
    add_pp r6.xyw, r6.x, -c13.xyzz
    mul_pp r6.xyw, r6, r8.xyzz
    mad_pp r6.xyw, r6, c4.w, c4.xyzz
    dp3_pp r1.x, r1, r5
    dp3_pp r1.y, r2, r5
    dp3_pp r1.z, r0, r5
    add r0.xyz, r3, -c10
    mad_pp r2.xyz, c0.w, r0, r1
    mad_pp r2.w, c9.z, r1.w, c9.w
    texldl_pp r2, r2, s3
    mov_sat_pp r6.z, r6.z
    max_pp r0.xyz, r1.w, r7.yzww
    mad_pp r1.x, r6.z, c41.x, c41.y
    mul_pp r1.x, r6.z, r1.x
    exp_pp r1.x, r1.x
    lrp_pp r3.xyz, r1.x, r0, r7.yzww
    mul_pp r0.xyz, r2, r3
    mul_pp r0.xyz, r0, c0
    mad_pp r0.xyz, r0.w, r0, c13
    dp2add_sat_pp r1.x, r10.yzzw, c45, c45.z
    dp3_sat_pp r1.y, r10, c46
    dp3_sat_pp r1.z, r10.yzxw, c46.yzww
    dp2add_sat_pp r2.x, r5.yzzw, c45, c45.z
    dp3_sat_pp r2.y, r5, c46
    dp3_sat_pp r2.z, r5.yzxw, c46.yzww
    mul_pp r1.xyz, r1, r1
    mad_pp r2.xyz, r5.w, r2, -r5.w
    exp_pp r3.x, r2.x
    exp_pp r3.y, r2.y
    exp_pp r3.z, r2.z
    texld r2, v2, s0
    mul_pp r2.xyz, r2, c7
    texld r5, v2, s1
    mul_pp r5.xyz, r5, c8
    dp3_pp r0.w, r5, r1
    mul_pp r1.xyz, r0.w, r2
    mul r2.xyz, r2, r7.yzww
    dp3_pp r0.w, r5, r3
    mul r2.xyz, r0.w, r2
    mad_pp r1.xyz, r6.xyww, r1, r2
    add_pp r0.xyz, r0, r1
    mul r1.xyz, r6.xyww, c27
    mad_pp r0.xyz, r1, c28.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r1, c41.zwzw, s2
      add r1.y, -r1.y, v5.w
      mad r4.z, r1.x, r1.y, r4.x
      mov r4.w, v5.w
      mov r1.xyz, r4.zyww
    else
      mov_pp r1.xyz, c6.w
    endif
    mov r4.z, v5.w
    cmp r1.xyz, -r0.w, r4, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s13
    mul r1.yzw, r6.xxyw, c28.xxyz
    mad_pp oC0.xyz, r0, r1.x, r1.yzww
    rcp r0.x, v5.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 258 instruction slots used (24 texture, 234 arithmetic)
