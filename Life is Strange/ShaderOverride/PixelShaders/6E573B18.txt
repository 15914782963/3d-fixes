//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEResolution           c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   UniformPixelVector_0    c7       1
//   UniformPixelVector_1    c8       1
//   UniformPixelVector_2    c9       1
//   UniformPixelVector_3    c10      1
//   UniformPixelScalars_0   c11      1
//   UniformPixelScalars_2   c12      1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//   PixelTexture2D_1        s3       1
//   PixelTexture2D_2        s4       1
//

    ps_3_0
    def c4, 0, -1, 1, 0.0625
    def c5, 9.99999975e-006, 100000, 0, 0
    dcl_texcoord4 v0.w
    dcl_texcoord6 v1.xyz
    dcl_texcoord7_pp v2.xyz
    dcl_texcoord5 v3.w
    dcl_texcoord v4.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_6E573B18_426.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v3.w
    dp3_pp r1.x, v1, v1
    rsq_pp r1.x, r1.x
    mul_pp r1.x, r1.x, v1.z
    mov r2.x, c11.x
    mul r1.yzw, r2.x, c8.xxyz
    mul r1.yzw, r1, v2.xxyz
    texld r2, v4.y, s2
    mul r1.yzw, r1, r2.y
    abs r1.x, r1.x
    texld r2, r1.x, s3
    mov r1.x, v4.x
    mul r3.x, r1.x, c9.x
    mov r3.y, c4.x
    add r2.xz, r3.xyyw, c10.xyyw
    texld r3, r2.xzzw, s4
    add r1.x, r3.y, c4.y
    mov r2.z, c4.z
    mad r1.x, c12.x, r1.x, r2.z
    mul r1.x, r1.x, r2.y
    add r2.x, -c12.y, v3.w
    rcp r2.y, c12.z
    mul_sat r2.x, r2.y, r2.x
    abs r2.y, c3.x
    if_ne c3.x, -c3.x
      texld r3, c4.wxzw, s1
      add r2.z, -r3.y, v3.w
      mad r0.z, r3.x, r2.z, r0.x
      mov r0.w, v3.w
      mov r3.xyz, r0.zyww
    else
      mov r3.xyz, c4.x
    endif
    mov r0.z, v3.w
    cmp r0.xyz, -r2.y, r0, r3
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.x
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c5.x
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c5.y, r0.x
    mad r0.x, c2.x, r0.x, -v3.w
    rcp r0.y, c12.w
    mul_sat r0.x, r0.y, r0.x
    mul r0.x, r0.x, r2.x
    mul r0.x, r0.x, r1.x
    mad_pp r0.xyz, r0.x, r1.yzww, c7
    mul_pp oC0.xyz, r0, v0.w
    mov oC0.w, c4.x

// approximately 56 instruction slots used (6 texture, 50 arithmetic)
