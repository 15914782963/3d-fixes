//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 UniformPixelVector_0;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNEResolution                c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   UniformPixelVector_0         c7       1
//   LightColorAndFalloffExponent c8       1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//

    ps_3_0
    def c2, 1, 0.5, 0.125, -0.333299994
    def c5, 0, 0.0625, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord3_pp v1
    dcl_texcoord5 v2.xyz
    dcl_texcoord7 v3.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_7B8A2FAF_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v3.w
    texld_pp r1, c2, s0
    dp3 r0.w, v2, v2
    add r1.y, -r0.w, c2.x
    mul r2, r1.x, r1.y
    mov r3, r2
    texkill r3
    texld r3, v0, s3
    mul r1.yzw, r3.xxyz, v1.xxyz
    rcp r2.x, v3.w
    mul r2.xy, r0, r2.x
    mad r2.xy, r2, c1, c1.wzzw
    dsx r2.z, r2.x
    dsy r3.x, r2.y
    rcp r4.x, r2.z
    rcp r4.y, r3.x
    mul r2.xy, r2, r4
    mul r2.xy, r2, c2.z
    texld r4, r2, s4
    mad r2.x, r3.w, v1.w, -r4.y
    frc r2.y, -r2.x
    add_sat r2.x, r2.y, r2.x
    add r2.x, r2.x, c2.w
    cmp r3, -r2.w, c5.x, r2.x
    texkill r3
    if b0
      if_ne c3.x, -c3.x
        texld r3, c5.yxzw, s1
        add r2.x, -r3.y, v3.w
        mad r0.z, r3.x, r2.x, r0.x
        mov r0.xy, r0.zyzw
        mov r0.z, v3.w
      else
        mov r0.z, v3.w
      endif
      rcp r0.z, r0.z
      mul r0.xy, r0.z, r0
      mad r0.xy, r0, c1, c1.wzzw
      texld r3, r0, s2
      mul_pp r0.xyz, r3, r3
      mul_pp r0.xyz, r0, r1.x
    else
      mov_pp r0.xyz, r1.x
    endif
    mov_sat r0.w, r0.w
    add r0.w, -r0.w, c2.x
    pow_sat_pp r2.x, r0.w, c8.w
    mov r2.y, c2.y
    texld_pp r3, r2, s0
    mov r1.x, c2.x
    add r2.xyz, r1.x, -c7
    mul_pp r1.xyz, r1.yzww, r2
    mad_pp r1.xyz, r1, c4.w, c4
    mul r0.xyz, r0, r1
    mul r0.xyz, r3.x, r0
    mul r0.xyz, r0, c8
    cmp oC0.xyz, -r2.w, c5.x, r0
    mov oC0.w, c5.x

// approximately 67 instruction slots used (6 texture, 61 arithmetic)
