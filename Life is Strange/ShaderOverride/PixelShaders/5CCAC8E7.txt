//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 LightMapScale;
//   sampler2D LightMapTextures;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   DNEResolution            c0       1
//   ScreenPositionScaleBias  c1       1
//   MinZ_MaxZRatio           c2       1
//   NvStereoEnabled          c3       1
//   DiffuseOverrideParameter c4       1
//   UniformPixelVector_0     c7       1
//   UniformPixelVector_1     c8       1
//   UniformPixelVector_2     c9       1
//   UpperSkyColor            c10      1
//   AmbientColorAndSkyFactor c11      1
//   LightMapScale            c12      1
//   NvStereoFixTexture       s0       1
//   PixelTexture2D_0         s1       1
//   LightMapTextures         s2       1
//   VAOBuffer                s3       1
//

    ps_3_0
    def c5, 0.5, 1, 0.0625, 0
    dcl_texcoord5 v0.w
    dcl_texcoord v1.zw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_5CCAC8E7_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v0.w
    mul r1.xy, c9, v1.zwzw
    mul r1.xy, r1, c5.x
    texld r1, r1, s1
    mul r1.xyz, r1, c8
    mov r2.y, c5.y
    add r2.xyz, r2.y, -c7
    mul_pp r1.xyz, r1, r2
    mad_pp r1.xyz, r1, c4.w, c4
    texld r2, v1.zwzw, s2
    mul_pp r2.xyz, r2, c12
    mad_pp r2.xyz, r2, r1, c7
    mul r1.xyz, r1, c10
    mad_pp r1.xyz, r1, c11.w, r2
    abs r1.w, c3.x
    if_ne c3.x, -c3.x
      texld r2, c5.zwzw, s0
      add r2.y, -r2.y, v0.w
      mad r0.z, r2.x, r2.y, r0.x
      mov r0.w, v0.w
      mov r2.xyz, r0.zyww
    else
      mov r2.xyz, c5.w
    endif
    mov r0.z, v0.w
    cmp r0.xyz, -r1.w, r0, r2
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s3
    mul_pp oC0.xyz, r0.x, r1
    rcp r0.x, v0.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 36 instruction slots used (4 texture, 32 arithmetic)
