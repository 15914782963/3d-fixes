//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D PixelTexture2D_6;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEEnvMapParameter        c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DNEMiscParameter          c7       1
//   DNECubemapPosition        c8       1
//   CameraWorldPos            c9       1
//   DNEResolution             c10      1
//   UniformPixelVector_0      c11      1
//   UniformPixelVector_1      c12      1
//   UniformPixelVector_2      c13      1
//   UniformPixelScalars_0     c14      1
//   UniformPixelScalars_1     c15      1
//   UpperSkyColor             c16      1
//   AmbientColorAndSkyFactor  c17      1
//   NvStereoFixTexture        s0       1
//   DNEEnvironmentTexture     s1       1
//   PixelTexture2D_0          s2       1
//   PixelTexture2D_1          s3       1
//   PixelTexture2D_2          s4       1
//   PixelTexture2D_3          s5       1
//   PixelTexture2D_4          s6       1
//   PixelTexture2D_5          s7       1
//   PixelTexture2D_6          s8       1
//   VAOBuffer                 s9       1
//

    ps_3_0
    def c6, 2, -1, 0.00390599994, 0.0625
    def c18, 6, 12, 0.75, -1.5
    def c19, 0, 0.333332986, 0.666665971, 2.5
    def c20, 0, 0.25, 0.0399999991, 9.99999997e-007
    def c21, -5.55472994, -6.98316002, -0, -1
    def c22, 0.0625, 0, 0, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord2_pp v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord5 v5
    dcl vPos.xy
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_432C0B3E_641.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v1.w
    add r3.xyz, c9, v5
    mad r4.xy, vPos, c10, c10.zwzw
    mul r4.xy, r4, v5.w
    nrm_pp r5.xyz, v4
    mad_sat_pp r0.w, c7.x, v5.w, c7.y
    texld_pp r6, v2, s2
    mad_pp r6.xyz, r6, c6.x, c6.y
    mov r7.yzw, c6
    mad_pp r7.xzw, r3.xyyz, r7.zyzw, c12.xyyz
    texld_pp r8, r7.zwzw, s3
    dp2add_pp r1.w, r8, -r8, -c6.y
    max_pp r2.w, r1.w, c20.x
    rsq_pp r1.w, r2.w
    rcp_pp r8.z, r1.w
    mov_pp r1.w, r1.z
    mov_pp r2.w, r2.z
    mov_pp r3.w, r0.z
    texld_pp r9, r7.xwzw, s3
    dp2add_pp r5.w, r9, -r9, -c6.y
    max_pp r7.w, r5.w, c20.x
    rsq_pp r5.w, r7.w
    rcp_pp r9.z, r5.w
    mul_pp r9.xyz, r2_abs.w, r9
    mad_pp r8.xyz, r1_abs.w, r8, r9
    texld_pp r9, r7.xzzw, s3
    dp2add_pp r1.w, r9, -r9, -c6.y
    max_pp r2.w, r1.w, c20.x
    rsq_pp r1.w, r2.w
    rcp_pp r9.z, r1.w
    mad_pp r7.xzw, r3_abs.w, r9.xyyz, r8.xyyz
    add_pp r1.w, r3.z, -c14.y
    rcp r2.w, c14.z
    mul_sat_pp r2.w, r1_abs.w, r2.w
    add_pp r2.w, -r2.w, -c6.y
    mul_pp r2.w, r2.w, c20.y
    lrp_pp r8.xyz, r2.w, r7.xzww, r6
    nrm_pp r6.xyz, r8
    dp3_pp r2.w, r6, r5
    mul_pp r6.xyz, r2.w, r6
    mad_pp r6.xyz, r6, c6.x, -r5
    texld_pp r8, v2, s8
    mov_sat_pp r1.w, r1.w
    lrp_pp r7.xzw, r1.w, c20.z, r8.xyyz
    mad_pp r7.xzw, r7, c5.w, c5.xyyz
    mul_pp r8.xy, c18, v2
    texld_pp r9, r8, s7
    add_pp r10.xyz, r9, c19
    frc_pp r10.xyz, r10
    add r10.xyz, -r10, -c6.y
    max r11.xyz, c20.w, r10
    mul_pp r10.xyz, r11, r11
    frc_pp r11.xyz, -r9
    add_sat_pp r9.xyz, r9, r11
    mul_pp r8.zw, r9.xyxy, r10.xyxy
    add_pp r3.w, r8.w, r8.z
    mad_pp r3.w, r10.z, r9.z, r3.w
    mul_sat_pp r3.w, r3.w, c15.x
    lrp_pp r8.zw, r3.w, c13.xyyw, c13.xyxz
    texld_pp r9, v2, s5
    lrp_pp r5.w, r9.z, r8.w, r8.z
    lrp_pp r8.z, r1.w, r5.w, r6.w
    texld_pp r10, v2, s4
    mul r9.xzw, r9.z, r10.xyyz
    mul r9.xzw, r9, c18.z
    mad_pp r9.xzw, r10.xyyz, c20.y, r9
    mul r11.xyz, r1.w, r9.xzww
    mul r11.xyz, r11, c18.w
    mad_pp r9.xzw, r9, c19.w, r11.xyyz
    add_pp r11.xyz, -r7.y, -c11
    mul_pp r9.xzw, r9, r11.xyyz
    mad_pp r9.xzw, r9, c4.w, c4.xyyz
    dp3_pp r11.x, r1, r6
    dp3_pp r11.y, r2, r6
    dp3_pp r11.z, r0, r6
    add r3.xyz, r3, -c8
    mad_pp r6.xyz, c0.w, r3, r11
    mad_pp r6.w, c7.z, r8.z, c7.w
    texldl_pp r6, r6, s1
    mov_sat_pp r2.w, r2.w
    max_pp r3.xyz, r8.z, r7.xzww
    mad_pp r5.w, r2.w, c21.x, c21.y
    mul_pp r2.w, r2.w, r5.w
    exp_pp r2.w, r2.w
    lrp_pp r11.xyz, r2.w, r3, r7.xzww
    mul_pp r3.xyz, r6, r11
    mul_pp r3.xyz, r3, c0
    mul_pp r2.w, r9.y, c14.w
    mul_pp r6.xyz, r10, r2.w
    mad_pp r3.xyz, r0.w, r3, r6
    texld_pp r6, r8, s6
    dp2add_pp r0.w, r6, -r6, -c6.y
    max_pp r2.w, r0.w, c20.x
    rsq_pp r0.w, r2.w
    rcp_pp r6.z, r0.w
    add r6.xyz, r6, c21.zzww
    mov r7.zw, c21
    mad_pp r6.xyz, c15.x, r6, -r7.zzww
    dp3_pp r7.x, r1, r6
    dp3_pp r7.y, r2, r6
    dp3_pp r7.z, r0, r6
    mov r7.w, c20.x
    texldl_pp r0, r7, s1
    mul_sat_pp r0.xyz, r0, c0
    dp3_pp r0.w, r6, r5
    add_pp r1.x, -r0.w, -c6.y
    cmp_pp r0.w, r0.w, r1.x, -c6.y
    mad_pp r0.xyz, r0.w, r0, -r3
    mad_pp r0.xyz, r3.w, r0, r3
    mad_pp r0.xyz, r1.w, r0, r3
    add_pp r0.xyz, r0, c11
    mad_pp r0.xyz, v3, r9.xzww, r0
    mul r1.xyz, r9.xzww, c16
    mad_pp r0.xyz, r1, c17.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r1, c22, s0
      add r1.y, -r1.y, v5.w
      mad r4.z, r1.x, r1.y, r4.x
      mov r4.w, v5.w
      mov r1.xyz, r4.zyww
    else
      mov_pp r1.xyz, c20.x
    endif
    mov r4.z, v5.w
    cmp r1.xyz, -r0.w, r4, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s9
    mul_pp oC0.xyz, r0, r1.x
    rcp r0.x, v5.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 153 instruction slots used (15 texture, 138 arithmetic)
