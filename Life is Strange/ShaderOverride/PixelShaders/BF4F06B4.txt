//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4x4 DNECubemapParallaxBox;
//   float4 DNECubemapParallaxBoxCenter;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   sampler2D HeightmapTexture;
//   float4 LightMapScale[2];
//   sampler2D LightMapTextures[2];
//   float3x3 LocalToWorldMatrix;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   float4 ScreenDoorFadeSettings;
//   float4 ScreenDoorFadeSettings2;
//   sampler2D ScreenDoorNoiseTexture;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   bool bEnableScreenDoorFade;
//
//
// Registers:
//
//   Name                        Reg   Size
//   --------------------------- ----- ----
//   bEnableScreenDoorFade       b0       1
//   DNEEnvMapParameter          c0       1
//   ScreenPositionScaleBias     c1       1
//   MinZ_MaxZRatio              c2       1
//   NvStereoEnabled             c3       1
//   DiffuseOverrideParameter    c4       1
//   SpecularOverrideParameter   c5       1
//   DNECubemapParallaxBox       c7       3
//   LocalToWorldMatrix          c10      3
//   LightMapScale               c13      2
//   DNEMiscParameter            c15      1
//   DNECubemapPosition          c16      1
//   DNECubemapParallaxBoxCenter c17      1
//   CameraWorldPos              c18      1
//   DNEResolution               c19      1
//   ScreenDoorFadeSettings      c20      1
//   ScreenDoorFadeSettings2     c21      1
//   UniformPixelVector_0        c22      1
//   UniformPixelVector_1        c23      1
//   UniformPixelScalars_0       c24      1
//   UpperSkyColor               c25      1
//   AmbientColorAndSkyFactor    c26      1
//   LightMapTextures            s0       2
//   NvStereoFixTexture          s2       1
//   DNEEnvironmentTexture       s3       1
//   ScreenDoorNoiseTexture      s4       1
//   PixelTexture2D_0            s5       1
//   PixelTexture2D_1            s6       1
//   PixelTexture2D_2            s7       1
//   PixelTexture2D_3            s8       1
//   HeightmapTexture            s9       1
//   VAOBuffer                   s10      1
//

    ps_3_0
    def c6, 2, -1, 1, 0
    def c27, -5.55472994, -6.98316002, 0.0625, 0
    def c28, 0.816496611, 0.577350259, 0, 0
    def c29, -0.707106769, -0.408248305, 0.577350259, 0.707106769
    dcl_texcoord1 v0.xy
    dcl_texcoord2 v1.xy
    dcl_texcoord6 v2.xyz
    dcl_texcoord5 v3
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_cube s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9
    dcl_2d s10

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_BF4F06B4_641.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    texld r0, v0, s9
    mad r0.xy, r0.zwzw, c6.x, c6.y
    dp2add r1.x, r0, -r0, c6.z
    rsq r1.x, r1.x
    rcp r0.z, r1.x
    mov r0.w, -r0.x
    dp2add r1.x, r0.zwzw, r0.zwzw, c6.w
    rsq r1.x, r1.x
    mul r1.yz, r0.xwzw, r1.x
    mov r1.x, c6.w
    mul r2.xyz, r0.zxyw, r1
    mad r2.xyz, r0.yzxw, r1.yzxw, -r2
    nrm r3.xyz, v2
    dp2add_pp r4.x, r1.zyzw, r3.xzzw, c6.w
    dp3_pp r4.y, r2, r3
    dp3_pp r4.z, r0, r3
    mov r3.zw, c6
    dp2add_pp r5.x, c10.xzzw, r1.zyzw, r3.w
    dp3_pp r5.y, c10, r2
    dp3_pp r5.z, c10, r0
    dp2add_pp r6.x, c11.xzzw, r1.zyzw, r3.w
    dp3_pp r6.y, c11, r2
    dp3_pp r6.z, c11, r0
    dp2add_pp r1.x, c12.xzzw, r1.zyzw, r3.w
    dp3_pp r1.y, c12, r2
    dp3_pp r1.z, c12, r0
    add r0.xyz, c18, v3
    mad r2.xy, vPos, c19, c19.zwzw
    mul r2.xy, r2, v3.w
    nrm_pp r7.xyz, r4
    mad_sat_pp r0.w, c15.x, v3.w, c15.y
    texld_pp r4, v0, s5
    mad_pp r3.xyw, r4.xyzz, c6.x, c6.y
    nrm_pp r4.xyz, r3.xyww
    dp3_pp r1.w, r4, r7
    mul_pp r3.xyw, r1.w, r4.xyzz
    mad_pp r3.xyw, r3, c6.x, -r7.xyzz
    texld_pp r7, v0, s8
    mad_pp r7.xyz, r7, c5.w, c5
    if b0
      mad r8.xy, vPos, c21.zwzw, c21
      texld_pp r8, r8, s4
      mad r5.w, c20.y, r8.x, c20.z
      add r6.w, r3.z, -c20.x
      add r8, r5.w, -r6.w
      texkill r8
    endif
    texld_pp r8, v0, s6
    texld_pp r9, v0, s7
    mad r9.xyw, r8.xyzz, c23.xyzz, -r8.xyzz
    mad_pp r9.xyw, r9.z, r9, r8.xyzz
    add_pp r10.xyz, r3.z, -c22
    mul_pp r9.xyw, r9, r10.xyzz
    mad_pp r9.xyw, r9, c4.w, c4.xyzz
    mul_pp r8.xyz, r8, r9.z
    mul_pp r8.xyz, r8, c23
    dp3_pp r5.x, r5, r3.xyww
    dp3_pp r5.y, r6, r3.xyww
    dp3_pp r5.z, r1, r3.xyww
    mul_pp r1.xyz, r5.y, c8
    mad_pp r1.xyz, c7, r5.x, r1
    mad_pp r1.xyz, c9, r5.z, r1
    add r3.xyz, r0, -c17
    mul r6.xyz, r3.y, c8
    mad r3.xyw, c7.xyzz, r3.x, r6.xyzz
    mad r3.xyz, c9, r3.z, r3.xyww
    add r6.xyz, -r3, c6.z
    rcp r10.x, r1.x
    rcp r10.y, r1.y
    rcp r10.z, r1.z
    mul_pp r1.xyz, r6, r10
    add r3.xyz, -r3, c6.y
    mul_pp r3.xyz, r10, r3
    max_pp r6.xyz, r1, r3
    min_pp r1.x, r6.z, r6.y
    min_pp r3.x, r1.x, r6.x
    mad r0.xyz, r3.x, r5, r0
    add_pp r3.xyz, r0, -c16
    mad_pp r3.w, c15.z, r4.w, c15.w
    texldl_pp r3, r3, s3
    mov_sat_pp r1.w, r1.w
    max_pp r0.xyz, r4.w, r7
    mad_pp r1.x, r1.w, c27.x, c27.y
    mul_pp r1.x, r1.w, r1.x
    exp_pp r1.x, r1.x
    lrp_pp r5.xyz, r1.x, r0, r7
    mul_pp r0.xyz, r3, r5
    mul_pp r0.xyz, r0, c0
    mul_pp r0.xyz, r0, r0.w
    mad_pp r0.xyz, c24.x, r8, r0
    add_pp r0.xyz, r0, c22
    dp2add_sat_pp r1.x, r4.yzzw, c28, c28.z
    dp3_sat_pp r1.y, r4, c29
    dp3_sat_pp r1.z, r4.yzxw, c29.yzww
    mul_pp r1.xyz, r1, r1
    texld r3, v1, s0
    mul_pp r3.xyz, r3, c13
    texld r4, v1, s1
    mul_pp r4.xyz, r4, c14
    dp3_pp r0.w, r4, r1
    mul_pp r1.xyz, r0.w, r3
    mad_pp r0.xyz, r9.xyww, r1, r0
    mul r1.xyz, r9.xyww, c25
    mad_pp r0.xyz, r1, c26.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r1, c27.zwzw, s2
      add r1.y, -r1.y, v3.w
      mad r2.z, r1.x, r1.y, r2.x
      mov r2.w, v3.w
      mov r1.xyz, r2.zyww
    else
      mov_pp r1.xyz, c6.w
    endif
    mov r2.z, v3.w
    cmp r1.xyz, -r0.w, r2, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s10
    mul r1.yzw, r9.xxyw, c26.xxyz
    mad_pp oC0.xyz, r0, r1.x, r1.yzww
    rcp r0.x, v3.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 142 instruction slots used (12 texture, 130 arithmetic)
