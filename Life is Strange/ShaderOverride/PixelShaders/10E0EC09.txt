//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float2 DistanceFadeParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D PixelTexture2D_6;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowTexture;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   bool bEnableDistanceShadowFading;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   bEnableDistanceShadowFading  b1       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   DNEResolution                c8       1
//   UniformPixelVector_0         c9       1
//   UniformPixelVector_1         c10      1
//   LightColorAndFalloffExponent c11      1
//   DistanceFadeParameters       c12      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//   PixelTexture2D_4             s7       1
//   PixelTexture2D_5             s8       1
//   PixelTexture2D_6             s9       1
//   ShadowTexture                s10      1
//

    ps_3_0
    def c2, 2, -1, 0, 15
    def c6, -0.5, 0.949999988, 0.666666687, -0.899999976
    def c13, 20, 10, 1.52876604, 0.125
    def c14, 0.0625, 0, 0.693147004, 2
    def c15, -5.55472994, -6.98316002, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xy
    dcl_texcoord3_pp v2.w
    dcl_texcoord4_pp v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord7 v5
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9
    dcl_2d s10

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_10E0EC09_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v4, v4
    rsq_pp r0.x, r0.x
    mad_sat_pp r0.y, c7.x, v5.w, c7.y
    mul_pp r0.y, r0.y, c0.x
    texld_pp r1, v1, s3
    mad_pp r1.xyz, r1, c2.x, c2.y
    texld_pp r2, v1, s4
    mad_pp r2.xyz, r2, c2.x, c2.y
    texld_pp r3, v1, s5
    max_pp r0.z, r3.x, c2.z
    add r0.zw, r0.z, c6.xyxy
    mad r0.w, r0.w, c6.z, c6.w
    mul_sat_pp r0.w, r0.w, c2.w
    cmp_pp r0.z, r0.z, -c2.y, r0.w
    add r0.w, r3.x, c6.x
    mov_sat r3.y, r3.x
    add r3.y, r3.y, c6.x
    mul_sat_pp r3.y, r3.y, c13.x
    cmp_pp r0.w, r0.w, r3.y, c2.z
    mad_sat_pp r0.z, r0.z, r3.x, r0.w
    add_pp r0.w, c6.x, v2.w
    mad_sat_pp r0.z, r0.w, c2.x, r0.z
    lrp_pp r3.xyz, r0.z, r2, r1
    nrm_pp r1.xyz, r3
    nrm_pp r2.xyz, v3
    mad_pp r3.xyz, v4, r0.x, r2
    nrm_pp r4.xyz, r3
    lrp_pp r3.x, r0.z, r2.w, r1.w
    mad_pp r0.x, r3.x, c13.y, c13.z
    exp_pp r0.x, r0.x
    texld_pp r3, v0, s10
    mov_sat_pp r3.x, r3.x
    mov_pp r3.y, -c6.x
    texld_pp r3, r3, s0
    if b0
      mad r3.yz, vPos.xxyw, c8.xxyw, c8.xzww
      mul r5.xy, r3.yzzw, v5.w
      if_ne c3.x, -c3.x
        texld r6, c14, s1
        add r0.w, -r6.y, v5.w
        mad r5.z, r6.x, r0.w, r5.x
        mov r5.xy, r5.zyzw
        mov r0.w, v5.w
      else
        mov r0.w, v5.w
      endif
      rcp r0.w, r0.w
      mul r3.yz, r0.w, r5.xxyw
      mad r3.yz, r3, c1.xxyw, c1.xwzw
      texld r5, r3.yzzw, s2
      mul_pp r3.yzw, r5.xxyz, r5.xxyz
      if b1
        dp3 r0.w, v5, v5
        rsq r0.w, r0.w
        rcp r0.w, r0.w
        add r0.w, -r0.w, c12.x
        mul_sat_pp r0.w, r0.w, c12.y
        mul_pp r0.w, r0.w, r0.w
        mad_pp r1.w, r5.w, r5.w, -r3.x
        mad_pp r5.xyz, r0.w, r1.w, r3.x
      else
        mov_pp r5.xyz, r3.x
      endif
      mul_pp r3.yzw, r3, r5.xxyz
    else
      mov_pp r3.yzw, r3.x
    endif
    texld_pp r5, v1, s8
    texld_pp r6, v1, s9
    lrp_pp r7.xyz, r0.z, r6, r5
    mad_pp r5.xyz, r7, c5.w, c5
    texld_pp r6, v1, s6
    texld_pp r7, v1, s7
    lrp_pp r8.xyz, r0.z, r7, r6
    mul_pp r6.xyz, r8, c10
    mov r7.y, c2.y
    add_pp r7.xyz, -r7.y, -c9
    mul_pp r6.xyz, r6, r7
    mad_pp r6.xyz, r6, c4.w, c4
    dp3_sat_pp r0.z, r1, r2
    mul_pp r0.w, r0.z, c0.w
    mov_sat_pp r1.w, c0.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.x, r0.x, r1.w
    dp3_sat_pp r1.x, r1, r4
    mad_pp r1.y, r0.x, c14.z, c14.w
    mul_pp r1.y, r1.y, c13.w
    mad r0.x, r0.x, r1.x, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r1.y
    mul_pp r0.x, r0.z, r0.x
    mul_pp r0.x, r0.y, r0.x
    dp3_sat_pp r0.y, r2, r4
    mad_pp r0.z, r0.y, c15.x, c15.y
    mul_pp r0.y, r0.y, r0.z
    exp_pp r0.y, r0.y
    lrp_pp r1.xyz, r0.y, -c2.y, r5
    mul_pp r0.xyz, r0.x, r1
    mad_pp r0.xyz, r6, r0.w, r0
    mul_pp r0.xyz, r3.yzww, r0
    mul oC0.xyz, r0, c11
    mov oC0.w, c2.z

// approximately 114 instruction slots used (11 texture, 103 arithmetic)
