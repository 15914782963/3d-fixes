//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEResolution           c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   UniformPixelVector_0    c7       1
//   UniformPixelVector_1    c8       1
//   UniformPixelScalars_0   c9       1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//

    ps_3_0
    def c4, -1, 0.0625, 0, 9.99999975e-006
    def c5, 100000, 0.200000003, 0, 0
    dcl_texcoord4 v0.w
    dcl_texcoord5 v1.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_D8CE2A22_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v1.w
    add r1.x, c4.x, v1.w
    abs r1.y, c3.x
    if_ne c3.x, -c3.x
      texld r2, c4.yzzw, s1
      add r1.z, -r2.y, v1.w
      mad r0.z, r2.x, r1.z, r0.x
      mov r0.w, v1.w
      mov r2.xyz, r0.zyww
    else
      mov r2.xyz, c4.z
    endif
    mov r0.z, v1.w
    cmp r0.xyz, -r1.y, r0, r2
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.z
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c4.w
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c5.x, r0.x
    mov r2.xyz, c8
    mul r0.yzw, r2.xxyz, c5.y
    mad r0.x, c2.x, -r0.x, r1.x
    cmp r0.xyz, r0.x, r0.yzww, c8
    add_pp r0.xyz, r0, c7
    mul r0.xyz, r0, v0.w
    mul_pp oC0.xyz, r0, c9.x
    mov oC0.w, c4.z

// approximately 35 instruction slots used (3 texture, 32 arithmetic)
