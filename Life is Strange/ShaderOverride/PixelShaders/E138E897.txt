//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   float4 WorldIncidentLighting[7];
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   WorldIncidentLighting        c7       7
//   DNEMiscParameter             c14      1
//   DNEResolution                c15      1
//   UniformPixelVector_0         c16      1
//   UniformPixelVector_1         c17      1
//   UniformPixelVector_2         c18      1
//   UniformPixelVector_3         c19      1
//   LightColorAndFalloffExponent c20      1
//   UpperSkyColor                c21      1
//   AmbientColorAndSkyFactor     c22      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   PixelTexture2D_0             s2       1
//   PixelTexture2D_1             s3       1
//   VAOBuffer                    s4       1
//

    ps_3_0
    def c6, 2, -1, 10, 1.52876604
    def c23, -0.333299994, 3, -1, 0.858085215
    def c24, -1.02332771, 1.02332771, 0.886227608, 0
    def c25, 0.0625, 0, 1, 0.5
    def c26, -0.858085215, 0.247708291, 0.429042608, 0.125
    def c27, 0.693147004, 2, -5.55472994, -6.98316002
    dcl_texcoord4 v0.xyz
    dcl_texcoord6 v1.xyz
    dcl_texcoord7_pp v2.xyz
    dcl_texcoord5 v3.w
    dcl_color v4.xyz
    dcl_color1 v5
    dcl_texcoord v6.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_E138E897_366.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v5
    nrm_pp r1.xyz, v4
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v5.w
    mad r3.xy, vPos, c15, c15.zwzw
    mul r3.xy, r3, v3.w
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mad_sat_pp r1.w, c14.x, v3.w, c14.y
    mul_pp r1.w, r1.w, c0.x
    texld_pp r4, v6, s2
    mad_pp r4.xyz, r4, c6.x, c6.y
    nrm_pp r5.xyz, r4
    nrm_pp r4.xyz, v0
    mad_pp r6.xyz, v1, r0.w, r4
    nrm_pp r7.xyz, r6
    mad_pp r0.w, r4.w, c6.z, c6.w
    exp_pp r0.w, r0.w
    texld_pp r6, v6, s3
    add_pp r8, r6.w, c23.x
    texkill r8
    mul_pp r8.xyz, c18, v2.y
    mad_pp r8.xyz, v2.x, c17, r8
    mad_pp r8.xyz, v2.z, c19, r8
    mul_pp r6.xyz, r6, r8
    mov r8.y, c6.y
    add_pp r8.xyz, -r8.y, -c16
    mul_pp r8.xyz, r6, r8
    mad_pp r8.xyz, r8, c4.w, c4
    mad_pp r6.xyz, r6, c5.w, c5
    mul r9.xyz, r8, c21
    mov_pp r2.w, c22.w
    mad_pp r9.xyz, r9, r2.w, c16
    dp3_pp r1.z, r1, r5
    dp3_pp r1.x, r2, r5
    dp3_pp r1.y, r0, r5
    mul r0.xyz, r1, r1.xyxw
    mad r2.y, r0.y, c23.y, c23.z
    mul r2.xz, r1, r1.y
    mad_pp r2.w, r1.z, r1.z, -r0.x
    mul r10.xyz, r1, c24.xyxw
    mul r10.w, r0.z, c23.w
    mul r2, r2, c26.xyxz
    dp4 r0.x, c8, r10
    mov r0.z, c24.z
    mad_pp r0.x, c7.x, r0.z, r0.x
    dp4 r0.y, c9, r2
    add_pp r1.x, r0.y, r0.x
    dp4 r0.x, c10, r10
    mad_pp r0.x, c7.y, r0.z, r0.x
    dp4 r0.y, c11, r2
    add_pp r1.y, r0.y, r0.x
    dp4 r0.x, c12, r10
    mad_pp r0.x, c7.z, r0.z, r0.x
    dp4 r0.y, c13, r2
    add_pp r1.z, r0.y, r0.x
    mul_pp r0.xyz, r1, r8
    cmp_pp r0.xyz, r1, r0, c24.w
    add_pp r0.xyz, r0, r9
    abs r1.x, c3.x
    if_ne c3.x, -c3.x
      texld r2, c25, s1
      add r1.y, -r2.y, v3.w
      mad r3.z, r2.x, r1.y, r3.x
      mov r3.w, v3.w
      mov r2.xyz, r3.zyww
    else
      mov r2.xyz, c24.w
    endif
    mov r3.z, v3.w
    cmp r1.xyz, -r1.x, r3, r2
    rcp r1.z, r1.z
    mul r1.xy, r1.z, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r2, r1, s4
    texld_pp r3, c25.zwzw, s0
    dp3_sat_pp r1.x, r5, r4
    mul_pp r1.y, r1.x, c0.w
    mov_sat_pp r1.z, c0.y
    mul_pp r1.z, r1.z, r1.z
    mul_pp r0.w, r0.w, r1.z
    dp3_sat_pp r1.z, r5, r7
    mad_pp r2.y, r0.w, c27.x, c27.y
    mul_pp r2.y, r2.y, c26.w
    mad r0.w, r0.w, r1.z, -r0.w
    exp_pp r0.w, r0.w
    mul_pp r0.w, r0.w, r2.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r0.w, r1.w, r0.w
    dp3_sat_pp r1.x, r4, r7
    mad_pp r1.z, r1.x, c27.z, c27.w
    mul_pp r1.x, r1.x, r1.z
    exp_pp r1.x, r1.x
    lrp_pp r2.yzw, r1.x, -c6.y, r6.xxyz
    mul_pp r1.xzw, r0.w, r2.yyzw
    mad_pp r1.xyz, r8, r1.y, r1.xzww
    mul_pp r1.xyz, r3.x, r1
    mul_pp r1.xyz, r1, c20
    mad_pp r0.xyz, r0, r2.x, r1
    mad_pp oC0.xyz, r8, c22, r0
    rcp r0.x, v3.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 115 instruction slots used (5 texture, 110 arithmetic)
