//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D PixelTexture2D_6;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   sampler2D WarpFunctionTexture;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNESpecularAttenuation       c7       1
//   DNEMiscParameter             c8       1
//   DNEResolution                c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelVector_1         c11      1
//   UniformPixelVector_2         c12      1
//   UniformPixelScalars_0        c13      1
//   LightColorAndFalloffExponent c14      1
//   SpotDirection                c15      1
//   SpotAngles                   c16      1
//   ShadowWarpFunctionTexture    s0       1
//   WarpFunctionTexture          s1       1
//   NvStereoFixTexture           s2       1
//   LightAttenuationTexture      s3       1
//   PixelTexture2D_0             s4       1
//   PixelTexture2D_1             s5       1
//   PixelTexture2D_2             s6       1
//   PixelTexture2D_3             s7       1
//   PixelTexture2D_4             s8       1
//   PixelTexture2D_5             s9       1
//   PixelTexture2D_6             s10      1
//

    ps_3_0
    def c2, 0, 0.333332986, 0.666665971, 9.99999997e-007
    def c6, 2, -1, 5, 15
    def c17, -2, 4, 0.5, 0.0500000007
    def c18, 10, 1.52876604, 1, 0.5
    def c19, 0.0625, 0, 0.0700000003, 0.0299999993
    def c20, 0.125, 0.0280000009, -5.55472994, -6.98316002
    def c21, 0, -0, -1, -0.100000001
    def c22, -1, 1, -0.949999988, 2089.24487
    def c23, 0.600000024, 0.400000006, 0.693147004, 2
    dcl_color1 v0.xyz
    dcl_texcoord v1.xy
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord7 v5.w
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9
    dcl_2d s10

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_DF5FF299_242.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v0, v0
    rsq_pp r0.x, r0.x
    dp3_pp r0.y, v4, v4
    rsq_pp r0.y, r0.y
    mad_sat_pp r0.z, c8.x, v5.w, c8.y
    mul_pp r0.z, r0.z, c7.x
    texld_pp r1, v1, s4
    mad_pp r1.xyz, r1, c6.x, c6.y
    mul_pp r2.xy, c6.zwzw, v1
    texld_pp r3, r2, s5
    dp2add_pp r0.w, r3, -r3, -c6.y
    max_pp r1.w, r0.w, c21.x
    rsq_pp r0.w, r1.w
    rcp_pp r3.z, r0.w
    lrp_pp r4.xyz, -c21.w, r3, -c21.yyzw
    mov r3.xy, c13
    mad_pp r3.xyz, r3.y, r3.x, c2
    texld_pp r2, r2, s6
    add_pp r3.xyz, r2, r3
    frc_pp r3.xyz, r3
    add r3.xyz, -r3, -c6.y
    texld_pp r5, v1, s7
    mad_pp r0.w, r5.z, c17.x, c17.y
    max r5.xyw, c2.w, r3.xyzz
    log r3.x, r5.x
    log r3.y, r5.y
    log r3.z, r5.w
    mul r3.xyz, r0.w, r3
    exp_pp r5.x, r3.x
    exp_pp r5.y, r3.y
    exp_pp r0.w, r3.z
    frc_pp r3.xyz, -r2
    add_sat_pp r2.xyz, r2, r3
    mul_pp r2.xy, r2, r5
    add_pp r1.w, r2.y, r2.x
    mad_pp r0.w, r0.w, r2.z, r1.w
    mul_pp r0.w, r0.w, c13.z
    mad_pp r0.x, v0.z, r0.x, -c6.y
    mul_pp r0.x, r0.w, r0.x
    mul_pp r0.x, r0.x, c17.z
    add_pp r2.xyz, -r1, r4
    mul_pp r2.xyz, r0.x, r2
    texld_pp r3, v1, s8
    mul_pp r0.w, r3.y, c13.w
    mad_pp r1.yzw, r0.w, r2.xxyz, r1.xxyz
    nrm_pp r2.xyz, r1.yzww
    nrm_pp r3.xyz, v2
    cmp r1.y, vFace, c22.x, c22.y
    mul r1.y, r1.y, c0.x
    mul_pp r1.yzw, r1.y, r2.xxyz
    mad_pp r2.xyz, v4, r0.y, r3
    nrm_pp r4.xyz, r2
    lrp_pp r2.xy, r1.x, c11.ywzw, c11.xzzw
    lrp_pp r0.y, r5.z, r2.y, r2.x
    lrp_pp r2.x, r0.x, -c6.y, r0.y
    lrp_pp r3.w, r0.w, r2.x, r1.x
    max_pp r0.y, r3.w, c17.w
    add r1.x, r0.y, c22.z
    mad r0.y, r0.y, c18.x, c18.y
    exp_pp r0.y, r0.y
    cmp_pp r0.y, r1.x, c22.w, r0.y
    dp3 r1.x, v3, v3
    rsq r2.x, r1.x
    mul r2.xyz, r2.x, v3
    dp3 r2.x, r2, -c15
    add r2.x, r2.x, -c16.x
    mul_sat r2.x, r2.x, c16.y
    mul_pp r2.x, r2.x, r2.x
    texld_pp r6, c18.zwzw, s0
    mov r2.yw, c17.z
    texld_pp r7, r2, s0
    add r2.x, -r1.x, -c6.y
    mul r2.x, r6.x, r2.x
    mul r8, r7.x, r2.x
    mov r9, r8
    texkill r9
    if b0
      mad r2.xy, vPos, c9, c9.zwzw
      mul r8.xy, r2, v5.w
      if_ne c3.x, -c3.x
        texld r9, c19, s2
        add r2.x, -r9.y, v5.w
        mad r8.z, r9.x, r2.x, r8.x
        mov r8.xy, r8.zyzw
        mov r2.x, v5.w
      else
        mov r2.x, v5.w
      endif
      rcp r2.x, r2.x
      mul r2.xy, r2.x, r8
      mad r2.xy, r2, c1, c1.wzzw
      texld r9, r2, s3
      mul_pp r5.xyw, r9.xyzz, r9.xyzz
      mul_pp r5.xyw, r5, r6.x
    else
      mov_pp r5.xyw, r6.x
    endif
    texld_pp r6, v1, s10
    mul_pp r0.x, r0.w, r0.x
    lrp_pp r7.yzw, r0.x, c19.z, r6.xxyz
    mad_pp r6.xyz, r7.yzww, c5.w, c5
    mov_sat r1.x, r1.x
    add r0.x, -r1.x, -c6.y
    pow_sat_pp r2.z, r0.x, c14.w
    texld_pp r2, r2.zwzw, s0
    texld_pp r9, v1, s9
    mov r2.y, c6.y
    add_pp r7.yzw, -r2.y, -c10.xxyz
    mul_pp r7.yzw, r7, r9.xxyz
    mad_pp r7.yzw, r7, c4.w, c4.xxyz
    mul_pp r0.x, r7.x, r2.x
    dp3_sat_pp r8.x, r1.yzww, r3
    mov r8.y, c17.z
    texld_pp r9, r8, s1
    mov_sat_pp r0.w, r3.z
    lrp_pp r10.xy, c23, r0.w, r9.x
    add_pp r0.w, r10.x, c19.w
    add r1.x, -r10.y, r0.w
    cmp_pp r10.z, r1.x, r10.y, r0.w
    lrp_pp r11.xyz, r5.z, r10.xzzw, r9.x
    mul_pp r9.xyz, r11, c7.w
    mul_sat_pp r0.x, r0.x, c7.y
    mul_pp r0.x, r0.x, r0.x
    mul_pp r0.x, r0.y, r0.x
    dp3_sat_pp r0.y, r1.yzww, r4
    mad_pp r0.w, r0.x, c23.z, c23.w
    mul_pp r0.w, r0.w, c20.x
    mad r0.x, r0.x, r0.y, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r0.w
    mul_pp r0.x, r8.x, r0.x
    mul_pp r0.x, r0.z, r0.x
    lrp_pp r0.yzw, r5.z, c20.y, r6.xxyz
    add r1.x, r2.y, c12.x
    mad_pp r1.x, r5.z, r1.x, -c6.y
    mul_pp r0.x, r0.x, r1.x
    dp3_sat_pp r1.x, r3, r4
    mad_pp r1.y, r1.x, c20.z, c20.w
    mul_pp r1.x, r1.x, r1.y
    exp_pp r1.x, r1.x
    lrp_pp r2.yzw, r1.x, -c6.y, r0
    mul_pp r0.xyz, r0.x, r2.yzww
    mad_pp r0.xyz, r7.yzww, r9, r0
    mul_pp r0.xyz, r5.xyww, r0
    mul r0.xyz, r0, c14
    mul r0.xyz, r2.x, r0
    mul r0.xyz, r7.x, r0
    cmp oC0.xyz, -r8.w, c21.x, r0
    mov oC0.w, c21.x

// approximately 162 instruction slots used (13 texture, 149 arithmetic)
