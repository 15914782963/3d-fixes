//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEResolution           c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   UniformPixelVector_0    c7       1
//   UniformPixelVector_1    c8       1
//   UniformPixelVector_2    c9       1
//   UniformPixelScalars_0   c10      1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//   PixelTexture2D_1        s3       1
//   PixelTexture2D_2        s4       1
//   PixelTexture2D_3        s5       1
//

    ps_3_0
    def c4, -0.5, 0, 4, 1
    def c5, 0.00249999994, 0.00374999992, 0.100000001, -0.0199999996
    def c6, -9.99999997e-007, 0.0625, 0, 9.99999975e-006
    def c11, 100000, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xyz
    dcl_texcoord4 v3.w
    dcl_texcoord5 v4.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_2377F3FF_534.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v4.w
    add_pp r1.xyz, c7, v1
    add r2.xy, c4.x, v0
    dp2add r1.w, r2, r2, c4.y
    mul_sat r1.w, r1.w, c4.z
    add r1.w, -r1.w, c4.w
    mul r1.w, r1.w, r1.w
    add r2.x, c10.x, v2.y
    mad r2.yz, r2.x, c5.xxyw, v0.xxyw
    texld_pp r3, r2.yzzw, s2
    mad r3.xy, r3, c5.z, v0
    mad r3.z, r2.x, c5.w, r3.y
    add r2.xy, r3.xzzw, c4.x
    mov r3.y, c4.y
    dp2add r4.x, c8, r2, r3.y
    dp2add r4.y, c9, r2, r3.y
    add r2.xy, r4, -c4.x
    texld r3, r2, s3
    texld r2, r2, s4
    lrp r4.x, v2.z, r2.x, r3.y
    mul r1.w, r1.w, r4.x
    add r2.x, r1_abs.w, c6.x
    pow r2.y, r1_abs.w, v2.x
    mul r1.w, r2.y, v1.w
    abs r2.y, c3.x
    if_ne c3.x, -c3.x
      texld r3, c6.yzzw, s1
      add r2.z, -r3.y, v4.w
      mad r0.z, r3.x, r2.z, r0.x
      mov r0.w, v4.w
      mov r3.xyz, r0.zyww
    else
      mov r3.xyz, c4.y
    endif
    mov r0.z, v4.w
    cmp r0.xyz, -r2.y, r0, r3
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.y
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c6.w
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c11.x, r0.x
    mad r0.x, c2.x, r0.x, -v4.w
    mul_sat r0.x, r0.x, c5.z
    mul r0.x, r0.x, r1.w
    cmp r0.x, r2.x, r0.x, c4.y
    texld_pp r0, r0.x, s5
    mul r0.xzw, r1.xyyz, v3.w
    mul_pp oC0.xyz, r0.y, r0.xzww
    mov oC0.w, c4.y

// approximately 62 instruction slots used (7 texture, 55 arithmetic)
