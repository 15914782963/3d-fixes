//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   sampler2D WarpFunctionTexture;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNESpecularAttenuation       c7       1
//   DNEMiscParameter             c8       1
//   DNEResolution                c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelVector_1         c11      1
//   UniformPixelVector_2         c12      1
//   UniformPixelScalars_0        c13      1
//   LightColorAndFalloffExponent c14      1
//   SpotDirection                c15      1
//   SpotAngles                   c16      1
//   ShadowWarpFunctionTexture    s0       1
//   WarpFunctionTexture          s1       1
//   NvStereoFixTexture           s2       1
//   LightAttenuationTexture      s3       1
//   PixelTexture2D_0             s4       1
//   PixelTexture2D_1             s5       1
//   PixelTexture2D_2             s6       1
//   PixelTexture2D_3             s7       1
//   PixelTexture2D_4             s8       1
//   PixelTexture2D_5             s9       1
//

    ps_3_0
    def c2, 7.14285803, 6.89655113, -3.07142901, -2.86206865
    def c6, 10, 1.52876604, 0.0625, 0
    def c17, 0.200000003, 0, 1, 0.5
    def c18, 0.100000001, 0, 0.693147004, 2
    def c19, 0.125, 0.0280000009, -5.55472994, -6.98316002
    def c20, 2, -1, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5 v2.xyz
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4.w
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_2F619A76_801.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v3, v3
    rsq_pp r0.x, r0.x
    mad_sat_pp r0.y, c8.x, v4.w, c8.y
    mul_pp r0.y, r0.y, c7.x
    texld_pp r1, v0, s4
    mad_pp r1.xyz, r1, c20.x, c20.y
    mad_pp r0.zw, v0.xyxy, c2.xyxy, c2
    texld_pp r2, r0.zwzw, s5
    dp2add_pp r2.w, r2, -r2, c20.z
    max_pp r3.x, r2.w, c20.w
    rsq_pp r2.w, r3.x
    rcp_pp r2.z, r2.w
    add_pp r2.xyz, r2, -c20.wwzw
    mad_pp r2.xyz, r2, c17.x, c17.yyzw
    texld_pp r3, r0.zwzw, s6
    mov r4.yz, c20
    add_pp r0.z, r4.z, -c13.x
    add_pp r0.z, -r0.z, r3.y
    frc_pp r0.w, -r0.z
    add_sat_pp r0.z, r0.w, r0.z
    mul_pp r0.z, r0.z, r3.x
    lrp_pp r3.xyz, r0.z, r2, r1
    nrm_pp r1.xyz, r3
    nrm_pp r2.xyz, v1
    cmp r0.w, vFace, c20.y, c20.z
    mul r0.w, r0.w, c0.x
    mul_pp r1.xyz, r0.w, r1
    mad_pp r3.xyz, v3, r0.x, r2
    nrm_pp r5.xyz, r3
    lrp_pp r2.w, r0.z, c20.z, r1.w
    mad_pp r0.x, r2.w, c6.x, c6.y
    exp_pp r0.x, r0.x
    dp3 r0.w, v2, v2
    rsq r1.w, r0.w
    mul r3.xyz, r1.w, v2
    dp3 r1.w, r3, -c15
    add r1.w, r1.w, -c16.x
    mul_sat r1.w, r1.w, c16.y
    mul_pp r3.x, r1.w, r1.w
    texld_pp r6, c17.zwzw, s0
    mov r3.yw, c17.w
    texld_pp r7, r3, s0
    add r1.w, -r0.w, c20.z
    mul r1.w, r6.x, r1.w
    mul r8, r7.x, r1.w
    mov r9, r8
    texkill r9
    if b0
      mad r3.xy, vPos, c9, c9.zwzw
      mul r8.xy, r3, v4.w
      if_ne c3.x, -c3.x
        texld r9, c6.zwzw, s2
        add r1.w, -r9.y, v4.w
        mad r8.z, r9.x, r1.w, r8.x
        mov r8.xy, r8.zyzw
        mov r1.w, v4.w
      else
        mov r1.w, v4.w
      endif
      rcp r1.w, r1.w
      mul r3.xy, r1.w, r8
      mad r3.xy, r3, c1, c1.wzzw
      texld r9, r3, s3
      mul_pp r6.yzw, r9.xxyz, r9.xxyz
      mul_pp r6.yzw, r6, r6.x
    else
      mov_pp r6.yzw, r6.x
    endif
    texld_pp r9, v0, s8
    mad_pp r7.yzw, r0.z, -r9.xxyz, r9.xxyz
    mad_pp r7.yzw, r7, c5.w, c5.xxyz
    mov_sat r0.w, r0.w
    add r0.w, -r0.w, c20.z
    pow_sat_pp r3.z, r0.w, c14.w
    texld_pp r3, r3.zwzw, s0
    texld_pp r9, v0, s7
    lrp_pp r3.yzw, r0.z, c18.xxyy, r9.xxyz
    add_pp r4.xzw, r4.z, -c10.xyyz
    mul_pp r3.yzw, r3, r4.xxzw
    mad_pp r3.yzw, r3, c4.w, c4.xxyz
    mul_pp r0.z, r7.x, r3.x
    texld_pp r9, v0, s9
    dp3_sat_pp r8.x, r1, r2
    mov r8.y, c17.w
    texld_pp r10, r8, s1
    mov_sat_pp r0.w, r2.z
    lrp_pp r11.xy, c11, r0.w, r10.x
    add_pp r0.w, r11.x, c11.z
    add r1.w, -r11.y, r0.w
    cmp_pp r11.z, r1.w, r11.y, r0.w
    lrp_pp r4.xzw, r9.x, r11.xyzz, r10.x
    mul_pp r4.xzw, r4, c7.w
    mul_sat_pp r0.z, r0.z, c7.y
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    dp3_sat_pp r0.z, r1, r5
    mad_pp r0.w, r0.x, c18.z, c18.w
    mul_pp r0.w, r0.w, c19.x
    mad r0.x, r0.x, r0.z, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r0.w
    mul_pp r0.x, r8.x, r0.x
    mul_pp r0.x, r0.y, r0.x
    lrp_pp r0.yzw, r9.x, c19.y, r7
    add r1.x, r4.y, c12.x
    mad_pp r1.x, r9.x, r1.x, c20.z
    mul_pp r0.x, r0.x, r1.x
    dp3_sat_pp r1.x, r2, r5
    mad_pp r1.y, r1.x, c19.z, c19.w
    mul_pp r1.x, r1.x, r1.y
    exp_pp r1.x, r1.x
    lrp_pp r2.xyz, r1.x, c20.z, r0.yzww
    mul_pp r0.xyz, r0.x, r2
    mad_pp r0.xyz, r3.yzww, r4.xzww, r0
    mul_pp r0.xyz, r6.yzww, r0
    mul r0.xyz, r0, c14
    mul r0.xyz, r3.x, r0
    mul r0.xyz, r7.x, r0
    cmp oC0.xyz, -r8.w, c20.w, r0
    mov oC0.w, c20.w

// approximately 133 instruction slots used (12 texture, 121 arithmetic)
