//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelVector_0;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEResolution           c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   UniformPixelVector_0    c7       1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//   PixelTexture2D_1        s3       1
//   PixelTexture2D_2        s4       1
//

    ps_3_0
    def c4, 0.200000003, 0, 1, 0.5
    def c5, 0.0625, 0, 9.99999975e-006, 100000
    def c6, 0.0133333337, -9.99999997e-007, 0.45449999, 0
    def c8, 2, -1, -2, 1
    dcl_texcoord4 v0
    dcl_texcoord7_pp v1
    dcl_texcoord5 v2.w
    dcl_color1 v3.xyz
    dcl_texcoord v4.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_57352FD1_3060.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v3
    mad r1.xy, vPos, c0, c0.zwzw
    mul r1.xy, r1, v2.w
    texld_pp r2, v4, s2
    mad r2.xyz, r2, c8.x, c8.yyzw
    mad r2.xyz, r2, c4.x, c4.yyzw
    dp3 r0.x, r0, r2
    add r0.x, r0.x, c8.w
    mul r0.x, r0.x, c4.w
    texld r0, r0.x, s3
    mad_pp r0.xyz, r0.y, v1, c7
    mul r0.w, r2.w, v1.w
    abs r2.x, c3.x
    if_ne c3.x, -c3.x
      texld r3, c5, s1
      add r2.y, -r3.y, v2.w
      mad r1.z, r3.x, r2.y, r1.x
      mov r1.w, v2.w
      mov r2.yzw, r1.xzyw
    else
      mov r2.yzw, c4.y
    endif
    mov r1.z, v2.w
    cmp r1.xyz, -r2.x, r1, r2.yzww
    rcp r1.z, r1.z
    mul r1.xy, r1.z, r1
    mad r1.xy, r1, c1, c1.wzzw
    mov r1.zw, c4.y
    texldl r1, r1, s0
    add r1.x, r1.w, -c2.y
    add r1.y, -r1.x, c5.z
    rcp r1.x, r1.x
    cmp r1.x, r1.y, c5.w, r1.x
    mad r1.x, c2.x, r1.x, -v2.w
    mul_sat r1.x, r1.x, c6.x
    mul r0.w, r0.w, r1.x
    add r1.x, r0_abs.w, c6.y
    pow r1.y, r0_abs.w, c6.z
    cmp r0.w, r1.x, r1.y, c4.y
    texld_pp r1, r0.w, s4
    mad_pp oC0.xyz, r0, v0.w, v0
    mov_pp oC0.w, r1.y

// approximately 49 instruction slots used (6 texture, 43 arithmetic)
