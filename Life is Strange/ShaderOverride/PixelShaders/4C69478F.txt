//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D PixelTexture2D_6;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   float4 WorldIncidentLighting[7];
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   WorldIncidentLighting        c7       7
//   DNEEnvMapParameter           c14      1
//   DNEMiscParameter             c15      1
//   DNECubemapPosition           c16      1
//   CameraWorldPos               c17      1
//   DNEResolution                c18      1
//   UniformPixelVector_0         c19      1
//   UniformPixelVector_1         c20      1
//   LightColorAndFalloffExponent c21      1
//   UpperSkyColor                c22      1
//   AmbientColorAndSkyFactor     c23      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   DNEEnvironmentTexture        s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//   PixelTexture2D_4             s7       1
//   PixelTexture2D_5             s8       1
//   PixelTexture2D_6             s9       1
//   VAOBuffer                    s10      1
//

    ps_3_0
    def c6, 2, -1, 0, 15
    def c24, -0.5, 0.949999988, 0.666666687, -0.899999976
    def c25, 20, 10, 1.52876604, 0.858085215
    def c26, 0.0625, 0, 1, 0.5
    def c27, -5.55472994, -6.98316002, 3, -1
    def c28, -1.02332771, 1.02332771, 0.886227608, 0.125
    def c29, -0.858085215, 0.247708291, 0.429042608, 0
    def c30, 0.693147004, 2, 0, 0
    dcl_texcoord4 v0.xyz
    dcl_texcoord6 v1.xyz
    dcl_texcoord7_pp v2.w
    dcl_texcoord5 v3
    dcl_color v4.xyz
    dcl_color1 v5
    dcl_texcoord v6.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9
    dcl_2d s10

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_4C69478F_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v5
    nrm_pp r1.xyz, v4
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v5.w
    add r3.xyz, c17, v3
    mad r4.xy, vPos, c18, c18.zwzw
    mul r4.xy, r4, v3.w
    nrm_pp r5.xyz, v1
    mad_sat_pp r0.w, c15.x, v3.w, c15.y
    mul_pp r1.w, r0.w, c0.x
    texld_pp r6, v6, s3
    mad_pp r6.xyz, r6, c6.x, c6.y
    texld_pp r7, v6, s4
    mad_pp r7.xyz, r7, c6.x, c6.y
    texld_pp r8, v6, s5
    max_pp r2.w, r8.x, c6.z
    add r8.yz, r2.w, c24.xxyw
    mad r2.w, r8.z, c24.z, c24.w
    mul_sat_pp r2.w, r2.w, c6.w
    cmp_pp r2.w, r8.y, -c6.y, r2.w
    add r3.w, r8.x, c24.x
    mov_sat r5.w, r8.x
    add r5.w, r5.w, c24.x
    mul_sat_pp r5.w, r5.w, c25.x
    cmp_pp r3.w, r3.w, r5.w, c6.z
    mad_sat_pp r2.w, r2.w, r8.x, r3.w
    add_pp r3.w, c24.x, v2.w
    mad_sat_pp r2.w, r3.w, c6.x, r2.w
    lrp_pp r8.xyz, r2.w, r7, r6
    nrm_pp r6.xyz, r8
    dp3_pp r3.w, v0, v0
    rsq_pp r3.w, r3.w
    mul_pp r7.xyz, r3.w, v0
    dp3_pp r5.w, r6, r5
    mul_pp r8.xyz, r5.w, r6
    mad_pp r8.xyz, r8, c6.x, -r5
    mad_pp r5.xyz, v0, r3.w, r5
    nrm_pp r9.xyz, r5
    lrp_pp r3.w, r2.w, r7.w, r6.w
    mad_pp r5.x, r3.w, c25.y, c25.z
    exp_pp r5.x, r5.x
    texld_pp r10, v6, s8
    texld_pp r11, v6, s9
    lrp_pp r12.xyz, r2.w, r11, r10
    mad_pp r10.xyz, r12, c5.w, c5
    texld_pp r11, v6, s6
    texld_pp r12, v6, s7
    lrp_pp r13.xyz, r2.w, r12, r11
    mul_pp r11.xyz, r13, c20
    mov r5.y, c6.y
    add_pp r12.xyz, -r5.y, -c19
    mul_pp r11.xyz, r11, r12
    mad_pp r11.xyz, r11, c4.w, c4
    dp3_pp r12.x, r1, r8
    dp3_pp r12.y, r2, r8
    dp3_pp r12.z, r0, r8
    add r3.xyz, r3, -c16
    mad_pp r8.xyz, c14.w, r3, r12
    mad_pp r8.w, c15.z, r3.w, c15.w
    texldl_pp r8, r8, s2
    mov_sat_pp r5.w, r5.w
    max_pp r12.xyz, r3.w, r10
    mad_pp r2.w, r5.w, c27.x, c27.y
    mul_pp r2.w, r5.w, r2.w
    exp_pp r2.w, r2.w
    lrp_pp r3.xyz, r2.w, r12, r10
    mul_pp r3.xyz, r8, r3
    mul_pp r3.xyz, r3, c14
    mad_pp r3.xyz, r0.w, r3, c19
    mul r5.yzw, r11.xxyz, c22.xxyz
    mad_pp r3.xyz, r5.yzww, c23.w, r3
    dp3_pp r1.z, r1, r6
    dp3_pp r1.x, r2, r6
    dp3_pp r1.y, r0, r6
    mul r0.xyz, r1, r1.xyxw
    mad r2.y, r0.y, c27.z, c27.w
    mul r2.xz, r1, r1.y
    mad_pp r2.w, r1.z, r1.z, -r0.x
    mul r8.xyz, r1, c28.xyxw
    mul r8.w, r0.z, c25.w
    mul r0, r2, c29.xyxz
    dp4 r1.x, c8, r8
    mov r1.z, c28.z
    mad_pp r1.x, c7.x, r1.z, r1.x
    dp4 r1.y, c9, r0
    add_pp r2.x, r1.y, r1.x
    dp4 r1.x, c10, r8
    mad_pp r1.x, c7.y, r1.z, r1.x
    dp4 r1.y, c11, r0
    add_pp r2.y, r1.y, r1.x
    dp4 r1.x, c12, r8
    mad_pp r1.x, c7.z, r1.z, r1.x
    dp4 r0.x, c13, r0
    add_pp r2.z, r0.x, r1.x
    mul_pp r0.xyz, r2, r11
    cmp_pp r0.xyz, r2, r0, c6.z
    add_pp r0.xyz, r0, r3
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r2, c26, s1
      add r1.x, -r2.y, v3.w
      mad r4.z, r2.x, r1.x, r4.x
      mov r4.w, v3.w
      mov r1.xyz, r4.zyww
    else
      mov_pp r1.xyz, c6.z
    endif
    mov r4.z, v3.w
    cmp r1.xyz, -r0.w, r4, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r2, r1, s10
    texld_pp r3, c26.zwzw, s0
    dp3_sat_pp r0.w, r6, r7
    mul_pp r1.x, r0.w, c0.w
    mov_sat_pp r1.y, c0.y
    mul_pp r1.y, r1.y, r1.y
    mul_pp r1.y, r5.x, r1.y
    dp3_sat_pp r1.z, r6, r9
    mad_pp r2.y, r1.y, c30.x, c30.y
    mul_pp r2.y, r2.y, c28.w
    mad r1.y, r1.y, r1.z, -r1.y
    exp_pp r1.y, r1.y
    mul_pp r1.y, r1.y, r2.y
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.w, r0.w
    dp3_sat_pp r1.y, r7, r9
    mad_pp r1.z, r1.y, c27.x, c27.y
    mul_pp r1.y, r1.y, r1.z
    exp_pp r1.y, r1.y
    lrp_pp r2.yzw, r1.y, -c6.y, r10.xxyz
    mul_pp r1.yzw, r0.w, r2
    mad_pp r1.xyz, r11, r1.x, r1.yzww
    mul_pp r1.xyz, r3.x, r1
    mul_pp r1.xyz, r1, c21
    mad_pp r0.xyz, r0, r2.x, r1
    mad_pp oC0.xyz, r11, c23, r0
    rcp r0.x, v3.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 154 instruction slots used (12 texture, 142 arithmetic)
