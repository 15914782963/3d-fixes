//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 EdgeSampleOffsets[4];
//   float3 FalloffParameters;
//   float2 InvRandomAngleTextureSize;
//   float4 LightPosition;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D RandomAngleTexture;
//   float4 RefiningSampleOffsets[16];
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4x4 ScreenToShadowMatrix;
//   float4x4 ScreenToWorld;
//   sampler2D ShadowDepthTexture;
//   float4 ShadowModulateColor;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   InvRandomAngleTextureSize c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   RefiningSampleOffsets     c7      16
//   ScreenToShadowMatrix      c23      4
//   EdgeSampleOffsets         c27      4
//   ScreenToWorld             c31      4
//   ShadowModulateColor       c35      1
//   LightPosition             c36      1
//   FalloffParameters         c37      1
//   SceneColorTexture         s0       1
//   NvStereoFixTexture        s1       1
//   ShadowDepthTexture        s2       1
//   RandomAngleTexture        s3       1
//

    ps_3_0
    def c4, 0.0625, 0, 9.99999975e-006, 100000
    def c5, 0.999000013, 1, 0.5, -2
    def c6, 1, -1, 0, 0.125
    def c38, 9.99999975e-005, -0.999899983, 0.03125, 0.699999988
    dcl_texcoord v0.xyw
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15


// Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-unreal-shadows --only-autofixed --git --quiet CRC32_11FA567D_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

texldl r8, c220.z, s15
mov r9.xyw, v0
add r8.w, r9.w, -r8.y
mad r9.x, r8.w, r8.x, r9.x

    if_ne c3.x, -c3.x
      texld r0, c4, s1
      add r0.y, -r0.y, r9.w
      mad r0.x, r0.x, r0.y, r9.x
      mov r0.yz, r9.xyww
    else
      mov r0.xyz, r9.xyww
    endif
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.y
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c4.z
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c4.w, r0.x
    mul r0.x, r0.x, c2.x
    rcp r0.y, r9.w
    mul r0.zw, r0.y, r9.xyxy
    mul r0.zw, r0.x, r0
    mul r1, r0.w, c24

// Unreal Engine shadow fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-unreal-shadows --only-autofixed --git --quiet CRC32_11FA567D_0.txt
add r8.w, r0.x, -r8.y
mad r0.z, -r8.w, r8.x, r0.z

    mad r1, c23, r0.z, r1
    mad r1, c25, r0.x, r1
    add r1, r1, c26
    rcp r1.w, r1.w
    mul r2.xy, r1.w, r1
    min r2.z, r1.z, c5.x
    mad r3.xy, r9, r0.y, c5.y
    mul r3.xy, r3, c0
    mul r3.xy, r3, c5.z
    texld r3, r3, s3
    mad_pp r3, r3.yxyx, -c5.w, -c5.y
    mul_pp r4, r3.wzwz, c6.xyxy
    mad r5, r4.zwzw, c27.xxzz, r2.xyxy
    mad_pp r5, r3.zwzw, c27.yyww, r5
    texld_pp r6, r5, s2
    texld_pp r5, r5.zwzw, s2
    mov_pp r6.y, r5.x
    add r5.xy, r2.z, -r6
    mad r6, r4.zwzw, c28.xxzz, r2.xyxy
    mad_pp r6, r3.zwzw, c28.yyww, r6
    texld_pp r7, r6, s2
    texld_pp r6, r6.zwzw, s2
    mov_pp r7.y, r6.x
    add r5.zw, r2.z, -r7.xyxy
    cmp r5, r5, c6.z, c6.x
    dp2add_pp r0.y, r5.zwzw, c6.w, c6.z
    dp2add_pp r0.y, r5, c6.w, r0.y
    mad r5, r4.zwzw, c29.xxzz, r2.xyxy
    mad_pp r5, r3.zwzw, c29.yyww, r5
    texld_pp r6, r5, s2
    texld_pp r5, r5.zwzw, s2
    mov_pp r6.y, r5.x
    add r5.xy, r2.z, -r6
    cmp r5.xy, r5, c6.z, c6.x
    dp2add_pp r0.y, r5, c6.w, r0.y
    mad r4, r4, c30.xxzz, r2.xyxy
    mad_pp r3, r3, c30.yyww, r4
    texld_pp r4, r3, s2
    texld_pp r3, r3.zwzw, s2
    mov_pp r4.y, r3.x
    add r2.xy, r2.z, -r4
    cmp r2.xy, r2, c6.z, c6.x
    dp2add_pp r0.y, r2, c6.w, r0.y
    add r1.z, -r0.y, c38.x
    add r2.x, r0.y, c38.y
    cmp r2.x, r2.x, c6.z, c6.x
    cmp r1.z, r1.z, c4.y, r2.x
    if_ne r1.z, -r1.z
      mad_pp r3, r1.xyxy, r1.w, c7
      mul r4, r3.xyxx, c6.xxzz
      texldl_pp r4, r4, s2
      mul r3, r3.zwxx, c6.xxzz
      texldl_pp r3, r3, s2
      mad_pp r5, r1.xyxy, r1.w, c8
      mul r6, r5.xyxx, c6.xxzz
      texldl_pp r6, r6, s2
      mul r5, r5.zwxx, c6.xxzz
      texldl_pp r5, r5, s2
      mov_pp r4.y, r3.x
      mov_pp r4.z, r6.x
      mov_pp r4.w, r5.x
      add r3, r2.z, -r4
      cmp r3, r3, c6.z, c6.x
      dp4_pp r1.z, r3, c38.z
      mad_pp r3, r1.xyxy, r1.w, c9
      mul r4, r3.xyxx, c6.xxzz
      texldl r4, r4, s2
      mul r3, r3.zwxx, c6.xxzz
      texldl r3, r3, s2
      mad_pp r5, r1.xyxy, r1.w, c10
      mul r6, r5.xyxx, c6.xxzz
      texldl r6, r6, s2
      mul r5, r5.zwxx, c6.xxzz
      texldl r5, r5, s2
      mov r4.y, r3.x
      mov r4.z, r6.x
      mov r4.w, r5.x
      add r3, r2.z, -r4
      cmp r3, r3, c6.z, c6.x
      dp4_pp r2.x, r3, c38.z
      add_pp r1.z, r1.z, r2.x
      mad_pp r3, r1.xyxy, r1.w, c11
      mul r4, r3.xyxx, c6.xxzz
      texldl r4, r4, s2
      mul r3, r3.zwxx, c6.xxzz
      texldl r3, r3, s2
      mad_pp r5, r1.xyxy, r1.w, c12
      mul r6, r5.xyxx, c6.xxzz
      texldl r6, r6, s2
      mul r5, r5.zwxx, c6.xxzz
      texldl r5, r5, s2
      mov r4.y, r3.x
      mov r4.z, r6.x
      mov r4.w, r5.x
      add r3, r2.z, -r4
      cmp r3, r3, c6.z, c6.x
      dp4_pp r2.x, r3, c38.z
      add_pp r1.z, r1.z, r2.x
      mad_pp r3, r1.xyxy, r1.w, c13
      mul r4, r3.xyxx, c6.xxzz
      texldl r4, r4, s2
      mul r3, r3.zwxx, c6.xxzz
      texldl r3, r3, s2
      mad_pp r5, r1.xyxy, r1.w, c14
      mul r6, r5.xyxx, c6.xxzz
      texldl r6, r6, s2
      mul r5, r5.zwxx, c6.xxzz
      texldl r5, r5, s2
      mov r4.y, r3.x
      mov r4.z, r6.x
      mov r4.w, r5.x
      add r3, r2.z, -r4
      cmp r3, r3, c6.z, c6.x
      dp4_pp r2.x, r3, c38.z
      add_pp r1.z, r1.z, r2.x
      mad_pp r3, r1.xyxy, r1.w, c15
      mul r4, r3.xyxx, c6.xxzz
      texldl r4, r4, s2
      mul r3, r3.zwxx, c6.xxzz
      texldl r3, r3, s2
      mad_pp r5, r1.xyxy, r1.w, c16
      mul r6, r5.xyxx, c6.xxzz
      texldl r6, r6, s2
      mul r5, r5.zwxx, c6.xxzz
      texldl r5, r5, s2
      mov r4.y, r3.x
      mov r4.z, r6.x
      mov r4.w, r5.x
      add r3, r2.z, -r4
      cmp r3, r3, c6.z, c6.x
      dp4_pp r2.x, r3, c38.z
      add_pp r1.z, r1.z, r2.x
      mad_pp r3, r1.xyxy, r1.w, c17
      mul r4, r3.xyxx, c6.xxzz
      texldl r4, r4, s2
      mul r3, r3.zwxx, c6.xxzz
      texldl r3, r3, s2
      mad_pp r5, r1.xyxy, r1.w, c18
      mul r6, r5.xyxx, c6.xxzz
      texldl r6, r6, s2
      mul r5, r5.zwxx, c6.xxzz
      texldl r5, r5, s2
      mov r4.y, r3.x
      mov r4.z, r6.x
      mov r4.w, r5.x
      add r3, r2.z, -r4
      cmp r3, r3, c6.z, c6.x
      dp4_pp r2.x, r3, c38.z
      add_pp r1.z, r1.z, r2.x
      mad_pp r3, r1.xyxy, r1.w, c19
      mul r4, r3.xyxx, c6.xxzz
      texldl r4, r4, s2
      mul r3, r3.zwxx, c6.xxzz
      texldl r3, r3, s2
      mad_pp r5, r1.xyxy, r1.w, c20
      mul r6, r5.xyxx, c6.xxzz
      texldl r6, r6, s2
      mul r5, r5.zwxx, c6.xxzz
      texldl r5, r5, s2
      mov r4.y, r3.x
      mov r4.z, r6.x
      mov r4.w, r5.x
      add r3, r2.z, -r4
      cmp r3, r3, c6.z, c6.x
      dp4_pp r2.x, r3, c38.z
      add_pp r1.z, r1.z, r2.x
      mad_pp r3, r1.xyxy, r1.w, c21
      mul r4, r3.xyxx, c6.xxzz
      texldl r4, r4, s2
      mul r3, r3.zwxx, c6.xxzz
      texldl r3, r3, s2
      mad_pp r5, r1.xyxy, r1.w, c22
      mul r6, r5.xyxx, c6.xxzz
      texldl r6, r6, s2
      mul r5, r5.zwxx, c6.xxzz
      texldl r5, r5, s2
      mov r4.y, r3.x
      mov r4.z, r6.x
      mov r4.w, r5.x
      add r2, r2.z, -r4
      cmp r2, r2, c6.z, c6.x
      dp4_pp r1.x, r2, c38.z
      add_pp r1.x, r1.x, r1.z
      lrp_pp r2.x, c38.w, r1.x, r0.y
      mov_pp r0.y, r2.x
    endif
    mul r1.xyz, r0.w, c32
    mad r1.xyz, c31, r0.z, r1
    mad r0.xzw, c33.xyyz, r0.x, r1.xyyz
    add r0.xzw, r0, c34.xyyz
    add r0.xzw, -r0, c36.xyyz
    mul r0.xzw, r0, c36.w
    dp3 r0.x, r0.xzww, r0.xzww
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    mad r0.x, r0.x, c37.y, c37.z
    max r1.x, r0.x, c4.y
    mad r0.x, r1.x, -r1.x, c5.y
    max r1.x, r0.x, c4.y
    pow_pp r0.x, r1.x, c37.x
    mov r1.y, c5.y
    add r1, -r1.y, c35
    mad_pp r1, r0.x, r1, c5.y
    mul_pp r0.x, r0.y, r0.y
    mul_pp r0.x, r0.y, r0.x
    add_pp r2, -r1, c5.y
    mad_pp oC0, r0.x, r2, r1

// approximately 272 instruction slots used (76 texture, 196 arithmetic)
