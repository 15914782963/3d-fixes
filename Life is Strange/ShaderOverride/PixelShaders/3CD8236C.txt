//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   sampler2D WarpFunctionTexture;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNESpecularAttenuation       c7       1
//   DNEEnvMapParameter           c8       1
//   DNEMiscParameter             c9       1
//   DNECubemapPosition           c10      1
//   CameraWorldPos               c11      1
//   DNEResolution                c12      1
//   UniformPixelVector_0         c13      1
//   UniformPixelVector_1         c14      1
//   UniformPixelScalars_0        c15      1
//   LightColorAndFalloffExponent c16      1
//   UpperSkyColor                c17      1
//   AmbientColorAndSkyFactor     c18      1
//   ShadowWarpFunctionTexture    s0       1
//   WarpFunctionTexture          s1       1
//   NvStereoFixTexture           s2       1
//   DNEEnvironmentTexture        s3       1
//   PixelTexture2D_0             s4       1
//   PixelTexture2D_1             s5       1
//   PixelTexture2D_2             s6       1
//   PixelTexture2D_3             s7       1
//   PixelTexture2D_4             s8       1
//   VAOBuffer                    s9       1
//

    ps_3_0
    def c6, 2, -1, 1, 0.0280000009
    def c19, 10, 1.52876604, -5.55472994, -6.98316002
    def c20, 0.0625, 0, 1, 0.5
    def c21, 0.600000024, 0.400000006, 0.0299999993, 0.125
    def c22, 0.693147004, 2, 0, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord4 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord5 v5
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_cube s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_3CD8236C_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v1.w
    add r3.xyz, c11, v5
    mad r4.xy, vPos, c12, c12.zwzw
    mul r4.xy, r4, v5.w
    nrm_pp r5.xyz, v4
    mad_sat_pp r0.w, c9.x, v5.w, c9.y
    mul_pp r1.w, r0.w, c7.x
    texld_pp r6, v2, s4
    mad_pp r6.xyz, r6, c6.x, c6.y
    texld_pp r7, v2, s5
    mad_pp r7.xyz, r7, c6.x, c6.y
    lrp_pp r8.xyz, c15.x, r7, r6
    nrm_pp r6.xyz, r8
    dp3_pp r2.w, v3, v3
    rsq_pp r2.w, r2.w
    mul_pp r7.xyz, r2.w, v3
    cmp r3.w, vFace, c6.y, c6.z
    mul r3.w, r3.w, c0.x
    dp3_pp r5.w, r6, r5
    mul_pp r8.xyz, r5.w, r6
    mad_pp r8.xyz, r8, c6.x, -r5
    mad_pp r5.xyz, v3, r2.w, r5
    nrm_pp r9.xyz, r5
    lrp_pp r2.w, c15.x, r7.w, r6.w
    mad_pp r5.x, r2.w, c19.x, c19.y
    exp_pp r5.x, r5.x
    texld_pp r10, v2, s7
    texld_pp r11, v2, s8
    mad_pp r11.xyz, r11, c5.w, c5
    lrp_pp r12.xyz, r10.z, c6.w, r11
    texld_pp r11, v2, s6
    mov r5.yz, c6
    add_pp r13.xyz, r5.z, -c13
    mul_pp r13.xyz, r11, r13
    mad_pp r13.xyz, r13, c4.w, c4
    dp3_pp r1.x, r1, r8
    dp3_pp r1.y, r2, r8
    dp3_pp r1.z, r0, r8
    add r0.xyz, r3, -c10
    mad_pp r8.xyz, c8.w, r0, r1
    mad_pp r8.w, c9.z, r2.w, c9.w
    texldl_pp r8, r8, s3
    mov_sat_pp r5.w, r5.w
    max_pp r0.xyz, r2.w, r12
    mad_pp r1.x, r5.w, c19.z, c19.w
    mul_pp r1.x, r5.w, r1.x
    exp_pp r1.x, r1.x
    lrp_pp r2.xyz, r1.x, r0, r12
    mul_pp r0.xyz, r8, r2
    mul_pp r0.xyz, r0, c8
    mul_pp r1.x, r10.y, c15.y
    mul_pp r1.xyz, r11, r1.x
    mad_pp r0.xyz, r0.w, r0, r1
    add_pp r0.xyz, r0, c13
    mul r1.xyz, r13, c17
    mad_pp r0.xyz, r1, c18.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r2, c20, s2
      add r1.x, -r2.y, v5.w
      mad r4.z, r2.x, r1.x, r4.x
      mov r4.w, v5.w
      mov r1.xyz, r4.zyww
    else
      mov r1.xyz, c20.y
    endif
    mov r4.z, v5.w
    cmp r1.xyz, -r0.w, r4, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r2, r1, s9
    mul_pp r1.xyz, r3.w, r6
    texld_pp r3, c20.zwzw, s0
    dp3_sat_pp r4.x, r1, r7
    mov_pp r4.y, c20.w
    texld_pp r6, r4, s1
    mov_sat_pp r0.w, r7.z
    lrp_pp r8.xy, c21, r0.w, r6.x
    add_pp r0.w, r8.x, c21.z
    add r2.y, -r8.y, r0.w
    cmp_pp r8.z, r2.y, r8.y, r0.w
    lrp_pp r2.yzw, r10.z, r8.xxzz, r6.x
    mul_pp r2.yzw, r2, c7.w
    mov_sat_pp r0.w, c7.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r5.x, r0.w
    dp3_sat_pp r1.x, r1, r9
    mad_pp r1.y, r0.w, c22.x, c22.y
    mul_pp r1.y, r1.y, c21.w
    mad r0.w, r0.w, r1.x, -r0.w
    exp_pp r0.w, r0.w
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r4.x, r0.w
    mul_pp r0.w, r1.w, r0.w
    add r1.x, r5.y, c14.x
    mad_pp r1.x, r10.z, r1.x, c6.z
    mul_pp r0.w, r0.w, r1.x
    dp3_sat_pp r1.x, r7, r9
    mad_pp r1.y, r1.x, c19.z, c19.w
    mul_pp r1.x, r1.x, r1.y
    exp_pp r1.x, r1.x
    lrp_pp r3.yzw, r1.x, c6.z, r12.xxyz
    mul_pp r1.xyz, r0.w, r3.yzww
    mad_pp r1.xyz, r13, r2.yzww, r1
    mul_pp r1.xyz, r3.x, r1
    mul_pp r1.xyz, r1, c16
    mad_pp r0.xyz, r0, r2.x, r1
    mad_pp oC0.xyz, r13, c18, r0
    rcp r0.x, v5.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 128 instruction slots used (11 texture, 117 arithmetic)
