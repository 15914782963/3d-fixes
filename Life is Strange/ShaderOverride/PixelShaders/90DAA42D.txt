//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float3 DistanceFieldParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D PixelTexture2D_6;
//   sampler2D PixelTexture2D_7;
//   sampler2D PixelTexture2D_8;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowTexture;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_4;
//   float4 UniformPixelScalars_8;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//   float4 UniformPixelVector_7;
//   float4 UniformPixelVector_8;
//   float4 UniformPixelVector_9;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   CameraWorldPos               c8       1
//   DNEResolution                c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelVector_1         c11      1
//   UniformPixelVector_2         c12      1
//   UniformPixelVector_3         c13      1
//   UniformPixelVector_4         c14      1
//   UniformPixelVector_5         c15      1
//   UniformPixelVector_6         c16      1
//   UniformPixelVector_7         c17      1
//   UniformPixelVector_8         c18      1
//   UniformPixelVector_9         c19      1
//   UniformPixelScalars_0        c20      1
//   UniformPixelScalars_3        c21      1
//   UniformPixelScalars_4        c22      1
//   UniformPixelScalars_8        c23      1
//   LightColorAndFalloffExponent c24      1
//   DistanceFieldParameters      c25      1
//   SpotDirection                c26      1
//   SpotAngles                   c27      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//   PixelTexture2D_4             s7       1
//   PixelTexture2D_5             s8       1
//   PixelTexture2D_6             s9       1
//   PixelTexture2D_7             s10      1
//   PixelTexture2D_8             s11      1
//   ShadowTexture                s12      1
//

    ps_3_0
    def c2, -0.5, 0.315322369, 0.948984623, 0
    def c6, 30, 2, 0, 1
    def c28, 6.24999984e-006, 0.000781250012, 6.2500003e-005, 0.25
    def c29, 0.581683099, -0.813415468, 0, 0.813415468
    def c30, 0.300000012, 0.200000003, 10, 1.52876604
    def c31, 0.300000012, 0.5, 3.12500015e-005, -0.5
    def c32, -3.25, 2, 2.5, 7.5
    def c33, 0.100000001, 0.5, 6.28318548, -3.14159274
    def c34, 0.000976999989, 0.00195299997, -0.949999988, 5
    def c35, -12, -20, 0.25, 0.5
    def c36, 0.0625, 0, 0.75, 7
    def c37, -0.948984623, 0.315322369, 0, 5.8707843e-005
    def c38, 0.200000003, 0.170000002, 0.109999999, 4
    def c39, 0.87758255, -0.47942555, 0, 0.47942555
    def c40, 0.129870132, 0.5, 0.849999964, 0.400000006
    def c41, 0.142857149, 0.00571428565, 0.0399999991, 0.449999988
    def c42, 1.39999998, 1.29999995, 0.100000001, 0.200000003
    def c43, 1.78650999, 7.15698195, -9.99999997e-007, 0.125
    def c44, 0.693147004, 2, -5.55472994, -6.98316002
    def c45, 1, 9.37500008e-005, 2.73285004e-005, 0.800000012
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.y
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord7 v5.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9
    dcl_2d s10
    dcl_2d s11
    dcl_2d s12

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_90DAA42D_242.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    add r0, c8.xyxy, v5.xyxy
    nrm_pp r1.xyz, v4
    mad_sat_pp r1.w, c7.x, v5.w, c7.y
    mul_pp r1.w, r1.w, c0.x
    add_pp r2.xy, r0.zwzw, c2.x
    dp2add_pp r3.x, c2.yzzw, r2, c2.w
    dp2add_pp r3.y, c37, r2, c37.z
    add_pp r3, r3.xxyx, -c2.x
    mov r2.w, c37.w
    mad_pp r2.zw, r3.xywz, r2.w, c11.xyxy
    texld_pp r4, r2.zwzw, s3
    dp2add_pp r4.w, r4, -r4, c45.x
    max_pp r5.x, r4.w, c2.w
    rsq_pp r4.w, r5.x
    rcp_pp r4.z, r4.w
    mul_pp r5.xy, r3.wzzw, c45.y
    mov r6.xyz, c45
    mad_pp r5.zw, r3.xywz, r6.z, c12.xyxy
    texld_pp r7, r5.zwzw, s3
    dp2add_pp r4.w, r7, -r7, c45.x
    max_pp r6.z, r4.w, c2.w
    rsq_pp r4.w, r6.z
    rcp_pp r7.z, r4.w
    mad_pp r4.xyz, r7, -c45.w, r4
    nrm_pp r7.xyz, r4
    mad_pp r4.xy, r3.wzzw, r6.y, c13
    texld_pp r4, r4, s4
    mov_pp r8.x, r5.x
    mov r8.yw, c21.xxzz
    texld_pp r9, r8, s5
    add_pp r4.y, r9.y, c2.x
    mul_pp r4.x, r4.x, r4.y
    mad_pp r4.y, v1.y, c32.x, c32.y
    texld_pp r9, r5, s5
    add_pp r4.z, r9.y, c2.x
    mul_pp r4.w, r4.z, c32.z
    mad_pp r4.y, r4.z, -c2.x, r4.y
    mad_pp r4.x, r4.x, -c2.x, r4.y
    mul_pp r9, r3.wxyz, c28.zxyy
    mov_pp r8.z, r9.y
    texld_pp r8, r8.zwzw, s5
    mov r6.yw, c32
    mad_pp r3.x, r8.y, r6.w, c20.x
    mad_pp r3.x, r3.x, c33.x, c33.y
    frc_pp r3.x, r3.x
    mad_pp r3.x, r3.x, c33.z, c33.w
    sincos_pp r8.y, r3.x
    add_pp r3.x, r4.x, r8.y
    max_pp r3.y, r8.y, c2.w
    texld_pp r8, r9.zwzw, s4
    add_pp r3.y, r3.y, r8.x
    mad_pp r3.y, r3.y, c6.x, c6.y
    mul_sat_pp r3.y, r3.y, r3.x
    frc_pp r4.y, -r3.y
    add_sat_pp r4.y, r3.y, r4.y
    cmp_pp r7.xyz, -r4.y, c6.zzww, r7
    nrm_pp r8.xyz, r7
    dp3_pp r4.z, v2, v2
    rsq_pp r4.z, r4.z
    mul_pp r7.xyz, r4.z, v2
    mad_pp r10.xyz, v2, r4.z, r1
    nrm_pp r11.xyz, r10
    mul_pp r0, r0, c34.xxyy
    texld_pp r10, r0, s10
    mul_pp r0.x, r10.x, c28.w
    add_pp r0.y, c34.z, v1.y
    mad_sat_pp r4.zw, r0.y, c35.xyxy, r4.w
    mad r0.y, r10.x, -c35.z, c35.w
    mad_pp r0.x, r4.z, r0.y, r0.x
    mad_pp r0.y, r10.x, r6.y, c23.y
    frc_pp r0.y, r0.y
    mad_pp r0.y, r0.y, c31.x, c31.y
    mov r9.y, c21.w
    texld_pp r9, r9, s5
    mov r6.w, c34.w
    mad_pp r1.z, r9.y, r6.w, c22.x
    mad_pp r1.z, r1.z, c33.x, c33.y
    frc_pp r1.z, r1.z
    mad_pp r1.z, r1.z, c33.z, c33.w
    sincos_pp r9.y, r1.z
    add_pp r1.z, r4.x, r9.y
    mov_sat_pp r1.z, -r1.z
    add_pp r1.z, -r1.z, c45.x
    mul_pp r4.xw, r4.zyzw, r1.z
    lrp_pp r1.z, r4.x, r0.y, r0.x
    mad_pp r0.xy, r3.wzzw, c31.z, c31.w
    dp2add_pp r5.x, c29, r0, c29.z
    dp2add_pp r5.y, c29.wxzw, r0, c29.z
    add_pp r0.xy, r5, c19
    add_pp r0.xy, r0, -c2.x
    texld_pp r9, r0, s11
    mad_pp r0.x, r9.x, c30.x, c30.y
    cmp_pp r0.x, -r4.y, r1.z, r0.x
    mad_pp r0.x, r0.x, c30.z, c30.w
    exp_pp r0.x, r0.x
    texld_pp r9, v0, s12
    add r0.y, r9.x, c25.x
    mul_sat_pp r0.y, r0.y, c25.y
    pow_sat_pp r9.x, r0.y, c25.z
    dp3 r0.y, v3, v3
    rsq r1.z, r0.y
    mul r6.yzw, r1.z, v3.xxyz
    dp3 r1.z, r6.yzww, -c26
    add r1.z, r1.z, -c27.x
    mul_sat r1.z, r1.z, c27.y
    mul_pp r9.z, r1.z, r1.z
    mov r9.yw, -c2.x
    texld_pp r10, r9, s0
    texld_pp r9, r9.zwzw, s0
    add r1.z, -r0.y, c45.x
    mul r1.z, r10.x, r1.z
    mul r12, r9.x, r1.z
    mov r13, r12
    texkill r13
    if b0
      mad r3.zw, vPos.xyxy, c9.xyxy, c9
      mul r12.xy, r3.zwzw, v5.w
      if_ne c3.x, -c3.x
        texld r13, c36, s1
        add r1.z, -r13.y, v5.w
        mad r12.z, r13.x, r1.z, r12.x
        mov r12.xy, r12.zyzw
        mov r1.z, v5.w
      else
        mov r1.z, v5.w
      endif
      rcp r1.z, r1.z
      mul r3.zw, r1.z, r12.xyxy
      mad r3.zw, r3, c1.xyxy, c1.xywz
      texld r13, r3.zwzw, s2
      mul_pp r6.yzw, r13.xxyz, r13.xxyz
      mul_pp r6.yzw, r6, r10.x
    else
      mov_pp r6.yzw, r10.x
    endif
    mul_pp r1.z, r4.z, c36.z
    mad_pp r1.z, r4.w, c28.w, r1.z
    mul_pp r1.z, r1.z, c36.w
    frc_pp r3.z, r1.z
    add_pp r1.z, r1.z, -r3.z
    mul_pp r3.zw, r1.z, c41.xyxy
    cmp_pp r1.z, -r4.y, r3.w, c41.z
    mad_pp r4.xzw, r1.z, c5.w, c5.xyyz
    mov_sat r0.y, r0.y
    add r0.y, -r0.y, c45.x
    pow_sat_pp r5.x, r0.y, c24.w
    mov r5.y, -c2.x
    texld_pp r10, r5, s0
    texld_pp r13, r0.zwzw, s6
    lrp_pp r0.yzw, r3.z, c38.xxyz, r13.xxyz
    dp2add_pp r5.x, c39, r2, c39.z
    dp2add_pp r5.y, c39.wxzw, r2, c39.z
    add_pp r2.xy, r5, -c2.x
    mul_pp r2.xy, r2, c31.z
    texld_pp r13, r2.zwzw, s5
    texld_pp r5, r5.zwzw, s5
    add_pp r1.z, -r5.x, r13.x
    mul_pp r1.z, r1.z, c33.x
    mad_pp r1.xy, r1.z, r1, r2
    mov r2.w, c41.w
    mad_pp r2.xy, r1, r2.w, c14
    texld_pp r5, r2, s7
    mad_pp r2.xy, r1, r2.w, c15
    texld_pp r2, r2, s7
    texld_pp r13, r1, s7
    mov r3.w, c38.w
    mad_pp r1.z, r13.w, r3.w, c20.x
    mad_pp r1.z, r1.z, c40.x, c40.y
    frc_pp r1.z, r1.z
    mad_pp r1.z, r1.z, c33.z, c33.w
    sincos_pp r13.y, r1.z
    add_pp r1.z, r13.y, c45.x
    mul_pp r1.z, r1.z, -c2.x
    lrp_pp r3.z, r1.z, r2.w, r5.w
    mad_pp r2.x, r3.z, c40.z, c40.w
    add_pp r2.yz, r1.xxyw, c16.xxyw
    texld_pp r13, r2.yzzw, s8
    mov r5.xy, c43
    mad_pp r2.yz, r1.xxyw, r5.x, c17.xxyw
    texld_pp r14, r2.yzzw, s8
    add_pp r2.y, r13.y, r14.y
    mad_pp r1.xy, r1, r5.y, c18
    texld_pp r13, r1, s8
    add_pp r1.x, r2.y, r13.y
    mul_pp r1.x, r1.x, r2.x
    mov_sat_pp r3.x, r3.x
    mad_pp r1.x, r1.x, c32.z, -r3.x
    add_sat_pp r1.x, r1.x, c45.x
    add r1.y, r1.x, c43.z
    mul_pp r1.x, r1.x, r1.x
    cmp_pp r1.x, r1.y, r1.x, c2.w
    texld_pp r13, r1.x, s9
    lrp_pp r3.x, r1.z, r5.w, r2.w
    add_pp r1.x, -r3.x, c45.x
    mad_pp r1.xyz, r1.x, c42.xyxw, c42.zwzw
    mul_pp r1.xyz, r1, r13
    frc_pp r2.x, r3.y
    add_pp r2.x, -r2.x, r3.y
    add_sat_pp r2.x, -r2.x, c45.x
    mul_pp r2.x, r4.y, r2.x
    cmp_pp r1.xyz, -r2.x, r1, c45.x
    cmp_pp r0.yzw, -r4.y, r0, r1.xxyz
    add_pp r1.xyz, r6.x, -c10
    mul_pp r0.yzw, r0, r1.xxyz
    mad_pp r0.yzw, r0, c4.w, c4.xxyz
    mul_pp r1.x, r9.x, r10.x
    dp3_sat_pp r1.y, r8, r7
    mul_pp r1.z, r1.y, c0.w
    mul_sat_pp r1.x, r1.x, c0.y
    mul_pp r1.x, r1.x, r1.x
    mul_pp r0.x, r0.x, r1.x
    dp3_sat_pp r1.x, r8, r11
    mad_pp r2.x, r0.x, c44.x, c44.y
    mul_pp r2.x, r2.x, c43.w
    mad r0.x, r0.x, r1.x, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r2.x
    mul_pp r0.x, r1.y, r0.x
    mul_pp r0.x, r1.w, r0.x
    dp3_sat_pp r1.x, r7, r11
    mad_pp r1.y, r1.x, c44.z, c44.w
    mul_pp r1.x, r1.x, r1.y
    exp_pp r1.x, r1.x
    lrp_pp r2.xyz, r1.x, c45.x, r4.xzww
    mul_pp r1.xyw, r0.x, r2.xyzz
    mad_pp r0.xyz, r0.yzww, r1.z, r1.xyww
    mul_pp r0.xyz, r6.yzww, r0
    mul r0.xyz, r0, c24
    mul r0.xyz, r10.x, r0
    mul r0.xyz, r9.x, r0
    cmp oC0.xyz, -r12.w, c2.w, r0
    mov oC0.w, c2.w

// approximately 277 instruction slots used (26 texture, 251 arithmetic)
