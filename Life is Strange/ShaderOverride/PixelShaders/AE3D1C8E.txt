//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float3 DistanceFieldParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowTexture;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 WindDirectionAndSpeed;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   CameraWorldPos               c7       1
//   DNEResolution                c8       1
//   WindDirectionAndSpeed        c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelVector_1         c11      1
//   UniformPixelVector_2         c12      1
//   UniformPixelVector_3         c13      1
//   UniformPixelVector_4         c14      1
//   UniformPixelVector_5         c15      1
//   UniformPixelScalars_0        c16      1
//   UniformPixelScalars_1        c17      1
//   LightColorAndFalloffExponent c18      1
//   DistanceFieldParameters      c19      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   ShadowTexture                s5       1
//

    ps_3_0
    def c2, 0, 2, 0.5, 1
    def c6, 0.0625, 0, 15, 0
    def c20, 1, 0.100000001, -0.649999976, -9.99999997e-007
    def c21, 0.100000001, 1.89999998, 1.75, 0.875
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xy
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord7 v5
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_AE3D1C8E_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    add r0.xyz, c7, v5
    nrm_pp r1.xyz, v4
    nrm_pp r2.xyz, v2
    mad_pp r1.xyz, r1.z, c2.xxyw, -r1
    texld_pp r3, v0, s5
    add r0.w, r3.x, c19.x
    mul_sat_pp r0.w, r0.w, c19.y
    pow_sat_pp r3.x, r0.w, c19.z
    mov r3.yw, c2.z
    texld_pp r4, r3, s0
    dp3 r0.w, v3, v3
    add r1.w, -r0.w, c2.w
    mul r5, r4.x, r1.w
    mov r6, r5
    texkill r6
    mad r0.xy, r0.z, c12, r0
    rcp r0.z, c16.x
    mul r3.xy, r0.z, r0
    mov r6.xyw, c9
    mul r4.yz, r6.xxyw, c16.w
    mul r4.yz, r4, c21.x
    frc r4.yz, r4
    mad r0.xy, r0, r0.z, r4.yzzw
    texld_pp r7, r0, s3
    mad r0.xy, r3, c21.y, r4.yzzw
    texld_pp r8, r0, s3
    add_sat r0.xy, r7, r8
    mul r0.xy, r0, c17.x
    mad_sat r0.xy, r6.w, r0, c17.y
    mul r3.xy, c13, v1
    mov r5.xy, c13
    mad r4.yz, v1.xxyw, r5.xxyw, c14.xxyw
    texld_pp r6, r4.yzzw, s3
    mov r4.zw, c21
    mad r3.xy, r3, r4.zwzw, c15
    texld_pp r7, r3, s3
    add r3.xy, r6, r7
    mul r0.xy, r0, r3
    mad r0.xy, r0, c20, v1
    texld r6, r0, s4
    add r0.x, r6.w, c20.z
    cmp r7, -r5.w, c2.x, r0.x
    texkill r7
    if b0
      mad r0.xy, vPos, c8, c8.zwzw
      mul r0.xy, r0, v5.w
      if_ne c3.x, -c3.x
        texld r7, c6, s1
        add r1.w, -r7.y, v5.w
        mad r0.z, r7.x, r1.w, r0.x
        mov r0.xy, r0.zyzw
        mov r0.z, v5.w
      else
        mov r0.z, v5.w
      endif
      rcp r0.z, r0.z
      mul r0.xy, r0.z, r0
      mad r0.xy, r0, c1, c1.wzzw
      texld r7, r0, s2
      mul_pp r0.xyz, r7, r7
      mul_pp r0.xyz, r0, r4.x
    else
      mov_pp r0.xyz, r4.x
    endif
    mov_sat r0.w, r0.w
    add r0.w, -r0.w, c2.w
    pow_sat_pp r3.z, r0.w, c18.w
    texld_pp r3, r3.zwzw, s0
    mul r3.yzw, r6.xxyz, c11.xxyz
    mov r0.w, c2.w
    add r4.xyz, r0.w, -c10
    mul_pp r3.yzw, r3, r4.xxyz
    mad_pp r3.yzw, r3, c4.w, c4.xxyz
    mov_sat_pp r0.w, r2.z
    add r1.w, r0.w, c20.w
    mul r0.w, r0.w, c0.w
    dp3_sat_pp r1.x, r1, r2
    add r1.y, r1.x, c20.w
    pow_pp r2.x, r1.x, c6.z
    mul r1.x, r2.x, c0.x
    mul r2.xyz, r0.w, r3.yzww
    cmp r2.xyz, r1.w, r2, c2.x
    mul_pp r1.xzw, r1.x, c5.xyyz
    cmp_pp r1.xyz, r1.y, r1.xzww, c2.x
    add_pp r1.xyz, r1, r2
    mul_pp r0.xyz, r0, r1
    mul r0.xyz, r3.x, r0
    mul r0.xyz, r0, c18
    cmp oC0.xyz, -r5.w, c2.x, r0
    mov oC0.w, c2.x

// approximately 104 instruction slots used (10 texture, 94 arithmetic)
