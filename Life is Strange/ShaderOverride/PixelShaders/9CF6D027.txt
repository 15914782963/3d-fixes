//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   float4 WorldIncidentLighting[7];
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNEResolution                c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   UniformPixelVector_0         c7       1
//   LightColorAndFalloffExponent c8       1
//   WorldIncidentLighting        c9       1
//   UpperSkyColor                c10      1
//   AmbientColorAndSkyFactor     c11      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   PixelTexture2D_0             s2       1
//   PixelTexture2D_1             s3       1
//   VAOBuffer                    s4       1
//

    ps_3_0
    def c5, 0.125, -0.333299994, 1, 0.886226952
    def c6, 0, 0.0625, 1, 0.5
    dcl_texcoord7_pp v0
    dcl_texcoord5 v1.w
    dcl_texcoord v2.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_9CF6D027_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v1.w
    texld r1, v2, s2
    mul r1.xyz, r1, v0
    rcp r2.x, v1.w
    mul r2.yz, r0.xxyw, r2.x
    mad r2.yz, r2, c1.xxyw, c1.xwzw
    dsx r2.w, r2.y
    dsy r3.x, r2.z
    rcp r4.x, r2.w
    rcp r4.y, r3.x
    mul r2.yz, r2, r4.xxyw
    mul r2.yz, r2, c5.x
    texld r3, r2.yzzw, s3
    mad r1.w, r1.w, v0.w, -r3.y
    frc r2.y, -r1.w
    add_sat r1.w, r1.w, r2.y
    add r3, r1.w, c5.y
    texkill r3
    mov r2.zw, c5
    add r3.xyz, r2.z, -c7
    mul_pp r1.xyz, r1, r3
    mad_pp r1.xyz, r1, c4.w, c4
    mul r3.xyz, r1, c10
    mov_pp r1.w, c11.w
    mad_pp r3.xyz, r3, r1.w, c7
    mul_pp r2.yzw, r2.w, c9.xxyz
    mul_pp r2.yzw, r1.xxyz, r2
    mov r4.x, c6.x
    cmp_pp r2.yzw, c9.xxyz, r2, r4.x
    add_pp r2.yzw, r2, r3.xxyz
    abs r1.w, c3.x
    if_ne c3.x, -c3.x
      texld r3, c6.yxzw, s1
      add r3.y, -r3.y, v1.w
      mad r0.z, r3.x, r3.y, r0.x
      mov r0.w, v1.w
      mov r3.xyz, r0.zyww
    else
      mov r3.xyz, c6.x
    endif
    mov r0.z, v1.w
    cmp r0.xyz, -r1.w, r0, r3
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s4
    texld_pp r3, c6.zwzw, s0
    mul r0.yzw, r1.xxyz, r3.x
    mul_pp r0.yzw, r0, c8.xxyz
    mad_pp r0.xyz, r2.yzww, r0.x, r0.yzww
    mad_pp oC0.xyz, r1, c11, r0
    mad oC0.w, c2.x, r2.x, c2.y

// approximately 57 instruction slots used (5 texture, 52 arithmetic)
