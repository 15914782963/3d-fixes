//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   float TwoSidedSign;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNESpecularAttenuation       c7       1
//   DNEResolution                c8       1
//   UniformPixelVector_0         c9       1
//   UniformPixelVector_1         c10      1
//   LightColorAndFalloffExponent c11      1
//   SpotDirection                c12      1
//   SpotAngles                   c13      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//

    ps_3_0
    def c2, -1, 1, 0, 2
    def c6, 8, 0.125, 0, 1
    def c14, -0.333299994, 1, 0.5, -9.99999997e-007
    def c15, 0.0625, 0, 15, 0
    dcl_texcoord v0.xy
    dcl_texcoord3_pp v1.xyz
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord7 v5.w
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_8C995ED8_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v4
    nrm_pp r1.xyz, v2
    cmp r0.w, vFace, c2.x, c2.y
    mul_pp r0.w, r0.w, c0.x
    mul_pp r2.xy, r0.z, r0.w
    mul_pp r2.z, r0.w, r2.y
    mad_pp r0.xyz, r2, c2.zzww, -r0
    add_pp r1.w, v1.y, v1.x
    add r1.w, r1.w, v1.z
    frc r1.w, r1.w
    mul r1.w, r1.w, c6.x
    frc r2.x, r1.w
    add r1.w, r1.w, -r2.x
    mul r2.xy, r1.w, c6.yzzw
    mad r2.xy, v0, c6.ywzw, r2
    texld r2, r2, s3
    add r2, r2.y, c14.x
    texkill r2
    dp3 r1.w, v3, v3
    rsq r2.x, r1.w
    mul r2.xyz, r2.x, v3
    dp3 r2.x, r2, -c12
    add r2.x, r2.x, -c13.x
    mul_sat r2.x, r2.x, c13.y
    mul_pp r2.x, r2.x, r2.x
    texld_pp r3, c14.yzzw, s0
    mov r2.yw, c14.z
    texld_pp r4, r2, s0
    add r2.x, -r1.w, c2.y
    mul r2.x, r3.x, r2.x
    mul r5, r4.x, r2.x
    mov r6, r5
    texkill r6
    if b0
      mad r2.xy, vPos, c8, c8.zwzw
      mul r5.xy, r2, v5.w
      if_ne c3.x, -c3.x
        texld r6, c15, s1
        add r2.x, -r6.y, v5.w
        mad r5.z, r6.x, r2.x, r5.x
        mov r5.xy, r5.zyzw
        mov r2.x, v5.w
      else
        mov r2.x, v5.w
      endif
      rcp r2.x, r2.x
      mul r2.xy, r2.x, r5
      mad r2.xy, r2, c1, c1.wzzw
      texld r6, r2, s2
      mul_pp r3.yzw, r6.xxyz, r6.xxyz
      mul_pp r3.yzw, r3, r3.x
    else
      mov_pp r3.yzw, r3.x
    endif
    mov_sat r1.w, r1.w
    add r1.w, -r1.w, c2.y
    pow_sat_pp r2.z, r1.w, c11.w
    texld_pp r2, r2.zwzw, s0
    mov r2.y, c2.y
    add r2.yzw, r2.y, -c9.xxyz
    mul_pp r2.yzw, r2, c10.xxyz
    mad_pp r2.yzw, r2, c4.w, c4.xxyz
    mul_sat_pp r0.w, r1.z, r0.w
    add r1.w, r0.w, c14.w
    mul r0.w, r0.w, c7.w
    dp3_sat_pp r0.x, r0, r1
    add r0.y, r0.x, c14.w
    pow_pp r1.x, r0.x, c15.z
    mul r0.x, r1.x, c7.x
    mul r1.xyz, r0.w, r2.yzww
    cmp r1.xyz, r1.w, r1, c2.z
    mul_pp r0.xzw, r0.x, c5.xyyz
    cmp_pp r0.xyz, r0.y, r0.xzww, c2.z
    add_pp r0.xyz, r0, r1
    mul_pp r0.xyz, r3.yzww, r0
    mul r0.xyz, r0, c11
    mul r0.xyz, r2.x, r0
    mul r0.xyz, r4.x, r0
    cmp oC0.xyz, -r5.w, c2.z, r0
    mov oC0.w, c2.z

// approximately 92 instruction slots used (6 texture, 86 arithmetic)
