//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 LightMapScale;
//   sampler2D LightMapTextures;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenDoorFadeSettings;
//   float4 ScreenDoorFadeSettings2;
//   sampler2D ScreenDoorNoiseTexture;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   bool bEnableScreenDoorFade;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   bEnableScreenDoorFade     b0       1
//   DNEEnvMapParameter        c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DNEMiscParameter          c7       1
//   DNECubemapPosition        c8       1
//   CameraWorldPos            c9       1
//   DNEResolution             c10      1
//   ScreenDoorFadeSettings    c11      1
//   ScreenDoorFadeSettings2   c12      1
//   UniformPixelVector_0      c13      1
//   UpperSkyColor             c14      1
//   AmbientColorAndSkyFactor  c15      1
//   LightMapScale             c16      1
//   NvStereoFixTexture        s0       1
//   DNEEnvironmentTexture     s1       1
//   ScreenDoorNoiseTexture    s2       1
//   PixelTexture2D_0          s3       1
//   PixelTexture2D_1          s4       1
//   PixelTexture2D_2          s5       1
//   LightMapTextures          s6       1
//   VAOBuffer                 s7       1
//

    ps_3_0
    def c6, 0, 2, 1, 0.0625
    def c17, -5.55472994, -6.98316002, 0, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord1 v3.xy
    dcl_texcoord6 v4.xyz
    dcl_texcoord5 v5
    dcl vPos.xy
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_44A4A8B6_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v1.w
    add r3.xyz, c9, v5
    mad r4.xy, vPos, c10, c10.zwzw
    mul r4.xy, r4, v5.w
    nrm_pp r5.xyz, v4
    mad_sat_pp r0.w, c7.x, v5.w, c7.y
    mad_pp r5.xyw, r5.z, c6.xxzy, -r5.xyzz
    texld_pp r6, v3, s4
    mad_pp r6.xyz, r6, c5.w, c5
    texld_pp r7, v3, s5
    if b0
      mad r7.xy, vPos, c12.zwzw, c12
      texld_pp r8, r7, s2
      mad r1.w, c11.y, r8.x, c11.z
      mov r7.z, c6.z
      add r2.w, r7.z, -c11.x
      add r8, r1.w, -r2.w
      texkill r8
    endif
    texld_pp r8, v3, s3
    mov r7.z, c6.z
    add_pp r7.xyz, r7.z, -c13
    mul_pp r7.xyz, r7, r8
    mad_pp r7.xyz, r7, c4.w, c4
    dp3_pp r1.x, r1, r5.xyww
    dp3_pp r1.y, r2, r5.xyww
    dp3_pp r1.z, r0, r5.xyww
    add r0.xyz, r3, -c8
    mad_pp r1.xyz, c0.w, r0, r1
    mad_pp r1.w, c7.z, r7.w, c7.w
    texldl_pp r1, r1, s1
    mov_sat_pp r0.x, r5.z
    max_pp r2.xyz, r7.w, r6
    mad_pp r0.y, r0.x, c17.x, c17.y
    mul_pp r0.x, r0.x, r0.y
    exp_pp r0.x, r0.x
    lrp_pp r3.xyz, r0.x, r2, r6
    mul_pp r0.xyz, r1, r3
    mul_pp r0.xyz, r0, c0
    mad_pp r0.xyz, r0.w, r0, c13
    texld r1, v2, s6
    mul_pp r1.xyz, r1, c16
    mad_pp r0.xyz, r1, r7, r0
    mul r1.xyz, r7, c14
    mad_pp r0.xyz, r1, c15.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r1, c6.wxzw, s0
      add r1.y, -r1.y, v5.w
      mad r4.z, r1.x, r1.y, r4.x
      mov r4.w, v5.w
      mov r1.xyz, r4.zyww
    else
      mov r1.xyz, c6.x
    endif
    mov r4.z, v5.w
    cmp r1.xyz, -r0.w, r4, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s7
    mul_pp oC0.xyz, r0, r1.x
    rcp r0.x, v5.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 79 instruction slots used (9 texture, 70 arithmetic)
