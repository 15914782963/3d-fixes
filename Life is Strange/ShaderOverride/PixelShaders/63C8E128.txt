//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ScreenDoorFadeSettings;
//   float4 ScreenDoorFadeSettings2;
//   sampler2D ScreenDoorNoiseTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   float4 WorldIncidentLighting[7];
//   bool bEnableScreenDoorFade;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bEnableScreenDoorFade        b0       1
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   WorldIncidentLighting        c7       7
//   DNESpecularAttenuation       c14      1
//   DNEResolution                c15      1
//   ScreenDoorFadeSettings       c16      1
//   ScreenDoorFadeSettings2      c17      1
//   UniformPixelVector_0         c18      1
//   UniformPixelVector_1         c19      1
//   UniformPixelScalars_0        c20      1
//   LightColorAndFalloffExponent c21      1
//   UpperSkyColor                c22      1
//   AmbientColorAndSkyFactor     c23      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   ScreenDoorNoiseTexture       s2       1
//   VAOBuffer                    s3       1
//

    ps_3_0
    def c6, -1, 1, 0, 2
    def c24, 0.886227608, 0.886226952, 0.0625, 0
    def c25, 1, 0.5, -9.99999997e-007, 15
    def c26, 3, -1, -1.02332771, 1.02332771
    def c27, 0.858085215, -0.858085215, 0.247708291, 0.429042608
    dcl_texcoord4 v0.xyz
    dcl_texcoord6 v1.xyz
    dcl_texcoord5 v2.w
    dcl_color v3.xyz
    dcl_color1 v4
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_63C8E128_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v4
    dp3_pp r0.w, v3, v3
    rsq_pp r0.w, r0.w
    mul_pp r1.xyz, r0.w, v3.yxzw
    mul r2.yz, r0, r1
    mad_pp r0.x, r0.x, r1.x, -r2.y
    mul_pp r1.x, r0.x, v4.w
    mad r0.xy, vPos, c15, c15.zwzw
    mul r3.xy, r0, v2.w
    nrm_pp r4.xyz, v1
    nrm_pp r5.xyz, v0
    cmp r0.x, vFace, c6.x, c6.y
    mul_pp r0.x, r0.x, c0.x
    mad_pp r4.xyz, r4.z, c6.zzww, -r4
    if b0
      mad r0.yw, vPos.xxzy, c17.xzzw, c17.xxzy
      texld_pp r6, r0.ywzw, s2
      mad r0.y, c16.y, r6.x, c16.z
      mov r6.y, c6.y
      add r0.w, r6.y, -c16.x
      add r6, -r0.w, r0.y
      texkill r6
    endif
    mov r6.yz, c6
    add r7.xyz, r6.y, -c18
    mul_pp r7.xyz, r7, c19
    mad_pp r7.xyz, r7, c4.w, c4
    mul r8.xyz, r7, c22
    mov_pp r0.w, c23.w
    mad_pp r8.xyz, r8, r0.w, c18
    mov_pp r1.y, r0.z
    mul r9.xyz, r1, r1.xyxw
    mul r2.x, r0.z, r1.x
    mad r2.y, r9.y, c26.x, c26.y
    mad_pp r2.w, r1.z, r1.z, -r9.x
    mul r1.xyz, r1, c26.zwzw
    mul r1.w, r9.z, c27.x
    mul r2, r2, c27.yzyw
    add_pp r0.y, r6.y, -c20.x
    mul_pp r0.yzw, r0.y, r7.xxyz
    mul_pp r6.xyw, r7.xyzz, c20.x
    dp4 r4.w, c8, r1
    mov r9.xyz, c7
    mad_pp r4.w, r9.x, c24.x, r4.w
    dp4 r5.w, c9, r2
    add_pp r10.x, r4.w, r5.w
    dp4 r4.w, c10, r1
    mad_pp r4.w, r9.y, c24.x, r4.w
    dp4 r5.w, c11, r2
    add_pp r10.y, r4.w, r5.w
    dp4 r1.x, c12, r1
    mad_pp r1.x, r9.z, c24.x, r1.x
    dp4 r1.y, c13, r2
    add_pp r10.z, r1.y, r1.x
    mul_pp r0.yzw, r0, r10.xxyz
    cmp_pp r0.yzw, r10.xxyz, r0, c6.z
    mul_pp r1.xyz, r9, c24.y
    mul_pp r1.xyz, r1, r6.xyww
    cmp_pp r1.xyz, c7, r1, r6.z
    add_pp r0.yzw, r0, r1.xxyz
    add_pp r0.yzw, r0, r8.xxyz
    abs r1.x, c3.x
    if_ne c3.x, -c3.x
      texld r2, c24.zwzw, s1
      add r1.y, -r2.y, v2.w
      mad r3.z, r2.x, r1.y, r3.x
      mov r3.w, v2.w
      mov r1.yzw, r3.xzyw
    else
      mov r1.yzw, c6.z
    endif
    mov r3.z, v2.w
    cmp r1.xyz, -r1.x, r3, r1.yzww
    rcp r1.z, r1.z
    mul r1.xy, r1.z, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s3
    texld_pp r2, c25, s0
    mul_sat_pp r0.x, r5.z, r0.x
    add r1.y, r0.x, c25.z
    mul_pp r0.x, r0.x, c14.w
    cmp_pp r0.x, r1.y, r0.x, c6.z
    dp3_sat_pp r1.y, r4, r5
    add r1.z, r1.y, c25.z
    pow_pp r2.y, r1.y, c25.w
    mul r1.y, r2.y, c14.x
    lrp_pp r1.w, c20.x, c20.x, r0.x
    mul_pp r2.yzw, r1.y, c5.xxyz
    cmp_pp r2.yzw, r1.z, r2, c6.z
    mad_pp r1.yzw, r7.xxyz, r1.w, r2
    mul_pp r1.yzw, r2.x, r1
    mul_pp r1.yzw, r1, c21.xxyz
    mad_pp r0.xyz, r0.yzww, r1.x, r1.yzww
    mad_pp oC0.xyz, r7, c23, r0
    rcp r0.x, v2.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 108 instruction slots used (4 texture, 104 arithmetic)
