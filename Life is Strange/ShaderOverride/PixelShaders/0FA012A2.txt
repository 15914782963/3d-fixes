//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DebugMode[5];
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   sampler2D MipTextureParameter;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_6;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   TwoSidedSign              c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DebugMode                 c7       5
//   DNEResolution             c12      1
//   UniformPixelVector_0      c13      1
//   UniformPixelVector_1      c14      1
//   UniformPixelVector_2      c15      1
//   UniformPixelVector_3      c16      1
//   UniformPixelVector_4      c17      1
//   UniformPixelVector_5      c18      1
//   UniformPixelVector_6      c19      1
//   UniformPixelScalars_0     c20      1
//   UniformPixelScalars_1     c21      1
//   UniformPixelScalars_2     c22      1
//   UniformPixelScalars_3     c23      1
//   UniformPixelScalars_6     c24      1
//   SceneColorTexture         s0       1
//   NvStereoFixTexture        s1       1
//   PixelTexture2D_0          s2       1
//   PixelTexture2D_1          s3       1
//   PixelTexture2D_2          s4       1
//   PixelTexture2D_3          s5       1
//   MipTextureParameter       s6       1
//

    ps_3_0
    def c6, -1, 1, 0, 0.5
    def c25, 0.00100000005, 5, 0.0625, 0
    def c26, 0.300000012, 0.589999974, 0.109999999, 9.99999975e-006
    def c27, 100000, 0.0208350997, -0.0851330012, 0.180141002
    def c28, -0.330299497, 0.999866009, -2, 1.57079637
    def c29, -0, -3.14159274, 0.159154937, 0.5
    def c30, 60, 20, 0.0299999993, -9.99999997e-007
    def c31, -0.774999976, 0.600000024, 0.699999988, 0.170000002
    def c32, 0.150000006, 2.79999995, 0.680000007, -0.0850000009
    def c33, 0.25, 0.5, 6.28318548, -3.14159274
    def c34, 0.135626316, 0, 1, 0.800000012
    def c35, 0.0115282368, 0, 0.0850000009, 3
    def c36, 0.185000002, 1, 0.00377358496, 0
    def c37, 0.75, 0.600000024, 0.5, 0
    def c38, -0, 0, 1, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord3_pp v3
    dcl_texcoord6 v4.xyz
    dcl_texcoord7 v5
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_FA012A2_433.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mul r0, r0.x, v1.yxzy
    dp3_pp r1.x, v0, v0
    rsq_pp r1.x, r1.x
    mul r1, r1.x, v0.zyyx
    mul_pp r2.xy, r0.zwzw, r1.zwzw
    mad_pp r0.xw, r0.xyzy, r1.xyzy, -r2.xyzy
    mul r2.xy, r0.xwzw, v1.w
    mad r0.xw, vPos.xyzy, c12.xyzy, c12.zyzw
    mul r3.yz, r0.xxww, v5.w
    dp3_pp r0.x, v4, v4
    rsq_pp r0.x, r0.x
    mul_pp r0.xw, r0.x, v4.xyzy
    cmp r1.y, vFace, c6.x, c6.y
    mul r1.y, r1.y, c0.x
    texld r4, v2, s6
    mad r4, r4.xyzx, c6.yyyz, c6.zzzy
    mul r5, r4, c7.y
    mad r4, c7.x, r4, r5
    mov r1.z, c7.z
    mul r5.xyz, r1.z, c4
    mov r5.w, c7.z
    add r4, r4, r5
    mad r5.xyz, r1.y, c6.zzww, c6.w
    mov r5.w, c6.y
    mad r4, c7.w, r5, r4
    mov r5.yz, c6
    mad r4, c8.x, r5.zyzy, r4
    mov r6.yw, c8.y
    mul r6.xyz, r6.y, c5
    add r4, r4, r6
    rcp r1.z, v5.w
    mul r5.xw, r1.z, r3.yyzz
    mad r5.xw, r5, c1.xyzy, c1.wyzz
    texld r6, r5.xwzw, s0
    max r7.xyz, r6, c25.x
    min r8.xyz, r7, c25.y
    log r7.x, r8.x
    log r7.y, r8.y
    log r7.z, r8.z
    mul r7.xyz, r7, c20.x
    exp r8.x, r7.x
    exp r8.y, r7.y
    exp r8.z, r7.z
    add r7.xyz, r8, c20.y
    rcp r1.z, c20.z
    mul r9.xyz, r1.z, r7
    dp3 r6.w, r9, c26
    mad r7.xyz, r7, -r1.z, r6.w
    mad r7.xyz, c20.w, r7, r9
    abs r1.z, c3.x
    if_ne c3.x, -c3.x
      texld r9, c25.zwzw, s1
      add r6.w, -r9.y, v5.w
      mad r3.x, r9.x, r6.w, r3.y
      mov r3.w, v5.w
      mov r9.xyz, r3.xzww
    else
      mov r9.xyz, c6.z
    endif
    mov r3.w, v5.w
    cmp r9.xyz, -r1.z, r3.yzww, r9
    rcp r6.w, r9.z
    mul r9.xy, r6.w, r9
    mad r9.xy, r9, c1, c1.wzzw
    mov r9.zw, c6.z
    texldl r9, r9, s0
    add r6.w, r9.w, -c2.y
    add r7.w, -r6.w, c26.w
    rcp r6.w, r6.w
    cmp r6.w, r7.w, c27.x, r6.w
    mad r6.w, c2.x, r6.w, -v5.w
    add r6.w, r6.w, -c21.x
    rcp r7.w, c21.y
    mul_sat r6.w, r6.w, r7.w
    dp3 r7.w, v5, v5
    rsq r7.w, r7.w
    mul r9.xy, r7.w, v5
    add r9.zw, -r9_abs.xyxy, r9_abs.xyyx
    cmp r10.xy, r9.z, r9_abs, r9_abs.yxzw
    rcp r8.w, r10.y
    mul r8.w, r8.w, r10.x
    mul r9.z, r8.w, r8.w
    mad r10.x, r9.z, c27.y, c27.z
    mad r10.x, r9.z, r10.x, c27.w
    mad r10.x, r9.z, r10.x, c28.x
    mad r9.z, r9.z, r10.x, c28.y
    mul r8.w, r8.w, r9.z
    cmp r9.z, r9.w, c6.z, c6.y
    mad r9.w, r8.w, c28.z, c28.w
    mad r8.w, r9.w, r9.z, r8.w
    cmp r9.z, r9.x, c29.x, c29.y
    add r8.w, r8.w, r9.z
    mad r9.z, v5.y, r7.w, -r9.x
    cmp r9.xy, r9.z, r9, r9.yxzw
    cmp r9.y, r9.y, c6.y, c6.z
    cmp r9.x, r9.x, c6.z, r9.y
    add r9.y, r8.w, r8.w
    mad r8.w, r9.x, -r9.y, r8.w
    mad r9.x, r8.w, c29.z, c29.w
    mad r7.w, v5.z, r7.w, c6.y
    mad r9.y, r7.w, -c6.w, c6.y
    mul r9.xy, r9, c30
    texld r9, r9, s2
    add r9.xyz, r9, c21.z
    frc r9.xyz, r9
    add r9.xyz, r9, -c6.w
    mad r6.xyz, r9, c30.z, r6
    dp3 r6.x, r6, c26
    mov r7.w, c21.w
    lrp r8.w, r6.x, r7.w, c22.x
    add r6.x, r6.w, c30.w
    pow r7.w, r6.w, r8.w
    cmp r6.x, r6.x, r7.w, c6.z
    mad r6.yzw, r7.xxyz, c14.xxyz, -r8.xxyz
    mad_sat r6.xyz, r6.x, r6.yzww, r8
    mul_pp r7.xy, r0.xwzw, c31.x
    mad r7.zw, r0.xyxw, c31.x, v2.xyxy
    mad r8.xy, v2, c31.y, r7
    add r8.xy, r8, c31.zwzw
    texld_pp r8, r8, s3
    mad r7.zw, r8.xyxy, c32.x, r7
    add r7.zw, r7, -c6.w
    dp2add r6.w, r7.zwzw, r7.zwzw, c6.z
    dp2add r7.z, r7.zwzw, -r7.zwzw, c6.y
    mul r7.z, r7.z, c23.y
    mad r7.xy, v2, -c28.z, r7
    add r7.xy, r7, c32.yzzw
    texld_pp r9, r7, s3
    dp2add_pp r7.x, r9, -r9, c6.y
    max_pp r8.z, r7.x, c6.z
    rsq_pp r7.x, r8.z
    rcp_pp r7.x, r7.x
    mul r6.w, r6.w, r7.x
    dp2add_pp r7.x, r8, -r8, c6.y
    max_pp r8.x, r7.x, c6.z
    rsq_pp r7.x, r8.x
    rcp_pp r7.x, r7.x
    mul r7.x, r7.x, r7.x
    mul r6.w, r6.w, r7.x
    add r7.xy, -c6.w, v2
    dp2add r8.x, c15, r7, r5.z
    dp2add r8.y, c16, r7, r5.z
    mad r8.xy, r0.xwzw, c31.x, r8
    add r8.xy, r8, c6.w
    texld_pp r8, r8, s3
    mad r7.w, r8.y, c33.x, c33.y
    frc r7.w, r7.w
    mad r7.w, r7.w, c33.z, c33.w
    sincos r8.y, r7.w
    dp2add r9.x, c17, r7, r5.z
    dp2add r9.y, c18, r7, r5.z
    mad r0.xw, r0, c31.x, r9.xyzy
    add r0.xw, r0, c6.w
    texld_pp r9, r0.xwzw, s3
    mad r0.x, r9.y, c33.x, c33.y
    frc r0.x, r0.x
    mad r0.x, r0.x, c33.z, c33.w
    sincos r9.y, r0.x
    add r0.x, r8.y, r9.y
    add r0.x, r0.x, -c28.z
    dp2add_sat r0.x, r6.w, r0.x, r7.z
    texld r7, r0.x, s4
    max r0.x, r7.x, c6.z
    add r0.w, r0.x, c32.w
    mul r8.xyz, r0.x, c34
    cmp r8.xyz, r0.w, c35, r8
    mul r0.x, r5.w, c6.w
    mov r0.w, c34.w
    mad r0.w, r5.x, r0.w, c19.x
    add r9.x, r0.w, c32.x
    add r9.y, r0.x, c19.y
    texld r9, r9, s5
    add r0.x, r9.x, c6.x
    mad r0.x, r0.x, c36.x, c36.y
    mul r9.xyz, r0.x, v3
    mul r7.xyw, r7.x, r9.xyzz
    mad r7.xyw, r7, c37.xyzz, r8.xyzz
    mul_sat r0.x, r7.z, c35.w
    if_ne c3.x, -c3.x
      texld r8, c25.zwzw, s1
      add r0.w, -r8.y, v5.w
      mad r3.x, r8.x, r0.w, r3.y
      mov r8.xyz, r3.xzww
    else
      mov r8.xyz, c6.z
    endif
    cmp r3.xyz, -r1.z, r3.yzww, r8
    rcp r0.w, r3.z
    mul r3.xy, r0.w, r3
    mad r3.xy, r3, c1, c1.wzzw
    mov r3.zw, c6.z
    texldl r3, r3, s0
    add r0.w, r3.w, -c2.y
    add r1.z, -r0.w, c26.w
    rcp r0.w, r0.w
    cmp r0.w, r1.z, c27.x, r0.w
    mad r0.w, c2.x, r0.w, -v5.w
    mul_sat r0.w, r0.w, c36.z
    mul r0.w, r0.w, r0.w
    mul r0.x, r0.w, r0.x
    lrp r3.xyz, r0.x, r7.xyww, r6
    max r6.xyz, r3_abs, -c30.w
    log r3.x, r6.x
    log r3.y, r6.y
    log r3.z, r6.z
    mul r3.xyz, r3, c24.z
    exp r6.x, r3.x
    exp r6.y, r3.y
    exp r6.z, r3.z
    add_pp r3.xyz, r6, c13
    mov r3.w, c6.y
    mad r3, c8.z, r3, r4
    mul r4.x, r1.y, r1.x
    mul r4.y, r1.y, r2.y
    mul r4.z, r0.z, r1.y
    mad r4.xyz, r4, c6.w, c6.w
    mov r4.w, c6.y
    mad r3, c8.w, r4, r3
    mov r2.z, r1.w
    mov r2.w, r0.y
    mad r0.xyz, r2.zxww, c6.w, c6.w
    mov r0.w, c6.y
    mad r0, c9.x, r0, r3
    mad r1, v3.xyzx, c6.yyyz, c6.zzzy
    mad r0, c9.y, r1, r0
    mad r1, v3.wwwx, c6.yyyz, c6.zzzy
    mad r0, c9.z, r1, r0
    mov r1.w, c9.w
    mad r0, r1.w, c38.xxyz, r0
    mad r0, c10.x, r5.zzzy, r0
    mad r0, c10.y, r5.zzzy, r0
    mad r0, c10.z, r5.zzzy, r0
    mad r0, c10.w, r5.zzzy, r0
    mad r0, c11.x, r5.zzzy, r0
    mad r0, c11.y, r5.zzzy, r0
    mad r0, c11.z, r5.zzzy, r0
    mad oC0, c11.w, r5.zzzy, r0

// approximately 270 instruction slots used (15 texture, 255 arithmetic)
