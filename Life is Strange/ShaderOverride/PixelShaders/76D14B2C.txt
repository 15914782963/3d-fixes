//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float2 DistanceFadeParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowTexture;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//   float4 UniformPixelVector_7;
//   float4 UniformPixelVector_8;
//   bool bEnableDistanceShadowFading;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   bEnableDistanceShadowFading  b1       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   CameraWorldPos               c8       1
//   DNEResolution                c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelVector_1         c11      1
//   UniformPixelVector_2         c12      1
//   UniformPixelVector_3         c13      1
//   UniformPixelVector_4         c14      1
//   UniformPixelVector_5         c15      1
//   UniformPixelVector_6         c16      1
//   UniformPixelVector_7         c17      1
//   UniformPixelVector_8         c18      1
//   UniformPixelScalars_0        c19      1
//   LightColorAndFalloffExponent c20      1
//   DistanceFadeParameters       c21      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//   PixelTexture2D_4             s7       1
//   ShadowTexture                s8       1
//

    ps_3_0
    def c2, -0.5, 0.315322369, 0.948984623, 0
    def c6, -0.948984623, 0.315322369, 0, 2.79415617e-005
    def c22, 1, 7.60526891e-005, 0.899999976, 0
    def c23, 0.000624999986, 0.00022365569, 25, 15
    def c24, 0.0500000007, 0.5, 6.28318548, -3.14159274
    def c25, 0.125, 0.550000012, 10, 1.52876604
    def c26, 0.0625, 0, 0.0399999991, 1.40624998e-005
    def c27, 0.0299999993, 0, 1.00999999, 3.12500015e-005
    def c28, 4, 0.0432900488, 0.5, 1.79999995
    def c29, 0.699999988, 0.400000006, -9.99999997e-007, 0
    def c30, 0.400000036, 0.800000012, 0.693147004, 2
    def c31, -5.55472994, -6.98316002, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord6 v2.xyz
    dcl_texcoord7 v3
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_76D14B2C_351.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    add r0, c8.xyxy, v3.xyxy
    dp3_pp r1.x, v2, v2
    rsq_pp r1.x, r1.x
    mad_sat_pp r1.y, c7.x, v3.w, c7.y
    mul_pp r1.y, r1.y, c0.x
    add_pp r1.zw, r0, c2.x
    dp2add_pp r2.x, c2.yzzw, r1.zwzw, c2.w
    dp2add_pp r2.y, c6, r1.zwzw, c6.z
    add_pp r2, r2.xyxy, -c2.x
    mov r1.w, c6.w
    mad_pp r1.zw, r2.xyxy, r1.w, c11.xyxy
    texld_pp r3, r1.zwzw, s3
    dp2add_pp r1.z, r3, -r3, c22.x
    max_pp r2.x, r1.z, c2.w
    rsq_pp r1.z, r2.x
    rcp_pp r3.z, r1.z
    mov r2.xy, c22
    mad_pp r1.zw, r2, r2.y, c12.xyxy
    texld_pp r4, r1.zwzw, s3
    dp2add_pp r1.z, r4, -r4, c22.x
    max_pp r2.y, r1.z, c2.w
    rsq_pp r1.z, r2.y
    rcp_pp r4.z, r1.z
    mad_pp r2.yzw, r4.xxyz, -c22.z, r3.xxyz
    dp3_pp r1.z, r2.yzww, r2.yzww
    rsq_pp r1.z, r1.z
    mad_pp r2.yzw, r2, r1.z, -c22.xwwx
    mad_pp r2.yzw, r2, c27.x, c27.xyyz
    nrm_pp r3.xyz, r2.yzww
    nrm_pp r4.xyz, v1
    mad_pp r1.xzw, v2.xyyz, r1.x, r4.xyyz
    nrm_pp r5.xyz, r1.xzww
    mul_pp r1.xz, r0.zyww, c27.w
    mov r6.xyz, c23
    mad_pp r2.yz, r0.xzww, r6.x, c18.xxyw
    texld_pp r7, r2.yzzw, s7
    mov r1.w, c27.w
    mad_pp r2.yz, r0.xzww, r1.w, c15.xxyw
    texld_pp r8, r2.yzzw, s5
    mad_pp r2.yz, r0.xzww, r1.w, c16.xxyw
    texld_pp r9, r2.yzzw, s5
    add_pp r1.w, r8.y, r9.y
    mad_pp r0.xy, r0, r6.y, c17
    texld_pp r8, r0, s5
    add_pp r0.x, r1.w, r8.y
    mad_pp r0.y, r0.x, r6.z, c19.x
    mad_pp r0.y, r7.x, c23.w, r0.y
    mad_pp r0.y, r0.y, c24.x, c24.y
    frc_pp r0.y, r0.y
    mad_pp r0.y, r0.y, c24.z, c24.w
    sincos_pp r6.y, r0.y
    add_pp r0.y, r6.y, c22.x
    mad_pp r0.y, r0.y, c25.x, c25.y
    mad_pp r0.y, r0.y, c25.z, c25.w
    exp_pp r0.y, r0.y
    texld_pp r6, v0, s8
    mov_sat_pp r6.x, r6.x
    mov_pp r6.y, -c2.x
    texld_pp r6, r6, s0
    if b0
      mad r2.yz, vPos.xxyw, c9.xxyw, c9.xzww
      mul r7.xy, r2.yzzw, v3.w
      if_ne c3.x, -c3.x
        texld r8, c26, s1
        add r1.w, -r8.y, v3.w
        mad r7.z, r8.x, r1.w, r7.x
        mov r7.xy, r7.zyzw
        mov r1.w, v3.w
      else
        mov r1.w, v3.w
      endif
      rcp r1.w, r1.w
      mul r2.yz, r1.w, r7.xxyw
      mad r2.yz, r2, c1.xxyw, c1.xwzw
      texld r7, r2.yzzw, s2
      mul_pp r2.yzw, r7.xxyz, r7.xxyz
      if b1
        dp3 r1.w, v3, v3
        rsq r1.w, r1.w
        rcp r1.w, r1.w
        add r1.w, -r1.w, c21.x
        mul_sat_pp r1.w, r1.w, c21.y
        mul_pp r1.w, r1.w, r1.w
        mad_pp r3.w, r7.w, r7.w, -r6.x
        mad_pp r6.yzw, r1.w, r3.w, r6.x
      else
        mov_pp r6.yzw, r6.x
      endif
      mul_pp r2.yzw, r2, r6
    else
      mov_pp r2.yzw, r6.x
    endif
    mov r6.zw, c26
    mad_pp r6.xyz, c5.w, r6.z, c5
    mad_pp r7.xy, r0.zwzw, r6.w, c13
    texld_pp r7, r7, s4
    mad_pp r0.zw, r0, r6.w, c14.xyxy
    texld_pp r8, r0.zwzw, s4
    texld_pp r9, r1.xzzw, s4
    mov_pp r1.x, c28.x
    mad_pp r0.z, r9.w, r1.x, c19.x
    mad_pp r0.z, r0.z, c28.y, c28.z
    frc_pp r0.z, r0.z
    mad_pp r0.z, r0.z, c24.z, c24.w
    sincos_pp r9.y, r0.z
    add_pp r0.z, r9.y, c22.x
    mul_pp r0.z, r0.z, -c2.x
    lrp_pp r1.x, r0.z, r8.w, r7.w
    mad_pp r0.w, r1.x, c29.x, c29.y
    mul_pp r0.x, r0.x, r0.w
    mul_sat_pp r0.x, r0.x, c28.w
    add r0.w, r0.x, c29.z
    mul_pp r0.x, r0.x, r0.x
    cmp_pp r0.x, r0.w, r0.x, c2.w
    texld_pp r9, r0.x, s6
    lrp_pp r1.x, r0.z, r7.w, r8.w
    add_pp r0.x, -r1.x, c22.x
    mad_pp r0.x, r0.x, c30.x, c30.y
    mul_pp r0.xzw, r9.xyyz, r0.x
    add_pp r1.xzw, r2.x, -c10.xyyz
    mul_pp r0.xzw, r0, r1
    mad_pp r0.xzw, r0, c4.w, c4.xyyz
    dp3_sat_pp r1.x, r3, r4
    mul_pp r1.z, r1.x, c0.w
    mov_sat_pp r1.w, c0.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.y, r0.y, r1.w
    dp3_sat_pp r1.w, r3, r5
    mad_pp r2.x, r0.y, c30.z, c30.w
    mul_pp r2.x, r2.x, c25.x
    mad r0.y, r0.y, r1.w, -r0.y
    exp_pp r0.y, r0.y
    mul_pp r0.y, r0.y, r2.x
    mul_pp r0.y, r1.x, r0.y
    mul_pp r0.y, r1.y, r0.y
    dp3_sat_pp r1.x, r4, r5
    mad_pp r1.y, r1.x, c31.x, c31.y
    mul_pp r1.x, r1.x, r1.y
    exp_pp r1.x, r1.x
    lrp_pp r3.xyz, r1.x, c22.x, r6
    mul_pp r1.xyw, r0.y, r3.xyzz
    mad_pp r0.xyz, r0.xzww, r1.z, r1.xyww
    mul_pp r0.xyz, r2.yzww, r0
    mul oC0.xyz, r0, c20
    mov oC0.w, c2.w

// approximately 175 instruction slots used (14 texture, 161 arithmetic)
