//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float2 LightFunctionParameters;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4x4 ScreenToLight;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   UniformPixelVector_0    c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   ScreenToLight           c7       4
//   UniformPixelScalars_0   c11      1
//   LightFunctionParameters c12      1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//   PixelTexture2D_1        s3       1
//   PixelTexture2D_2        s4       1
//   PixelTexture2D_3        s5       1
//

    ps_3_0
    def c4, 0.0625, 0, 9.99999975e-006, 100000
    def c5, -0.0299999993, 1.4000001, -0.200000003, 0.0666666701
    def c6, 0.100000001, 0.0714285746, 10, 14
    def c13, 1.5, 0.107142858, 15, -1
    def c14, 1, 0, 0.0500000007, 0.949999988
    def c15, -0.949999988, 1, 0.333000004, 0
    dcl_texcoord v0.xyw
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15


// Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_A650C9EC_34907078.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

texldl r31, c220.z, s15
mov r7.xyw, v0
add r31.w, r7.w, -r31.y
mad r7.x, r31.w, r31.x, r7.x

    abs r0.x, c3.x
    if_ne c3.x, -c3.x
      texld r1, c4, s1
      add r0.y, -r1.y, r7.w
      mad r1.x, r1.x, r0.y, r7.x
      mov r1.yz, r7.xyww
    else
      mov r1.xyz, c4.y
    endif
    cmp r0.xyz, -r0.x, r7.xyww, r1
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.y
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c4.z
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c4.w, r0.x
    mul r0.x, r0.x, c2.x
    rcp r0.y, r7.w
    mul r0.yz, r0.y, r7.xxyw
    mul r0.yz, r0.x, r0
    mul r1, r0.z, c8

// Unreal Engine light fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_A650C9EC_34907078.txt
add r31.w, r0.x, -r31.y
mad r0.y, -r31.w, r31.x, r0.y

    mad r1, c7, r0.y, r1
    mad r0, c9, r0.x, r1
    add r0, r0, c10
    rcp r0.w, r0.w
    mul r0.xyz, r0.w, r0
    texld r1, c11.y, s2
    rcp r0.z, r0.z
    mul_pp r0.z, r0.z, c5.x
    mad r2.xy, r0.z, r0, r0
    mad r2.zw, r2.x, c5.y, c5.z
    mul r0.yz, r2.xzyw, c6.xxyw
    mov r3, c13
    mul r3.xyz, r3, c11.z
    frc r3.xyz, r3_abs
    cmp r3.xyz, c11.z, r3, -r3
    mul r3.xy, r3, c6.zwzw
    frc r4.xy, r3
    add r3.xy, r3, -r4
    mad r3.xy, r3, c6, r0.yzzw
    texld r4, r3, s3
    mov r2.z, c11.z
    add r0.w, r2.z, c5.w
    mul r3.xy, r0.w, c13
    frc r3.xy, r3_abs
    cmp r3.xy, r0.w, r3, -r3
    mul r3.xy, r3, c6.zwzw
    frc r5.xy, r3
    add r3.xy, r3, -r5
    mad r0.yz, r3.xxyw, c6.xxyw, r0
    texld r5, r0.yzzw, s3
    lrp r6, r3.z, r5, r4
    dp4 r0.y, r1, r6
    mul r0.y, r0.y, r0.y
    mov_sat r0.zw, r2.xywy
    texld r1, r0.zwzw, s4
    mul r0.z, r0.y, r1.y
    texld r4, r2, s5
    add r1.xz, r2.xyyw, c13.w
    add r2.zw, -r2.xyxy, -c13.w
    cmp r2.zw, r2, c14.x, c14.y
    cmp r1.xz, r1, r2.zyww, -c13.w
    mul r0.w, r1.z, r1.x
    mul r1.xzw, r4.xyyz, r0.w
    cmp r1.xzw, -r2.y, c4.y, r1
    cmp r1.xzw, r2.y, r1, c4.y
    cmp r1.xzw, -r2.x, c4.y, r1
    cmp r1.xzw, r2.x, r1, c4.y
    mad r1.xyz, r0.y, -r1.y, r1.xzww
    mad r0.yzw, c11.w, r1.xxyz, r0.z
    add r0.yzw, r0, c14.z
    mul r0.yzw, r0, c14.w
    mad r0.x, r0_abs.x, c15.x, c15.y
    mad_pp r0.xyz, r0.x, r0.yzww, c0
    dp3 r0.w, r0, c15.z
    lrp_pp r1.xyz, c12.x, r0.w, r0
    add r0.xyz, r1, c13.w
    mad_pp r0.xyz, c12.y, r0, -r3.w
    rsq_pp r0.x, r0.x
    rsq_pp r0.y, r0.y
    rsq_pp r0.z, r0.z
    rcp_pp oC0.x, r0.x
    rcp_pp oC0.y, r0.y
    rcp_pp oC0.z, r0.z
    mov_pp oC0.w, -c13.w

// approximately 91 instruction slots used (8 texture, 83 arithmetic)
