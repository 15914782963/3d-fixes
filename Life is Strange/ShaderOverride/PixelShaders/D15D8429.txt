//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEMiscParameter;
//   sampler2D DNEReflectionTexture;
//   float4 DNEResolution;
//   float4 DebugMode[5];
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_4;
//   float4 UniformPixelScalars_5;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEMiscParameter          c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DebugMode                 c7       5
//   CameraWorldPos            c12      1
//   DNEResolution             c13      1
//   UniformPixelVector_0      c14      1
//   UniformPixelVector_1      c15      1
//   UniformPixelVector_2      c16      1
//   UniformPixelVector_3      c17      1
//   UniformPixelVector_4      c18      1
//   UniformPixelScalars_1     c19      1
//   UniformPixelScalars_2     c20      1
//   UniformPixelScalars_3     c21      1
//   UniformPixelScalars_4     c22      1
//   UniformPixelScalars_5     c23      1
//   SceneColorTexture         s0       1
//   NvStereoFixTexture        s1       1
//   DNEReflectionTexture      s2       1
//   PixelTexture2D_0          s3       1
//   PixelTexture2D_1          s4       1
//

    ps_3_0
    def c6, 0.0700000003, -9.99999997e-007, 0.930000007, 0.5
    def c24, 1.00010002, 2.20000005, 0.5, -0.5
    def c25, -5.55472994, -6.98316002, 0.0625, 0
    def c26, 9.99999975e-006, 100000, -0.0170000009, -0.330000013
    def c27, 0.0670000017, 0.330000013, -0.0245999992, 0.100000001
    def c28, 0.879999995, 0.100000001, 7.7870369, 0.137931034
    def c29, 0.222450897, 0.716925859, 0.06062451, -0.00885600038
    def c30, 0.333333343, 116, -16, -31
    def c31, 95, 0, 0, 0
    def c32, 1, 0, 1.41789806, -0.99000001
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord6 v2.xyz
    dcl_texcoord7 v3.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_D15D8429_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine


def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

    nrm r0.xyz, v1
    nrm r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul r2.xyz, r2.yxzw, v1.w
    add r3.xy, c12, v3
    mad r3.zw, vPos.xyxy, c13.xyxy, c13
    mul r4.yz, r3.xzww, v3.w
    nrm_pp r5.xyz, v2
    mad_sat_pp r0.w, c0.x, v3.w, c0.y
    rcp r1.w, c19.x
    mul_pp r3.zw, r1.w, r3.xyxy
    mad_pp r3.xy, r3, r1.w, c15
    texld_pp r6, r3, s3
    dp2add_pp r1.w, r6, -r6, c32.x
    max_pp r2.w, r1.w, c32.y
    rsq_pp r1.w, r2.w
    rcp_pp r6.z, r1.w
    mov r7.xyz, c32
    mad_pp r3.xy, r3.zwzw, r7.z, c16
    texld_pp r8, r3, s3
    dp2add_pp r1.w, r8, -r8, c32.x
    max_pp r2.w, r1.w, c32.y
    rsq_pp r1.w, r2.w
    rcp_pp r8.z, r1.w
    add_pp r6.xyz, r6, r8
    nrm_pp r8.xyz, r6
    mul_pp r6.xyz, r8, c20.x
    frc_pp r8.xyz, r6
    add_pp r6.xyz, r6, -r8
    rcp r1.w, c20.x
    mul_pp r3.xy, r1.w, r6
    mov r2.w, c20.w
    mad_pp r3.zw, r2.w, r3, c17.xyxy
    texld_pp r8, r3.zwzw, s4
    lrp_sat_pp r2.w, r8.x, c21.z, c21.w
    mad_pp r6.xyz, r6, r1.w, c32.yyww
    mad_pp r6.xyz, r2.w, r6, c32.yyxw
    nrm_pp r9.xyz, r6
    mov r6.x, c6.x
    mad_pp r6.xyz, c5.w, r6.x, c5
    mul r10, r7.yxyx, c7.xxyy
    add r10, r10.zzzw, r10.xxxy
    dp3_pp r1.w, r9, r5
    max_pp r2.w, r1.w, c32.y
    add_pp r1.w, -r2.w, c32.x
    add r3.z, r1_abs.w, c6.y
    mul_pp r1.w, r1_abs.w, r1_abs.w
    mad_pp r1.w, r1.w, c6.z, c6.x
    cmp_pp r1.w, r3.z, r1.w, c6.x
    add_pp r3.z, -r1.w, c32.x
    mul_pp r5.xyz, r3.z, c18
    add_pp r8.yzw, r7.x, -c14.xxyz
    mul_pp r5.xyz, r5, r8.yzww
    mad_pp r5.xyz, r5, c4.w, c4
    mov r5.w, c32.x
    mad r10, c7.z, r5, r10
    mad r11.xyz, r9, c6.w, c6.w
    mov r11.w, c32.x
    mad r10, c7.w, r11, r10
    mov r8.y, c22.y
    add r3.z, -r8.y, c24.x
    cmp r3.zw, r3.z, c22.y, r7.xyxy
    log r11.x, r3.z
    log r11.y, r3.w
    mul r3.zw, r11.xyxy, c24.y
    exp r11.x, r3.z
    exp r11.yz, r3.w
    mov r11.w, c32.x
    mad r10, c8.x, r11, r10
    mov r6.w, c32.x
    mad r10, c8.y, r6, r10
    rcp r3.z, v3.w
    mul r3.zw, r3.z, r4.xyyz
    mad r3.zw, r3, c24, r9.xyxy
    add_pp r11.xy, r3.zwzw, c6.w
    mad_pp r11.w, -c0.w, r8.y, c0.w
    mov r11.z, c32.y

// DNERefelctionTexture fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_D15D8429_166.txt
texldl r13, c220.z, s13
mad r11.x, -r13.x, c220.w, r11.x

    texldl_pp r11, r11, s2
    mov_sat_pp r2.w, r2.w
    max_pp r8.yzw, c22.y, r6.xxyz
    mad_pp r3.z, r2.w, c25.x, c25.y
    mul_pp r2.w, r2.w, r3.z
    exp_pp r2.w, r2.w
    lrp_pp r12.xyz, r2.w, r8.yzww, r6
    mul_pp r8.yzw, r11.xxyz, r12.xxyz
    mul_pp r8.yzw, r8, c0.z
    mul_pp r8.yzw, r0.w, r8
    mad_pp r11.xyz, r1.w, r8.yzww, c14
    mov r11.w, c32.x
    mad r10, c8.z, r11, r10
    dp3 r11.x, r1, r9
    dp3 r11.y, r2.yxzw, r9
    dp3 r11.z, r0, r9
    mad r9.xyz, r11, c6.w, c6.w
    mov r9.w, c32.x
    mad r9, c8.w, r9, r10
    mov r2.x, r1.x
    mov r2.z, r0.x
    mad r0.xyz, r2, c6.w, c6.w
    mov r0.w, c32.x
    mad r0, c9.x, r0, r9
    add r0, r0, c9.y
    add r0, r0, c9.z
    abs r1.x, c3.x
    if_ne c3.x, -c3.x
      texld r2, c25.zwzw, s1
      add r1.y, -r2.y, v3.w
      mad r4.x, r2.x, r1.y, r4.y
      mov r4.w, v3.w
      mov r1.yzw, r4.xxzw
    else
      mov r1.yzw, c32.y
    endif
    mov r4.w, v3.w
    cmp r1.yzw, -r1.x, r4, r1
    rcp r1.w, r1.w
    mul r1.yz, r1.w, r1
    mad r2.xy, r1.yzzw, c1, c1.wzzw
    mov r2.zw, c32.y
    texldl r2, r2, s0
    add r1.y, r2.w, -c2.y
    add r1.z, -r1.y, c26.x
    rcp r1.y, r1.y
    cmp r1.y, r1.z, c26.y, r1.y
    mad_pp r1.y, c2.x, r1.y, -v3.w
    lrp_pp r1.z, r8.x, c22.z, c22.w
    rcp r1.z, r1.z
    mul_sat_pp r1.y, r1.z, r1.y
    mul_pp r1.y, r1.y, c23.z
    mul_pp r1.y, r3.x, r1.y
    abs_pp r2.x, r1.y
    if_ne c3.x, -c3.x
      texld r8, c25.zwzw, s1
      add r1.y, -r8.y, v3.w
      mad r4.x, r8.x, r1.y, r4.y
      mov r3.xzw, r4
    else
      mov r3.xzw, c32.y
    endif
    cmp r1.xyw, -r1.x, r4.yzzw, r3.xzzw
    rcp r1.w, r1.w
    mul r1.xy, r1.w, r1
    mad r4.xy, r1, c1, c1.wzzw
    mov r4.zw, c32.y
    texldl r4, r4, s0
    add r1.x, r4.w, -c2.y
    add r1.y, -r1.x, c26.x
    rcp r1.x, r1.x
    cmp r1.x, r1.y, c26.y, r1.x
    mad_pp r1.x, c2.x, r1.x, -v3.w
    mul_sat_pp r1.x, r1.z, r1.x
    mul_pp r1.x, r1.x, c23.z
    mul_pp r1.x, r3.y, r1.x
    abs_pp r2.y, r1.x
    mov r2.zw, c32.xyyx
    mad r0, c9.w, r2, r0
    mad r0, c10.x, r7.yyyx, r0
    add r1, r6.xyzx, c26.zzzw
    cmp r1.xw, r1, c32.y, c32.x
    cmp r1.x, r1.y, r1.x, c32.x
    cmp r2.x, r1.z, r1.x, c32.x
    add r3, -r6.xyzx, c27.xxxy
    cmp r1.x, r3.x, c32.y, r1.w
    add r1.yz, r6, c26.w
    cmp r1.yz, r1, -c32.y, -c32.x
    cmp r1.yz, r3, -c32.y, r1
    cmp r1.x, r1.y, r1.x, c32.x
    cmp r2.z, r1.z, r1.x, c32.x
    mov r2.yw, c32.xyzx
    mad r0, c10.y, r2, r0
    add r1.xyz, r5, c27.z
    cmp r1.z, r1.z, c32.y, c32.x
    cmp r1.y, r1.y, c32.y, r1.z
    cmp r1.x, r1.x, c32.y, r1.y
    add r2, -r5.xyzx, c28.xxxy
    cmp r1.yz, r2.xxww, c32.y, c32.x
    cmp r1.y, r2.y, r1.y, c32.x
    cmp r2.z, r2.z, r1.y, c32.x
    add r1.yw, -r6.xyzz, -c26.w
    cmp r1.w, r1.w, c32.y, c32.x
    cmp r1.y, r1.y, c32.y, r1.w
    cmp r1.y, r3.w, c32.y, r1.y
    cmp r2.x, -r1.y, r1.x, c32.y
    mul r1.x, r1.y, r2.x
    add r1.yw, -r5.xyzz, c27.w
    cmp r1.yw, r1, c32.y, c32.x
    add r1.y, r1.y, r1.z
    cmp r1.y, -r1.y, c32.y, c32.x
    add r1.y, r1.w, r1.y
    cmp r1.y, -r1.y, c32.y, c32.x
    cmp r2.y, -r1.x, c32.y, r1.y
    mov r2.w, c32.x
    mad r0, c10.z, r2, r0
    dp3 r1.x, r5, c29
    mad r1.y, r1.x, c28.z, c28.w
    add r1.z, r1.x, c29.w
    pow r2.x, r1.x, c30.x
    cmp r1.x, r1.z, r2.x, r1.y
    mad r1.xy, r1.x, c30.y, c30.zwzw
    add r1.x, -r1.x, c31.x
    cmp r2.xz, r1.yyxw, c32.y, c32.x
    mov r2.yw, c32.xyzx
    mad r0, c10.w, r2, r0
    mad r0, c11.x, r7.yyyx, r0
    mad r0, c11.y, r7.yyyx, r0
    mad r0, c11.z, r7.yyyx, r0
    mad oC0, c11.w, r7.yyyx, r0

// approximately 229 instruction slots used (11 texture, 218 arithmetic)
