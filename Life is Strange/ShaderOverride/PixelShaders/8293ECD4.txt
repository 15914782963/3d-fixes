//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   float4 WorldIncidentLighting[7];
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   WorldIncidentLighting        c7       7
//   DNEMiscParameter             c14      1
//   DNEResolution                c15      1
//   UniformPixelVector_0         c16      1
//   UniformPixelVector_1         c17      1
//   UniformPixelScalars_0        c18      1
//   LightColorAndFalloffExponent c19      1
//   UpperSkyColor                c20      1
//   AmbientColorAndSkyFactor     c21      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   PixelTexture2D_0             s2       1
//   VAOBuffer                    s3       1
//

    ps_3_0
    def c6, 1, 0.100000001, 5, -5
    def c22, 0.200000003, 3, -1, 0.858085215
    def c23, -1.02332771, 1.02332771, 0.886227608, 0
    def c24, 0.0625, 0, 1, 0.5
    def c25, -0.858085215, 0.247708291, 0.429042608, 738.659729
    def c26, 511.999756, 2, 0.125, 0
    def c27, -5.55472994, -6.98316002, 0, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord4 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord5 v5.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_8293ECD4_801.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    dp3_pp r0.w, v0, v0
    rsq_pp r0.w, r0.w
    mul_pp r1.xyz, r0.w, v0.yxzw
    mul r2.yz, r0, r1
    mad_pp r0.x, r0.x, r1.x, -r2.y
    mul_pp r1.x, r0.x, v1.w
    mad r0.xy, vPos, c15, c15.zwzw
    mul r3.xy, r0, v5.w
    nrm_pp r4.xyz, v4
    mad_sat_pp r0.x, c14.x, v5.w, c14.y
    mul_pp r0.x, r0.x, c0.x
    dp3_pp r0.y, v3, v3
    rsq_pp r0.y, r0.y
    mul_pp r5.xyz, r0.y, v3
    mad_pp r4.xyw, v3.xyzz, r0.y, r4.xyzz
    nrm_pp r6.xyz, r4.xyww
    texld_pp r7, v2, s2
    mul_pp r4.xyw, r7.xyzz, c17.xyzz
    mov r7.xy, c6
    add_pp r7.xzw, r7.x, -c16.xyyz
    mul_pp r7.xzw, r4.xyyw, r7
    mad_pp r7.xzw, r7, c4.w, c4.xyyz
    mad_pp r8.xyz, c5.w, r7.y, c5
    mad_pp r0.y, r4.z, c6.z, c6.w
    exp_pp r0.y, r0.y
    mul_pp r4.xyz, r4.xyww, c18.x
    mad_pp r4.xyz, r0.y, c22.x, r4
    add_pp r4.xyz, r4, c16
    mul r9.xyz, r7.xzww, c20
    mad_pp r4.xyz, r9, c21.w, r4
    mov_pp r1.y, r0.z
    mul r9.xyz, r1, r1.xyxw
    mul r2.x, r0.z, r1.x
    mad r2.y, r9.y, c22.y, c22.z
    mad_pp r2.w, r1.z, r1.z, -r9.x
    mul r1.xyz, r1, c23.xyxw
    mul r1.w, r9.z, c22.w
    mul r2, r2, c25.xyxz
    dp4 r0.y, c8, r1
    mov r0.z, c23.z
    mad_pp r0.y, c7.x, r0.z, r0.y
    dp4 r0.w, c9, r2
    add_pp r9.x, r0.w, r0.y
    dp4 r0.y, c10, r1
    mad_pp r0.y, c7.y, r0.z, r0.y
    dp4 r0.w, c11, r2
    add_pp r9.y, r0.w, r0.y
    dp4 r0.y, c12, r1
    mad_pp r0.y, c7.z, r0.z, r0.y
    dp4 r0.z, c13, r2
    add_pp r9.z, r0.z, r0.y
    mul_pp r0.yzw, r7.xxzw, r9.xxyz
    cmp_pp r0.yzw, r9.xxyz, r0, c23.w
    add_pp r0.yzw, r0, r4.xxyz
    abs r1.x, c3.x
    if_ne c3.x, -c3.x
      texld r2, c24, s1
      add r1.y, -r2.y, v5.w
      mad r3.z, r2.x, r1.y, r3.x
      mov r3.w, v5.w
      mov r1.yzw, r3.xzyw
    else
      mov r1.yzw, c23.w
    endif
    mov r3.z, v5.w
    cmp r1.xyz, -r1.x, r3, r1.yzww
    rcp r1.z, r1.z
    mul r1.xy, r1.z, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s3
    texld_pp r2, c24.zwzw, s0
    mov_sat_pp r1.y, r5.z
    mul_pp r1.z, r1.y, c0.w
    mov_sat_pp r1.w, c0.y
    mul_pp r1.w, r1.w, r1.w
    mov_sat_pp r2.y, r6.z
    mul_pp r2.z, r1.w, c25.w
    mad_pp r1.w, r1.w, c26.x, c26.y
    mul_pp r1.w, r1.w, c26.z
    mad r2.y, r2.z, r2.y, -r2.z
    exp_pp r2.y, r2.y
    mul_pp r1.w, r1.w, r2.y
    mul_pp r1.y, r1.y, r1.w
    mul_pp r0.x, r0.x, r1.y
    dp3_sat_pp r1.y, r5, r6
    mad_pp r1.w, r1.y, c27.x, c27.y
    mul_pp r1.y, r1.y, r1.w
    exp_pp r1.y, r1.y
    lrp_pp r2.yzw, r1.y, c6.x, r8.xxyz
    mul_pp r2.yzw, r0.x, r2
    mad_pp r1.yzw, r7.xxzw, r1.z, r2
    mul_pp r1.yzw, r2.x, r1
    mul_pp r1.yzw, r1, c19.xxyz
    mad_pp r0.xyz, r0.yzww, r1.x, r1.yzww
    mad_pp oC0.xyz, r7.xzww, c21, r0
    rcp r0.x, v5.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 106 instruction slots used (4 texture, 102 arithmetic)
