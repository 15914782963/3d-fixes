//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float3 DistanceFieldParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D PixelTexture2D_6;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowTexture;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEResolution                c7       1
//   UniformPixelVector_0         c8       1
//   UniformPixelVector_1         c9       1
//   UniformPixelScalars_0        c10      1
//   LightColorAndFalloffExponent c11      1
//   DistanceFieldParameters      c12      1
//   SpotDirection                c13      1
//   SpotAngles                   c14      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_4             s6       1
//   PixelTexture2D_5             s7       1
//   PixelTexture2D_6             s8       1
//   ShadowTexture                s9       1
//

    ps_3_0
    def c2, 2, -1, 0.5, 1
    def c6, 0.0625, 0, -9.99999997e-007, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord7 v5.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_87D2CD6E_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v4
    texld_pp r1, v1, s3
    mad_pp r1.xyz, r1, c2.x, c2.y
    texld_pp r2, v1, s4
    mad_pp r2.xyz, r2, c2.x, c2.y
    texld r3, v1.wzzw, s5
    lrp r4.xyz, r3.w, r2, r1
    mul_pp r1.xyz, r4, c9
    nrm_pp r2.xyz, r1
    nrm_pp r1.xyz, v2
    dp3_pp r0.w, r2, r0
    mul_pp r4.xyz, r0.w, r2
    mad_pp r0.xyz, r4, c2.x, -r0
    texld_pp r4, v0, s9
    add r0.w, r4.x, c12.x
    mul_sat_pp r0.w, r0.w, c12.y
    pow_sat_pp r4.x, r0.w, c12.z
    dp3 r0.w, v3, v3
    rsq r1.w, r0.w
    mul r5.xyz, r1.w, v3
    dp3 r1.w, r5, -c13
    add r1.w, r1.w, -c14.x
    mul_sat r1.w, r1.w, c14.y
    mul_pp r4.z, r1.w, r1.w
    mov r4.yw, c2.z
    texld_pp r5, r4, s0
    texld_pp r4, r4.zwzw, s0
    add r1.w, -r0.w, c2.w
    mul r1.w, r5.x, r1.w
    mul r6, r4.x, r1.w
    mov r7, r6
    texkill r7
    if b0
      mad r4.yz, vPos.xxyw, c7.xxyw, c7.xzww
      mul r6.xy, r4.yzzw, v5.w
      if_ne c3.x, -c3.x
        texld r7, c6, s1
        add r1.w, -r7.y, v5.w
        mad r6.z, r7.x, r1.w, r6.x
        mov r6.xy, r6.zyzw
        mov r1.w, v5.w
      else
        mov r1.w, v5.w
      endif
      rcp r1.w, r1.w
      mul r4.yz, r1.w, r6.xxyw
      mad r4.yz, r4, c1.xxyw, c1.xwzw
      texld r7, r4.yzzw, s2
      mul_pp r4.yzw, r7.xxyz, r7.xxyz
      mul_pp r4.yzw, r4, r5.x
    else
      mov_pp r4.yzw, r5.x
    endif
    texld r5, v1, s8
    mul_pp r5.xyz, r5, c10.y
    mad_pp r5.xyz, r5, c5.w, c5
    mov_sat r0.w, r0.w
    add r0.w, -r0.w, c2.w
    pow_sat_pp r6.x, r0.w, c11.w
    mov r6.y, c2.z
    texld_pp r7, r6, s0
    texld r8, v1, s6
    texld r9, v1, s7
    lrp r6.xyz, r3.w, r9, r8
    mul r3.xyz, r3, r6
    mov r0.w, c2.w
    add r6.xyz, r0.w, -c8
    mul_pp r3.xyz, r3, r6
    mad_pp r3.xyz, r3, c4.w, c4
    dp3_sat_pp r0.w, r2, r1
    add r1.w, r0.w, c6.z
    mul r0.w, r0.w, c0.w
    dp3_sat_pp r0.x, r0, r1
    add r0.y, r0.x, c6.z
    pow_pp r1.x, r0.x, c10.z
    mul r0.x, r1.x, c0.x
    mul r1.xyz, r0.w, r3
    cmp r1.xyz, r1.w, r1, c6.y
    mul_pp r0.xzw, r5.xyyz, r0.x
    cmp_pp r0.xyz, r0.y, r0.xzww, c6.y
    add_pp r0.xyz, r0, r1
    mul_pp r0.xyz, r4.yzww, r0
    mul r0.xyz, r0, c11
    mul r0.xyz, r7.x, r0
    mul r0.xyz, r4.x, r0
    cmp oC0.xyz, -r6.w, c6.y, r0
    mov oC0.w, c6.y

// approximately 103 instruction slots used (12 texture, 91 arithmetic)
