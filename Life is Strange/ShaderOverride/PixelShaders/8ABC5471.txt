//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float3 DistanceFieldParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D PixelTexture2D_6;
//   sampler2D PixelTexture2D_7;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowTexture;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   CameraWorldPos               c8       1
//   DNEResolution                c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelVector_1         c11      1
//   UniformPixelScalars_0        c12      1
//   LightColorAndFalloffExponent c13      1
//   DistanceFieldParameters      c14      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//   PixelTexture2D_4             s7       1
//   PixelTexture2D_5             s8       1
//   PixelTexture2D_6             s9       1
//   PixelTexture2D_7             s10      1
//   ShadowTexture                s11      1
//

    ps_3_0
    def c2, 0, -0.5, 0.949999988, 15
    def c6, 0.666666687, -0.899999976, 1, 20
    def c15, 2, 0, 0.333332986, 0.666665971
    def c16, 0.00390625, 0.0078125, 9.99999997e-007, -0.333299994
    def c17, -2, 1, 10, 1.52876604
    def c18, 0.0625, 0, 0.693147004, 2
    def c19, 0.125, -5.55472994, -6.98316002, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xy
    dcl_texcoord3_pp v2.w
    dcl_texcoord4_pp v3.xyz
    dcl_texcoord5 v4.xyz
    dcl_texcoord6 v5.xyz
    dcl_texcoord7 v6.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9
    dcl_2d s10
    dcl_2d s11

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_8ABC5471_242.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    add r0.xy, c8, v6
    dp3_pp r0.z, v5, v5
    rsq_pp r0.z, r0.z
    mad_sat_pp r0.w, c7.x, v6.w, c7.y
    mul_pp r0.w, r0.w, c0.x
    nrm_pp r1.xyz, v3
    mad_pp r2.xyz, v5, r0.z, r1
    nrm_pp r3.xyz, r2
    texld_pp r2, v1, s8
    texld_pp r4, v1, s9
    texld_pp r5, v1, s5
    max_pp r0.z, r5.x, c2.x
    add r2.xy, r0.z, c2.yzzw
    mad r0.z, r2.y, c6.x, c6.y
    mul_sat_pp r0.z, r0.z, c2.w
    cmp_pp r0.z, r2.x, c6.z, r0.z
    add r1.w, r5.x, c2.y
    mov_sat r2.x, r5.x
    add r2.x, r2.x, c2.y
    mul_sat_pp r2.x, r2.x, c6.w
    cmp_pp r1.w, r1.w, r2.x, c2.x
    mad_sat_pp r0.z, r0.z, r5.x, r1.w
    add_pp r1.w, c2.y, v2.w
    mad_sat_pp r0.z, r1.w, c15.x, r0.z
    lrp_pp r1.w, r0.z, r4.w, r2.w
    mov r2.yzw, c15
    add_pp r2.xyz, r2.yzww, c12.y
    mul_pp r0.xy, r0, c16
    texld_pp r4, r0, s10
    add_pp r2.xyz, r2, r4
    frc_pp r2.xyz, r2
    add r2.xyz, -r2, c6.z
    max r5.xyz, c16.z, r2
    mul r2.xyz, r5, r5
    mul_pp r2.xyz, r2, r5
    frc_pp r5.xyz, -r4
    add_sat_pp r4.xyz, r4, r5
    mul_pp r0.xy, r2, r4
    add_pp r0.x, r0.y, r0.x
    mad_sat_pp r0.x, r2.z, r4.z, r0.x
    mul_pp r0.x, r0.x, v2.w
    mad r0.y, r1.w, c17.x, c17.y
    mad_pp r0.x, r0.x, r0.y, r1.w
    mad_pp r0.x, r0.x, c17.z, c17.w
    exp_pp r0.x, r0.x
    texld_pp r2, v0, s11
    add r0.y, r2.x, c14.x
    mul_sat_pp r0.y, r0.y, c14.y
    pow_sat_pp r2.x, r0.y, c14.z
    mov r2.yw, -c2.y
    texld_pp r4, r2, s0
    dp3 r0.y, v4, v4
    add r1.w, -r0.y, c6.z
    mul r5, r4.x, r1.w
    mov r6, r5
    texkill r6
    texld_pp r6, v1, s4
    mov_sat_pp r1.w, r6.w
    add_pp r1.w, r1.w, c16.w
    cmp_pp r7, -r5.w, c2.x, r1.w
    texkill r7
    if b0
      mad r2.xy, vPos, c9, c9.zwzw
      mul r5.xy, r2, v6.w
      if_ne c3.x, -c3.x
        texld r7, c18, s1
        add r1.w, -r7.y, v6.w
        mad r5.z, r7.x, r1.w, r5.x
        mov r5.xy, r5.zyzw
        mov r1.w, v6.w
      else
        mov r1.w, v6.w
      endif
      rcp r1.w, r1.w
      mul r2.xy, r1.w, r5
      mad r2.xy, r2, c1, c1.wzzw
      texld r7, r2, s2
      mul_pp r4.yzw, r7.xxyz, r7.xxyz
      mul_pp r4.yzw, r4, r4.x
    else
      mov_pp r4.yzw, r4.x
    endif
    texld_pp r7, v1, s6
    texld_pp r8, v1, s7
    lrp_pp r5.xyz, r0.z, r8, r7
    mad_pp r5.xyz, r5, c5.w, c5
    mov_sat r0.y, r0.y
    add r0.y, -r0.y, c6.z
    pow_sat_pp r2.z, r0.y, c13.w
    texld_pp r2, r2.zwzw, s0
    texld_pp r7, v1, s3
    lrp_pp r2.yzw, r0.z, r6.xxyz, r7.xxyz
    mul_pp r2.yzw, r2, c11.xxyz
    mov r0.z, c6.z
    add_pp r6.xyz, r0.z, -c10
    mul_pp r2.yzw, r2, r6.xxyz
    mad_pp r2.yzw, r2, c4.w, c4.xxyz
    mov_sat_pp r0.y, r1.z
    mul_pp r0.z, r0.y, c0.w
    mul_sat_pp r1.w, r2.x, c0.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.x, r0.x, r1.w
    mov_sat_pp r1.w, r3.z
    mad_pp r3.w, r0.x, c18.z, c18.w
    mul_pp r3.w, r3.w, c19.x
    mad r0.x, r0.x, r1.w, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r3.w
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.x, r0.w, r0.x
    dp3_sat_pp r0.y, r1, r3
    mad_pp r0.w, r0.y, c19.y, c19.z
    mul_pp r0.y, r0.y, r0.w
    exp_pp r0.y, r0.y
    lrp_pp r1.xyz, r0.y, c6.z, r5
    mul_pp r0.xyw, r0.x, r1.xyzz
    mad_pp r0.xyz, r2.yzww, r0.z, r0.xyww
    mul_pp r0.xyz, r4.yzww, r0
    mul r0.xyz, r2.x, r0
    mul r0.xyz, r0, c13
    cmp oC0.xyz, -r5.w, c2.x, r0
    mov oC0.w, c2.x

// approximately 134 instruction slots used (13 texture, 121 arithmetic)
