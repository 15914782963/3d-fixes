//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float2 DistanceFadeParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ObjectWorldPositionAndRadius;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   bool bEnableDistanceShadowFading;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   bEnableDistanceShadowFading  b1       1
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNESpecularAttenuation       c7       1
//   DNEResolution                c8       1
//   ObjectWorldPositionAndRadius c9       1
//   UniformPixelScalars_0        c10      1
//   LightColorAndFalloffExponent c11      1
//   DistanceFadeParameters       c12      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//

    ps_3_0
    def c2, -1, 1, 0, 2
    def c6, 1, 0.5, 0.200000003, -0.5
    def c13, 6.28318548, -3.14159274, 0.0500000007, 11.8915653
    def c14, 17.1891651, 9.76982021, 63.6942711, 0.5
    def c15, 0.0581761822, 0.102356032, 0.0840932205, 8
    def c16, 32, 0.00390625, 3.20000005, 10
    def c17, 0.100000001, 1, -0.333299994, -9.99999997e-007
    def c18, 0.0625, 0, 15, 0
    dcl_texcoord v0.xy
    dcl_texcoord3_pp v1.w
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_8D31AACE_359.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v3
    nrm_pp r1.xyz, v2
    cmp r0.w, vFace, c2.x, c2.y
    mul_pp r0.w, r0.w, c0.x
    mul_pp r2.xy, r0.z, r0.w
    mul_pp r2.z, r0.w, r2.y
    mad_pp r0.xyz, r2, c2.zzww, -r0
    texld_pp r2, c6, s0
    add r1.w, c10.x, v0.y
    add r1.w, r1.w, c2.y
    mad r1.w, r1.w, c6.z, c6.y
    frc r1.w, r1.w
    mad r1.w, r1.w, c13.x, c13.y
    sincos r3.y, r1.w
    add r1.w, c6.w, v0.y
    add r1.w, r1.w, r1.w
    mul r1.w, r1_abs.w, r3.y
    mul r3.x, r1.w, c13.z
    mov r3.y, c2.z
    add r2.yz, r3.xxyw, v0.xxyw
    mov r3.xyz, c9
    mul r3.xyz, r3, c15
    frc r3.xyz, r3_abs
    cmp r3.xyz, c9, r3, -r3
    mul r3.xy, r3, c14
    add r1.w, r3.y, r3.x
    mad r1.w, r3.z, c13.w, r1.w
    mad r1.w, r1.w, c14.z, c14.w
    frc r1.w, r1.w
    mad r1.w, r1.w, c13.x, c13.y
    sincos r3.y, r1.w
    add r1.w, r3.y, c2.y
    mul r1.w, r1.w, c6.y
    texld r3, r1.w, s4
    mul r1.w, r3.x, c15.w
    frc r2.w, r1.w
    add r1.w, r1.w, -r2.w
    mad r1.w, r1.w, c16.x, c16.x
    mul r1.w, r1.w, c16.y
    texld r3, r1.w, s4
    mul r1.w, r3.x, c16.z
    frc r1.w, r1_abs.w
    cmp r1.w, r3.x, r1.w, -r1.w
    mul r2.w, r1.w, c16.w
    frc r3.x, r2.w
    add r3.x, r2.w, -r3.x
    frc r2.w, r1.w
    add r3.y, r1.w, -r2.w
    mul r3.xy, r3, c17
    mad r2.yz, r2, c17.xxyw, r3.xxyw
    texld r3, r2.yzzw, s3
    mad r3, v1.w, r3.w, c17.z
    texkill r3
    if b0
      mad r2.yz, vPos.xxyw, c8.xxyw, c8.xzww
      mul r3.xy, r2.yzzw, v4.w
      if_ne c3.x, -c3.x
        texld r4, c18, s1
        add r1.w, -r4.y, v4.w
        mad r3.z, r4.x, r1.w, r3.x
        mov r3.xy, r3.zyzw
        mov r1.w, v4.w
      else
        mov r1.w, v4.w
      endif
      rcp r1.w, r1.w
      mul r2.yz, r1.w, r3.xxyw
      mad r2.yz, r2, c1.xxyw, c1.xwzw
      texld r3, r2.yzzw, s2
      mul_pp r2.yzw, r3.xxyz, r3.xxyz
      if b1
        dp3 r1.w, v4, v4
        rsq r1.w, r1.w
        rcp r1.w, r1.w
        add r1.w, -r1.w, c12.x
        mul_sat_pp r1.w, r1.w, c12.y
        mul_pp r1.w, r1.w, r1.w
        mad_pp r3.x, r3.w, r3.w, -r2.x
        mad_pp r3.xyz, r1.w, r3.x, r2.x
      else
        mov_pp r3.xyz, r2.x
      endif
      mul_pp r2.yzw, r2, r3.xxyz
    else
      mov_pp r2.yzw, r2.x
    endif
    mul_sat_pp r0.w, r1.z, r0.w
    add r1.w, r0.w, c17.w
    mul r0.w, r0.w, c7.w
    dp3_sat_pp r0.x, r0, r1
    add r0.y, r0.x, c17.w
    pow_pp r1.x, r0.x, c18.z
    mul r0.x, r1.x, c7.x
    mul r1.xyz, r0.w, c4
    cmp r1.xyz, r1.w, r1, c2.z
    mul_pp r0.xzw, r0.x, c5.xyyz
    cmp_pp r0.xyz, r0.y, r0.xzww, c2.z
    add_pp r0.xyz, r0, r1
    mul_pp r0.xyz, r2.yzww, r0
    mul oC0.xyz, r0, c11
    mov_pp oC0.w, c2.z

// approximately 127 instruction slots used (6 texture, 121 arithmetic)
