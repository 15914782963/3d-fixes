//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowTexture;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_4;
//   float4 UniformPixelScalars_5;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   CameraWorldPos               c8       1
//   DNEResolution                c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelVector_1         c11      1
//   UniformPixelVector_2         c12      1
//   UniformPixelVector_3         c13      1
//   UniformPixelVector_4         c14      1
//   UniformPixelScalars_1        c15      1
//   UniformPixelScalars_2        c16      1
//   UniformPixelScalars_3        c17      1
//   UniformPixelScalars_4        c18      1
//   UniformPixelScalars_5        c19      1
//   LightColorAndFalloffExponent c20      1
//   ShadowWarpFunctionTexture    s0       1
//   SceneColorTexture            s1       1
//   NvStereoFixTexture           s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   ShadowTexture                s5       1
//

    ps_3_0
    def c6, 0, -0.99000001, 10, 1.52876604
    def c21, 0.5, 0.0700000003, -9.99999997e-007, 0.930000007
    def c22, 0.693147004, 2, 0.125, 9.99999975e-006
    def c23, 1, 0, 1.41789806, 0.00999999978
    def c24, -5.55472994, -6.98316002, 0.0625, 0
    def c25, 100000, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5 v2.xyz
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_3261F5E2_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    add r0.xy, c8, v4
    mad r0.zw, vPos.xyxy, c9.xyxy, c9
    mul r1.xy, r0.zwzw, v4.w
    nrm_pp r2.xyz, v3
    mad_sat_pp r0.z, c7.x, v4.w, c7.y
    mul_pp r0.z, r0.z, c0.x
    rcp r0.w, c15.x
    mul_pp r3.xy, r0.w, r0
    mad_pp r0.xy, r0, r0.w, c11
    texld_pp r4, r0, s3
    dp2add_pp r0.x, r4, -r4, c23.x
    max_pp r1.w, r0.x, c23.y
    rsq_pp r0.x, r1.w
    rcp_pp r4.z, r0.x
    mov r5.xz, c23
    mad_pp r0.xy, r3, r5.z, c12
    texld_pp r6, r0, s3
    dp2add_pp r0.x, r6, -r6, c23.x
    max_pp r1.w, r0.x, c23.y
    rsq_pp r0.x, r1.w
    rcp_pp r6.z, r0.x
    add_pp r0.xyw, r4.xyzz, r6.xyzz
    nrm_pp r4.xyz, r0.xyww
    mul_pp r0.xyw, r4.xyzz, c16.x
    frc_pp r4.xyz, r0.xyww
    add_pp r0.xyw, r0, -r4.xyzz
    rcp r1.w, c16.x
    mad_pp r4.xyz, r0.xyww, r1.w, c23.yyww
    mov r2.w, c16.w
    mad_pp r3.xy, r2.w, r3, c13
    texld_pp r3, r3, s4
    lrp_sat_pp r2.w, r3.x, c17.z, c17.w
    mad_pp r0.xyw, r0, r1.w, c6.xxzy
    mad_pp r0.xyw, r2.w, r0, c23.yyzx
    nrm_pp r6.xyz, r0.xyww
    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mul_pp r3.yzw, r0.x, v1.xxyz
    mad_pp r0.xyw, v1.xyzz, r0.x, r2.xyzz
    nrm_pp r7.xyz, r0.xyww
    mov r5.zw, c6
    mad_pp r0.x, c18.y, r5.z, r5.w
    exp_pp r0.x, r0.x
    texld_pp r8, v0, s5
    mov_sat_pp r8.x, r8.x
    mov r8.yw, c21.x
    texld_pp r9, r8, s0
    dp3 r0.y, v2, v2
    add r0.w, -r0.y, c23.x
    mul r10, r9.x, r0.w
    mov r11, r10
    texkill r11
    mov r5.y, c21.y
    mad_pp r5.yzw, c5.w, r5.y, c5.xxyz
    mov_sat r0.y, r0.y
    add r0.y, -r0.y, c23.x
    pow_sat_pp r8.z, r0.y, c20.w
    texld_pp r8, r8.zwzw, s0
    dp3_pp r0.y, r6, r2
    add r0.w, -r0.y, c23.x
    cmp_pp r0.y, r0.y, r0_abs.w, c23.x
    add r0.w, r0.y, c21.z
    mul r1.w, r0.y, r0.y
    mad r2.x, r1.w, c21.w, c21.y
    add_pp r2.x, -r2.x, c23.x
    cmp_pp r2.x, r0.w, r2.x, c21.w
    mul_pp r2.xyz, r2.x, c14
    add_pp r8.yzw, r5.x, -c10.xxyz
    mul_pp r2.xyz, r2, r8.yzww
    mad_pp r2.xyz, r2, c4.w, c4
    dp3_sat_pp r2.w, r6, r3.yzww
    mul_pp r4.w, r2.w, c0.w
    mul_sat_pp r5.x, r8.x, c0.y
    mul_pp r5.x, r5.x, r5.x
    mul_pp r0.x, r0.x, r5.x
    dp3_sat_pp r5.x, r6, r7
    mad_pp r6.x, r0.x, c22.x, c22.y
    mul_pp r6.x, r6.x, c22.z
    mad r0.x, r0.x, r5.x, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r6.x
    mul_pp r0.x, r2.w, r0.x
    mul_pp r0.x, r0.z, r0.x
    dp3_sat_pp r0.z, r3.yzww, r7
    mad_pp r2.w, r0.z, c24.x, c24.y
    mul_pp r0.z, r0.z, r2.w
    exp_pp r0.z, r0.z
    lrp_pp r3.yzw, r0.z, c23.x, r5
    mul_pp r3.yzw, r0.x, r3
    mad_pp r2.xyz, r2, r4.w, r3.yzww
    mul_pp r2.xyz, r9.x, r2
    mul r2.xyz, r8.x, r2
    mul r2.xyz, r2, c20
    dp3_pp r0.x, r4, r4
    rsq_pp r0.x, r0.x
    mul_sat_pp r0.x, r0.x, r4.z
    add r0.z, r0.x, c21.z
    mul r0.x, r0.x, r0.x
    mul_pp r0.x, r0.x, r0.x
    if_ne c3.x, -c3.x
      texld r4, c24.zwzw, s2
      add r3.y, -r4.y, v4.w
      mad r1.z, r4.x, r3.y, r1.x
      mov r1.xy, r1.zyzw
      mov r1.z, v4.w
    else
      mov r1.z, v4.w
    endif
    rcp r1.z, r1.z
    mul r1.xy, r1.z, r1
    mad r4.xy, r1, c1, c1.wzzw
    mov r4.zw, c23.y
    texldl r4, r4, s1
    add r1.x, r4.w, -c2.y
    add r1.y, -r1.x, c22.w
    rcp r1.x, r1.x
    cmp r1.x, r1.y, c25.x, r1.x
    mad_pp r1.x, c2.x, r1.x, -v4.w
    lrp_pp r1.y, r3.x, c18.z, c18.w
    rcp r1.y, r1.y
    mul_sat_pp r1.x, r1.y, r1.x
    mul_pp r0.x, r0.x, r1.x
    cmp_pp r0.x, r0.z, r0.x, c23.y
    add_pp r0.x, r1.x, r0.x
    add_pp r0.x, r0.x, -c21.x
    frc_pp r0.z, -r0.x
    add_sat_pp r0.x, r0.z, r0.x
    mul_pp r0.y, r0.y, r1.w
    add r0.z, -c19.y, c19.x
    mul r0.y, r0.z, r0.y
    cmp r0.y, r0.w, r0.y, c23.y
    add_pp r0.y, r0.y, c19.y
    mul_pp r0.y, r1.x, r0.y
    mul_sat r2.w, r0.x, r0.y
    cmp oC0, -r10.w, c23.y, r2

// approximately 150 instruction slots used (9 texture, 141 arithmetic)
