//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 EdgeSampleOffsets[4];
//   float2 InvRandomAngleTextureSize;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D RandomAngleTexture;
//   float4 RefiningSampleOffsets[6];
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4x4 ScreenToShadowMatrix;
//   float2 ShadowBufferSize;
//   sampler2D ShadowDepthTexture;
//   float ShadowFadeFraction;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   InvRandomAngleTextureSize c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   RefiningSampleOffsets     c7       6
//   ScreenToShadowMatrix      c13      4
//   EdgeSampleOffsets         c17      4
//   ShadowBufferSize          c21      1
//   ShadowFadeFraction        c22      1
//   SceneColorTexture         s0       1
//   NvStereoFixTexture        s1       1
//   ShadowDepthTexture        s2       1
//   RandomAngleTexture        s3       1
//

    ps_3_0
    def c4, 0.0625, 0, 9.99999975e-006, 100000
    def c5, 0.999000013, 1, 0.5, -2
    def c6, 1, -1, 0, 0.03125
    def c23, 9.99999975e-005, -0.999899983, 0.0833333358, 0.699999988
    dcl_texcoord v0.xyw
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13


// Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-unreal-shadows --only-autofixed --git --quiet CRC32_E07F8C99_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

texldl r10, c220.z, s13
mov r11.xyw, v0
add r10.w, r11.w, -r10.y
mad r11.x, r10.w, r10.x, r11.x

    if_ne c3.x, -c3.x
      texld r0, c4, s1
      add r0.y, -r0.y, r11.w
      mad r0.x, r0.x, r0.y, r11.x
      mov r0.yz, r11.xyww
    else
      mov r0.xyz, r11.xyww
    endif
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.y
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c4.z
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c4.w, r0.x
    mul r0.x, r0.x, c2.x
    rcp r0.y, r11.w
    mul r0.zw, r0.y, r11.xyxy
    mul r0.zw, r0.x, r0
    mul r1, r0.w, c14

// Unreal Engine shadow fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-unreal-shadows --only-autofixed --git --quiet CRC32_E07F8C99_0.txt
add r10.w, r0.x, -r10.y
mad r0.z, -r10.w, r10.x, r0.z

    mad r1, c13, r0.z, r1
    mad r1, c15, r0.x, r1
    add r1, r1, c16
    rcp r0.x, r1.w
    mul r0.zw, r0.x, r1.xyxy
    min r2.z, r1.z, c5.x
    mad r1.zw, r11.xyxy, r0.y, c5.y
    mul r1.zw, r1, c0.xyxy
    mul r1.zw, r1, c5.z
    texld r3, r1.zwzw, s3
    mad_pp r3, r3.yxyx, -c5.w, -c5.y
    mul_pp r4, r3.wzwz, c6.xyxy
    mad r5, r4.zwzw, c17.xxzz, r0.zwzw
    mad_pp r5, r3.zwzw, c17.yyww, r5
    mul r2.xyw, r5.xyzx, c6.xxzz
    texldl r6, r2, s2
    mul r2.xyw, r5.zwzx, c6.xxzz
    texldl r5, r2, s2
    add r6, -r6, r2.z
    cmp_pp r6, r6, c6.z, c6.x
    dp4_pp r0.y, r6, c6.w
    add r5, r2.z, -r5
    cmp_pp r5, r5, c6.z, c6.x
    dp4_pp r1.z, r5, c6.w
    add_pp r0.y, r0.y, r1.z
    mad r5, r4.zwzw, c18.xxzz, r0.zwzw
    mad_pp r5, r3.zwzw, c18.yyww, r5
    mov_pp r6.xy, r5
    mov r6.zw, r2
    texldl r7, r6, s2
    mov_pp r6.xy, r5.zwzw
    texldl r5, r6, s2
    add r7, r2.z, -r7
    cmp_pp r7, r7, c6.z, c6.x
    dp4_pp r1.z, r7, c6.w
    add_pp r0.y, r0.y, r1.z
    add r5, r2.z, -r5
    cmp_pp r5, r5, c6.z, c6.x
    dp4_pp r1.z, r5, c6.w
    add_pp r0.y, r0.y, r1.z
    mad r5, r4.zwzw, c19.xxzz, r0.zwzw
    mad_pp r5, r3.zwzw, c19.yyww, r5
    mov_pp r6.xy, r5
    texldl r7, r6, s2
    mov_pp r6.xy, r5.zwzw
    texldl r5, r6, s2
    add r7, r2.z, -r7
    cmp_pp r7, r7, c6.z, c6.x
    dp4_pp r1.z, r7, c6.w
    add_pp r0.y, r0.y, r1.z
    add r5, r2.z, -r5
    cmp_pp r5, r5, c6.z, c6.x
    dp4_pp r1.z, r5, c6.w
    add_pp r0.y, r0.y, r1.z
    mad r4, r4, c20.xxzz, r0.zwzw
    mad_pp r3, r3, c20.yyww, r4
    mov_pp r6.xy, r3
    texldl r4, r6, s2
    mov_pp r6.xy, r3.zwzw
    texldl r3, r6, s2
    add r4, r2.z, -r4
    cmp_pp r4, r4, c6.z, c6.x
    dp4_pp r0.z, r4, c6.w
    add_pp r0.y, r0.z, r0.y
    add r3, r2.z, -r3
    cmp_pp r3, r3, c6.z, c6.x
    dp4_pp r0.z, r3, c6.w
    add_pp r0.y, r0.z, r0.y
    add r0.z, -r0.y, c23.x
    add r0.w, r0.y, c23.y
    cmp r0.w, r0.w, c6.z, c6.x
    cmp r0.z, r0.z, c4.y, r0.w
    if_ne r0.z, -r0.z
      mad_pp r3, r1.xyxy, r0.x, c7
      mov_pp r6.xy, r3
      texldl r4, r6, s2
      mov_pp r6.xy, r3.zwzw
      texldl r5, r6, s2
      add r4, r2.z, -r4.wxyz
      add r5, r2.z, -r5.wxyz
      cmp_pp r4, r4, c6.z, c6.x
      cmp_pp r5, r5, c6.z, c6.x
      mul r3, r3, c21.xyxy
      frc_pp r3, r3
      mov_pp r7.xy, r4
      mov_pp r7.zw, r5.xyxy
      mov_pp r5.xy, r4.zwzw
      lrp_pp r4, r3.yyww, r5, r7
      mad_pp r5, r1.xyxy, r0.x, c8
      mov_pp r6.xy, r5
      texldl r7, r6, s2
      mov_pp r6.xy, r5.zwzw
      texldl r8, r6, s2
      add r7, r2.z, -r7.wxyz
      add r8, r2.z, -r8.wxyz
      cmp_pp r7, r7, c6.z, c6.x
      cmp_pp r8, r8, c6.z, c6.x
      mul r5, r5, c21.xyxy
      frc_pp r5, r5
      mov_pp r9.xy, r7
      mov_pp r9.zw, r8.xyxy
      mov_pp r8.xy, r7.zwzw
      lrp_pp r7, r5.yyww, r8, r9
      lrp_pp r8.xy, r3.xzzw, r4.ywzw, r4.xzzw
      lrp_pp r8.zw, r5.xyxz, r7.xyyw, r7.xyxz
      dp4_pp r0.z, r8, c23.z
      mad_pp r3, r1.xyxy, r0.x, c9
      mov_pp r6.xy, r3
      texldl r4, r6, s2
      mov_pp r6.xy, r3.zwzw
      texldl r5, r6, s2
      add r4, r2.z, -r4.wxyz
      add r5, r2.z, -r5.wxyz
      cmp_pp r4, r4, c6.z, c6.x
      cmp_pp r5, r5, c6.z, c6.x
      mul r3, r3, c21.xyxy
      frc_pp r3, r3
      mov_pp r7.xy, r4
      mov_pp r7.zw, r5.xyxy
      mov_pp r5.xy, r4.zwzw
      lrp_pp r4, r3.yyww, r5, r7
      mad_pp r5, r1.xyxy, r0.x, c10
      mov_pp r6.xy, r5
      texldl r7, r6, s2
      mov_pp r6.xy, r5.zwzw
      texldl r8, r6, s2
      add r7, r2.z, -r7.wxyz
      add r8, r2.z, -r8.wxyz
      cmp_pp r7, r7, c6.z, c6.x
      cmp_pp r8, r8, c6.z, c6.x
      mul r5, r5, c21.xyxy
      frc_pp r5, r5
      mov_pp r9.xy, r7
      mov_pp r9.zw, r8.xyxy
      mov_pp r8.xy, r7.zwzw
      lrp_pp r7, r5.yyww, r8, r9
      lrp_pp r8.xy, r3.xzzw, r4.ywzw, r4.xzzw
      lrp_pp r8.zw, r5.xyxz, r7.xyyw, r7.xyxz
      dp4_pp r0.w, r8, c23.z
      add_pp r0.z, r0.w, r0.z
      mad_pp r3, r1.xyxy, r0.x, c11
      mov_pp r6.xy, r3
      texldl r4, r6, s2
      mov_pp r6.xy, r3.zwzw
      texldl r5, r6, s2
      add r4, r2.z, -r4.wxyz
      add r5, r2.z, -r5.wxyz
      cmp_pp r4, r4, c6.z, c6.x
      cmp_pp r5, r5, c6.z, c6.x
      mul r3, r3, c21.xyxy
      frc_pp r3, r3
      mov_pp r7.xy, r4
      mov_pp r7.zw, r5.xyxy
      mov_pp r5.xy, r4.zwzw
      lrp_pp r4, r3.yyww, r5, r7
      mad_pp r1, r1.xyxy, r0.x, c12
      mov_pp r6.xy, r1
      texldl r5, r6, s2
      mov_pp r6.xy, r1.zwzw
      texldl r6, r6, s2
      add r5, r2.z, -r5.wxyz
      add r2, r2.z, -r6.wxyz
      cmp_pp r5, r5, c6.z, c6.x
      cmp_pp r2, r2, c6.z, c6.x
      mul r1, r1, c21.xyxy
      frc_pp r1, r1
      mov_pp r6.xy, r5
      mov_pp r6.zw, r2.xyxy
      mov_pp r2.xy, r5.zwzw
      lrp_pp r5, r1.yyww, r2, r6
      lrp_pp r2.xy, r3.xzzw, r4.ywzw, r4.xzzw
      lrp_pp r2.zw, r1.xyxz, r5.xyyw, r5.xyxz
      dp4_pp r0.x, r2, c23.z
      add_pp r0.x, r0.x, r0.z
      lrp_pp r1.x, c23.w, r0.x, r0.y
      mov_pp r0.y, r1.x
    endif
    mul_pp r0.x, r0.y, r0.y
    mul_pp r0.x, r0.y, r0.x
    mad r0.x, r0.x, r0.x, -c5.y
    mov r0.y, c5.y
    mad_pp r0.x, c22.x, r0.x, r0.y
    rsq_pp r0.x, r0.x
    rcp_pp oC0, r0.x

// approximately 231 instruction slots used (44 texture, 187 arithmetic)
