//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4x4 DNECubemapParallaxBox;
//   float4 DNECubemapParallaxBoxCenter;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D HeightmapTexture;
//   float4 LightColorAndFalloffExponent;
//   float3x3 LocalToWorldMatrix;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenDoorFadeSettings;
//   float4 ScreenDoorFadeSettings2;
//   sampler2D ScreenDoorNoiseTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   bool bEnableScreenDoorFade;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bEnableScreenDoorFade        b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNECubemapParallaxBox        c7       3
//   LocalToWorldMatrix           c10      3
//   DNEEnvMapParameter           c13      1
//   DNEMiscParameter             c14      1
//   DNECubemapPosition           c15      1
//   DNECubemapParallaxBoxCenter  c16      1
//   CameraWorldPos               c17      1
//   DNEResolution                c18      1
//   ScreenDoorFadeSettings       c19      1
//   ScreenDoorFadeSettings2      c20      1
//   UniformPixelVector_0         c21      1
//   UniformPixelVector_1         c22      1
//   LightColorAndFalloffExponent c23      1
//   UpperSkyColor                c24      1
//   AmbientColorAndSkyFactor     c25      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   DNEEnvironmentTexture        s2       1
//   ScreenDoorNoiseTexture       s3       1
//   PixelTexture2D_0             s4       1
//   PixelTexture2D_1             s5       1
//   PixelTexture2D_2             s6       1
//   HeightmapTexture             s7       1
//   VAOBuffer                    s8       1
//

    ps_3_0
    def c6, 10, 1.52876604, -5.55472994, -6.98316002
    def c26, 2, -1, 1, 0
    def c27, 0.0625, 0, 1, 0.5
    def c28, 0.693147004, 2, 0.125, 0
    dcl_texcoord4 v0.xyz
    dcl_texcoord6 v1.xyz
    dcl_texcoord5 v2
    dcl_texcoord1 v3.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_9821331A_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    texld r0, v3, s7
    mad r0.xy, r0.zwzw, c26.x, c26.y
    dp2add r1.x, r0, -r0, c26.z
    rsq r1.x, r1.x
    rcp r0.z, r1.x
    mov r0.w, -r0.x
    dp2add r1.x, r0.zwzw, r0.zwzw, c26.w
    rsq r1.x, r1.x
    mul r1.yz, r0.xwzw, r1.x
    mov r1.x, c26.w
    mul r2.xyz, r0.zxyw, r1
    mad r2.xyz, r0.yzxw, r1.yzxw, -r2
    nrm r3.xyz, v0
    dp2add_pp r4.x, r1.zyzw, r3.xzzw, c26.w
    dp3_pp r4.y, r2, r3
    dp3_pp r4.z, r0, r3
    nrm r3.xyz, v1
    dp2add_pp r5.x, r1.zyzw, r3.xzzw, c26.w
    dp3_pp r5.y, r2, r3
    dp3_pp r5.z, r0, r3
    mov r3.zw, c26
    dp2add_pp r6.x, c10.xzzw, r1.zyzw, r3.w
    dp3_pp r6.y, c10, r2
    dp3_pp r6.z, c10, r0
    dp2add_pp r7.x, c11.xzzw, r1.zyzw, r3.w
    dp3_pp r7.y, c11, r2
    dp3_pp r7.z, c11, r0
    dp2add_pp r1.x, c12.xzzw, r1.zyzw, r3.w
    dp3_pp r1.y, c12, r2
    dp3_pp r1.z, c12, r0
    add r0.xyz, c17, v2
    mad r2.xy, vPos, c18, c18.zwzw
    mul r2.xy, r2, v2.w
    nrm_pp r8.xyz, r5
    mad_sat_pp r0.w, c14.x, v2.w, c14.y
    mul_pp r1.w, r0.w, c0.x
    dp3_pp r3.x, r4, r4
    rsq_pp r3.x, r3.x
    mul_pp r5.xyz, r3.x, r4
    mad_pp r9.xyz, r8.z, c26.wwxw, -r8
    mad_pp r3.xyw, r4.xyzz, r3.x, r8.xyzz
    nrm_pp r4.xyz, r3.xyww
    texld_pp r10, v3, s6
    mad_pp r3.x, r10.w, c6.x, c6.y
    exp_pp r3.x, r3.x
    texld_pp r11, v3, s5
    mad_pp r8.xyw, r11.xyzz, c5.w, c5.xyzz
    if b0
      mad r3.yw, vPos.xxzy, c20.xzzw, c20.xxzy
      texld_pp r11, r3.ywzw, s3
      mad r3.y, c19.y, r11.x, c19.z
      add r3.w, r3.z, -c19.x
      add r11, -r3.w, r3.y
      texkill r11
    endif
    texld_pp r11, v3, s4
    mul_pp r10.xyz, r11, c22
    add_pp r3.yzw, r3.z, -c21.xxyz
    mul_pp r3.yzw, r3, r10.xxyz
    mad_pp r3.yzw, r3, c4.w, c4.xxyz
    dp3_pp r6.x, r6, r9
    dp3_pp r6.y, r7, r9
    dp3_pp r6.z, r1, r9
    mul_pp r1.xyz, r6.y, c8
    mad_pp r1.xyz, c7, r6.x, r1
    mad_pp r1.xyz, c9, r6.z, r1
    add r7.xyz, r0, -c16
    mul r9.xyz, r7.y, c8
    mad r7.xyw, c7.xyzz, r7.x, r9.xyzz
    mad r7.xyz, c9, r7.z, r7.xyww
    add r9.xyz, -r7, c26.z
    rcp r10.x, r1.x
    rcp r10.y, r1.y
    rcp r10.z, r1.z
    mul_pp r1.xyz, r9, r10
    add r7.xyz, -r7, c26.y
    mul_pp r7.xyz, r10, r7
    max_pp r9.xyz, r1, r7
    min_pp r1.x, r9.z, r9.y
    min_pp r4.w, r1.x, r9.x
    mad r0.xyz, r4.w, r6, r0
    add_pp r6.xyz, r0, -c15
    mad_pp r6.w, c14.z, r10.w, c14.w
    texldl_pp r6, r6, s2
    mov_sat_pp r0.x, r8.z
    max_pp r1.xyz, r10.w, r8.xyww
    mad_pp r0.y, r0.x, c6.z, c6.w
    mul_pp r0.x, r0.x, r0.y
    exp_pp r0.x, r0.x
    lrp_pp r7.xyz, r0.x, r1, r8.xyww
    mul_pp r0.xyz, r6, r7
    mul_pp r0.xyz, r0, c13
    mad_pp r0.xyz, r0.w, r0, c21
    mul r1.xyz, r3.yzww, c24
    mad_pp r0.xyz, r1, c25.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r6, c27, s1
      add r1.x, -r6.y, v2.w
      mad r2.z, r6.x, r1.x, r2.x
      mov r2.w, v2.w
      mov r1.xyz, r2.zyww
    else
      mov_pp r1.xyz, c26.w
    endif
    mov r2.z, v2.w
    cmp r1.xyz, -r0.w, r2, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r2, r1, s8
    texld_pp r6, c27.zwzw, s0
    mov_sat_pp r0.w, r5.z
    mul_pp r1.x, r0.w, c0.w
    mov_sat_pp r1.y, c0.y
    mul_pp r1.y, r1.y, r1.y
    mul_pp r1.y, r3.x, r1.y
    mov_sat_pp r1.z, r4.z
    mad_pp r2.y, r1.y, c28.x, c28.y
    mul_pp r2.y, r2.y, c28.z
    mad r1.y, r1.y, r1.z, -r1.y
    exp_pp r1.y, r1.y
    mul_pp r1.y, r1.y, r2.y
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.w, r0.w
    dp3_sat_pp r1.y, r5, r4
    mad_pp r1.z, r1.y, c6.z, c6.w
    mul_pp r1.y, r1.y, r1.z
    exp_pp r1.y, r1.y
    lrp_pp r2.yzw, r1.y, c26.z, r8.xxyw
    mul_pp r1.yzw, r0.w, r2
    mad_pp r1.xyz, r3.yzww, r1.x, r1.yzww
    mul_pp r1.xyz, r6.x, r1
    mul_pp r1.xyz, r1, c23
    mad_pp r0.xyz, r0, r2.x, r1
    mad_pp oC0.xyz, r3.yzww, c25, r0
    rcp r0.x, v2.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 158 instruction slots used (10 texture, 148 arithmetic)
