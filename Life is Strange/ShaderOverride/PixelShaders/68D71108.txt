//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEMiscParameter;
//   sampler2D DNEReflectionTexture;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D HeightmapTexture;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenDoorFadeSettings;
//   float4 ScreenDoorFadeSettings2;
//   sampler2D ScreenDoorNoiseTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   bool bEnableScreenDoorFade;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bEnableScreenDoorFade        b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   DNEResolution                c8       1
//   ScreenDoorFadeSettings       c9       1
//   ScreenDoorFadeSettings2      c10      1
//   UniformPixelVector_0         c11      1
//   UniformPixelVector_1         c12      1
//   LightColorAndFalloffExponent c13      1
//   UpperSkyColor                c14      1
//   AmbientColorAndSkyFactor     c15      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   DNEReflectionTexture         s2       1
//   ScreenDoorNoiseTexture       s3       1
//   PixelTexture2D_0             s4       1
//   PixelTexture2D_1             s5       1
//   PixelTexture2D_2             s6       1
//   HeightmapTexture             s7       1
//   VAOBuffer                    s8       1
//

    ps_3_0
    def c6, 2, -1, 1, 0
    def c16, 10, 1.52876604, 0.5, -0.5
    def c17, -5.55472994, -6.98316002, 0.0625, 0
    def c18, 0.125, 0, 0, 0
    def c19, 1, 0.5, 0.693147004, 2
    dcl_texcoord4 v0.xyz
    dcl_texcoord6 v1.xyz
    dcl_texcoord5 v2.w
    dcl_texcoord1 v3.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_68D71108_360.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    texld r0, v3, s7
    mad r0.xy, r0.zwzw, c6.x, c6.y
    dp2add r1.x, r0, -r0, c6.z
    rsq r1.x, r1.x
    rcp r0.z, r1.x
    mov r0.w, -r0.x
    dp2add r1.x, r0.zwzw, r0.zwzw, c6.w
    rsq r1.x, r1.x
    mul r1.yz, r0.xwzw, r1.x
    mov r1.x, c6.w
    mul r2.xyz, r0.zxyw, r1
    mad r2.xyz, r0.yzxw, r1.yzxw, -r2
    nrm r3.xyz, v0
    dp2add_pp r4.x, r1.zyzw, r3.xzzw, c6.w
    dp3_pp r4.y, r2, r3
    dp3_pp r4.z, r0, r3
    nrm r3.xyz, v1
    dp2add_pp r1.x, r1.zyzw, r3.xzzw, c6.w
    dp3_pp r1.y, r2, r3
    dp3_pp r1.z, r0, r3
    mad r0.xy, vPos, c8, c8.zwzw
    mul r0.xy, r0, v2.w
    nrm_pp r2.xyz, r1
    mad_sat_pp r1.x, c7.x, v2.w, c7.y
    mul_pp r1.y, r1.x, c0.x
    dp3_pp r1.z, r4, r4
    rsq_pp r1.z, r1.z
    mul_pp r3.xyz, r1.z, r4
    mad_pp r2.xyw, r4.xyzz, r1.z, r2.xyzz
    nrm_pp r4.xyz, r2.xyww
    texld_pp r5, v3, s6
    mad_pp r1.z, r5.w, c16.x, c16.y
    exp_pp r1.z, r1.z
    texld_pp r6, v3, s5
    mad_pp r2.xyw, r6.xyzz, c5.w, c5.xyzz
    if b0
      mad r5.xy, vPos, c10.zwzw, c10
      texld_pp r6, r5, s3
      mad r1.w, c9.y, r6.x, c9.z
      mov r5.z, c6.z
      add r3.w, r5.z, -c9.x
      add r6, r1.w, -r3.w
      texkill r6
    endif
    texld_pp r6, v3, s4
    mul_pp r5.xyz, r6, c12
    mov r6.z, c6.z
    add_pp r6.xyz, r6.z, -c11
    mul_pp r5.xyz, r5, r6
    mad_pp r5.xyz, r5, c4.w, c4
    rcp r1.w, v2.w
    mul r6.xy, r0, r1.w
    mad_pp r6.xy, r6, c16.zwzw, c16.z
    mad_pp r6.w, -c7.w, r5.w, c7.w
    mov r6.z, c6.w
    texldl_pp r6, r6, s2
    mov_sat_pp r2.z, r2.z
    max_pp r7.xyz, r5.w, r2.xyww
    mad_pp r3.w, r2.z, c17.x, c17.y
    mul_pp r2.z, r2.z, r3.w
    exp_pp r2.z, r2.z
    lrp_pp r8.xyz, r2.z, r7, r2.xyww
    mul_pp r6.xyz, r6, r8
    mul_pp r6.xyz, r6, c7.z
    mad_pp r6.xyz, r1.x, r6, c11
    mul r7.xyz, r5, c14
    mad_pp r6.xyz, r7, c15.w, r6
    abs r1.x, c3.x
    if_ne c3.x, -c3.x
      texld r7, c17.zwzw, s1
      add r2.z, -r7.y, v2.w
      mad r0.z, r7.x, r2.z, r0.x
      mov r0.w, v2.w
      mov r7.xyz, r0.zyww
    else
      mov r7.xyz, c6.w
    endif
    mov r0.z, v2.w
    cmp r0.xyz, -r1.x, r0, r7
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s8
    texld_pp r7, c19, s0
    mov_sat_pp r0.y, r3.z
    mul_pp r0.z, r0.y, c0.w
    mov_sat_pp r0.w, c0.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.z, r0.w
    mov_sat_pp r1.x, r4.z
    mad_pp r1.z, r0.w, c19.z, c19.w
    mul_pp r1.z, r1.z, c18.x
    mad r0.w, r0.w, r1.x, -r0.w
    exp_pp r0.w, r0.w
    mul_pp r0.w, r0.w, r1.z
    mul_pp r0.y, r0.y, r0.w
    mul_pp r0.y, r1.y, r0.y
    dp3_sat_pp r0.w, r3, r4
    mad_pp r1.x, r0.w, c17.x, c17.y
    mul_pp r0.w, r0.w, r1.x
    exp_pp r0.w, r0.w
    lrp_pp r1.xyz, r0.w, c6.z, r2.xyww
    mul_pp r1.xyz, r0.y, r1
    mad_pp r0.yzw, r5.xxyz, r0.z, r1.xxyz
    mul_pp r0.yzw, r7.x, r0
    mul_pp r0.yzw, r0, c13.xxyz
    mad_pp r0.xyz, r6, r0.x, r0.yzww
    mad_pp oC0.xyz, r5, c15, r0
    mad oC0.w, c2.x, r1.w, c2.y

// approximately 126 instruction slots used (10 texture, 116 arithmetic)
