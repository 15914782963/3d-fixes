//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNESpecularAttenuation       c7       1
//   DNEResolution                c8       1
//   UniformPixelVector_0         c9       1
//   UniformPixelVector_1         c10      1
//   UniformPixelScalars_0        c11      1
//   LightColorAndFalloffExponent c12      1
//   UpperSkyColor                c13      1
//   AmbientColorAndSkyFactor     c14      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   PixelTexture2D_0             s2       1
//   VAOBuffer                    s3       1
//

    ps_3_0
    def c6, 0.0769230798, 1, 0.0625, 0
    def c15, -0.75, 0.100000001, 13, -0.333299994
    def c16, 0.200000003, 0.5, 6.28318548, -3.14159274
    def c17, 1, 0.5, -9.99999997e-007, 15
    def c18, -1, 1, 0, 2
    dcl_texcoord v0.xy
    dcl_texcoord2 v1.xy
    dcl_texcoord4 v2.xyz
    dcl_texcoord6 v3.xyz
    dcl_texcoord5 v4.w
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_E4C39F9D_723.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c8, c8.zwzw
    mul r0.xy, r0, v4.w
    nrm_pp r1.xyz, v3
    nrm_pp r2.xyz, v2
    cmp r1.w, vFace, c18.x, c18.y
    mul_pp r1.w, r1.w, c0.x
    mad_pp r1.xyz, r1.z, c18.zzww, -r1
    add r2.w, c11.x, v1.x
    mad r2.w, v0.y, v0.y, r2.w
    mad r2.w, r2.w, c16.x, c16.y
    frc r2.w, r2.w
    mad r2.w, r2.w, c16.z, c16.w
    sincos r3.y, r2.w
    add r2.w, c15.x, v0.y
    frc r3.x, r2.w
    add r3.x, r2.w, -r3.x
    mul r2.w, r2.w, r3.x
    mul r3.x, r2_abs.w, r3.y
    mov r3.y, c18.z
    mul r2.w, c15.y, v1.y
    mad r3.xy, r2.w, r3, v0
    add r2.w, v1.y, v1.x
    frc r3.z, r2_abs.w
    cmp r2.w, r2.w, r3.z, -r3.z
    mul r3.z, r2.w, c15.z
    frc r3.w, r3.z
    add r4.x, -r3.w, r3.z
    frc r3.z, r2.w
    add r4.y, r2.w, -r3.z
    mul r3.zw, r4.xyxy, c6.xyxy
    mad r3.xy, r3, c6, r3.zwzw
    texld r3, r3, s2
    mov r4, c10
    mad r5, r4.w, r3.w, c15.w
    texkill r5
    mad_pp r3.xyz, r4, r3, c9
    mov r4.xyz, c4
    mul r5.xyz, r4, c13
    mad_pp r3.xyz, r5, c14.w, r3
    abs r2.w, c3.x
    if_ne c3.x, -c3.x
      texld r5, c6.zwzw, s1
      add r3.w, -r5.y, v4.w
      mad r0.z, r5.x, r3.w, r0.x
      mov r0.w, v4.w
      mov r5.xyz, r0.zyww
    else
      mov r5.xyz, c18.z
    endif
    mov r0.z, v4.w
    cmp r0.xyz, -r2.w, r0, r5
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s3
    texld_pp r5, c17, s0
    mul_sat_pp r0.y, r2.z, r1.w
    add r0.z, r0.y, c17.z
    mul r0.y, r0.y, c7.w
    dp3_sat_pp r0.w, r1, r2
    add r1.x, r0.w, c17.z
    pow_pp r1.y, r0.w, c17.w
    mul r0.w, r1.y, c7.x
    mul r1.yzw, r0.y, c4.xxyz
    cmp r1.yzw, r0.z, r1, c18.z
    mul_pp r0.yzw, r0.w, c5.xxyz
    cmp_pp r0.yzw, r1.x, r0, c18.z
    add_pp r0.yzw, r0, r1
    mul_pp r0.yzw, r5.x, r0
    mul_pp r0.yzw, r0, c12.xxyz
    mad_pp r0.xyz, r3, r0.x, r0.yzww
    mad_pp oC0.xyz, r4, c14, r0
    rcp r0.x, v4.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 89 instruction slots used (4 texture, 85 arithmetic)
