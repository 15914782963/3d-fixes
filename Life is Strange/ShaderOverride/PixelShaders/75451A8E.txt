//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float3 DecalLocalBinormal;
//   float3 DecalLocalTangent;
//   float2 DecalNearFarPlaneDistance;
//   float4 DiffuseOverrideParameter;
//   sampler2D HeightmapTexture;
//   float4 LightMapScale[2];
//   sampler2D LightMapTextures[2];
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEEnvMapParameter        c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   LightMapScale             c7       2
//   DNEMiscParameter          c9       1
//   DNECubemapPosition        c10      1
//   CameraWorldPos            c11      1
//   DNEResolution             c12      1
//   DecalNearFarPlaneDistance c13      1
//   UniformPixelVector_0      c14      1
//   DecalLocalBinormal        c15      1
//   DecalLocalTangent         c16      1
//   UpperSkyColor             c17      1
//   AmbientColorAndSkyFactor  c18      1
//   LightMapTextures          s0       2
//   NvStereoFixTexture        s2       1
//   DNEEnvironmentTexture     s3       1
//   PixelTexture2D_0          s4       1
//   PixelTexture2D_1          s5       1
//   PixelTexture2D_2          s6       1
//   HeightmapTexture          s7       1
//   VAOBuffer                 s8       1
//

    ps_3_0
    def c6, 2, -1, 1, 0.00100000005
    def c19, -0.5, -5.55472994, -6.98316002, 0
    def c20, 0.816496611, 0.577350259, 0, 0.0625
    def c21, -0.707106769, -0.408248305, 0.577350259, 0.707106769
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xyw
    dcl_texcoord2 v2.xy
    dcl_texcoord6 v3.xyz
    dcl_texcoord5 v4
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_cube s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_75451A8E_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    texld r0, v0, s7
    mad r0.xy, r0.zwzw, c6.x, c6.y
    dp2add r1.x, r0, -r0, c6.z
    rsq r1.x, r1.x
    rcp r0.z, r1.x
    mul r1.xyz, r0, c16.zxyw
    mad r1.xyz, r0.zxyw, c16, -r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul r1.xyz, r1.w, r1
    mul r2.xyz, r0.zxyw, r1
    mad r1.xyz, r0.yzxw, r1.yzxw, -r2
    mul r2.xyz, r0, c15.zxyw
    mad r2.xyz, r0.zxyw, c15, -r2
    dp3 r1.w, r2, r2
    rsq r1.w, r1.w
    mul r2.xyz, r1.w, r2
    mul r3.xyz, r0.zxyw, r2
    mad r2.xyz, r0.yzxw, r2.yzxw, -r3
    nrm r3.xyz, v3
    dp3_pp r4.x, r1, r3
    dp3_pp r4.y, r2, r3
    dp3_pp r4.z, r0, r3
    add r3.xyz, c11, v4
    mad r5.xy, vPos, c12, c12.zwzw
    mul r5.xy, r5, v4.w
    nrm_pp r6.xyz, r4
    mad_sat_pp r1.w, c9.x, v4.w, c9.y
    texld_pp r4, v1, s4
    mad_pp r4.xyz, r4, c6.x, c6.y
    dp3_pp r2.w, r4, r4
    rsq_pp r2.w, r2.w
    mul_pp r7.yzw, r2.w, r4.xxyz
    dp3_pp r2.w, r7.yzww, r6
    mul_pp r4.xyz, r2.w, r7.yzww
    mad_pp r4.xyz, r4, c6.x, -r6
    texld_pp r6, v1, s6
    mad_pp r6.xyz, r6, c5.w, c5
    add r8.xy, c6.z, -v1
    mul r8.xy, r8, v1
    add r3.w, -c13.x, v1.w
    add r8.z, r3.w, c6.w
    add r3.w, c13.y, -v1.w
    add r8.w, r3.w, c6.w
    texkill r8
    texld_pp r8, v1, s5
    mov_sat_pp r3.w, r8.w
    add_pp r9, r3.w, c19.x
    texkill r9
    mov r9.z, c6.z
    add_pp r9.xyz, r9.z, -c14
    mul_pp r8.xyz, r8, r9
    mad_pp r8.xyz, r8, c4.w, c4
    mov r9.x, r1.x
    mov r9.y, r2.x
    mov r9.z, r0.x
    dp3_pp r10.x, r9, r4
    mov r11.y, r1.y
    mov r11.z, r2.y
    mov r11.x, r0.y
    dp3_pp r10.y, r11.yzxw, r4
    mov r12.x, r1.z
    mov r12.z, r2.z
    mov r12.y, r0.z
    dp3_pp r10.z, r12.xzyw, r4
    add r3.xyz, r3, -c10
    mad_pp r3.xyz, c0.w, r3, r10
    mad_pp r3.w, c9.z, r4.w, c9.w
    texldl_pp r3, r3, s3
    mov_sat_pp r2.w, r2.w
    max_pp r10.xyz, r4.w, r6
    mad_pp r3.w, r2.w, c19.y, c19.z
    mul_pp r2.w, r2.w, r3.w
    exp_pp r2.w, r2.w
    lrp_pp r4.xyz, r2.w, r10, r6
    mul_pp r3.xyz, r3, r4
    mul_pp r3.xyz, r3, c0
    mad_pp r3.xyz, r1.w, r3, c14
    mov r0.w, -r0.x
    dp2add r0.w, r0.zwzw, r0.zwzw, c19.w
    rsq r0.w, r0.w
    mul r4.z, r0.w, r12.y
    mov r4.x, c19.w
    mul r4.y, r0.w, -r0.x
    mul r6.xyz, r0.zxyw, r4
    mad r0.xyz, r0.yzxw, r4.yzxw, -r6
    mov r11.z, r0.y
    mov r11.y, c19.w
    mov r12.z, r4.y
    mov r12.x, r0.z
    mul r6.xyz, r11, r12
    mad r6.xyz, r11.zxyw, r12.yzxw, -r6
    mov r9.x, r4.z
    mov r9.y, r0.x
    dp3 r0.w, r6, r9
    mul r0.xyz, r0.w, r0
    nrm r6.xyz, r0
    dp2add_pp r0.x, r4.zyzw, r1.xzzw, c19.w
    dp2add_pp r0.y, r4.zyzw, r2.xzzw, c19.w
    dp3_pp r1.x, r6, r1
    dp3_pp r1.y, r6, r2
    dp2add_pp r0.x, r7.yzzw, r0, c19.w
    dp2add_pp r7.x, r7.yzzw, r1, c19.w
    dp2add_sat_pp r1.x, r7.xwzw, c20, c20.z
    mov_pp r0.yz, r7.xxww
    dp3_sat_pp r1.y, r0, c21
    dp3_sat_pp r1.z, r0.yzxw, c21.yzww
    mul_pp r0.xyz, r1, r1
    texld r1, v2, s0
    mul_pp r1.xyz, r1, c7
    texld r2, v2, s1
    mul_pp r2.xyz, r2, c8
    dp3_pp r0.x, r2, r0
    mul_pp r0.xyz, r0.x, r1
    mad_pp r0.xyz, r8, r0, r3
    mul r1.xyz, r8, c17
    mad_pp r0.xyz, r1, c18.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r1, c20.wzzw, s2
      add r1.y, -r1.y, v4.w
      mad r5.z, r1.x, r1.y, r5.x
      mov r5.w, v4.w
      mov r1.xyz, r5.zyww
    else
      mov r1.xyz, c19.w
    endif
    mov r5.z, v4.w
    cmp r1.xyz, -r0.w, r5, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s8
    mul r1.yzw, r8.xxyz, c18.xxyz
    mad_pp oC0.xyz, r0, r1.x, r1.yzww
    rcp r0.x, v4.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 153 instruction slots used (10 texture, 143 arithmetic)
