//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_5;
//   float4 UniformPixelScalars_6;
//   float4 UniformPixelScalars_7;
//   float4 UniformPixelScalars_8;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//   float3 UpperSkyColor;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   CameraWorldPos               c7       1
//   DNEResolution                c8       1
//   UniformPixelVector_0         c9       1
//   UniformPixelVector_1         c10      1
//   UniformPixelVector_2         c11      1
//   UniformPixelVector_3         c12      1
//   UniformPixelVector_4         c13      1
//   UniformPixelVector_5         c14      1
//   UniformPixelVector_6         c15      1
//   UniformPixelScalars_1        c16      1
//   UniformPixelScalars_2        c17      1
//   UniformPixelScalars_3        c18      1
//   UniformPixelScalars_5        c19      1
//   UniformPixelScalars_6        c20      1
//   UniformPixelScalars_7        c21      1
//   UniformPixelScalars_8        c22      1
//   LightColorAndFalloffExponent c23      1
//   UpperSkyColor                c24      1
//   AmbientColorAndSkyFactor     c25      1
//   ShadowWarpFunctionTexture    s0       1
//   SceneColorTexture            s1       1
//   NvStereoFixTexture           s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//

    ps_3_0
    def c5, 0.930000007, 0.0700000003, 1, 0.5
    def c6, 1, 0, 1.41789806, 0.00999999978
    def c26, 0.0625, 0, 9.99999975e-006, 100000
    def c27, 1.37, 0, -0.99000001, -9.99999997e-007
    dcl_texcoord3 v0.xyz
    dcl_texcoord4 v1
    dcl_texcoord6 v2.xyz
    dcl_texcoord5 v3.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_F7623105_676.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    add r0.xy, c7, v3
    mad r0.zw, vPos.xyxy, c8.xyxy, c8
    mul r1.xy, r0.zwzw, v3.w
    nrm_pp r2.xyz, v2
    dp3_pp r0.z, v0, v0
    rsq_pp r0.z, r0.z
    mul_sat_pp r0.z, r0.z, v0.z
    rcp r0.w, c16.x
    mul_pp r3.xy, r0.w, r0
    mad_pp r0.xy, r0, r0.w, c10
    texld_pp r4, r0, s3
    dp2add_pp r0.x, r4, -r4, c6.x
    max_pp r2.w, r0.x, c6.y
    rsq_pp r0.x, r2.w
    rcp_pp r4.z, r0.x
    mov r5.xz, c6
    mad_pp r0.xy, r3, r5.z, c11
    texld_pp r6, r0, s3
    dp2add_pp r0.x, r6, -r6, c6.x
    max_pp r2.w, r0.x, c6.y
    rsq_pp r0.x, r2.w
    rcp_pp r6.z, r0.x
    add_pp r0.xyw, r4.xyzz, r6.xyzz
    nrm_pp r4.xyz, r0.xyww
    mul_pp r0.xyw, r4.xyzz, c17.x
    frc_pp r4.xyz, r0.xyww
    add_pp r0.xyw, r0, -r4.xyzz
    rcp r2.w, c17.x
    mad_pp r4.xyz, r0.xyww, r2.w, c6.yyww
    mov r3.w, c17.w
    mad_pp r3.zw, r3.w, r3.xyxy, c12.xyxy
    texld_pp r6, r3.zwzw, s4
    lrp_pp r3.z, r6.x, c18.z, c18.w
    mul_pp r5.yz, r3.xxyw, c19.x
    mov r7.x, c19.x
    mad_pp r3.xy, r7.x, r3, c13
    texld_pp r7, r3, s5
    mov r3.x, c27.x
    mad_pp r3.xy, r5.yzzw, r3.x, c14
    texld_pp r8, r3, s5
    mul_pp r3.x, r7.y, r8.y
    mad_sat_pp r3.x, r3.x, c20.w, r3.z
    mad_pp r0.xyw, r0, r2.w, c27.yyzz
    mad_pp r0.xyw, r3.x, r0, c6.yyzx
    nrm_pp r3.xyz, r0.xyww
    dp3_pp r0.x, r3, r2
    add r0.y, -r0.x, c6.x
    cmp_pp r0.x, r0.x, r0_abs.y, c6.x
    add r0.y, r0.x, c27.w
    mul r0.w, r0.x, r0.x
    mad r2.x, r0.w, c5.x, c5.y
    add_pp r2.x, -r2.x, c6.x
    cmp_pp r2.x, r0.y, r2.x, c5.x
    mul_pp r2.xyz, r2.x, c15
    add_pp r3.xyz, r5.x, -c9
    mul_pp r2.xyz, r2, r3
    mad_pp r2.xyz, r2, c4.w, c4
    mul r3.xyz, r2, c24
    mov_pp r2.w, c25.w
    mad_pp r3.xyz, r3, r2.w, c9
    texld_pp r5, c5.zwzw, s0
    mul_pp r0.z, r0.z, c0.w
    mul_pp r5.yzw, r0.z, r2.xxyz
    mul_pp r5.xyz, r5.x, r5.yzww
    mad_pp r3.xyz, r5, c23, r3
    mad_pp r2.xyz, r2, c25, r3
    dp3_pp r0.z, r4, r4
    rsq_pp r0.z, r0.z
    mul_sat_pp r0.z, r0.z, r4.z
    add r2.w, r0.z, c27.w
    mul r0.z, r0.z, r0.z
    mul_pp r0.xz, r0.wyzw, r0
    abs r3.x, c3.x
    if_ne c3.x, -c3.x
      texld r4, c26, s2
      add r3.y, -r4.y, v3.w
      mad r1.z, r4.x, r3.y, r1.x
      mov r1.w, v3.w
      mov r3.yzw, r1.xzyw
    else
      mov r3.yzw, c6.y
    endif
    mov r1.z, v3.w
    cmp r1.xyz, -r3.x, r1, r3.yzww
    rcp r1.z, r1.z
    mul r1.xy, r1.z, r1
    mad r1.xy, r1, c1, c1.wzzw
    mov r1.zw, c6.y
    texldl r1, r1, s1
    add r1.x, r1.w, -c2.y
    add r1.y, -r1.x, c26.z
    rcp r1.x, r1.x
    cmp r1.x, r1.y, c26.w, r1.x
    mad_pp r1.x, c2.x, r1.x, -v3.w
    lrp_pp r1.y, r6.x, c21.z, c21.w
    rcp r1.y, r1.y
    mul_sat_pp r1.x, r1.y, r1.x
    mul_pp r0.z, r0.z, r1.x
    cmp_pp r0.z, r2.w, r0.z, c6.y
    add_pp r0.z, r1.x, r0.z
    add_pp r0.z, r0.z, -c5.w
    frc_pp r1.y, -r0.z
    add_sat_pp r0.z, r0.z, r1.y
    add r0.w, -c22.y, c22.x
    mul r0.x, r0.w, r0.x
    cmp r0.x, r0.y, r0.x, c6.y
    add_pp r0.x, r0.x, c22.y
    mul_pp r0.x, r1.x, r0.x
    mul_sat_pp oC0.w, r0.z, r0.x
    mad_pp oC0.xyz, r2, v1.w, v1

// approximately 121 instruction slots used (9 texture, 112 arithmetic)
