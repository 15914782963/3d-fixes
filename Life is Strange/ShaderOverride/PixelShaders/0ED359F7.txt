//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelVector_1;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEResolution           c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   UniformPixelVector_1    c7       1
//   UniformPixelScalars_1   c8       1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//   PixelTexture2D_1        s3       1
//   PixelTexture2D_2        s4       1
//

    ps_3_0
    def c4, 9.99999997e-007, 16, -16, 0.00100000005
    def c5, 0.0625, 0.046875, 4, 3
    def c6, 1, 0, 0.333332986, 0.666665971
    def c9, -6.9000001, 7, 0.0625, 0
    def c10, 9.99999975e-006, 100000, 0.0399999991, -0.100000001
    def c11, 0.00392156886, -0.00392156886, -255, 0
    dcl_texcoord v0.xy
    dcl_texcoord5 v1.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_ED359F7_682.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.yz, r0.xxyw, v1.w
    mul_pp r1.xy, c5, v0
    mov_pp r1.zw, c5
    mad_pp r1.zw, v0.xyxy, r1, c7.xyxy
    texld_pp r2, r1.zwzw, s2
    dp2add_pp r2.w, r2, -r2, c6.x
    max_pp r3.x, r2.w, c6.y
    rsq_pp r2.w, r3.x
    rcp_pp r2.z, r2.w
    texld_pp r3, r1, s3
    add_pp r1.x, r3.x, c8.y
    add_pp r3.xyz, r1.x, c6.yzww
    texld_pp r1, r1.zwzw, s4
    add_pp r3.xyz, r1, r3
    frc_pp r3.xyz, r3
    add r3.xyz, -r3, c6.x
    max r4.xyz, c4.x, r3
    mul r3.xyz, r4, r4
    mul_pp r3.xyz, r3, r3
    frc_pp r4.xyz, -r1
    add_sat_pp r1.xyz, r1, r4
    mul_pp r1.xy, r1, r3
    add_pp r1.x, r1.y, r1.x
    mad_sat_pp r1.x, r3.z, r1.z, r1.x
    mad_pp r1.x, r1.x, c4.y, c4.z
    exp_pp r1.x, r1.x
    lrp_pp r3.xyz, r1.x, r2, c6.yyxw
    dp3_pp r1.x, r3, r3
    rsq_pp r1.x, r1.x
    mul_pp r1, r1.x, r3.xyxy
    mul_sat_pp r2.x, c4.w, v1.w
    mad_pp r2.x, r2.x, c9.x, c9.y
    abs r2.y, c3.x
    if_ne c3.x, -c3.x
      texld r3, c9.zwzw, s1
      add r2.z, -r3.y, v1.w
      mad r0.x, r3.x, r2.z, r0.y
      mov r0.w, v1.w
      mov r3.xyz, r0.xzww
    else
      mov_pp r3.xyz, c6.y
    endif
    mov r4.xy, r0.yzzw
    mov r4.z, v1.w
    cmp r2.yzw, -r2.y, r4.xxyz, r3.xxyz
    rcp r0.x, r2.w
    mul r0.xw, r0.x, r2.yyzz
    mad r3.xy, r0.xwzw, c1, c1.wzzw
    mov r3.zw, c6.y
    texldl r3, r3, s0
    add r0.x, r3.w, -c2.y
    add r0.w, -r0.x, c10.x
    rcp r0.x, r0.x
    cmp r0.x, r0.w, c10.y, r0.x
    mad r0.x, c2.x, r0.x, -v1.w
    mul_sat r0.x, r0.x, c10.z
    mul_pp r0.x, r0.x, r2.x
    mul_pp r1, r1, r0.x
    dp2add r2, r1.zwzw, r1.zwzw, c10.w
    texkill r2
    rcp r0.x, v1.w
    mul r0.xy, r0.x, r0.yzzw
    mad r0.xy, r0, c1, c1.wzzw
    mul r0.zw, r1, c5.z
    mad r1.xy, r1, c11, r0
    mov r1.zw, c6.y
    texldl r1, r1, s0
    add r0.x, r1.w, -c2.y
    add r0.y, -r0.x, c10.x
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c10.y, r0.x
    mad r0.x, c2.x, -r0.x, v1.w
    cmp r0.xy, r0.x, c6.y, r0.zwzw
    max r1.xy, r0, c11.z
    add r0.xy, r1, c11.z
    mul r0.zw, r1.xyxy, c11.x
    cmp r0.xy, r0, c6.x, r0.zwzw
    max oC0.xy, r0, c6.y
    cmp oC0.zw, r0.xyxy, -c6.y, -r0.xyxy

// approximately 86 instruction slots used (8 texture, 78 arithmetic)
