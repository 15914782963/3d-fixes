//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float2 DistanceFadeParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D PixelTexture2D_6;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   sampler2D WarpFunctionTexture;
//   bool bEnableDistanceShadowFading;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   bEnableDistanceShadowFading  b1       1
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNESpecularAttenuation       c7       1
//   DNEMiscParameter             c8       1
//   DNEResolution                c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelVector_1         c11      1
//   UniformPixelVector_2         c12      1
//   UniformPixelScalars_0        c13      1
//   LightColorAndFalloffExponent c14      1
//   DistanceFadeParameters       c15      1
//   ShadowWarpFunctionTexture    s0       1
//   WarpFunctionTexture          s1       1
//   NvStereoFixTexture           s2       1
//   LightAttenuationTexture      s3       1
//   PixelTexture2D_0             s4       1
//   PixelTexture2D_1             s5       1
//   PixelTexture2D_2             s6       1
//   PixelTexture2D_3             s7       1
//   PixelTexture2D_4             s8       1
//   PixelTexture2D_5             s9       1
//   PixelTexture2D_6             s10      1
//

    ps_3_0
    def c2, 0, 0.333332986, 0.666665971, 9.99999997e-007
    def c6, 2, -1, 5, 15
    def c16, -2, 4, 0.5, 0.0500000007
    def c17, 10, 1.52876604, 0.0625, 0
    def c18, 0.0700000003, 0.600000024, 0.400000006, 0.0299999993
    def c19, 0.693147004, 2, 0.125, 0.0280000009
    def c20, 0, -0, -1, -0.100000001
    def c21, -5.55472994, -6.98316002, 0, 0
    def c22, -1, 1, -0.949999988, 2089.24487
    dcl_color1 v0.xyz
    dcl_texcoord v1.xy
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5_pp v3.w
    dcl_texcoord6 v4.xyz
    dcl_texcoord7 v5
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9
    dcl_2d s10

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_D7C32D91_242.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v0, v0
    rsq_pp r0.x, r0.x
    dp3_pp r0.y, v4, v4
    rsq_pp r0.y, r0.y
    mad_sat_pp r0.z, c8.x, v5.w, c8.y
    mul_pp r0.z, r0.z, c7.x
    texld_pp r1, v1, s4
    mad_pp r1.xyz, r1, c6.x, c6.y
    mul_pp r2.xy, c6.zwzw, v1
    texld_pp r3, r2, s5
    dp2add_pp r0.w, r3, -r3, -c6.y
    max_pp r1.w, r0.w, c20.x
    rsq_pp r0.w, r1.w
    rcp_pp r3.z, r0.w
    lrp_pp r4.xyz, -c20.w, r3, -c20.yyzw
    mov r3.xy, c13
    mad_pp r3.xyz, r3.y, r3.x, c2
    texld_pp r2, r2, s6
    add_pp r3.xyz, r2, r3
    frc_pp r3.xyz, r3
    add r3.xyz, -r3, -c6.y
    texld_pp r5, v1, s7
    mad_pp r0.w, r5.z, c16.x, c16.y
    max r5.xyw, c2.w, r3.xyzz
    log r3.x, r5.x
    log r3.y, r5.y
    log r3.z, r5.w
    mul r3.xyz, r0.w, r3
    exp_pp r5.x, r3.x
    exp_pp r5.y, r3.y
    exp_pp r0.w, r3.z
    frc_pp r3.xyz, -r2
    add_sat_pp r2.xyz, r2, r3
    mul_pp r2.xy, r2, r5
    add_pp r1.w, r2.y, r2.x
    mad_pp r0.w, r0.w, r2.z, r1.w
    mul_pp r0.w, r0.w, c13.z
    mad_pp r0.x, v0.z, r0.x, -c6.y
    mul_pp r0.x, r0.w, r0.x
    mul_pp r0.x, r0.x, c16.z
    add_pp r2.xyz, -r1, r4
    mul_pp r2.xyz, r0.x, r2
    texld_pp r3, v1, s8
    mul_pp r0.w, r3.y, c13.w
    mad_pp r1.yzw, r0.w, r2.xxyz, r1.xxyz
    nrm_pp r2.xyz, r1.yzww
    nrm_pp r3.xyz, v2
    cmp r1.y, vFace, c22.x, c22.y
    mul r1.y, r1.y, c0.x
    mul_pp r1.yzw, r1.y, r2.xxyz
    mad_pp r2.xyz, v4, r0.y, r3
    nrm_pp r4.xyz, r2
    lrp_pp r2.xy, r1.x, c11.ywzw, c11.xzzw
    lrp_pp r0.y, r5.z, r2.y, r2.x
    lrp_pp r2.x, r0.x, -c6.y, r0.y
    lrp_pp r3.w, r0.w, r2.x, r1.x
    max_pp r0.y, r3.w, c16.w
    add r1.x, r0.y, c22.z
    mad r0.y, r0.y, c17.x, c17.y
    exp_pp r0.y, r0.y
    cmp_pp r0.y, r1.x, c22.w, r0.y
    mov_sat_pp r2.x, v3.w
    mov r2.yw, c16.z
    texld_pp r6, r2, s0
    if b0
      mad r2.xy, vPos, c9, c9.zwzw
      mul r7.xy, r2, v5.w
      if_ne c3.x, -c3.x
        texld r8, c17.zwzw, s2
        add r1.x, -r8.y, v5.w
        mad r7.z, r8.x, r1.x, r7.x
        mov r7.xy, r7.zyzw
        mov r1.x, v5.w
      else
        mov r1.x, v5.w
      endif
      rcp r1.x, r1.x
      mul r2.xy, r1.x, r7
      mad r2.xy, r2, c1, c1.wzzw
      texld r7, r2, s3
      mul_pp r5.xyw, r7.xyzz, r7.xyzz
      if b1
        dp3 r1.x, v5, v5
        rsq r1.x, r1.x
        rcp r1.x, r1.x
        add r1.x, -r1.x, c15.x
        mul_sat_pp r1.x, r1.x, c15.y
        mul_pp r1.x, r1.x, r1.x
        mad_pp r2.x, r7.w, r7.w, -r6.x
        mad_pp r6.yzw, r1.x, r2.x, r6.x
      else
        mov_pp r6.yzw, r6.x
      endif
      mul_pp r5.xyw, r5, r6.yzzw
    else
      mov_pp r5.xyw, r6.x
    endif
    texld_pp r6, v1, s10
    mul_pp r0.x, r0.w, r0.x
    lrp_pp r7.xyz, r0.x, c18.x, r6
    mad_pp r6.xyz, r7, c5.w, c5
    texld_pp r7, v1, s9
    mov r2.y, c6.y
    add_pp r8.xyz, -r2.y, -c10
    mul_pp r7.xyz, r7, r8
    mad_pp r7.xyz, r7, c4.w, c4
    dp3_sat_pp r2.z, r1.yzww, r3
    texld_pp r8, r2.zwzw, s1
    mov_sat_pp r0.x, r3.z
    lrp_pp r9.xy, c18.yzzw, r0.x, r8.x
    add_pp r0.x, r9.x, c18.w
    add r0.w, -r9.y, r0.x
    cmp_pp r9.z, r0.w, r9.y, r0.x
    lrp_pp r10.xyz, r5.z, r9.xzzw, r8.x
    mul_pp r8.xyz, r10, c7.w
    mov_sat_pp r0.x, c7.y
    mul_pp r0.x, r0.x, r0.x
    mul_pp r0.x, r0.y, r0.x
    dp3_sat_pp r0.y, r1.yzww, r4
    mad_pp r0.w, r0.x, c19.x, c19.y
    mul_pp r0.w, r0.w, c19.z
    mad r0.x, r0.x, r0.y, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r0.w
    mul_pp r0.x, r2.z, r0.x
    mul_pp r0.x, r0.z, r0.x
    lrp_pp r0.yzw, r5.z, c19.w, r6.xxyz
    add r1.x, r2.y, c12.x
    mad_pp r1.x, r5.z, r1.x, -c6.y
    mul_pp r0.x, r0.x, r1.x
    dp3_sat_pp r1.x, r3, r4
    mad_pp r1.y, r1.x, c21.x, c21.y
    mul_pp r1.x, r1.x, r1.y
    exp_pp r1.x, r1.x
    lrp_pp r2.xyz, r1.x, -c6.y, r0.yzww
    mul_pp r0.xyz, r0.x, r2
    mad_pp r0.xyz, r7, r8, r0
    mul_pp r0.xyz, r5.xyww, r0
    mul oC0.xyz, r0, c14
    mov oC0.w, c20.x

// approximately 153 instruction slots used (11 texture, 142 arithmetic)
