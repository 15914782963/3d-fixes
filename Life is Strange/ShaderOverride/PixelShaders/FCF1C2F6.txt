//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ObjectWorldPositionAndRadius;
//   sampler2D PixelTexture2D_0;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_1;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNESpecularAttenuation       c7       1
//   DNEResolution                c8       1
//   ObjectWorldPositionAndRadius c9       1
//   UniformPixelVector_1         c10      1
//   UniformPixelScalars_0        c11      1
//   LightColorAndFalloffExponent c12      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//

    ps_3_0
    def c2, -1, 1, 0, 2
    def c6, 1, 0.5, 0.200000003, -0.75
    def c13, 0.100000001, 0.0581761822, 0.102356032, 0.0840932205
    def c14, 17.1891651, 9.76982021, 11.8915653, 16
    def c15, 6.28318548, -3.14159274, 0, 0.5
    def c16, 63.6942711, 0.5, 0.0625, 1
    def c17, -0.333299994, 0.0625, 0, -9.99999997e-007
    def c18, 15, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord2 v1.xy
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord7 v5.w
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_FCF1C2F6_812.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v4
    nrm_pp r1.xyz, v2
    cmp r0.w, vFace, c2.x, c2.y
    mul_pp r0.w, r0.w, c0.x
    mul_pp r2.xy, r0.z, r0.w
    mul_pp r2.z, r0.w, r2.y
    mad_pp r0.xyz, r2, c2.zzww, -r0
    texld_pp r2, c6, s0
    dp3 r1.w, v3, v3
    add r2.y, -r1.w, c2.y
    mul r3, r2.x, r2.y
    mov r4, r3
    texkill r4
    add r2.y, c11.x, v1.x
    mad r2.y, v0.y, v0.y, r2.y
    mad r2.y, r2.y, c6.z, c6.y
    frc r2.y, r2.y
    mad r2.y, r2.y, c15.x, c15.y
    sincos r4.y, r2.y
    add r2.y, c6.w, v0.y
    frc r2.z, r2.y
    add r2.z, -r2.z, r2.y
    mul r2.y, r2.z, r2.y
    mul r4.x, r2_abs.y, r4.y
    mov r4.yw, c15.xzzw
    mul r2.y, c13.x, v1.y
    mad r2.yz, r2.y, r4.xxyw, v0.xxyw
    mov r3.xyz, c9
    mul r3.xyz, r3, c13.yzww
    frc r3.xyz, r3_abs
    cmp r3.xyz, c9, r3, -r3
    mul r3.xy, r3, c14
    add r2.w, r3.y, r3.x
    mad r2.w, r3.z, c14.z, r2.w
    mad r2.w, r2.w, c16.x, c16.y
    frc r2.w, r2.w
    mad r2.w, r2.w, c15.x, c15.y
    sincos r5.y, r2.w
    add r2.w, r5.y, c2.y
    mad r2.w, r2.w, c6.y, v1.x
    frc r3.x, r2_abs.w
    cmp r2.w, r2.w, r3.x, -r3.x
    mul r3.x, r2.w, c14.w
    frc r3.y, r3.x
    add r3.x, -r3.y, r3.x
    frc r3.z, r2.w
    add r3.y, r2.w, -r3.z
    mul r3.xy, r3, c16.zwzw
    mad r2.yz, r2, c16.xzww, r3.xxyw
    texld r5, r2.yzzw, s3
    mov r3.x, c17.x
    mad r2.y, c10.w, r5.w, r3.x
    cmp r5, -r3.w, c2.z, r2.y
    texkill r5
    if b0
      mad r2.yz, vPos.xxyw, c8.xxyw, c8.xzww
      mul r3.xy, r2.yzzw, v5.w
      if_ne c3.x, -c3.x
        texld r5, c17.yzzw, s1
        add r2.y, -r5.y, v5.w
        mad r3.z, r5.x, r2.y, r3.x
        mov r3.xy, r3.zyzw
        mov r2.y, v5.w
      else
        mov r2.y, v5.w
      endif
      rcp r2.y, r2.y
      mul r2.yz, r2.y, r3.xxyw
      mad r2.yz, r2, c1.xxyw, c1.xwzw
      texld r5, r2.yzzw, s2
      mul_pp r2.yzw, r5.xxyz, r5.xxyz
      mul_pp r2.yzw, r2, r2.x
    else
      mov_pp r2.yzw, r2.x
    endif
    mov_sat r1.w, r1.w
    add r1.w, -r1.w, c2.y
    pow_sat_pp r4.z, r1.w, c12.w
    texld_pp r4, r4.zwzw, s0
    mul_sat_pp r0.w, r1.z, r0.w
    add r1.w, r0.w, c17.w
    mul r0.w, r0.w, c7.w
    dp3_sat_pp r0.x, r0, r1
    add r0.y, r0.x, c17.w
    pow_pp r1.x, r0.x, c18.x
    mul r0.x, r1.x, c7.x
    mul r1.xyz, r0.w, c4
    cmp r1.xyz, r1.w, r1, c2.z
    mul_pp r0.xzw, r0.x, c5.xyyz
    cmp_pp r0.xyz, r0.y, r0.xzww, c2.z
    add_pp r0.xyz, r0, r1
    mul_pp r0.xyz, r2.yzww, r0
    mul r0.xyz, r4.x, r0
    mul r0.xyz, r0, c12
    cmp oC0.xyz, -r3.w, c2.z, r0
    mov oC0.w, c2.z

// approximately 122 instruction slots used (5 texture, 117 arithmetic)
