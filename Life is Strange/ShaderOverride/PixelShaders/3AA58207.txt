//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowTexture;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_4;
//   float4 UniformPixelScalars_5;
//   float4 UniformPixelScalars_6;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   CameraWorldPos               c8       1
//   DNEResolution                c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelVector_1         c11      1
//   UniformPixelVector_2         c12      1
//   UniformPixelVector_3         c13      1
//   UniformPixelVector_4         c14      1
//   UniformPixelScalars_1        c15      1
//   UniformPixelScalars_2        c16      1
//   UniformPixelScalars_3        c17      1
//   UniformPixelScalars_4        c18      1
//   UniformPixelScalars_5        c19      1
//   UniformPixelScalars_6        c20      1
//   LightColorAndFalloffExponent c21      1
//   ShadowWarpFunctionTexture    s0       1
//   SceneColorTexture            s1       1
//   NvStereoFixTexture           s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//   ShadowTexture                s7       1
//

    ps_3_0
    def c6, 10, 1.52876604, 0.5, 0.0700000003
    def c22, 1, 0, 1.41789806, -0.99000001
    def c23, 0.693147004, 2, -5.55472994, -6.98316002
    def c24, 0.0625, 0, 9.99999975e-006, 100000
    def c25, -9.99999997e-007, 0.930000007, 0.0700000003, 0.125
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5 v2.xyz
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_3AA58207_359.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    add r0.xy, c8, v4
    mad r0.zw, vPos.xyxy, c9.xyxy, c9
    mul r1.xy, r0.zwzw, v4.w
    nrm_pp r2.xyz, v3
    mad_sat_pp r0.z, c7.x, v4.w, c7.y
    mul_pp r0.z, r0.z, c0.x
    rcp r0.w, c15.x
    mul_pp r3.xy, r0.w, r0
    mad_pp r3.zw, r0.xyxy, r0.w, c11.xyxy
    texld_pp r4, r3.zwzw, s3
    dp2add_pp r0.w, r4, -r4, c22.x
    max_pp r1.w, r0.w, c22.y
    rsq_pp r0.w, r1.w
    rcp_pp r4.z, r0.w
    mov r5.xz, c22
    mad_pp r3.zw, r3.xyxy, r5.z, c12.xyxy
    texld_pp r6, r3.zwzw, s3
    dp2add_pp r0.w, r6, -r6, c22.x
    max_pp r1.w, r0.w, c22.y
    rsq_pp r0.w, r1.w
    rcp_pp r6.z, r0.w
    add_pp r4.xyz, r4, r6
    nrm_pp r6.xyz, r4
    mul_pp r4.xyz, r6, c16.x
    frc_pp r5.yzw, r4.xxyz
    add_pp r4.xyz, r4, -r5.yzww
    rcp r0.w, c16.x
    mul_pp r3.zw, r0.w, r4.xyxy
    mov r1.w, c16.w
    mad_pp r3.xy, r1.w, r3, c13
    texld_pp r6, r3, s4
    lrp_sat_pp r1.w, r6.x, c17.z, c17.w
    mad_pp r4.xyz, r4, r0.w, c22.yyww
    mad_pp r4.xyz, r1.w, r4, c22.yyxw
    nrm_pp r7.xyz, r4
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mul_pp r5.yzw, r0.w, v1.xxyz
    mad_pp r6.yzw, v1.xxyz, r0.w, r2.xxyz
    nrm_pp r8.xyz, r6.yzww
    mov r3.xy, c6
    mad_pp r0.w, c19.y, r3.x, r3.y
    exp_pp r0.w, r0.w
    texld_pp r9, v0, s7
    mov_sat_pp r9.x, r9.x
    mov r9.yw, c6.z
    texld_pp r10, r9, s0
    dp3 r2.w, v2, v2
    add r3.x, -r2.w, c22.x
    mul r11, r10.x, r3.x
    mov r12, r11
    texkill r12
    rcp r3.x, c18.x
    mul_pp r4.zw, r0.xyxy, r3.x
    mad_pp r3.yz, r1.w, r3.xzww, r4.xzww
    texld_pp r12, r3.yzzw, s5
    mad_sat_pp r1.w, r12.x, c18.y, c18.z
    texld_pp r12, r1.w, s6
    mul_pp r3.yzw, r12.xxyz, c18.w
    mad_pp r3.yzw, r3, c6.w, c6.w
    mad_pp r3.yzw, r3, c5.w, c5.xxyz
    mov_sat r2.w, r2.w
    add r1.w, -r2.w, c22.x
    pow_sat_pp r9.z, r1.w, c21.w
    texld_pp r9, r9.zwzw, s0
    dp3_pp r1.w, r7, r2
    add r2.x, -r1.w, c22.x
    cmp_pp r1.w, r1.w, r2_abs.x, c22.x
    add r2.x, r1.w, c25.x
    mul r2.y, r1.w, r1.w
    mad r2.z, r2.y, c25.y, c25.z
    add_pp r2.z, -r2.z, c22.x
    cmp_pp r2.z, r2.x, r2.z, c25.y
    mul_pp r6.yzw, r2.z, c14.xxyz
    add_pp r9.yzw, r5.x, -c10.xxyz
    mul_pp r6.yzw, r6, r9
    mad_pp r6.yzw, r6, c4.w, c4.xxyz
    dp3_sat_pp r2.z, r7, r5.yzww
    mul_pp r2.w, r2.z, c0.w
    mul_sat_pp r4.z, r9.x, c0.y
    mul_pp r4.z, r4.z, r4.z
    mul_pp r0.w, r0.w, r4.z
    dp3_sat_pp r4.z, r7, r8
    mad_pp r4.w, r0.w, c23.x, c23.y
    mul_pp r4.w, r4.w, c25.w
    mad r0.w, r0.w, r4.z, -r0.w
    exp_pp r0.w, r0.w
    mul_pp r0.w, r0.w, r4.w
    mul_pp r0.w, r2.z, r0.w
    mul_pp r0.z, r0.z, r0.w
    dp3_sat_pp r0.w, r5.yzww, r8
    mad_pp r2.z, r0.w, c23.z, c23.w
    mul_pp r0.w, r0.w, r2.z
    exp_pp r0.w, r0.w
    lrp_pp r5.xyz, r0.w, c22.x, r3.yzww
    mul_pp r3.yzw, r0.z, r5.xxyz
    mad_pp r3.yzw, r6, r2.w, r3
    mul_pp r3.yzw, r10.x, r3
    mul r3.yzw, r9.x, r3
    mul r5.xyz, r3.yzww, c21
    mad_pp r0.xy, r0, r3.x, r4
    texld_pp r0, r0, s5
    mad_sat_pp r0.x, r0.x, c18.y, c18.z
    mul_pp r0.y, r1.w, r2.y
    mov r3.x, c20.x
    add r0.z, -r3.x, c19.w
    mul r0.y, r0.z, r0.y
    cmp r0.y, r2.x, r0.y, c22.y
    add_pp r0.y, r0.y, c20.x
    if_ne c3.x, -c3.x
      texld r2, c24, s2
      add r0.z, -r2.y, v4.w
      mad r1.z, r2.x, r0.z, r1.x
      mov r1.xy, r1.zyzw
      mov r0.z, v4.w
    else
      mov r0.z, v4.w
    endif
    rcp r0.z, r0.z
    mul r0.zw, r0.z, r1.xyxy
    mad r1.xy, r0.zwzw, c1, c1.wzzw
    mov r1.zw, c22.y
    texldl r1, r1, s1
    add r0.z, r1.w, -c2.y
    add r0.w, -r0.z, c24.z
    rcp r0.z, r0.z
    cmp r0.z, r0.w, c24.w, r0.z
    mad_pp r0.z, c2.x, r0.z, -v4.w
    lrp_pp r0.w, r6.x, c20.y, c20.z
    rcp r0.w, r0.w
    mul_sat_pp r0.z, r0.w, r0.z
    mul_pp r0.y, r0.z, r0.y
    mad_sat r5.w, r0.x, c19.z, r0.y
    cmp oC0, -r11.w, c22.y, r5

// approximately 149 instruction slots used (12 texture, 137 arithmetic)
