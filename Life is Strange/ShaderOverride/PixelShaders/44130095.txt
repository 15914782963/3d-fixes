//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNEMiscParameter;
//   sampler2D DNEReflectionTexture;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D PixelTexture2D_6;
//   sampler2D PixelTexture2D_7;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEMiscParameter          c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   CameraWorldPos            c7       1
//   DNEResolution             c8       1
//   UniformPixelVector_0      c9       1
//   UniformPixelScalars_0     c10      1
//   UpperSkyColor             c11      1
//   AmbientColorAndSkyFactor  c12      1
//   NvStereoFixTexture        s0       1
//   DNEReflectionTexture      s1       1
//   PixelTexture2D_0          s2       1
//   PixelTexture2D_1          s3       1
//   PixelTexture2D_2          s4       1
//   PixelTexture2D_3          s5       1
//   PixelTexture2D_4          s6       1
//   PixelTexture2D_5          s7       1
//   PixelTexture2D_6          s8       1
//   PixelTexture2D_7          s9       1
//   VAOBuffer                 s10      1
//

    ps_3_0
    def c6, 2, -1, 0, 15
    def c13, 20, 0, 0.333332986, 0.666665971
    def c14, 0.00390625, 0.0078125, 9.99999997e-007, 0
    def c15, -0.5, 0.949999988, 0.666666687, -0.899999976
    def c16, 0.5, -0.5, -5.55472994, -6.98316002
    def c17, 0.0625, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord6 v1.xyz
    dcl_texcoord7_pp v2.w
    dcl_texcoord5 v3.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9
    dcl_2d s10

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_44130095_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    add r0.xy, c7, v3
    mad r0.zw, vPos.xyxy, c8.xyxy, c8
    mul r1.xy, r0.zwzw, v3.w
    nrm_pp r2.xyz, v1
    mad_sat_pp r0.z, c0.x, v3.w, c0.y
    texld_pp r3, v0, s2
    mad_pp r3.xyz, r3, c6.x, c6.y
    texld_pp r4, v0, s3
    mad_pp r4.xyz, r4, c6.x, c6.y
    texld_pp r5, v0, s4
    max_pp r0.w, r5.x, c6.z
    add r5.yz, r0.w, c15.xxyw
    mad r0.w, r5.z, c15.z, c15.w
    mul_sat_pp r0.w, r0.w, c6.w
    cmp_pp r0.w, r5.y, -c6.y, r0.w
    add r2.w, r5.x, c15.x
    mov_sat r5.y, r5.x
    add r5.y, r5.y, c15.x
    mul_sat_pp r5.y, r5.y, c13.x
    cmp_pp r2.w, r2.w, r5.y, c6.z
    mad_sat_pp r0.w, r0.w, r5.x, r2.w
    add_pp r2.w, c15.x, v2.w
    mad_sat_pp r0.w, r2.w, c6.x, r0.w
    lrp_pp r5.xyz, r0.w, r4, r3
    nrm_pp r3.xyz, r5
    texld_pp r5, v0, s7
    texld_pp r6, v0, s8
    lrp_pp r4.xyz, r0.w, r6, r5
    mad_pp r4.xyz, r4, c5.w, c5
    lrp_pp r2.w, r0.w, r4.w, r3.w
    mov r5.y, c10.y
    add_pp r5.xyz, r5.y, c13.yzww
    mul_pp r0.xy, r0, c14
    texld_pp r6, r0, s9
    add_pp r5.xyz, r5, r6
    frc_pp r5.xyz, r5
    add r5.xyz, -r5, -c6.y
    max r7.xyz, c14.z, r5
    mul r5.xyz, r7, r7
    mul_pp r5.xyz, r5, r7
    frc_pp r7.xyz, -r6
    add_sat_pp r6.xyz, r6, r7
    mul_pp r0.xy, r5, r6
    add_pp r0.x, r0.y, r0.x
    mad_pp r0.x, r5.z, r6.z, r0.x
    mul_pp r0.x, r0.x, v2.w
    mad r0.y, r2.w, -c6.x, -c6.y
    mad_pp r0.x, r0.x, r0.y, r2.w
    texld_pp r5, v0, s5
    texld_pp r6, v0, s6
    lrp_pp r7.xyz, r0.w, r6, r5
    mov r0.y, c6.y
    add_pp r5.xyz, -r0.y, -c9
    mul_pp r5.xyz, r5, r7
    mad_pp r5.xyz, r5, c4.w, c4
    rcp r0.y, v3.w
    mul r6.xy, r0.y, r1
    mad r6.xy, r6, c16, c16.x
    mad_pp r6.xy, r3, c10.x, r6
    mad_pp r6.w, -c0.w, r0.x, c0.w
    mov r6.z, c6.z
    texldl_pp r6, r6, s1
    dp3_sat_pp r0.w, r3, r2
    max_pp r2.xyz, r0.x, r4
    mad_pp r0.x, r0.w, c16.z, c16.w
    mul_pp r0.x, r0.w, r0.x
    exp_pp r0.x, r0.x
    lrp_pp r3.xyz, r0.x, r2, r4
    mul_pp r2.xyz, r6, r3
    mul_pp r2.xyz, r2, c0.z
    mad_pp r0.xzw, r0.z, r2.xyyz, c9.xyyz
    mul r2.xyz, r5, c11
    mad_pp r0.xzw, r2.xyyz, c12.w, r0
    abs r2.x, c3.x
    if_ne c3.x, -c3.x
      texld r3, c17, s0
      add r2.y, -r3.y, v3.w
      mad r1.z, r3.x, r2.y, r1.x
      mov r1.w, v3.w
      mov r2.yzw, r1.xzyw
    else
      mov r2.yzw, c6.z
    endif
    mov r1.z, v3.w
    cmp r1.xyz, -r2.x, r1, r2.yzww
    rcp r1.z, r1.z
    mul r1.xy, r1.z, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s10
    mul r1.yzw, r5.xxyz, c12.xxyz
    mad_pp oC0.xyz, r0.xzww, r1.x, r1.yzww
    mad oC0.w, c2.x, r0.y, c2.y

// approximately 99 instruction slots used (12 texture, 87 arithmetic)
