//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEResolution;
//   float4 DebugMode[5];
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   sampler2D MipTextureParameter;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float TwoSidedSign;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   TwoSidedSign              c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DebugMode                 c7       5
//   CameraWorldPos            c12      1
//   DNEResolution             c13      1
//   UniformPixelVector_0      c14      1
//   UniformPixelVector_1      c15      1
//   SceneColorTexture         s0       1
//   NvStereoFixTexture        s1       1
//   PixelTexture2D_0          s2       1
//   PixelTexture2D_1          s3       1
//   MipTextureParameter       s4       1
//

    ps_3_0
    def c6, 0.000199999995, 1.79999995, 0.200000003, 9.99999975e-006
    def c16, 0.0625, 0, 100000, 0.00390625
    def c17, -0, 0, 1, 0
    def c18, -1, 1, 0, 0.5
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_75DFA3EE_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mul r0, r0.x, v1.yxzy
    dp3_pp r1.x, v0, v0
    rsq_pp r1.x, r1.x
    mul r1, r1.x, v0.zyyx
    mul_pp r2.xy, r0.zwzw, r1.zwzw
    mad_pp r0.xw, r0.xyzy, r1.xyzy, -r2.xyzy
    mul r2.xy, r0.xwzw, v1.w
    add r3.xyz, c12, v4
    mad r0.xw, vPos.xyzy, c13.xyzy, c13.zyzw
    mul r4.xy, r0.xwzw, v4.w
    dp3_pp r0.x, v3, v3
    rsq_pp r0.x, r0.x
    mul_pp r0.x, r0.x, v3.x
    cmp r0.w, vFace, c18.x, c18.y
    mul r0.w, r0.w, c0.x
    texld r5, v2, s4
    mad r5, r5.xyzx, c18.yyyz, c18.zzzy
    mul r6, r5, c7.y
    mad r5, c7.x, r5, r6
    mov r1.z, c7.z
    mul r6.xyz, r1.z, c4
    mov r6.w, c7.z
    add r5, r5, r6
    mad r6.xyz, r0.w, c18.zzww, c18.w
    mov r6.w, c18.y
    mad r5, c7.w, r6, r5
    mov r1.yz, c18
    mad r5, c8.x, r1.zyzy, r5
    mov r6.yw, c8.y
    mul r6.xyz, r6.y, c5
    add r5, r5, r6
    mul r3.xyz, r3, c6.x
    texld r6, r3.yzzw, s2
    texld r7, r3.xzzw, s2
    mul r3.z, r1_abs.x, r7.y
    mad r3.z, r1_abs.x, r6.y, r3.z
    texld r6, r3, s2
    mad r3.x, r1_abs.x, r6.y, r3.z
    mul r3.x, r3.x, r3.x
    mad r3.x, r3.x, c6.y, c6.z
    mul r3.xyz, r3.x, c15
    add r6.x, -r0_abs.x, c18.y
    mov r6.y, v2.y
    texld r6, r6, s3
    abs r0.x, c3.x
    if_ne c3.x, -c3.x
      texld r7, c16, s1
      add r3.w, -r7.y, v4.w
      mad r4.z, r7.x, r3.w, r4.x
      mov r4.w, v4.w
      mov r6.xzw, r4.zyyw
    else
      mov r6.xzw, c18.z
    endif
    mov r4.z, v4.w
    cmp r4.xyz, -r0.x, r4, r6.xzww
    rcp r0.x, r4.z
    mul r4.xy, r0.x, r4
    mad r4.xy, r4, c1, c1.wzzw
    mov r4.zw, c18.z
    texldl r4, r4, s0
    add r0.x, r4.w, -c2.y
    add r3.w, -r0.x, c6.w
    rcp r0.x, r0.x
    cmp r0.x, r3.w, c16.z, r0.x
    mad r0.x, c2.x, r0.x, -v4.w
    mul_sat r0.x, r0.x, c16.w
    mul r0.x, r0.x, r6.y
    mad_pp r3.xyz, r0.x, r3, c14
    mov r3.w, c18.y
    mad r3, c8.z, r3, r5
    mul r4.x, r0.w, r1.x
    mul r4.y, r0.w, r2.y
    mul r4.z, r0.w, r0.z
    mad r4.xyz, r4, c18.w, c18.w
    mov r4.w, c18.y
    mad r3, c8.w, r4, r3
    mov r2.z, r1.w
    mov r2.w, r0.y
    mad r0.xyz, r2.zxww, c18.w, c18.w
    mov r0.w, c18.y
    mad r0, c9.x, r0, r3
    add r0, r0, c9.y
    add r0, r0, c9.z
    mov r1.w, c9.w
    mad r0, r1.w, c17.xxyz, r0
    mad r0, c10.x, r1.zzzy, r0
    mad r0, c10.y, r1.zzzy, r0
    mad r0, c10.z, r1.zzzy, r0
    mad r0, c10.w, r1.zzzy, r0
    mad r0, c11.x, r1.zzzy, r0
    mad r0, c11.y, r1.zzzy, r0
    mad r0, c11.z, r1.zzzy, r0
    mad oC0, c11.w, r1.zzzy, r0

// approximately 99 instruction slots used (8 texture, 91 arithmetic)
