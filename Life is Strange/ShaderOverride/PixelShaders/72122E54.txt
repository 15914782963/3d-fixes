//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float2 DistanceFadeParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   bool bEnableDistanceShadowFading;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   bEnableDistanceShadowFading  b1       1
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNESpecularAttenuation       c7       1
//   DNEMiscParameter             c8       1
//   DNEResolution                c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelScalars_0        c11      1
//   LightColorAndFalloffExponent c12      1
//   DistanceFadeParameters       c13      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//

    ps_3_0
    def c2, -1, 1, 10, 1.52876604
    def c6, 0.5, -0.330000013, 0.0625, 0
    def c14, 0.693147004, 2, 0.125, 0
    def c15, -5.55472994, -6.98316002, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.w
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_72122E54_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v3, v3
    rsq_pp r0.x, r0.x
    mad_sat_pp r0.y, c8.x, v4.w, c8.y
    mul_pp r0.y, r0.y, c7.x
    nrm_pp r1.xyz, v1
    cmp r0.z, vFace, c2.x, c2.y
    mul_pp r0.z, r0.z, c0.x
    mad_pp r2.xyz, v3, r0.x, r1
    nrm_pp r3.xyz, r2
    mov r2.yzw, c2
    mad_pp r0.x, c11.y, r2.z, r2.w
    exp_pp r0.x, r0.x
    mov_sat_pp r4.x, v2.w
    mov_pp r4.y, c6.x
    texld_pp r4, r4, s0
    texld_pp r5, v0, s3
    add_pp r6, r5.w, c6.y
    texkill r6
    if b0
      mad r2.xz, vPos.xyyw, c9.xyyw, c9.zyww
      mul r6.xy, r2.xzzw, v4.w
      if_ne c3.x, -c3.x
        texld r7, c6.zwzw, s1
        add r0.w, -r7.y, v4.w
        mad r6.z, r7.x, r0.w, r6.x
        mov r6.xy, r6.zyzw
        mov r0.w, v4.w
      else
        mov r0.w, v4.w
      endif
      rcp r0.w, r0.w
      mul r2.xz, r0.w, r6.xyyw
      mad r2.xz, r2, c1.xyyw, c1.wyzw
      texld r6, r2.xzzw, s2
      mul_pp r2.xzw, r6.xyyz, r6.xyyz
      if b1
        dp3 r0.w, v4, v4
        rsq r0.w, r0.w
        rcp r0.w, r0.w
        add r0.w, -r0.w, c13.x
        mul_sat_pp r0.w, r0.w, c13.y
        mul_pp r0.w, r0.w, r0.w
        mad_pp r1.w, r6.w, r6.w, -r4.x
        mad_pp r4.yzw, r0.w, r1.w, r4.x
      else
        mov_pp r4.yzw, r4.x
      endif
      mul_pp r2.xzw, r2, r4.yyzw
    else
      mov_pp r2.xzw, r4.x
    endif
    texld_pp r4, v0, s4
    mul_pp r4.xyz, r4, c11.x
    mad_pp r4.xyz, r4, c5.w, c5
    add_pp r6.xyz, r2.y, -c10
    mul_pp r5.xyz, r5, r6
    mad_pp r5.xyz, r5, c4.w, c4
    mul_sat_pp r0.w, r1.z, r0.z
    mul_pp r1.w, r0.w, c7.w
    mov_sat_pp r2.y, c7.y
    mul_pp r2.y, r2.y, r2.y
    mul_pp r0.x, r0.x, r2.y
    mul_sat_pp r0.z, r0.z, r3.z
    mad_pp r2.y, r0.x, c14.x, c14.y
    mul_pp r2.y, r2.y, c14.z
    mad r0.x, r0.x, r0.z, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r2.y
    mul_pp r0.x, r0.w, r0.x
    mul_pp r0.x, r0.y, r0.x
    dp3_sat_pp r0.y, r1, r3
    mad_pp r0.z, r0.y, c15.x, c15.y
    mul_pp r0.y, r0.y, r0.z
    exp_pp r0.y, r0.y
    lrp_pp r1.xyz, r0.y, c2.y, r4
    mul_pp r0.xyz, r0.x, r1
    mad_pp r0.xyz, r5, r1.w, r0
    mul_pp r0.xyz, r2.xzww, r0
    mul oC0.xyz, r0, c12
    mov_pp oC0.w, c6.w

// approximately 90 instruction slots used (5 texture, 85 arithmetic)
