//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   sampler2D HeightmapTexture;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   DNEResolution            c0       1
//   ScreenPositionScaleBias  c1       1
//   MinZ_MaxZRatio           c2       1
//   NvStereoEnabled          c3       1
//   DiffuseOverrideParameter c4       1
//   UniformPixelVector_0     c7       1
//   UniformPixelVector_1     c8       1
//   UpperSkyColor            c9       1
//   AmbientColorAndSkyFactor c10      1
//   NvStereoFixTexture       s0       1
//   HeightmapTexture         s1       1
//   VAOBuffer                s2       1
//

    ps_3_0
    def c5, 2, -1, 1, 0
    def c6, 0.300000012, 0.589999974, 0.109999999, 0
    def c11, 0.0625, 0, 0, 0
    dcl_texcoord5 v0.w
    dcl_texcoord v1.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_21BDBE36_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    texld r0, v1, s1
    mad r0.xy, r0.zwzw, c5.x, c5.y
    dp2add r0.z, r0, -r0, c5.z
    rsq r0.z, r0.z
    rcp r1.z, r0.z
    mad r0.zw, vPos.xyxy, c0.xyxy, c0
    mul r2.xy, r0.zwzw, v0.w
    abs r1.xy, r0
    dp3 r0.x, r1, c6
    mul r0.xyz, r0.x, c8
    mov r1.z, c5.z
    add r1.xyz, r1.z, -c7
    mul_pp r0.xyz, r0, r1
    mad_pp r0.xyz, r0, c4.w, c4
    mul r1.xyz, r0, c9
    mov_pp r0.w, c10.w
    mad_pp r1.xyz, r1, r0.w, c7
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r3, c11, s0
      add r1.w, -r3.y, v0.w
      mad r2.z, r3.x, r1.w, r2.x
      mov r2.w, v0.w
      mov r3.xyz, r2.zyww
    else
      mov r3.xyz, c5.w
    endif
    mov r2.z, v0.w
    cmp r2.xyz, -r0.w, r2, r3
    rcp r0.w, r2.z
    mul r2.xy, r0.w, r2
    mad r2.xy, r2, c1, c1.wzzw
    texld_pp r2, r2, s2
    mul r0.xyz, r0, c10
    mad_pp oC0.xyz, r1, r2.x, r0
    rcp r0.x, v0.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 40 instruction slots used (3 texture, 37 arithmetic)
