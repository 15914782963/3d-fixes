//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEResolution;
//   float4 DebugMode[5];
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   CameraWorldPos            c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DebugMode                 c7       5
//   DNEResolution             c12      1
//   UniformPixelVector_0      c13      1
//   UniformPixelVector_1      c14      1
//   UniformPixelVector_2      c15      1
//   UniformPixelVector_3      c16      1
//   UniformPixelVector_4      c17      1
//   UniformPixelVector_5      c18      1
//   UniformPixelScalars_0     c19      1
//   SceneColorTexture         s0       1
//   NvStereoFixTexture        s1       1
//   PixelTexture2D_0          s2       1
//   PixelTexture2D_1          s3       1
//   PixelTexture2D_2          s4       1
//

    ps_3_0
    def c6, 0, 1, 0.5, 0.0625
    def c20, 9.99999975e-006, 100000, 0.0850000009, 0.800000012
    def c21, 0.150000006, 0.185000002, 1, 0
    def c22, -0, 0, 1, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord3_pp v2
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_6E4252C7_844.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm r0.xyz, v1
    nrm r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul r2.xyz, r2.yxzw, v1.w
    add r3.xyz, c0, v4
    mad r4.xy, vPos, c12, c12.zwzw
    mul r4.yz, r4.xxyw, v4.w
    nrm_pp r5.xyz, v3
    mov r6.xyz, c6
    mul r7, r6.xyxy, c7.xxyy
    add r7, r7.zzzw, r7.xxxy
    mov r8.zw, c7.z
    mul r8.xyz, r8.z, c4
    add r7, r7, r8
    mad r7, c7.w, r6.zzyy, r7
    mad r7, c8.x, r6.xyxy, r7
    mov r8.yw, c8.y
    mul r8.xyz, r8.y, c5
    add r7, r7, r8
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r8, c6.wxzw, s1
      add r1.w, -r8.y, v4.w
      mad r4.x, r8.x, r1.w, r4.y
      mov r4.w, v4.w
      mov r8.xyz, r4.xzww
    else
      mov r8.xyz, c6.x
    endif
    mov r9.xy, r4.yzzw
    mov r9.z, v4.w
    cmp r8.xyz, -r0.w, r9, r8
    rcp r0.w, r8.z
    mul r4.xw, r0.w, r8.xyzy
    mad r8.xy, r4.xwzw, c1, c1.wzzw
    mov r8.zw, c6.x
    texldl r8, r8, s0
    add r0.w, r8.w, -c2.y
    add r1.w, -r0.w, c20.x
    rcp r0.w, r0.w
    cmp r0.w, r1.w, c20.y, r0.w
    mad r0.w, c2.x, r0.w, -v4.w
    rcp r1.w, c19.x
    mul_sat r0.w, r0.w, r1.w
    rcp r8.x, c15.x
    rcp r8.y, c15.y
    rcp r8.z, c15.z
    mad r3.xyz, r3, r8, c16
    texld_pp r8, r3.yzzw, s2
    dp2add_pp r1.w, r8, -r8, c6.y
    max_pp r2.w, r1.w, c6.x
    rsq_pp r1.w, r2.w
    rcp_pp r8.z, r1.w
    mov_pp r9.x, r1.z
    mov_pp r9.y, r2.z
    mov_pp r9.z, r0.z
    dp3 r1.y, r1, r9
    dp3 r1.z, r2.yxzw, r9
    dp3 r0.y, r0, r9
    texld_pp r10, r3.xzzw, s2
    dp2add_pp r0.z, r10, -r10, c6.y
    max_pp r1.w, r0.z, c6.x
    rsq_pp r0.z, r1.w
    rcp_pp r10.z, r0.z
    mul r10.xyz, r1_abs.z, r10
    mad r1.yzw, r1_abs.y, r8.xxyz, r10.xxyz
    texld_pp r3, r3, s2
    dp2add_pp r0.z, r3, -r3, c6.y
    max_pp r2.w, r0.z, c6.x
    rsq_pp r0.z, r2.w
    rcp_pp r3.z, r0.z
    mad r1.yzw, r0_abs.y, r3.xxyz, r1
    nrm r3.xyz, r1.yzww
    dp3_sat r0.y, r5, r3
    add r0.y, -r0.y, c6.y
    add r0.z, c19.z, v2.x
    add r0.y, -r0.z, r0.y
    mul_sat r0.y, r0.y, r0.w
    texld r3, r0.y, s3
    max r0.y, r3.x, c6.x
    min r1.y, r0.y, c20.z
    rcp r0.y, v4.w
    mul r0.yz, r0.y, r4
    mad r0.yz, r0, c1.xxyw, c1.xwzw
    mul r4.x, r0.z, c6.z
    mov r0.w, c20.w
    mad r0.y, r0.y, r0.w, c17.x
    add r5.x, r0.y, c21.x
    add r5.y, r4.x, c17.y
    texld r4, r5, s4
    add r0.y, r4.x, -c6.y
    mad r0.y, r0.y, c21.y, c21.z
    mul r3.yzw, c18.xxyz, v2.xxyz
    mul r0.yzw, r0.y, r3
    mul r0.yzw, r0, r3.x
    mad r0.yzw, r1.y, c14.xxyz, r0
    add_pp r3.xyz, r0.yzww, c13
    mov r3.w, c6.y
    mad r3, c8.z, r3, r7
    mad r4.xyz, r9, c6.z, c6.z
    mov r4.w, c6.y
    mad r3, c8.w, r4, r3
    mov r2.x, r1.x
    mov r2.z, r0.x
    mad r0.xyz, r2, c6.z, c6.z
    mov r0.w, c6.y
    mad r0, c9.x, r0, r3
    mad r1, v2.xyzx, c6.yyyx, c6.xxxy
    mad r0, c9.y, r1, r0
    mad r1, v2.wwwx, c6.yyyx, c6.xxxy
    mad r0, c9.z, r1, r0
    mov r1.w, c9.w
    mad r0, r1.w, c22.xxyz, r0
    mad r0, c10.x, r6.xxxy, r0
    mad r0, c10.y, r6.xxxy, r0
    mad r0, c10.z, r6.xxxy, r0
    mad r0, c10.w, r6.xxxy, r0
    mad r0, c11.x, r6.xxxy, r0
    mad r0, c11.y, r6.xxxy, r0
    mad r0, c11.z, r6.xxxy, r0
    mad oC0, c11.w, r6.xxxy, r0

// approximately 136 instruction slots used (8 texture, 128 arithmetic)
