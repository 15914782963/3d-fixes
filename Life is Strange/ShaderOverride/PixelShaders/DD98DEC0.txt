//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_1;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_1;
//   float4 WorldIncidentLighting[7];
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   DNEResolution            c0       1
//   ScreenPositionScaleBias  c1       1
//   MinZ_MaxZRatio           c2       1
//   NvStereoEnabled          c3       1
//   DiffuseOverrideParameter c4       1
//   WorldIncidentLighting    c7       7
//   UniformPixelScalars_1    c14      1
//   SceneColorTexture        s0       1
//   NvStereoFixTexture       s1       1
//   PixelTexture2D_1         s2       1
//

    ps_3_0
    def c5, 3, -1, -1.02332771, 1.02332771
    def c6, 0.886227608, 0, -0.5, 0.0625
    def c15, 9.99999975e-006, 100000, 0.200000003, 0.949999988
    def c16, 0.858085215, -0.858085215, 0.247708291, 0.429042608
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord7 v3.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_DD98DEC0_676.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    dp3_pp r0.w, v0, v0
    rsq_pp r0.w, r0.w
    mul_pp r1.xyz, r0.w, v0.yxzw
    mul r2.yz, r0, r1
    mad_pp r0.x, r0.x, r1.x, -r2.y
    mul_pp r1.x, r0.x, v1.w
    mad r0.xy, vPos, c0, c0.zwzw
    mul r3.xy, r0, v3.w
    mov_pp r1.y, r0.z
    mul r0.xyw, r1.xyzz, r1.xyzx
    mul r2.x, r0.z, r1.x
    mad r2.y, r0.y, c5.x, c5.y
    mad_pp r2.w, r1.z, r1.z, -r0.x
    mul r1.xyz, r1, c5.zwzw
    mul r1.w, r0.w, c16.x
    mul r0, r2, c16.yzyw
    dp4 r2.x, c8, r1
    mov r4.x, c6.x
    mad_pp r2.x, c7.x, r4.x, r2.x
    dp4 r2.y, c9, r0
    add_pp r2.x, r2.y, r2.x
    dp4 r2.w, c10, r1
    mad_pp r2.w, c7.y, r4.x, r2.w
    dp4 r3.w, c11, r0
    add_pp r2.y, r2.w, r3.w
    dp4 r1.x, c12, r1
    mad_pp r1.x, c7.z, r4.x, r1.x
    dp4 r0.x, c13, r0
    add_pp r2.z, r0.x, r1.x
    mul_pp r0.xyz, r2, c4
    cmp_pp oC0.xyz, r2, r0, c6.y
    texld r0, v2, s2
    add r0.yz, c6.z, v2.xxyw
    dp2add r0.y, r0.yzzw, r0.yzzw, c6.y
    mul r0.y, r0.y, c14.y
    mul_sat r0.y, r0.y, r0.y
    add r0.y, -r0.y, -c5.y
    mul r0.x, r0.x, r0.y
    if_ne c3.x, -c3.x
      texld r1, c6.wyzw, s1
      add r0.y, -r1.y, v3.w
      mad r3.z, r1.x, r0.y, r3.x
      mov r3.xy, r3.zyzw
      mov r0.y, v3.w
    else
      mov r0.y, v3.w
    endif
    rcp r0.y, r0.y
    mul r0.yz, r0.y, r3.xxyw
    mad r1.xy, r0.yzzw, c1, c1.wzzw
    mov r1.zw, c6.y
    texldl r1, r1, s0
    add r0.y, r1.w, -c2.y
    add r0.z, -r0.y, c15.x
    rcp r0.y, r0.y
    cmp r0.y, r0.z, c15.y, r0.y
    mad r0.y, c2.x, r0.y, -v3.w
    mul_sat r0.y, r0.y, c15.z
    add r0.y, -r0.y, c15.w
    frc r0.z, -r0.y
    add_sat r0.y, r0.z, r0.y
    mul_pp oC0.w, r0.x, r0.y

// approximately 69 instruction slots used (4 texture, 65 arithmetic)
