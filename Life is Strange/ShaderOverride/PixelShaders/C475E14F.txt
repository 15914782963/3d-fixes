//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEResolution           c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   UniformPixelVector_0    c7       1
//   UniformPixelVector_1    c8       1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//

    ps_3_0
    def c4, 1, 0.25, 0.5, 0.100000001
    def c5, 2.5877707, 4.72275114, 0.5, 4
    def c6, 6.28318548, -3.14159274, 0.577350259, -0.577350259
    def c9, 0.0625, 0, 9.99999975e-006, 100000
    def c10, -0.400000006, 1, -9.99999997e-007, 0
    def c11, 0.166666672, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1
    dcl_texcoord2 v2.yzw
    dcl_texcoord4 v3
    dcl_texcoord5 v4.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_C475E14F_534.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v4.w
    add_pp r1.xyz, c7, v1
    mov r2.xy, c4
    mad r2, v0.xyxy, r2.xyxy, c8.xyxy
    add r3.xy, r2.zwzw, c4.z
    frc r3.xy, r3
    mad r3.xy, r3, c6.x, c6.y
    sincos r4.xy, r3.x
    sincos r5.xy, r3.y
    mul r5.z, r4.y, r5.x
    mov r5.x, r4.x
    mad r2, r2, c5.xxyy, c5.z
    frc r2, r2
    mad r2, r2, c6.x, c6.y
    sincos r3.xy, r2.x
    sincos r4.xy, r2.y
    mul r4.z, r3.y, r4.x
    mov r4.x, r3.x
    mul r3.xyz, r4, c6.zwzw
    mad r3.xyz, r5, c6.zwzw, -r3
    sincos r4.xy, r2.z
    sincos r5.xy, r2.w
    mul r5.z, r4.y, r5.x
    mov r5.x, r4.x
    mad r2.xyz, r5, -c6.zwzw, r3
    dp3 r1.w, r2, r2
    rsq r1.w, r1.w
    mul r2.x, r1.w, r2.y
    mul r2.x, r2.x, v2.y
    mad_sat r2.x, r2.x, c4.w, v0.y
    add r2.y, -r2.x, c4.x
    mul r2.x, r2.y, r2.x
    mul r2.x, r2.x, c5.w
    mul r2.y, r2.x, r2.x
    mad r1.w, r2.z, r1.w, c4.x
    mad r1.w, r1.w, c10.x, c10.y
    mad r2.x, r2.x, r2.x, c10.z
    pow r3.x, r2.y, r1.w
    cmp r1.w, r2.x, r3.x, c10.w
    add r1.w, r1.w, -v2.z
    mul_sat r1.w, r1.w, v2.w
    mul r1.w, r1.w, r1.w
    abs r2.x, c3.x
    if_ne c3.x, -c3.x
      texld r3, c9, s1
      add r2.y, -r3.y, v4.w
      mad r0.z, r3.x, r2.y, r0.x
      mov r0.w, v4.w
      mov r2.yzw, r0.xzyw
    else
      mov r2.yzw, c10.w
    endif
    mov r0.z, v4.w
    cmp r0.xyz, -r2.x, r0, r2.yzww
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c10.w
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c9.z
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c9.w, r0.x
    mad r0.x, c2.x, r0.x, -v4.w
    mul_sat r0.x, r0.x, c11.x
    mul r0.x, r0.x, r1.w
    texld r0, r0.x, s2
    mul_pp oC0.w, r0.y, v1.w
    mad_pp oC0.xyz, r1, v3.w, v3

// approximately 117 instruction slots used (4 texture, 113 arithmetic)
