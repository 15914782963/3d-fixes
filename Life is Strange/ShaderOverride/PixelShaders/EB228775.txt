//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ObjectWorldPositionAndRadius;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   samplerCUBE PixelTextureCube_0;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   float3x3 WorldToLocalMatrix;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNEEnvMapParameter           c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   WorldToLocalMatrix           c7       3
//   DNEMiscParameter             c10      1
//   DNECubemapPosition           c11      1
//   CameraWorldPos               c12      1
//   DNEResolution                c13      1
//   ObjectWorldPositionAndRadius c14      1
//   UniformPixelVector_0         c15      1
//   UniformPixelVector_1         c16      1
//   UniformPixelVector_2         c17      1
//   UniformPixelVector_3         c18      1
//   UniformPixelVector_4         c19      1
//   UniformPixelVector_5         c20      1
//   UniformPixelScalars_0        c21      1
//   UniformPixelScalars_1        c22      1
//   UpperSkyColor                c23      1
//   AmbientColorAndSkyFactor     c24      1
//   NvStereoFixTexture           s0       1
//   DNEEnvironmentTexture        s1       1
//   PixelTexture2D_0             s2       1
//   PixelTexture2D_1             s3       1
//   PixelTexture2D_2             s4       1
//   PixelTextureCube_0           s5       1
//   VAOBuffer                    s6       1
//

    ps_3_0
    def c6, 0, 2, -5.55472994, -6.98316002
    def c25, 1, 9.99999975e-006, -1, -0
    def c26, -9.99999997e-007, 0.0625, 0, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord2_pp v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord5 v5
    dcl vPos.xy
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_cube s5
    dcl_2d s6

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_EB228775_641.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v1.w
    add r3.xyz, c12, v5
    mad r4.xy, vPos, c13, c13.zwzw
    mul r4.xy, r4, v5.w
    dp3_pp r0.w, v4, v4
    rsq_pp r0.w, r0.w
    mul_pp r5.xyz, r0.w, v4
    mad_sat_pp r1.w, c10.x, v5.w, c10.y
    mad_pp r6.xyz, r5.z, c6.xxyw, -r5
    texld_pp r7, v2, s3
    mad_pp r7.yzw, r7.xxyz, c5.w, c5.xxyz
    texld_pp r8, v2, s4
    mov_sat_pp r2.w, r5.z
    max_pp r3.w, r8.w, r7.x
    mad_pp r5.w, r2.w, c6.z, c6.w
    mul_pp r2.w, r2.w, r5.w
    exp_pp r2.w, r2.w
    lrp_pp r5.w, r2.w, r3.w, r7.x
    add_pp r3.w, -r5.w, c25.x
    texld_pp r9, v2, s2
    mul_sat_pp r5.w, r9.w, c21.z
    mul_pp r6.w, r3.w, r5.w
    mul_pp r8.xyz, r9, r6.w
    mul_pp r8.xyz, r8, c22.x
    mov r7.x, c25.x
    add_pp r9.xyz, r7.x, -c15
    mul_pp r8.xyz, r8, r9
    mad_pp r8.xyz, r8, c4.w, c4
    add_pp r9.xyz, r3, -c14
    mul r10.xyz, r9.y, c8
    mad r9.xyw, c7.xyzz, r9.x, r10.xyzz
    mad_pp r9.xyz, c9, r9.z, r9.xyww
    dp3 r6.w, r1, r5
    dp3 r7.x, r2, r5
    dp3 r9.w, r0, r5
    mul r10.xyz, r7.x, c8
    mad r10.xyz, c7, r6.w, r10
    mad_pp r10.xyz, c9, r9.w, r10
    nrm_pp r11.xyz, r10
    add r9.xyz, r9, -c17
    rcp r10.x, c16.x
    rcp r10.y, c16.y
    rcp r10.z, c16.z
    mul r12.xyz, r9, r10
    mad r11.xyz, -r11, r10, c25.y
    mad r13.xyz, r9, -r10, c25.x
    rcp r14.x, r11.x
    rcp r14.y, r11.y
    rcp r14.z, r11.z
    mul r13.xyz, r13, r14
    mad r9.xyz, r9, -r10, c25.z
    mul r9.xyz, r14, r9
    max r14.xyz, r13, r9
    min r6.w, r14.z, r14.y
    min r7.x, r6.w, r14.x
    mad r9.xyz, r11, r7.x, r12
    mad r9.xyz, c18, -r10, r9
    mul_pp r9.xyz, r9, c16
    mul r10, r9.xyyx, c19.xxyy
    mad_pp r9.xy, r10.zwzw, c25.xzzw, r10
    mad_pp r10.xyz, v4, r0.w, c25.wwzw
    mad_pp r5.xyz, c21.x, r10, -r5
    dp3_pp r10.x, r1, r5
    dp3_pp r10.y, r2, r5
    dp3_pp r10.z, r0, r5
    add_pp r9.xyz, r9, r10
    mov r9.w, c21.y
    texldl_pp r9, r9, s5
    add r0.w, r5.w, c26.x
    pow_pp r6.w, r5.w, c20.w
    add_pp r5.x, -r6.w, c25.x
    cmp_pp r0.w, r0.w, r5.x, c25.x
    add r5.x, -r0.w, c25.x
    mad_pp r0.w, c21.w, r5.x, r0.w
    mul_pp r5.xyz, r9, r0.w
    mul_pp r5.xyz, r5, c20
    dp3_pp r1.x, r1, r6
    dp3_pp r1.y, r2, r6
    dp3_pp r1.z, r0, r6
    add r0.xyz, r3, -c11
    mad_pp r0.xyz, c0.w, r0, r1
    mad_pp r0.w, c10.z, r8.w, c10.w
    texldl_pp r0, r0, s1
    max_pp r1.xyz, r8.w, r7.yzww
    lrp_pp r3.xyz, r2.w, r1, r7.yzww
    mul_pp r0.xyz, r0, r3
    mul_pp r0.xyz, r0, c0
    mul_pp r0.xyz, r0, r1.w
    mad_pp r0.xyz, r5, r3.w, r0
    add_pp r0.xyz, r0, c15
    mad_pp r0.xyz, v3, r8, r0
    mul r1.xyz, r8, c23
    mad_pp r0.xyz, r1, c24.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r1, c26.yzzw, s0
      add r1.y, -r1.y, v5.w
      mad r4.z, r1.x, r1.y, r4.x
      mov r4.w, v5.w
      mov r1.xyz, r4.zyww
    else
      mov_pp r1.xyz, c6.x
    endif
    mov r4.z, v5.w
    cmp r1.xyz, -r0.w, r4, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s6
    mul_pp oC0.xyz, r0, r1.x
    rcp r0.x, v5.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 128 instruction slots used (9 texture, 119 arithmetic)
