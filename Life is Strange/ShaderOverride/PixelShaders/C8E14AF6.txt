//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEMiscParameter;
//   sampler2D DNEReflectionTexture;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   sampler2D HeightmapTexture;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenDoorFadeSettings;
//   float4 ScreenDoorFadeSettings2;
//   sampler2D ScreenDoorNoiseTexture;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   bool bEnableScreenDoorFade;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   bEnableScreenDoorFade     b0       1
//   DNEMiscParameter          c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DNEResolution             c7       1
//   ScreenDoorFadeSettings    c8       1
//   ScreenDoorFadeSettings2   c9       1
//   UniformPixelVector_0      c10      1
//   UniformPixelVector_1      c11      1
//   UniformPixelScalars_0     c12      1
//   UpperSkyColor             c13      1
//   AmbientColorAndSkyFactor  c14      1
//   NvStereoFixTexture        s0       1
//   DNEReflectionTexture      s1       1
//   ScreenDoorNoiseTexture    s2       1
//   PixelTexture2D_0          s3       1
//   PixelTexture2D_1          s4       1
//   PixelTexture2D_2          s5       1
//   HeightmapTexture          s6       1
//   VAOBuffer                 s7       1
//

    ps_3_0
    def c6, 2, -1, 1, 0
    def c15, 0.5, -0.5, -5.55472994, -6.98316002
    def c16, 0.0625, 0, 0, 0
    dcl_texcoord2_pp v0.xyz
    dcl_texcoord6 v1.xyz
    dcl_texcoord5 v2.w
    dcl_texcoord1 v3.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_C8E14AF6_351.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    texld r0, v3, s6
    mad r0.xy, r0.zwzw, c6.x, c6.y
    dp2add r1.x, r0, -r0, c6.z
    rsq r1.x, r1.x
    rcp r0.z, r1.x
    mov r0.w, -r0.x
    dp2add r1.x, r0.zwzw, r0.zwzw, c6.w
    rsq r1.x, r1.x
    mul r1.yz, r0.xwzw, r1.x
    mov r1.x, c6.w
    mul r2.xyz, r0.zxyw, r1
    mad r2.xyz, r0.yzxw, r1.yzxw, -r2
    nrm r3.xyz, v1
    dp2add_pp r1.x, r1.zyzw, r3.xzzw, c6.w
    dp3_pp r1.y, r2, r3
    dp3_pp r1.z, r0, r3
    mad r0.xy, vPos, c7, c7.zwzw
    mul r0.xy, r0, v2.w
    nrm_pp r2.xyz, r1
    mad_sat_pp r1.x, c0.x, v2.w, c0.y
    texld_pp r3, v3, s3
    mad_pp r1.yzw, r3.xxyz, c6.x, c6.y
    nrm_pp r3.xyz, r1.yzww
    texld_pp r4, v3, s5
    mad_pp r1.yzw, r4.xxyz, c5.w, c5.xxyz
    if b0
      mad r4.xy, vPos, c9.zwzw, c9
      texld_pp r4, r4, s2
      mad r2.w, c8.y, r4.x, c8.z
      mov_pp r4.z, c6.z
      add r4.x, r4.z, -c8.x
      add r4, r2.w, -r4.x
      texkill r4
    endif
    texld_pp r4, v3, s4
    mul_pp r4.xyz, r4, c11
    mov_pp r5.z, c6.z
    add_pp r5.xyz, r5.z, -c10
    mul_pp r4.xyz, r4, r5
    mad_pp r4.xyz, r4, c4.w, c4
    rcp r2.w, v2.w
    mul r5.xy, r0, r2.w
    mad r5.xy, r5, c15, c15.x
    mad_pp r5.xy, r3, c12.x, r5
    mad_pp r5.w, -c0.w, r3.w, c0.w
    mov r5.z, c6.w
    texldl_pp r5, r5, s1
    dp3_sat_pp r2.x, r3, r2
    max_pp r6.xyz, r3.w, r1.yzww
    mad_pp r2.y, r2.x, c15.z, c15.w
    mul_pp r2.x, r2.x, r2.y
    exp_pp r2.x, r2.x
    lrp_pp r3.xyz, r2.x, r6, r1.yzww
    mul_pp r1.yzw, r5.xxyz, r3.xxyz
    mul_pp r1.yzw, r1, c0.z
    mad_pp r1.xyz, r1.x, r1.yzww, c10
    mad_pp r1.xyz, v0, r4, r1
    mul r2.xyz, r4, c13
    mad_pp r1.xyz, r2, c14.w, r1
    abs r1.w, c3.x
    if_ne c3.x, -c3.x
      texld r3, c16, s0
      add r2.x, -r3.y, v2.w
      mad r0.z, r3.x, r2.x, r0.x
      mov r0.w, v2.w
      mov r2.xyz, r0.zyww
    else
      mov_pp r2.xyz, c6.w
    endif
    mov r0.z, v2.w
    cmp r0.xyz, -r1.w, r0, r2
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s7
    mul_pp oC0.xyz, r0.x, r1
    mad oC0.w, c2.x, r2.w, c2.y

// approximately 91 instruction slots used (9 texture, 82 arithmetic)
