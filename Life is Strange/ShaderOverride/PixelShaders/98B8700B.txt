//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   CameraWorldPos          c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   DNEResolution           c7       1
//   UniformPixelVector_0    c8       1
//   UniformPixelVector_1    c9       1
//   UniformPixelVector_2    c10      1
//   UniformPixelVector_3    c11      1
//   UniformPixelVector_4    c12      1
//   UniformPixelScalars_0   c13      1
//   UniformPixelScalars_2   c14      1
//   UniformPixelScalars_3   c15      1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//

    ps_3_0
    def c4, 0.0625, 0, 9.99999975e-006, 100000
    dcl_texcoord4 v0.w
    dcl_texcoord6 v1.xyz
    dcl_texcoord5 v2
    dcl_color v3.xyz
    dcl_color1 v4
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --git -f --disable-redundant-unreal-correction PixelShader_133_CRC32_98B8700B.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v4
    nrm_pp r1.xyz, v3
    mul_pp r0.y, r0.y, r1.x
    mad_pp r0.x, r0.x, r1.y, -r0.y
    mul_pp r0.x, r0.x, v4.w
    add r2, c0.xzxy, v2.xzxy
    mad r0.yw, vPos.xxzy, c7.xxzy, c7.xzzw
    mul r3.xy, r0.ywzw, v2.w
    dp3_pp r0.y, v1, v1
    rsq_pp r0.y, r0.y
    mul_pp r0.y, r0.y, v1.z
    mov r1.x, c13.x
    mul r1.xyw, r1.x, c9.xyzz
    rcp r4.xz, c10.x
    rcp r4.w, c10.y
    rcp r4.y, c10.z
    mad r5.xy, r2.wyzw, r4.wyzw, c11
    texld r5, r5, s2
    mov_pp r0.w, r1.z
    mad r2, r2, r4, c12.xyxy
    texld r4, r2, s2
    mul r0.x, r0_abs.x, r4.y
    mad r0.x, r5.y, r0_abs.w, r0.x
    texld r2, r2.zwzw, s2
    mad r0.x, r2.y, r0_abs.z, r0.x
    mul r0.x, r0.x, r0.x
    mad r0.x, r0.x, c14.z, c14.w
    mul r0.xzw, r1.xyyw, r0.x
    mul r1.x, r0_abs.y, r0_abs.y
    mul r0.y, r0_abs.y, r1.x
    mul r0.xyz, r0.xzww, r0.y
    add r0.w, -c15.x, v2.w
    rcp r1.x, c15.y
    mul_sat r0.w, r0.w, r1.x
    mul r0.xyz, r0, r0.w
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r1, c4, s1
      add r1.y, -r1.y, v2.w
      mad r3.z, r1.x, r1.y, r3.x
      mov r3.w, v2.w
      mov r1.xyz, r3.zyww
    else
      mov r1.xyz, c4.y
    endif
    mov r3.z, v2.w
    cmp r1.xyz, -r0.w, r3, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    mov r1.zw, c4.y
    texldl r1, r1, s0
    add r0.w, r1.w, -c2.y
    add r1.x, -r0.w, c4.z
    rcp r0.w, r0.w
    cmp r0.w, r1.x, c4.w, r0.w
    mad r0.w, c2.x, r0.w, -v2.w
    rcp r1.x, c15.z
    mul_sat r0.w, r0.w, r1.x
    mad_pp r0.xyz, r0.w, r0, c8
    mul_pp oC0.xyz, r0, v0.w
    mov oC0.w, c4.y

// approximately 69 instruction slots used (6 texture, 63 arithmetic)
