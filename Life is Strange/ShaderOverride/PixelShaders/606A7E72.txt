//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 FalloffParameters;
//   float4 LightPosition;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 SampleOffsets[8];
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4x4 ScreenToShadowMatrix;
//   float4x4 ScreenToWorld;
//   float3 ShadowBufferSizeAndSoftTransitionScale;
//   sampler2D ShadowDepthTexture;
//   float4 ShadowModulateColor;
//
//
// Registers:
//
//   Name                                   Reg   Size
//   -------------------------------------- ----- ----
//   ShadowModulateColor                    c0       1
//   ScreenPositionScaleBias                c1       1
//   MinZ_MaxZRatio                         c2       1
//   NvStereoEnabled                        c3       1
//   SampleOffsets                          c7       8
//   ScreenToWorld                          c15      4
//   ScreenToShadowMatrix                   c19      4
//   LightPosition                          c23      1
//   FalloffParameters                      c24      1
//   ShadowBufferSizeAndSoftTransitionScale c25      1
//   SceneColorTexture                      s0       1
//   NvStereoFixTexture                     s1       1
//   ShadowDepthTexture                     s2       1
//

    ps_3_0
    def c4, 0.0625, 0, 9.99999975e-006, 100000
    def c5, 0.999000013, 0, 1, -1
    dcl_texcoord v0.xyw
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15


// Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-unreal-shadows --only-autofixed --git --quiet CRC32_606A7E72_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

texldl r9, c220.z, s15
mov r10.xyw, v0
add r9.w, r10.w, -r9.y
mad r10.x, r9.w, r9.x, r10.x

    abs r0.x, c3.x
    if_ne c3.x, -c3.x
      texld r1, c4, s1
      add r0.y, -r1.y, r10.w
      mad r1.x, r1.x, r0.y, r10.x
      mov r1.yz, r10.xyww
    else
      mov r1.xyz, c4.y
    endif
    cmp r0.xyz, -r0.x, r10.xyww, r1
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.y
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c4.z
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c4.w, r0.x
    mul r0.x, r0.x, c2.x
    rcp r0.y, r10.w
    mul r0.yz, r0.y, r10.xxyw
    mul r0.yz, r0.x, r0
    mul r1, r0.z, c20

// Unreal Engine shadow fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-unreal-shadows --only-autofixed --git --quiet CRC32_606A7E72_0.txt
add r9.w, r0.x, -r9.y
mad r0.y, -r9.w, r9.x, r0.y

    mad r1, c19, r0.y, r1
    mad r1, c21, r0.x, r1
    add r1, r1, c22
    rcp r0.w, r1.w
    min r2.x, r1.z, c5.x
    mad_pp r3, r1.xyxy, r0.w, c7
    texld_pp r4, r3, s2
    texld_pp r5, r3.zwzw, s2
    add r4, r2.x, -r4.wxyz
    add r5, r2.x, -r5.wxyz
    cmp_pp r4, r4, c5.y, c5.z
    cmp_pp r5, r5, c5.y, c5.z
    mul r3, r3, c25.xyxy
    frc_pp r3, r3
    mov_pp r6.xy, r4
    mov_pp r6.zw, r5.xyxy
    mov_pp r5.xy, r4.zwzw
    lrp_pp r4, r3.yyww, r5, r6
    mad_pp r5, r1.xyxy, r0.w, c8
    texld_pp r6, r5, s2
    texld_pp r7, r5.zwzw, s2
    add r6, r2.x, -r6.wxyz
    add r7, r2.x, -r7.wxyz
    cmp_pp r6, r6, c5.y, c5.z
    cmp_pp r7, r7, c5.y, c5.z
    mul r5, r5, c25.xyxy
    frc_pp r5, r5
    mov_pp r8.xy, r6
    mov_pp r8.zw, r7.xyxy
    mov_pp r7.xy, r6.zwzw
    lrp_pp r6, r5.yyww, r7, r8
    lrp_pp r7.xy, r3.xzzw, r4.ywzw, r4.xzzw
    lrp_pp r7.zw, r5.xyxz, r6.xyyw, r6.xyxz
    dp4_pp r1.z, r7, c4.x
    mad_pp r3, r1.xyxy, r0.w, c9
    texld_pp r4, r3, s2
    texld_pp r5, r3.zwzw, s2
    add r4, r2.x, -r4.wxyz
    add r5, r2.x, -r5.wxyz
    cmp_pp r4, r4, c5.y, c5.z
    cmp_pp r5, r5, c5.y, c5.z
    mul r3, r3, c25.xyxy
    frc_pp r3, r3
    mov_pp r6.xy, r4
    mov_pp r6.zw, r5.xyxy
    mov_pp r5.xy, r4.zwzw
    lrp_pp r4, r3.yyww, r5, r6
    mad_pp r5, r1.xyxy, r0.w, c10
    texld_pp r6, r5, s2
    texld_pp r7, r5.zwzw, s2
    add r6, r2.x, -r6.wxyz
    add r7, r2.x, -r7.wxyz
    cmp_pp r6, r6, c5.y, c5.z
    cmp_pp r7, r7, c5.y, c5.z
    mul r5, r5, c25.xyxy
    frc_pp r5, r5
    mov_pp r8.xy, r6
    mov_pp r8.zw, r7.xyxy
    mov_pp r7.xy, r6.zwzw
    lrp_pp r6, r5.yyww, r7, r8
    lrp_pp r7.xy, r3.xzzw, r4.ywzw, r4.xzzw
    lrp_pp r7.zw, r5.xyxz, r6.xyyw, r6.xyxz
    dp4_pp r1.w, r7, c4.x
    add_pp r1.z, r1.w, r1.z
    mad_pp r3, r1.xyxy, r0.w, c11
    texld_pp r4, r3, s2
    texld_pp r5, r3.zwzw, s2
    add r4, r2.x, -r4.wxyz
    add r5, r2.x, -r5.wxyz
    cmp_pp r4, r4, c5.y, c5.z
    cmp_pp r5, r5, c5.y, c5.z
    mul r3, r3, c25.xyxy
    frc_pp r3, r3
    mov_pp r6.xy, r4
    mov_pp r6.zw, r5.xyxy
    mov_pp r5.xy, r4.zwzw
    lrp_pp r4, r3.yyww, r5, r6
    mad_pp r5, r1.xyxy, r0.w, c12
    texld_pp r6, r5, s2
    texld_pp r7, r5.zwzw, s2
    add r6, r2.x, -r6.wxyz
    add r7, r2.x, -r7.wxyz
    cmp_pp r6, r6, c5.y, c5.z
    cmp_pp r7, r7, c5.y, c5.z
    mul r5, r5, c25.xyxy
    frc_pp r5, r5
    mov_pp r8.xy, r6
    mov_pp r8.zw, r7.xyxy
    mov_pp r7.xy, r6.zwzw
    lrp_pp r6, r5.yyww, r7, r8
    lrp_pp r7.xy, r3.xzzw, r4.ywzw, r4.xzzw
    lrp_pp r7.zw, r5.xyxz, r6.xyyw, r6.xyxz
    dp4_pp r1.w, r7, c4.x
    add_pp r1.z, r1.w, r1.z
    mad_pp r3, r1.xyxy, r0.w, c13
    texld_pp r4, r3, s2
    texld_pp r5, r3.zwzw, s2
    add r4, r2.x, -r4.wxyz
    add r5, r2.x, -r5.wxyz
    cmp_pp r4, r4, c5.y, c5.z
    cmp_pp r5, r5, c5.y, c5.z
    mul r3, r3, c25.xyxy
    frc_pp r3, r3
    mov_pp r6.xy, r4
    mov_pp r6.zw, r5.xyxy
    mov_pp r5.xy, r4.zwzw
    lrp_pp r4, r3.yyww, r5, r6
    mad_pp r5, r1.xyxy, r0.w, c14
    texld_pp r6, r5, s2
    texld_pp r7, r5.zwzw, s2
    add r6, r2.x, -r6.wxyz
    add r2, r2.x, -r7.wxyz
    cmp_pp r6, r6, c5.y, c5.z
    cmp_pp r2, r2, c5.y, c5.z
    mul r5, r5, c25.xyxy
    frc_pp r5, r5
    mov_pp r7.xy, r6
    mov_pp r7.zw, r2.xyxy
    mov_pp r2.xy, r6.zwzw
    lrp_pp r6, r5.yyww, r2, r7
    lrp_pp r2.xy, r3.xzzw, r4.ywzw, r4.xzzw
    lrp_pp r2.zw, r5.xyxz, r6.xyyw, r6.xyxz
    dp4_pp r0.w, r2, c4.x
    add_pp r0.w, r0.w, r1.z
    mul r1.xyz, r0.z, c16
    mad r1.xyz, c15, r0.y, r1
    mad r0.xyz, c17, r0.x, r1
    add r0.xyz, r0, c18
    add r0.xyz, -r0, c23
    mul r0.xyz, r0, c23.w
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    mad r0.x, r0.x, c24.y, c24.z
    max r1.x, r0.x, c4.y
    mad r0.x, r1.x, -r1.x, c5.z
    max r1.x, r0.x, c4.y
    pow_pp r0.x, r1.x, c24.x
    mov r1.w, c5.w
    add r1, r1.w, c0
    mad r1, r0.x, r1, c5.z
    mul r0.x, r0.w, r0.w
    add r2, -r1, c5.z
    mad oC0, r0.x, r2, r1

// approximately 173 instruction slots used (19 texture, 154 arithmetic)
