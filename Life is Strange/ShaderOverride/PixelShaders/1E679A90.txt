//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNEResolution                c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   LightColorAndFalloffExponent c7       1
//   SpotDirection                c8       1
//   SpotAngles                   c9       1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//

    ps_3_0
    def c2, -0.649999976, 1, 0.5, 0
    def c5, 0.0625, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord5 v1.xyz
    dcl_texcoord7 v2.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_1E679A90_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    texld r0, v0, s3
    add r0, r0.w, c2.x
    texkill r0
    dp3 r0.x, v1, v1
    rsq r0.y, r0.x
    mul r0.yzw, r0.y, v1.xxyz
    dp3 r0.y, r0.yzww, -c8
    add r0.y, r0.y, -c9.x
    mul_sat r0.y, r0.y, c9.y
    mul_pp r1.x, r0.y, r0.y
    texld_pp r2, c2.yzzw, s0
    mov r1.yw, c2.z
    texld_pp r3, r1, s0
    add r0.y, -r0.x, c2.y
    mul r0.y, r2.x, r0.y
    mul r4, r3.x, r0.y
    mov r5, r4
    texkill r5
    if b0
      mad r0.yz, vPos.xxyw, c0.xxyw, c0.xzww
      mul r4.xy, r0.yzzw, v2.w
      if_ne c3.x, -c3.x
        texld r5, c5, s1
        add r0.y, -r5.y, v2.w
        mad r4.z, r5.x, r0.y, r4.x
        mov r4.xy, r4.zyzw
        mov r0.y, v2.w
      else
        mov r0.y, v2.w
      endif
      rcp r0.y, r0.y
      mul r0.yz, r0.y, r4.xxyw
      mad r0.yz, r0, c1.xxyw, c1.xwzw
      texld r5, r0.yzzw, s2
      mul_pp r0.yzw, r5.xxyz, r5.xxyz
      mul_pp r0.yzw, r0, r2.x
    else
      mov_pp r0.yzw, r2.x
    endif
    mov_sat r0.x, r0.x
    add r0.x, -r0.x, c2.y
    pow_sat_pp r1.z, r0.x, c7.w
    texld_pp r1, r1.zwzw, s0
    mul r0.xyz, r0.yzww, c4
    mul r0.xyz, r0, c7
    mul r0.xyz, r1.x, r0
    mul r0.xyz, r3.x, r0
    cmp oC0.xyz, -r4.w, c2.w, r0
    mov oC0.w, c2.w

// approximately 55 instruction slots used (6 texture, 49 arithmetic)
