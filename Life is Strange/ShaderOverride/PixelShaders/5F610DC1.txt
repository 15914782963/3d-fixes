//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   float4 WorldIncidentLighting[7];
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   WorldIncidentLighting        c7       7
//   DNEResolution                c14      1
//   UniformPixelVector_0         c15      1
//   LightColorAndFalloffExponent c16      1
//   UpperSkyColor                c17      1
//   AmbientColorAndSkyFactor     c18      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   PixelTexture2D_0             s2       1
//   PixelTexture2D_1             s3       1
//   PixelTexture2D_2             s4       1
//   PixelTexture2D_3             s5       1
//   VAOBuffer                    s6       1
//

    ps_3_0
    def c6, 2, -1, 0.125, 0.015625
    def c19, 0.150000006, -0.333299994, 3, -1
    def c20, -1.02332771, 1.02332771, 0.858085215, 0.886227608
    def c21, 0.0625, 0, 1, 0.5
    def c22, -9.99999997e-007, 15, 0, 0
    def c23, -0.858085215, 0.247708291, 0.429042608, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord4 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord5 v5.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_5F610DC1_6562775.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v1.w
    mad r3.xy, vPos, c14, c14.zwzw
    mul r3.xy, r3, v5.w
    nrm_pp r4.xyz, v4
    texld_pp r5, v2, s2
    mad_pp r5.xyz, r5, c6.x, c6.y
    nrm_pp r6.xyz, r5
    nrm_pp r5.xyz, v3
    dp3_pp r0.w, r6, r4
    mul_pp r7.xyz, r0.w, r6
    mad_pp r4.xyz, r7, c6.x, -r4
    rcp r0.w, v5.w
    mul r7, r0.w, r3.xyxy
    mad r7, r7, c1.xyxy, c1.wzwz
    dsx r1.w, r7.z
    dsy r2.w, r7.w
    rcp r8.xz, r1.w
    rcp r8.yw, r2.w
    mul r7, r7, r8
    mul r7, r7, c6.zzww
    texld r8, r7, s4
    texld r7, r7.zwzw, s5
    lrp r1.w, c19.x, r7.y, r8.y
    add r1.w, -r1.w, -c6.y
    frc r2.w, -r1.w
    add_sat r1.w, r1.w, r2.w
    add r7, r1.w, c19.y
    texkill r7
    texld r7, v2, s3
    mov r8.y, c6.y
    add r8.xyz, -r8.y, -c15
    mul_pp r7.xyz, r7, r8
    mad_pp r7.xyz, r7, c4.w, c4
    mul r8.xyz, r7, c17
    mov_pp r1.w, c18.w
    mad_pp r8.xyz, r8, r1.w, c15
    dp3_pp r1.z, r1, r6
    dp3_pp r1.x, r2, r6
    dp3_pp r1.y, r0, r6
    mul r0.xyz, r1, r1.xyxw
    mad r2.y, r0.y, c19.z, c19.w
    mul r2.xz, r1, r1.y
    mad_pp r2.w, r1.z, r1.z, -r0.x
    mul r1.xyz, r1, c20.xyxw
    mul r1.w, r0.z, c20.z
    mul r2, r2, c23.xyxz
    dp4 r0.x, c8, r1
    mov r4.w, c20.w
    mad_pp r0.x, c7.x, r4.w, r0.x
    dp4 r0.y, c9, r2
    add_pp r0.x, r0.y, r0.x
    dp4 r5.w, c10, r1
    mad_pp r5.w, c7.y, r4.w, r5.w
    dp4 r6.w, c11, r2
    add_pp r0.y, r5.w, r6.w
    dp4 r1.x, c12, r1
    mad_pp r1.x, c7.z, r4.w, r1.x
    dp4 r1.y, c13, r2
    add_pp r0.z, r1.y, r1.x
    mul_pp r1.xyz, r0, r7
    cmp_pp r0.xyz, r0, r1, c23.w
    add_pp r0.xyz, r0, r8
    abs r1.x, c3.x
    if_ne c3.x, -c3.x
      texld r2, c21, s1
      add r1.y, -r2.y, v5.w
      mad r3.z, r2.x, r1.y, r3.x
      mov r3.w, v5.w
      mov r1.yzw, r3.xzyw
    else
      mov r1.yzw, c23.w
    endif
    mov r3.z, v5.w
    cmp r1.xyz, -r1.x, r3, r1.yzww
    rcp r1.z, r1.z
    mul r1.xy, r1.z, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s6
    texld_pp r2, c21.zwzw, s0
    dp3_sat_pp r1.y, r6, r5
    add r1.z, r1.y, c22.x
    mul r1.y, r1.y, c0.w
    dp3_sat_pp r1.w, r4, r5
    add r2.y, r1.w, c22.x
    pow_pp r2.z, r1.w, c22.y
    mul r1.w, r2.z, c0.x
    mul r3.xyz, r1.y, r7
    cmp r3.xyz, r1.z, r3, c23.w
    mul_pp r1.yzw, r1.w, c5.xxyz
    cmp_pp r1.yzw, r2.y, r1, c23.w
    add_pp r1.yzw, r1, r3.xxyz
    mul_pp r1.yzw, r2.x, r1
    mul_pp r1.yzw, r1, c16.xxyz
    mad_pp r0.xyz, r0, r1.x, r1.yzww
    mad_pp oC0.xyz, r7, c18, r0
    mad oC0.w, c2.x, r0.w, c2.y

// approximately 116 instruction slots used (7 texture, 109 arithmetic)
