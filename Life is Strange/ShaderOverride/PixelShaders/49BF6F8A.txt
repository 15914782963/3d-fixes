//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 WorldIncidentLighting[7];
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   DNEResolution            c0       1
//   ScreenPositionScaleBias  c1       1
//   MinZ_MaxZRatio           c2       1
//   NvStereoEnabled          c3       1
//   DiffuseOverrideParameter c4       1
//   WorldIncidentLighting    c7       1
//   SceneColorTexture        s0       1
//   NvStereoFixTexture       s1       1
//   PixelTexture2D_1         s2       1
//   PixelTexture2D_2         s3       1
//

    ps_3_0
    def c5, 0.886226952, 0, 6, 5
    def c6, 0.0625, 0, 9.99999975e-006, 100000
    def c8, 1, 150, -0.00100000005, 1000
    def c9, -0.100000001, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1.x
    dcl_texcoord3_pp v2.w
    dcl_texcoord7 v3.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_49BF6F8A_1068.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v3.w
    mov r1.xy, c5
    mul_pp r1.xzw, r1.x, c7.xyyz
    mul_pp r1.xzw, r1, c4.xyyz
    cmp_pp oC0.xyz, c7, r1.xzww, r1.y
    texld r1, v0, s2
    texld r2, v0.wzzw, s2
    lrp r0.w, v1.x, r2.w, r1.w
    mul r0.w, r0.w, v2.w
    mul r1.xy, c5.zwzw, v0
    texld r1, r1, s3
    if_ne c3.x, -c3.x
      texld r2, c6, s1
      add r1.y, -r2.y, v3.w
      mad r0.z, r2.x, r1.y, r0.x
      mov r0.xy, r0.zyzw
      mov r0.z, v3.w
    else
      mov r0.z, v3.w
    endif
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r2.xy, r0, c1, c1.wzzw
    mov r2.zw, c5.y
    texldl r2, r2, s0
    add r0.x, r2.w, -c2.y
    add r0.y, -r0.x, c6.z
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c6.w, r0.x
    add r0.y, -r1.x, c8.x
    mul r0.z, r0.y, c8.y
    mad r0.x, c2.x, r0.x, -v3.w
    mad r0.y, r0.y, c8.y, c8.z
    rcp r0.z, r0.z
    cmp r0.y, r0.y, r0.z, c8.w
    mul_sat r0.x, r0.y, r0.x
    mad r0.x, r0.w, r0.x, c9.x
    frc r0.y, -r0.x
    add_sat_pp oC0.w, r0.y, r0.x

// approximately 43 instruction slots used (6 texture, 37 arithmetic)
