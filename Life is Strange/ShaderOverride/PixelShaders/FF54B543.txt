//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   DNEEnvMapParameter       c0       1
//   ScreenPositionScaleBias  c1       1
//   MinZ_MaxZRatio           c2       1
//   NvStereoEnabled          c3       1
//   DiffuseOverrideParameter c4       1
//   DNEResolution            c7       1
//   UniformPixelVector_0     c8       1
//   UpperSkyColor            c9       1
//   AmbientColorAndSkyFactor c10      1
//   NvStereoFixTexture       s0       1
//   DNEEnvironmentTexture    s1       1
//   VAOBuffer                s2       1
//

    ps_3_0
    def c5, 0, 2, 0.0625, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord6 v2.xyz
    dcl_texcoord5 v3.w
    dcl vPos.xy
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_FF54B543_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v1.w
    mad r3.xy, vPos, c7, c7.zwzw
    mul r3.xy, r3, v3.w
    nrm_pp r4.xyz, v2
    mad_pp r4.xyz, r4.z, c5.xxyw, -r4
    dp3_pp r1.x, r1, r4
    dp3_pp r1.y, r2, r4
    dp3_pp r1.z, r0, r4
    mov r1.w, c5.x
    texldl_pp r0, r1, s1
    mov_pp r1.xyz, c0
    mad_pp r0.xyz, r0, r1, c8
    mov r1.xyz, c4
    mul r2.xyz, r1, c9
    mad_pp r0.xyz, r2, c10.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r2, c5.zxzw, s0
      add r1.w, -r2.y, v3.w
      mad r3.z, r2.x, r1.w, r3.x
      mov r3.w, v3.w
      mov r2.xyz, r3.zyww
    else
      mov_pp r2.xyz, c5.x
    endif
    mov r3.z, v3.w
    cmp r2.xyz, -r0.w, r3, r2
    rcp r0.w, r2.z
    mul r2.xy, r0.w, r2
    mad r2.xy, r2, c1, c1.wzzw
    texld_pp r2, r2, s2
    mul r1.xyz, r1, c10
    mad_pp oC0.xyz, r0, r2.x, r1
    rcp r0.x, v3.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 48 instruction slots used (4 texture, 44 arithmetic)
