//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   float4 ScreenDoorFadeSettings;
//   float4 ScreenDoorFadeSettings2;
//   sampler2D ScreenDoorNoiseTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowTexture;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   bool bEnableScreenDoorFade;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bEnableScreenDoorFade        b0       1
//   bReceiveDynamicShadows       b1       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   DNEResolution                c8       1
//   ScreenDoorFadeSettings       c9       1
//   ScreenDoorFadeSettings2      c10      1
//   UniformPixelVector_0         c11      1
//   UniformPixelVector_1         c12      1
//   LightColorAndFalloffExponent c13      1
//   SpotDirection                c14      1
//   SpotAngles                   c15      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   ScreenDoorNoiseTexture       s3       1
//   PixelTexture2D_0             s4       1
//   PixelTexture2D_1             s5       1
//   PixelTexture2D_2             s6       1
//   PixelTexture2D_3             s7       1
//   ShadowTexture                s8       1
//

    ps_3_0
    def c2, 2, -1, 10, 1.52876604
    def c6, -0.5, 0.5, 0.0625, 0
    def c16, 0.693147004, 2, 0.125, 0
    def c17, -5.55472994, -6.98316002, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xy
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord7 v5.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_6F8D2D78_8558.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v4, v4
    rsq_pp r0.x, r0.x
    mad_sat_pp r0.y, c7.x, v5.w, c7.y
    mul_pp r0.y, r0.y, c0.x
    texld_pp r1, v1, s4
    mad_pp r1.xyz, r1, c2.x, c2.y
    nrm_pp r2.xyz, r1
    nrm_pp r1.xyz, v2
    mad_pp r0.xzw, v4.xyyz, r0.x, r1.xyyz
    nrm_pp r3.xyz, r0.xzww
    mad_pp r0.x, r1.w, c2.z, c2.w
    exp_pp r0.x, r0.x
    texld_pp r4, v1, s5
    mov_sat_pp r0.z, r4.w
    add_pp r5, r0.z, c6.x
    texkill r5
    if b0
      mad r0.zw, vPos.xyxy, c10, c10.xyxy
      texld_pp r5, r0.zwzw, s3
      mad r0.z, c9.y, r5.x, c9.z
      mov r5.y, c2.y
      add r0.w, -r5.y, -c9.x
      add r5, -r0.w, r0.z
      texkill r5
    endif
    texld_pp r5, v0, s8
    dp3 r0.z, v3, v3
    rsq r0.w, r0.z
    mul r6.xyz, r0.w, v3
    dp3 r0.w, r6, -c14
    add r0.w, r0.w, -c15.x
    mul_sat r0.w, r0.w, c15.y
    mul_pp r5.z, r0.w, r0.w
    mov_sat_pp r5.x, r5.x
    mov r5.yw, c6.y
    texld_pp r6, r5, s0
    texld_pp r5, r5.zwzw, s0
    add r0.w, -r0.z, -c2.y
    mul r0.w, r6.x, r0.w
    mul r7, r5.x, r0.w
    mov r8, r7
    texkill r8
    if b1
      mad r5.yz, vPos.xxyw, c8.xxyw, c8.xzww
      mul r7.xy, r5.yzzw, v5.w
      if_ne c3.x, -c3.x
        texld r8, c6.zwzw, s1
        add r0.w, -r8.y, v5.w
        mad r7.z, r8.x, r0.w, r7.x
        mov r7.xy, r7.zyzw
        mov r0.w, v5.w
      else
        mov r0.w, v5.w
      endif
      rcp r0.w, r0.w
      mul r5.yz, r0.w, r7.xxyw
      mad r5.yz, r5, c1.xxyw, c1.xwzw
      texld r8, r5.yzzw, s2
      mul_pp r5.yzw, r8.xxyz, r8.xxyz
      mul_pp r5.yzw, r5, r6.x
    else
      mov_pp r5.yzw, r6.x
    endif
    texld_pp r6, v1, s7
    mad_pp r6.xyz, r6, c5.w, c5
    mov_sat r0.z, r0.z
    add r0.z, -r0.z, -c2.y
    pow_sat_pp r7.x, r0.z, c13.w
    mov r7.y, c6.y
    texld_pp r8, r7, s0
    texld_pp r9, v1, s6
    mad r7.xyz, r4, c12, -r4
    mad_pp r4.xyz, r9.z, r7, r4
    mov r7.y, c2.y
    add_pp r7.xyz, -r7.y, -c11
    mul_pp r4.xyz, r4, r7
    mad_pp r4.xyz, r4, c4.w, c4
    mul_pp r0.z, r5.x, r8.x
    dp3_sat_pp r0.w, r2, r1
    mul_pp r1.w, r0.w, c0.w
    mul_sat_pp r0.z, r0.z, c0.y
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    dp3_sat_pp r0.z, r2, r3
    mad_pp r2.x, r0.x, c16.x, c16.y
    mul_pp r2.x, r2.x, c16.z
    mad r0.x, r0.x, r0.z, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r2.x
    mul_pp r0.x, r0.w, r0.x
    mul_pp r0.x, r0.y, r0.x
    dp3_sat_pp r0.y, r1, r3
    mad_pp r0.z, r0.y, c17.x, c17.y
    mul_pp r0.y, r0.y, r0.z
    exp_pp r0.y, r0.y
    lrp_pp r1.xyz, r0.y, -c2.y, r6
    mul_pp r0.xyz, r0.x, r1
    mad_pp r0.xyz, r4, r1.w, r0
    mul_pp r0.xyz, r5.yzww, r0
    mul r0.xyz, r0, c13
    mul r0.xyz, r8.x, r0
    mul r0.xyz, r5.x, r0
    cmp oC0.xyz, -r7.w, c6.w, r0
    mov oC0.w, c6.w

// approximately 118 instruction slots used (11 texture, 107 arithmetic)
