//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEEnvMapParameter           c7       1
//   DNEMiscParameter             c8       1
//   DNEResolution                c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelVector_1         c11      1
//   UniformPixelScalars_0        c12      1
//   LightColorAndFalloffExponent c13      1
//   UpperSkyColor                c14      1
//   AmbientColorAndSkyFactor     c15      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   DNEEnvironmentTexture        s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   VAOBuffer                    s6       1
//

    ps_3_0
    def c6, 2, -1, 10, 1.52876604
    def c16, 0.125, -0.5, -9.99999997e-007, 0.00999999978
    def c17, 0.300000012, 0.589999974, 0.109999999, 0
    def c18, 1, 0, 5, 0.0625
    def c19, 1, 0.5, 0.693147004, 2
    def c20, -5.55472994, -6.98316002, 0, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord4 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord5 v5.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_51C5B63B_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul_pp r1.x, r0.y, r1.x
    mad_pp r1.x, r0.x, r1.y, -r1.x
    mul_pp r0.y, r1.x, v1.w
    mad r1.xy, vPos, c9, c9.zwzw
    mul r2.xy, r1, v5.w
    dp3_pp r1.x, v4, v4
    rsq_pp r1.x, r1.x
    mul_pp r3.xyz, r1.x, v4
    mad_sat_pp r1.y, c8.x, v5.w, c8.y
    mul_pp r1.y, r1.y, c0.x
    texld_pp r4, v2, s3
    mad_pp r4.xyz, r4, c6.x, c6.y
    nrm_pp r5.xyz, r4
    dp3_pp r1.w, v3, v3
    rsq_pp r1.w, r1.w
    mul_pp r4.xyz, r1.w, v3
    mad_pp r3.xyw, v3.xyzz, r1.w, r3.xyzz
    nrm_pp r6.xyz, r3.xyww
    mad_pp r1.w, r4.w, c6.z, c6.w
    exp_pp r1.w, r1.w
    rcp r3.x, v5.w
    mul r3.yw, r2.xxzy, r3.x
    mad_pp r3.yw, r3, c1.xxzy, c1.xwzz
    dsx_pp r4.w, r3.y
    dsy_pp r5.w, r3.w
    rcp r7.x, r4.w
    rcp r7.y, r5.w
    mul_pp r3.yw, r3, r7.xxzy
    mul_pp r3.yw, r3, c16.x
    texld_pp r7, r3.ywzw, s5
    add_pp r3.y, -r7.y, c12.w
    frc_pp r3.w, -r3.y
    add_sat_pp r3.y, r3.w, r3.y
    add_pp r7, r3.y, c16.y
    texkill r7
    texld_pp r7, v2, s4
    dp3_pp r3.y, r7, c17
    lrp_pp r8.xyz, c12.z, r3.y, r7
    mul_pp r7.xyz, r8, c11
    mov r3.y, c6.y
    add_pp r9.xyz, -r3.y, -c10
    mul_pp r7.xyz, r7, r9
    mad_pp r7.xyz, r7, c4.w, c4
    mad_pp r0.xw, r1.z, c18.xyzy, c18.yyzz
    texldl_pp r0, r0, s2
    mul_pp r0.xyz, r0, c7
    mad r0.w, v4.z, -r1.x, -c6.y
    cmp_pp r0.w, r3.z, r0_abs.w, -c6.y
    add r1.x, r0.w, c16.z
    pow_pp r1.z, r0.w, c12.x
    mul r0.w, r1.z, c12.y
    mul r0.xyz, r0, r0.w
    add_pp r8.xyz, r8, c16.w
    mul_pp r0.xyz, r0, r8
    cmp_pp r0.xyz, r1.x, r0, c17.w
    add_pp r0.xyz, r0, c10
    mul r8.xyz, r7, c14
    mad_pp r0.xyz, r8, c15.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r8, c18.wyzw, s1
      add r1.x, -r8.y, v5.w
      mad r2.z, r8.x, r1.x, r2.x
      mov r2.w, v5.w
      mov r8.xyz, r2.zyww
    else
      mov_pp r8.xyz, c17.w
    endif
    mov r2.z, v5.w
    cmp r2.xyz, -r0.w, r2, r8
    rcp r0.w, r2.z
    mul r1.xz, r0.w, r2.xyyw
    mad r1.xz, r1, c1.xyyw, c1.wyzw
    texld_pp r2, r1.xzzw, s6
    texld_pp r8, c19, s0
    dp3_sat_pp r0.w, r5, r4
    mul_pp r1.x, r0.w, c0.w
    mov_sat_pp r1.z, c0.y
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.z, r1.w, r1.z
    dp3_sat_pp r1.w, r5, r6
    mad_pp r2.y, r1.z, c19.z, c19.w
    mul_pp r2.y, r2.y, c16.x
    mad r1.z, r1.z, r1.w, -r1.z
    exp_pp r1.z, r1.z
    mul_pp r1.z, r1.z, r2.y
    mul_pp r0.w, r0.w, r1.z
    mul_pp r0.w, r1.y, r0.w
    dp3_sat_pp r1.y, r4, r6
    mad_pp r1.z, r1.y, c20.x, c20.y
    mul_pp r1.y, r1.y, r1.z
    exp_pp r1.y, r1.y
    lrp_pp r2.yzw, r1.y, -r3.y, c5.xxyz
    mul_pp r1.yzw, r0.w, r2
    mad_pp r1.xyz, r7, r1.x, r1.yzww
    mul_pp r1.xyz, r8.x, r1
    mul_pp r1.xyz, r1, c13
    mad_pp r0.xyz, r0, r2.x, r1
    mad_pp oC0.xyz, r7, c15, r0
    mad oC0.w, c2.x, r3.x, c2.y

// approximately 117 instruction slots used (8 texture, 109 arithmetic)
