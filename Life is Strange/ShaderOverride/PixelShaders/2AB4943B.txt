//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D PixelTexture2D_6;
//   sampler2D PixelTexture2D_7;
//   sampler2D PixelTexture2D_8;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEEnvMapParameter        c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DNEMiscParameter          c7       1
//   DNECubemapPosition        c8       1
//   CameraWorldPos            c9       1
//   DNEResolution             c10      1
//   UniformPixelVector_0      c11      1
//   UniformPixelVector_1      c12      1
//   UniformPixelVector_2      c13      1
//   UniformPixelVector_3      c14      1
//   UniformPixelScalars_0     c15      1
//   UpperSkyColor             c16      1
//   AmbientColorAndSkyFactor  c17      1
//   NvStereoFixTexture        s0       1
//   DNEEnvironmentTexture     s1       1
//   PixelTexture2D_0          s2       1
//   PixelTexture2D_1          s3       1
//   PixelTexture2D_2          s4       1
//   PixelTexture2D_3          s5       1
//   PixelTexture2D_4          s6       1
//   PixelTexture2D_5          s7       1
//   PixelTexture2D_6          s8       1
//   PixelTexture2D_7          s9       1
//   PixelTexture2D_8          s10      1
//   VAOBuffer                 s11      1
//

    ps_3_0
    def c6, 7.14285803, 6.89655113, -3.07142901, -2.86206865
    def c18, 0.100000001, 0, 1, 9.99999997e-007
    def c19, 0.0700000003, 0.0280000009, 0.949999988, 0.0500000007
    def c20, 0, 0.333332986, 0.666665971, 0.5
    def c21, 2, -1, 1, 0
    def c22, -5.55472994, -6.98316002, 0.349999994, 0.0399999991
    def c23, 0.300000012, 0.589999974, 0.109999999, 0
    def c24, 0.375, 0.5, 0.0625, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord6 v3.xyz
    dcl_texcoord5 v4
    dcl vPos.xy
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9
    dcl_2d s10
    dcl_2d s11

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_2AB4943B_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mul_pp r0.yzw, r0.x, v1.xxyz
    nrm_pp r1.xyz, v0
    mul_pp r2.xyz, r0.wyzw, r1.yzxw
    mad_pp r2.xyz, r0.zwyw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v1.w
    add r3.xyz, c9, v4
    mad r4.xy, vPos, c10, c10.zwzw
    mul r4.xy, r4, v4.w
    nrm_pp r5.xyz, v3
    mad_sat_pp r1.w, c7.x, v4.w, c7.y
    texld_pp r6, v2, s2
    mad_pp r6.xyz, r6, c21.x, c21.y
    mad_pp r7.xy, v2, c6, c6.zwzw
    texld_pp r8, r7, s3
    dp2add_pp r2.w, r8, -r8, c21.z
    max_pp r3.w, r2.w, c21.w
    rsq_pp r2.w, r3.w
    rcp_pp r8.z, r2.w
    texld_pp r7, r7, s4
    mov r7.z, c21.z
    add_pp r2.w, r7.z, -c15.x
    add_pp r2.w, -r2.w, r7.y
    frc_pp r3.w, -r2.w
    add_sat_pp r2.w, r2.w, r3.w
    mul_pp r2.w, r2.w, r7.x
    lrp_pp r7.xyw, r2.w, r8.xyzz, r6.xyzz
    mul_pp r6.xy, c12, v2
    texld_pp r9, r6, s5
    dp2add_pp r3.w, r9, -r9, c21.z
    max_pp r5.w, r3.w, c21.w
    rsq_pp r3.w, r5.w
    rcp_pp r9.z, r3.w
    add_pp r10.xyz, r9, -c21.wwzw
    mad_pp r10.xyz, r10, c18.x, c18.yyzw
    mov r11.xyz, c20
    mad_pp r11.xyz, c15.z, c15.y, r11
    texld_pp r12, r6, s6
    add_pp r6.xyz, r11, r12
    frc_pp r6.xyz, r6
    add r6.xyz, -r6, c21.z
    max r11.xyz, c18.w, r6
    mul_pp r6.xyz, r11, r11
    frc_pp r11.xyz, -r12
    add_sat_pp r11.xyz, r11, r12
    mul_pp r6.xy, r6, r11
    add_pp r3.w, r6.y, r6.x
    mad_pp r3.w, r6.z, r11.z, r3.w
    mad_pp r0.x, v1.z, r0.x, c21.z
    mul_pp r0.x, r3.w, r0.x
    mul_pp r3.w, r0.x, c20.w
    add_pp r6.xyz, -r7.xyww, r10
    mul_pp r6.xyz, r3.w, r6
    texld_pp r10, v2, s7
    mul_pp r5.w, r10.y, c15.w
    mad_pp r6.xyz, r5.w, r6, r7.xyww
    nrm_pp r10.xyz, r6
    dp3_pp r6.x, r10, r5
    mul_pp r10.xyz, r6.x, r10
    mad_pp r10.xyz, r10, c21.x, -r5
    texld_pp r11, v2, s10
    texld_pp r12, v2, s9
    lrp_pp r11.yzw, r2.w, c18.xxyy, r12.xxyz
    mul_pp r6.y, r3.w, r5.w
    lrp_pp r12.xyz, r6.y, c19.x, r11.yzww
    mad_pp r11.yzw, r12.xxyz, c5.w, c5.xxyz
    lrp_pp r12.xyz, r11.x, c19.y, r11.yzww
    lrp_pp r8.w, r2.w, c19.z, r6.w
    lrp_pp r6.y, r8.w, c14.w, c14.z
    lrp_pp r9.w, r3.w, c21.z, r6.y
    lrp_pp r6.y, r5.w, r9.w, r8.w
    max_pp r8.w, r6.y, c19.w
    min_pp r6.y, r8.w, c19.z
    texld_pp r11, v2, s8
    lrp_pp r13.xyz, r2.w, c18.xyyw, r11
    add_pp r11.xyz, r7.z, -c11
    mul_pp r11.xyz, r11, r13
    mad_pp r11.xyz, r11, c4.w, c4
    dp3_pp r6.z, r8, r5
    add_pp r6.w, -r6.z, c21.z
    cmp_pp r6.z, r6.z, r6.w, c21.z
    dp3_pp r13.x, r1, r8
    dp3_pp r13.y, r2, r8
    dp3_pp r13.z, r0.yzww, r8
    mov r13.w, c21.w
    texldl_pp r8, r13, s1
    mul_pp r8.xyz, r8, c0
    mul_pp r8.xyz, r6.z, r8
    mul_pp r8.xyz, r2.w, r8
    dp3_pp r1.x, r1, r10
    dp3_pp r1.y, r2, r10
    dp3_pp r1.z, r0.yzww, r10
    add r0.yzw, r3.xxyz, -c8.xxyz
    mad_pp r10.xyz, c0.w, r0.yzww, r1
    mad_pp r10.w, c7.z, r6.y, c7.w
    texldl_pp r10, r10, s1
    mov_sat_pp r6.x, r6.x
    max_pp r0.yzw, r6.y, r12.xxyz
    mad_pp r1.x, r6.x, c22.x, c22.y
    mul_pp r1.x, r6.x, r1.x
    exp_pp r1.x, r1.x
    lrp_pp r2.xyz, r1.x, r0.yzww, r12
    mul_pp r0.yzw, r10.xxyz, r2.xxyz
    mul_pp r0.yzw, r0, c0.xxyz
    mul_pp r0.yzw, r0, r1.w
    mul_pp r0.yzw, r0, r2.w
    mul_pp r0.yzw, r0, c20.w
    mad_pp r0.yzw, r8.xxyz, c22.z, r0
    lrp_pp r1.xyz, r3.w, r9, r7.xyww
    mad_pp r1.w, r3.w, -c13.y, c13.y
    texldl_pp r2, r1, s1
    mul_pp r2.xyz, r2, c0
    dp3_pp r1.x, r5, r1
    add_pp r1.x, -r1_abs.x, c21.z
    add r1.y, r1_abs.x, -c18.w
    mul r1.z, r1_abs.x, r1_abs.x
    mad_pp r1.x, r1_abs.x, r1.z, c22.w
    cmp_pp r1.x, r1.y, r1.x, c22.w
    mul_pp r1.xyz, r2, r1.x
    mad_pp r0.x, r0.x, c24.x, c24.y
    mul_pp r2.xyz, r1, r0.x
    dp3_pp r1.w, r2, c23
    mad r1.xyz, r0.x, -r1, r1.w
    mad_pp r1.xyz, r1, c20.w, r2
    lrp_pp r2.xyz, r5.w, r1, r0.yzww
    add_pp r0.xyz, r2, c11
    mul r1.xyz, r11, c16
    mad_pp r0.xyz, r1, c17.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r1, c24.zwzw, s0
      add r1.y, -r1.y, v4.w
      mad r4.z, r1.x, r1.y, r4.x
      mov r4.w, v4.w
      mov r1.xyz, r4.zyww
    else
      mov r1.xyz, c21.w
    endif
    mov r4.z, v4.w
    cmp r1.xyz, -r0.w, r4, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s11
    mul r1.yzw, r11.xxyz, c17.xxyz
    mad_pp oC0.xyz, r0, r1.x, r1.yzww
    rcp r0.x, v4.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 162 instruction slots used (17 texture, 145 arithmetic)
