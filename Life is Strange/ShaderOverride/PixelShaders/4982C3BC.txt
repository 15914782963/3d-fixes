//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float3 DecalLocalBinormal;
//   float3 DecalLocalTangent;
//   float2 DecalNearFarPlaneDistance;
//   float4 DiffuseOverrideParameter;
//   sampler2D HeightmapTexture;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   DNEResolution                c8       1
//   DecalNearFarPlaneDistance    c9       1
//   UniformPixelVector_0         c10      1
//   DecalLocalBinormal           c11      1
//   DecalLocalTangent            c12      1
//   LightColorAndFalloffExponent c13      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   HeightmapTexture             s6       1
//

    ps_3_0
    def c2, 2, -1, 1, 0.5
    def c6, 10, 1.52876604, 0, 1
    def c14, 0.00100000005, 0.0625, 0, 0.125
    def c15, 0.693147004, 2, -5.55472994, -6.98316002
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xyw
    dcl_texcoord4 v2.xyz
    dcl_texcoord5 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord7 v5.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_4982C3BC_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    texld r0, v0, s6
    mad r0.xy, r0.zwzw, c2.x, c2.y
    dp2add r0.w, r0, -r0, c2.z
    rsq r0.w, r0.w
    rcp r0.z, r0.w
    mul r1.xyz, r0, c12.zxyw
    mad r1.xyz, r0.zxyw, c12, -r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul r1.xyz, r0.w, r1
    mul r2.xyz, r0.zxyw, r1
    mad r1.xyz, r0.yzxw, r1.yzxw, -r2
    mul r2.xyz, r0, c11.zxyw
    mad r2.xyz, r0.zxyw, c11, -r2
    dp3 r0.w, r2, r2
    rsq r0.w, r0.w
    mul r2.xyz, r0.w, r2
    mul r3.xyz, r0.zxyw, r2
    mad r2.xyz, r0.yzxw, r2.yzxw, -r3
    nrm r3.xyz, v2
    dp3_pp r4.x, r1, r3
    dp3_pp r4.y, r2, r3
    dp3_pp r4.z, r0, r3
    nrm r3.xyz, v4
    dp3_pp r1.x, r1, r3
    dp3_pp r1.y, r2, r3
    dp3_pp r1.z, r0, r3
    dp3_pp r0.x, r1, r1
    rsq_pp r0.x, r0.x
    mad_sat_pp r0.y, c7.x, v5.w, c7.y
    mul_pp r0.y, r0.y, c0.x
    texld_pp r2, v1, s3
    mad_pp r2.xyz, r2, c2.x, c2.y
    nrm_pp r3.xyz, r2
    nrm_pp r2.xyz, r4
    mad_pp r0.xzw, r1.xyyz, r0.x, r2.xyyz
    nrm_pp r1.xyz, r0.xzww
    mad_pp r0.x, r2.w, c6.x, c6.y
    exp_pp r0.x, r0.x
    texld_pp r4, c2.zwzw, s0
    dp3 r0.z, v3, v3
    add r0.w, -r0.z, c2.z
    mul r5, r4.x, r0.w
    mov r6, r5
    texkill r6
    cmp r0.w, -r5.w, c6.z, c6.w
    add r4.yz, c2.z, -v1.xxyw
    mul r6.xy, r4.yzzw, v1
    add r1.w, -c9.x, v1.w
    add r6.z, r1.w, c14.x
    add r1.w, c9.y, -v1.w
    add r6.w, r1.w, c14.x
    mul r6, r0.w, r6
    texkill r6
    texld_pp r6, v1, s4
    mov_sat_pp r1.w, r6.w
    add_pp r1.w, r1.w, -c2.w
    mul_pp r7, r0.w, r1.w
    texkill r7
    if b0
      mad r4.yz, vPos.xxyw, c8.xxyw, c8.xzww
      mul r5.xy, r4.yzzw, v5.w
      if_ne c3.x, -c3.x
        texld r7, c14.yzzw, s1
        add r0.w, -r7.y, v5.w
        mad r5.z, r7.x, r0.w, r5.x
        mov r5.xy, r5.zyzw
        mov r0.w, v5.w
      else
        mov r0.w, v5.w
      endif
      rcp r0.w, r0.w
      mul r4.yz, r0.w, r5.xxyw
      mad r4.yz, r4, c1.xxyw, c1.xwzw
      texld r7, r4.yzzw, s2
      mul_pp r4.yzw, r7.xxyz, r7.xxyz
      mul_pp r4.yzw, r4, r4.x
    else
      mov_pp r4.yzw, r4.x
    endif
    texld_pp r7, v1, s5
    mad_pp r5.xyz, r7, c5.w, c5
    mov_sat r0.z, r0.z
    add r0.z, -r0.z, c2.z
    pow_sat_pp r7.x, r0.z, c13.w
    mov r7.y, c2.w
    texld_pp r7, r7, s0
    mov_pp r0.z, c2.z
    add_pp r7.yzw, r0.z, -c10.xxyz
    mul_pp r6.xyz, r6, r7.yzww
    mad_pp r6.xyz, r6, c4.w, c4
    dp3_sat_pp r0.z, r3, r2
    mul_pp r0.w, r0.z, c0.w
    mul_sat_pp r1.w, r7.x, c0.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.x, r0.x, r1.w
    dp3_sat_pp r1.w, r3, r1
    mad_pp r2.w, r0.x, c15.x, c15.y
    mul_pp r2.w, r2.w, c14.w
    mad r0.x, r0.x, r1.w, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r2.w
    mul_pp r0.x, r0.z, r0.x
    mul_pp r0.x, r0.y, r0.x
    dp3_sat_pp r0.y, r2, r1
    mad_pp r0.z, r0.y, c15.z, c15.w
    mul_pp r0.y, r0.y, r0.z
    exp_pp r0.y, r0.y
    lrp_pp r1.xyz, r0.y, c2.z, r5
    mul_pp r0.xyz, r0.x, r1
    mad_pp r0.xyz, r6, r0.w, r0
    mul_pp r0.xyz, r4.yzww, r0
    mul r0.xyz, r7.x, r0
    mul r0.xyz, r0, c13
    cmp oC0.xyz, -r5.w, c6.z, r0
    mov oC0.w, c6.z

// approximately 133 instruction slots used (8 texture, 125 arithmetic)
