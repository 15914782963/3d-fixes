//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float2 DecalBlendInterval;
//   float3 DecalLocalBinormal;
//   float3 DecalLocalNormal;
//   float3 DecalLocalTangent;
//   float2 DecalNearFarPlaneDistance;
//   float4 DiffuseOverrideParameter;
//   sampler2D HeightmapTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   float4 WorldIncidentLighting[7];
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   WorldIncidentLighting        c7       7
//   DNEResolution                c14      1
//   DecalNearFarPlaneDistance    c15      1
//   UniformPixelVector_0         c16      1
//   UniformPixelVector_1         c17      1
//   UniformPixelVector_2         c18      1
//   UniformPixelScalars_1        c19      1
//   DecalLocalBinormal           c20      1
//   DecalLocalTangent            c21      1
//   DecalLocalNormal             c22      1
//   DecalBlendInterval           c23      1
//   LightColorAndFalloffExponent c24      1
//   UpperSkyColor                c25      1
//   AmbientColorAndSkyFactor     c26      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   PixelTexture2D_0             s2       1
//   PixelTexture2D_1             s3       1
//   HeightmapTexture             s4       1
//   VAOBuffer                    s5       1
//

    ps_3_0
    def c2, 2, -1, 1, 0.5
    def c6, 0, 2, 0.00100000005, 0.858085215
    def c27, -0.858085215, 0.247708291, 0.429042608, 0.886227608
    def c28, 0.0625, 0, -9.99999997e-007, 15
    def c29, 3, -1, -1.02332771, 1.02332771
    def c30, 5, 0, 0, 0
    dcl_texcoord3 v0.xyz
    dcl_texcoord4 v1
    dcl_texcoord6 v2.xyz
    dcl_texcoord5 v3.w
    dcl_texcoord v4.xy
    dcl_texcoord1 v5.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_894A0E33_676.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    texld r0, v4, s4
    mad r0.xz, r0.wyzw, c2.x, c2.y
    dp2add r0.w, r0.zxzw, -r0.zxzw, c2.z
    rsq r0.w, r0.w
    rcp r0.y, r0.w
    mul r1.xyz, r0.zxyw, c21.zxyw
    mad r1.xyz, r0.yzxw, c21, -r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul r1.xyz, r0.w, r1
    mul r2.xyz, r0.yzxw, r1
    mad r1.xyz, r0, r1.yzxw, -r2
    mul r2.xyz, r0.zxyw, c20.zxyw
    mad r2.xyz, r0.yzxw, c20, -r2
    dp3 r0.w, r2, r2
    rsq r0.w, r0.w
    mul r2.xyz, r0.w, r2
    mul r3.xyz, r0.yzxw, r2
    mad r2.xyz, r0, r2.yzxw, -r3
    nrm r3.xyz, v0
    dp3_pp r4.x, r1, r3
    dp3_pp r4.y, r2, r3
    dp3_pp r4.z, r0.zxyw, r3
    nrm r3.xyz, v2
    dp3_pp r1.x, r1, r3
    dp3_pp r1.y, r2, r3
    dp3_pp r1.z, r0.zxyw, r3
    add r0.w, -c23.x, c23.y
    add r1.w, c23.x, c23.y
    mul r1.w, r1.w, c2.w
    nrm r2.xyz, r0.zxyw
    dp3 r2.x, c22, r2
    rcp r0.w, r0.w
    mul r1.w, r0.w, r1.w
    mad r0.w, r2.x, r0.w, -r1.w
    add_sat r0.w, r0.w, c2.w
    mad r2.xy, vPos, c14, c14.zwzw
    mul r2.xy, r2, v3.w
    nrm_pp r3.xyz, r1
    nrm_pp r1.xyz, r4
    mad_pp r3.xyz, r3.z, c6.xxyw, -r3
    add r4.xy, c2.z, -v5
    mul r4.xy, r4, v5
    add r1.w, -c15.x, v5.w
    add r4.z, r1.w, c6.z
    add r1.w, c15.y, -v5.w
    add r4.w, r1.w, c6.z
    texkill r4
    add r4.xy, -c2.w, v5
    mov r5.x, c6.x
    dp2add r6.x, c17, r4, r5.x
    dp2add r6.y, c18, r4, r5.x
    add r4.zw, r6.xyxy, c2.w
    texld r5, r4.zwzw, s2
    mov r4.z, c2.z
    add r6.xyz, r4.z, -c16
    mul_pp r5.xyz, r5, r6
    mad_pp r5.xyz, r5, c4.w, c4
    mul r6.xyz, r5, c25
    mov_pp r1.w, c26.w
    mad_pp r6.xyz, r6, r1.w, c16
    mul r7.xyz, r0, r0.xyxw
    mad r8.y, r7.y, c29.x, c29.y
    mul r8.xz, r0, r0.y
    mad_pp r8.w, r0.z, r0.z, -r7.x
    mul r9.xyz, r0, c29.zwzw
    mul r9.w, r7.z, c6.w
    mul r7, r8, c27.xyxz
    dp4 r0.x, c8, r9
    mov r1.w, c27.w
    mad_pp r0.x, c7.x, r1.w, r0.x
    dp4 r0.y, c9, r7
    add_pp r0.x, r0.y, r0.x
    dp4 r3.w, c10, r9
    mad_pp r3.w, c7.y, r1.w, r3.w
    dp4 r4.z, c11, r7
    add_pp r0.y, r3.w, r4.z
    dp4 r3.w, c12, r9
    mad_pp r1.w, c7.z, r1.w, r3.w
    dp4 r3.w, c13, r7
    add_pp r0.z, r1.w, r3.w
    mul_pp r7.xyz, r0, r5
    cmp_pp r0.xyz, r0, r7, c6.x
    add_pp r0.xyz, r0, r6
    abs r1.w, c3.x
    if_ne c3.x, -c3.x
      texld r6, c28, s1
      add r3.w, -r6.y, v3.w
      mad r2.z, r6.x, r3.w, r2.x
      mov r2.w, v3.w
      mov r6.xyz, r2.zyww
    else
      mov r6.xyz, c6.x
    endif
    mov r2.z, v3.w
    cmp r2.xyz, -r1.w, r2, r6
    rcp r1.w, r2.z
    mul r2.xy, r1.w, r2
    mad r2.xy, r2, c1, c1.wzzw
    texld_pp r2, r2, s5
    texld_pp r6, c2.zwzw, s0
    mov_sat_pp r1.w, r1.z
    add r2.y, r1.w, c28.z
    mul r1.w, r1.w, c0.w
    dp3_sat_pp r1.x, r3, r1
    add r1.y, r1.x, c28.z
    pow_pp r2.z, r1.x, c28.w
    mul r1.x, r2.z, c0.x
    mul r3.xyz, r1.w, r5
    cmp r2.yzw, r2.y, r3.xxyz, c6.x
    mul_pp r1.xzw, r1.x, c5.xyyz
    cmp_pp r1.xyz, r1.y, r1.xzww, c6.x
    add_pp r1.xyz, r1, r2.yzww
    mul_pp r1.xyz, r6.x, r1
    mul_pp r1.xyz, r1, c24
    mad_pp r0.xyz, r0, r2.x, r1
    mad_pp r0.xyz, r5, c26, r0
    texld r1, v5, s3
    dp2add r1.y, r4, r4, c6.x
    mul r1.y, r1.y, c19.y
    mul_sat r1.y, r1.y, r1.y
    add r1.y, -r1.y, c2.z
    mul_pp r1.x, r1.x, r1.y
    add r1.y, c15.y, -v5_abs.w
    mul r1.y, r1.y, c30.x
    rcp r1.z, c15.y
    mul_sat r1.y, r1.z, r1.y
    mul r0.w, r0.w, r1.y
    mul_pp oC0.w, r0.w, r1.x
    mad_pp oC0.xyz, r0, v1.w, v1

// approximately 148 instruction slots used (6 texture, 142 arithmetic)
