//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ObjectMacroUVScales;
//   float3 ObjectNDCPosition;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   float4 WorldIncidentLighting[7];
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   WorldIncidentLighting        c7       7
//   DNEEnvMapParameter           c14      1
//   DNEResolution                c15      1
//   ObjectNDCPosition            c16      1
//   ObjectMacroUVScales          c17      1
//   UniformPixelVector_0         c18      1
//   LightColorAndFalloffExponent c19      1
//   UpperSkyColor                c20      1
//   AmbientColorAndSkyFactor     c21      1
//   ShadowWarpFunctionTexture    s0       1
//   SceneColorTexture            s1       1
//   NvStereoFixTexture           s2       1
//   DNEEnvironmentTexture        s3       1
//   PixelTexture2D_0             s4       1
//   PixelTexture2D_1             s5       1
//

    ps_3_0
    def c6, 0.5, 2, -1, 5
    def c22, 0.886227608, 0, 1, 0.5
    def c23, -9.99999997e-007, 15, 0.0625, 0
    def c24, 9.99999975e-006, 100000, 0.015625, 0
    def c25, 3, -1, -1.02332771, 1.02332771
    def c26, 0.858085215, -0.858085215, 0.247708291, 0.429042608
    dcl_texcoord3 v0.xyz
    dcl_texcoord4 v1
    dcl_texcoord6 v2.xyz
    dcl_texcoord7_pp v3
    dcl_texcoord5 v4.w
    dcl_color v5.xyz
    dcl_color1 v6
    dcl_texcoord v7.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_cube s3
    dcl_2d s4
    dcl_2d s5

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_1D3C092A_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v6
    nrm_pp r1.xyz, v5
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v6.w
    mad r3.xy, vPos, c15, c15.zwzw
    mul r3.xy, r3, v4.w
    nrm_pp r4.xyz, v2
    rcp r0.w, v4.w
    mad r5.xy, r3, r0.w, -c16
    mov r6.x, c6.x
    mad r5.xy, r5, c17.zwzw, r6.x
    texld r5, r5, s4
    mad_pp r5.xyz, r5, c6.y, c6.z
    texld_pp r6, v7, s5
    mad_pp r5.xyz, r6, c6.y, r5
    add r5.xyz, r5, c6.z
    nrm_pp r6.xyz, r5
    nrm_pp r5.xyz, v0
    dp3_pp r0.w, r6, r4
    mul_pp r7.xyz, r0.w, r6
    mad_pp r4.xyz, r7, c6.y, -r4
    dp3_pp r7.x, r1, r4
    dp3_pp r7.y, r2, r4
    dp3_pp r7.z, r0, r4
    mov_pp r7.w, c6.w
    texldl_pp r7, r7, s3
    mul_pp r7.xyz, r7, c14
    mul r8.xyz, r5.w, v3
    mad_pp r7.xyz, r7, r8, c18
    mov r8.xyz, c4
    mul r9.xyz, r8, c20
    mad_pp r7.xyz, r9, c21.w, r7
    dp3_pp r1.z, r1, r6
    dp3_pp r1.x, r2, r6
    dp3_pp r1.y, r0, r6
    mul r0.xyz, r1, r1.xyxw
    mad r2.y, r0.y, c25.x, c25.y
    mul r2.xz, r1, r1.y
    mad_pp r2.w, r1.z, r1.z, -r0.x
    mul r1.xyz, r1, c25.zwzw
    mul r1.w, r0.z, c26.x
    mul r0, r2, c26.yzyw
    dp4 r2.x, c8, r1
    mov r9.x, c22.x
    mad_pp r2.x, c7.x, r9.x, r2.x
    dp4 r2.y, c9, r0
    add_pp r2.x, r2.y, r2.x
    dp4 r2.w, c10, r1
    mad_pp r2.w, c7.y, r9.x, r2.w
    dp4 r4.w, c11, r0
    add_pp r2.y, r2.w, r4.w
    dp4 r1.x, c12, r1
    mad_pp r1.x, c7.z, r9.x, r1.x
    dp4 r0.x, c13, r0
    add_pp r2.z, r0.x, r1.x
    mul_pp r0.xyz, r2, c4
    cmp_pp r0.xyz, r2, r0, c22.y
    add_pp r0.xyz, r0, r7
    texld_pp r1, c22.zwzw, s0
    dp3_sat_pp r0.w, r6, r5
    add r1.y, r0.w, c23.x
    mul r0.w, r0.w, c0.w
    dp3_sat_pp r1.z, r4, r5
    add r1.w, r1.z, c23.x
    pow_pp r2.x, r1.z, c23.y
    mul r1.z, r2.x, c0.x
    mul r2.xyz, r0.w, c4
    cmp r2.xyz, r1.y, r2, c22.y
    mul_pp r4.xyz, r1.z, c5
    cmp_pp r1.yzw, r1.w, r4.xxyz, c22.y
    add_pp r1.yzw, r1, r2.xxyz
    mul_pp r1.xyz, r1.x, r1.yzww
    mad_pp r0.xyz, r1, c19, r0
    mad_pp r0.xyz, r8, c21, r0
    mul_sat r0.w, r6.w, v3.w
    abs r1.x, c3.x
    if_ne c3.x, -c3.x
      texld r2, c23.zwzw, s2
      add r1.y, -r2.y, v4.w
      mad r3.z, r2.x, r1.y, r3.x
      mov r3.w, v4.w
      mov r1.yzw, r3.xzyw
    else
      mov_pp r1.yzw, c22.y
    endif
    mov r3.z, v4.w
    cmp r1.xyz, -r1.x, r3, r1.yzww
    rcp r1.z, r1.z
    mul r1.xy, r1.z, r1
    mad r1.xy, r1, c1, c1.wzzw
    mov r1.zw, c22.y
    texldl r1, r1, s1
    add r1.x, r1.w, -c2.y
    add r1.y, -r1.x, c24.x
    rcp r1.x, r1.x
    cmp r1.x, r1.y, c24.y, r1.x
    mad r1.x, c2.x, r1.x, -v4.w
    mul_sat r1.x, r1.x, c24.z
    mul_pp oC0.w, r0.w, r1.x
    mad_pp oC0.xyz, r0, v1.w, v1

// approximately 117 instruction slots used (8 texture, 109 arithmetic)
