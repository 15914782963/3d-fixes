//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNEMiscParameter;
//   sampler2D DNEReflectionTexture;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 LightMapScale;
//   sampler2D LightMapTextures;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D PixelTexture2D_6;
//   sampler2D PixelTexture2D_7;
//   sampler2D PixelTexture2D_8;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_4;
//   float4 UniformPixelScalars_8;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//   float4 UniformPixelVector_7;
//   float4 UniformPixelVector_8;
//   float4 UniformPixelVector_9;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEMiscParameter          c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   CameraWorldPos            c7       1
//   DNEResolution             c8       1
//   UniformPixelVector_0      c9       1
//   UniformPixelVector_1      c10      1
//   UniformPixelVector_2      c11      1
//   UniformPixelVector_3      c12      1
//   UniformPixelVector_4      c13      1
//   UniformPixelVector_5      c14      1
//   UniformPixelVector_6      c15      1
//   UniformPixelVector_7      c16      1
//   UniformPixelVector_8      c17      1
//   UniformPixelVector_9      c18      1
//   UniformPixelScalars_0     c19      1
//   UniformPixelScalars_3     c20      1
//   UniformPixelScalars_4     c21      1
//   UniformPixelScalars_8     c22      1
//   UpperSkyColor             c23      1
//   AmbientColorAndSkyFactor  c24      1
//   LightMapScale             c25      1
//   NvStereoFixTexture        s0       1
//   DNEReflectionTexture      s1       1
//   PixelTexture2D_0          s2       1
//   PixelTexture2D_1          s3       1
//   PixelTexture2D_2          s4       1
//   PixelTexture2D_3          s5       1
//   PixelTexture2D_4          s6       1
//   PixelTexture2D_5          s7       1
//   PixelTexture2D_6          s8       1
//   PixelTexture2D_7          s9       1
//   PixelTexture2D_8          s10      1
//   LightMapTextures          s11      1
//   VAOBuffer                 s12      1
//

    ps_3_0
    def c6, -0.5, 0.315322369, 0.948984623, 0
    def c26, 1, 7.60526891e-005, 0.800000012, 0
    def c27, 3.12500015e-005, 9.37500008e-005, -3.25, 2
    def c28, 6.28318548, -3.14159274, 30, 2
    def c29, 7.5, 0.100000001, 0.5, 5
    def c30, 0.25, 7, 0.142857149, 0.00571428565
    def c31, -0.949999988, -20, -12, 0.75
    def c32, 0.0399999991, 0.000976999989, 0.25, 0.5
    def c33, 0.300000012, 0.5, 0.000624999986, 0.00195299997
    def c34, 0.200000003, 0.170000002, 0.109999999, 1.40624998e-005
    def c35, 4, 0.129870132, 0.5, 5.58284373e-005
    def c36, 0.699999988, 0.400000006, 0.00022365569, 1.25
    def c37, -9.99999997e-007, 0.400000036, 0.800000012, 0
    def c38, -0.948984623, 0.315322369, 0, 2.79415617e-005
    def c39, 0.5, -0.5, -5.55472994, -6.98316002
    def c40, 0.200000003, 0, 1.00999999, 0.0625
    def c41, 0.0299999993, 0, 1.00999999, 9.37500008e-005
    def c42, 2.5, 6.24999984e-006, 0.000781250012, 6.2500003e-005
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.y
    dcl_texcoord6 v2.xyz
    dcl_texcoord5 v3.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9
    dcl_2d s10
    dcl_2d s11
    dcl_2d s12

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_4AD874BE_749.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine


def c220, 0, 1, 0.0625, 0.5
dcl_2d s15

    add r0, c7.xyxy, v3.xyxy
    mad r1.xy, vPos, c8, c8.zwzw
    mul r1.xy, r1, v3.w
    nrm_pp r2.xyz, v2
    mad_sat_pp r2.w, c0.x, v3.w, c0.y
    add_pp r3.xy, r0.zwzw, c6.x
    dp2add_pp r4.x, c6.yzzw, r3, c6.w
    dp2add_pp r4.y, c38, r3, c38.z
    add_pp r3, r4.xyxy, -c6.x
    mov r4.w, c38.w
    mad_pp r3.xy, r3, r4.w, c10
    texld_pp r4, r3, s2
    dp2add_pp r3.x, r4, -r4, c26.x
    max_pp r4.w, r3.x, c6.w
    rsq_pp r3.x, r4.w
    rcp_pp r4.z, r3.x
    mov r3.xy, c26
    mad_pp r3.yz, r3.xzww, r3.y, c11.xxyw
    texld_pp r5, r3.yzzw, s2
    dp2add_pp r3.y, r5, -r5, c26.x
    max_pp r4.w, r3.y, c6.w
    rsq_pp r3.y, r4.w
    rcp_pp r5.z, r3.y
    mad_pp r3.yzw, r5.xxyz, -c26.z, r4.xxyz
    dp3_pp r4.x, r3.yzww, r3.yzww
    rsq_pp r4.x, r4.x
    mad_pp r3.yzw, r3, r4.x, -c26.xwwx
    mad_pp r4.xyz, r3.yzww, c41.x, c41.yyzw
    nrm_pp r5.xyz, r4
    mul_pp r4, r0.zwzw, c27.xxyy
    mov r5.w, c41.w
    mad_pp r6.xy, r0.zwzw, r5.w, c12
    texld_pp r6, r6, s3
    mov_pp r7.x, r4.z
    mov r7.yw, c20.xxzz
    texld_pp r8, r7, s4
    add_pp r5.w, r8.y, c6.x
    mul_pp r5.w, r6.x, r5.w
    mad_pp r6.x, v1.y, c27.z, c27.w
    texld_pp r8, r4.zwzw, s4
    add_pp r4.z, r8.y, c6.x
    mul_pp r4.w, r4.z, c42.x
    mad_pp r4.z, r4.z, -c6.x, r6.x
    mad_pp r4.z, r5.w, -c6.x, r4.z
    mul_pp r6, r0.zzzw, c42.wyzz
    mov_pp r7.z, r6.y
    texld_pp r7, r7.zwzw, s4
    mov r7.xw, c29
    mad_pp r5.w, r7.y, r7.x, c19.x
    mad_pp r5.w, r5.w, c29.y, c29.z
    frc_pp r5.w, r5.w
    mad_pp r5.w, r5.w, c28.x, c28.y
    sincos_pp r8.y, r5.w
    add_pp r5.w, r4.z, r8.y
    max_pp r7.x, r8.y, c6.w
    texld_pp r8, r6.zwzw, s3
    add_pp r6.z, r7.x, r8.x
    mad_pp r6.z, r6.z, c28.z, c28.w
    mul_sat_pp r6.z, r5.w, r6.z
    frc_pp r6.w, -r6.z
    add_sat_pp r6.w, r6.w, r6.z
    cmp_pp r5.xyz, -r6.w, c26.wwxw, r5
    nrm_pp r7.xyz, r5
    mov r6.y, c20.w
    texld_pp r8, r6, s4
    mad_pp r5.x, r8.y, r7.w, c21.x
    mad_pp r5.x, r5.x, c29.y, c29.z
    frc_pp r5.x, r5.x
    mad_pp r5.x, r5.x, c28.x, c28.y
    sincos_pp r8.y, r5.x
    add_pp r4.z, r4.z, r8.y
    mov_sat_pp r4.z, -r4.z
    add_pp r4.z, -r4.z, c26.x
    add_pp r5.x, c31.x, v1.y
    mad_sat_pp r5.xy, r5.x, c31.yzzw, r4.w
    mul_pp r4.zw, r4.z, r5.xyxy
    mul_pp r5.x, r5.y, c31.w
    mad_pp r4.z, r4.z, c30.x, r5.x
    mul_pp r4.z, r4.z, c30.y
    frc_pp r5.x, r4.z
    add_pp r4.z, r4.z, -r5.x
    mul_pp r5.xz, r4.z, c30.zyww
    cmp_pp r4.z, -r6.w, r5.z, c32.x
    mad_pp r8.xyz, r4.z, c5.w, c5
    mul_pp r6.xy, r0.zwzw, c32.y
    texld_pp r9, r6, s9
    mul_pp r4.z, r9.x, c30.x
    mad r5.z, r9.x, -c32.z, c32.w
    mad_pp r4.z, r5.y, r5.z, r4.z
    mov r10.xw, c27
    mad_pp r5.y, r9.x, r10.w, c22.y
    frc_pp r5.y, r5.y
    mad_pp r5.y, r5.y, c33.x, c33.y
    lrp_pp r6.x, r4.w, r5.y, r4.z
    mov r4.z, c33.z
    mad_pp r4.zw, r0, r4.z, c18.xyxy
    texld_pp r9, r4.zwzw, s10
    mad_pp r4.z, r9.x, -c6.x, -c6.x
    cmp_pp r4.z, -r6.w, r6.x, r4.z
    mul_pp r5.yz, r0.xzww, c33.w
    texld_pp r9, r5.yzzw, s5
    lrp_pp r10.yzw, r5.x, c34.xxyz, r9.xxyz
    mov r4.w, c34.w
    mad_pp r5.xy, r0.zwzw, r4.w, c13
    texld_pp r9, r5, s6
    mad_pp r5.xy, r0.zwzw, r4.w, c14
    texld_pp r11, r5, s6
    texld_pp r12, r4, s6
    mov r4.xw, c35
    mad_pp r4.x, r12.w, r4.x, c19.x
    mad_pp r4.x, r4.x, c35.y, c35.z
    frc_pp r4.x, r4.x
    mad_pp r4.x, r4.x, c28.x, c28.y
    sincos_pp r12.y, r4.x
    add_pp r4.x, r12.y, c26.x
    mul_pp r4.x, r4.x, -c6.x
    lrp_pp r5.x, r4.x, r11.w, r9.w
    mad_pp r4.y, r5.x, c36.x, c36.y
    mad_pp r5.xy, r0.zwzw, r10.x, c15
    texld_pp r12, r5, s7
    mad_pp r0.xy, r0, r4.w, c16
    texld_pp r13, r0, s7
    add_pp r0.x, r12.y, r13.y
    mov r5.z, c36.z
    mad_pp r0.yz, r0.xzww, r5.z, c17.xxyw
    texld_pp r12, r0.yzzw, s7
    add_pp r0.x, r0.x, r12.y
    mul_pp r0.x, r0.x, r4.y
    mov_sat_pp r5.w, r5.w
    mad_pp r0.x, r0.x, c36.w, -r5.w
    add_sat_pp r0.x, r0.x, c26.x
    add r0.y, r0.x, c37.x
    mul_pp r0.x, r0.x, r0.x
    cmp_pp r0.x, r0.y, r0.x, c6.w
    texld_pp r0, r0.x, s8
    lrp_pp r0.w, r4.x, r9.w, r11.w
    add_pp r0.w, -r0.w, c26.x
    mad_pp r0.w, r0.w, c37.y, c37.z
    mul_pp r0.xyz, r0, r0.w
    frc_pp r0.w, r6.z
    add_pp r0.w, -r0.w, r6.z
    add_sat_pp r0.w, -r0.w, c26.x
    mul_pp r0.w, r6.w, r0.w
    cmp_pp r0.xyz, -r0.w, r0, c26.x
    cmp_pp r0.xyz, -r6.w, r10.yzww, r0
    add_pp r4.xyw, r3.x, -c9.xyzz
    mul_pp r0.xyz, r0, r4.xyww
    mad_pp r0.xyz, r0, c4.w, c4
    mad_pp r3.xyz, r3.yzww, c40.x, c40.yyzw
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mul_pp r3.xy, r0.w, r3
    rcp r0.w, v3.w
    mul r3.zw, r0.w, r1.xyxy
    mad r3.zw, r3, c39.xyxy, c39.x
    mad_pp r3.xy, r7, r3, r3.zwzw
    mad_pp r3.w, -c0.w, r4.z, c0.w
    mov r3.z, c6.w

// DNERefelctionTexture fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_4AD874BE_749.txt
texldl r14, c220.z, s15
mad r3.x, -r14.x, c220.w, r3.x

    texldl_pp r3, r3, s1
    dp3_sat_pp r2.x, r7, r2
    max_pp r5.xyz, r4.z, r8
    mad_pp r2.y, r2.x, c39.z, c39.w
    mul_pp r2.x, r2.x, r2.y
    exp_pp r2.x, r2.x
    lrp_pp r4.xyz, r2.x, r5, r8
    mul_pp r2.xyz, r3, r4
    mul_pp r2.xyz, r2, c0.z
    mad_pp r2.xyz, r2.w, r2, c9
    texld r3, v0, s11
    mul_pp r3.xyz, r3, c25
    mad_pp r2.xyz, r3, r0, r2
    mul r0.xyz, r0, c23
    mad_pp r0.xyz, r0, c24.w, r2
    abs r2.x, c3.x
    if_ne c3.x, -c3.x
      texld r3, c40.wyzw, s0
      add r2.y, -r3.y, v3.w
      mad r1.z, r3.x, r2.y, r1.x
      mov r1.w, v3.w
      mov r2.yzw, r1.xzyw
    else
      mov_pp r2.yzw, c6.w
    endif
    mov r1.z, v3.w
    cmp r1.xyz, -r2.x, r1, r2.yzww
    rcp r1.z, r1.z
    mul r1.xy, r1.z, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s12
    mul_pp oC0.xyz, r0, r1.x
    mad oC0.w, c2.x, r0.w, c2.y

// approximately 225 instruction slots used (23 texture, 202 arithmetic)
