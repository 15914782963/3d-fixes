//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   DNEEnvMapParameter       c0       1
//   ScreenPositionScaleBias  c1       1
//   MinZ_MaxZRatio           c2       1
//   NvStereoEnabled          c3       1
//   DiffuseOverrideParameter c4       1
//   DNEResolution            c7       1
//   UniformPixelVector_0     c8       1
//   UniformPixelScalars_0    c9       1
//   UpperSkyColor            c10      1
//   AmbientColorAndSkyFactor c11      1
//   NvStereoFixTexture       s0       1
//   DNEEnvironmentTexture    s1       1
//   PixelTexture2D_0         s2       1
//   PixelTexture2D_1         s3       1
//   PixelTexture2D_2         s4       1
//   PixelTexture2D_3         s5       1
//   PixelTexture2D_4         s6       1
//   VAOBuffer                s7       1
//

    ps_3_0
    def c5, -0.330000013, 0, 0.333332986, 0.666665971
    def c6, 0.800000012, 1, 0.5, -2
    def c12, 6, 10, 1, 9.99999997e-007
    def c13, 0.0399999991, 0.300000012, 0.589999974, 0.109999999
    def c14, 0.5, -0.099999994, -0.5, 0.375
    def c15, 0.0625, 0, 0, 0
    dcl_color1 v0.xyz
    dcl_texcoord v1.xy
    dcl_texcoord6 v2.xyz
    dcl_texcoord5 v3.w
    dcl vPos.xy
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_F5F1D4BF_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v0, v0
    rsq_pp r0.x, r0.x
    mad r0.yz, vPos.xxyw, c7.xxyw, c7.xzww
    mul r1.xy, r0.yzzw, v3.w
    nrm_pp r2.xyz, v2
    texld_pp r3, v1, s6
    add_pp r4, r3.w, c5.x
    texkill r4
    mul_pp r0.yzw, r3.xxyz, r3.xxyz
    mov_pp r4.yzw, c5
    mad_pp r4.xyz, c9.y, c9.x, r4.yzww
    mul_pp r5.xy, c12, v1
    texld_pp r6, r5, s4
    add_pp r4.xyz, r4, r6
    frc_pp r4.xyz, r4
    add r4.xyz, -r4, c12.z
    max r7.xyz, c12.w, r4
    mul r4.xyz, r7, r7
    mul_pp r4.xyz, r4, r4
    frc_pp r7.xyz, -r6
    add_sat_pp r6.xyz, r6, r7
    mul_pp r4.xy, r4, r6
    add_pp r2.w, r4.y, r4.x
    mad_pp r2.w, r4.z, r6.z, r2.w
    mad_pp r0.x, v0.z, r0.x, c12.z
    mul_pp r0.x, r2.w, r0.x
    mul_pp r2.w, r0.x, c14.x
    mov r4.xyz, c6
    mad_pp r4.xyz, r0.x, c14.yzww, r4
    texld_pp r6, v1, s5
    mul_pp r0.x, r6.y, c9.z
    mad r0.yzw, r4.x, r0, -r3.xxyz
    mad_pp r0.yzw, r0.x, r0, r3.xxyz
    mov r3.z, c12.z
    add_pp r3.xyz, r3.z, -c8
    mul_pp r0.yzw, r0, r3.xxyz
    mad_pp r0.yzw, r0, c4.w, c4.xxyz
    texld_pp r3, v1, s2
    mad_pp r3.xyz, r3, -c6.w, -c6.y
    texld_pp r5, r5, s3
    dp2add_pp r3.w, r5, -r5, c12.z
    max_pp r4.x, r3.w, c5.y
    rsq_pp r3.w, r4.x
    rcp_pp r5.z, r3.w
    lrp_pp r6.xyz, r2.w, r5, r3
    mov_pp r6.w, r4.y
    texldl_pp r3, r6, s1
    mul_pp r3.xyz, r3, c0
    dp3_pp r2.x, r2, r6
    add_pp r2.x, -r2_abs.x, c12.z
    add r2.y, r2_abs.x, -c12.w
    mul r2.z, r2_abs.x, r2_abs.x
    mad_pp r2.x, r2_abs.x, r2.z, c13.x
    cmp_pp r2.x, r2.y, r2.x, c13.x
    mul_pp r2.xyz, r3, r2.x
    mul_pp r3.xyz, r2, r4.z
    dp3_pp r2.w, r3, c13.yzww
    mad r2.xyz, r4.z, -r2, r2.w
    mad_pp r2.xyz, r2, c14.x, r3
    mad_pp r2.xyz, r0.x, r2, c8
    mul r3.xyz, r0.yzww, c10
    mad_pp r2.xyz, r3, c11.w, r2
    abs r0.x, c3.x
    if_ne c3.x, -c3.x
      texld r3, c15, s0
      add r2.w, -r3.y, v3.w
      mad r1.z, r3.x, r2.w, r1.x
      mov r1.w, v3.w
      mov r3.xyz, r1.zyww
    else
      mov_pp r3.xyz, c5.y
    endif
    mov r1.z, v3.w
    cmp r1.xyz, -r0.x, r1, r3
    rcp r0.x, r1.z
    mul r1.xy, r0.x, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s7
    mul r0.xyz, r0.yzww, c11
    mad_pp oC0.xyz, r2, r1.x, r0
    rcp r0.x, v3.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 88 instruction slots used (9 texture, 79 arithmetic)
