//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float2 DistanceFadeParameters;
//   float3 DistanceFieldParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_3;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowTexture;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   bool bEnableDistanceShadowFading;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   bEnableDistanceShadowFading  b1       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   DNEResolution                c8       1
//   UniformPixelVector_0         c9       1
//   UniformPixelVector_1         c10      1
//   UniformPixelScalars_0        c11      1
//   LightColorAndFalloffExponent c12      1
//   DistanceFieldParameters      c13      1
//   DistanceFadeParameters       c14      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_3             s3       1
//   ShadowTexture                s4       1
//

    ps_3_0
    def c2, 10, 1.52876604, 0.5, 0.699999988
    def c6, 0.0625, 0, 1, 0.125
    def c15, 0.693147004, 2, -5.55472994, -6.98316002
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xy
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_658B25E3_281.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v3, v3
    rsq_pp r0.x, r0.x
    mad_sat_pp r0.y, c7.x, v4.w, c7.y
    mul_pp r0.y, r0.y, c0.x
    nrm_pp r1.xyz, v2
    mad_pp r0.xzw, v3.xyyz, r0.x, r1.xyyz
    nrm_pp r2.xyz, r0.xzww
    mov r3.xyw, c2
    mad_pp r0.x, c11.x, r3.x, r3.y
    exp_pp r0.x, r0.x
    texld_pp r4, v0, s4
    add r0.z, r4.x, c13.x
    mul_sat_pp r0.z, r0.z, c13.y
    pow_sat_pp r3.x, r0.z, c13.z
    mov_pp r3.y, c2.z
    texld_pp r4, r3, s0
    if b0
      mad r0.zw, vPos.xyxy, c8.xyxy, c8
      mul r3.xy, r0.zwzw, v4.w
      if_ne c3.x, -c3.x
        texld r5, c6, s1
        add r0.z, -r5.y, v4.w
        mad r3.z, r5.x, r0.z, r3.x
        mov r3.xy, r3.zyzw
        mov r0.z, v4.w
      else
        mov r0.z, v4.w
      endif
      rcp r0.z, r0.z
      mul r0.zw, r0.z, r3.xyxy
      mad r0.zw, r0, c1.xyxy, c1.xywz
      texld r5, r0.zwzw, s2
      mul_pp r3.xyz, r5, r5
      if b1
        dp3 r0.z, v4, v4
        rsq r0.z, r0.z
        rcp r0.z, r0.z
        add r0.z, -r0.z, c14.x
        mul_sat_pp r0.z, r0.z, c14.y
        mul_pp r0.z, r0.z, r0.z
        mad_pp r0.w, r5.w, r5.w, -r4.x
        mad_pp r4.yzw, r0.z, r0.w, r4.x
      else
        mov_pp r4.yzw, r4.x
      endif
      mul_pp r3.xyz, r3, r4.yzww
    else
      mov_pp r3.xyz, r4.x
    endif
    mad_pp r4.xyz, c5.w, r3.w, c5
    texld_pp r5, v1, s3
    mov_sat_pp r5.x, r5.x
    add_pp r0.z, -r5.x, c6.z
    mul_pp r5.xyz, r0.z, c10
    mov r0.z, c6.z
    add_pp r6.xyz, r0.z, -c9
    mul_pp r5.xyz, r5, r6
    mad_pp r5.xyz, r5, c4.w, c4
    mov_sat_pp r0.z, r1.z
    mul_pp r0.w, r0.z, c0.w
    mov_sat_pp r1.w, c0.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.x, r0.x, r1.w
    mov_sat_pp r1.w, r2.z
    mad_pp r2.w, r0.x, c15.x, c15.y
    mul_pp r2.w, r2.w, c6.w
    mad r0.x, r0.x, r1.w, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r2.w
    mul_pp r0.x, r0.z, r0.x
    mul_pp r0.x, r0.y, r0.x
    dp3_sat_pp r0.y, r1, r2
    mad_pp r0.z, r0.y, c15.z, c15.w
    mul_pp r0.y, r0.y, r0.z
    exp_pp r0.y, r0.y
    lrp_pp r1.xyz, r0.y, c6.z, r4
    mul_pp r0.xyz, r0.x, r1
    mad_pp r0.xyz, r5, r0.w, r0
    mul_pp r0.xyz, r3, r0
    mul oC0.xyz, r0, c12
    mov oC0.w, c6.y

// approximately 93 instruction slots used (5 texture, 88 arithmetic)
