//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEResolution                c7       1
//   UniformPixelVector_0         c8       1
//   LightColorAndFalloffExponent c9       1
//   UpperSkyColor                c10      1
//   AmbientColorAndSkyFactor     c11      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   PixelTexture2D_0             s2       1
//   VAOBuffer                    s3       1
//

    ps_3_0
    def c6, 0, 2, 0.0625, -9.99999997e-007
    def c12, 1, 0.5, 4096, 0
    dcl_texcoord4 v0.xyz
    dcl_texcoord6 v1.xyz
    dcl_texcoord5 v2.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_6D149C1B_8551.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c7, c7.zwzw
    mul r0.xy, r0, v2.w
    nrm_pp r1.xyz, v1
    nrm_pp r2.xyz, v0
    mad_pp r1.xyz, r1.z, c6.xxyw, -r1
    add_pp r3.xyz, c5, c5.w
    rcp r1.w, v2.w
    mul r4.xy, r0, r1.w
    mad r4.xy, r4, c1, c1.wzzw
    texld r4, r4, s2
    add_pp r4.xyz, r4, c8
    mov r5.xyz, c4
    mul r6.xyz, r5, c10
    mad_pp r4.xyz, r6, c11.w, r4
    abs r2.w, c3.x
    if_ne c3.x, -c3.x
      texld r6, c6.zxzw, s1
      add r3.w, -r6.y, v2.w
      mad r0.z, r6.x, r3.w, r0.x
      mov r0.w, v2.w
      mov r6.xyz, r0.zyww
    else
      mov r6.xyz, c6.x
    endif
    mov r0.z, v2.w
    cmp r0.xyz, -r2.w, r0, r6
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s3
    texld_pp r6, c12, s0
    mov_sat_pp r0.y, r2.z
    add r0.z, r0.y, c6.w
    mul r0.y, r0.y, c0.w
    dp3_sat_pp r0.w, r1, r2
    add r1.x, r0.w, c6.w
    pow_pp r1.y, r0.w, c12.z
    mul r0.w, r1.y, c0.x
    mul r2.xyz, r0.y, c4
    cmp r2.xyz, r0.z, r2, c6.x
    mul_pp r0.yzw, r3.xxyz, r0.w
    cmp_pp r0.yzw, r1.x, r0, c6.x
    add_pp r0.yzw, r0, r2.xxyz
    mul_pp r0.yzw, r6.x, r0
    mul_pp r0.yzw, r0, c9.xxyz
    mad_pp r0.xyz, r4, r0.x, r0.yzww
    mad_pp oC0.xyz, r5, c11, r0
    mad oC0.w, c2.x, r1.w, c2.y

// approximately 56 instruction slots used (4 texture, 52 arithmetic)
