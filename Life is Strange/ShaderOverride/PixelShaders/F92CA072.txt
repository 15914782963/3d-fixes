//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float2 DistanceFadeParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D PixelTexture2D_6;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   sampler2D WarpFunctionTexture;
//   bool bEnableDistanceShadowFading;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   bEnableDistanceShadowFading  b1       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   DNEResolution                c8       1
//   UniformPixelVector_0         c9       1
//   UniformPixelVector_1         c10      1
//   UniformPixelVector_2         c11      1
//   UniformPixelVector_3         c12      1
//   UniformPixelScalars_0        c13      1
//   LightColorAndFalloffExponent c14      1
//   DistanceFadeParameters       c15      1
//   ShadowWarpFunctionTexture    s0       1
//   WarpFunctionTexture          s1       1
//   NvStereoFixTexture           s2       1
//   LightAttenuationTexture      s3       1
//   PixelTexture2D_0             s4       1
//   PixelTexture2D_1             s5       1
//   PixelTexture2D_2             s6       1
//   PixelTexture2D_3             s7       1
//   PixelTexture2D_4             s8       1
//   PixelTexture2D_5             s9       1
//   PixelTexture2D_6             s10      1
//

    ps_3_0
    def c2, 2, -1, 1, 0
    def c6, 10, 1.52876604, 1, 0.5
    def c16, 0.0625, 0, 0.693147004, 2
    def c17, 0.125, 0.0280000009, -5.55472994, -6.98316002
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord6 v2.xyz
    dcl_texcoord7 v3
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9
    dcl_2d s10

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_F92CA072_359.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v2, v2
    rsq_pp r0.x, r0.x
    mad_sat_pp r0.y, c7.x, v3.w, c7.y
    mul_pp r0.y, r0.y, c0.x
    texld_pp r1, v0, s4
    mad_pp r1.xyz, r1, c2.x, c2.y
    add_pp r0.zw, -c10.xyxy, c10
    rcp r2.x, r0.z
    rcp r2.y, r0.w
    mul_pp r0.zw, r2.xyxy, c10.xyxy
    mad_pp r0.zw, v0.xyxy, r2.xyxy, -r0
    texld_pp r2, r0.zwzw, s5
    dp2add_pp r2.w, r2, -r2, c2.z
    max_pp r3.x, r2.w, c2.w
    rsq_pp r2.w, r3.x
    rcp_pp r2.z, r2.w
    texld_pp r3, r0.zwzw, s6
    add_pp r2.w, -r3.z, c13.x
    frc_pp r3.z, -r2.w
    add_sat_pp r2.w, r2.w, r3.z
    mad_pp r2.w, r3.y, r2.w, r3.x
    mul_sat_pp r2.w, r2.w, c13.y
    lrp_pp r3.xyz, r2.w, r2, r1
    nrm_pp r1.xyz, r3
    nrm_pp r2.xyz, v1
    mad_pp r3.xyz, v2, r0.x, r2
    nrm_pp r4.xyz, r3
    lrp_pp r0.x, r2.w, c13.w, r1.w
    mad_pp r0.x, r0.x, c6.x, c6.y
    exp_pp r0.x, r0.x
    texld_pp r3, c6.zwzw, s0
    if b0
      mad r3.yz, vPos.xxyw, c8.xxyw, c8.xzww
      mul r5.xy, r3.yzzw, v3.w
      if_ne c3.x, -c3.x
        texld r6, c16, s2
        add r1.w, -r6.y, v3.w
        mad r5.z, r6.x, r1.w, r5.x
        mov r5.xy, r5.zyzw
        mov r1.w, v3.w
      else
        mov r1.w, v3.w
      endif
      rcp r1.w, r1.w
      mul r3.yz, r1.w, r5.xxyw
      mad r3.yz, r3, c1.xxyw, c1.xwzw
      texld r5, r3.yzzw, s3
      mul_pp r3.yzw, r5.xxyz, r5.xxyz
      if b1
        dp3 r1.w, v3, v3
        rsq r1.w, r1.w
        rcp r1.w, r1.w
        add r1.w, -r1.w, c15.x
        mul_sat_pp r1.w, r1.w, c15.y
        mul_pp r1.w, r1.w, r1.w
        mad_pp r4.w, r5.w, r5.w, -r3.x
        mad_pp r5.xyz, r1.w, r4.w, r3.x
      else
        mov_pp r5.xyz, r3.x
      endif
      mul_pp r3.yzw, r3, r5.xxyz
    else
      mov_pp r3.yzw, r3.x
    endif
    texld_pp r5, v0, s9
    lrp_pp r6.xyz, r2.w, c13.z, r5
    mad_pp r5.xyz, r6, c5.w, c5
    texld_pp r6, v0, s8
    texld_pp r7, r0.zwzw, s7
    mad r7.xyz, r6, r7, -r6
    mad_pp r6.xyz, r2.w, r7, r6
    mov r7.yz, c2
    add_pp r7.xzw, r7.z, -c9.xyyz
    mul_pp r6.xyz, r6, r7.xzww
    mad_pp r6.xyz, r6, c4.w, c4
    texld_pp r8, v0, s10
    dp3_sat_pp r8.x, r1, r2
    mov_pp r8.y, c6.w
    texld_pp r9, r8, s1
    mov_sat_pp r0.z, r2.z
    lrp_pp r10.xy, c11, r0.z, r9.x
    add_pp r0.z, r10.x, c11.z
    add r0.w, -r10.y, r0.z
    cmp_pp r10.z, r0.w, r10.y, r0.z
    lrp_pp r7.xzw, r8.z, r10.xyzz, r9.x
    mul_pp r7.xzw, r7, c0.w
    mov_sat_pp r0.z, c0.y
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    dp3_sat_pp r0.z, r1, r4
    mad_pp r0.w, r0.x, c16.z, c16.w
    mul_pp r0.w, r0.w, c17.x
    mad r0.x, r0.x, r0.z, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r0.w
    mul_pp r0.x, r8.x, r0.x
    mul_pp r0.x, r0.y, r0.x
    lrp_pp r0.yzw, r8.z, c17.y, r5.xxyz
    add r1.x, r7.y, c12.x
    mad_pp r1.x, r8.z, r1.x, c2.z
    mul_pp r0.x, r0.x, r1.x
    dp3_sat_pp r1.x, r2, r4
    mad_pp r1.y, r1.x, c17.z, c17.w
    mul_pp r1.x, r1.x, r1.y
    exp_pp r1.x, r1.x
    lrp_pp r2.xyz, r1.x, c2.z, r0.yzww
    mul_pp r0.xyz, r0.x, r2
    mad_pp r0.xyz, r6, r7.xzww, r0
    mul_pp r0.xyz, r3.yzww, r0
    mul oC0.xyz, r0, c14
    mov oC0.w, c2.w

// approximately 124 instruction slots used (11 texture, 113 arithmetic)
