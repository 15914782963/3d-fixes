//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowTexture;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEResolution                c7       1
//   UniformPixelVector_0         c8       1
//   UniformPixelVector_1         c9       1
//   LightColorAndFalloffExponent c10      1
//   SpotDirection                c11      1
//   SpotAngles                   c12      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   ShadowTexture                s3       1
//

    ps_3_0
    def c2, 0.0625, 0, -9.99999997e-007, 15
    def c6, 0, 2, 0.5, 1
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5 v2.xyz
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_5AA4BA9A_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v3
    nrm_pp r1.xyz, v1
    mad_pp r0.xyz, r0.z, c6.xxyw, -r0
    texld_pp r2, v0, s3
    dp3 r0.w, v2, v2
    rsq r1.w, r0.w
    mul r3.xyz, r1.w, v2
    dp3 r1.w, r3, -c11
    add r1.w, r1.w, -c12.x
    mul_sat r1.w, r1.w, c12.y
    mul_pp r2.z, r1.w, r1.w
    mov_sat_pp r2.x, r2.x
    mov_pp r2.yw, c6.z
    texld_pp r3, r2, s0
    texld_pp r2, r2.zwzw, s0
    add r1.w, -r0.w, c6.w
    mul r1.w, r3.x, r1.w
    mul r4, r2.x, r1.w
    mov r5, r4
    texkill r5
    if b0
      mad r2.yz, vPos.xxyw, c7.xxyw, c7.xzww
      mul r4.xy, r2.yzzw, v4.w
      if_ne c3.x, -c3.x
        texld r5, c2, s1
        add r1.w, -r5.y, v4.w
        mad r4.z, r5.x, r1.w, r4.x
        mov r4.xy, r4.zyzw
        mov r1.w, v4.w
      else
        mov r1.w, v4.w
      endif
      rcp r1.w, r1.w
      mul r2.yz, r1.w, r4.xxyw
      mad r2.yz, r2, c1.xxyw, c1.xwzw
      texld r5, r2.yzzw, s2
      mul_pp r2.yzw, r5.xxyz, r5.xxyz
      mul_pp r2.yzw, r2, r3.x
    else
      mov_pp r2.yzw, r3.x
    endif
    mov r3.zw, c6
    mad_pp r3.xyz, c5.w, r3.z, c5
    mov_sat r0.w, r0.w
    add r0.w, -r0.w, c6.w
    pow_sat_pp r4.x, r0.w, c10.w
    mov_pp r4.y, c6.z
    texld_pp r5, r4, s0
    add r4.xyz, r3.w, -c8
    mul_pp r4.xyz, r4, c9
    mad_pp r4.xyz, r4, c4.w, c4
    mov_sat_pp r0.w, r1.z
    add r1.w, r0.w, c2.z
    mul r0.w, r0.w, c0.w
    dp3_sat_pp r0.x, r0, r1
    add r0.y, r0.x, c2.z
    pow_pp r1.x, r0.x, c2.w
    mul r0.x, r1.x, c0.x
    mul r1.xyz, r0.w, r4
    cmp r1.xyz, r1.w, r1, c6.x
    mul_pp r0.xzw, r3.xyyz, r0.x
    cmp_pp r0.xyz, r0.y, r0.xzww, c6.x
    add_pp r0.xyz, r0, r1
    mul_pp r0.xyz, r2.yzww, r0
    mul r0.xyz, r0, c10
    mul r0.xyz, r5.x, r0
    mul r0.xyz, r2.x, r0
    cmp oC0.xyz, -r4.w, c6.x, r0
    mov oC0.w, c6.x

// approximately 81 instruction slots used (6 texture, 75 arithmetic)
