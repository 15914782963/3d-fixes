//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DebugMode[5];
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   sampler2D MipTextureParameter;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_4;
//   float4 UniformPixelScalars_5;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//   float4 UniformPixelVector_7;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEResolution             c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DebugMode                 c7       5
//   UniformPixelVector_0      c12      1
//   UniformPixelVector_1      c13      1
//   UniformPixelVector_2      c14      1
//   UniformPixelVector_3      c15      1
//   UniformPixelVector_5      c16      1
//   UniformPixelVector_6      c17      1
//   UniformPixelVector_7      c18      1
//   UniformPixelScalars_2     c19      1
//   UniformPixelScalars_3     c20      1
//   UniformPixelScalars_4     c21      1
//   UniformPixelScalars_5     c22      1
//   SceneColorTexture         s0       1
//   NvStereoFixTexture        s1       1
//   PixelTexture2D_0          s2       1
//   PixelTexture2D_1          s3       1
//   PixelTexture2D_2          s4       1
//   PixelTexture2D_3          s5       1
//   PixelTexture2D_4          s6       1
//   PixelTexture2D_5          s7       1
//   MipTextureParameter       s8       1
//

    ps_3_0
    def c6, 1, 0, 0.5, 2
    def c23, 6, 3, 0.600000024, -0.5
    def c24, 10, 4, -0.774999976, 0.0500000007
    def c25, 7, 3, 0.0625, 0
    def c26, 9.99999975e-006, 100000, 0.0133333337, 9.99999997e-007
    def c27, 0.300000012, 0.589999974, 0.109999999, 0.180141002
    def c28, 0.0208350997, -0.0851330012, -0.330299497, 0.999866009
    def c29, -2, 1.57079637, -0, -3.14159274
    def c30, 0.159154937, 0.5, 3, 2
    def c31, 0.599999964, 0.400000006, 0, 0
    def c32, -0, 0, 1, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_200465A7_476.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mul r0, r0.x, v1.yzxy
    dp3_pp r1.x, v0, v0
    rsq_pp r1.x, r1.x
    mul r1, r1.x, v0.zyyx
    mul_pp r2.xy, r0.ywzw, r1.zwzw
    mad_pp r1.yz, r0.xxzw, r1.xxyw, -r2.xxyw
    mul r2.xy, r1.yzzw, v1.w
    mad r1.yz, vPos.xxyw, c0.xxyw, c0.xzww
    mul r3.yz, r1, v4.w
    nrm_pp r4.xyz, v3
    texld r5, v2, s8
    mad r5, r5.xyzx, c6.xxxy, c6.yyyx
    mul r6, r5, c7.y
    mad r5, c7.x, r5, r6
    mov r6.zw, c7
    mul r7.xyz, r6.z, c4
    mov r7.w, c7.z
    add r5, r5, r7
    mad r5, r6.w, c6.zzxx, r5
    mov r6.xyw, c6
    mad r5, c8.x, r6.yxyx, r5
    mov r1.y, c8.y
    mul r7.xyz, r1.y, c5
    mov r7.w, c8.y
    add r5, r5, r7
    rcp r0.w, v4.w
    mul r1.yz, r0.w, r3
    mad r1.yz, r1, c1.xxyw, c1.xwzw
    texld r7, r1.yzzw, s0
    mul r1.yz, c23.xxyw, v2.xxyw
    mad r6.zw, v2.xyxy, r6.xywx, c13.xyxy
    texld r8, r6.zwzw, s2
    mad r0.w, r8.y, c23.z, c23.w
    mov r8.xy, c24
    mad r6.zw, v2.xyxy, r8.xyxy, c14.xyxy
    mad r6.zw, r4.xyxy, c24.z, r6
    texld_pp r8, r6.zwzw, s3
    mov r9.xy, c25
    mad r6.zw, v2.xyxy, r9.xyxy, c15.xyxy
    mad r4.xy, r4, c24.z, r6.zwzw
    texld_pp r9, r4, s3
    add r4.xy, r8, r9
    mad r1.yz, r4.xxyw, c24.w, r1
    texld r8, r1.yzzw, s4
    add r0.w, r0.w, r8.y
    abs r1.y, c3.x
    if_ne c3.x, -c3.x
      texld r8, c25.zwzw, s1
      add r1.z, -r8.y, v4.w
      mad r3.x, r8.x, r1.z, r3.y
      mov r3.w, v4.w
      mov r4.xyw, r3.xzzw
    else
      mov r4.xyw, c6.y
    endif
    mov r3.w, v4.w
    cmp r4.xyw, -r1.y, r3.yzzw, r4
    rcp r1.z, r4.w
    mul r4.xy, r1.z, r4
    mad r8.xy, r4, c1, c1.wzzw
    mov r8.zw, c6.y
    texldl r8, r8, s0
    add r1.z, r8.w, -c2.y
    add r4.x, -r1.z, c26.x
    rcp r1.z, r1.z
    cmp r1.z, r4.x, c26.y, r1.z
    mad r1.z, c2.x, r1.z, -v4.w
    mul_sat r1.z, r1.z, c26.z
    mad r0.w, r0.w, -r1.z, c6.x
    texld r8, r0.w, s5
    mul_sat r0.w, r8.z, r8.y
    mul r4.xyw, r7.xyzz, r0.w
    max r7.xyz, r4_abs.xyww, c26.w
    log r8.x, r7.x
    log r8.y, r7.y
    log r8.z, r7.z
    mul r4.xyw, r8.xyzz, c19.y
    exp r7.x, r4.x
    exp r7.y, r4.y
    exp r7.z, r4.w
    add r4.xyw, r7.xyzz, c19.z
    texld r8, c16, s6
    mul r6.zw, r8.xyyz, c20.w
    lrp r0.w, r6.w, c21.x, c21.y
    rcp r0.w, r0.w
    mul r8.xyz, r0.w, r4.xyww
    dp3 r1.z, r8, c27
    mad r4.xyw, r4, -r0.w, r1.z
    mad r4.xyw, c21.z, r4, r8.xyzz
    add r0.w, r4_abs.z, -c26.w
    pow_sat r1.z, r4_abs.z, c21.w
    if_ne c3.x, -c3.x
      texld r8, c25.zwzw, s1
      add r4.z, -r8.y, v4.w
      mad r3.x, r8.x, r4.z, r3.y
      mov r8.xyz, r3.xzww
    else
      mov r8.xyz, c6.y
    endif
    cmp r3.xyz, -r1.y, r3.yzww, r8
    rcp r1.y, r3.z
    mul r3.xy, r1.y, r3
    mad r3.xy, r3, c1, c1.wzzw
    mov r3.zw, c6.y
    texldl r3, r3, s0
    add r1.y, r3.w, -c2.y
    add r3.x, -r1.y, c26.x
    rcp r1.y, r1.y
    cmp r1.y, r3.x, c26.y, r1.y
    add r3.x, -c22.x, v4.w
    mad r1.y, c2.x, r1.y, -r3.x
    lrp r3.x, r6.z, c22.y, c22.z
    rcp r3.x, r3.x
    mul_sat r1.y, r1.y, r3.x
    mul r1.y, r1.y, r1.z
    dp3 r1.z, v4, v4
    rsq r1.z, r1.z
    mul r3.xy, r1.z, v4
    add r3.zw, -r3_abs.xyxy, r3_abs.xyyx
    cmp r6.zw, r3.z, r3_abs.xyxy, r3_abs.xyyx
    rcp r3.z, r6.w
    mul r3.z, r3.z, r6.z
    mul r4.z, r3.z, r3.z
    mad r6.z, r4.z, c28.x, c28.y
    mad r6.z, r4.z, r6.z, c27.w
    mad r6.z, r4.z, r6.z, c28.z
    mad r4.z, r4.z, r6.z, c28.w
    mul r3.z, r3.z, r4.z
    cmp r3.w, r3.w, c6.y, c6.x
    mad r4.z, r3.z, c29.x, c29.y
    mad r3.z, r4.z, r3.w, r3.z
    cmp r3.w, r3.x, c29.z, c29.w
    add r3.z, r3.w, r3.z
    mad r3.w, v4.y, r1.z, -r3.x
    cmp r3.xy, r3.w, r3, r3.yxzw
    cmp r3.y, r3.y, c6.x, c6.y
    cmp r3.x, r3.x, c6.y, r3.y
    add r3.y, r3.z, r3.z
    mad r3.x, r3.x, -r3.y, r3.z
    mad r3.x, r3.x, c30.x, c30.y
    mad r1.z, v4.z, r1.z, c6.x
    mad r3.y, r1.z, -c6.z, c6.x
    mul r3.xy, r3, c30.zwzw
    texld r3, r3, s7
    mad r1.z, r3.x, c31.x, c31.y
    mul r1.y, r1.z, r1.y
    cmp r0.w, r0.w, r1.y, c6.y
    mad r3.xyz, r4.xyww, c17, -r7
    mad_sat r3.xyz, r0.w, r3, r7
    max r4.xyz, r3, c26.w
    log r3.x, r4.x
    log r3.y, r4.y
    log r3.z, r4.z
    mul r3.xyz, r3, c18
    exp r4.x, r3.x
    exp r4.y, r3.y
    exp r4.z, r3.z
    add_pp r3.xyz, r4, c12
    mov r3.w, c6.x
    mad r3, c8.z, r3, r5
    mov_pp r2.z, r1.x
    mov_pp r2.w, r0.y
    mad r4.xyz, r2.zyww, c6.z, c6.z
    mov r4.w, c6.x
    mad r3, c8.w, r4, r3
    mov r0.x, r1.w
    mov r0.y, r2.x
    mad r0.xyz, r0, c6.z, c6.z
    mov r0.w, c6.x
    mad r0, c9.x, r0, r3
    add r0, r0, c9.y
    add r0, r0, c9.z
    mov r1.w, c9.w
    mad r0, r1.w, c32.xxyz, r0
    mad r0, c10.x, r6.yyyx, r0
    mad r0, c10.y, r6.yyyx, r0
    mad r0, c10.z, r6.yyyx, r0
    mad r0, c10.w, r6.yyyx, r0
    mad r0, c11.x, r6.yyyx, r0
    mad r0, c11.y, r6.yyyx, r0
    mad r0, c11.z, r6.yyyx, r0
    mad oC0, c11.w, r6.yyyx, r0

// approximately 194 instruction slots used (15 texture, 179 arithmetic)
