//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   DNEResolution                c8       1
//   UniformPixelVector_0         c9       1
//   UniformPixelVector_1         c10      1
//   UniformPixelScalars_0        c11      1
//   LightColorAndFalloffExponent c12      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//

    ps_3_0
    def c2, 2, -1, 10, 1.52876604
    def c6, 1, 0.5, 0.0625, 0
    def c13, 0.693147004, 2, 0.125, 0
    def c14, -5.55472994, -6.98316002, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5 v2.xyz
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_FDA4DE40_351.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v3
    mad_sat_pp r0.w, c7.x, v4.w, c7.y
    mul_pp r0.w, r0.w, c0.x
    texld_pp r1, v0, s3
    mad_pp r1.xyz, r1, c2.x, c2.y
    nrm_pp r2.xyz, r1
    dp3_pp r1.x, v1, v1
    rsq_pp r1.x, r1.x
    mul_pp r3.xyz, r1.x, v1
    mad_pp r1.xyz, v1, r1.x, r0
    nrm_pp r4.xyz, r1
    mad_pp r1.x, r1.w, c2.z, c2.w
    exp_pp r1.x, r1.x
    texld_pp r5, c6, s0
    dp3 r1.y, v2, v2
    add r1.z, -r1.y, -c2.y
    mul r6, r5.x, r1.z
    mov r7, r6
    texkill r7
    if b0
      mad r1.zw, vPos.xyxy, c8.xyxy, c8
      mul r6.xy, r1.zwzw, v4.w
      if_ne c3.x, -c3.x
        texld r7, c6.zwzw, s1
        add r1.z, -r7.y, v4.w
        mad r6.z, r7.x, r1.z, r6.x
        mov r6.xy, r6.zyzw
        mov r1.z, v4.w
      else
        mov r1.z, v4.w
      endif
      rcp r1.z, r1.z
      mul r1.zw, r1.z, r6.xyxy
      mad r1.zw, r1, c1.xyxy, c1.xywz
      texld r7, r1.zwzw, s2
      mul_pp r5.yzw, r7.xxyz, r7.xxyz
      mul_pp r5.yzw, r5, r5.x
    else
      mov_pp r5.yzw, r5.x
    endif
    texld_pp r7, v0, s5
    mad_pp r6.xyz, r7, c5.w, c5
    mov_sat r1.y, r1.y
    add r1.y, -r1.y, -c2.y
    pow_sat_pp r7.x, r1.y, c12.w
    mov r7.y, c6.y
    texld_pp r7, r7, s0
    texld_pp r8, v0, s4
    mov r1.y, c2.y
    add_pp r1.yzw, -r1.y, -c9.xxyz
    mul_pp r1.yzw, r1, r8.xxyz
    mad_pp r1.yzw, r1, c4.w, c4.xxyz
    mov_sat_pp r2.w, c11.x
    texld_pp r8, v0, s6
    dp3_sat_pp r3.w, r2, r3
    mul_pp r4.w, r3.w, c0.w
    mul_sat_pp r5.x, r7.x, c0.y
    mul_pp r5.x, r5.x, r5.x
    mul_pp r1.x, r1.x, r5.x
    dp3_sat_pp r5.x, r2, r4
    mad_pp r7.y, r1.x, c13.x, c13.y
    mul_pp r7.y, r7.y, c13.z
    mad r1.x, r1.x, r5.x, -r1.x
    exp_pp r1.x, r1.x
    mul_pp r1.x, r1.x, r7.y
    mul_pp r1.x, r3.w, r1.x
    mul_pp r0.w, r0.w, r1.x
    mad_pp r2.xyz, r2, r2.w, r3
    dp3_sat_pp r0.x, r0, -r2
    mad r0.x, r0.x, c11.y, -c11.y
    exp r0.x, r0.x
    mov_pp r0.z, c0.z
    mad_pp r0.xyz, r0.x, r0.z, c10
    mul_pp r0.xyz, r8.z, r0
    max_pp r2.xyz, r4.w, r0
    dp3_sat_pp r0.x, r3, r4
    mad_pp r0.y, r0.x, c14.x, c14.y
    mul_pp r0.x, r0.x, r0.y
    exp_pp r0.x, r0.x
    lrp_pp r3.xyz, r0.x, -c2.y, r6
    mul_pp r0.xyz, r0.w, r3
    mad_pp r0.xyz, r1.yzww, r2, r0
    mul_pp r0.xyz, r5.yzww, r0
    mul r0.xyz, r7.x, r0
    mul r0.xyz, r0, c12
    cmp oC0.xyz, -r6.w, c6.w, r0
    mov oC0.w, c6.w

// approximately 99 instruction slots used (8 texture, 91 arithmetic)
