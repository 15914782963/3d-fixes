//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D PixelTexture2D_6;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_9;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_10;
//   float4 UniformPixelVector_11;
//   float4 UniformPixelVector_12;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//   float4 UniformPixelVector_7;
//   float4 UniformPixelVector_8;
//   float4 UniformPixelVector_9;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEResolution           c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   UniformPixelVector_0    c7       1
//   UniformPixelVector_1    c8       1
//   UniformPixelVector_2    c9       1
//   UniformPixelVector_3    c10      1
//   UniformPixelVector_4    c11      1
//   UniformPixelVector_5    c12      1
//   UniformPixelVector_6    c13      1
//   UniformPixelVector_7    c14      1
//   UniformPixelVector_8    c15      1
//   UniformPixelVector_9    c16      1
//   UniformPixelVector_10   c17      1
//   UniformPixelVector_11   c18      1
//   UniformPixelVector_12   c19      1
//   UniformPixelScalars_9   c20      1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//   PixelTexture2D_1        s3       1
//   PixelTexture2D_2        s4       1
//   PixelTexture2D_3        s5       1
//   PixelTexture2D_4        s6       1
//   PixelTexture2D_5        s7       1
//   PixelTexture2D_6        s8       1
//

    ps_3_0
    def c4, 0.5, 0.150000006, 1, 4
    def c5, 0.400000006, 0.75, 0.419999987, 9.99999997e-007
    def c6, 1.20000005, 0.800000012, 0.200000003, 0.349999994
    def c21, 0, 0.649999976, 0.0625, 9.99999975e-006
    def c22, 100000, 0.25, 0.300000012, 0
    def c23, 1.25, -0.200000003, 0, 0
    dcl_texcoord4 v0.w
    dcl_texcoord6 v1.xyz
    dcl_texcoord5 v2.w
    dcl_texcoord v3.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_D03200ED_676.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.yz, r0.xxyw, v2.w
    dp3_pp r1.x, v1, v1
    rsq_pp r1.x, r1.x
    mul_pp r1.y, r1.x, v1.z
    mul r1.zw, c8.xyxy, v3.xyxy
    mov r2.xy, c8
    mad r2.zw, v3.xyxy, r2.xyxy, c9.xyxy
    texld_pp r3, r2.zwzw, s2
    mov r4.xz, c5
    mad r2.zw, r1, r4.x, c10.xyxy
    texld_pp r5, r2.zwzw, s2
    mad r2.zw, r3.xyxy, c5.y, r5.xyxy
    mad r3.xy, r1.zwzw, r4.z, c11
    texld_pp r3, r3, s3
    add_sat r2.zw, r2, r3.xyxy
    mad r2.zw, v3.xyxy, c8.xyxy, r2
    texld r3, r2.zwzw, s4
    max r2.zw, r3_abs.xyxy, c5.w
    log r3.x, r2.z
    log r3.y, r2.w
    mul r2.zw, r3.xyxy, c6.x
    exp_sat r3.x, r2.z
    exp_sat r3.y, r2.w
    mul r2.zw, c6.y, v3.xyxy
    mad r2.zw, r2, r2.xyxy, c12.xyxy
    texld_pp r5, r2.zwzw, s2
    mov r4.yzw, c6
    mad r2.zw, r1, r4.z, c13.xyxy
    texld_pp r6, r2.zwzw, s2
    mad_sat r2.zw, r5.xyxy, c5.y, r6.xyxy
    mad r2.zw, v3.xyxy, c8.xyxy, r2
    texld r5, r2.zwzw, s4
    max r2.zw, r5_abs.xyxy, c5.w
    log r5.x, r2.z
    log r5.y, r2.w
    mul r2.zw, r5.xyxy, c6.z
    exp_sat r5.x, r2.z
    exp_sat r5.y, r2.w
    mul r2.zw, r3.xyxy, r5.xyxy
    texld r3, r2.zwzw, s5
    mad r2.xy, v3, r2, c14
    texld_pp r2, r2, s3
    mad r2.zw, r1, r4.x, c15.xyxy
    texld_pp r5, r2.zwzw, s3
    mad_sat r2.xy, r2, c5.y, r5
    mad r2.xy, v3, c8, r2
    texld r2, r2, s4
    max r5.xy, r2_abs, c5.w
    mul r2.zw, r5.xyxy, r5.xyxy
    mul_sat r2.zw, r2, r5.xyxy
    mad r4.xw, r1.zyzw, r4.w, c16.xyzy
    texld_pp r5, r4.xwzw, s3
    mad r1.zw, r1, r4.z, c17.xyxy
    texld_pp r6, r1.zwzw, s3
    mad_sat r1.zw, r5.xyxy, c4.x, r6.xyxy
    mad r1.zw, v3.xyxy, c8.xyxy, r1
    texld r5, r1.zwzw, s4
    max r1.zw, r5_abs.xyxy, c5.w
    mul r4.xz, r1.zyww, r1.zyww
    mul_sat r1.zw, r1, r4.xyxz
    mul r1.zw, r1, r2
    texld r6, r1.zwzw, s6
    mad r3.xyz, r3, c4.y, r6
    mad r1.x, v1.z, -r1.x, c4.z
    cmp r1.x, r1.y, r1_abs.x, c4.z
    add r1.y, r1.x, -c5.w
    mul r1.z, r1.x, r1.x
    mul r1.x, r1.z, r1.x
    mul r1.xzw, r1.x, r3.xyyz
    mul r1.xzw, r1, c4.w
    cmp r1.xyz, r1.y, r1.xzww, c21.x
    add r1.xyz, r1, r3
    mov_sat r2.xy, r2
    mov_sat r5.xy, r5
    mul r2.xy, r2, r5
    texld r2, r2, s6
    mul r2.xyz, r2, c21.y
    abs r1.w, c3.x
    if_ne c3.x, -c3.x
      texld r3, c21.zxzw, s1
      add r2.w, -r3.y, v2.w
      mad r0.x, r3.x, r2.w, r0.y
      mov r0.w, v2.w
      mov r3.xyz, r0.xzww
    else
      mov r3.xyz, c21.x
    endif
    mov r0.w, v2.w
    cmp r3.xyz, -r1.w, r0.yzww, r3
    rcp r2.w, r3.z
    mul r3.xy, r2.w, r3
    mad r3.xy, r3, c1, c1.wzzw
    mov r3.zw, c21.x
    texldl r3, r3, s0
    add r2.w, r3.w, -c2.y
    add r3.x, -r2.w, c21.w
    rcp r2.w, r2.w
    cmp r2.w, r3.x, c22.x, r2.w
    mad r2.w, c2.x, r2.w, -v2.w
    mul_sat r2.w, r2.w, c6.y
    add r2.w, -r2.w, c4.z
    mad r1.xyz, r2.w, r2, r1
    add_pp r1.xyz, r1, c7
    if_ne c3.x, -c3.x
      texld r2, c21.zxzw, s1
      add r2.y, -r2.y, v2.w
      mad r0.x, r2.x, r2.y, r0.y
      mov r2.xyz, r0.xzww
    else
      mov r2.xyz, c21.x
    endif
    cmp r0.xyz, -r1.w, r0.yzww, r2
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c21.x
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c21.w
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c22.x, r0.x
    mad r0.x, c2.x, r0.x, -v2.w
    mul_sat r0.x, r0.x, c22.y
    texld r2, v3, s7
    mad r0.yz, v3.xxyw, r4.y, c18.xxyw
    add r0.yz, r0, r2.xxyw
    texld_pp r3, r0.yzzw, s8
    mov r0.z, c22.z
    mad r0.yz, v3.xxyw, r0.z, c19.xxyw
    add r0.yz, r0, r2.xxyw
    texld_pp r2, r0.yzzw, s8
    add r0.y, r2.x, r3.x
    mad r0.y, r0.y, c6.z, v3.y
    mov r2.xy, c23
    mad r0.z, c20.x, r2.x, r2.y
    add r0.y, -r0.z, r0.y
    frc r0.z, -r0.y
    add_sat r0.y, r0.z, r0.y
    add r0.y, -r0.y, c4.z
    mul_pp r0.x, r0.x, r0.y
    mul r0.yzw, r1.xxyz, v0.w
    mul_pp oC0.xyz, r0.x, r0.yzww
    mov oC0.w, c21.x

// approximately 150 instruction slots used (25 texture, 125 arithmetic)
