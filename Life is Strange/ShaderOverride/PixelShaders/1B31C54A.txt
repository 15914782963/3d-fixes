//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   sampler2D DNEReflectionTexture;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float3 UpperSkyColor;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEEnvMapParameter        c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DNEMiscParameter          c7       1
//   DNECubemapPosition        c8       1
//   CameraWorldPos            c9       1
//   DNEResolution             c10      1
//   UniformPixelVector_0      c11      1
//   UniformPixelVector_1      c12      1
//   UniformPixelVector_2      c13      1
//   UniformPixelScalars_1     c14      1
//   UniformPixelScalars_2     c15      1
//   UpperSkyColor             c16      1
//   AmbientColorAndSkyFactor  c17      1
//   SceneColorTexture         s0       1
//   NvStereoFixTexture        s1       1
//   DNEEnvironmentTexture     s2       1
//   DNEReflectionTexture      s3       1
//   PixelTexture2D_0          s4       1
//   PixelTexture2D_1          s5       1
//

    ps_3_0
    def c6, 0.0399999991, 0.5, -0.5, -9.99999997e-007
    def c18, -5.55472994, -6.98316002, 4, 1
    def c19, 1312, -3658, 366, 7
    def c20, 0.00048828125, 50, 0.0700000003, 0.930000007
    def c21, 0.0625, 0, 9.99999975e-006, 100000
    def c22, 0.200000003, 0, 0, 0
    def c23, 1, 0, 1.41789806, -0.99000001
    def c24, 0.100000001, 0, 1, 2
    dcl_texcoord2_pp v0.xyz
    dcl_texcoord4 v1
    dcl_texcoord6 v2.xyz
    dcl_texcoord5 v3
    dcl_color v4.xyz
    dcl_color1 v5
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_1B31C54A_6953976.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine


def c220, 0, 1, 0.0625, 0.5
dcl_2d s15

    nrm_pp r0.xyz, v5
    nrm_pp r1.xyz, v4
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v5.w
    add r3.xyz, c9, v3
    mad r4.xy, vPos, c10, c10.zwzw
    mul r4.xy, r4, v3.w
    nrm_pp r5.xyz, v2
    mad_sat_pp r0.w, c7.x, v3.w, c7.y
    rcp r1.w, c14.x
    mul_pp r6.xy, r1.w, r3
    mad_pp r6.zw, r3.xyxy, r1.w, c12.xyxy
    texld_pp r7, r6.zwzw, s4
    dp2add_pp r1.w, r7, -r7, c23.x
    max_pp r2.w, r1.w, c23.y
    rsq_pp r1.w, r2.w
    rcp_pp r7.z, r1.w
    mov r6.z, c23.z
    mad_pp r6.xy, r6, r6.z, c13
    texld_pp r6, r6, s4
    dp2add_pp r1.w, r6, -r6, c23.x
    max_pp r2.w, r1.w, c23.y
    rsq_pp r1.w, r2.w
    rcp_pp r6.z, r1.w
    add_pp r6.xyz, r6, r7
    dp3_pp r1.w, r6, r6
    rsq_pp r1.w, r1.w
    mad_pp r6.xyz, r6, r1.w, c23.yyww
    mad_pp r6.xyz, r6, c24.x, c24.yyzw
    nrm_pp r7.xyz, r6
    dp3_pp r1.w, r7, r5
    mul_pp r6.xyz, r1.w, r7
    mad_pp r6.xyz, r6, c24.w, -r5
    mov r8.x, c6.x
    mad_pp r8.xyz, c5.w, r8.x, c5
    rcp r2.w, v3.w
    mul r9.xy, r2.w, r4
    mad r9.xy, r9, c6.yzzw, c6.y
    mad_pp r9.xy, r7, c6.y, r9
    mov r9.zw, c23.y

// DNERefelctionTexture fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_1B31C54A_6953976.txt
texldl r31, c220.z, s15
mad r9.x, -r31.x, c220.w, r9.x

    texldl_pp r9, r9, s3
    mov_sat_pp r2.w, r1.w
    max_pp r10.xyz, c23.x, r8
    mad_pp r3.w, r2.w, c18.x, c18.y
    mul_pp r3.w, r2.w, r3.w
    exp_pp r3.w, r3.w
    lrp_pp r11.xyz, r3.w, r10, r8
    mul_pp r8.xyz, r9, r11
    mul_pp r8.xyz, r8, c7.z
    mul_pp r8.xyz, r0.w, r8
    dp3_pp r9.x, r1, r6
    dp3_pp r9.y, r2, r6
    dp3_pp r9.z, r0, r6
    add r6.xyz, r3, -c8
    mad_pp r6.xyz, c0.w, r6, r9
    add_pp r6.w, c7.w, c7.z
    texldl_pp r6, r6, s2
    mul_pp r6.xyz, r6, r11
    mul_pp r6.xyz, r6, c0
    mul_pp r6.xyz, r0.w, r6
    add_pp r0.w, -r2.w, c23.x
    dp3_pp r9.x, r1, r5
    dp3_pp r9.y, r2, r5
    dp3_pp r9.z, r0, r5
    add_pp r3.xyz, -r3, c19
    dp3_pp r2.w, r3, r3
    rsq_pp r2.w, r2.w
    mul_pp r3.xyz, r2.w, r3
    dp3_pp r1.x, r1, r7
    dp3_pp r1.y, r2, r7
    dp3_pp r1.z, r0, r7
    dp3_pp r0.x, -r3, r1
    add_pp r0.x, r0.x, r0.x
    mad_pp r0.xyz, r1, -r0.x, -r3
    nrm_pp r2.xyz, r0
    dp3_sat_pp r0.x, r9, r2
    add_pp r0.x, -r0.x, c23.x
    mad_pp r0.x, r0.x, -c18.z, c18.w
    max_pp r2.x, r0.x, c23.y
    add r0.x, r2.x, c6.w
    pow_pp r0.y, r2.x, c19.w
    cmp_pp r0.x, r0.x, r0.y, c23.y
    mad_pp r0.xyz, r0.w, r6, r0.x
    rcp_pp r0.w, r2.w
    mul_sat_pp r0.w, r0.w, c20.x
    add_pp r0.w, -r0.w, c23.x
    dp3_sat_pp r1.x, r3, r1
    mul_pp r1.x, r1.x, r1.x
    mad_pp r0.xyz, r0.w, r1.x, r0
    texld_pp r2, c15.x, s5
    mov_sat_pp r0.w, r2.y
    mul_pp r0.xyz, r0, r0.w
    mul_pp r0.xyz, r0, r8
    mul_pp r0.xyz, r0, c20.y
    mad_pp r0.xyz, r8, c20.z, r0
    add r0.w, -r1.w, c23.x
    cmp_pp r0.w, r1.w, r0_abs.w, c23.x
    add r1.x, r0.w, c6.w
    mul r1.y, r0.w, r0.w
    mad_pp r1.z, r1.y, c20.w, c20.z
    cmp_pp r1.z, r1.x, r1.z, c20.z
    mad_pp r0.xyz, r1.z, r0, r8
    add_pp r0.xyz, r0, c11
    mad_pp r0.xyz, v0, c4, r0
    mov r2.xyz, c4
    mul r2.xyz, r2, c16
    mad_pp r0.xyz, r2, c17.w, r0
    mov_sat_pp r1.z, r7.z
    add r1.w, r1.z, c6.w
    mul r1.z, r1.z, r1.z
    mul_pp r1.z, r1.z, r1.z
    abs r2.x, c3.x
    if_ne c3.x, -c3.x
      texld r3, c21, s1
      add r2.y, -r3.y, v3.w
      mad r4.z, r3.x, r2.y, r4.x
      mov r4.w, v3.w
      mov r2.yzw, r4.xzyw
    else
      mov r2.yzw, c23.y
    endif
    mov r4.z, v3.w
    cmp r2.xyz, -r2.x, r4, r2.yzww
    rcp r2.z, r2.z
    mul r2.xy, r2.z, r2
    mad r2.xy, r2, c1, c1.wzzw
    mov r2.zw, c23.y
    texldl r2, r2, s0
    add r2.x, r2.w, -c2.y
    add r2.y, -r2.x, c21.z
    rcp r2.x, r2.x
    cmp r2.x, r2.y, c21.w, r2.x
    mad_pp r2.x, c2.x, r2.x, -v3.w
    mul_sat_pp r2.x, r2.x, c22.x
    mul_pp r1.z, r1.z, r2.x
    cmp_pp r1.z, r1.w, r1.z, c23.y
    add_pp r1.z, r2.x, r1.z
    add_pp r1.z, r1.z, c6.z
    frc_pp r1.w, -r1.z
    add_sat_pp r1.z, r1.w, r1.z
    mul_pp r0.w, r0.w, r1.y
    add r1.y, -c15.z, c15.y
    mul r0.w, r0.w, r1.y
    cmp r0.w, r1.x, r0.w, c23.y
    add_pp r0.w, r0.w, c15.z
    mul_pp r0.w, r2.x, r0.w
    mul_sat_pp oC0.w, r1.z, r0.w
    mad_pp oC0.xyz, r0, v1.w, v1

// approximately 168 instruction slots used (10 texture, 158 arithmetic)
