//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_1;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEResolution                c7       1
//   UniformPixelVector_0         c8       1
//   UniformPixelScalars_0        c9       1
//   LightColorAndFalloffExponent c10      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_1             s3       1
//

    ps_3_0
    def c2, 0, 2, 1, 0.5
    def c6, 1.53846157, 1, 0.849999964, -0.200000003
    def c11, -0.333299994, 0.0625, 0, 3
    def c12, -9.99999997e-007, 15, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5 v2.xyz
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_DC38E77B_5093.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v3
    nrm_pp r1.xyz, v1
    mad_pp r0.xyz, r0.z, c2.xxyw, -r0
    texld_pp r2, c2.zwzw, s0
    dp3 r0.w, v2, v2
    add r1.w, -r0.w, c2.z
    mul r3, r2.x, r1.w
    mov r4, r3
    texkill r4
    mad r1.w, v0.x, -c6.x, c6.y
    mov r2.zw, c6
    mad r2.y, c9.x, r2.z, r2.w
    add r1.w, r1.w, -r2.y
    frc r2.y, -r1.w
    add_sat r2.y, r1.w, r2.y
    add r2.y, r2.y, c11.x
    cmp r4, -r3.w, c2.x, r2.y
    texkill r4
    if b0
      mad r2.yz, vPos.xxyw, c7.xxyw, c7.xzww
      mul r3.xy, r2.yzzw, v4.w
      if_ne c3.x, -c3.x
        texld r4, c11.yzzw, s1
        add r2.y, -r4.y, v4.w
        mad r3.z, r4.x, r2.y, r3.x
        mov r3.xy, r3.zyzw
        mov r2.y, v4.w
      else
        mov r2.y, v4.w
      endif
      rcp r2.y, r2.y
      mul r2.yz, r2.y, r3.xxyw
      mad r2.yz, r2, c1.xxyw, c1.xwzw
      texld r4, r2.yzzw, s2
      mul_pp r2.yzw, r4.xxyz, r4.xxyz
      mul_pp r2.yzw, r2, r2.x
    else
      mov_pp r2.yzw, r2.x
    endif
    mov_sat r0.w, r0.w
    add r0.w, -r0.w, c2.z
    pow_sat_pp r3.x, r0.w, c10.w
    mov r3.y, c2.w
    texld_pp r4, r3, s0
    texld r5, v0, s3
    mul_sat r0.w, r1.w, c11.w
    mul r3.xyz, r5, r0.w
    mov r4.z, c2.z
    add r4.yzw, r4.z, -c8.xxyz
    mul_pp r3.xyz, r3, r4.yzww
    mad_pp r3.xyz, r3, c4.w, c4
    mov_sat_pp r0.w, r1.z
    add r1.w, r0.w, c12.x
    mul r0.w, r0.w, c0.w
    dp3_sat_pp r0.x, r0, r1
    add r0.y, r0.x, c12.x
    pow_pp r1.x, r0.x, c12.y
    mul r0.x, r1.x, c0.x
    mul r1.xyz, r0.w, r3
    cmp r1.xyz, r1.w, r1, c2.x
    mul_pp r0.xzw, r0.x, c5.xyyz
    cmp_pp r0.xyz, r0.y, r0.xzww, c2.x
    add_pp r0.xyz, r0, r1
    mul_pp r0.xyz, r2.yzww, r0
    mul r0.xyz, r4.x, r0
    mul r0.xyz, r0, c10
    cmp oC0.xyz, -r3.w, c2.x, r0
    mov oC0.w, c2.x

// approximately 80 instruction slots used (5 texture, 75 arithmetic)
