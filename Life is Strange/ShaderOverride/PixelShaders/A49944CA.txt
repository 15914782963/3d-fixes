//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 LightMapScale;
//   sampler2D LightMapTextures;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   DNEResolution            c0       1
//   ScreenPositionScaleBias  c1       1
//   MinZ_MaxZRatio           c2       1
//   NvStereoEnabled          c3       1
//   DiffuseOverrideParameter c4       1
//   UniformPixelVector_0     c7       1
//   UniformPixelVector_1     c8       1
//   UniformPixelScalars_0    c9       1
//   UpperSkyColor            c10      1
//   AmbientColorAndSkyFactor c11      1
//   LightMapScale            c12      1
//   NvStereoFixTexture       s0       1
//   PixelTexture2D_0         s1       1
//   LightMapTextures         s2       1
//   VAOBuffer                s3       1
//

    ps_3_0
    def c5, 0.0625, 0, 0, 0
    def c6, 1, 5, -5, 0.200000003
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xy
    dcl_texcoord6 v2.xyz
    dcl_texcoord5 v3.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_A49944CA_801.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v3.w
    dp3_pp r1.x, v2, v2
    rsq_pp r1.x, r1.x
    mul_pp r1.x, r1.x, v2.z
    texld_pp r2, v1, s1
    mul_pp r1.yzw, r2.xxyz, c8.xxyz
    mov_pp r2.x, c6.x
    add_pp r2.xyz, r2.x, -c7
    mul_pp r2.xyz, r1.yzww, r2
    mad_pp r2.xyz, r2, c4.w, c4
    mad_pp r1.x, r1.x, c6.y, c6.z
    exp_pp r1.x, r1.x
    mul_pp r1.yzw, r1, c9.x
    mad_pp r1.xyz, r1.x, c6.w, r1.yzww
    add_pp r1.xyz, r1, c7
    texld r3, v0, s2
    mul_pp r3.xyz, r3, c12
    mad_pp r1.xyz, r3, r2, r1
    mul r2.xyz, r2, c10
    mad_pp r1.xyz, r2, c11.w, r1
    abs r1.w, c3.x
    if_ne c3.x, -c3.x
      texld r2, c5, s0
      add r2.y, -r2.y, v3.w
      mad r0.z, r2.x, r2.y, r0.x
      mov r0.w, v3.w
      mov r2.xyz, r0.zyww
    else
      mov_pp r2.xyz, c5.y
    endif
    mov r0.z, v3.w
    cmp r0.xyz, -r1.w, r0, r2
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s3
    mul_pp oC0.xyz, r0.x, r1
    rcp r0.x, v3.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 42 instruction slots used (4 texture, 38 arithmetic)
