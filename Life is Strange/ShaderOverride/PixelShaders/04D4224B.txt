//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEMiscParameter;
//   sampler2D DNEReflectionTexture;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenDoorFadeSettings;
//   float4 ScreenDoorFadeSettings2;
//   sampler2D ScreenDoorNoiseTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   float4 WorldIncidentLighting[7];
//   bool bEnableScreenDoorFade;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bEnableScreenDoorFade        b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   WorldIncidentLighting        c7       7
//   DNEMiscParameter             c14      1
//   DNEResolution                c15      1
//   ScreenDoorFadeSettings       c16      1
//   ScreenDoorFadeSettings2      c17      1
//   UniformPixelVector_0         c18      1
//   UniformPixelVector_1         c19      1
//   UniformPixelScalars_0        c20      1
//   LightColorAndFalloffExponent c21      1
//   UpperSkyColor                c22      1
//   AmbientColorAndSkyFactor     c23      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   DNEReflectionTexture         s2       1
//   ScreenDoorNoiseTexture       s3       1
//   PixelTexture2D_0             s4       1
//   PixelTexture2D_1             s5       1
//   PixelTexture2D_2             s6       1
//   VAOBuffer                    s7       1
//

    ps_3_0
    def c6, 2, -1, -2, -0
    def c24, 10, 1.52876604, -0.0199999996, 0.0199999996
    def c25, 0.300000012, 0.5, -0.5, 0.858085215
    def c26, -1.02332771, 1.02332771, 0.886227608, 0.125
    def c27, 0.0625, 0, 1, 0.5
    def c28, -5.55472994, -6.98316002, 3, -1
    def c29, -0.858085215, 0.247708291, 0.429042608, 0
    def c30, 0.693147004, 2, 0, 0
    dcl_texcoord4 v0.xyz
    dcl_texcoord6 v1.xyz
    dcl_texcoord7_pp v2.w
    dcl_texcoord5 v3.w
    dcl_color v4.xyz
    dcl_color1 v5
    dcl_texcoord v6.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_4D4224B_533.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine


def c220, 0, 1, 0.0625, 0.5
dcl_2d s15

    nrm_pp r0.xyz, v5
    nrm_pp r1.xyz, v4
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v5.w
    mad r3.xy, vPos, c15, c15.zwzw
    mul r3.xy, r3, v3.w
    nrm_pp r4.xyz, v1
    mad_sat_pp r0.w, c14.x, v3.w, c14.y
    mul_pp r1.w, r0.w, c0.x
    texld_pp r5, v6, s4
    mad_pp r5.xyz, r5, c6.x, c6.yyzw
    mad_pp r5.xyz, v2.w, r5, -c6.wwyw
    nrm_pp r6.xyz, r5
    dp3_pp r2.w, v0, v0
    rsq_pp r2.w, r2.w
    mul_pp r5.xyz, r2.w, v0
    mad_pp r7.xyz, v0, r2.w, r4
    nrm_pp r8.xyz, r7
    lrp_pp r2.w, v2.w, r5.w, -c6.y
    mad_pp r4.w, r2.w, c24.x, c24.y
    exp_pp r4.w, r4.w
    texld_pp r7, v6, s6
    add_pp r7.xyz, r7, c24.z
    mad_pp r7.xyz, v2.w, r7, c24.w
    mad_pp r7.xyz, r7, c5.w, c5
    if b0
      mad r9.xy, vPos, c17.zwzw, c17
      texld_pp r9, r9, s3
      mad r5.w, c16.y, r9.x, c16.z
      mov r9.y, c6.y
      add r6.w, -r9.y, -c16.x
      add r9, r5.w, -r6.w
      texkill r9
    endif
    max_pp r5.w, v2.w, c19.y
    max_pp r6.w, r5.w, c25.x
    texld_pp r9, v6, s5
    mul_pp r9.xyz, r6.w, r9
    mov r10.y, c6.y
    add_pp r10.xyz, -r10.y, -c18
    mul_pp r9.xyz, r9, r10
    mad_pp r9.xyz, r9, c4.w, c4
    rcp r5.w, v3.w
    mul r10.xy, r3, r5.w
    mad r10.xy, r10, c25.yzzw, c25.y
    mad_pp r10.xy, r6, c20.x, r10
    mad_pp r10.w, -c14.w, r2.w, c14.w
    mov r10.z, -c6.w

// DNERefelctionTexture fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_4D4224B_533.txt
texldl r31, c220.z, s15
mad r10.x, -r31.x, c220.w, r10.x

    texldl_pp r10, r10, s2
    dp3_sat_pp r4.x, r6, r4
    max_pp r11.xyz, r2.w, r7
    mad_pp r2.w, r4.x, c28.x, c28.y
    mul_pp r2.w, r4.x, r2.w
    exp_pp r2.w, r2.w
    lrp_pp r4.xyz, r2.w, r11, r7
    mul_pp r4.xyz, r10, r4
    mul_pp r4.xyz, r4, c14.z
    mad_pp r4.xyz, r0.w, r4, c18
    mul r10.xyz, r9, c22
    mad_pp r4.xyz, r10, c23.w, r4
    dp3_pp r1.z, r1, r6
    dp3_pp r1.x, r2, r6
    dp3_pp r1.y, r0, r6
    mul r0.xyz, r1, r1.xyxw
    mad r2.y, r0.y, c28.z, c28.w
    mul r2.xz, r1, r1.y
    mad_pp r2.w, r1.z, r1.z, -r0.x
    mul r10.xyz, r1, c26.xyxw
    mul r10.w, r0.z, c25.w
    mul r0, r2, c29.xyxz
    dp4 r1.x, c8, r10
    mov r1.z, c26.z
    mad_pp r1.x, c7.x, r1.z, r1.x
    dp4 r1.y, c9, r0
    add_pp r2.x, r1.y, r1.x
    dp4 r1.x, c10, r10
    mad_pp r1.x, c7.y, r1.z, r1.x
    dp4 r1.y, c11, r0
    add_pp r2.y, r1.y, r1.x
    dp4 r1.x, c12, r10
    mad_pp r1.x, c7.z, r1.z, r1.x
    dp4 r0.x, c13, r0
    add_pp r2.z, r0.x, r1.x
    mul_pp r0.xyz, r2, r9
    cmp_pp r0.xyz, r2, r0, -c6.w
    add_pp r0.xyz, r0, r4
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r2, c27, s1
      add r1.x, -r2.y, v3.w
      mad r3.z, r2.x, r1.x, r3.x
      mov r3.w, v3.w
      mov r1.xyz, r3.zyww
    else
      mov_pp r1.xyz, -c6.w
    endif
    mov r3.z, v3.w
    cmp r1.xyz, -r0.w, r3, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r2, r1, s7
    texld_pp r3, c27.zwzw, s0
    dp3_sat_pp r0.w, r6, r5
    mul_pp r1.x, r0.w, c0.w
    mov_sat_pp r1.y, c0.y
    mul_pp r1.y, r1.y, r1.y
    mul_pp r1.y, r4.w, r1.y
    dp3_sat_pp r1.z, r6, r8
    mad_pp r2.y, r1.y, c30.x, c30.y
    mul_pp r2.y, r2.y, c26.w
    mad r1.y, r1.y, r1.z, -r1.y
    exp_pp r1.y, r1.y
    mul_pp r1.y, r1.y, r2.y
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.w, r0.w
    dp3_sat_pp r1.y, r5, r8
    mad_pp r1.z, r1.y, c28.x, c28.y
    mul_pp r1.y, r1.y, r1.z
    exp_pp r1.y, r1.y
    lrp_pp r2.yzw, r1.y, -c6.y, r7.xxyz
    mul_pp r1.yzw, r0.w, r2
    mad_pp r1.xyz, r9, r1.x, r1.yzww
    mul_pp r1.xyz, r3.x, r1
    mul_pp r1.xyz, r1, c21
    mad_pp r0.xyz, r0, r2.x, r1
    mad_pp oC0.xyz, r9, c23, r0
    mad oC0.w, c2.x, r5.w, c2.y

// approximately 144 instruction slots used (9 texture, 135 arithmetic)
