//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 EdgeSampleOffsets[2];
//   float3 FalloffParameters;
//   float2 InvRandomAngleTextureSize;
//   float4 LightPosition;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D RandomAngleTexture;
//   float4 RefiningSampleOffsets[4];
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4x4 ScreenToShadowMatrix;
//   float4x4 ScreenToWorld;
//   float2 ShadowBufferSize;
//   sampler2D ShadowDepthTexture;
//   float4 ShadowModulateColor;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   InvRandomAngleTextureSize c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   ScreenToShadowMatrix      c7       4
//   RefiningSampleOffsets     c11      4
//   ScreenToWorld             c15      4
//   EdgeSampleOffsets         c19      2
//   ShadowBufferSize          c21      1
//   ShadowModulateColor       c22      1
//   LightPosition             c23      1
//   FalloffParameters         c24      1
//   SceneColorTexture         s0       1
//   NvStereoFixTexture        s1       1
//   ShadowDepthTexture        s2       1
//   RandomAngleTexture        s3       1
//

    ps_3_0
    def c4, 0.0625, 0, 9.99999975e-006, 100000
    def c5, 0.999000013, 1, 0.5, -2
    def c6, 1, -1, 0, 9.99999975e-005
    def c25, -0.999899983, 0.125, 0.699999988, 0
    dcl_texcoord v0.xyw
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13


// Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-unreal-shadows --only-autofixed --git --quiet CRC32_6EF5E680_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

texldl r10, c220.z, s13
mov r11.xyw, v0
add r10.w, r11.w, -r10.y
mad r11.x, r10.w, r10.x, r11.x

    if_ne c3.x, -c3.x
      texld r0, c4, s1
      add r0.y, -r0.y, r11.w
      mad r0.x, r0.x, r0.y, r11.x
      mov r0.yz, r11.xyww
    else
      mov r0.xyz, r11.xyww
    endif
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.y
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c4.z
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c4.w, r0.x
    mul r0.x, r0.x, c2.x
    rcp r0.y, r11.w
    mul r0.zw, r0.y, r11.xyxy
    mul r0.zw, r0.x, r0
    mul r1, r0.w, c8

// Unreal Engine shadow fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-unreal-shadows --only-autofixed --git --quiet CRC32_6EF5E680_0.txt
add r10.w, r0.x, -r10.y
mad r0.z, -r10.w, r10.x, r0.z

    mad r1, c7, r0.z, r1
    mad r1, c9, r0.x, r1
    add r1, r1, c10
    rcp r1.w, r1.w
    mul r2.xy, r1.w, r1
    min r3.z, r1.z, c5.x
    mad r2.zw, r11.xyxy, r0.y, c5.y
    mul r2.zw, r2, c0.xyxy
    mul r2.zw, r2, c5.z
    texld r4, r2.zwzw, s3
    mad_pp r4, r4.yxyx, -c5.w, -c5.y
    mul_pp r5, r4.wzwz, c6.xyxy
    mad r6, r5.zwzw, c19.xxzz, r2.xyxy
    mad_pp r6, r4.zwzw, c19.yyww, r6
    mul r3.xyw, r6.xyzx, c6.xxzz
    texldl r7, r3, s2
    mul r3.xyw, r6.zwzx, c6.xxzz
    texldl r6, r3, s2
    add r7, -r7, r3.z
    cmp_pp r7, r7, c6.z, c6.x
    dp4_pp r0.y, r7, c4.x
    add r6, r3.z, -r6
    cmp_pp r6, r6, c6.z, c6.x
    dp4_pp r1.z, r6, c4.x
    add_pp r0.y, r0.y, r1.z
    mad r2, r5, c20.xxzz, r2.xyxy
    mad_pp r2, r4, c20.yyww, r2
    mov_pp r4.xy, r2
    mov r4.zw, r3
    texldl r5, r4, s2
    mov_pp r4.xy, r2.zwzw
    texldl r2, r4, s2
    add r5, r3.z, -r5
    cmp_pp r5, r5, c6.z, c6.x
    dp4_pp r1.z, r5, c4.x
    add_pp r0.y, r0.y, r1.z
    add r2, -r2, r3.z
    cmp_pp r2, r2, c6.z, c6.x
    dp4_pp r1.z, r2, c4.x
    add_pp r0.y, r0.y, r1.z
    add r1.z, -r0.y, c6.w
    add r2.x, r0.y, c25.x
    cmp r2.x, r2.x, c6.z, c6.x
    cmp r1.z, r1.z, c4.y, r2.x
    if_ne r1.z, -r1.z
      mad_pp r2, r1.xyxy, r1.w, c11
      mov_pp r4.xy, r2
      texldl r5, r4, s2
      mov_pp r4.xy, r2.zwzw
      texldl r6, r4, s2
      add r5, r3.z, -r5.wxyz
      add r6, r3.z, -r6.wxyz
      cmp_pp r5, r5, c6.z, c6.x
      cmp_pp r6, r6, c6.z, c6.x
      mul r2, r2, c21.xyxy
      frc_pp r2, r2
      mov_pp r7.xy, r5
      mov_pp r7.zw, r6.xyxy
      mov_pp r6.xy, r5.zwzw
      lrp_pp r5, r2.yyww, r6, r7
      mad_pp r6, r1.xyxy, r1.w, c12
      mov_pp r4.xy, r6
      texldl r7, r4, s2
      mov_pp r4.xy, r6.zwzw
      texldl r8, r4, s2
      add r7, r3.z, -r7.wxyz
      add r8, r3.z, -r8.wxyz
      cmp_pp r7, r7, c6.z, c6.x
      cmp_pp r8, r8, c6.z, c6.x
      mul r6, r6, c21.xyxy
      frc_pp r6, r6
      mov_pp r9.xy, r7
      mov_pp r9.zw, r8.xyxy
      mov_pp r8.xy, r7.zwzw
      lrp_pp r7, r6.yyww, r8, r9
      lrp_pp r8.xy, r2.xzzw, r5.ywzw, r5.xzzw
      lrp_pp r8.zw, r6.xyxz, r7.xyyw, r7.xyxz
      dp4_pp r1.z, r8, c25.y
      mad_pp r2, r1.xyxy, r1.w, c13
      mov_pp r4.xy, r2
      texldl r5, r4, s2
      mov_pp r4.xy, r2.zwzw
      texldl r6, r4, s2
      add r5, r3.z, -r5.wxyz
      add r6, r3.z, -r6.wxyz
      cmp_pp r5, r5, c6.z, c6.x
      cmp_pp r6, r6, c6.z, c6.x
      mul r2, r2, c21.xyxy
      frc_pp r2, r2
      mov_pp r7.xy, r5
      mov_pp r7.zw, r6.xyxy
      mov_pp r6.xy, r5.zwzw
      lrp_pp r5, r2.yyww, r6, r7
      mad_pp r6, r1.xyxy, r1.w, c14
      mov_pp r4.xy, r6
      texldl r7, r4, s2
      mov_pp r4.xy, r6.zwzw
      texldl r4, r4, s2
      add r7, r3.z, -r7.wxyz
      add r3, r3.z, -r4.wxyz
      cmp_pp r4, r7, c6.z, c6.x
      cmp_pp r3, r3, c6.z, c6.x
      mul r6, r6, c21.xyxy
      frc_pp r6, r6
      mov_pp r7.xy, r4
      mov_pp r7.zw, r3.xyxy
      mov_pp r3.xy, r4.zwzw
      lrp_pp r4, r6.yyww, r3, r7
      lrp_pp r3.xy, r2.xzzw, r5.ywzw, r5.xzzw
      lrp_pp r3.zw, r6.xyxz, r4.xyyw, r4.xyxz
      dp4_pp r1.x, r3, c25.y
      add_pp r1.x, r1.x, r1.z
      lrp_pp r2.x, c25.z, r1.x, r0.y
      mov_pp r0.y, r2.x
    endif
    mul r1.xyz, r0.w, c16
    mad r1.xyz, c15, r0.z, r1
    mad r0.xzw, c17.xyyz, r0.x, r1.xyyz
    add r0.xzw, r0, c18.xyyz
    add r0.xzw, -r0, c23.xyyz
    mul r0.xzw, r0, c23.w
    dp3 r0.x, r0.xzww, r0.xzww
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    mad r0.x, r0.x, c24.y, c24.z
    max r1.x, r0.x, c4.y
    mad r0.x, r1.x, -r1.x, c5.y
    max r1.x, r0.x, c4.y
    pow_pp r0.x, r1.x, c24.x
    mov r1.y, c5.y
    add r1, -r1.y, c22
    mad_pp r1, r0.x, r1, c5.y
    mul_pp r0.x, r0.y, r0.y
    mul_pp r0.x, r0.y, r0.x
    add_pp r2, -r1, c5.y
    mad_pp oC0, r0.x, r2, r1

// approximately 177 instruction slots used (28 texture, 149 arithmetic)
