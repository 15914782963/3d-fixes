//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEResolution;
//   float4 DebugMode[5];
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_4;
//   float4 UniformPixelScalars_5;
//   float4 UniformPixelScalars_6;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEEnvMapParameter        c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DebugMode                 c7       5
//   CameraWorldPos            c12      1
//   DNEResolution             c13      1
//   UniformPixelVector_0      c14      1
//   UniformPixelVector_1      c15      1
//   UniformPixelVector_2      c16      1
//   UniformPixelVector_3      c17      1
//   UniformPixelScalars_1     c18      1
//   UniformPixelScalars_2     c19      1
//   UniformPixelScalars_3     c20      1
//   UniformPixelScalars_4     c21      1
//   UniformPixelScalars_5     c22      1
//   UniformPixelScalars_6     c23      1
//   SceneColorTexture         s0       1
//   NvStereoFixTexture        s1       1
//   DNEEnvironmentTexture     s2       1
//   PixelTexture2D_0          s3       1
//   PixelTexture2D_1          s4       1
//

    ps_3_0
    def c6, 2, 0.5, 0.0625, 0
    def c24, 9.99999975e-006, 100000, 0, 0
    def c25, 1, 0, 1.41789806, -0.99000001
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord6 v2.xyz
    dcl_texcoord7 v3.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_1BD2925F_641.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm r0.xyz, v1
    nrm r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul r2.xyz, r2.yxzw, v1.w
    add r3.xy, c12, v3
    mad r3.zw, vPos.xyxy, c13.xyxy, c13
    mul r4.yz, r3.xzww, v3.w
    nrm_pp r5.xyz, v2
    rcp r0.w, c18.x
    mul r3.zw, r0.w, r3.xyxy
    mad r3.xy, r3, r0.w, c15
    texld_pp r6, r3, s3
    dp2add_pp r0.w, r6, -r6, c25.x
    max_pp r1.w, r0.w, c25.y
    rsq_pp r0.w, r1.w
    rcp_pp r6.z, r0.w
    mov r7.xyz, c25
    mad r3.xy, r3.zwzw, r7.z, c16
    texld_pp r8, r3, s3
    dp2add_pp r0.w, r8, -r8, c25.x
    max_pp r1.w, r0.w, c25.y
    rsq_pp r0.w, r1.w
    rcp_pp r8.z, r0.w
    add r6.xyz, r6, r8
    nrm r8.xyz, r6
    mul r6.xyz, r8, c19.x
    frc r8.xyz, r6
    add r6.xyz, r6, -r8
    rcp r0.w, c19.x
    mul r3.xy, r0.w, r6
    mov r1.w, c19.w
    mad r3.zw, r1.w, r3, c17.xyxy
    texld r8, r3.zwzw, s4
    lrp_sat r1.w, r8.x, c20.z, c20.w
    mad r6.xyz, r6, r0.w, c25.yyww
    mad r6.xyz, r1.w, r6, c25.yyxw
    nrm r9.xyz, r6
    dp3_pp r6.x, r1, r9
    dp3_pp r6.y, r2.yxzw, r9
    dp3_pp r6.z, r0, r9
    nrm_pp r10.xyz, r6
    dp3_pp r0.w, r10, r5
    mul_pp r6.xyz, r0.w, r10
    mad_pp r6.xyz, r6, c6.x, -r5
    mul r11, r7.yxyx, c7.xxyy
    add r11, r11.zzzw, r11.xxxy
    mov r3.z, c7.z
    mul r12.xyz, r3.z, c4
    mov r12.w, c7.z
    add r11, r11, r12
    mad r12.xyz, r10, c6.y, c6.y
    mov r12.w, c25.x
    mad r11, c7.w, r12, r11
    mad r11, c8.x, r7.yxyx, r11
    mov r8.y, c8.y
    mul r12.xyz, r8.y, c5
    mov r12.w, c8.y
    add r11, r11, r12
    dp3_pp r12.x, r1, r6
    dp3_pp r12.y, r2.yxzw, r6
    dp3_pp r12.z, r0, r6
    mov r12.w, c25.y
    texldl_pp r6, r12, s2
    mul_pp r6.xyz, r6, c0
    dp3 r0.w, r9, r5
    add r1.w, -r0.w, c25.x
    cmp r0.w, r0.w, r1.w, c25.x
    lrp r1.w, r0.w, c21.x, c21.y
    mad_pp r5.xyz, r1.w, r6, c14
    mov r5.w, c25.x
    mad r5, c8.z, r5, r11
    dp3 r6.x, r1, r10
    dp3 r6.y, r2.yxzw, r10
    dp3 r6.z, r0, r10
    mad r6.xyz, r6, c6.y, c6.y
    mov r6.w, c25.x
    mad r5, c8.w, r6, r5
    mov r2.x, r1.x
    mov r2.z, r0.x
    mad r0.xyz, r2, c6.y, c6.y
    mov r0.w, c25.x
    mad r0, c9.x, r0, r5
    add r0, r0, c9.y
    add r0, r0, c9.z
    abs r1.x, c3.x
    if_ne c3.x, -c3.x
      texld r2, c6.zwzw, s1
      add r1.y, -r2.y, v3.w
      mad r4.x, r2.x, r1.y, r4.y
      mov r4.w, v3.w
      mov r1.yzw, r4.xxzw
    else
      mov r1.yzw, c25.y
    endif
    mov r4.w, v3.w
    cmp r1.yzw, -r1.x, r4, r1
    rcp r1.w, r1.w
    mul r1.yz, r1.w, r1
    mad r2.xy, r1.yzzw, c1, c1.wzzw
    mov r2.zw, c25.y
    texldl r2, r2, s0
    add r1.y, r2.w, -c2.y
    add r1.z, -r1.y, c24.x
    rcp r1.y, r1.y
    cmp r1.y, r1.z, c24.y, r1.y
    mad r1.y, c2.x, r1.y, -v3.w
    lrp r1.z, r8.x, c22.x, c22.y
    rcp r1.z, r1.z
    mul_sat r1.y, r1.z, r1.y
    rcp r1.w, c22.z
    mul_sat r1.w, r1.w, v3.w
    mov r2.w, c22.w
    lrp r3.z, r1.w, r2.w, c23.x
    mul r1.y, r1.y, r3.z
    mul r1.y, r3.x, r1.y
    abs r2.x, r1.y
    if_ne c3.x, -c3.x
      texld r5, c6.zwzw, s1
      add r1.y, -r5.y, v3.w
      mad r4.x, r5.x, r1.y, r4.y
      mov r5.xyz, r4.xzww
    else
      mov r5.xyz, c25.y
    endif
    cmp r1.xyw, -r1.x, r4.yzzw, r5.xyzz
    rcp r1.w, r1.w
    mul r1.xy, r1.w, r1
    mad r4.xy, r1, c1, c1.wzzw
    mov r4.zw, c25.y
    texldl r4, r4, s0
    add r1.x, r4.w, -c2.y
    add r1.y, -r1.x, c24.x
    rcp r1.x, r1.x
    cmp r1.x, r1.y, c24.y, r1.x
    mad r1.x, c2.x, r1.x, -v3.w
    mul_sat r1.x, r1.z, r1.x
    mul r1.x, r3.z, r1.x
    mul r1.x, r3.y, r1.x
    abs r2.y, r1.x
    mov r2.zw, c25.xyyx
    mad r0, c9.w, r2, r0
    mad r0, c10.x, r7.yyyx, r0
    mad r0, c10.y, r7.yyyx, r0
    mad r0, c10.z, r7.yyyx, r0
    mad r0, c10.w, r7.yyyx, r0
    mad r0, c11.x, r7.yyyx, r0
    mad r0, c11.y, r7.yyyx, r0
    mad r0, c11.z, r7.yyyx, r0
    mad oC0, c11.w, r7.yyyx, r0

// approximately 171 instruction slots used (11 texture, 160 arithmetic)
