//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   CameraWorldPos          c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   DNEResolution           c7       1
//   UniformPixelVector_0    c8       1
//   UniformPixelVector_1    c9       1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//   PixelTexture2D_1        s3       1
//

    ps_3_0
    def c4, 0.0625, 0, 9.99999975e-006, 100000
    def c5, 3.99999999e-006, 0.849999964, 0.150000006, 1
    def c6, 0.00390625, 0, 0, 0
    dcl_color v0.xyz
    dcl_texcoord v1.y
    dcl_texcoord4 v2.w
    dcl_texcoord6 v3.xyz
    dcl_texcoord5 v4
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_DC473EC3_1050.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v0, v0
    rsq_pp r0.x, r0.x
    mul_pp r0.x, r0.x, v0.z
    add r0.yzw, c0.xxyz, v4.xxyz
    mad r1.xy, vPos, c7, c7.zwzw
    mul r1.xy, r1, v4.w
    dp3_pp r2.x, v3, v3
    rsq_pp r2.x, r2.x
    mul_pp r2.x, r2.x, v3.x
    mul r0.yzw, r0, c5.x
    texld r3, r0.zwzw, s2
    texld r4, r0.ywzw, s2
    mul r0.w, r0_abs.x, r4.y
    mad r0.w, r0_abs.x, r3.y, r0.w
    texld r3, r0.yzzw, s2
    mad r0.x, r0_abs.x, r3.y, r0.w
    mul r0.x, r0.x, r0.x
    mad r0.x, r0.x, c5.y, c5.z
    mul r0.xyz, r0.x, c9
    add r2.x, -r2_abs.x, c5.w
    mov r2.y, v1.y
    texld r2, r2, s3
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r3, c4, s1
      add r2.x, -r3.y, v4.w
      mad r1.z, r3.x, r2.x, r1.x
      mov r1.w, v4.w
      mov r2.xzw, r1.zyyw
    else
      mov r2.xzw, c4.y
    endif
    mov r1.z, v4.w
    cmp r1.xyz, -r0.w, r1, r2.xzww
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    mov r1.zw, c4.y
    texldl r1, r1, s0
    add r0.w, r1.w, -c2.y
    add r1.x, -r0.w, c4.z
    rcp r0.w, r0.w
    cmp r0.w, r1.x, c4.w, r0.w
    mad r0.w, c2.x, r0.w, -v4.w
    mul_sat r0.w, r0.w, c6.x
    mul r0.w, r0.w, r2.y
    mad_pp r0.xyz, r0.w, r0, c8
    mul_pp oC0.xyz, r0, v2.w
    mov oC0.w, c4.y

// approximately 52 instruction slots used (7 texture, 45 arithmetic)
