//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   CameraWorldPos               c8       1
//   DNEResolution                c9       1
//   UniformPixelVector_1         c10      1
//   UniformPixelVector_2         c11      1
//   UniformPixelScalars_1        c12      1
//   UniformPixelScalars_2        c13      1
//   LightColorAndFalloffExponent c14      1
//   ShadowWarpFunctionTexture    s0       1
//   SceneColorTexture            s1       1
//   NvStereoFixTexture           s2       1
//   PixelTexture2D_0             s3       1
//

    ps_3_0
    def c6, 0.100000001, 0, 1, 0.5
    def c15, 0.0399999991, 2954.63867, 2047.9989, 2
    def c16, 0.125, -5.55472994, -6.98316002, -9.99999997e-007
    def c17, 0.0625, 0, 9.99999975e-006, 100000
    def c18, 0.200000003, 0, 0, 0
    def c19, 1, 0, 1.41789806, -0.99000001
    dcl_texcoord4_pp v0.xyz
    dcl_texcoord6 v1.xyz
    dcl_texcoord7 v2.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_E8C099DB_6953976.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    add r0.xy, c8, v2
    mad r0.zw, vPos.xyxy, c9.xyxy, c9
    mul r1.xy, r0.zwzw, v2.w
    nrm_pp r2.xyz, v1
    mad_sat_pp r0.z, c7.x, v2.w, c7.y
    mul_pp r0.z, r0.z, c0.x
    rcp r0.w, c12.x
    mul_pp r3.xy, r0.w, r0
    mad_pp r0.xy, r0, r0.w, c10
    texld_pp r4, r0, s3
    dp2add_pp r0.x, r4, -r4, c19.x
    max_pp r1.w, r0.x, c19.y
    rsq_pp r0.x, r1.w
    rcp_pp r4.z, r0.x
    mov r3.z, c19.z
    mad_pp r0.xy, r3, r3.z, c11
    texld_pp r3, r0, s3
    dp2add_pp r0.x, r3, -r3, c19.x
    max_pp r1.w, r0.x, c19.y
    rsq_pp r0.x, r1.w
    rcp_pp r3.z, r0.x
    add_pp r0.xyw, r3.xyzz, r4.xyzz
    dp3_pp r1.w, r0.xyww, r0.xyww
    rsq_pp r1.w, r1.w
    mad_pp r0.xyw, r0, r1.w, c19.yyzw
    mad_pp r0.xyw, r0, c6.x, c6.yyzz
    nrm_pp r3.xyz, r0.xyww
    dp3_pp r0.x, v0, v0
    rsq_pp r0.x, r0.x
    mul_pp r4.xyz, r0.x, v0
    mad_pp r0.xyw, v0.xyzz, r0.x, r2.xyzz
    nrm_pp r5.xyz, r0.xyww
    texld_pp r6, c6.zwzw, s0
    mov r7, c5
    mad_pp r0.xyw, r7.w, c15.x, r7.xyzz
    dp3_sat_pp r1.w, r3, r4
    mul_pp r2.w, r1.w, c0.w
    mov_sat_pp r3.w, c0.y
    mul_pp r3.w, r3.w, r3.w
    dp3_sat_pp r4.w, r3, r5
    mul_pp r5.w, r3.w, c15.y
    mad_pp r3.w, r3.w, c15.z, c15.w
    mul_pp r3.w, r3.w, c16.x
    mad r4.w, r5.w, r4.w, -r5.w
    exp_pp r4.w, r4.w
    mul_pp r3.w, r3.w, r4.w
    mul_pp r1.w, r1.w, r3.w
    mul_pp r0.z, r0.z, r1.w
    dp3_sat_pp r1.w, r4, r5
    mad_pp r3.w, r1.w, c16.y, c16.z
    mul_pp r1.w, r1.w, r3.w
    exp_pp r1.w, r1.w
    lrp_pp r4.xyz, r1.w, c19.x, r0.xyww
    mul_pp r0.xyz, r0.z, r4
    mad_pp r0.xyz, c4, r2.w, r0
    mul_pp r0.xyz, r6.x, r0
    mul oC0.xyz, r0, c14
    mov_sat_pp r0.x, r3.z
    add r0.y, r0.x, c16.w
    mul r0.x, r0.x, r0.x
    mul_pp r0.x, r0.x, r0.x
    if_ne c3.x, -c3.x
      texld r4, c17, s2
      add r0.z, -r4.y, v2.w
      mad r1.z, r4.x, r0.z, r1.x
      mov r1.xy, r1.zyzw
      mov r0.z, v2.w
    else
      mov r0.z, v2.w
    endif
    rcp r0.z, r0.z
    mul r0.zw, r0.z, r1.xyxy
    mad r1.xy, r0.zwzw, c1, c1.wzzw
    mov r1.zw, c19.y
    texldl r1, r1, s1
    add r0.z, r1.w, -c2.y
    add r0.w, -r0.z, c17.z
    rcp r0.z, r0.z
    cmp r0.z, r0.w, c17.w, r0.z
    mad_pp r0.z, c2.x, r0.z, -v2.w
    mul_sat_pp r0.z, r0.z, c18.x
    mul_pp r0.x, r0.z, r0.x
    cmp_pp r0.x, r0.y, r0.x, c19.y
    add_pp r0.x, r0.z, r0.x
    add_pp r0.x, r0.x, -c6.w
    frc_pp r0.y, -r0.x
    add_sat_pp r0.x, r0.y, r0.x
    dp3_pp r0.y, r3, r2
    add r0.w, -r0.y, c19.x
    cmp_pp r0.y, r0.y, r0_abs.w, c19.x
    add r0.w, r0.y, c16.w
    mul r1.x, r0.y, r0.y
    mul_pp r0.y, r0.y, r1.x
    add r1.x, -c13.z, c13.y
    mul r0.y, r0.y, r1.x
    cmp r0.y, r0.w, r0.y, c19.y
    add_pp r0.y, r0.y, c13.z
    mul_pp r0.y, r0.z, r0.y
    mul_sat_pp oC0.w, r0.x, r0.y

// approximately 110 instruction slots used (6 texture, 104 arithmetic)
