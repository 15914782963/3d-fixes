//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_2;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   DNEResolution                c8       1
//   UniformPixelVector_0         c9       1
//   UniformPixelVector_2         c10      1
//   UniformPixelScalars_0        c11      1
//   UniformPixelScalars_1        c12      1
//   UniformPixelScalars_2        c13      1
//   LightColorAndFalloffExponent c14      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//   PixelTexture2D_4             s7       1
//

    ps_3_0
    def c2, 2, -1, 1, 0.5
    def c6, 0.0625, 0, 0.0500000007, 153.600006
    def c15, -0.5, -0.0599999987, -0.75, -0.699999988
    def c16, 1.44927537, 1.43884897, -0.0869565234, -0.115107916
    def c17, -0.699999988, 0.699999988, -1, 0
    def c18, 0.699999988, 1, 0, -0.699999988
    def c19, 6, 5, -0.0799999982, -0.774999976
    def c20, 0.0599999987, 0.75, 0.0799999982, 0.774999976
    def c21, 0.166666672, 0.200000003, 0.0333333351, 0.111111
    def c22, 2954.63867, 2047.9989, 2, 0.125
    def c23, -5.55472994, -6.98316002, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5 v2.xyz
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_5D28E0FC_787.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v3, v3
    rsq_pp r0.x, r0.x
    mad_sat_pp r0.y, c7.x, v4.w, c7.y
    mul_pp r0.y, r0.y, c0.x
    texld_pp r1, v0, s3
    mad_pp r1.xyz, r1, c2.x, c2.y
    nrm_pp r2.xyz, r1
    nrm_pp r1.xyz, v1
    mad_pp r0.xzw, v3.xyyz, r0.x, r1.xyyz
    nrm_pp r3.xyz, r0.xzww
    texld_pp r4, c2.zwzw, s0
    dp3 r0.x, v2, v2
    add r0.z, -r0.x, c2.z
    mul r5, r4.x, r0.z
    mov r6, r5
    texkill r6
    if b0
      mad r0.zw, vPos.xyxy, c8.xyxy, c8
      mul r5.xy, r0.zwzw, v4.w
      if_ne c3.x, -c3.x
        texld r6, c6, s1
        add r0.z, -r6.y, v4.w
        mad r5.z, r6.x, r0.z, r5.x
        mov r5.xy, r5.zyzw
        mov r0.z, v4.w
      else
        mov r0.z, v4.w
      endif
      rcp r0.z, r0.z
      mul r0.zw, r0.z, r5.xyxy
      mad r0.zw, r0, c1.xyxy, c1.xywz
      texld r6, r0.zwzw, s2
      mul_pp r4.yzw, r6.xxyz, r6.xxyz
      mul_pp r4.yzw, r4, r4.x
    else
      mov_pp r4.yzw, r4.x
    endif
    mov r0.z, c6.z
    mad_pp r5.xyz, c5.w, r0.z, c5
    mov_sat r0.x, r0.x
    add r0.x, -r0.x, c2.z
    pow_sat_pp r6.x, r0.x, c14.w
    mov r6.y, c2.w
    texld_pp r6, r6, s0
    texld_pp r7, v0, s4
    add r8, c15.xxyz, v0.xyxx
    texld_pp r9, c10, s5
    mov r6.yz, c2
    add r0.x, r6.y, c12.y
    mul r0.x, r0.x, r9.y
    mad_pp r0.x, c12.z, r0.x, r6.z
    mad_pp r0.xz, r0.x, r8.xyyw, c2.w
    mad_pp r10.xy, r0.xzzw, c16, c16.zwzw
    mul_pp r0.x, c12.w, c12.z
    mul_pp r0.x, r9.x, r0.x
    frc_pp r0.z, r0.x
    add_pp r9.w, -r0.z, r0.x
    exp_pp r0.x, r9.w
    rcp r0.x, r0.x
    mul_pp r0.x, r0.x, c6.w
    rcp r0.x, r0.x
    mul_pp r0.x, r0.x, r0.z
    mad_pp r11, r0.x, c18.xxyz, r10.xyxy
    mul r9.xyz, r11.xyxw, c18.yyzw
    texldl_pp r12, r9, s6
    mul r9.xyz, r11.zwxw, c18.yyzw
    texldl_pp r11, r9, s6
    add_pp r11.xyz, r11, r12
    mad_pp r12.xyz, r0.x, -c18.wyxw, r10.xyyw
    mov_pp r9.xy, r12.xzzw
    texldl_pp r13, r9, s6
    add_pp r11.xyz, r11, r13
    mad_pp r9.xy, r0.x, c18.zyzw, r10
    texldl_pp r13, r9, s6
    mov r10.zw, r9
    texldl_pp r9, r10, s6
    add_pp r9.xyz, r9, r13
    mov r12.xzw, r10
    texldl_pp r13, r12, s6
    add_pp r9.xyz, r9, r13
    add_pp r9.xyz, r9, r11
    mad_pp r11, r0.x, c17, r10.xyxy
    mov_pp r12.xy, r11
    texldl_pp r13, r12, s6
    mov_pp r12.xy, r11.zwzw
    texldl_pp r11, r12, s6
    add_pp r11.xyz, r11, r13
    mad_pp r12.xy, r0.x, c15.w, r10
    texldl_pp r12, r12, s6
    add_pp r0.xzw, r11.xyyz, r12.xyyz
    add_pp r0.xzw, r0, r9.xyyz
    mul_pp r6.yw, r10.xxzy, c21.xxzy
    mov r8.xy, c13
    mul_pp r1.w, r8.x, c11.x
    mul r9.xy, r1.w, c21.xzzw
    frc r9.xy, r9_abs
    cmp r9.xy, r1.w, r9, -r9
    mul_pp r9.xy, r9, c19
    frc_pp r9.zw, r9.xyxy
    add_pp r9.xy, -r9.zwzw, r9
    mad_pp r9.xy, r9, c21, r6.ywzw
    texld_pp r9, r9, s7
    rcp_pp r2.w, c13.x
    add_pp r3.w, r2.w, c11.x
    mul_pp r3.w, r3.w, c13.x
    mul r10.xy, r3.w, c21.xzzw
    frc r10.xy, r10_abs
    cmp r10.xy, r3.w, r10, -r10
    mul_pp r10.xy, r10, c19
    frc_pp r10.zw, r10.xyxy
    add_pp r10.xy, -r10.zwzw, r10
    mad_pp r6.yw, r10.xxzy, c21.xxzy, r6
    texld_pp r10, r6.ywzw, s7
    frc r3.w, r1_abs.w
    cmp r1.w, r1.w, r3.w, -r3.w
    mul_pp r1.w, r2.w, r1.w
    mul_pp r1.w, r1.w, c13.x
    lrp_pp r11.xyz, r1.w, r10, r9
    mul_pp r1.w, r8.y, c12.z
    mul_pp r9.xyz, r11, r1.w
    mad_pp r0.xzw, r0, c21.w, r9.xyyz
    add r9, c20, -v0.xxyy
    cmp_pp r6.yw, r9, c18.y, c18.z
    cmp_pp r1.w, r8.w, r6.y, c2.z
    add r8.xy, c19.zwzw, v0.y
    cmp_pp r2.w, r8.y, r6.w, c2.z
    mul_pp r1.w, r1.w, r2.w
    cmp_pp r1.w, r9.z, -c6.y, -r1.w
    cmp_pp r1.w, r8.x, r1.w, -c6.y
    cmp_pp r1.w, r9.x, -c6.y, r1.w
    cmp_pp r1.w, r8.z, r1.w, -c6.y
    cmp_pp r0.xzw, r1.w, r7.xyyz, r0
    add_pp r6.yzw, r6.z, -c9.xxyz
    mul_pp r0.xzw, r0, r6.yyzw
    mad_pp r0.xzw, r0, c4.w, c4.xyyz
    dp3_sat_pp r1.w, r2, r1
    mul_pp r2.w, r1.w, c0.w
    mul_sat_pp r3.w, r6.x, c0.y
    mul_pp r3.w, r3.w, r3.w
    dp3_sat_pp r2.x, r2, r3
    mul_pp r2.y, r3.w, c22.x
    mad_pp r2.z, r3.w, c22.y, c22.z
    mul_pp r2.z, r2.z, c22.w
    mad r2.x, r2.y, r2.x, -r2.y
    exp_pp r2.x, r2.x
    mul_pp r2.x, r2.x, r2.z
    mul_pp r1.w, r1.w, r2.x
    mul_pp r0.y, r0.y, r1.w
    dp3_sat_pp r1.x, r1, r3
    mad_pp r1.y, r1.x, c23.x, c23.y
    mul_pp r1.x, r1.x, r1.y
    exp_pp r1.x, r1.x
    lrp_pp r2.xyz, r1.x, c2.z, r5
    mul_pp r1.xyz, r0.y, r2
    mad_pp r0.xyz, r0.xzww, r2.w, r1
    mul_pp r0.xyz, r4.yzww, r0
    mul r0.xyz, r6.x, r0
    mul r0.xyz, r0, c14
    cmp oC0.xyz, -r5.w, c6.y, r0
    mov oC0.w, c6.y

// approximately 181 instruction slots used (27 texture, 154 arithmetic)
