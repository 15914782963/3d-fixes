//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEResolution           c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   UniformPixelVector_0    c7       1
//   UniformPixelVector_1    c8       1
//   UniformPixelVector_2    c9       1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//   PixelTexture2D_1        s3       1
//

    ps_3_0
    def c4, 1, 0.5, 0.0500000007, 5
    def c5, 4, -0.800000012, -9.99999997e-007, 25
    def c6, 1, 0, 15, 5
    def c10, 0.170000002, 0.5, 2, -1
    def c11, 0.200000003, 4, -0.100000001, 9.99999975e-006
    def c12, 0.0625, 0, 100000, -20000
    dcl_texcoord4 v0.w
    dcl_texcoord5 v1.w
    dcl_texcoord v2.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_9FCF44A2_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v1.w
    rcp r1.x, v1.w
    mul r1.xy, r0, r1.x
    mad r1.xy, r1, c1, c1.wzzw
    texld r1, r1, s0
    mad r2.xyz, r1, c4.xyxw, c4.z
    mul r1.xyz, r1, r1
    add r3.xy, c4.x, -v2
    mul r2.w, r3.x, v2.x
    mad r2.w, r2.w, c5.x, c5.y
    mul_sat r2.w, r2.w, c4.w
    add r3.x, r2.w, c5.z
    mul r2.w, r2.w, r2.w
    mul r2.w, r2.w, r2.w
    mov r1.w, c5.w
    mul r4.xyz, r1.wyww, r2.w
    mad r1.xyz, r1.xxzw, c6.xyxw, c6.yzyw
    mul r1.xyz, r4, r1
    cmp r1.xyz, r3.x, r1, c6.y
    add_sat r1.xyz, r1, r2
    add_pp r1.xyz, r1, c7
    mul r2.xyz, c6.wyxw, v2.yxyw
    mov r4.xy, c10
    mad r2.yz, c8.w, r4.xxyw, r2
    texld r4, r2.yzzw, s2
    mad r1.w, r4.x, c10.z, c10.w
    mad r1.w, r1.w, c11.x, v2.x
    add r2.y, -r1.w, c4.x
    mul r1.w, r1.w, r2.y
    mad_sat r1.w, r1.w, c11.y, c11.z
    mul r1.w, r1.w, r1.w
    mov_sat r2.x, r2.x
    mul r2.x, r3.y, r2.x
    abs r2.y, c3.x
    if_ne c3.x, -c3.x
      texld r3, c12, s1
      add r2.z, -r3.y, v1.w
      mad r0.z, r3.x, r2.z, r0.x
      mov r0.w, v1.w
      mov r3.xyz, r0.zyww
    else
      mov r3.xyz, c6.y
    endif
    mov r0.z, v1.w
    cmp r0.xyz, -r2.y, r0, r3
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c6.y
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c11.w
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c12.z, r0.x
    mov r0.w, c12.w
    mad r0, c2.x, r0.x, r0.w
    texkill r0
    mul r0.x, c9.w, c9.w
    mul r0.x, r2.x, r0.x
    mul r0.x, r0.x, r1.w
    texld_pp r0, r0.x, s3
    mul r0.xzw, r1.xyyz, v0.w
    mul_pp oC0.xyz, r0.y, r0.xzww
    mov oC0.w, c6.y

// approximately 68 instruction slots used (6 texture, 62 arithmetic)
