//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   DNEResolution            c0       1
//   ScreenPositionScaleBias  c1       1
//   MinZ_MaxZRatio           c2       1
//   NvStereoEnabled          c3       1
//   DiffuseOverrideParameter c4       1
//   UniformPixelVector_0     c7       1
//   UniformPixelVector_1     c8       1
//   UpperSkyColor            c9       1
//   AmbientColorAndSkyFactor c10      1
//   NvStereoFixTexture       s0       1
//   VAOBuffer                s1       1
//

    ps_3_0
    def c5, 0.300000012, 0.589999974, 0.109999999, 1
    def c6, 0.0625, 0, 0, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord5 v2.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_8CB3FEF3_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul_pp r0.y, r0.y, r1.x
    mad_pp r0.x, r0.x, r1.y, -r0.y
    mul_pp r0.x, r0.x, v1.w
    mad r0.yw, vPos.xxzy, c0.xxzy, c0.xzzw
    mul r2.xy, r0.ywzw, v2.w
    abs r1.x, r1.z
    abs r1.yz, r0.xxzw
    dp3 r0.x, r1, c5
    mul r0.xyz, r0.x, c8
    mov r0.w, c5.w
    add r1.xyz, r0.w, -c7
    mul_pp r0.xyz, r0, r1
    mad_pp r0.xyz, r0, c4.w, c4
    mul r1.xyz, r0, c9
    mov_pp r0.w, c10.w
    mad_pp r1.xyz, r1, r0.w, c7
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r3, c6, s0
      add r1.w, -r3.y, v2.w
      mad r2.z, r3.x, r1.w, r2.x
      mov r2.w, v2.w
      mov r3.xyz, r2.zyww
    else
      mov r3.xyz, c6.y
    endif
    mov r2.z, v2.w
    cmp r2.xyz, -r0.w, r2, r3
    rcp r0.w, r2.z
    mul r2.xy, r0.w, r2
    mad r2.xy, r2, c1, c1.wzzw
    texld_pp r2, r2, s1
    mul r0.xyz, r0, c10
    mad_pp oC0.xyz, r1, r2.x, r0
    rcp r0.x, v2.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 44 instruction slots used (2 texture, 42 arithmetic)
