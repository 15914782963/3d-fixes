//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float2 DecalNearFarPlaneDistance;
//   float4 DiffuseOverrideParameter;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEResolution             c0       1
//   ScreenPositionScaleBias   c1       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   DecalNearFarPlaneDistance c7       1
//   UniformPixelVector_0      c8       1
//   UniformPixelVector_1      c9       1
//   UniformPixelVector_2      c10      1
//   UniformPixelScalars_1     c11      1
//   UpperSkyColor             c12      1
//   AmbientColorAndSkyFactor  c13      1
//   NvStereoFixTexture        s0       1
//   PixelTexture2D_0          s1       1
//   PixelTexture2D_1          s2       1
//   VAOBuffer                 s3       1
//

    ps_3_0
    def c2, 1, 0.00100000005, -0.5, 0
    def c5, 0.0625, 0, 5, 0
    dcl_texcoord v0
    dcl_texcoord4 v1
    dcl_texcoord5 v2.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_B8292F28_676.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v2.w
    add r1.xy, c2.x, -v0
    mul r1.xy, r1, v0
    add r2.x, -c7.x, v0.w
    add r1.z, r2.x, c2.y
    add r2.x, c7.y, -v0.w
    add r1.w, r2.x, c2.y
    texkill r1
    add r1.xy, c2.z, v0
    mov r2.xw, c2
    dp2add r3.x, c9, r1, r2.w
    dp2add r3.y, c10, r1, r2.w
    add r1.zw, r3.xyxy, -c2.z
    texld r3, r1.zwzw, s1
    add r2.xyz, r2.x, -c8
    mul_pp r2.xyz, r2, r3
    mad_pp r2.xyz, r2, c4.w, c4
    mul r3.xyz, r2, c12
    mov_pp r1.w, c13.w
    mad_pp r3.xyz, r3, r1.w, c8
    abs r1.z, c3.x
    if_ne c3.x, -c3.x
      texld r4, c5, s0
      add r1.w, -r4.y, v2.w
      mad r0.z, r4.x, r1.w, r0.x
      mov r0.w, v2.w
      mov r4.xyz, r0.zyww
    else
      mov r4.xyz, c2.w
    endif
    mov r0.z, v2.w
    cmp r0.xyz, -r1.z, r0, r4
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s3
    mul r0.yzw, r2.xxyz, c13.xxyz
    mad_pp r0.xyz, r3, r0.x, r0.yzww
    texld r2, v0, s2
    dp2add r0.w, r1, r1, c2.w
    mul r0.w, r0.w, c11.y
    mul_sat r0.w, r0.w, r0.w
    add r0.w, -r0.w, c2.x
    mul_pp r0.w, r2.x, r0.w
    add r1.x, c7.y, -v0_abs.w
    mul r1.x, r1.x, c5.z
    rcp r1.y, c7.y
    mul_sat r1.x, r1.y, r1.x
    mul r1.x, r1.x, v0.z
    mul_pp oC0.w, r0.w, r1.x
    mad_pp oC0.xyz, r0, v1.w, v1

// approximately 57 instruction slots used (4 texture, 53 arithmetic)
