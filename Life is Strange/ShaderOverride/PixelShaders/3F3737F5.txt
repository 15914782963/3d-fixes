//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ScreenDoorFadeSettings;
//   float4 ScreenDoorFadeSettings2;
//   sampler2D ScreenDoorNoiseTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   bool bEnableScreenDoorFade;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bEnableScreenDoorFade        b0       1
//   bReceiveDynamicShadows       b1       1
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNESpecularAttenuation       c7       1
//   DNEResolution                c8       1
//   ScreenDoorFadeSettings       c9       1
//   ScreenDoorFadeSettings2      c10      1
//   UniformPixelVector_0         c11      1
//   UniformPixelVector_1         c12      1
//   UniformPixelScalars_0        c13      1
//   LightColorAndFalloffExponent c14      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   ScreenDoorNoiseTexture       s3       1
//

    ps_3_0
    def c2, -1, 1, 0, 2
    def c6, 1, 0.5, 0.0625, 0
    def c15, -9.99999997e-007, 15, 0, 0
    dcl_texcoord4_pp v0.xyz
    dcl_texcoord5 v1.xyz
    dcl_texcoord6 v2.xyz
    dcl_texcoord7 v3.w
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_3F3737F5_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v2
    nrm_pp r1.xyz, v0
    cmp r0.w, vFace, c2.x, c2.y
    mul_pp r0.w, r0.w, c0.x
    mul_pp r2.xy, r0.z, r0.w
    mul_pp r2.z, r0.w, r2.y
    mad_pp r0.xyz, r2, c2.zzww, -r0
    texld_pp r2, c6, s0
    dp3 r1.w, v1, v1
    add r2.y, -r1.w, c2.y
    mul r3, r2.x, r2.y
    mov r4, r3
    texkill r4
    if b0
      mad r2.yz, vPos.xxyw, c10.xzww, c10.xxyw
      texld_pp r4, r2.yzzw, s3
      mad r2.y, c9.y, r4.x, c9.z
      mov r3.y, c2.y
      add r2.z, r3.y, -c9.x
      add r2.y, -r2.z, r2.y
      cmp r4, -r3.w, c2.z, r2.y
      texkill r4
    endif
    if b1
      mad r2.yz, vPos.xxyw, c8.xxyw, c8.xzww
      mul r3.xy, r2.yzzw, v3.w
      if_ne c3.x, -c3.x
        texld r4, c6.zwzw, s1
        add r2.y, -r4.y, v3.w
        mad r3.z, r4.x, r2.y, r3.x
        mov r3.xy, r3.zyzw
        mov r2.y, v3.w
      else
        mov r2.y, v3.w
      endif
      rcp r2.y, r2.y
      mul r2.yz, r2.y, r3.xxyw
      mad r2.yz, r2, c1.xxyw, c1.xwzw
      texld r4, r2.yzzw, s2
      mul_pp r2.yzw, r4.xxyz, r4.xxyz
      mul_pp r2.yzw, r2, r2.x
    else
      mov_pp r2.yzw, r2.x
    endif
    mov_sat r1.w, r1.w
    add r1.w, -r1.w, c2.y
    pow_sat_pp r3.x, r1.w, c14.w
    mov r3.y, c6.y
    texld_pp r4, r3, s0
    mov r3.y, c2.y
    add r3.xyz, r3.y, -c11
    mul_pp r3.xyz, r3, c12
    mad_pp r3.xyz, r3, c4.w, c4
    mul_sat_pp r0.w, r1.z, r0.w
    add r1.w, r0.w, c15.x
    mul_pp r0.w, r0.w, c7.w
    cmp_pp r0.w, r1.w, r0.w, c2.z
    dp3_sat_pp r0.x, r0, r1
    add r0.y, r0.x, c15.x
    pow_pp r1.x, r0.x, c15.y
    mul r0.x, r1.x, c7.x
    lrp_pp r1.x, c13.x, c13.x, r0.w
    mul_pp r0.xzw, r0.x, c5.xyyz
    cmp_pp r0.xyz, r0.y, r0.xzww, c2.z
    mad_pp r0.xyz, r3, r1.x, r0
    mul_pp r0.xyz, r2.yzww, r0
    mul r0.xyz, r4.x, r0
    mul r0.xyz, r0, c14
    cmp oC0.xyz, -r3.w, c2.z, r0
    mov oC0.w, c2.z

// approximately 84 instruction slots used (5 texture, 79 arithmetic)
