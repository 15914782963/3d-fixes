//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float2 DistanceFadeParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   bool bEnableDistanceShadowFading;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   bEnableDistanceShadowFading  b1       1
//   DNEResolution                c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   UniformPixelVector_0         c7       1
//   UniformPixelVector_1         c8       1
//   LightColorAndFalloffExponent c9       1
//   DistanceFadeParameters       c10      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//

    ps_3_0
    def c2, 1, 0.5, -0.333299994, -0.0199999996
    def c5, 0.0625, 0, 0, 0
    dcl_color1 v0.xyz
    dcl_texcoord v1.xy
    dcl_texcoord7 v2
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_1356A11C_125.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v0, v0
    rsq_pp r0.x, r0.x
    texld_pp r1, c2, s0
    texld r2, v1, s3
    add r3, r2.w, c2.z
    texkill r3
    if b0
      mad r0.yz, vPos.xxyw, c0.xxyw, c0.xzww
      mul r3.xy, r0.yzzw, v2.w
      if_ne c3.x, -c3.x
        texld r4, c5, s1
        add r0.y, -r4.y, v2.w
        mad r3.z, r4.x, r0.y, r3.x
        mov r3.xy, r3.zyzw
        mov r0.y, v2.w
      else
        mov r0.y, v2.w
      endif
      rcp r0.y, r0.y
      mul r0.yz, r0.y, r3.xxyw
      mad r0.yz, r0, c1.xxyw, c1.xwzw
      texld r3, r0.yzzw, s2
      mul_pp r0.yzw, r3.xxyz, r3.xxyz
      if b1
        dp3 r1.y, v2, v2
        rsq r1.y, r1.y
        rcp r1.y, r1.y
        add r1.y, -r1.y, c10.x
        mul_sat_pp r1.y, r1.y, c10.y
        mul_pp r1.y, r1.y, r1.y
        mad_pp r1.z, r3.w, r3.w, -r1.x
        mad_pp r1.yzw, r1.y, r1.z, r1.x
      else
        mov_pp r1.yzw, r1.x
      endif
      mul_pp r0.yzw, r0, r1
    else
      mov_pp r0.yzw, r1.x
    endif
    mad r0.x, v0.z, r0.x, c2.x
    mul r0.x, r0.x, c2.y
    mul r1.xyz, r2, r0.x
    mad r2.xyz, r0.x, r2, c2.w
    mov_sat r1.xyz, r1
    cmp r1.xyz, r2, r1, -c2.w
    mul r1.xyz, r1, c8
    mov r0.x, c2.x
    add r2.xyz, r0.x, -c7
    mul_pp r1.xyz, r1, r2
    mad_pp r1.xyz, r1, c4.w, c4
    mul r0.xyz, r0.yzww, r1
    mul oC0.xyz, r0, c9
    mov oC0.w, c5.y

// approximately 59 instruction slots used (4 texture, 55 arithmetic)
