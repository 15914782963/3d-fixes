//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//   float4 UniformPixelVector_7;
//   float4 UniformPixelVector_8;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   CameraWorldPos            c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DNEResolution             c7       1
//   UniformPixelVector_0      c8       1
//   UniformPixelVector_1      c9       1
//   UniformPixelVector_2      c10      1
//   UniformPixelVector_3      c11      1
//   UniformPixelVector_4      c12      1
//   UniformPixelVector_5      c13      1
//   UniformPixelVector_6      c14      1
//   UniformPixelVector_7      c15      1
//   UniformPixelVector_8      c16      1
//   UniformPixelScalars_0     c17      1
//   UpperSkyColor             c18      1
//   AmbientColorAndSkyFactor  c19      1
//   NvStereoFixTexture        s0       1
//   PixelTexture2D_0          s1       1
//   PixelTexture2D_1          s2       1
//   PixelTexture2D_2          s3       1
//   PixelTexture2D_3          s4       1
//   PixelTexture2D_4          s5       1
//   PixelTexture2D_5          s6       1
//   VAOBuffer                 s7       1
//

    ps_3_0
    def c6, -0.5, 0.315322369, 0.948984623, 0
    def c20, -0.948984623, 0.315322369, 0, 5.8707843e-005
    def c21, 150, 300, -0.5, 3.12500015e-005
    def c22, 0.581683099, -0.813415468, 0, 0.813415468
    def c23, 0.300000012, 0.200000003, 10, 1.52876604
    def c24, 0.87758255, -0.47942555, 0, 0.47942555
    def c25, 0.129870132, 0.5, 6.28318548, -3.14159274
    def c26, 0.100000001, 0.449999988, 4, 1.78650999
    def c27, 0.849999964, 0.400000006, 7.15698195, 2.5
    def c28, 1.39999998, 1.29999995, 0.100000001, 0.200000003
    def c29, -9.99999997e-007, 0.0399999991, 0.0625, 0
    def c30, 1, 2.73285004e-005, 0.800000012, 2
    def c31, -0.707106769, -0.408248305, 0.577350259, 0.707106769
    def c32, 0.816496611, 0.577350259, 0, 0
    dcl_texcoord2_pp v0.xyz
    dcl_texcoord3_pp v1.xyz
    dcl_texcoord6 v2.xyz
    dcl_texcoord5 v3.xyw
    dcl_texcoord v4.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_22B12726_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    add r0.xy, c0, v3
    mad r0.zw, vPos.xyxy, c7.xyxy, c7
    mul r1.xy, r0.zwzw, v3.w
    nrm_pp r2.xyz, v2
    add_pp r0.xy, r0, c6.x
    dp2add_pp r3.x, c6.yzzw, r0, c6.w
    dp2add_pp r3.y, c20, r0, c20.z
    add_pp r3, r3.xyxy, -c6.x
    mov r0.w, c20.w
    mad_pp r0.zw, r3.xyxy, r0.w, c9.xyxy
    texld_pp r4, r0.zwzw, s1
    dp2add_pp r2.w, r4, -r4, c30.x
    max_pp r3.x, r2.w, c6.w
    rsq_pp r2.w, r3.x
    rcp_pp r4.z, r2.w
    mov r3.xy, c30
    mad_pp r3.yz, r3.xzww, r3.y, c10.xxyw
    texld_pp r5, r3.yzzw, s1
    dp2add_pp r2.w, r5, -r5, c30.x
    max_pp r3.w, r2.w, c6.w
    rsq_pp r2.w, r3.w
    rcp_pp r5.z, r2.w
    mad_pp r4.xyz, r5, -c30.z, r4
    nrm_pp r5.xyz, r4
    dp3_pp r2.w, r5, r2
    mul_pp r4.xyz, r2.w, r5
    mad_pp r4.xyz, r4, c30.w, -r2
    mad_pp r2.zw, v4.xyxy, c21.xyxy, c21.z
    dp2add_pp r6.x, c22, r2.zwzw, c22.z
    dp2add_pp r6.y, c22.wxzw, r2.zwzw, c22.z
    add_pp r2.zw, r6.xyxy, c16.xyxy
    add_pp r2.zw, r2, -c6.x
    texld_pp r6, r2.zwzw, s6
    mad_pp r2.z, r6.x, c23.x, c23.y
    mad_pp r2.z, r2.z, c23.z, c23.w
    exp_pp r2.z, r2.z
    dp2add_pp r6.x, c24, r0, c24.z
    dp2add_pp r6.y, c24.wxzw, r0, c24.z
    add_pp r0.xy, r6, -c6.x
    mul_pp r0.xy, r0, c21.w
    texld_pp r6, r0.zwzw, s2
    texld_pp r7, r3.yzzw, s2
    add_pp r0.z, r6.x, -r7.x
    mul_pp r0.z, r0.z, c26.x
    mad_pp r0.xy, r0.z, r2, r0
    mov r3.yzw, c26
    mad_pp r0.zw, r0.xyxy, r3.y, c11.xyxy
    texld_pp r6, r0.zwzw, s3
    mad_pp r0.zw, r0.xyxy, r3.y, c12.xyxy
    texld_pp r7, r0.zwzw, s3
    texld_pp r8, r0, s3
    mad_pp r0.z, r8.w, r3.z, c17.x
    mad_pp r0.z, r0.z, c25.x, c25.y
    frc_pp r0.z, r0.z
    mad_pp r0.z, r0.z, c25.z, c25.w
    sincos_pp r8.y, r0.z
    add_pp r0.z, r8.y, c30.x
    mul_pp r0.z, r0.z, -c6.x
    lrp_pp r2.x, r0.z, r7.w, r6.w
    mad_pp r0.w, r2.x, c27.x, c27.y
    add_pp r2.xy, r0, c13
    texld_pp r8, r2, s4
    mad_pp r2.xy, r0, r3.w, c14
    texld_pp r9, r2, s4
    add_pp r2.x, r8.y, r9.y
    mov r3.z, c27.z
    mad_pp r0.xy, r0, r3.z, c15
    texld_pp r8, r0, s4
    add_pp r0.x, r2.x, r8.y
    mul_pp r0.x, r0.x, r0.w
    mul_sat_pp r0.x, r0.x, c27.w
    add r0.y, r0.x, c29.x
    mul_pp r0.x, r0.x, r0.x
    cmp_pp r0.x, r0.y, r0.x, c6.w
    texld_pp r8, r0.x, s5
    lrp_pp r2.x, r0.z, r6.w, r7.w
    add_pp r0.x, -r2.x, c30.x
    mad_pp r0.xyz, r0.x, c28.xyxw, c28.zwzw
    mul_pp r0.xyz, r0, r8
    add_pp r2.xyw, r3.x, -c8.xyzz
    mul_pp r0.xyz, r0, r2.xyww
    mad_pp r0.xyz, r0, c4.w, c4
    mov r3, c5
    mad_pp r2.xyw, r3.w, c29.y, r3.xyzz
    dp2add_sat_pp r3.x, r5.yzzw, c32, c32.z
    dp3_sat_pp r3.y, r5, c31
    dp3_sat_pp r3.z, r5.yzxw, c31.yzww
    dp2add_sat_pp r5.x, r4.yzzw, c32, c32.z
    dp3_sat_pp r5.y, r4, c31
    dp3_sat_pp r5.z, r4.yzxw, c31.yzww
    mul_pp r3.xyz, r3, r3
    mad_pp r4.xyz, r2.z, r5, -r2.z
    exp_pp r5.x, r4.x
    exp_pp r5.y, r4.y
    exp_pp r5.z, r4.z
    dp3_pp r0.w, v1, r3
    mul_pp r3.xyz, r0.w, v0
    mul r2.xyz, r2.xyww, v0
    dp3_pp r0.w, v1, r5
    mul r2.xyz, r0.w, r2
    mad_pp r2.xyz, r0, r3, r2
    add_pp r2.xyz, r2, c8
    mul r3.xyz, r0, c18
    mad_pp r2.xyz, r3, c19.w, r2
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r3, c29.zwzw, s0
      add r2.w, -r3.y, v3.w
      mad r1.z, r3.x, r2.w, r1.x
      mov r1.w, v3.w
      mov r3.xyz, r1.zyww
    else
      mov_pp r3.xyz, c6.w
    endif
    mov r1.z, v3.w
    cmp r1.xyz, -r0.w, r1, r3
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s7
    mul r0.xyz, r0, c19
    mad_pp oC0.xyz, r2, r1.x, r0
    rcp r0.x, v3.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 147 instruction slots used (14 texture, 133 arithmetic)
