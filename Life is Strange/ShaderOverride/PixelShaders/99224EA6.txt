//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//   float4 UniformPixelVector_7;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   CameraWorldPos           c0       1
//   ScreenPositionScaleBias  c1       1
//   MinZ_MaxZRatio           c2       1
//   NvStereoEnabled          c3       1
//   DiffuseOverrideParameter c4       1
//   DNEResolution            c7       1
//   UniformPixelVector_0     c8       1
//   UniformPixelVector_1     c9       1
//   UniformPixelVector_2     c10      1
//   UniformPixelVector_3     c11      1
//   UniformPixelVector_4     c12      1
//   UniformPixelVector_5     c13      1
//   UniformPixelVector_6     c14      1
//   UniformPixelVector_7     c15      1
//   UniformPixelScalars_0    c16      1
//   UpperSkyColor            c17      1
//   AmbientColorAndSkyFactor c18      1
//   NvStereoFixTexture       s0       1
//   PixelTexture2D_1         s1       1
//   PixelTexture2D_2         s2       1
//   PixelTexture2D_3         s3       1
//   PixelTexture2D_4         s4       1
//   VAOBuffer                s5       1
//

    ps_3_0
    def c5, -0.5, 0.87758255, -0.47942555, 0
    def c6, 3.12500015e-005, 0.315322369, 0.948984623, 0
    def c19, -0.948984623, 0.315322369, 0, 5.8707843e-005
    def c20, 2.73285004e-005, 0.100000001, 0.449999988, 4
    def c21, 0.129870132, 0.5, 6.28318548, -3.14159274
    def c22, 1, 0.849999964, 0.400000006, 1.78650999
    def c23, 7.15698195, 2.5, -9.99999997e-007, 0
    def c24, 1.39999998, 1.29999995, 0.100000001, 0.200000003
    def c25, 0.0625, 0, 0, 0
    dcl_texcoord6 v0.xyz
    dcl_texcoord5 v1.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_99224EA6_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    add r0.xy, c0, v1
    mad r0.zw, vPos.xyxy, c7.xyxy, c7
    mul r1.xy, r0.zwzw, v1.w
    dp3_pp r0.z, v0, v0
    rsq_pp r0.z, r0.z
    mul_pp r0.zw, r0.z, v0.xyxy
    add_pp r0.xy, r0, c5.x
    dp2add_pp r2.x, c5.yzzw, r0, c5.w
    dp2add_pp r2.y, c5_abs.zyzw, r0, c5_abs.w
    add_pp r2.xy, r2, -c5.x
    mul_pp r2.xy, r2, c6.x
    dp2add_pp r3.x, c6.yzzw, r0, c6.w
    dp2add_pp r3.y, c19, r0, c19.z
    add_pp r3, r3.xyxy, -c5.x
    mov r2.w, c19.w
    mad_pp r0.xy, r3, r2.w, c9
    texld_pp r4, r0, s1
    mov r5.xzw, c20
    mad_pp r0.xy, r3.zwzw, r5.x, c10
    texld_pp r3, r0, s1
    add_pp r0.x, -r3.x, r4.x
    mul_pp r0.x, r0.x, c20.y
    mad_pp r0.xy, r0.x, r0.zwzw, r2
    mad_pp r0.zw, r0.xyxy, r5.z, c11.xyxy
    texld_pp r2, r0.zwzw, s2
    mad_pp r0.zw, r0.xyxy, r5.z, c12.xyxy
    texld_pp r3, r0.zwzw, s2
    texld_pp r4, r0, s2
    mad_pp r0.z, r4.w, r5.w, c16.x
    mad_pp r0.z, r0.z, c21.x, c21.y
    frc_pp r0.z, r0.z
    mad_pp r0.z, r0.z, c21.z, c21.w
    sincos_pp r4.y, r0.z
    add_pp r0.z, r4.y, c22.x
    mul_pp r0.z, r0.z, -c5.x
    lrp_pp r4.x, r0.z, r3.w, r2.w
    mad_pp r0.w, r4.x, c22.y, c22.z
    add_pp r2.xy, r0, c13
    texld_pp r4, r2, s3
    mov r4.xw, c22
    mad_pp r2.xy, r0, r4.w, c14
    texld_pp r5, r2, s3
    add_pp r2.x, r4.y, r5.y
    mov r3.x, c23.x
    mad_pp r0.xy, r0, r3.x, c15
    texld_pp r5, r0, s3
    add_pp r0.x, r2.x, r5.y
    mul_pp r0.x, r0.x, r0.w
    mul_sat_pp r0.x, r0.x, c23.y
    add r0.y, r0.x, c23.z
    mul_pp r0.x, r0.x, r0.x
    cmp_pp r0.x, r0.y, r0.x, c5.w
    texld_pp r5, r0.x, s4
    lrp_pp r4.y, r0.z, r2.w, r3.w
    add_pp r0.x, -r4.y, c22.x
    mad_pp r0.xyz, r0.x, c24.xyxw, c24.zwzw
    mul_pp r0.xyz, r0, r5
    add_pp r2.xyz, r4.x, -c8
    mul_pp r0.xyz, r0, r2
    mad_pp r0.xyz, r0, c4.w, c4
    mul r2.xyz, r0, c17
    mov_pp r0.w, c18.w
    mad_pp r2.xyz, r2, r0.w, c8
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r3, c25, s0
      add r2.w, -r3.y, v1.w
      mad r1.z, r3.x, r2.w, r1.x
      mov r1.w, v1.w
      mov r3.xyz, r1.zyww
    else
      mov r3.xyz, c5.w
    endif
    mov r1.z, v1.w
    cmp r1.xyz, -r0.w, r1, r3
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s5
    mul r0.xyz, r0, c18
    mad_pp oC0.xyz, r2, r1.x, r0
    rcp r0.x, v1.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 96 instruction slots used (11 texture, 85 arithmetic)
