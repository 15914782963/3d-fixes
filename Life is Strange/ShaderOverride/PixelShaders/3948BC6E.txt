//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEEnvMapParameter      c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   DNEResolution           c7       1
//   UniformPixelVector_0    c8       1
//   UniformPixelVector_1    c9       1
//   UniformPixelVector_2    c10      1
//   UniformPixelVector_3    c11      1
//   UniformPixelScalars_1   c12      1
//   UniformPixelScalars_2   c13      1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   DNEEnvironmentTexture   s2       1
//   PixelTexture2D_0        s3       1
//

    ps_3_0
    def c4, 0.0865169987, 0.138745993, 1, 0
    def c5, 0.066666998, 0.315685004, 2, 0.5
    def c6, 0.5, 0.100000001, -0.480000019, 0.980000019
    def c14, 0.800000012, 50, 5, 9.99999975e-006
    def c15, 0.0625, 0, 100000, 10
    def c16, 1, 0, 3, -9.99999997e-007
    def c17, 10, -0.00100000005, 1000, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xyz
    dcl_texcoord4 v3.w
    dcl_texcoord6 v4.xyz
    dcl_texcoord5 v5.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_3948BC6E_281.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v1.w
    mad r3.xy, vPos, c7, c7.zwzw
    mul r3.xy, r3, v5.w
    nrm_pp r4.xyz, v4
    mov r5.xy, c4
    mad r5.xy, v2, r5, c9
    texld_pp r5, r5, s3
    dp2add_pp r0.w, r5, -r5, c4.z
    max_pp r1.w, r0.w, c4.w
    rsq_pp r0.w, r1.w
    rcp_pp r5.z, r0.w
    mov r6.xyw, c5
    mad r6.xy, v2, r6, c10
    texld_pp r7, r6, s3
    dp2add_pp r0.w, r7, -r7, c4.z
    max_pp r1.w, r0.w, c4.w
    rsq_pp r0.w, r1.w
    rcp_pp r7.z, r0.w
    add r5.xyz, r5, r7
    nrm_pp r6.xyz, r5
    dp3_pp r0.w, r6, r4
    mul_pp r5.xyz, r0.w, r6
    mad_pp r4.xyz, r5, c5.z, -r4
    dp3_pp r1.x, r1, r4
    dp3_pp r1.y, r2, r4
    dp3_pp r1.z, r0, r4
    mov_pp r1.w, c4.w
    texldl_pp r0, r1, s2
    mul_pp r2.xyz, r0, c0
    mad_pp r1, r1.xyzx, c16.xxxy, c16.yyyz
    texldl_pp r1, r1, s2
    mul_pp r1.xyz, r1, c0
    mad r1.xyz, r1, c6.x, c6.y
    mad r0.xyz, r0, -c0, r1
    mad r0.xyz, c12.w, r0, r2
    mov r1.xyz, c11
    mad_pp r0.xyz, r0, r1, c8
    mul r0.w, r6.w, c13.y
    add r1.x, c16.w, v2_abs.z
    mul r1.y, v2_abs.z, v2_abs.z
    mul r1.y, r1.y, v2_abs.z
    mad r1.y, r1.y, c6.z, c6.w
    cmp r1.x, r1.x, r1.y, c6.w
    mov_sat r1.y, r6.z
    add r1.x, -r1.y, r1.x
    frc r1.y, -r1.x
    add_sat r1.x, r1.y, r1.x
    mul r0.w, r0.w, r1.x
    mad r1.x, r1.x, c14.x, -r0.w
    mad r0.w, c12.w, r1.x, r0.w
    mul_sat r1.xy, c14.yzzw, v2.z
    mul r0.w, r0.w, r1.x
    add r1.x, -r1.y, c4.z
    abs r1.y, c3.x
    if_ne c3.x, -c3.x
      texld r2, c15, s1
      add r1.z, -r2.y, v5.w
      mad r3.z, r2.x, r1.z, r3.x
      mov r3.w, v5.w
      mov r2.xyz, r3.zyww
    else
      mov_pp r2.xyz, c4.w
    endif
    mov r3.z, v5.w
    cmp r1.yzw, -r1.y, r3.xxyz, r2.xxyz
    rcp r1.w, r1.w
    mul r1.yz, r1.w, r1
    mad r2.xy, r1.yzzw, c1, c1.wzzw
    mov_pp r2.zw, c4.w
    texldl r2, r2, s0
    add r1.y, r2.w, -c2.y
    add r1.z, -r1.y, c14.w
    rcp r1.y, r1.y
    cmp r1.y, r1.z, c15.z, r1.y
    add r1.x, -r1.x, c4.z
    mul r1.z, r1.x, c15.w
    mad r1.y, c2.x, r1.y, -v5.w
    mad r1.x, r1.x, c17.x, c17.y
    rcp r1.z, r1.z
    cmp r1.x, r1.x, r1.z, c17.z
    mul_sat r1.x, r1.x, r1.y
    mul_pp r0.w, r0.w, r1.x
    mul r0.xyz, r0, v3.w
    mul_pp oC0.xyz, r0.w, r0
    mov_pp oC0.w, c4.w

// approximately 104 instruction slots used (9 texture, 95 arithmetic)
