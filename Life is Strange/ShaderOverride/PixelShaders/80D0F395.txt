//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4x4 DNECubemapParallaxBox;
//   float4 DNECubemapParallaxBoxCenter;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenDoorFadeSettings;
//   float4 ScreenDoorFadeSettings2;
//   sampler2D ScreenDoorNoiseTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   float4 WorldIncidentLighting[7];
//   bool bEnableScreenDoorFade;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bEnableScreenDoorFade        b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   WorldIncidentLighting        c7       7
//   DNECubemapParallaxBox        c14      3
//   DNEEnvMapParameter           c17      1
//   DNEMiscParameter             c18      1
//   DNECubemapPosition           c19      1
//   DNECubemapParallaxBoxCenter  c20      1
//   CameraWorldPos               c21      1
//   DNEResolution                c22      1
//   ScreenDoorFadeSettings       c23      1
//   ScreenDoorFadeSettings2      c24      1
//   UniformPixelVector_0         c25      1
//   LightColorAndFalloffExponent c26      1
//   UpperSkyColor                c27      1
//   AmbientColorAndSkyFactor     c28      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   DNEEnvironmentTexture        s2       1
//   ScreenDoorNoiseTexture       s3       1
//   PixelTexture2D_0             s4       1
//   PixelTexture2D_1             s5       1
//   PixelTexture2D_2             s6       1
//   VAOBuffer                    s7       1
//

    ps_3_0
    def c6, 0, 2, 10, 1.52876604
    def c29, 1, -1, -5.55472994, -6.98316002
    def c30, 0.886227608, 0.0625, 0, 0.125
    def c31, 1, 0.5, 0.693147004, 2
    def c32, 3, -1, -1.02332771, 1.02332771
    def c33, 0.858085215, -0.858085215, 0.247708291, 0.429042608
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord4 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord5 v5
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_80D0F395_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul r2, r0.yzzx, r1.zxzy
    mad_pp r3.xyz, r0.zxyw, -r1.yzxw, r2.xyww
    mul_pp r3.xyz, r3, v1.w
    add r4.xyz, c21, v5
    mad r5.xy, vPos, c22, c22.zwzw
    mul r5.xy, r5, v5.w
    nrm_pp r6.xyz, v4
    mad_sat_pp r0.w, c18.x, v5.w, c18.y
    mul_pp r1.w, r0.w, c0.x
    dp3_pp r3.w, v3, v3
    rsq_pp r3.w, r3.w
    mul_pp r7.xyz, r3.w, v3
    mad_pp r8.xyz, r6.z, c6.xxyw, -r6
    mad_pp r6.xyw, v3.xyzz, r3.w, r6.xyzz
    nrm_pp r9.xyz, r6.xyww
    texld_pp r10, v2, s6
    mad_pp r3.w, r10.w, c6.z, c6.w
    exp_pp r3.w, r3.w
    texld_pp r11, v2, s5
    mad_pp r6.xyw, r11.xyzz, c5.w, c5.xyzz
    if b0
      mad r10.xy, vPos, c24.zwzw, c24
      texld_pp r11, r10, s3
      mad r4.w, c23.y, r11.x, c23.z
      mov_pp r10.x, c29.x
      add r7.w, r10.x, -c23.x
      add r11, r4.w, -r7.w
      texkill r11
    endif
    texld_pp r11, v2, s4
    mov_pp r10.x, c29.x
    add_pp r10.xyz, r10.x, -c25
    mul_pp r10.xyz, r10, r11
    mad_pp r10.xyz, r10, c4.w, c4
    dp3_pp r11.x, r1, r8
    dp3_pp r11.y, r3, r8
    dp3_pp r11.z, r0, r8
    mul_pp r8.xyz, r11.y, c15
    mad_pp r8.xyz, c14, r11.x, r8
    mad_pp r8.xyz, c16, r11.z, r8
    add r12.xyz, r4, -c20
    mul r13.xyz, r12.y, c15
    mad r12.xyw, c14.xyzz, r12.x, r13.xyzz
    mad r12.xyz, c16, r12.z, r12.xyww
    add r13.xyz, -r12, c29.x
    rcp r14.x, r8.x
    rcp r14.y, r8.y
    rcp r14.z, r8.z
    mul_pp r8.xyz, r13, r14
    add r12.xyz, -r12, c29.y
    mul_pp r12.xyz, r14, r12
    max_pp r13.xyz, r8, r12
    min_pp r0.x, r13.z, r13.y
    min_pp r3.x, r0.x, r13.x
    mad r4.xyz, r3.x, r11, r4
    add_pp r4.xyz, r4, -c19
    mad_pp r4.w, c18.z, r10.w, c18.w
    texldl_pp r4, r4, s2
    mov_sat_pp r0.x, r6.z
    max_pp r8.xyz, r10.w, r6.xyww
    mad_pp r0.y, r0.x, c29.z, c29.w
    mul_pp r0.x, r0.x, r0.y
    exp_pp r0.x, r0.x
    lrp_pp r11.xyz, r0.x, r8, r6.xyww
    mul_pp r4.xyz, r4, r11
    mul_pp r4.xyz, r4, c17
    mad_pp r0.xyw, r0.w, r4.xyzz, c25.xyzz
    mul r4.xyz, r10, c27
    mad_pp r0.xyw, r4.xyzz, c28.w, r0
    mov_pp r1.x, r3.z
    mov_pp r1.y, r0.z
    mul r4.xyz, r1, r1.xyxw
    mul r2.x, r0.z, r3.z
    mad r2.y, r4.y, c32.x, c32.y
    mad_pp r2.w, r1.z, r1.z, -r4.x
    mul r8.xyz, r1, c32.zwzw
    mul r8.w, r4.z, c33.x
    mul r2, r2, c33.yzyw
    dp4 r0.z, c8, r8
    mov r1.x, c30.x
    mad_pp r0.z, c7.x, r1.x, r0.z
    dp4 r1.y, c9, r2
    add_pp r3.x, r0.z, r1.y
    dp4 r0.z, c10, r8
    mad_pp r0.z, c7.y, r1.x, r0.z
    dp4 r1.y, c11, r2
    add_pp r3.y, r0.z, r1.y
    dp4 r0.z, c12, r8
    mad_pp r0.z, c7.z, r1.x, r0.z
    dp4 r1.x, c13, r2
    add_pp r3.z, r0.z, r1.x
    mul_pp r1.xyz, r3, r10
    cmp_pp r1.xyz, r3, r1, c6.x
    add_pp r0.xyz, r0.xyww, r1
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r2, c30.yzzw, s1
      add r1.x, -r2.y, v5.w
      mad r5.z, r2.x, r1.x, r5.x
      mov r5.w, v5.w
      mov r1.xyz, r5.zyww
    else
      mov_pp r1.xyz, c6.x
    endif
    mov r5.z, v5.w
    cmp r1.xyz, -r0.w, r5, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r2, r1, s7
    texld_pp r4, c31, s0
    mov_sat_pp r0.w, r7.z
    mul_pp r1.x, r0.w, c0.w
    mov_sat_pp r1.y, c0.y
    mul_pp r1.y, r1.y, r1.y
    mul_pp r1.y, r3.w, r1.y
    mov_sat_pp r1.z, r9.z
    mad_pp r2.y, r1.y, c31.z, c31.w
    mul_pp r2.y, r2.y, c30.w
    mad r1.y, r1.y, r1.z, -r1.y
    exp_pp r1.y, r1.y
    mul_pp r1.y, r1.y, r2.y
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.w, r0.w
    dp3_sat_pp r1.y, r7, r9
    mad_pp r1.z, r1.y, c29.z, c29.w
    mul_pp r1.y, r1.y, r1.z
    exp_pp r1.y, r1.y
    lrp_pp r2.yzw, r1.y, c29.x, r6.xxyw
    mul_pp r1.yzw, r0.w, r2
    mad_pp r1.xyz, r10, r1.x, r1.yzww
    mul_pp r1.xyz, r4.x, r1
    mul_pp r1.xyz, r1, c26
    mad_pp r0.xyz, r0, r2.x, r1
    mad_pp oC0.xyz, r10, c28, r0
    rcp r0.x, v5.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 152 instruction slots used (9 texture, 143 arithmetic)
