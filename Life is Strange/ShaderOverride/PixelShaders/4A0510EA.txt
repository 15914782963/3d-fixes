//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float2 DistanceFadeParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenDoorFadeSettings;
//   float4 ScreenDoorFadeSettings2;
//   sampler2D ScreenDoorNoiseTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float TwoSidedSign;
//   float4 UniformPixelVector_0;
//   bool bEnableDistanceShadowFading;
//   bool bEnableScreenDoorFade;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bEnableScreenDoorFade        b0       1
//   bReceiveDynamicShadows       b1       1
//   bEnableDistanceShadowFading  b2       1
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNESpecularAttenuation       c7       1
//   DNEMiscParameter             c8       1
//   DNEResolution                c9       1
//   ScreenDoorFadeSettings       c10      1
//   ScreenDoorFadeSettings2      c11      1
//   UniformPixelVector_0         c12      1
//   LightColorAndFalloffExponent c13      1
//   DistanceFadeParameters       c14      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   ScreenDoorNoiseTexture       s3       1
//   PixelTexture2D_0             s4       1
//   PixelTexture2D_1             s5       1
//   PixelTexture2D_2             s6       1
//

    ps_3_0
    def c2, -1, 1, 10, 1.52876604
    def c6, 1, 0.5, 0.0625, 0
    def c15, 0.693147004, 2, 0.125, 0
    def c16, -5.55472994, -6.98316002, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord6 v2.xyz
    dcl_texcoord7 v3
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_4A0510EA_3060.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v2, v2
    rsq_pp r0.x, r0.x
    mad_sat_pp r0.y, c8.x, v3.w, c8.y
    mul_pp r0.y, r0.y, c7.x
    nrm_pp r1.xyz, v1
    cmp r0.z, vFace, c2.x, c2.y
    mul_pp r0.z, r0.z, c0.x
    mad_pp r2.xyz, v2, r0.x, r1
    nrm_pp r3.xyz, r2
    texld_pp r2, v0, s6
    mad_pp r0.x, r2.w, c2.z, c2.w
    exp_pp r0.x, r0.x
    texld_pp r2, c6, s0
    if b0
      mad r2.yz, vPos.xxyw, c11.xzww, c11.xxyw
      texld_pp r4, r2.yzzw, s3
      mad r0.w, c10.y, r4.x, c10.z
      mov r2.y, c2.y
      add r1.w, r2.y, -c10.x
      add r4, r0.w, -r1.w
      texkill r4
    endif
    if b1
      mad r2.yz, vPos.xxyw, c9.xxyw, c9.xzww
      mul r4.xy, r2.yzzw, v3.w
      if_ne c3.x, -c3.x
        texld r5, c6.zwzw, s1
        add r0.w, -r5.y, v3.w
        mad r4.z, r5.x, r0.w, r4.x
        mov r4.xy, r4.zyzw
        mov r0.w, v3.w
      else
        mov r0.w, v3.w
      endif
      rcp r0.w, r0.w
      mul r2.yz, r0.w, r4.xxyw
      mad r2.yz, r2, c1.xxyw, c1.xwzw
      texld r4, r2.yzzw, s2
      mul_pp r2.yzw, r4.xxyz, r4.xxyz
      if b2
        dp3 r0.w, v3, v3
        rsq r0.w, r0.w
        rcp r0.w, r0.w
        add r0.w, -r0.w, c14.x
        mul_sat_pp r0.w, r0.w, c14.y
        mul_pp r0.w, r0.w, r0.w
        mad_pp r1.w, r4.w, r4.w, -r2.x
        mad_pp r4.xyz, r0.w, r1.w, r2.x
      else
        mov_pp r4.xyz, r2.x
      endif
      mul_pp r2.yzw, r2, r4.xxyz
    else
      mov_pp r2.yzw, r2.x
    endif
    texld_pp r4, v0, s5
    mad_pp r4.xyz, r4, c5.w, c5
    texld_pp r5, v0, s4
    mov r6.y, c2.y
    add_pp r6.xyz, r6.y, -c12
    mul_pp r5.xyz, r5, r6
    mad_pp r5.xyz, r5, c4.w, c4
    mul_sat_pp r0.w, r1.z, r0.z
    mul_pp r1.w, r0.w, c7.w
    mov_sat_pp r2.x, c7.y
    mul_pp r2.x, r2.x, r2.x
    mul_pp r0.x, r0.x, r2.x
    mul_sat_pp r0.z, r0.z, r3.z
    mad_pp r2.x, r0.x, c15.x, c15.y
    mul_pp r2.x, r2.x, c15.z
    mad r0.x, r0.x, r0.z, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r2.x
    mul_pp r0.x, r0.w, r0.x
    mul_pp r0.x, r0.y, r0.x
    dp3_sat_pp r0.y, r1, r3
    mad_pp r0.z, r0.y, c16.x, c16.y
    mul_pp r0.y, r0.y, r0.z
    exp_pp r0.y, r0.y
    lrp_pp r1.xyz, r0.y, c2.y, r4
    mul_pp r0.xyz, r0.x, r1
    mad_pp r0.xyz, r5, r1.w, r0
    mul_pp r0.xyz, r2.yzww, r0
    mul oC0.xyz, r0, c13
    mov oC0.w, c6.w

// approximately 97 instruction slots used (7 texture, 90 arithmetic)
