//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNESpecularAttenuation       c7       1
//   DNEMiscParameter             c8       1
//   DNEResolution                c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelScalars_0        c11      1
//   LightColorAndFalloffExponent c12      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//   PixelTexture2D_4             s7       1
//

    ps_3_0
    def c2, 5, 4, 10, 1.52876604
    def c6, 1, 0.5, 0.0625, 0
    def c13, 1.5, 1.29999995, 1, 3
    def c14, 1.70000005, 2.01999998, 2.33999991, 9.99999997e-007
    def c15, 0.125, -5.55472994, -6.98316002, 0
    def c16, 2, -1, 1, 1.70000005
    def c17, 1.25, 0.800000012, 0.693147004, 2
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5 v2.xyz
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4.w
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_A4307F6E_556.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v3, v3
    rsq_pp r0.x, r0.x
    mad_sat_pp r0.y, c8.x, v4.w, c8.y
    mul_pp r0.y, r0.y, c7.x
    texld_pp r1, v0, s3
    mad_pp r1.xyz, r1, c16.x, c16.y
    nrm_pp r2.xyz, r1
    nrm_pp r1.xyz, v1
    cmp r0.z, vFace, c16.y, c16.z
    mul r0.z, r0.z, c0.x
    mul_pp r2.xyz, r0.z, r2
    mad_pp r0.xzw, v3.xyyz, r0.x, r1.xyyz
    nrm_pp r3.xyz, r0.xzww
    mul_pp r4, c13.xxyz, v0.xyxy
    texld_pp r5, r4, s5
    mul_pp r0.x, r5.y, c16.w
    texld_pp r6, r4.zwzw, s6
    mov r7.xy, c2
    mul r0.zw, r7.xyxy, c11.y
    mad_pp r0.z, r6.y, c13.w, r0.z
    mad_pp r0.w, r6.y, c16.x, r0.w
    add_sat_pp r0.zw, r0, -c13.w
    mad_sat_pp r0.x, r0.z, r0.x, r0.w
    mad_pp r0.x, r0.x, -r1.w, r1.w
    mad_pp r0.x, r0.x, c2.z, c2.w
    exp_pp r0.x, r0.x
    texld_pp r6, c6, s0
    dp3 r1.w, v2, v2
    add r2.w, -r1.w, c16.z
    mul r7, r6.x, r2.w
    mov r8, r7
    texkill r8
    if b0
      mad r4.zw, vPos.xyxy, c9.xyxy, c9
      mul r7.xy, r4.zwzw, v4.w
      if_ne c3.x, -c3.x
        texld r8, c6.zwzw, s1
        add r2.w, -r8.y, v4.w
        mad r7.z, r8.x, r2.w, r7.x
        mov r7.xy, r7.zyzw
        mov r2.w, v4.w
      else
        mov r2.w, v4.w
      endif
      rcp r2.w, r2.w
      mul r4.zw, r2.w, r7.xyxy
      mad r4.zw, r4, c1.xyxy, c1.xywz
      texld r8, r4.zwzw, s2
      mul_pp r5.xzw, r8.xyyz, r8.xyyz
      mul_pp r5.xzw, r5, r6.x
    else
      mov_pp r5.xzw, r6.x
    endif
    mov_sat r1.w, r1.w
    add r1.w, -r1.w, c16.z
    pow_sat_pp r6.x, r1.w, c12.w
    mov r6.y, c6.y
    texld_pp r6, r6, s0
    texld_pp r4, r4, s4
    mul_pp r0.z, r0.z, r5.y
    mad_pp r6.yzw, r0.z, c14.xxyz, r0.w
    mov_sat_pp r0.zw, r6.xyyz
    mul_pp r0.zw, r0, r4.xyxy
    mad_pp r0.zw, r0, c6.y, v0.xyxy
    texld_pp r4, r0.zwzw, s7
    max r7.xyz, r4_abs, c14.w
    log r4.x, r7.x
    log r4.y, r7.y
    log r4.z, r7.z
    mul r4.xyz, r4, c17.x
    exp_pp r7.x, r4.x
    exp_pp r7.y, r4.y
    exp_pp r7.z, r4.z
    add_sat_pp r4.xyz, -r6.yzww, r7
    max r6.yzw, r4.xxyz, c14.w
    log r4.x, r6.y
    log r4.y, r6.z
    log r4.z, r6.w
    mul r4.xyz, r4, c17.y
    exp_pp r7.x, r4.x
    exp_pp r7.y, r4.y
    exp_pp r7.z, r4.z
    mov r0.z, c16.z
    add_pp r4.xyz, r0.z, -c10
    mul_pp r4.xyz, r4, r7
    mad_pp r4.xyz, r4, c4.w, c4
    dp3_sat_pp r0.w, r2, r1
    mul_pp r1.w, r0.w, c7.w
    mul_sat_pp r2.w, r6.x, c7.y
    mul_pp r2.w, r2.w, r2.w
    mul_pp r0.x, r0.x, r2.w
    dp3_sat_pp r2.x, r2, r3
    mad_pp r2.y, r0.x, c17.z, c17.w
    mul_pp r2.y, r2.y, c15.x
    mad r0.x, r0.x, r2.x, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r2.y
    mul_pp r0.x, r0.w, r0.x
    mul_pp r0.x, r0.y, r0.x
    dp3_sat_pp r0.y, r1, r3
    mad_pp r0.w, r0.y, c15.y, c15.z
    mul_pp r0.y, r0.y, r0.w
    exp_pp r0.y, r0.y
    lrp_pp r1.xyz, r0.y, r0.z, c5
    mul_pp r0.xyz, r0.x, r1
    mad_pp r0.xyz, r4, r1.w, r0
    mul_pp r0.xyz, r5.xzww, r0
    mul r0.xyz, r6.x, r0
    mul r0.xyz, r0, c12
    cmp oC0.xyz, -r7.w, c6.w, r0
    mov oC0.w, c6.w

// approximately 123 instruction slots used (9 texture, 114 arithmetic)
