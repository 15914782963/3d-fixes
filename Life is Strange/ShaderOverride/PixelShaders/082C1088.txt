//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEResolution           c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   UniformPixelVector_0    c7       1
//   UniformPixelVector_1    c8       1
//   UniformPixelScalars_0   c9       1
//   UniformPixelScalars_1   c10      1
//   UniformPixelScalars_2   c11      1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//

    ps_3_0
    def c4, 9.99999997e-007, 0.300000012, 0.589999974, 0.109999999
    def c5, 0.0625, 0, 9.99999975e-006, 100000
    def c6, 0.0208350997, -0.0851330012, 0.180141002, -0.330299497
    def c12, 0.999866009, 0, 1, 3.14159274
    def c13, -2, 1.57079637, 0.159154937, 0.5
    def c14, 0.5, 1, 60, 20
    def c15, 0.0299999993, 0, 0, 0
    dcl_texcoord4 v0
    dcl_texcoord5 v1
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_82C1088_359.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v1.w
    rcp r1.x, v1.w
    mul r1.xy, r0, r1.x
    mad r1.xy, r1, c1, c1.wzzw
    texld r1, r1, s0
    max r2.xyz, r1_abs, c4.x
    log r3.x, r2.x
    log r3.y, r2.y
    log r3.z, r2.z
    mul r2.xyz, r3, c9.x
    exp r3.x, r2.x
    exp r3.y, r2.y
    exp r3.z, r2.z
    add r2.xyz, r3, c9.y
    rcp r1.w, c9.z
    mul r4.xyz, r1.w, r2
    dp3 r2.w, r4, c4.yzww
    mad r2.xyz, r2, -r1.w, r2.w
    mad r2.xyz, c9.w, r2, r4
    abs r1.w, c3.x
    if_ne c3.x, -c3.x
      texld r4, c5, s1
      add r2.w, -r4.y, v1.w
      mad r0.z, r4.x, r2.w, r0.x
      mov r0.w, v1.w
      mov r4.xyz, r0.zyww
    else
      mov r4.xyz, c5.y
    endif
    mov r0.z, v1.w
    cmp r0.xyz, -r1.w, r0, r4
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c5.y
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c5.z
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c5.w, r0.x
    mad r0.x, c2.x, r0.x, -v1.w
    add r0.x, r0.x, -c10.x
    rcp r0.y, c10.y
    mul_sat r0.x, r0.y, r0.x
    dp3 r0.y, v1, v1
    rsq r0.y, r0.y
    mul r0.zw, r0.y, v1.xyxy
    add r4.xy, -r0_abs.zwzw, r0_abs.wzzw
    cmp r4.xz, r4.x, r0_abs.zyww, r0_abs.wyzw
    rcp r1.w, r4.z
    mul r1.w, r1.w, r4.x
    mul r2.w, r1.w, r1.w
    mad r3.w, r2.w, c6.x, c6.y
    mad r3.w, r2.w, r3.w, c6.z
    mad r3.w, r2.w, r3.w, c6.w
    mad r2.w, r2.w, r3.w, c12.x
    mul r1.w, r1.w, r2.w
    cmp r2.w, r4.y, c12.y, c12.z
    mad r3.w, r1.w, c13.x, c13.y
    mad r1.w, r3.w, r2.w, r1.w
    cmp r2.w, r0.z, -c12.y, -c12.w
    add r1.w, r1.w, r2.w
    mad r2.w, v1.y, r0.y, -r0.z
    cmp r0.zw, r2.w, r0, r0.xywz
    cmp r0.w, r0.w, c12.z, c12.y
    cmp r0.z, r0.z, c5.y, r0.w
    add r0.w, r1.w, r1.w
    mad r0.z, r0.z, -r0.w, r1.w
    mad r4.x, r0.z, c13.z, c13.w
    mad r0.y, v1.z, r0.y, c12.z
    mad r4.y, r0.y, -c14.x, c14.y
    mul r0.yz, r4.xxyw, c14.xzww
    texld r4, r0.yzzw, s2
    add r0.yzw, r4.xxyz, c10.z
    frc r0.yzw, r0
    add r0.yzw, r0, -c13.w
    mad r0.yzw, r0, c15.x, r1.xxyz
    dp3 r0.y, r0.yzww, c4.yzww
    mov r0.w, c10.w
    lrp r1.x, r0.y, r0.w, c11.x
    add r0.y, r0.x, -c4.x
    pow r2.w, r0.x, r1.x
    cmp r0.x, r0.y, r2.w, c5.y
    mad r0.yzw, r2.xxyz, c8.xxyz, -r3.xxyz
    mad_sat r0.xyz, r0.x, r0.yzww, r3
    max r1.xyz, r0, c4.x
    log r0.x, r1.x
    log r0.y, r1.y
    log r0.z, r1.z
    mul r0.xyz, r0, c11.y
    exp r1.x, r0.x
    exp r1.y, r0.y
    exp r1.z, r0.z
    add_pp r0.xyz, r1, c7
    mad_pp oC0.xyz, r0, v0.w, v0
    mov_pp oC0.w, c12.z

// approximately 102 instruction slots used (5 texture, 97 arithmetic)
