//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelVector_0;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEResolution           c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   UniformPixelVector_0    c7       1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//

    ps_3_0
    def c4, 0.300000012, 0.589999974, 0.109999999, -9.99999997e-007
    def c5, 1.20000005, 1, 0.800000012, 15
    def c6, 16, 0.0625, 0, 9.99999975e-006
    def c8, 100000, 0.03125, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1
    dcl_texcoord2 v2.yw
    dcl_texcoord4 v3
    dcl_texcoord5 v4.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_CBC8249B_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v4.w
    rcp r1.x, v4.w
    mul r1.xy, r0, r1.x
    mad r1.xy, r1, c1, c1.wzzw
    texld r2, r1, s0
    mad r3, v2.wywy, c5.xyzy, r1.xyxy
    texld r4, r3, s2
    add r1.xy, r1, v2.wyzw
    texld r1, r1, s2
    texld r3, r3.zwzw, s2
    mov r3.x, r4.x
    mov r3.y, r1.y
    mad r1.xyz, r2, r3, r3
    mad_pp r1.xyz, r1, v1, c7
    dp3 r1.w, r3, c4
    mul_sat r1.w, r1.w, c5.w
    add r2.x, r1.w, c4.w
    pow r2.y, r1.w, c5.z
    add r2.zw, c5.y, -v0.xyxy
    mul r2.zw, r2, v0.xyxy
    mul r1.w, r2.w, r2.z
    mul r1.w, r1.w, c6.x
    mul r1.w, r1.w, r1.w
    mul r1.w, r1.w, r2.y
    mul r1.w, r1.w, v1.w
    abs r2.y, c3.x
    if_ne c3.x, -c3.x
      texld r3, c6.yzzw, s1
      add r2.z, -r3.y, v4.w
      mad r0.z, r3.x, r2.z, r0.x
      mov r0.w, v4.w
      mov r3.xyz, r0.zyww
    else
      mov r3.xyz, c6.z
    endif
    mov r0.z, v4.w
    cmp r0.xyz, -r2.y, r0, r3
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c6.z
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c6.w
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c8.x, r0.x
    mad r0.x, c2.x, r0.x, -v4.w
    mul_sat r0.x, r0.x, c8.y
    mul_pp r0.x, r0.x, r1.w
    cmp_pp oC0.w, r2.x, r0.x, c6.z
    mad_pp oC0.xyz, r1, v3.w, v3

// approximately 57 instruction slots used (7 texture, 50 arithmetic)
