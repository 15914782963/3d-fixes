//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_2;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEEnvMapParameter        c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DNEMiscParameter          c7       1
//   DNECubemapPosition        c8       1
//   CameraWorldPos            c9       1
//   DNEResolution             c10      1
//   UniformPixelVector_0      c11      1
//   UniformPixelVector_2      c12      1
//   UniformPixelScalars_0     c13      1
//   UniformPixelScalars_1     c14      1
//   UniformPixelScalars_2     c15      1
//   UpperSkyColor             c16      1
//   AmbientColorAndSkyFactor  c17      1
//   NvStereoFixTexture        s0       1
//   DNEEnvironmentTexture     s1       1
//   PixelTexture2D_0          s2       1
//   PixelTexture2D_1          s3       1
//   PixelTexture2D_2          s4       1
//   PixelTexture2D_3          s5       1
//   PixelTexture2D_4          s6       1
//   VAOBuffer                 s7       1
//

    ps_3_0
    def c6, -0.5, -0.0599999987, -0.75, 0.5
    def c18, 1.44927537, 1.43884897, -0.0869565234, -0.115107916
    def c19, 153.600006, 0.699999988, 1, 0
    def c20, 2, -1, 0.0500000007, 1
    def c21, 0.699999988, -0.699999988, -1, 0
    def c22, 6, 5, -0.0799999982, -0.774999976
    def c23, 0.166666672, 0.200000003, 0.0333333351, 0.111111
    def c24, 0.0599999987, 0.75, 0.0799999982, 0.774999976
    def c25, -5.55472994, -6.98316002, 0.0625, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord6 v3.xyz
    dcl_texcoord5 v4
    dcl vPos.xy
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_1ACABFEC_787.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v1.w
    add r3.xyz, c9, v4
    mad r4.xy, vPos, c10, c10.zwzw
    mul r4.xy, r4, v4.w
    nrm_pp r5.xyz, v3
    mad_sat_pp r0.w, c7.x, v4.w, c7.y
    texld_pp r6, v2, s2
    mad_pp r6.xyz, r6, c20.x, c20.y
    nrm_pp r7.xyz, r6
    dp3_pp r1.w, r7, r5
    mul_pp r6.xyz, r1.w, r7
    mad_pp r5.xyz, r6, c20.x, -r5
    mov r6.yzw, c20
    mad_pp r7.xyz, c5.w, r6.z, c5
    texld_pp r8, v2, s3
    add r9, c6.xxyz, v2.xyxx
    texld_pp r10, c12, s4
    add r2.w, r6.y, c14.y
    mul r2.w, r2.w, r10.y
    mad_pp r2.w, c14.z, r2.w, r6.w
    mad_pp r6.xy, r2.w, r9, c6.w
    mad_pp r11.xy, r6, c18, c18.zwzw
    mul_pp r2.w, c14.w, c14.z
    mul_pp r2.w, r10.x, r2.w
    frc_pp r3.w, r2.w
    add_pp r10.w, r2.w, -r3.w
    exp_pp r2.w, r10.w
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, c19.x
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, r3.w
    mad_pp r12, r2.w, c19.yyzw, r11.xyxy
    mul r10.xyz, r12.xyxw, c19.zzww
    texldl_pp r13, r10, s5
    mul r10.xyz, r12.zwxw, c19.zzww
    texldl_pp r12, r10, s5
    add_pp r6.xyz, r12, r13
    mad_pp r12.xyz, r2.w, c21.xzyw, r11.xyyw
    mov_pp r10.xy, r12.xzzw
    texldl_pp r13, r10, s5
    add_pp r6.xyz, r6, r13
    mad_pp r10.xy, r2.w, c19.wzzw, r11
    texldl_pp r13, r10, s5
    mov r11.zw, r10
    texldl_pp r10, r11, s5
    add_pp r10.xyz, r10, r13
    mov r12.xzw, r11
    texldl_pp r13, r12, s5
    add_pp r10.xyz, r10, r13
    add_pp r6.xyz, r6, r10
    mad_pp r10, r2.w, c21.yxzw, r11.xyxy
    mov_pp r12.xy, r10
    texldl_pp r13, r12, s5
    mov_pp r12.xy, r10.zwzw
    texldl_pp r10, r12, s5
    add_pp r10.xyz, r10, r13
    mad_pp r12.xy, r2.w, -c19.y, r11
    texldl_pp r12, r12, s5
    add_pp r10.xyz, r10, r12
    add_pp r6.xyz, r6, r10
    mul_pp r9.xy, r11, c23
    mov r10.xy, c15
    mul_pp r2.w, r10.x, c13.x
    mul_pp r10.xz, r2.w, c23
    frc_pp r10.xz, r10_abs
    cmp_pp r10.xz, r2.w, r10, -r10
    mul_pp r10.xz, r10, c22.xyyw
    frc_pp r11.xy, r10.xzzw
    add_pp r10.xz, r10, -r11.xyyw
    mad_pp r10.xz, r10, c23.xyyw, r9.xyyw
    texld_pp r11, r10.xzzw, s6
    rcp_pp r3.w, c15.x
    add_pp r5.w, r3.w, c13.x
    mul_pp r5.w, r5.w, c15.x
    mul_pp r10.xz, r5.w, c23
    frc_pp r10.xz, r10_abs
    cmp_pp r10.xz, r5.w, r10, -r10
    mul_pp r10.xz, r10, c22.xyyw
    frc_pp r12.xy, r10.xzzw
    add_pp r10.xz, r10, -r12.xyyw
    mad_pp r9.xy, r10.xzzw, c23, r9
    texld_pp r12, r9, s6
    frc r5.w, r2_abs.w
    cmp r2.w, r2.w, r5.w, -r5.w
    mul_pp r2.w, r3.w, r2.w
    mul_pp r2.w, r2.w, c15.x
    lrp_pp r10.xzw, r2.w, r12.xyyz, r11.xyyz
    mul_pp r2.w, r10.y, c14.z
    mul_pp r10.xyz, r10.xzww, r2.w
    mad_pp r6.xyz, r6, c23.w, r10
    add r10, c24, -v2.xxyy
    cmp_pp r9.xy, r10.ywzw, c19.z, c19.w
    cmp_pp r2.w, r9.w, r9.x, c20.w
    add r9.xw, c22.zyzw, v2.y
    cmp_pp r3.w, r9.w, r9.y, c20.w
    mul_pp r2.w, r2.w, r3.w
    cmp_pp r2.w, r10.z, -c19.w, -r2.w
    cmp_pp r2.w, r9.x, r2.w, -c19.w
    cmp_pp r2.w, r10.x, -c19.w, r2.w
    cmp_pp r2.w, r9.z, r2.w, -c19.w
    cmp_pp r6.xyz, r2.w, r8, r6
    add_pp r8.xyz, r6.w, -c11
    mul_pp r6.xyz, r6, r8
    mad_pp r6.xyz, r6, c4.w, c4
    dp3_pp r1.x, r1, r5
    dp3_pp r1.y, r2, r5
    dp3_pp r1.z, r0, r5
    add r0.xyz, r3, -c8
    mad_pp r2.xyz, c0.w, r0, r1
    add_pp r2.w, c7.w, c7.z
    texldl_pp r2, r2, s1
    mov_sat_pp r1.w, r1.w
    max_pp r0.xyz, c20.w, r7
    mad_pp r1.x, r1.w, c25.x, c25.y
    mul_pp r1.x, r1.w, r1.x
    exp_pp r1.x, r1.x
    lrp_pp r3.xyz, r1.x, r0, r7
    mul_pp r0.xyz, r2, r3
    mul_pp r0.xyz, r0, c0
    mad_pp r0.xyz, r0.w, r0, c11
    mul r1.xyz, r6, c16
    mad_pp r0.xyz, r1, c17.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r1, c25.zwzw, s0
      add r1.y, -r1.y, v4.w
      mad r4.z, r1.x, r1.y, r4.x
      mov r4.w, v4.w
      mov r1.xyz, r4.zyww
    else
      mov r1.xyz, c19.w
    endif
    mov r4.z, v4.w
    cmp r1.xyz, -r0.w, r4, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s7
    mul r1.yzw, r6.xxyz, c17.xxyz
    mad_pp oC0.xyz, r0, r1.x, r1.yzww
    rcp r0.x, v4.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 166 instruction slots used (27 texture, 139 arithmetic)
