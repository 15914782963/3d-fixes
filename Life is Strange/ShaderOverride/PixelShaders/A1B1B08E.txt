//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelVector_0;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEResolution           c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   UniformPixelVector_0    c7       1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//   PixelTexture2D_1        s3       1
//

    ps_3_0
    def c4, 6, 0.166666672, 0.0625, 0
    def c5, 9.99999975e-006, 100000, 0.125, 0
    dcl_texcoord4 v0.w
    dcl_texcoord7_pp v1
    dcl_texcoord5 v2.w
    dcl_texcoord v3
    dcl_texcoord1 v4.x
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_A1B1B08E_676.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v2.w
    texld r1, v3, s2
    texld r2, v3.wzzw, s2
    lrp r3.x, v4.x, r2.x, r1.x
    mul r1.x, r3.x, c4.x
    frc r1.y, r1.x
    add r1.x, -r1.y, r1.x
    mul r1.x, r1.x, c4.y
    texld r1, r1.x, s3
    mad_pp r1.xyz, v1, r1, c7
    abs r1.w, c3.x
    if_ne c3.x, -c3.x
      texld r2, c4.zwzw, s1
      add r2.y, -r2.y, v2.w
      mad r0.z, r2.x, r2.y, r0.x
      mov r0.w, v2.w
      mov r2.xyz, r0.zyww
    else
      mov r2.xyz, c4.w
    endif
    mov r0.z, v2.w
    cmp r0.xyz, -r1.w, r0, r2
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.w
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c5.x
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c5.y, r0.x
    mad r0.x, c2.x, r0.x, -v2.w
    mul_sat r0.x, r0.x, c5.z
    mul_pp r0.x, r0.x, v1.w
    mul r0.yzw, r1.xxyz, v0.w
    mul_pp oC0.xyz, r0.x, r0.yzww
    mov oC0.w, c4.w

// approximately 41 instruction slots used (6 texture, 35 arithmetic)
