//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_5;
//   float4 UniformPixelScalars_6;
//   float4 UniformPixelScalars_7;
//   float4 UniformPixelScalars_8;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//   float3 UpperSkyColor;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   CameraWorldPos           c0       1
//   ScreenPositionScaleBias  c1       1
//   MinZ_MaxZRatio           c2       1
//   NvStereoEnabled          c3       1
//   DiffuseOverrideParameter c4       1
//   DNEResolution            c7       1
//   UniformPixelVector_0     c8       1
//   UniformPixelVector_1     c9       1
//   UniformPixelVector_2     c10      1
//   UniformPixelVector_3     c11      1
//   UniformPixelVector_4     c12      1
//   UniformPixelVector_5     c13      1
//   UniformPixelVector_6     c14      1
//   UniformPixelScalars_1    c15      1
//   UniformPixelScalars_2    c16      1
//   UniformPixelScalars_3    c17      1
//   UniformPixelScalars_5    c18      1
//   UniformPixelScalars_6    c19      1
//   UniformPixelScalars_7    c20      1
//   UniformPixelScalars_8    c21      1
//   UpperSkyColor            c22      1
//   AmbientColorAndSkyFactor c23      1
//   SceneColorTexture        s0       1
//   NvStereoFixTexture       s1       1
//   PixelTexture2D_0         s2       1
//   PixelTexture2D_1         s3       1
//   PixelTexture2D_2         s4       1
//

    ps_3_0
    def c5, 0.930000007, 0.0700000003, 0.0625, 0
    def c6, 9.99999975e-006, 100000, 0, 0
    def c24, 0, -0.99000001, -9.99999997e-007, 0.930000007
    def c25, 1, 0, 1.41789806, 1.37
    dcl_texcoord4 v0
    dcl_texcoord6 v1.xyz
    dcl_texcoord5 v2.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_FEEE064F_749.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    add r0.xy, c0, v2
    mad r0.zw, vPos.xyxy, c7.xyxy, c7
    mul r1.xy, r0.zwzw, v2.w
    nrm_pp r2.xyz, v1
    rcp r0.z, c15.x
    mul_pp r3.xy, r0.z, r0
    mad_pp r0.xy, r0, r0.z, c9
    texld_pp r0, r0, s2
    dp2add_pp r0.w, r0, -r0, c25.x
    max_pp r2.w, r0.w, c25.y
    rsq_pp r0.w, r2.w
    rcp_pp r0.z, r0.w
    mov r4.xzw, c25
    mad_pp r3.zw, r3.xyxy, r4.z, c10.xyxy
    texld_pp r5, r3.zwzw, s2
    dp2add_pp r0.w, r5, -r5, c25.x
    max_pp r2.w, r0.w, c25.y
    rsq_pp r0.w, r2.w
    rcp_pp r5.z, r0.w
    add_pp r0.xyz, r0, r5
    nrm_pp r5.xyz, r0
    mul_pp r0.xyz, r5, c16.x
    frc_pp r5.xyz, r0
    add_pp r0.xyz, r0, -r5
    rcp r0.w, c16.x
    mov r2.w, c16.w
    mad_pp r3.zw, r2.w, r3.xyxy, c11.xyxy
    texld_pp r5, r3.zwzw, s3
    lrp_pp r2.w, r5.x, c17.z, c17.w
    mul_pp r3.zw, r3.xyxy, c18.x
    mov r6.x, c18.x
    mad_pp r3.xy, r6.x, r3, c12
    texld_pp r6, r3, s4
    mad_pp r3.xy, r3.zwzw, r4.w, c13
    texld_pp r3, r3, s4
    mul_pp r3.x, r3.y, r6.y
    mad_sat_pp r2.w, r3.x, c19.w, r2.w
    mad_pp r0.xyz, r0, r0.w, c24.xxyw
    mad_pp r0.xyz, r2.w, r0, c25.yyxw
    nrm_pp r3.xyz, r0
    dp3_pp r0.x, r3, r2
    add r0.y, -r0.x, c25.x
    cmp_pp r0.x, r0.x, r0_abs.y, c25.x
    add r0.y, r0.x, c24.z
    mul r0.z, r0.x, r0.x
    mad r0.w, r0.z, c5.x, c5.y
    add_pp r0.w, -r0.w, c25.x
    cmp_pp r0.w, r0.y, r0.w, c24.w
    mul_pp r2.xyz, r0.w, c14
    add_pp r3.xyz, r4.x, -c8
    mul_pp r2.xyz, r2, r3
    mad_pp r2.xyz, r2, c4.w, c4
    mul r3.xyz, r2, c22
    mov_pp r0.w, c23.w
    mad_pp r3.xyz, r3, r0.w, c8
    mad_pp r2.xyz, r2, c23, r3
    mul_pp r0.x, r0.z, r0.x
    add r0.z, -c20.w, c20.z
    mul r0.x, r0.z, r0.x
    cmp r0.x, r0.y, r0.x, c25.y
    add_pp r0.x, r0.x, c20.w
    abs r0.y, c3.x
    if_ne c3.x, -c3.x
      texld r3, c5.zwzw, s1
      add r0.z, -r3.y, v2.w
      mad r1.z, r3.x, r0.z, r1.x
      mov r1.w, v2.w
      mov r3.xyz, r1.zyww
    else
      mov_pp r3.xyz, c25.y
    endif
    mov r1.z, v2.w
    cmp r0.yzw, -r0.y, r1.xxyz, r3.xxyz
    rcp r0.w, r0.w
    mul r0.yz, r0.w, r0
    mad r1.xy, r0.yzzw, c1, c1.wzzw
    mov r1.zw, c25.y
    texldl r1, r1, s0
    add r0.y, r1.w, -c2.y
    add r0.z, -r0.y, c6.x
    rcp r0.y, r0.y
    cmp r0.y, r0.z, c6.y, r0.y
    mad_pp r0.y, c2.x, r0.y, -v2.w
    lrp_pp r0.z, r5.x, c21.x, c21.y
    rcp r0.z, r0.z
    mul_sat_pp r0.y, r0.z, r0.y
    mul_sat_pp oC0.w, r0.y, r0.x
    mad_pp oC0.xyz, r2, v0.w, v0

// approximately 99 instruction slots used (8 texture, 91 arithmetic)
