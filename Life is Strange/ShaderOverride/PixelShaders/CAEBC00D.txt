//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEEnvMapParameter        c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DNEMiscParameter          c7       1
//   DNECubemapPosition        c8       1
//   CameraWorldPos            c9       1
//   DNEResolution             c10      1
//   UniformPixelVector_0      c11      1
//   UniformPixelScalars_0     c12      1
//   UpperSkyColor             c13      1
//   AmbientColorAndSkyFactor  c14      1
//   NvStereoFixTexture        s0       1
//   DNEEnvironmentTexture     s1       1
//   PixelTexture2D_0          s2       1
//   PixelTexture2D_1          s3       1
//   PixelTexture2D_2          s4       1
//   PixelTexture2D_3          s5       1
//   PixelTexture2D_4          s6       1
//   PixelTexture2D_5          s7       1
//   VAOBuffer                 s8       1
//

    ps_3_0
    def c6, 2, -1, 1, 0
    def c15, -5.55472994, -6.98316002, 0.0625, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord6 v3.xyz
    dcl_texcoord5 v4
    dcl vPos.xy
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_CAEBC00D_811.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v1.w
    add r3.xyz, c9, v4
    mad r4.xy, vPos, c10, c10.zwzw
    mul r4.xy, r4, v4.w
    nrm_pp r5.xyz, v3
    mad_sat_pp r0.w, c7.x, v4.w, c7.y
    texld_pp r6, v2, s2
    mad_pp r6.xyz, r6, c6.x, c6.y
    texld_pp r7, v2, s3
    mad_pp r7.xyz, r7, c6.x, c6.y
    texld_pp r8, v2, s4
    add_pp r1.w, r8.x, -c12.z
    frc_pp r2.w, -r1.w
    add_sat_pp r1.w, r1.w, r2.w
    cmp_pp r6.xyz, -r1.w, r6, r7
    nrm_pp r7.xyz, r6
    dp3_pp r2.w, r7, r5
    mul_pp r6.xyz, r2.w, r7
    mad_pp r5.xyz, r6, c6.x, -r5
    texld_pp r8, v2, s7
    mad_pp r6.xyz, r8, c5.w, c5
    cmp_pp r3.w, -r1.w, r6.w, r7.w
    texld_pp r7, v2, s5
    texld_pp r8, v2, s6
    cmp_pp r7.xyz, -r1.w, r7, r8
    mov_pp r8.z, c6.z
    add_pp r8.xyz, r8.z, -c11
    mul_pp r7.xyz, r7, r8
    mad_pp r7.xyz, r7, c4.w, c4
    dp3_pp r1.x, r1, r5
    dp3_pp r1.y, r2, r5
    dp3_pp r1.z, r0, r5
    add r0.xyz, r3, -c8
    mad_pp r1.xyz, c0.w, r0, r1
    mad_pp r1.w, c7.z, r3.w, c7.w
    texldl_pp r1, r1, s1
    mov_sat_pp r2.w, r2.w
    max_pp r0.xyz, r3.w, r6
    mad_pp r1.w, r2.w, c15.x, c15.y
    mul_pp r1.w, r2.w, r1.w
    exp_pp r1.w, r1.w
    lrp_pp r2.xyz, r1.w, r0, r6
    mul_pp r0.xyz, r1, r2
    mul_pp r0.xyz, r0, c0
    mad_pp r0.xyz, r0.w, r0, c11
    mul r1.xyz, r7, c13
    mad_pp r0.xyz, r1, c14.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r1, c15.zwzw, s0
      add r1.y, -r1.y, v4.w
      mad r4.z, r1.x, r1.y, r4.x
      mov r4.w, v4.w
      mov r1.xyz, r4.zyww
    else
      mov_pp r1.xyz, c6.w
    endif
    mov r4.z, v4.w
    cmp r1.xyz, -r0.w, r4, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s8
    mul r1.yzw, r7.xxyz, c14.xxyz
    mad_pp oC0.xyz, r0, r1.x, r1.yzww
    rcp r0.x, v4.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 82 instruction slots used (10 texture, 72 arithmetic)
