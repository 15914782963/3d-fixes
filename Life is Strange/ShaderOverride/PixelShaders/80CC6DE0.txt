//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEResolution           c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   UniformPixelVector_0    c7       1
//   UniformPixelVector_1    c8       1
//   UniformPixelVector_2    c9       1
//   UniformPixelScalars_0   c10      1
//   UniformPixelScalars_1   c11      1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//

    ps_3_0
    def c4, 9.99999997e-007, 0.0625, 0, 9.99999975e-006
    def c5, 100000, 0, 0, 0
    dcl_texcoord4 v0.w
    dcl_texcoord5 v1.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_80CC6DE0_281.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.yz, r0.xxyw, v1.w
    rcp r1.x, v1.w
    mul r1.xy, r0.yzzw, r1.x
    mad r1.xy, r1, c1, c1.wzzw
    texld r1, r1, s0
    max r2.xyz, r1_abs, c4.x
    log r1.x, r2.x
    log r1.y, r2.y
    log r1.z, r2.z
    mul r1.xyz, r1, c10.y
    exp_sat r2.x, r1.x
    exp_sat r2.y, r1.y
    exp_sat r2.z, r1.z
    mul r1.xyz, r2, c9
    mov r2.x, c10.x
    mad r1.xyz, r2.x, c8, r1
    add r1.w, -c10.z, v1.w
    rcp r2.x, c10.w
    mul_sat r1.w, r1.w, r2.x
    abs r2.x, c3.x
    if_ne c3.x, -c3.x
      texld r3, c4.yzzw, s1
      add r2.y, -r3.y, v1.w
      mad r0.x, r3.x, r2.y, r0.y
      mov r0.w, v1.w
      mov r2.yzw, r0.xxzw
    else
      mov r2.yzw, c4.z
    endif
    mov r0.w, v1.w
    cmp r2.yzw, -r2.x, r0, r2
    rcp r2.w, r2.w
    mul r2.yz, r2.w, r2
    mad r3.xy, r2.yzzw, c1, c1.wzzw
    mov r3.zw, c4.z
    texldl r3, r3, s0
    add r2.y, r3.w, -c2.y
    add r2.z, -r2.y, c4.w
    rcp r2.y, r2.y
    cmp r2.y, r2.z, c5.x, r2.y
    mad r2.y, c2.x, r2.y, -v1.w
    rcp r2.z, c11.x
    mul_sat r2.y, r2.z, r2.y
    mul r1.w, r1.w, r2.y
    if_ne c3.x, -c3.x
      texld r3, c4.yzzw, s1
      add r2.y, -r3.y, v1.w
      mad r0.x, r3.x, r2.y, r0.y
      mov r2.yzw, r0.xxzw
    else
      mov r2.yzw, c4.z
    endif
    cmp r0.xyz, -r2.x, r0.yzww, r2.yzww
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.z
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c4.w
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c5.x, r0.x
    mad r0.x, c2.x, r0.x, -v1.w
    rcp r0.y, c11.y
    mul_sat r0.x, r0.y, r0.x
    mul r0.x, r0.x, r1.w
    mad_pp r0.xyz, r0.x, r1, c7
    mul_pp oC0.xyz, r0, v0.w
    mov oC0.w, c4.z

// approximately 76 instruction slots used (7 texture, 69 arithmetic)
