//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEResolution                c7       1
//   UniformPixelVector_0         c8       1
//   UniformPixelVector_1         c9       1
//   LightColorAndFalloffExponent c10      1
//   UpperSkyColor                c11      1
//   AmbientColorAndSkyFactor     c12      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   VAOBuffer                    s2       1
//

    ps_3_0
    def c6, 0.300000012, 0.589999974, 0.109999999, -9.99999997e-007
    def c13, 0, 2, 1, 0.0625
    def c14, 1, 0.5, 15, 0
    dcl_texcoord4 v0.xyz
    dcl_texcoord6 v1.xyz
    dcl_texcoord5 v2.w
    dcl_color v3.xyz
    dcl_color1 v4
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_63E8CB3A_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v4
    nrm_pp r1.xyz, v3
    mul_pp r0.y, r0.y, r1.x
    mad_pp r0.x, r0.x, r1.y, -r0.y
    mul_pp r0.x, r0.x, v4.w
    mad r0.yw, vPos.xxzy, c7.xxzy, c7.xzzw
    mul r2.xy, r0.ywzw, v2.w
    nrm_pp r3.xyz, v1
    nrm_pp r4.xyz, v0
    mad_pp r1.xyw, r3.z, c13.xxzy, -r3.xyzz
    abs r3.x, r1.z
    abs r3.yz, r0.xxzw
    dp3 r0.x, r3, c6
    mul r0.xyz, r0.x, c9
    mov r1.z, c13.z
    add r3.xyz, r1.z, -c8
    mul_pp r0.xyz, r0, r3
    mad_pp r0.xyz, r0, c4.w, c4
    mul r3.xyz, r0, c11
    mov_pp r0.w, c12.w
    mad_pp r3.xyz, r3, r0.w, c8
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r5, c13.wxzw, s1
      add r1.z, -r5.y, v2.w
      mad r2.z, r5.x, r1.z, r2.x
      mov r2.w, v2.w
      mov r5.xyz, r2.zyww
    else
      mov r5.xyz, c13.x
    endif
    mov r2.z, v2.w
    cmp r2.xyz, -r0.w, r2, r5
    rcp r0.w, r2.z
    mul r2.xy, r0.w, r2
    mad r2.xy, r2, c1, c1.wzzw
    texld_pp r2, r2, s2
    texld_pp r5, c14, s0
    mov_sat_pp r0.w, r4.z
    add r1.z, r0.w, c6.w
    mul_pp r0.w, r0.w, c0.w
    cmp_pp r0.w, r1.z, r0.w, c13.x
    dp3_sat_pp r1.x, r1.xyww, r4
    add r1.y, r1.x, c6.w
    pow_pp r2.y, r1.x, c14.z
    mul r1.x, r2.y, c0.x
    mul_pp r1.xzw, r1.x, c5.xyyz
    cmp_pp r1.xyz, r1.y, r1.xzww, c13.x
    mad_pp r1.xyz, r0, r0.w, r1
    mul_pp r1.xyz, r5.x, r1
    mul_pp r1.xyz, r1, c10
    mad_pp r1.xyz, r3, r2.x, r1
    mad_pp oC0.xyz, r0, c12, r1
    rcp r0.x, v2.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 67 instruction slots used (3 texture, 64 arithmetic)
