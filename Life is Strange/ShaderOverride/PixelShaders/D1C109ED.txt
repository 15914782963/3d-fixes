//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   sampler2D HeightmapTexture;
//   float4 LightMapScale;
//   sampler2D LightMapTextures;
//   float3x3 LocalToWorldMatrix;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEEnvMapParameter        c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   LocalToWorldMatrix        c7       3
//   DNEMiscParameter          c10      1
//   DNECubemapPosition        c11      1
//   CameraWorldPos            c12      1
//   DNEResolution             c13      1
//   UniformPixelVector_0      c14      1
//   UniformPixelVector_1      c15      1
//   UniformPixelVector_2      c16      1
//   UpperSkyColor             c17      1
//   AmbientColorAndSkyFactor  c18      1
//   LightMapScale             c19      1
//   NvStereoFixTexture        s0       1
//   DNEEnvironmentTexture     s1       1
//   PixelTexture2D_0          s2       1
//   PixelTexture2D_1          s3       1
//   PixelTexture2D_2          s4       1
//   PixelTexture2D_3          s5       1
//   PixelTexture2D_4          s6       1
//   HeightmapTexture          s7       1
//   LightMapTextures          s8       1
//   VAOBuffer                 s9       1
//

    ps_3_0
    def c6, 2, -1, 1, 0
    def c20, -0.5, -5.55472994, -6.98316002, 0
    def c21, 0.0625, 0, 0, 0
    dcl_texcoord1 v0.xy
    dcl_texcoord2 v1.xy
    dcl_texcoord6 v2.xyz
    dcl_texcoord5 v3
    dcl vPos.xy
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_D1C109ED_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    texld r0, v0, s7
    mad r0.xy, r0.zwzw, c6.x, c6.y
    dp2add r1.x, r0, -r0, c6.z
    rsq r1.x, r1.x
    rcp r0.z, r1.x
    mov r0.w, -r0.x
    dp2add r1.x, r0.zwzw, r0.zwzw, c6.w
    rsq r1.x, r1.x
    mul r1.yz, r0.xwzw, r1.x
    mov r1.x, c6.w
    mul r2.xyz, r0.zxyw, r1
    mad r2.xyz, r0.yzxw, r1.yzxw, -r2
    nrm r3.xyz, v2
    dp2add_pp r4.x, r1.zyzw, r3.xzzw, c6.w
    dp3_pp r4.y, r2, r3
    dp3_pp r4.z, r0, r3
    mov r3.zw, c6
    dp2add_pp r5.x, c7.xzzw, r1.zyzw, r3.w
    dp3_pp r5.y, c7, r2
    dp3_pp r5.z, c7, r0
    dp2add_pp r6.x, c8.xzzw, r1.zyzw, r3.w
    dp3_pp r6.y, c8, r2
    dp3_pp r6.z, c8, r0
    dp2add_pp r1.x, c9.xzzw, r1.zyzw, r3.w
    dp3_pp r1.y, c9, r2
    dp3_pp r1.z, c9, r0
    add r0.xyz, c12, v3
    mad r2.xy, vPos, c13, c13.zwzw
    mul r2.xy, r2, v3.w
    nrm_pp r7.xyz, r4
    mad_sat_pp r0.w, c10.x, v3.w, c10.y
    texld_pp r4, v0, s2
    mad_pp r3.xyw, r4.xyzz, c6.x, c6.y
    mul_pp r4.xy, c15, v0
    texld_pp r8, r4, s3
    mad_pp r8.xyz, r8, c6.x, c6.y
    texld_pp r9, r4, s4
    add_pp r1.w, r9.w, c20.x
    frc_pp r4.x, -r1.w
    add_sat_pp r1.w, r1.w, r4.x
    cmp_pp r3.xyw, -r1.w, r3, r8.xyzz
    nrm_pp r4.xyz, r3.xyww
    dp3_pp r1.w, r4, r7
    mul_pp r3.xyw, r1.w, r4.xyzz
    mad_pp r3.xyw, r3, c6.x, -r7.xyzz
    texld_pp r7, v0, s6
    mad_pp r4.xyz, r9.w, -r7, r7
    mad_pp r4.xyz, r4, c5.w, c5
    mad_pp r4.w, r9.w, -r4.w, r4.w
    texld_pp r7, v0, s5
    mul_pp r8.xyz, r7, c16
    texld_pp r10, v0, s4
    mad_pp r7.xyz, c16, -r7, r10
    mad_pp r7.xyz, r9.w, r7, r8
    add_pp r8.xyz, r3.z, -c14
    mul_pp r7.xyz, r7, r8
    mad_pp r7.xyz, r7, c4.w, c4
    dp3_pp r5.x, r5, r3.xyww
    dp3_pp r5.y, r6, r3.xyww
    dp3_pp r5.z, r1, r3.xyww
    add r0.xyz, r0, -c11
    mad_pp r3.xyz, c0.w, r0, r5
    mad_pp r3.w, c10.z, r4.w, c10.w
    texldl_pp r3, r3, s1
    mov_sat_pp r1.w, r1.w
    max_pp r0.xyz, r4.w, r4
    mad_pp r1.x, r1.w, c20.y, c20.z
    mul_pp r1.x, r1.w, r1.x
    exp_pp r1.x, r1.x
    lrp_pp r5.xyz, r1.x, r0, r4
    mul_pp r0.xyz, r3, r5
    mul_pp r0.xyz, r0, c0
    mad_pp r0.xyz, r0.w, r0, c14
    texld r1, v1, s8
    mul_pp r1.xyz, r1, c19
    mad_pp r0.xyz, r1, r7, r0
    mul r1.xyz, r7, c17
    mad_pp r0.xyz, r1, c18.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r1, c21, s0
      add r1.y, -r1.y, v3.w
      mad r2.z, r1.x, r1.y, r2.x
      mov r2.w, v3.w
      mov r1.xyz, r2.zyww
    else
      mov r1.xyz, c6.w
    endif
    mov r2.z, v3.w
    cmp r1.xyz, -r0.w, r2, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s9
    mul_pp oC0.xyz, r0, r1.x
    rcp r0.x, v3.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 112 instruction slots used (12 texture, 100 arithmetic)
