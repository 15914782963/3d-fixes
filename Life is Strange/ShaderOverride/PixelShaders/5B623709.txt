//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DebugMode[5];
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   sampler2D MipTextureParameter;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_4;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEResolution             c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DebugMode                 c7       5
//   UniformPixelVector_0      c12      1
//   UniformPixelVector_1      c13      1
//   UniformPixelVector_2      c14      1
//   UniformPixelVector_3      c15      1
//   UniformPixelVector_4      c16      1
//   UniformPixelVector_5      c17      1
//   UniformPixelVector_6      c18      1
//   UniformPixelScalars_0     c19      1
//   UniformPixelScalars_1     c20      1
//   UniformPixelScalars_2     c21      1
//   UniformPixelScalars_4     c22      1
//   SceneColorTexture         s0       1
//   NvStereoFixTexture        s1       1
//   PixelTexture2D_0          s2       1
//   PixelTexture2D_1          s3       1
//   PixelTexture2D_2          s4       1
//   MipTextureParameter       s5       1
//

    ps_3_0
    def c6, 0.300000012, 0.589999974, 0.109999999, 9.99999975e-006
    def c23, 0.0625, 0, 100000, 0
    def c24, 1, 0, 0.5, 9.99999997e-007
    def c25, 2, 1, -0, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord3_pp v3
    dcl_texcoord7 v4.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_5B623709_359.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mul r0, r0.x, v1.yzxy
    dp3_pp r1.x, v0, v0
    rsq_pp r1.x, r1.x
    mul r1, r1.x, v0.zyyx
    mul_pp r2.xy, r0.ywzw, r1.zwzw
    mad_pp r1.yz, r0.xxzw, r1.xxyw, -r2.xxyw
    mul r2.xy, r1.yzzw, v1.w
    mad r1.yz, vPos.xxyw, c0.xxyw, c0.xzww
    mul r3.xy, r1.yzzw, v4.w
    texld r4, v2, s5
    mad r4, r4.xyzx, c24.xxxy, c24.yyyx
    mul r5, r4, c7.y
    mad r4, c7.x, r4, r5
    mov r5.zw, c7
    mul r6.xyz, r5.z, c4
    mov r6.w, c7.z
    add r4, r4, r6
    mad r4, r5.w, c24.zzxx, r4
    mov r5.xy, c24
    mad r4, c8.x, r5.yxyx, r4
    mov r1.y, c8.y
    mul r6.xyz, r1.y, c5
    mov r6.w, c8.y
    add r4, r4, r6
    rcp r0.w, v4.w
    mul r1.yz, r0.w, r3.xxyw
    mad r1.yz, r1, c1.xxyw, c1.xwzw
    texld r6, r1.yzzw, s0
    max r7.xyz, r6_abs, c24.w
    log r6.x, r7.x
    log r6.y, r7.y
    log r6.z, r7.z
    mul r6.xyz, r6, c19.x
    exp r7.x, r6.x
    exp r7.y, r6.y
    exp r7.z, r6.z
    add r6.xyz, r7, c19.y
    rcp r0.w, c19.z
    mul r8.xyz, r0.w, r6
    dp3 r1.y, r8, c6
    mad r6.xyz, r6, -r0.w, r1.y
    mad r6.xyz, c19.w, r6, r8
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r8, c23, s1
      add r1.y, -r8.y, v4.w
      mad r3.z, r8.x, r1.y, r3.x
      mov r3.w, v4.w
      mov r8.xyz, r3.zyww
    else
      mov r8.xyz, c24.y
    endif
    mov r3.z, v4.w
    cmp r3.xyz, -r0.w, r3, r8
    rcp r0.w, r3.z
    mul r1.yz, r0.w, r3.xxyw
    mad r3.xy, r1.yzzw, c1, c1.wzzw
    mov r3.zw, c24.y
    texldl r3, r3, s0
    add r0.w, r3.w, -c2.y
    add r1.y, -r0.w, c6.w
    rcp r0.w, r0.w
    cmp r0.w, r1.y, c23.z, r0.w
    add r1.y, -c20.x, v4.w
    mad r0.w, c2.x, r0.w, -r1.y
    rcp r1.y, c20.y
    mul_sat r0.w, r0.w, r1.y
    add r1.yz, -c24.z, v2.xxyw
    dp2add r3.x, c14, r1.yzzw, r5.y
    dp2add r3.y, c15, r1.yzzw, r5.y
    add r3.xy, r3, c24.z
    mul r3.xy, r3, c21.w
    texld r3, r3, s2
    dp2add r8.x, c16, r1.yzzw, r5.y
    dp2add r8.y, c17, r1.yzzw, r5.y
    add r1.yz, r8.xxyw, c24.z
    mul r1.yz, r1, c21.w
    texld r8, r1.yzzw, s2
    max r1.y, r3.x, r8.x
    mul r1.y, r1.y, v3.x
    mad r1.y, r0.w, v3.x, r1.y
    mul r1.y, r1.y, c22.x
    texld r3, r1.y, s3
    mul r1.yz, c22.y, v2.xxyw
    add r1.yz, r1, r1
    texld r8, r1.yzzw, s4
    mad r1.y, r8.y, c25.x, c25.y
    add r1.z, -c24.w, v3_abs.x
    pow r3.y, v3_abs.x, r1.y
    cmp r1.y, r1.z, r3.y, c24.y
    add_sat r1.y, r1.y, r3.x
    mul r1.z, r0.w, r1.y
    mad r0.w, r0.w, r1.y, -c24.w
    pow r3.x, r1.z, c22.z
    cmp r0.w, r0.w, r3.x, c24.y
    mad r3.xyz, r6, c13, -r7
    mad_sat r3.xyz, r0.w, r3, r7
    max r6.xyz, r3, c24.w
    log r3.x, r6.x
    log r3.y, r6.y
    log r3.z, r6.z
    mul r3.xyz, r3, c18
    exp r6.x, r3.x
    exp r6.y, r3.y
    exp r6.z, r3.z
    add_pp r3.xyz, r6, c12
    mov r3.w, c24.x
    mad r3, c8.z, r3, r4
    mov_pp r2.z, r1.x
    mov_pp r2.w, r0.y
    mad r4.xyz, r2.zyww, c24.z, c24.z
    mov r4.w, c24.x
    mad r3, c8.w, r4, r3
    mov r0.x, r1.w
    mov r0.y, r2.x
    mad r0.xyz, r0, c24.z, c24.z
    mov r0.w, c24.x
    mad r0, c9.x, r0, r3
    mad r1, v3.xyzx, c24.xxxy, c24.yyyx
    mad r0, c9.y, r1, r0
    mad r1, v3.wwwx, c24.xxxy, c24.yyyx
    mad r0, c9.z, r1, r0
    mov r1.w, c9.w
    mad r0, r1.w, c25.zzwy, r0
    mad r0, c10.x, r5.yyyx, r0
    mad r0, c10.y, r5.yyyx, r0
    mad r0, c10.z, r5.yyyx, r0
    mad r0, c10.w, r5.yyyx, r0
    mad r0, c11.x, r5.yyyx, r0
    mad r0, c11.y, r5.yyyx, r0
    mad r0, c11.z, r5.yyyx, r0
    mad oC0, c11.w, r5.yyyx, r0

// approximately 145 instruction slots used (9 texture, 136 arithmetic)
