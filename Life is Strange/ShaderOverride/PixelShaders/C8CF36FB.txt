//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 LightMapScale[2];
//   sampler2D LightMapTextures[2];
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEResolution             c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   LightMapScale             c7       2
//   UniformPixelVector_0      c9       1
//   UniformPixelVector_1      c10      1
//   UniformPixelVector_2      c11      1
//   UniformPixelVector_3      c12      1
//   UniformPixelVector_4      c13      1
//   UniformPixelVector_5      c14      1
//   UpperSkyColor             c15      1
//   AmbientColorAndSkyFactor  c16      1
//   LightMapTextures          s0       2
//   NvStereoFixTexture        s2       1
//   PixelTexture2D_0          s3       1
//   PixelTexture2D_1          s4       1
//   PixelTexture2D_2          s5       1
//   PixelTexture2D_3          s6       1
//   PixelTexture2D_4          s7       1
//   PixelTexture2D_5          s8       1
//   VAOBuffer                 s9       1
//

    ps_3_0
    def c6, 2, -1, 10, 1.52876604
    def c17, 1, -0.999899983, -1, 0.999899983
    def c18, 1, 0, 0.5, -9.99999997e-007
    def c19, 0.816496611, 0.577350259, 0, 0.0625
    def c20, -0.707106769, -0.408248305, 0.577350259, 0.707106769
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xy
    dcl_texcoord6 v2.xyz
    dcl_texcoord5 v3.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_C8CF36FB_359.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v3.w
    dp3_pp r1.x, v2, v2
    rsq_pp r1.x, r1.x
    mul_pp r1.yzw, r1.x, v2.xxyz
    texld_pp r2, v1, s3
    mad_pp r2.xyz, r2, c6.x, c6.y
    nrm_pp r3.xyz, r2
    dp3_pp r2.x, r3, r1.yzww
    mul_pp r2.xyz, r2.x, r3
    mad_pp r2.xyz, r2, c6.x, -r1.yzww
    mad_pp r1.y, r2.w, c6.z, c6.w
    exp_pp r1.y, r1.y
    texld_pp r4, v1, s7
    mov r5.y, c6.y
    add_pp r5.xyz, -r5.y, -c9
    mul_pp r4.xyz, r4, r5
    mad_pp r4.xyz, r4, c4.w, c4
    texld_pp r5, v1, s8
    mad_pp r5.xyz, r5, c5.w, c5
    mov r6.xy, c10
    mad_pp r6.xy, v1.yxzw, r6, c11
    add r7, r6.xxyy, c17.xyxy
    add r8, -r6.xxyy, c17.zwzw
    cmp_pp r6.zw, r8.xyyw, c18.x, c18.y
    cmp_pp r6.zw, r7.xyyw, r6, -c6.y
    mul r1.z, r6.w, r6.z
    rcp r9.x, c12.x
    rcp r9.y, c12.y
    mul_pp r6.zw, r6.xyxy, r9.xyxy
    texld_pp r9, r6.zwzw, s4
    add_pp r2.w, r6.y, c13.y
    texld_pp r10, r2.w, s5
    add_pp r2.w, r10.y, c18.z
    mul_pp r9.xyz, r9, r2.w
    texld_pp r6, r6, s6
    mul_pp r6.xyz, r9, r6.y
    mul_pp r6.xyz, r1.z, r6
    cmp_pp r6.xyz, r8.z, c18.y, r6
    cmp_pp r6.xyz, r7.z, r6, c18.y
    cmp_pp r6.xyz, r8.x, c18.y, r6
    cmp_pp r6.xyz, r7.x, r6, c18.y
    mad r1.x, v2.z, -r1.x, -c6.y
    cmp_pp r1.x, r1.w, r1_abs.x, -c6.y
    add r1.z, r1.x, c18.w
    mul r1.w, r1.x, r1.x
    mad_pp r1.x, r1.x, -r1.w, -c6.y
    cmp_pp r1.x, r1.z, r1.x, -c6.y
    mul_pp r1.xzw, r1.x, c14.xyyz
    mul_sat_pp r1.xzw, r1, r6.xyyz
    add_pp r1.xzw, r1, c9.xyyz
    dp2add_sat_pp r6.x, r3.yzzw, c19, c19.z
    dp3_sat_pp r6.y, r3, c20
    dp3_sat_pp r6.z, r3.yzxw, c20.yzww
    dp2add_sat_pp r3.x, r2.yzzw, c19, c19.z
    dp3_sat_pp r3.y, r2, c20
    dp3_sat_pp r3.z, r2.yzxw, c20.yzww
    mul_pp r2.xyz, r6, r6
    mad_pp r3.xyz, r1.y, r3, -r1.y
    exp_pp r6.x, r3.x
    exp_pp r6.y, r3.y
    exp_pp r6.z, r3.z
    texld r3, v0, s0
    mul_pp r3.xyz, r3, c7
    texld r7, v0, s1
    mul_pp r7.xyz, r7, c8
    dp3_pp r1.y, r7, r2
    mul_pp r2.xyz, r1.y, r3
    mul r3.xyz, r3, r5
    dp3_pp r1.y, r7, r6
    mul r3.xyz, r1.y, r3
    mad_pp r2.xyz, r4, r2, r3
    add_pp r1.xyz, r1.xzww, r2
    mul r2.xyz, r4, c15
    mad_pp r1.xyz, r2, c16.w, r1
    abs r1.w, c3.x
    if_ne c3.x, -c3.x
      texld r2, c19.wzzw, s2
      add r2.y, -r2.y, v3.w
      mad r0.z, r2.x, r2.y, r0.x
      mov r0.w, v3.w
      mov r2.xyz, r0.zyww
    else
      mov_pp r2.xyz, c18.y
    endif
    mov r0.z, v3.w
    cmp r0.xyz, -r1.w, r0, r2
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s9
    mul r0.yzw, r4.xxyz, c16.xxyz
    mad_pp oC0.xyz, r1, r0.x, r0.yzww
    rcp r0.x, v3.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 101 instruction slots used (10 texture, 91 arithmetic)
