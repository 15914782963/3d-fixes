//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 LightMapScale[2];
//   sampler2D LightMapTextures[2];
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEResolution             c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   LightMapScale             c7       2
//   UniformPixelVector_0      c9       1
//   UpperSkyColor             c10      1
//   AmbientColorAndSkyFactor  c11      1
//   LightMapTextures          s0       2
//   NvStereoFixTexture        s2       1
//   PixelTexture2D_0          s3       1
//   VAOBuffer                 s4       1
//

    ps_3_0
    def c6, 4097, 0.333333343, 0.0625, 0
    def c12, 0, 2, 0.816496611, 0.577350259
    def c13, -0.707106769, -0.408248305, 0.577350259, 0.707106769
    dcl_texcoord6 v0.xyz
    dcl_texcoord5 v1.w
    dcl_texcoord v2.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_86BF15EC_8551.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v1.w
    nrm_pp r1.xyz, v0
    mad_pp r1.xyz, r1.z, c12.xxyw, -r1
    add_pp r2.xyz, c5, c5.w
    rcp r1.w, v1.w
    mul r3.xy, r0, r1.w
    mad r3.xy, r3, c1, c1.wzzw
    texld r3, r3, s3
    add_pp r3.xyz, r3, c9
    dp2add_sat_pp r2.w, r1.yzzw, c12.zwzw, c12.x
    dp3_sat_pp r3.w, r1, c13
    dp3_sat_pp r1.x, r1.yzxw, c13.yzww
    log_pp r4.x, r2.w
    log_pp r4.y, r3.w
    log_pp r4.z, r1.x
    mul_pp r1.xyz, r4, c6.x
    exp_pp r4.x, r1.x
    exp_pp r4.y, r1.y
    exp_pp r4.z, r1.z
    texld r5, v2, s0
    mul_pp r1.xyz, r5, c7
    texld r5, v2, s1
    mul_pp r5.xyz, r5, c8
    dp3_pp r2.w, r5, c6.y
    mul_pp r6.xyz, r1, r2.w
    mul r1.xyz, r1, r2
    dp3_pp r2.x, r5, r4
    mul r1.xyz, r1, r2.x
    mad_pp r1.xyz, c4, r6, r1
    add_pp r1.xyz, r1, r3
    mov r2.xyz, c4
    mul r3.xyz, r2, c10
    mad_pp r1.xyz, r3, c11.w, r1
    abs r2.w, c3.x
    if_ne c3.x, -c3.x
      texld r3, c6.zwzw, s2
      add r3.y, -r3.y, v1.w
      mad r0.z, r3.x, r3.y, r0.x
      mov r0.w, v1.w
      mov r3.xyz, r0.zyww
    else
      mov r3.xyz, c12.x
    endif
    mov r0.z, v1.w
    cmp r0.xyz, -r2.w, r0, r3
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s4
    mul r0.yzw, r2.xxyz, c11.xxyz
    mad_pp oC0.xyz, r1, r0.x, r0.yzww
    mad oC0.w, c2.x, r1.w, c2.y

// approximately 58 instruction slots used (5 texture, 53 arithmetic)
