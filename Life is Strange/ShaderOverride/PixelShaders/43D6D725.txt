//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float2 DistanceFadeParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   sampler2D WarpFunctionTexture;
//   bool bEnableDistanceShadowFading;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   bEnableDistanceShadowFading  b1       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   DNEResolution                c8       1
//   UniformPixelVector_0         c9       1
//   LightColorAndFalloffExponent c10      1
//   DistanceFadeParameters       c11      1
//   ShadowWarpFunctionTexture    s0       1
//   WarpFunctionTexture          s1       1
//   NvStereoFixTexture           s2       1
//   LightAttenuationTexture      s3       1
//   PixelTexture2D_0             s4       1
//   PixelTexture2D_1             s5       1
//   PixelTexture2D_3             s6       1
//   PixelTexture2D_4             s7       1
//

    ps_3_0
    def c2, 2, -1, 10, 1.52876604
    def c6, 1, 0.5, 0.0625, 0
    def c12, 0.600000024, 0.400000006, 0.0299999993, 0.125
    def c13, 0.693147004, 2, 0.0280000009, 0
    def c14, -5.55472994, -6.98316002, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord6 v2.xyz
    dcl_texcoord7 v3
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_43D6D725_6953976.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v2, v2
    rsq_pp r0.x, r0.x
    mad_sat_pp r0.y, c7.x, v3.w, c7.y
    mul_pp r0.y, r0.y, c0.x
    texld_pp r1, v0, s4
    mad_pp r1.xyz, r1, c2.x, c2.y
    nrm_pp r2.xyz, r1
    nrm_pp r1.xyz, v1
    mad_pp r0.xzw, v2.xyyz, r0.x, r1.xyyz
    nrm_pp r3.xyz, r0.xzww
    mad_pp r0.x, r1.w, c2.z, c2.w
    exp_pp r0.x, r0.x
    texld_pp r4, c6, s0
    if b0
      mad r0.zw, vPos.xyxy, c8.xyxy, c8
      mul r5.xy, r0.zwzw, v3.w
      if_ne c3.x, -c3.x
        texld r6, c6.zwzw, s2
        add r0.z, -r6.y, v3.w
        mad r5.z, r6.x, r0.z, r5.x
        mov r5.xy, r5.zyzw
        mov r0.z, v3.w
      else
        mov r0.z, v3.w
      endif
      rcp r0.z, r0.z
      mul r0.zw, r0.z, r5.xyxy
      mad r0.zw, r0, c1.xyxy, c1.xywz
      texld r5, r0.zwzw, s3
      mul_pp r4.yzw, r5.xxyz, r5.xxyz
      if b1
        dp3 r0.z, v3, v3
        rsq r0.z, r0.z
        rcp r0.z, r0.z
        add r0.z, -r0.z, c11.x
        mul_sat_pp r0.z, r0.z, c11.y
        mul_pp r0.z, r0.z, r0.z
        mad_pp r0.w, r5.w, r5.w, -r4.x
        mad_pp r5.xyz, r0.z, r0.w, r4.x
      else
        mov_pp r5.xyz, r4.x
      endif
      mul_pp r4.yzw, r4, r5.xxyz
    else
      mov_pp r4.yzw, r4.x
    endif
    texld_pp r5, v0, s6
    mad_pp r5.xyz, r5, c5.w, c5
    texld_pp r6, v0, s5
    mov r7.y, c2.y
    add_pp r7.xyz, -r7.y, -c9
    mul_pp r6.xyz, r6, r7
    mad_pp r6.xyz, r6, c4.w, c4
    texld_pp r7, v0, s7
    dp3_sat_pp r7.x, r2, r1
    mov_pp r7.y, c6.y
    texld_pp r8, r7, s1
    mov_sat_pp r0.z, r1.z
    lrp_pp r9.xy, c12, r0.z, r8.x
    add_pp r0.z, r9.x, c12.z
    add r0.w, -r9.y, r0.z
    cmp_pp r9.z, r0.w, r9.y, r0.z
    lrp_pp r10.xyz, r7.z, r9.xzzw, r8.x
    mul_pp r8.xyz, r10, c0.w
    mov_sat_pp r0.z, c0.y
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    dp3_sat_pp r0.z, r2, r3
    mad_pp r0.w, r0.x, c13.x, c13.y
    mul_pp r0.w, r0.w, c12.w
    mad r0.x, r0.x, r0.z, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r0.w
    mul_pp r0.x, r7.x, r0.x
    mul_pp r0.x, r0.y, r0.x
    lrp_pp r0.yzw, r7.z, c13.z, r5.xxyz
    add_pp r1.w, -r7.z, -c2.y
    mul_pp r0.x, r0.x, r1.w
    dp3_sat_pp r1.x, r1, r3
    mad_pp r1.y, r1.x, c14.x, c14.y
    mul_pp r1.x, r1.x, r1.y
    exp_pp r1.x, r1.x
    lrp_pp r2.xyz, r1.x, -c2.y, r0.yzww
    mul_pp r0.xyz, r0.x, r2
    mad_pp r0.xyz, r6, r8, r0
    mul_pp r0.xyz, r4.yzww, r0
    mul oC0.xyz, r0, c10
    mov_pp oC0.w, c6.w

// approximately 100 instruction slots used (8 texture, 92 arithmetic)
