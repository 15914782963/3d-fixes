//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   DNEResolution                c8       1
//   UniformPixelVector_0         c9       1
//   UniformPixelVector_1         c10      1
//   UniformPixelVector_2         c11      1
//   UniformPixelVector_3         c12      1
//   LightColorAndFalloffExponent c13      1
//   UpperSkyColor                c14      1
//   AmbientColorAndSkyFactor     c15      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   PixelTexture2D_0             s2       1
//   PixelTexture2D_1             s3       1
//   VAOBuffer                    s4       1
//

    ps_3_0
    def c6, 2, -1, 10, 1.52876604
    def c16, -0.333299994, 0.0625, 0, 0.125
    def c17, 1, 0.5, 0.693147004, 2
    def c18, -5.55472994, -6.98316002, 0, 0
    dcl_texcoord4 v0.xyz
    dcl_texcoord6 v1.xyz
    dcl_texcoord7_pp v2.xyz
    dcl_texcoord5 v3.w
    dcl_texcoord v4.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_58137576_366.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c8, c8.zwzw
    mul r0.xy, r0, v3.w
    dp3_pp r1.x, v1, v1
    rsq_pp r1.x, r1.x
    mad_sat_pp r1.y, c7.x, v3.w, c7.y
    mul_pp r1.y, r1.y, c0.x
    texld_pp r2, v4, s2
    mad_pp r2.xyz, r2, c6.x, c6.y
    nrm_pp r3.xyz, r2
    nrm_pp r2.xyz, v0
    mad_pp r1.xzw, v1.xyyz, r1.x, r2.xyyz
    nrm_pp r4.xyz, r1.xzww
    mad_pp r1.x, r2.w, c6.z, c6.w
    exp_pp r1.x, r1.x
    texld_pp r5, v4, s3
    add_pp r6, r5.w, c16.x
    texkill r6
    mul_pp r6.xyz, c11, v2.y
    mad_pp r6.xyz, v2.x, c10, r6
    mad_pp r6.xyz, v2.z, c12, r6
    mul_pp r5.xyz, r5, r6
    mov r6.y, c6.y
    add_pp r6.xyz, -r6.y, -c9
    mul_pp r6.xyz, r5, r6
    mad_pp r6.xyz, r6, c4.w, c4
    mad_pp r5.xyz, r5, c5.w, c5
    mul r7.xyz, r6, c14
    mov_pp r1.w, c15.w
    mad_pp r7.xyz, r7, r1.w, c9
    abs r1.z, c3.x
    if_ne c3.x, -c3.x
      texld r8, c16.yzzw, s1
      add r1.w, -r8.y, v3.w
      mad r0.z, r8.x, r1.w, r0.x
      mov r0.w, v3.w
      mov r8.xyz, r0.zyww
    else
      mov r8.xyz, c16.z
    endif
    mov r0.z, v3.w
    cmp r0.xyz, -r1.z, r0, r8
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s4
    texld_pp r8, c17, s0
    dp3_sat_pp r0.y, r3, r2
    mul_pp r0.z, r0.y, c0.w
    mov_sat_pp r0.w, c0.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.x, r0.w
    dp3_sat_pp r1.x, r3, r4
    mad_pp r1.z, r0.w, c17.z, c17.w
    mul_pp r1.z, r1.z, c16.w
    mad r0.w, r0.w, r1.x, -r0.w
    exp_pp r0.w, r0.w
    mul_pp r0.w, r0.w, r1.z
    mul_pp r0.y, r0.y, r0.w
    mul_pp r0.y, r1.y, r0.y
    dp3_sat_pp r0.w, r2, r4
    mad_pp r1.x, r0.w, c18.x, c18.y
    mul_pp r0.w, r0.w, r1.x
    exp_pp r0.w, r0.w
    lrp_pp r1.xyz, r0.w, -c6.y, r5
    mul_pp r1.xyz, r0.y, r1
    mad_pp r0.yzw, r6.xxyz, r0.z, r1.xxyz
    mul_pp r0.yzw, r8.x, r0
    mul_pp r0.yzw, r0, c13.xxyz
    mad_pp r0.xyz, r7, r0.x, r0.yzww
    mad_pp oC0.xyz, r6, c15, r0
    rcp r0.x, v3.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 80 instruction slots used (5 texture, 75 arithmetic)
