//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float3 DecalLocalBinormal;
//   float3 DecalLocalTangent;
//   float4 DiffuseOverrideParameter;
//   sampler2D HeightmapTexture;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEResolution             c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   UniformPixelVector_0      c7       1
//   DecalLocalBinormal        c8       1
//   DecalLocalTangent         c9       1
//   UpperSkyColor             c10      1
//   AmbientColorAndSkyFactor  c11      1
//   NvStereoFixTexture        s0       1
//   PixelTexture2D_0          s1       1
//   HeightmapTexture          s2       1
//   VAOBuffer                 s3       1
//

    ps_3_0
    def c6, 2, -1, 1, 0
    def c12, 0.816496611, 0.577350259, 0, 0.0625
    def c13, 20, 0.5, 0.333333343, 0
    def c14, -0.707106769, -0.408248305, 0.577350259, 0.707106769
    dcl_texcoord2_pp v0.xyz
    dcl_texcoord3_pp v1.xyz
    dcl_texcoord6 v2.xyz
    dcl_texcoord5 v3.w
    dcl_texcoord v4.xy
    dcl_texcoord1 v5.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_DBB2361C_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    texld r0, v4, s2
    mad r0.xz, r0.wyzw, c6.x, c6.y
    dp2add r1.x, r0.zxzw, -r0.zxzw, c6.z
    rsq r1.x, r1.x
    rcp r0.y, r1.x
    mul r1.xyz, r0.zxyw, c9.zxyw
    mad r1.xyz, r0.yzxw, c9, -r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul r1.xyz, r1.w, r1
    mul r2.xyz, r0.yzxw, r1
    mad r1.xyz, r0, r1.yzxw, -r2
    mul r2.xyz, r0.zxyw, c8.zxyw
    mad r2.xyz, r0.yzxw, c8, -r2
    dp3 r1.w, r2, r2
    rsq r1.w, r1.w
    mul r2.xyz, r1.w, r2
    mul r3.xyz, r0.yzxw, r2
    mad r2.xyz, r0, r2.yzxw, -r3
    nrm r3.xyz, v2
    dp3_pp r4.y, r1, r3
    dp3_pp r4.z, r2, r3
    dp3_pp r4.w, r0.zxyw, r3
    mad r3.xy, vPos, c0, c0.zwzw
    mul r3.xy, r3, v3.w
    dp3_pp r1.w, r4.yzww, r4.yzww
    rsq_pp r1.w, r1.w
    mul_pp r4.xyz, r1.w, r4.yzww
    mad_pp r4.yzw, r4.z, c6.xwwx, -r4.xxyz
    mul r5.xy, c13.x, v5
    texld r5, r5, s1
    mov r6.z, c6.z
    add r6.xyz, r6.z, -c7
    mul_pp r6.xyz, r5, r6
    mad_pp r6.xyz, r6, c4.w, c4
    mov r7.y, c13.y
    mad_pp r5.xyz, r5, r7.y, c7
    mov r0.w, -r0.z
    dp2add r0.w, r0.ywzw, r0.ywzw, c6.w
    rsq r0.w, r0.w
    mul r7.z, r0.w, r0.y
    mov r7.x, c6.w
    mul r7.y, r0.w, -r0.z
    mul r8.xyz, r0.yzxw, r7
    mad r8.xyz, r0, r7.yzxw, -r8
    mov r9.z, r8.y
    mov r9.x, r0.x
    mov r9.y, c6.w
    mov r10.y, r0.y
    mov r10.z, r7.y
    mov r10.x, r8.z
    mul r11.xyz, r9, r10
    mad r9.xyz, r9.zxyw, r10.yzxw, -r11
    mov r0.x, r7.z
    mov r0.y, r8.x
    dp3 r0.x, r9, r0
    mul r0.xyz, r0.x, r8
    nrm r8.xyz, r0
    dp2add_pp r0.x, r7.zyzw, r1.xzzw, c6.w
    dp2add_pp r0.y, r7.zyzw, r2.xzzw, c6.w
    dp3_pp r1.x, r8, r1
    dp3_pp r1.y, r8, r2
    dp2add_pp r0.x, r4.yzzw, r0, c6.w
    dp2add_pp r4.x, r4.yzzw, r1, c6.w
    dp2add_sat_pp r1.x, r4.xwzw, c12, c12.z
    mov_pp r0.yz, r4.xxww
    dp3_sat_pp r1.y, r0, c14
    dp3_sat_pp r1.z, r0.yzxw, c14.yzww
    mul_pp r0.xyz, r1, r1
    mul_pp r0.xyz, r0, r0
    mul_pp r0.xyz, r0, r0
    mul_pp r0.xyz, r0, r0
    dp3_pp r0.w, v1, c13.z
    mul_pp r1.xyz, r0.w, v0
    mul r2.xyz, c5, v0
    dp3_pp r0.x, v1, r0
    mul r0.xyz, r0.x, r2
    mad_pp r0.xyz, r6, r1, r0
    add_pp r0.xyz, r0, r5
    mul r1.xyz, r6, c10
    mad_pp r0.xyz, r1, c11.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r1, c12.wzzw, s0
      add r1.y, -r1.y, v3.w
      mad r3.z, r1.x, r1.y, r3.x
      mov r3.w, v3.w
      mov r1.xyz, r3.zyww
    else
      mov r1.xyz, c6.w
    endif
    mov r3.z, v3.w
    cmp r1.xyz, -r0.w, r3, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s3
    mul r1.yzw, r6.xxyz, c11.xxyz
    mad_pp oC0.xyz, r0, r1.x, r1.yzww
    rcp r0.x, v3.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 114 instruction slots used (4 texture, 110 arithmetic)
