//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   DNEResolution            c0       1
//   ScreenPositionScaleBias  c1       1
//   MinZ_MaxZRatio           c2       1
//   NvStereoEnabled          c3       1
//   DiffuseOverrideParameter c4       1
//   UniformPixelVector_0     c7       1
//   UniformPixelScalars_0    c8       1
//   UpperSkyColor            c9       1
//   AmbientColorAndSkyFactor c10      1
//   NvStereoFixTexture       s0       1
//   PixelTexture2D_2         s1       1
//   PixelTexture2D_3         s2       1
//   PixelTexture2D_4         s3       1
//   PixelTexture2D_5         s4       1
//   VAOBuffer                s5       1
//

    ps_3_0
    def c5, 1, 0.0625, 0, 0
    dcl_texcoord2_pp v0.xyz
    dcl_texcoord5 v1.w
    dcl_texcoord v2
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_64F4E329_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v1.w
    texld r1, v2, s3
    texld r2, v2, s4
    texld r3, v2.wzzw, s1
    lrp r4.xyz, r3.w, r2, r1
    mul r1.xyz, r3, r4
    mov r2.x, c5.x
    add r2.xyz, r2.x, -c7
    mul_pp r1.xyz, r1, r2
    mad_pp r1.xyz, r1, c4.w, c4
    texld r2, v2, s2
    mov r3.xyz, c7
    mad_pp r2.xyz, c8.x, r2, r3
    mad_pp r2.xyz, v0, r1, r2
    mul r1.xyz, r1, c9
    mad_pp r1.xyz, r1, c10.w, r2
    abs r1.w, c3.x
    if_ne c3.x, -c3.x
      texld r2, c5.yzzw, s0
      add r2.y, -r2.y, v1.w
      mad r0.z, r2.x, r2.y, r0.x
      mov r0.w, v1.w
      mov r2.xyz, r0.zyww
    else
      mov r2.xyz, c5.z
    endif
    mov r0.z, v1.w
    cmp r0.xyz, -r1.w, r0, r2
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s5
    mul_pp oC0.xyz, r0.x, r1
    rcp r0.x, v1.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 38 instruction slots used (6 texture, 32 arithmetic)
