//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//   float4 UniformPixelVector_7;
//   float4 UniformPixelVector_8;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   CameraWorldPos               c8       1
//   DNEResolution                c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelVector_1         c11      1
//   UniformPixelVector_2         c12      1
//   UniformPixelVector_3         c13      1
//   UniformPixelVector_4         c14      1
//   UniformPixelVector_5         c15      1
//   UniformPixelVector_6         c16      1
//   UniformPixelVector_7         c17      1
//   UniformPixelVector_8         c18      1
//   UniformPixelScalars_0        c19      1
//   LightColorAndFalloffExponent c20      1
//   SpotDirection                c21      1
//   SpotAngles                   c22      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//   PixelTexture2D_4             s7       1
//   PixelTexture2D_5             s8       1
//

    ps_3_0
    def c2, 3.12500015e-005, 0.100000001, 0.449999988, 4
    def c6, 150, 300, -0.5, 0.0399999991
    def c23, 0.581683099, -0.813415468, 0, 0.813415468
    def c24, 0.300000012, 0.200000003, 10, 1.52876604
    def c25, 0.0625, 0, 0.87758255, -0.47942555
    def c26, -0.5, 0.315322369, 0.948984623, 0
    def c27, -0.948984623, 0.315322369, 0, 5.8707843e-005
    def c28, 1, 2.73285004e-005, 0.800000012, 0.5
    def c29, 0.849999964, 0.400000006, 1.78650999, 7.15698195
    def c30, 2.5, -9.99999997e-007, 0.693147004, 2
    def c31, 0.129870132, 0.5, 6.28318548, -3.14159274
    def c32, 1.39999998, 1.29999995, 0.100000001, 0.200000003
    def c33, 0.125, -5.55472994, -6.98316002, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5 v2.xyz
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_A927BC21_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    add r0.xy, c8, v4
    nrm_pp r1.xyz, v3
    mad_sat_pp r0.z, c7.x, v4.w, c7.y
    mul_pp r0.z, r0.z, c0.x
    add_pp r0.xy, r0, c26.x
    dp2add_pp r2.x, c26.yzzw, r0, c26.w
    dp2add_pp r2.y, c27, r0, c27.z
    add_pp r2, r2.xyxy, -c26.x
    mov r0.w, c27.w
    mad_pp r2.xy, r2, r0.w, c11
    texld_pp r3, r2, s3
    dp2add_pp r0.w, r3, -r3, c28.x
    max_pp r1.w, r0.w, c26.w
    rsq_pp r0.w, r1.w
    rcp_pp r3.z, r0.w
    mov r4.xy, c28
    mad_pp r2.zw, r2, r4.y, c12.xyxy
    texld_pp r5, r2.zwzw, s3
    dp2add_pp r0.w, r5, -r5, c28.x
    max_pp r1.w, r0.w, c26.w
    rsq_pp r0.w, r1.w
    rcp_pp r5.z, r0.w
    mad_pp r3.xyz, r5, -c28.z, r3
    nrm_pp r5.xyz, r3
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mul_pp r3.xyz, r0.w, v1
    mad_pp r4.yzw, v1.xxyz, r0.w, r1.xxyz
    nrm_pp r6.xyz, r4.yzww
    mad_pp r1.zw, v0.xyxy, c6.xyxy, c6.z
    dp2add_pp r7.x, c23, r1.zwzw, c23.z
    dp2add_pp r7.y, c23.wxzw, r1.zwzw, c23.z
    add_pp r1.zw, r7.xyxy, c18.xyxy
    add_pp r1.zw, r1, -c26.x
    texld_pp r7, r1.zwzw, s8
    mad_pp r0.w, r7.x, c24.x, c24.y
    mad_pp r0.w, r0.w, c24.z, c24.w
    exp_pp r0.w, r0.w
    dp3 r1.z, v2, v2
    rsq r1.w, r1.z
    mul r4.yzw, r1.w, v2.xxyz
    dp3 r1.w, r4.yzww, -c21
    add r1.w, r1.w, -c22.x
    mul_sat r1.w, r1.w, c22.y
    mul_pp r7.x, r1.w, r1.w
    texld_pp r8, c28.xwzw, s0
    mov r7.yw, -c26.x
    texld_pp r9, r7, s0
    add r1.w, -r1.z, c28.x
    mul r1.w, r8.x, r1.w
    mul r10, r9.x, r1.w
    mov r11, r10
    texkill r11
    if b0
      mad r4.yz, vPos.xxyw, c9.xxyw, c9.xzww
      mul r10.xy, r4.yzzw, v4.w
      if_ne c3.x, -c3.x
        texld r11, c25, s1
        add r1.w, -r11.y, v4.w
        mad r10.z, r11.x, r1.w, r10.x
        mov r10.xy, r10.zyzw
        mov r1.w, v4.w
      else
        mov r1.w, v4.w
      endif
      rcp r1.w, r1.w
      mul r4.yz, r1.w, r10.xxyw
      mad r4.yz, r4, c1.xxyw, c1.xwzw
      texld r11, r4.yzzw, s2
      mul_pp r4.yzw, r11.xxyz, r11.xxyz
      mul_pp r4.yzw, r4, r8.x
    else
      mov_pp r4.yzw, r8.x
    endif
    mov r1.w, c6.w
    mad_pp r8.xyz, c5.w, r1.w, c5
    mov_sat r1.z, r1.z
    add r1.z, -r1.z, c28.x
    pow_sat_pp r7.z, r1.z, c20.w
    texld_pp r7, r7.zwzw, s0
    dp2add_pp r10.x, c25.zwzw, r0, c25.y
    dp2add_pp r10.y, c25_abs.wzzw, r0, c25_abs.y
    add_pp r0.xy, r10, -c26.x
    mul_pp r0.xy, r0, c2.x
    texld_pp r11, r2, s4
    texld_pp r2, r2.zwzw, s4
    add_pp r1.z, -r2.x, r11.x
    mul_pp r1.z, r1.z, c2.y
    mad_pp r0.xy, r1.z, r1, r0
    mov r1.zw, c2
    mad_pp r1.xy, r0, r1.z, c13
    texld_pp r2, r1, s5
    mad_pp r1.xy, r0, r1.z, c14
    texld_pp r11, r1, s5
    texld_pp r12, r0, s5
    mad_pp r1.x, r12.w, r1.w, c19.x
    mad_pp r1.x, r1.x, c31.x, c31.y
    frc_pp r1.x, r1.x
    mad_pp r1.x, r1.x, c31.z, c31.w
    sincos_pp r12.y, r1.x
    add_pp r1.x, r12.y, c28.x
    mul_pp r1.x, r1.x, -c26.x
    lrp_pp r3.w, r1.x, r11.w, r2.w
    mad_pp r1.y, r3.w, c29.x, c29.y
    add_pp r1.zw, r0.xyxy, c15.xyxy
    texld_pp r12, r1.zwzw, s6
    mov r1.zw, c29
    mad_pp r2.xy, r0, r1.z, c16
    texld_pp r13, r2, s6
    add_pp r1.z, r12.y, r13.y
    mad_pp r0.xy, r0, r1.w, c17
    texld_pp r12, r0, s6
    add_pp r0.x, r1.z, r12.y
    mul_pp r0.x, r0.x, r1.y
    mul_sat_pp r0.x, r0.x, c30.x
    add r0.y, r0.x, c30.y
    mul_pp r0.x, r0.x, r0.x
    cmp_pp r0.x, r0.y, r0.x, c26.w
    texld_pp r12, r0.x, s7
    lrp_pp r0.x, r1.x, r2.w, r11.w
    add_pp r0.x, -r0.x, c28.x
    mad_pp r1.xyz, r0.x, c32.xyxw, c32.zwzw
    mul_pp r1.xyz, r1, r12
    add_pp r2.xyz, r4.x, -c10
    mul_pp r1.xyz, r1, r2
    mad_pp r1.xyz, r1, c4.w, c4
    mul_pp r0.x, r9.x, r7.x
    dp3_sat_pp r0.y, r5, r3
    mul_pp r1.w, r0.y, c0.w
    mul_sat_pp r0.x, r0.x, c0.y
    mul_pp r0.x, r0.x, r0.x
    mul_pp r0.x, r0.w, r0.x
    dp3_sat_pp r0.w, r5, r6
    mad_pp r2.x, r0.x, c30.z, c30.w
    mul_pp r2.x, r2.x, c33.x
    mad r0.x, r0.x, r0.w, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r2.x
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.x, r0.z, r0.x
    dp3_sat_pp r0.y, r3, r6
    mad_pp r0.z, r0.y, c33.y, c33.z
    mul_pp r0.y, r0.y, r0.z
    exp_pp r0.y, r0.y
    lrp_pp r2.xyz, r0.y, c28.x, r8
    mul_pp r0.xyz, r0.x, r2
    mad_pp r0.xyz, r1, r1.w, r0
    mul_pp r0.xyz, r4.yzww, r0
    mul r0.xyz, r0, c20
    mul r0.xyz, r7.x, r0
    mul r0.xyz, r9.x, r0
    cmp oC0.xyz, -r10.w, c26.w, r0
    mov oC0.w, c26.w

// approximately 180 instruction slots used (17 texture, 163 arithmetic)
