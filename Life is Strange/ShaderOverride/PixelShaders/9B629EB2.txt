//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   DNEResolution                c8       1
//   UniformPixelScalars_0        c9       1
//   LightColorAndFalloffExponent c10      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//

    ps_3_0
    def c2, 1, 0.5, 0.0625, 0
    def c6, 0.200000003, 2954.63867, 2047.9989, 2
    def c11, 0.125, -5.55472994, -6.98316002, 0
    dcl_texcoord4_pp v0.xyz
    dcl_texcoord5 v1.xyz
    dcl_texcoord6 v2.xyz
    dcl_texcoord7 v3.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_9B629EB2_641.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v2, v2
    rsq_pp r0.x, r0.x
    mad_sat_pp r0.y, c7.x, v3.w, c7.y
    mul_pp r0.y, r0.y, c0.x
    nrm_pp r1.xyz, v0
    mad_pp r0.xzw, v2.xyyz, r0.x, r1.xyyz
    nrm_pp r2.xyz, r0.xzww
    texld_pp r3, c2, s0
    dp3 r0.x, v1, v1
    add r0.z, -r0.x, c2.x
    mul r4, r3.x, r0.z
    mov r5, r4
    texkill r5
    if b0
      mad r0.zw, vPos.xyxy, c8.xyxy, c8
      mul r4.xy, r0.zwzw, v3.w
      if_ne c3.x, -c3.x
        texld r5, c2.zwzw, s1
        add r0.z, -r5.y, v3.w
        mad r4.z, r5.x, r0.z, r4.x
        mov r4.xy, r4.zyzw
        mov r0.z, v3.w
      else
        mov r0.z, v3.w
      endif
      rcp r0.z, r0.z
      mul r0.zw, r0.z, r4.xyxy
      mad r0.zw, r0, c1.xyxy, c1.xywz
      texld r5, r0.zwzw, s2
      mul_pp r3.yzw, r5.xxyz, r5.xxyz
      mul_pp r3.yzw, r3, r3.x
    else
      mov_pp r3.yzw, r3.x
    endif
    add_pp r0.z, -c9.x, v3.w
    rcp r0.w, c9.y
    mul_sat_pp r0.z, r0.w, r0.z
    mul_pp r0.z, r0.z, c5.w
    mov r3.x, c6.x
    mad_pp r4.xyz, r0.z, r3.x, c5
    mov_sat r0.x, r0.x
    add r0.x, -r0.x, c2.x
    pow_sat_pp r5.x, r0.x, c10.w
    mov r5.y, c2.y
    texld_pp r5, r5, s0
    mov_sat_pp r0.x, r1.z
    mul_pp r0.z, r0.x, c0.w
    mul_sat_pp r0.w, r5.x, c0.y
    mul_pp r0.w, r0.w, r0.w
    mov_sat_pp r1.w, r2.z
    mul_pp r2.w, r0.w, c6.y
    mad_pp r0.w, r0.w, c6.z, c6.w
    mul_pp r0.w, r0.w, c11.x
    mad r1.w, r2.w, r1.w, -r2.w
    exp_pp r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    mul_pp r0.x, r0.x, r0.w
    mul_pp r0.x, r0.y, r0.x
    dp3_sat_pp r0.y, r1, r2
    mad_pp r0.w, r0.y, c11.y, c11.z
    mul_pp r0.y, r0.y, r0.w
    exp_pp r0.y, r0.y
    lrp_pp r1.xyz, r0.y, c2.x, r4
    mul_pp r0.xyw, r0.x, r1.xyzz
    mad_pp r0.xyz, c4, r0.z, r0.xyww
    mul_pp r0.xyz, r3.yzww, r0
    mul r0.xyz, r5.x, r0
    mul r0.xyz, r0, c10
    cmp oC0.xyz, -r4.w, c2.w, r0
    mov oC0.w, c2.w

// approximately 80 instruction slots used (4 texture, 76 arithmetic)
