//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   CameraWorldPos          c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   DNEResolution           c7       1
//   UniformPixelVector_0    c8       1
//   UniformPixelVector_1    c9       1
//   UniformPixelVector_2    c10      1
//   UniformPixelVector_3    c11      1
//   UniformPixelVector_4    c12      1
//   UniformPixelVector_5    c13      1
//   UniformPixelScalars_0   c14      1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//   PixelTexture2D_1        s3       1
//   PixelTexture2D_2        s4       1
//

    ps_3_0
    def c4, 0.0625, 0, 9.99999975e-006, 100000
    def c5, 1, 0.0850000009, 0.5, 0.800000012
    def c6, 0.150000006, 0.185000002, 1, 1.5
    dcl_texcoord4 v0
    dcl_texcoord6 v1.xyz
    dcl_texcoord7_pp v2.xyz
    dcl_texcoord5 v3
    dcl_color v4.xyz
    dcl_color1 v5
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_95B2F8B6_844.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v5
    nrm_pp r1.xyz, v4
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v5.w
    add r3.xyz, c0, v3
    mad r4.xy, vPos, c7, c7.zwzw
    mul r4.yz, r4.xxyw, v3.w
    nrm_pp r5.xyz, v1
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r6, c4, s1
      add r1.w, -r6.y, v3.w
      mad r4.x, r6.x, r1.w, r4.y
      mov r4.w, v3.w
      mov r6.xyz, r4.xzww
    else
      mov r6.xyz, c4.y
    endif
    mov r4.w, v3.w
    cmp r6.xyz, -r0.w, r4.yzww, r6
    rcp r1.w, r6.z
    mul r6.xy, r1.w, r6
    mad r6.xy, r6, c1, c1.wzzw
    mov r6.zw, c4.y
    texldl r6, r6, s0
    add r1.w, r6.w, -c2.y
    add r2.w, -r1.w, c4.z
    rcp r1.w, r1.w
    cmp r1.w, r2.w, c4.w, r1.w
    mad r1.w, c2.x, r1.w, -v3.w
    rcp r2.w, c14.x
    mul_sat r1.w, r1.w, r2.w
    rcp r6.x, c10.x
    rcp r6.y, c10.y
    rcp r6.z, c10.z
    mad r3.xyz, r3, r6, c11
    texld_pp r6, r3.yzzw, s2
    dp2add_pp r3.w, r6, -r6, c5.x
    max_pp r5.w, r3.w, c4.y
    rsq_pp r3.w, r5.w
    rcp_pp r6.z, r3.w
    mov_pp r7.x, r1.z
    mov_pp r7.y, r2.z
    mov_pp r7.z, r0.z
    dp3 r1.x, r1, r7
    dp3 r1.y, r2, r7
    dp3 r0.x, r0, r7
    texld_pp r7, r3.xzzw, s2
    dp2add_pp r0.y, r7, -r7, c5.x
    max_pp r1.z, r0.y, c4.y
    rsq_pp r0.y, r1.z
    rcp_pp r7.z, r0.y
    mul r2.xyz, r1_abs.y, r7
    mad r1.xyz, r1_abs.x, r6, r2
    texld_pp r3, r3, s2
    dp2add_pp r0.y, r3, -r3, c5.x
    max_pp r2.x, r0.y, c4.y
    rsq_pp r0.y, r2.x
    rcp_pp r3.z, r0.y
    mad r0.xyz, r0_abs.x, r3, r1
    nrm r1.xyz, r0
    dp3_sat r0.x, r5, r1
    add r0.x, -r0.x, c5.x
    add r0.y, c14.z, v2.x
    add r0.x, -r0.y, r0.x
    mul_sat r0.y, r0.x, r1.w
    texld r1, r0.y, s3
    max r0.y, r1.x, c4.y
    min r1.y, r0.y, c5.y
    rcp r0.y, v3.w
    mul r0.yz, r0.y, r4
    mad r0.yz, r0, c1.xxyw, c1.xwzw
    mul r2.x, r0.z, c5.z
    mov r1.w, c5.w
    mad r0.y, r0.y, r1.w, c12.x
    add r3.x, r0.y, c6.x
    add r3.y, r2.x, c12.y
    texld r3, r3, s4
    add r0.y, r3.x, -c5.x
    mad r0.y, r0.y, c6.y, c6.z
    mul r2.xyz, c13, v2
    mul r2.xyz, r0.y, r2
    mul r1.xzw, r1.x, r2.xyyz
    mad r1.xyz, r1.y, c9, r1.xzww
    add_pp r1.xyz, r1, c8
    if_ne c3.x, -c3.x
      texld r3, c4, s1
      add r0.y, -r3.y, v3.w
      mad r4.x, r3.x, r0.y, r4.y
      mov r2.xyz, r4.xzww
    else
      mov r2.xyz, c4.y
    endif
    cmp r0.yzw, -r0.w, r4, r2.xxyz
    rcp r0.w, r0.w
    mul r0.yz, r0.w, r0
    mad r3.xy, r0.yzzw, c1, c1.wzzw
    mov r3.zw, c4.y
    texldl r3, r3, s0
    add r0.y, r3.w, -c2.y
    add r0.z, -r0.y, c4.z
    rcp r0.y, r0.y
    cmp r0.y, r0.z, c4.w, r0.y
    mad r0.y, c2.x, r0.y, -v3.w
    mul_sat r0.y, r2.w, r0.y
    mul_sat r0.x, r0.x, r0.y
    texld r0, r0.x, s3
    mul_sat_pp oC0.w, r0.z, c6.w
    mad_pp oC0.xyz, r1, v0.w, v0

// approximately 127 instruction slots used (12 texture, 115 arithmetic)
