//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 LightMapScale[2];
//   sampler2D LightMapTextures[2];
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_4;
//   float4 UniformPixelScalars_5;
//   float4 UniformPixelScalars_6;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float3 UpperSkyColor;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   CameraWorldPos            c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   LightMapScale             c7       2
//   DNEResolution             c9       1
//   UniformPixelVector_0      c10      1
//   UniformPixelVector_1      c11      1
//   UniformPixelVector_2      c12      1
//   UniformPixelVector_3      c13      1
//   UniformPixelVector_4      c14      1
//   UniformPixelScalars_1     c15      1
//   UniformPixelScalars_2     c16      1
//   UniformPixelScalars_3     c17      1
//   UniformPixelScalars_4     c18      1
//   UniformPixelScalars_5     c19      1
//   UniformPixelScalars_6     c20      1
//   UpperSkyColor             c21      1
//   AmbientColorAndSkyFactor  c22      1
//   LightMapTextures          s0       2
//   SceneColorTexture         s2       1
//   NvStereoFixTexture        s3       1
//   PixelTexture2D_0          s4       1
//   PixelTexture2D_1          s5       1
//   PixelTexture2D_2          s6       1
//   PixelTexture2D_3          s7       1
//

    ps_3_0
    def c6, 0, 2, 10, 1.52876604
    def c23, -9.99999997e-007, 0.930000007, 0.0700000003, 0.333333343
    def c24, 1, 1.41789806, 0, -0.99000001
    def c25, 0.816496611, 0.577350259, 0, 0.0625
    def c26, 9.99999975e-006, 100000, 0, 0
    def c27, -0.707106769, -0.408248305, 0.577350259, 0.707106769
    dcl_texcoord v0.xy
    dcl_texcoord4 v1
    dcl_texcoord6 v2.xyz
    dcl_texcoord5 v3.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_751CA607_359.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    add r0.xy, c0, v3
    mad r0.zw, vPos.xyxy, c9.xyxy, c9
    mul r1.xy, r0.zwzw, v3.w
    nrm_pp r2.xyz, v2
    mad_pp r3.xyz, r2.z, c6.xxyw, -r2
    mov r0.zw, c6
    mad_pp r0.z, c19.y, r0.z, r0.w
    exp_pp r0.z, r0.z
    rcp r0.w, c15.x
    mul_pp r4.xy, r0.w, r0
    mad_pp r4.zw, r0.xyxy, r0.w, c11.xyxy
    texld_pp r5, r4.zwzw, s4
    dp2add_pp r0.w, r5, -r5, c24.x
    max_pp r2.w, r0.w, c6.x
    rsq_pp r0.w, r2.w
    rcp_pp r5.z, r0.w
    mov r6.xy, c24
    mad_pp r4.zw, r4.xyxy, r6.y, c12.xyxy
    texld_pp r7, r4.zwzw, s4
    dp2add_pp r0.w, r7, -r7, c24.x
    max_pp r2.w, r0.w, c6.x
    rsq_pp r0.w, r2.w
    rcp_pp r7.z, r0.w
    add_pp r5.xyz, r5, r7
    nrm_pp r7.xyz, r5
    mul_pp r5.xyz, r7, c16.x
    frc_pp r6.yzw, r5.xxyz
    add_pp r5.xyz, r5, -r6.yzww
    rcp r0.w, c16.x
    mul_pp r4.zw, r0.w, r5.xyxy
    mov r2.w, c16.w
    mad_pp r4.xy, r2.w, r4, c13
    texld_pp r7, r4, s5
    lrp_sat_pp r2.w, r7.x, c17.z, c17.w
    mad_pp r5.xyz, r5, r0.w, c24.zzww
    mad_pp r5.xyz, r2.w, r5, c24.zzxw
    nrm_pp r8.xyz, r5
    dp3_pp r0.w, r8, r2
    add r2.x, -r0.w, c24.x
    cmp_pp r0.w, r0.w, r2_abs.x, c24.x
    add r2.x, r0.w, c23.x
    mul r2.y, r0.w, r0.w
    mad r2.z, r2.y, c23.y, c23.z
    add_pp r2.z, -r2.z, c24.x
    cmp_pp r2.z, r2.x, r2.z, c23.y
    mul_pp r6.yzw, r2.z, c14.xxyz
    add_pp r7.yzw, r6.x, -c10.xxyz
    mul_pp r6.xyz, r6.yzww, r7.yzww
    mad_pp r6.xyz, r6, c4.w, c4
    rcp r2.z, c18.x
    mul_pp r4.xy, r0, r2.z
    mad_pp r4.xy, r2.w, r4.zwzw, r4
    texld_pp r4, r4, s6
    mad_sat_pp r2.w, r4.x, c18.y, c18.z
    texld_pp r4, r2.w, s7
    mul_pp r4.xyz, r4, c18.w
    mad_pp r4.xyz, r4, c23.z, c23.z
    mad_pp r4.xyz, r4, c5.w, c5
    dp2add_sat_pp r8.x, r3.yzzw, c25, c25.z
    dp3_sat_pp r8.y, r3, c27
    dp3_sat_pp r8.z, r3.yzxw, c27.yzww
    mad_pp r3.xyz, r0.z, r8, -r0.z
    exp_pp r8.x, r3.x
    exp_pp r8.y, r3.y
    exp_pp r8.z, r3.z
    texld r3, v0, s0
    mul_pp r3.xyz, r3, c7
    texld r9, v0, s1
    mul_pp r7.yzw, r9.xxyz, c8.xxyz
    dp3_pp r0.z, r7.yzww, c23.w
    mul_pp r9.xyz, r0.z, r3
    mul r3.xyz, r3, r4
    dp3_pp r0.z, r7.yzww, r8
    mul r3.xyz, r0.z, r3
    mad_pp r3.xyz, r6, r9, r3
    add_pp r3.xyz, r3, c10
    mul r4.xyz, r6, c21
    mad_pp r3.xyz, r4, c22.w, r3
    mad_pp r3.xyz, r6, c22, r3
    mad_pp r0.xy, r0, r2.z, r5
    texld_pp r4, r0, s6
    mad_sat_pp r0.x, r4.x, c18.y, c18.z
    mul_pp r0.y, r0.w, r2.y
    mov r4.x, c20.x
    add r0.z, -r4.x, c19.w
    mul r0.y, r0.z, r0.y
    cmp r0.y, r2.x, r0.y, c6.x
    add_pp r0.y, r0.y, c20.x
    abs r0.z, c3.x
    if_ne c3.x, -c3.x
      texld r2, c25.wzzw, s3
      add r0.w, -r2.y, v3.w
      mad r1.z, r2.x, r0.w, r1.x
      mov r1.w, v3.w
      mov r2.xyz, r1.zyww
    else
      mov_pp r2.xyz, c6.x
    endif
    mov r1.z, v3.w
    cmp r1.xyz, -r0.z, r1, r2
    rcp r0.z, r1.z
    mul r0.zw, r0.z, r1.xyxy
    mad r1.xy, r0.zwzw, c1, c1.wzzw
    mov r1.zw, c6.x
    texldl r1, r1, s2
    add r0.z, r1.w, -c2.y
    add r0.w, -r0.z, c26.x
    rcp r0.z, r0.z
    cmp r0.z, r0.w, c26.y, r0.z
    mad_pp r0.z, c2.x, r0.z, -v3.w
    lrp_pp r0.w, r7.x, c20.y, c20.z
    rcp r0.w, r0.w
    mul_sat_pp r0.z, r0.w, r0.z
    mul_pp r0.y, r0.z, r0.y
    mad_sat_pp oC0.w, r0.x, c19.z, r0.y
    mad_pp oC0.xyz, r3, v1.w, v1

// approximately 128 instruction slots used (11 texture, 117 arithmetic)
