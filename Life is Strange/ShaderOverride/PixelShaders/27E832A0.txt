//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D PixelTexture2D_6;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   DNEResolution                c8       1
//   UniformPixelVector_0         c9       1
//   UniformPixelVector_1         c10      1
//   UniformPixelVector_2         c11      1
//   UniformPixelVector_3         c12      1
//   UniformPixelVector_4         c13      1
//   UniformPixelVector_5         c14      1
//   UniformPixelScalars_0        c15      1
//   UniformPixelScalars_1        c16      1
//   LightColorAndFalloffExponent c17      1
//   UpperSkyColor                c18      1
//   AmbientColorAndSkyFactor     c19      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   PixelTexture2D_0             s2       1
//   PixelTexture2D_1             s3       1
//   PixelTexture2D_2             s4       1
//   PixelTexture2D_3             s5       1
//   PixelTexture2D_4             s6       1
//   PixelTexture2D_5             s7       1
//   PixelTexture2D_6             s8       1
//   VAOBuffer                    s9       1
//

    ps_3_0
    def c6, 2, -1, 10, 1.52876604
    def c20, 20, -1, 0, 1
    def c21, 0.5, -9.99999997e-007, 0.0625, 0
    def c22, 0.125, -5.55472994, -6.98316002, 0
    def c23, 1, 0.5, 0.693147004, 2
    dcl_texcoord4 v0.xyz
    dcl_texcoord6 v1.xyz
    dcl_texcoord5 v2.w
    dcl_texcoord v3.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_27E832A0_669.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c8, c8.zwzw
    mul r0.xy, r0, v2.w
    dp3_pp r1.x, v1, v1
    rsq_pp r1.x, r1.x
    mul_pp r1.yzw, r1.x, v1.xxyz
    mad_sat_pp r2.x, c7.x, v2.w, c7.y
    mul_pp r2.x, r2.x, c0.x
    texld_pp r3, v3, s2
    mad_pp r2.yzw, r3.xxyz, c6.x, c6.y
    nrm_pp r3.xyz, r2.yzww
    dp3_pp r2.y, v0, v0
    rsq_pp r2.y, r2.y
    mul_pp r4.xyz, r2.y, v0
    mad_pp r2.yzw, v0.xxyz, r2.y, r1
    nrm_pp r5.xyz, r2.yzww
    mad_pp r1.y, r3.w, c6.z, c6.w
    exp_pp r1.y, r1.y
    texld_pp r6, v3, s7
    mov r2.y, c6.y
    add_pp r2.yzw, -r2.y, -c9.xxyz
    mul_pp r2.yzw, r2, r6.xxyz
    mad_pp r2.yzw, r2, c4.w, c4.xxyz
    texld_pp r6, v3, s8
    mad_pp r6.xyz, r6, c5.w, c5
    mov r7.xy, c10
    mad_pp r7.xy, v3.yxzw, r7, c11
    rcp r8.x, c12.x
    rcp r8.y, c12.y
    mul_pp r7.zw, r7.xyxy, r8.xyxy
    mul_pp r1.z, c15.w, c15.z
    mul r3.w, r8.x, r1.z
    frc r4.w, r3_abs.w
    cmp r4.w, r3.w, r4.w, -r4.w
    mul_pp r4.w, r4.w, c12.x
    frc_pp r5.w, r4.w
    add_pp r9.x, r4.w, -r5.w
    mul r3.w, r8.y, r3.w
    frc r4.w, r3_abs.w
    cmp r3.w, r3.w, r4.w, -r4.w
    mul_pp r3.w, r3.w, c12.y
    frc_pp r4.w, r3.w
    add_pp r9.y, r3.w, -r4.w
    mad_pp r8.zw, r9.xyxy, r8.xyxy, r7
    texld_pp r9, r8.zwzw, s3
    rcp_pp r3.w, c15.w
    add_pp r4.w, r3.w, c15.z
    mul_pp r4.w, r4.w, c15.w
    mul r4.w, r8.x, r4.w
    frc r5.w, r4_abs.w
    cmp r5.w, r4.w, r5.w, -r5.w
    mul_pp r5.w, r5.w, c12.x
    frc_pp r6.w, r5.w
    add_pp r10.x, r5.w, -r6.w
    mul r4.w, r8.y, r4.w
    frc r5.w, r4_abs.w
    cmp r4.w, r4.w, r5.w, -r5.w
    mul_pp r4.w, r4.w, c12.y
    frc_pp r5.w, r4.w
    add_pp r10.y, r4.w, -r5.w
    mad_pp r7.zw, r10.xyxy, r8.xyxy, r7
    texld_pp r8, r7.zwzw, s3
    frc r4.w, r1_abs.z
    cmp r1.z, r1.z, r4.w, -r4.w
    mul_pp r1.z, r3.w, r1.z
    mul_pp r1.z, r1.z, c15.w
    lrp_pp r10.xyz, r1.z, r8, r9
    mad_pp r7.zw, v3.xyyx, c20.x, c20.y
    texld_pp r8, r7.zwzw, s4
    mul_pp r1.z, r8.y, c16.x
    lrp_pp r8.xyz, r1.z, c20.zwzw, r10
    add_pp r1.z, r7.y, c13.y
    texld_pp r9, r1.z, s5
    add_pp r1.z, r9.y, c21.x
    mul_pp r8.xyz, r8, r1.z
    texld_pp r7, r7, s6
    mul_pp r7.xyz, r8, r7.y
    mad r1.x, v1.z, -r1.x, -c6.y
    cmp_pp r1.x, r1.w, r1_abs.x, -c6.y
    add r1.z, r1.x, c21.y
    mul r1.w, r1.x, r1.x
    mad_pp r1.x, r1.x, -r1.w, -c6.y
    cmp_pp r1.x, r1.z, r1.x, -c6.y
    mul_pp r1.xzw, r1.x, c14.xyyz
    mul_sat_pp r1.xzw, r1, r7.xyyz
    add_pp r1.xzw, r1, c9.xyyz
    mul r7.xyz, r2.yzww, c18
    mad_pp r1.xzw, r7.xyyz, c19.w, r1
    abs r3.w, c3.x
    if_ne c3.x, -c3.x
      texld r7, c21.zwzw, s1
      add r4.w, -r7.y, v2.w
      mad r0.z, r7.x, r4.w, r0.x
      mov r0.w, v2.w
      mov r7.xyz, r0.zyww
    else
      mov_pp r7.xyz, c20.z
    endif
    mov r0.z, v2.w
    cmp r0.xyz, -r3.w, r0, r7
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s9
    texld_pp r7, c23, s0
    dp3_sat_pp r0.y, r3, r4
    mul_pp r0.z, r0.y, c0.w
    mov_sat_pp r0.w, c0.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.y, r0.w
    dp3_sat_pp r1.y, r3, r5
    mad_pp r3.x, r0.w, c23.z, c23.w
    mul_pp r3.x, r3.x, c22.x
    mad r0.w, r0.w, r1.y, -r0.w
    exp_pp r0.w, r0.w
    mul_pp r0.w, r0.w, r3.x
    mul_pp r0.y, r0.y, r0.w
    mul_pp r0.y, r2.x, r0.y
    dp3_sat_pp r0.w, r4, r5
    mad_pp r1.y, r0.w, c22.y, c22.z
    mul_pp r0.w, r0.w, r1.y
    exp_pp r0.w, r0.w
    lrp_pp r3.xyz, r0.w, -c6.y, r6
    mul_pp r3.xyz, r0.y, r3
    mad_pp r0.yzw, r2, r0.z, r3.xxyz
    mul_pp r0.yzw, r7.x, r0
    mul_pp r0.yzw, r0, c17.xxyz
    mad_pp r0.xyz, r1.xzww, r0.x, r0.yzww
    mad_pp oC0.xyz, r2.yzww, c19, r0
    rcp r0.x, v2.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 136 instruction slots used (11 texture, 125 arithmetic)
