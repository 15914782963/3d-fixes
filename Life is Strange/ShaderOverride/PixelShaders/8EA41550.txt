//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_5;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//   float4 UniformPixelVector_7;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEResolution           c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   UniformPixelVector_0    c7       1
//   UniformPixelVector_1    c8       1
//   UniformPixelVector_2    c9       1
//   UniformPixelVector_3    c10      1
//   UniformPixelVector_4    c11      1
//   UniformPixelVector_5    c12      1
//   UniformPixelVector_6    c13      1
//   UniformPixelVector_7    c14      1
//   UniformPixelScalars_5   c15      1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//   PixelTexture2D_1        s3       1
//   PixelTexture2D_2        s4       1
//   PixelTexture2D_3        s5       1
//

    ps_3_0
    def c4, 0.200000003, 0.5, 0.100000001, 24
    def c5, 0.899999976, 0.0416666679, 0.0625, 0
    def c6, 9.99999975e-006, 100000, 1, 25
    def c16, 0.400000006, 0.75, 0.25, 0.349999994
    def c17, 25, -0.00100000005, 1000, 0
    dcl_texcoord4 v0.w
    dcl_texcoord7_pp v1.w
    dcl_texcoord5 v2.w
    dcl_texcoord v3.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_8EA41550_676.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.yz, r0.xxyw, v2.w
    mul r1.xy, c8, v3
    mov r2.xy, c8
    mad r1.zw, v3.xyxy, r2.xyxy, c9.xyxy
    texld_pp r2, r1.zwzw, s2
    mov r3.xw, c16
    mad r1.zw, r1.xyxy, r3.x, c10.xyxy
    texld_pp r4, r1.zwzw, s2
    mad_sat r1.zw, r2.xyxy, c16.y, r4.xyxy
    add r2.xy, c11, v3
    mul r2.xy, r2, c8
    mad r1.zw, r1, c16.z, r2.xyxy
    texld r2, r1.zwzw, s3
    mov_sat r2.xyz, r2.xxyw
    mad r1.zw, r1.xyxy, r3.w, c12.xyxy
    texld_pp r4, r1.zwzw, s2
    mov r3.x, c4.x
    mad r1.xy, r1, r3.x, c13
    texld_pp r1, r1, s2
    mad_sat r1.xy, r4, c4.y, r1
    add r1.zw, c14.xyxy, v3.xyxy
    mul r1.zw, r1, c8.xyxy
    mad r1.xy, r1, c4.z, r1.zwzw
    texld r1, r1, s3
    mov_sat r1.x, r1.x
    mul r1.y, r1.x, r2.x
    mul r1.y, r1.y, c4.w
    frc r1.z, r1.y
    add r1.y, -r1.z, r1.y
    mul r1.z, c15.z, v3.y
    mul r1.z, r1.z, c5.x
    mad r1.z, v3.y, c4.z, r1.z
    mad_sat r1.y, r1.y, c5.y, r1.z
    mul r1.y, r1.y, v1.w
    abs r1.z, c3.x
    if_ne c3.x, -c3.x
      texld r4, c5.zwzw, s1
      add r1.w, -r4.y, v2.w
      mad r0.x, r4.x, r1.w, r0.y
      mov r0.w, v2.w
      mov r3.xyz, r0.xzww
    else
      mov r3.xyz, c5.w
    endif
    mov r0.w, v2.w
    cmp r3.xyz, -r1.z, r0.yzww, r3
    rcp r1.w, r3.z
    mul r3.xy, r1.w, r3
    mad r4.xy, r3, c1, c1.wzzw
    mov r4.zw, c5.w
    texldl r4, r4, s0
    add r1.w, r4.w, -c2.y
    add r2.w, -r1.w, c6.x
    rcp r1.w, r1.w
    cmp r1.w, r2.w, c6.y, r1.w
    mad r2.xw, r2.xyzy, -r1.x, c6.z
    mul r3.xy, r2.xwzw, c6.w
    mad r1.x, c2.x, r1.w, -v2.w
    mad r2.xw, r2, c17.x, c17.y
    rcp r1.w, r3.x
    cmp r1.w, r2.x, r1.w, c17.z
    mul_sat r1.x, r1.w, r1.x
    mul r1.x, r1.x, r1.y
    mul r1.x, r1.x, c15.w
    texld r4, r1.x, s4
    add_pp r1.xyw, r4.xyzz, c7.xyzz
    if_ne c3.x, -c3.x
      texld r4, c5.zwzw, s1
      add r2.x, -r4.y, v2.w
      mad r0.x, r4.x, r2.x, r0.y
      mov r4.xyz, r0.xzww
    else
      mov r4.xyz, c5.w
    endif
    cmp r0.xyz, -r1.z, r0.yzww, r4
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c5.w
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c6.x
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c6.y, r0.x
    mad r0.x, c2.x, r0.x, -v2.w
    rcp r0.y, r3.y
    cmp r0.y, r2.w, r0.y, c17.z
    mul_sat r0.x, r0.y, r0.x
    mad r0.yz, c15.z, r3.w, v3.xxyw
    mad r0.yz, r2, c4.x, r0
    texld r2, r0.yzzw, s5
    mul r0.y, r2.x, v1.w
    mul_pp r0.x, r0.y, r0.x
    mul r0.yzw, r1.xxyw, v0.w
    mul_pp oC0.xyz, r0.x, r0.yzww
    mov oC0.w, c5.w

// approximately 103 instruction slots used (14 texture, 89 arithmetic)
