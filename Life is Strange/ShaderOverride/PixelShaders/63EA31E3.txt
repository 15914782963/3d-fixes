//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float3 DecalLocalBinormal;
//   float3 DecalLocalTangent;
//   float4 DiffuseOverrideParameter;
//   sampler2D HeightmapTexture;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   float4 WorldIncidentLighting[7];
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   WorldIncidentLighting        c7       7
//   DNEResolution                c14      1
//   UniformPixelVector_0         c15      1
//   UniformPixelScalars_0        c16      1
//   DecalLocalBinormal           c17      1
//   DecalLocalTangent            c18      1
//   LightColorAndFalloffExponent c19      1
//   UpperSkyColor                c20      1
//   AmbientColorAndSkyFactor     c21      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   PixelTexture2D_0             s2       1
//   PixelTexture2D_1             s3       1
//   HeightmapTexture             s4       1
//   VAOBuffer                    s5       1
//

    ps_3_0
    def c6, 2, -1, 1, 3
    def c22, -1.02332771, 1.02332771, 0.858085215, 0.886227608
    def c23, 0.0625, 0, 1, 0.5
    def c24, -9.99999997e-007, 15, 0, 0
    def c25, -0.858085215, 0.247708291, 0.429042608, 0
    dcl_texcoord4 v0.xyz
    dcl_texcoord6 v1.xyz
    dcl_texcoord5 v2.w
    dcl_texcoord v3.xy
    dcl_texcoord1 v4.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_63EA31E3_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    texld r0, v3, s4
    mad r0.xy, r0.zwzw, c6.x, c6.y
    dp2add r0.w, r0, -r0, c6.z
    rsq r0.w, r0.w
    rcp r0.z, r0.w
    mul r1.xyz, r0, c18.zxyw
    mad r1.xyz, r0.zxyw, c18, -r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul r1.xyz, r0.w, r1
    mul r2.xyz, r0.zxyw, r1
    mad r1.xyz, r0.yzxw, r1.yzxw, -r2
    mul r2.xyz, r0, c17.zxyw
    mad r2.xyz, r0.zxyw, c17, -r2
    dp3 r0.w, r2, r2
    rsq r0.w, r0.w
    mul r2.xyz, r0.w, r2
    mul r3.xyz, r0.zxyw, r2
    mad r2.xyz, r0.yzxw, r2.yzxw, -r3
    nrm r3.xyz, v0
    dp3_pp r4.x, r1, r3
    dp3_pp r4.y, r2, r3
    dp3_pp r4.z, r0, r3
    nrm r3.xyz, v1
    dp3_pp r5.x, r1, r3
    dp3_pp r5.y, r2, r3
    dp3_pp r5.z, r0, r3
    mad r3.xy, vPos, c14, c14.zwzw
    mul r3.xy, r3, v2.w
    nrm_pp r6.xyz, r5
    mul r5.xy, c16.x, v4
    texld_pp r7, r5, s2
    mad_pp r7.xyz, r7, c6.x, c6.y
    nrm_pp r8.xyz, r7
    nrm_pp r7.xyz, r4
    dp3_pp r0.w, r8, r6
    mul_pp r4.xyz, r0.w, r8
    mad_pp r4.xyz, r4, c6.x, -r6
    texld r5, r5, s3
    mov r6.z, c6.z
    add r6.xyz, r6.z, -c15
    mul_pp r6.xyz, r5, r6
    mad_pp r6.xyz, r6, c4.w, c4
    mad_pp r5.xyz, r5, c5.w, c5
    mul r9.xyz, r6, c20
    mov_pp r0.w, c21.w
    mad_pp r9.xyz, r9, r0.w, c15
    mov r10.x, r1.x
    mov r10.y, r2.x
    mov r10.z, r0.x
    dp3_pp r10.z, r10, r8
    mov r11.x, r1.y
    mov r11.y, r2.y
    mov r11.z, r0.y
    dp3_pp r10.x, r11, r8
    mov r0.x, r1.z
    mov r0.y, r2.z
    dp3_pp r10.y, r0, r8
    mul r0.xyz, r10, r10.xyxw
    mad r1.y, r0.y, c6.w, c6.y
    mul r1.xz, r10, r10.y
    mad_pp r1.w, r10.z, r10.z, -r0.x
    mul r2.xyz, r10, c22.xyxw
    mul r2.w, r0.z, c22.z
    mul r0, r1, c25.xyxz
    dp4 r1.x, c8, r2
    mov r1.w, c22.w
    mad_pp r1.x, c7.x, r1.w, r1.x
    dp4 r1.y, c9, r0
    add_pp r1.x, r1.y, r1.x
    dp4 r4.w, c10, r2
    mad_pp r4.w, c7.y, r1.w, r4.w
    dp4 r5.w, c11, r0
    add_pp r1.y, r4.w, r5.w
    dp4 r2.x, c12, r2
    mad_pp r1.w, c7.z, r1.w, r2.x
    dp4 r0.x, c13, r0
    add_pp r1.z, r0.x, r1.w
    mul_pp r0.xyz, r1, r6
    cmp_pp r0.xyz, r1, r0, c25.w
    add_pp r0.xyz, r0, r9
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r1, c23, s1
      add r1.y, -r1.y, v2.w
      mad r3.z, r1.x, r1.y, r3.x
      mov r3.w, v2.w
      mov r1.xyz, r3.zyww
    else
      mov r1.xyz, c25.w
    endif
    mov r3.z, v2.w
    cmp r1.xyz, -r0.w, r3, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s5
    texld_pp r2, c23.zwzw, s0
    dp3_sat_pp r0.w, r8, r7
    add r1.y, r0.w, c24.x
    mul r0.w, r0.w, c0.w
    dp3_sat_pp r1.z, r4, r7
    add r1.w, r1.z, c24.x
    pow_pp r2.y, r1.z, c24.y
    mul r1.z, r2.y, c0.x
    mul r2.yzw, r0.w, r6.xxyz
    cmp r2.yzw, r1.y, r2, c25.w
    mul_pp r3.xyz, r5, r1.z
    cmp_pp r1.yzw, r1.w, r3.xxyz, c25.w
    add_pp r1.yzw, r1, r2
    mul_pp r1.yzw, r2.x, r1
    mul_pp r1.yzw, r1, c19.xxyz
    mad_pp r0.xyz, r0, r1.x, r1.yzww
    mad_pp oC0.xyz, r6, c21, r0
    rcp r0.x, v2.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 131 instruction slots used (6 texture, 125 arithmetic)
