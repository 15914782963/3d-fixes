//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_4;
//   float4 UniformPixelScalars_5;
//   float4 UniformPixelScalars_6;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float3 UpperSkyColor;
//   float4 WorldIncidentLighting[7];
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   WorldIncidentLighting        c7       7
//   CameraWorldPos               c14      1
//   DNEResolution                c15      1
//   UniformPixelVector_0         c16      1
//   UniformPixelVector_1         c17      1
//   UniformPixelVector_2         c18      1
//   UniformPixelVector_3         c19      1
//   UniformPixelVector_4         c20      1
//   UniformPixelScalars_1        c21      1
//   UniformPixelScalars_2        c22      1
//   UniformPixelScalars_3        c23      1
//   UniformPixelScalars_4        c24      1
//   UniformPixelScalars_5        c25      1
//   UniformPixelScalars_6        c26      1
//   LightColorAndFalloffExponent c27      1
//   UpperSkyColor                c28      1
//   AmbientColorAndSkyFactor     c29      1
//   ShadowWarpFunctionTexture    s0       1
//   SceneColorTexture            s1       1
//   NvStereoFixTexture           s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//

    ps_3_0
    def c5, -9.99999997e-007, 0.930000007, 0.0700000003, 0.858085215
    def c6, 3, -1, -1.02332771, 1.02332771
    def c30, -0.858085215, 0.247708291, 0.429042608, 0.886227608
    def c31, 1, 0.5, 0.0625, 0
    def c32, 9.99999975e-006, 100000, 0, 0
    def c33, 1, 0, 1.41789806, -0.99000001
    dcl_texcoord3 v0.xyz
    dcl_texcoord4 v1
    dcl_texcoord6 v2.xyz
    dcl_texcoord5 v3.xyw
    dcl_color v4.xyz
    dcl_color1 v5
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_46F5E34A_359.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v5
    dp3_pp r0.w, v4, v4
    rsq_pp r0.w, r0.w
    mul_pp r1.xyz, r0.w, v4.yxzw
    mul r2.yz, r0, r1
    mad_pp r0.x, r0.x, r1.x, -r2.y
    mul_pp r1.x, r0.x, v5.w
    add r0.xy, c14, v3
    mad r3.xy, vPos, c15, c15.zwzw
    mul r3.xy, r3, v3.w
    nrm_pp r4.xyz, v2
    dp3_pp r0.w, v0, v0
    rsq_pp r0.w, r0.w
    mul_sat_pp r0.w, r0.w, v0.z
    rcp r1.w, c21.x
    mul_pp r5.xy, r0, r1.w
    mad_pp r5.zw, r0.xyxy, r1.w, c17.xyxy
    texld_pp r6, r5.zwzw, s3
    dp2add_pp r1.w, r6, -r6, c33.x
    max_pp r4.w, r1.w, c33.y
    rsq_pp r1.w, r4.w
    rcp_pp r6.z, r1.w
    mov r7.xz, c33
    mad_pp r5.zw, r5.xyxy, r7.z, c18.xyxy
    texld_pp r8, r5.zwzw, s3
    dp2add_pp r1.w, r8, -r8, c33.x
    max_pp r4.w, r1.w, c33.y
    rsq_pp r1.w, r4.w
    rcp_pp r8.z, r1.w
    add_pp r6.xyz, r6, r8
    nrm_pp r8.xyz, r6
    mul_pp r6.xyz, r8, c22.x
    frc_pp r7.yzw, r6.xxyz
    add_pp r6.xyz, r6, -r7.yzww
    rcp r1.w, c22.x
    mov r4.w, c22.w
    mad_pp r5.xy, r4.w, r5, c19
    texld_pp r5, r5, s4
    lrp_sat_pp r4.w, r5.x, c23.z, c23.w
    mad_pp r5.yzw, r6.xxyz, r1.w, c33.xyyw
    mad_pp r5.yzw, r4.w, r5, c33.xyyx
    nrm_pp r6.xyz, r5.yzww
    dp3_pp r1.w, r6, r4
    add r4.x, -r1.w, c33.x
    cmp_pp r1.w, r1.w, r4_abs.x, c33.x
    add r4.x, r1.w, c5.x
    mul r4.y, r1.w, r1.w
    mad r4.z, r4.y, c5.y, c5.z
    add_pp r4.z, -r4.z, c33.x
    cmp_pp r4.z, r4.x, r4.z, c5.y
    mul_pp r6.xyz, r4.z, c20
    add_pp r7.xyz, r7.x, -c16
    mul_pp r6.xyz, r6, r7
    mad_pp r6.xyz, r6, c4.w, c4
    mul r7.xyz, r6, c28
    mov_pp r4.w, c29.w
    mad_pp r7.xyz, r7, r4.w, c16
    mov_pp r1.y, r0.z
    mul r8.xyz, r1, r1.xyxw
    mul r2.x, r0.z, r1.x
    mad r2.y, r8.y, c6.x, c6.y
    mad_pp r2.w, r1.z, r1.z, -r8.x
    mul r9.xyz, r1, c6.zwzw
    mul r9.w, r8.z, c5.w
    mul r2, r2, c30.xyxz
    dp4 r0.z, c8, r9
    mov r4.w, c30.w
    mad_pp r0.z, c7.x, r4.w, r0.z
    dp4 r1.x, c9, r2
    add_pp r1.x, r0.z, r1.x
    dp4 r0.z, c10, r9
    mad_pp r0.z, c7.y, r4.w, r0.z
    dp4 r4.z, c11, r2
    add_pp r1.y, r0.z, r4.z
    dp4 r0.z, c12, r9
    mad_pp r0.z, c7.z, r4.w, r0.z
    dp4 r2.x, c13, r2
    add_pp r1.z, r0.z, r2.x
    max_pp r2.xyz, r1, c33.y
    mad_pp r1.xyz, r6, r2, r7
    texld_pp r2, c31, s0
    mul_pp r0.z, r0.w, c0.w
    mul_pp r2.yzw, r0.z, r6.xxyz
    mul_pp r2.xyz, r2.x, r2.yzww
    mad_pp r1.xyz, r2, c27, r1
    mad_pp r1.xyz, r6, c29, r1
    rcp r0.z, c24.x
    mad_pp r0.xy, r0, r0.z, r5.yzzw
    texld_pp r0, r0, s5
    mad_sat_pp r0.x, r0.x, c24.y, c24.z
    mul_pp r0.y, r1.w, r4.y
    mov r2.x, c26.x
    add r0.z, -r2.x, c25.w
    mul r0.y, r0.z, r0.y
    cmp r0.y, r4.x, r0.y, c33.y
    add_pp r0.y, r0.y, c26.x
    abs r0.z, c3.x
    if_ne c3.x, -c3.x
      texld r2, c31.zwzw, s2
      add r0.w, -r2.y, v3.w
      mad r3.z, r2.x, r0.w, r3.x
      mov r3.w, v3.w
      mov r2.xyz, r3.zyww
    else
      mov_pp r2.xyz, c33.y
    endif
    mov r3.z, v3.w
    cmp r2.xyz, -r0.z, r3, r2
    rcp r0.z, r2.z
    mul r0.zw, r0.z, r2.xyxy
    mad r2.xy, r0.zwzw, c1, c1.wzzw
    mov r2.zw, c33.y
    texldl r2, r2, s1
    add r0.z, r2.w, -c2.y
    add r0.w, -r0.z, c32.x
    rcp r0.z, r0.z
    cmp r0.z, r0.w, c32.y, r0.z
    mad_pp r0.z, c2.x, r0.z, -v3.w
    lrp_pp r0.w, r5.x, c26.y, c26.z
    rcp r0.w, r0.w
    mul_sat_pp r0.z, r0.w, r0.z
    mul_pp r0.y, r0.z, r0.y
    mad_sat_pp oC0.w, r0.x, c25.z, r0.y
    mad_pp oC0.xyz, r1, v1.w, v1

// approximately 137 instruction slots used (8 texture, 129 arithmetic)
