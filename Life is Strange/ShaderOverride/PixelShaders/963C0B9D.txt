//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D PixelTexture2D_6;
//   sampler2D PixelTexture2D_7;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   sampler2D WarpFunctionTexture;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNESpecularAttenuation       c7       1
//   DNEMiscParameter             c8       1
//   DNEResolution                c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelVector_1         c11      1
//   UniformPixelVector_2         c12      1
//   UniformPixelScalars_0        c13      1
//   LightColorAndFalloffExponent c14      1
//   SpotDirection                c15      1
//   SpotAngles                   c16      1
//   ShadowWarpFunctionTexture    s0       1
//   WarpFunctionTexture          s1       1
//   NvStereoFixTexture           s2       1
//   LightAttenuationTexture      s3       1
//   PixelTexture2D_0             s4       1
//   PixelTexture2D_1             s5       1
//   PixelTexture2D_2             s6       1
//   PixelTexture2D_3             s7       1
//   PixelTexture2D_4             s8       1
//   PixelTexture2D_5             s9       1
//   PixelTexture2D_6             s10      1
//   PixelTexture2D_7             s11      1
//

    ps_3_0
    def c2, 9.99999997e-007, -4.99999999e-007, 2, -1
    def c6, 5, 15, 0, 1
    def c17, 0, 0.333332986, 0.666665971, 0.0500000007
    def c18, -2, 4, -1, 1
    def c19, 0.100000001, 0, 1, 0.5
    def c20, -0.949999988, 10, 1.52876604, 2089.24487
    def c21, 0.0625, 0, 0.0700000003, 0.0299999993
    def c22, -0.099999994, 0.800000012, 0.600000024, 0.400000006
    def c23, 0.693147004, 2, 0.125, 0.0280000009
    def c24, -5.55472994, -6.98316002, 0, 0
    dcl_color1 v0.xyz
    dcl_texcoord v1.xy
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5_pp v3
    dcl_texcoord6 v4.xyz
    dcl_texcoord7 v5.w
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9
    dcl_2d s10
    dcl_2d s11

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_963C0B9D_814.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v0, v0
    rsq_pp r0.x, r0.x
    nrm_pp r1.xyz, v4
    mad_sat_pp r0.y, c8.x, v5.w, c8.y
    mul_pp r0.y, r0.y, c7.x
    texld_pp r2, v1, s4
    mul_pp r0.z, r2.x, c13.x
    mad_pp r0.z, r0.z, c2.x, c2.y
    mad_pp r0.zw, r0.z, r1.xyxy, v1.xyxy
    texld_pp r2, r0.zwzw, s5
    mad_pp r2.xyz, r2, c2.z, c2.w
    mul_pp r3.xy, c6, v1
    texld_pp r4, r3, s6
    dp2add_pp r1.w, r4, -r4, -c2.w
    max_pp r2.w, r1.w, c6.z
    rsq_pp r1.w, r2.w
    rcp_pp r4.z, r1.w
    add_pp r4.xyz, r4, -c6.zzww
    mad_pp r4.xyz, r4, c19.x, c19.yyzw
    mov r5.yz, c13
    mad_pp r5.xyz, r5.z, r5.y, c17
    texld_pp r3, r3, s7
    add_pp r5.xyz, r3, r5
    frc_pp r5.xyz, r5
    add r5.xyz, -r5, -c2.w
    texld_pp r6, v1, s8
    mad_pp r1.w, r6.z, c18.x, c18.y
    max r6.xyw, c2.x, r5.xyzz
    log r5.x, r6.x
    log r5.y, r6.y
    log r5.z, r6.w
    mul r5.xyz, r1.w, r5
    exp_pp r6.x, r5.x
    exp_pp r6.y, r5.y
    exp_pp r1.w, r5.z
    frc_pp r5.xyz, -r3
    add_sat_pp r3.xyz, r3, r5
    mul_pp r3.xy, r3, r6
    add_pp r2.w, r3.y, r3.x
    mad_pp r1.w, r1.w, r3.z, r2.w
    mad_pp r0.x, v0.z, r0.x, -c2.w
    mul_pp r0.x, r1.w, r0.x
    mul_pp r1.w, r0.x, c19.w
    add_pp r3.xyz, -r2, r4
    mul_pp r3.xyz, r1.w, r3
    texld_pp r4, v1, s9
    mul_pp r2.w, r4.y, c13.w
    mad_pp r3.xyz, r2.w, r3, r2
    nrm_pp r4.xyz, r3
    dp3_pp r2.y, v2, v2
    rsq_pp r2.y, r2.y
    mul_pp r3.xyz, r2.y, v2
    cmp r2.z, vFace, c18.z, c18.w
    mul r2.z, r2.z, c0.x
    mul_pp r4.xyz, r2.z, r4
    mad_pp r1.xyz, v2, r2.y, r1
    nrm_pp r5.xyz, r1
    lrp_pp r1.xy, r2.x, c11.ywzw, c11.xzzw
    lrp_pp r2.y, r6.z, r1.y, r1.x
    lrp_pp r3.w, r1.w, -c2.w, r2.y
    lrp_pp r1.x, r2.w, r3.w, r2.x
    max_pp r2.x, r1.x, c17.w
    add r1.x, r2.x, c20.x
    mad r1.y, r2.x, c20.y, c20.z
    exp_pp r1.y, r1.y
    cmp_pp r1.x, r1.x, c20.w, r1.y
    dp3 r1.y, v3, v3
    rsq r1.z, r1.y
    mul r2.xyz, r1.z, v3
    dp3 r1.z, r2, -c15
    add r1.z, r1.z, -c16.x
    mul_sat r1.z, r1.z, c16.y
    mul_pp r7.z, r1.z, r1.z
    mov_sat_pp r7.x, v3.w
    mov r7.yw, c19.w
    texld_pp r8, r7, s0
    texld_pp r7, r7.zwzw, s0
    add r1.z, -r1.y, -c2.w
    mul r1.z, r8.x, r1.z
    mul r9, r7.x, r1.z
    mov r10, r9
    texkill r10
    if b0
      mad r2.xy, vPos, c9, c9.zwzw
      mul r2.xy, r2, v5.w
      if_ne c3.x, -c3.x
        texld r10, c21, s2
        add r1.z, -r10.y, v5.w
        mad r2.z, r10.x, r1.z, r2.x
        mov r2.xy, r2.zyzw
        mov r1.z, v5.w
      else
        mov r1.z, v5.w
      endif
      rcp r1.z, r1.z
      mul r2.xy, r1.z, r2
      mad r2.xy, r2, c1, c1.wzzw
      texld r10, r2, s3
      mul_pp r2.xyz, r10, r10
      mul_pp r2.xyz, r2, r8.x
    else
      mov_pp r2.xyz, r8.x
    endif
    texld_pp r8, v1, s11
    mul_pp r1.z, r1.w, r2.w
    lrp_pp r6.xyw, r1.z, c21.z, r8.xyzz
    mad_pp r6.xyw, r6, c5.w, c5.xyzz
    mov_sat r1.y, r1.y
    add r1.y, -r1.y, -c2.w
    pow_sat_pp r8.x, r1.y, c14.w
    mov r8.yw, c19.w
    texld_pp r10, r8, s0
    texld_pp r11, r0.zwzw, s10
    mul_pp r1.yzw, r11.xxyz, r11.xxyz
    mad_pp r0.x, r0.x, c22.x, c22.y
    mul_pp r7.yzw, r1, r0.x
    mad r0.xzw, r0.x, -r1.yyzw, r11.xyyz
    mad_pp r0.xzw, r6.z, r0, r7.yyzw
    lrp_pp r1.yzw, r2.w, r0.xxzw, r11.xxyz
    mov r0.w, c2.w
    add_pp r7.yzw, -r0.w, -c10.xxyz
    mul_pp r1.yzw, r1, r7
    mad_pp r1.yzw, r1, c4.w, c4.xxyz
    mul_pp r0.x, r7.x, r10.x
    dp3_sat_pp r8.z, r4, r3
    texld_pp r11, r8.zwzw, s1
    mov_sat_pp r0.z, r3.z
    lrp_pp r9.xy, c22.zwzw, r0.z, r11.x
    add_pp r0.z, r9.x, c21.w
    add r2.w, -r9.y, r0.z
    cmp_pp r9.z, r2.w, r9.y, r0.z
    lrp_pp r7.yzw, r6.z, r9.xxzz, r11.x
    mul_pp r7.yzw, r7, c7.w
    mul_sat_pp r0.x, r0.x, c7.y
    mul_pp r0.x, r0.x, r0.x
    mul_pp r0.x, r1.x, r0.x
    dp3_sat_pp r0.z, r4, r5
    mad_pp r1.x, r0.x, c23.x, c23.y
    mul_pp r1.x, r1.x, c23.z
    mad r0.x, r0.x, r0.z, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r1.x
    mul_pp r0.x, r8.z, r0.x
    mul_pp r0.x, r0.y, r0.x
    lrp_pp r4.xyz, r6.z, c23.w, r6.xyww
    add r0.y, r0.w, c12.x
    mad_pp r0.y, r6.z, r0.y, -c2.w
    mul_pp r0.x, r0.x, r0.y
    dp3_sat_pp r0.y, r3, r5
    mad_pp r0.z, r0.y, c24.x, c24.y
    mul_pp r0.y, r0.y, r0.z
    exp_pp r0.y, r0.y
    lrp_pp r3.xyz, r0.y, -c2.w, r4
    mul_pp r0.xyz, r0.x, r3
    mad_pp r0.xyz, r1.yzww, r7.yzww, r0
    mul_pp r0.xyz, r2, r0
    mul r0.xyz, r0, c14
    mul r0.xyz, r10.x, r0
    mul r0.xyz, r7.x, r0
    cmp oC0.xyz, -r9.w, c6.z, r0
    mov oC0.w, c6.z

// approximately 174 instruction slots used (14 texture, 160 arithmetic)
