//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNESpecularAttenuation       c7       1
//   DNEMiscParameter             c8       1
//   DNEResolution                c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelVector_1         c11      1
//   UniformPixelVector_2         c12      1
//   UniformPixelScalars_0        c13      1
//   LightColorAndFalloffExponent c14      1
//   UpperSkyColor                c15      1
//   AmbientColorAndSkyFactor     c16      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   PixelTexture2D_0             s2       1
//   PixelTexture2D_1             s3       1
//   PixelTexture2D_2             s4       1
//   PixelTexture2D_3             s5       1
//   VAOBuffer                    s6       1
//

    ps_3_0
    def c6, -1, 1, 184.664948, 0.5
    def c17, 4, 1, 0, 0.200000003
    def c18, -0.899999976, 10, 1, 1.52876604
    def c19, 0.0625, 0, 0.693147004, 2
    def c20, 0.125, -5.55472994, -6.98316002, 0
    dcl_texcoord4 v0.xyz
    dcl_texcoord6 v1.xyz
    dcl_texcoord5 v2.w
    dcl_texcoord v3.xy
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_E8D89263_1068.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c9, c9.zwzw
    mul r0.xy, r0, v2.w
    dp3_pp r1.x, v1, v1
    rsq_pp r1.x, r1.x
    mad_sat_pp r1.y, c8.x, v2.w, c8.y
    mul_pp r1.y, r1.y, c7.x
    mul_pp r1.zw, c17.x, v3.xyxy
    texld_pp r2, r1.zwzw, s2
    dp2add_pp r1.z, r2, -r2, c17.y
    max_pp r2.w, r1.z, c17.z
    rsq_pp r1.z, r2.w
    rcp_pp r2.z, r1.z
    lrp_pp r3.xyz, c17.w, r2, c17.zzyw
    texld_pp r2, v3, s3
    mov r2.yw, c13
    mad r1.zw, r2.xyyw, c18.xyxy, c18
    add_pp r1.z, -r1.z, r2.x
    frc_pp r2.x, -r1.z
    add_sat_pp r1.z, r1.z, r2.x
    cmp_pp r2.xyz, -r1.z, c17.zzyw, r3
    nrm_pp r3.xyz, r2
    nrm_pp r2.xyz, v0
    cmp r2.w, vFace, c6.x, c6.y
    mul r2.w, r2.w, c0.x
    mad_pp r4.xyz, v1, r1.x, r2
    nrm_pp r5.xyz, r4
    exp_pp r1.x, r1.w
    cmp_pp r1.x, -r1.z, r1.x, c6.z
    texld_pp r4, v3, s4
    cmp_pp r4.xyz, -r1.z, r4, c11
    mov r6.y, c17.y
    add_pp r6.xyz, r6.y, -c10
    mul_pp r4.xyz, r4, r6
    mad_pp r4.xyz, r4, c4.w, c4
    texld_pp r6, v3, s5
    mul_pp r6.xyz, r6, c13.z
    cmp_pp r6.xyz, -r1.z, r6, c12
    mad_pp r6.xyz, r6, c5.w, c5
    mul r7.xyz, r4, c15
    mov_pp r1.w, c16.w
    mad_pp r7.xyz, r7, r1.w, c10
    abs r1.z, c3.x
    if_ne c3.x, -c3.x
      texld r8, c19, s1
      add r1.w, -r8.y, v2.w
      mad r0.z, r8.x, r1.w, r0.x
      mov r0.w, v2.w
      mov r8.xyz, r0.zyww
    else
      mov_pp r8.xyz, c17.z
    endif
    mov r0.z, v2.w
    cmp r0.xyz, -r1.z, r0, r8
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s6
    mul_pp r0.yzw, r2.w, r3.xxyz
    texld_pp r3, c6.ywzw, s0
    dp3_sat_pp r1.z, r0.yzww, r2
    mul_pp r1.w, r1.z, c7.w
    mov_sat_pp r2.w, c7.y
    mul_pp r2.w, r2.w, r2.w
    mul_pp r1.x, r1.x, r2.w
    dp3_sat_pp r0.y, r0.yzww, r5
    mad_pp r0.z, r1.x, c19.z, c19.w
    mul_pp r0.z, r0.z, c20.x
    mad r0.y, r1.x, r0.y, -r1.x
    exp_pp r0.y, r0.y
    mul_pp r0.y, r0.y, r0.z
    mul_pp r0.y, r1.z, r0.y
    mul_pp r0.y, r1.y, r0.y
    dp3_sat_pp r0.z, r2, r5
    mad_pp r0.w, r0.z, c20.y, c20.z
    mul_pp r0.z, r0.z, r0.w
    exp_pp r0.z, r0.z
    lrp_pp r1.xyz, r0.z, c17.y, r6
    mul_pp r0.yzw, r0.y, r1.xxyz
    mad_pp r0.yzw, r4.xxyz, r1.w, r0
    mul_pp r0.yzw, r3.x, r0
    mul_pp r0.yzw, r0, c14.xxyz
    mad_pp r0.xyz, r7, r0.x, r0.yzww
    mad_pp oC0.xyz, r4, c16, r0
    rcp r0.x, v2.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 94 instruction slots used (7 texture, 87 arithmetic)
