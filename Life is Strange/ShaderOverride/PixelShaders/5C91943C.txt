//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ObjectMacroUVScales;
//   float3 ObjectNDCPosition;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEEnvMapParameter           c7       1
//   DNEResolution                c8       1
//   ObjectNDCPosition            c9       1
//   ObjectMacroUVScales          c10      1
//   UniformPixelVector_0         c11      1
//   LightColorAndFalloffExponent c12      1
//   UpperSkyColor                c13      1
//   AmbientColorAndSkyFactor     c14      1
//   ShadowWarpFunctionTexture    s0       1
//   SceneColorTexture            s1       1
//   NvStereoFixTexture           s2       1
//   DNEEnvironmentTexture        s3       1
//   PixelTexture2D_0             s4       1
//   PixelTexture2D_1             s5       1
//

    ps_3_0
    def c6, 0.5, 2, -1, 5
    def c15, 0, 0.0625, 9.99999975e-006, 100000
    def c16, 0.015625, 0, 0, 0
    def c17, 1, 0.5, -9.99999997e-007, 15
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord1 v3
    dcl_texcoord2 v4.x
    dcl_texcoord3 v5.xyz
    dcl_texcoord4 v6
    dcl_texcoord6 v7.xyz
    dcl_texcoord5 v8.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_cube s3
    dcl_2d s4
    dcl_2d s5

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_5C91943C_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v1.w
    mad r3.xy, vPos, c8, c8.zwzw
    mul r3.xy, r3, v8.w
    nrm_pp r4.xyz, v7
    rcp r0.w, v8.w
    mad r5.xy, r3, r0.w, -c9
    mov_pp r6.x, c6.x
    mad r5.xy, r5, c10.zwzw, r6.x
    texld_pp r5, r5, s4
    mad_pp r5.xyz, r5, c6.y, c6.z
    texld_pp r6, v2, s5
    add r6.xyz, r6, r6
    mad_pp r5.xyz, v4.x, r5, r6
    add r5.xyz, r5, c6.z
    nrm_pp r6.xyz, r5
    nrm_pp r5.xyz, v5
    dp3_pp r0.w, r6, r4
    mul_pp r7.xyz, r0.w, r6
    mad_pp r4.xyz, r7, c6.y, -r4
    dp3_pp r1.x, r1, r4
    dp3_pp r1.y, r2, r4
    dp3_pp r1.z, r0, r4
    mov_pp r1.w, c6.w
    texldl_pp r0, r1, s3
    mul_pp r0.xyz, r0, c7
    lrp r0.w, v4.x, r5.w, -c6.z
    mul r1.xyz, r0.w, v3
    mad_pp r0.xyz, r0, r1, c11
    mov r1.xyz, c4
    mul r2.xyz, r1, c13
    mad_pp r0.xyz, r2, c14.w, r0
    texld_pp r2, c17, s0
    dp3_sat_pp r0.w, r6, r5
    add r1.w, r0.w, c17.z
    mul r0.w, r0.w, c0.w
    dp3_sat_pp r2.y, r4, r5
    add r2.z, r2.y, c17.z
    pow_pp r4.x, r2.y, c17.w
    mul r2.y, r4.x, c0.x
    mul r4.xyz, r0.w, c4
    cmp r4.xyz, r1.w, r4, c15.x
    mul_pp r5.xyz, r2.y, c5
    cmp_pp r2.yzw, r2.z, r5.xxyz, c15.x
    add_pp r2.yzw, r2, r4.xxyz
    mul_pp r2.xyz, r2.x, r2.yzww
    mad_pp r0.xyz, r2, c12, r0
    mad_pp r0.xyz, r1, c14, r0
    mul_sat r0.w, r6.w, v3.w
    abs r1.x, c3.x
    if_ne c3.x, -c3.x
      texld r2, c15.yxzw, s2
      add r1.y, -r2.y, v8.w
      mad r3.z, r2.x, r1.y, r3.x
      mov r3.w, v8.w
      mov r1.yzw, r3.xzyw
    else
      mov r1.yzw, c15.x
    endif
    mov r3.z, v8.w
    cmp r1.xyz, -r1.x, r3, r1.yzww
    rcp r1.z, r1.z
    mul r1.xy, r1.z, r1
    mad r1.xy, r1, c1, c1.wzzw
    mov r1.zw, c15.x
    texldl r1, r1, s1
    add r1.x, r1.w, -c2.y
    add r1.y, -r1.x, c15.z
    rcp r1.x, r1.x
    cmp r1.x, r1.y, c15.w, r1.x
    mad r1.x, c2.x, r1.x, -v8.w
    mul_sat r1.x, r1.x, c16.x
    mul_pp oC0.w, r0.w, r1.x
    mad_pp oC0.xyz, r0, v6.w, v6

// approximately 93 instruction slots used (8 texture, 85 arithmetic)
