//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   CameraWorldPos          c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   DNEResolution           c7       1
//   UniformPixelVector_1    c8       1
//   UniformPixelVector_2    c9       1
//   UniformPixelScalars_1   c10      1
//   UniformPixelScalars_2   c11      1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//

    ps_3_0
    def c4, 0.100000001, 0, 1, 0.0625
    def c5, 9.99999975e-006, 100000, 0.200000003, 4
    def c6, 0.00392156886, -0.00392156886, -255, 0
    def c12, 1, 0, 1.41789806, -0.99000001
    dcl_texcoord5 v0.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_7D5081B2_6953976.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    add r0.xy, c0, v0
    mad r0.zw, vPos.xyxy, c7.xyxy, c7
    mul r1.yz, r0.xzww, v0.w
    rcp r0.z, c10.x
    mul_pp r2.xy, r0.z, r0
    mad_pp r0.xy, r0, r0.z, c8
    texld_pp r0, r0, s2
    dp2add_pp r0.w, r0, -r0, c12.x
    max_pp r2.z, r0.w, c12.y
    rsq_pp r0.w, r2.z
    rcp_pp r0.z, r0.w
    mov r2.z, c12.z
    mad_pp r2.xy, r2, r2.z, c9
    texld_pp r2, r2, s2
    dp2add_pp r0.w, r2, -r2, c12.x
    max_pp r2.w, r0.w, c12.y
    rsq_pp r0.w, r2.w
    rcp_pp r2.z, r0.w
    add_pp r0.xyz, r0, r2
    dp3_pp r0.w, r0, r0
    rsq_pp r0.w, r0.w
    mad_pp r0.xyz, r0, r0.w, c12.yyww
    mad_pp r0.xyz, r0, c4.x, c4.yyzw
    dp3_pp r0.z, r0, r0
    rsq_pp r0.z, r0.z
    mul_pp r0, r0.z, r0.xyxy
    abs r2.x, c3.x
    if_ne c3.x, -c3.x
      texld r3, c4.wyzw, s1
      add r2.y, -r3.y, v0.w
      mad r1.x, r3.x, r2.y, r1.y
      mov r1.w, v0.w
      mov r2.yzw, r1.xxzw
    else
      mov r2.yzw, c12.y
    endif
    mov r3.xy, r1.yzzw
    mov r3.z, v0.w
    cmp r2.xyz, -r2.x, r3, r2.yzww
    rcp r1.x, r2.z
    mul r1.xw, r1.x, r2.xyzy
    mad r2.xy, r1.xwzw, c1, c1.wzzw
    mov r2.zw, c12.y
    texldl r2, r2, s0
    add r1.x, r2.w, -c2.y
    add r1.w, -r1.x, c5.x
    rcp r1.x, r1.x
    cmp r1.x, r1.w, c5.y, r1.x
    mad_pp r1.x, c2.x, r1.x, -v0.w
    mul_sat_pp r1.x, r1.x, c5.z
    mul_pp r1.x, r1.x, c11.w
    mul r0, r0, r1.x
    dp2add r2, r0.zwzw, r0.zwzw, -c4.x
    texkill r2
    rcp r1.x, v0.w
    mul r1.xy, r1.x, r1.yzzw
    mad r1.xy, r1, c1, c1.wzzw
    mul r0.zw, r0, c5.w
    mad r1.xy, r0, c6, r1
    mov r1.zw, c12.y
    texldl r1, r1, s0
    add r0.x, r1.w, -c2.y
    add r0.y, -r0.x, c5.x
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c5.y, r0.x
    mad r0.x, c2.x, -r0.x, v0.w
    cmp r0.xy, r0.x, c12.y, r0.zwzw
    max r1.xy, r0, c6.z
    add r0.xy, r1, c6.z
    mul r0.zw, r1.xyxy, c6.x
    cmp r0.xy, r0, c12.x, r0.zwzw
    max oC0.xy, r0, c12.y
    cmp oC0.zw, r0.xyxy, -c12.y, -r0.xyxy

// approximately 80 instruction slots used (7 texture, 73 arithmetic)
