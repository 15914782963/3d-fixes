//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEEnvMapParameter        c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DNEMiscParameter          c7       1
//   DNECubemapPosition        c8       1
//   CameraWorldPos            c9       1
//   DNEResolution             c10      1
//   UniformPixelVector_0      c11      1
//   UniformPixelVector_1      c12      1
//   UniformPixelScalars_0     c13      1
//   UpperSkyColor             c14      1
//   AmbientColorAndSkyFactor  c15      1
//   NvStereoFixTexture        s0       1
//   DNEEnvironmentTexture     s1       1
//   PixelTexture2D_0          s2       1
//   PixelTexture2D_1          s3       1
//   PixelTexture2D_2          s4       1
//   PixelTexture2D_3          s5       1
//   VAOBuffer                 s6       1
//

    ps_3_0
    def c6, 0, 2, 0.699999988, 1
    def c16, -5.55472994, -6.98316002, -0.5, -64
    def c17, 0.00390625, 0.015625, 0.800000012, 0
    def c18, -0.649999976, 3, 0.75, 2
    def c19, 2, 1, 0.5, 0.100000001
    def c20, 0.0625, 0, 0, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord2_pp v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord5 v5
    dcl vPos.xy
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_CB9962F8_281.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v1.w
    add r3.xyz, c9, v5
    mad r4.xy, vPos, c10, c10.zwzw
    mul r4.xy, r4, v5.w
    nrm_pp r5.xyz, v4
    mad_sat_pp r0.w, c7.x, v5.w, c7.y
    mad_pp r5.xyw, r5.z, c6.xxzy, -r5.xyzz
    mov r6.zw, c6
    mad_pp r6.xyz, c5.w, r6.z, c5
    texld_pp r7, v2, s5
    mov_sat_pp r7.x, r7.x
    add_pp r1.w, -r7.x, c6.w
    mul_pp r7.yzw, r1.w, c12.xxyz
    add_pp r8.xyz, r6.w, -c11
    mul_pp r7.yzw, r7, r8.xxyz
    mad_pp r7.yzw, r7, c4.w, c4.xxyz
    dp3_pp r1.x, r1, r5.xyww
    dp3_pp r1.y, r2, r5.xyww
    dp3_pp r1.z, r0, r5.xyww
    add r0.xyz, r3, -c8
    mad_pp r1.xyz, c0.w, r0, r1
    mov_pp r2.zw, c7
    mad_pp r1.w, r2.z, c13.x, r2.w
    texldl_pp r1, r1, s1
    mov_sat_pp r0.x, r5.z
    max_pp r2.xyz, c13.x, r6
    mad_pp r0.y, r0.x, c16.x, c16.y
    mul_pp r0.x, r0.x, r0.y
    exp_pp r0.x, r0.x
    lrp_pp r3.xyz, r0.x, r2, r6
    mul_pp r0.xyz, r1, r3
    mul_pp r0.xyz, r0, c0
    mul_pp r1.xyz, r0, r0.w
    add_pp r2.xy, c16.z, v2
    add_pp r1.w, c16.w, v5.w
    mul_sat_pp r1.w, r1.w, c17.x
    mad_pp r2.zw, r1.w, c18.xyxy, c18
    lrp_pp r3.xy, r2.z, r5, r2
    mad_pp r3.xy, r3, c19, c19.zwzw
    rcp r2.x, v5.w
    mul r2.yz, r2.x, r4.xxyw
    mad_pp r2.yz, r2, c1.xxyw, c1.xwzw
    dsx_pp r5.x, r2.y
    dsy_pp r5.y, r2.z
    rcp r6.x, r5.x
    rcp r6.y, r5.y
    mul_pp r5.xy, r2.yzzw, r6
    mul_pp r5.xy, r5, c17.y
    texld_pp r5, r5, s2
    add_pp r3.w, r2.w, r5.y
    mov r3.z, c6.x
    texldl r3, r3, s3
    mad_pp r1.w, r1.w, -r3.w, r3.w
    mul_pp r1.w, r1.w, c17.z
    mad_pp r0.xyz, r0.w, -r0, r3
    mad_pp r0.xyz, r1.w, r0, r1
    texld_pp r1, r2.yzzw, s4
    lrp_pp r2.yzw, r7.x, r1.xxyz, r0.xxyz
    add_pp r0.xyz, r2.yzww, c11
    mad_pp r0.xyz, v3, r7.yzww, r0
    mul r1.xyz, r7.yzww, c14
    mad_pp r0.xyz, r1, c15.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r1, c20, s0
      add r1.y, -r1.y, v5.w
      mad r4.z, r1.x, r1.y, r4.x
      mov r4.w, v5.w
      mov r1.xyz, r4.zyww
    else
      mov r1.xyz, c6.x
    endif
    mov r4.z, v5.w
    cmp r1.xyz, -r0.w, r4, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s6
    mul_pp oC0.xyz, r0, r1.x
    mad oC0.w, c2.x, r2.x, c2.y

// approximately 96 instruction slots used (9 texture, 87 arithmetic)
