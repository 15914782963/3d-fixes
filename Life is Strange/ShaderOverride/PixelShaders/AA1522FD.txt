//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_2;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   DNEResolution                c8       1
//   UniformPixelVector_0         c9       1
//   UniformPixelVector_2         c10      1
//   UniformPixelScalars_0        c11      1
//   UniformPixelScalars_1        c12      1
//   UniformPixelScalars_2        c13      1
//   LightColorAndFalloffExponent c14      1
//   SpotDirection                c15      1
//   SpotAngles                   c16      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//   PixelTexture2D_4             s7       1
//

    ps_3_0
    def c2, 2, -1, 1, 0.5
    def c6, 0.0625, 0, 0.0500000007, 153.600006
    def c17, -0.5, -0.0599999987, -0.75, -0.699999988
    def c18, 1.44927537, 1.43884897, -0.0869565234, -0.115107916
    def c19, -0.699999988, 0.699999988, -1, 0
    def c20, 0.699999988, 1, 0, -0.699999988
    def c21, 6, 5, -0.0799999982, -0.774999976
    def c22, 0.0599999987, 0.75, 0.0799999982, 0.774999976
    def c23, 0.166666672, 0.200000003, 0.0333333351, 0.111111
    def c24, 2954.63867, 2047.9989, 2, 0.125
    def c25, -5.55472994, -6.98316002, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5 v2.xyz
    dcl_texcoord6 v3.xyz
    dcl_texcoord7 v4.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_AA1522FD_787.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v3, v3
    rsq_pp r0.x, r0.x
    mad_sat_pp r0.y, c7.x, v4.w, c7.y
    mul_pp r0.y, r0.y, c0.x
    texld_pp r1, v0, s3
    mad_pp r1.xyz, r1, c2.x, c2.y
    nrm_pp r2.xyz, r1
    nrm_pp r1.xyz, v1
    mad_pp r0.xzw, v3.xyyz, r0.x, r1.xyyz
    nrm_pp r3.xyz, r0.xzww
    dp3 r0.x, v2, v2
    rsq r0.z, r0.x
    mul r4.xyz, r0.z, v2
    dp3 r0.z, r4, -c15
    add r0.z, r0.z, -c16.x
    mul_sat r0.z, r0.z, c16.y
    mul_pp r4.x, r0.z, r0.z
    texld_pp r5, c2.zwzw, s0
    mov r4.yw, c2.w
    texld_pp r6, r4, s0
    add r0.z, -r0.x, c2.z
    mul r0.z, r5.x, r0.z
    mul r7, r6.x, r0.z
    mov r8, r7
    texkill r8
    if b0
      mad r0.zw, vPos.xyxy, c8.xyxy, c8
      mul r7.xy, r0.zwzw, v4.w
      if_ne c3.x, -c3.x
        texld r8, c6, s1
        add r0.z, -r8.y, v4.w
        mad r7.z, r8.x, r0.z, r7.x
        mov r7.xy, r7.zyzw
        mov r0.z, v4.w
      else
        mov r0.z, v4.w
      endif
      rcp r0.z, r0.z
      mul r0.zw, r0.z, r7.xyxy
      mad r0.zw, r0, c1.xyxy, c1.xywz
      texld r8, r0.zwzw, s2
      mul_pp r5.yzw, r8.xxyz, r8.xxyz
      mul_pp r5.yzw, r5, r5.x
    else
      mov_pp r5.yzw, r5.x
    endif
    mov r0.z, c6.z
    mad_pp r6.yzw, c5.w, r0.z, c5.xxyz
    mov_sat r0.x, r0.x
    add r0.x, -r0.x, c2.z
    pow_sat_pp r4.z, r0.x, c14.w
    texld_pp r4, r4.zwzw, s0
    texld_pp r8, v0, s4
    add r9, c17.xxyz, v0.xyxx
    texld_pp r10, c10, s5
    mov r4.yz, c2
    add r0.x, r4.y, c12.y
    mul r0.x, r0.x, r10.y
    mad_pp r0.x, c12.z, r0.x, r4.z
    mad_pp r0.xz, r0.x, r9.xyyw, c2.w
    mad_pp r11.xy, r0.xzzw, c18, c18.zwzw
    mul_pp r0.x, c12.w, c12.z
    mul_pp r0.x, r10.x, r0.x
    frc_pp r0.z, r0.x
    add_pp r10.w, -r0.z, r0.x
    exp_pp r0.x, r10.w
    rcp r0.x, r0.x
    mul_pp r0.x, r0.x, c6.w
    rcp r0.x, r0.x
    mul_pp r0.x, r0.x, r0.z
    mad_pp r12, r0.x, c20.xxyz, r11.xyxy
    mul r10.xyz, r12.xyxw, c20.yyzw
    texldl_pp r13, r10, s6
    mul r10.xyz, r12.zwxw, c20.yyzw
    texldl_pp r12, r10, s6
    add_pp r7.xyz, r12, r13
    mad_pp r12.xyz, r0.x, -c20.wyxw, r11.xyyw
    mov_pp r10.xy, r12.xzzw
    texldl_pp r13, r10, s6
    add_pp r7.xyz, r7, r13
    mad_pp r10.xy, r0.x, c20.zyzw, r11
    texldl_pp r13, r10, s6
    mov r11.zw, r10
    texldl_pp r10, r11, s6
    add_pp r10.xyz, r10, r13
    mov r12.xzw, r11
    texldl_pp r13, r12, s6
    add_pp r10.xyz, r10, r13
    add_pp r7.xyz, r7, r10
    mad_pp r10, r0.x, c19, r11.xyxy
    mov_pp r12.xy, r10
    texldl_pp r13, r12, s6
    mov_pp r12.xy, r10.zwzw
    texldl_pp r10, r12, s6
    add_pp r10.xyz, r10, r13
    mad_pp r12.xy, r0.x, c17.w, r11
    texldl_pp r12, r12, s6
    add_pp r0.xzw, r10.xyyz, r12.xyyz
    add_pp r0.xzw, r0, r7.xyyz
    mul_pp r4.yw, r11.xxzy, c23.xxzy
    mov r7.xy, c13
    mul_pp r1.w, r7.x, c11.x
    mul r7.xz, r1.w, c23
    frc r7.xz, r7_abs
    cmp r7.xz, r1.w, r7, -r7
    mul_pp r7.xz, r7, c21.xyyw
    frc_pp r9.xy, r7.xzzw
    add_pp r7.xz, r7, -r9.xyyw
    mad_pp r7.xz, r7, c23.xyyw, r4.yyww
    texld_pp r10, r7.xzzw, s7
    rcp_pp r2.w, c13.x
    add_pp r3.w, r2.w, c11.x
    mul_pp r3.w, r3.w, c13.x
    mul r7.xz, r3.w, c23
    frc r7.xz, r7_abs
    cmp r7.xz, r3.w, r7, -r7
    mul_pp r7.xz, r7, c21.xyyw
    frc_pp r9.xy, r7.xzzw
    add_pp r7.xz, r7, -r9.xyyw
    mad_pp r4.yw, r7.xxzz, c23.xxzy, r4
    texld_pp r11, r4.ywzw, s7
    frc r3.w, r1_abs.w
    cmp r1.w, r1.w, r3.w, -r3.w
    mul_pp r1.w, r2.w, r1.w
    mul_pp r1.w, r1.w, c13.x
    lrp_pp r12.xyz, r1.w, r11, r10
    mul_pp r1.w, r7.y, c12.z
    mul_pp r7.xyz, r12, r1.w
    mad_pp r0.xzw, r0, c23.w, r7.xyyz
    add r10, c22, -v0.xxyy
    cmp_pp r4.yw, r10, c20.y, c20.z
    cmp_pp r1.w, r9.w, r4.y, c2.z
    add r7.xy, c21.zwzw, v0.y
    cmp_pp r2.w, r7.y, r4.w, c2.z
    mul_pp r1.w, r1.w, r2.w
    cmp_pp r1.w, r10.z, -c6.y, -r1.w
    cmp_pp r1.w, r7.x, r1.w, -c6.y
    cmp_pp r1.w, r10.x, -c6.y, r1.w
    cmp_pp r1.w, r9.z, r1.w, -c6.y
    cmp_pp r0.xzw, r1.w, r8.xyyz, r0
    add_pp r4.yzw, r4.z, -c9.xxyz
    mul_pp r0.xzw, r0, r4.yyzw
    mad_pp r0.xzw, r0, c4.w, c4.xyyz
    mul_pp r1.w, r6.x, r4.x
    dp3_sat_pp r2.w, r2, r1
    mul_pp r3.w, r2.w, c0.w
    mul_sat_pp r1.w, r1.w, c0.y
    mul_pp r1.w, r1.w, r1.w
    dp3_sat_pp r2.x, r2, r3
    mul_pp r2.y, r1.w, c24.x
    mad_pp r1.w, r1.w, c24.y, c24.z
    mul_pp r1.w, r1.w, c24.w
    mad r2.x, r2.y, r2.x, -r2.y
    exp_pp r2.x, r2.x
    mul_pp r1.w, r1.w, r2.x
    mul_pp r1.w, r2.w, r1.w
    mul_pp r0.y, r0.y, r1.w
    dp3_sat_pp r1.x, r1, r3
    mad_pp r1.y, r1.x, c25.x, c25.y
    mul_pp r1.x, r1.x, r1.y
    exp_pp r1.x, r1.x
    lrp_pp r2.xyz, r1.x, c2.z, r6.yzww
    mul_pp r1.xyz, r0.y, r2
    mad_pp r0.xyz, r0.xzww, r3.w, r1
    mul_pp r0.xyz, r5.yzww, r0
    mul r0.xyz, r0, c14
    mul r0.xyz, r4.x, r0
    mul r0.xyz, r6.x, r0
    cmp oC0.xyz, -r7.w, c6.y, r0
    mov oC0.w, c6.y

// approximately 191 instruction slots used (28 texture, 163 arithmetic)
