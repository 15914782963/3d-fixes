//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DebugMode[5];
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   sampler2D MipTextureParameter;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ObjectMacroUVScales;
//   float3 ObjectNDCPosition;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEResolution             c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DebugMode                 c7       5
//   ObjectNDCPosition         c12      1
//   ObjectMacroUVScales       c13      1
//   UniformPixelVector_0      c14      1
//   SceneColorTexture         s0       1
//   NvStereoFixTexture        s1       1
//   PixelTexture2D_0          s2       1
//   PixelTexture2D_1          s3       1
//   MipTextureParameter       s4       1
//

    ps_3_0
    def c6, 4, 0.0625, 0, 9.99999975e-006
    def c15, 100000, 0.00249999994, 0, 0
    def c16, 1, 0, 0.5, -2
    def c17, -0, 0, 1, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord1 v3
    dcl_texcoord2 v4.x
    dcl_texcoord7 v5.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed --ignore-parse-errors CRC32_7E004B6C_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mul r0, r0.x, v1.yzxy
    dp3_pp r1.x, v0, v0
    rsq_pp r1.x, r1.x
    mul r1, r1.x, v0.zyyx
    mul_pp r2.xy, r0.ywzw, r1.zwzw
    mad_pp r1.yz, r0.xxzw, r1.xxyw, -r2.xxyw
    mul r2.xy, r1.yzzw, v1.w
    mad r1.yz, vPos.xxyw, c0.xxyw, c0.xzww
    mul r3.xy, r1.yzzw, v5.w
    texld r4, v2, s4
    mad r4, r4.xyzx, c16.xxxy, c16.yyyx
    mul r5, r4, c7.y
    mad r4, c7.x, r4, r5
    mov r5.zw, c7
    mul r6.xyz, r5.z, c4
    mov r6.w, c7.z
    add r4, r4, r6
    mad r4, r5.w, c16.zzxx, r4
    mov r5.xyz, c16
    mad r4, c8.x, r5.yxyx, r4
    mov r1.y, c8.y
    mul r6.xyz, r1.y, c5
    mov r6.w, c8.y
    add r4, r4, r6
    rcp r0.w, v5.w
    mul r1.yz, r0.w, r3.xxyw
    mad r6.xy, r3, r0.w, -c12
    mad r5.zw, r6.xyxy, c13, r5.z
    texld r6, r5.zwzw, s2
    mad r5.zw, r6.xyxy, -c16.w, -c16.x
    mov r6.xy, v2
    mad r5.zw, v4.x, r5, r6.xyxy
    add r5.zw, r5, -c16.z
    dp2add r0.w, r5.zwzw, r5.zwzw, c16.y
    mul_sat r0.w, r0.w, c6.x
    add r0.w, -r0.w, c16.x
    abs r5.z, c3.x
    if_ne c3.x, -c3.x
      texld r6, c6.yzzw, s1
      add r5.w, -r6.y, v5.w
      mad r3.z, r6.x, r5.w, r3.x
      mov r3.w, v5.w
      mov r6.xyz, r3.zyww
    else
      mov r6.xyz, c16.y
    endif
    mov r3.z, v5.w
    cmp r3.xyz, -r5.z, r3, r6
    rcp r3.z, r3.z
    mul r3.xy, r3.z, r3
    mad r3.xy, r3, c1, c1.wzzw
    mov r3.zw, c16.y
    texldl r3, r3, s0
    add r3.x, r3.w, -c2.y
    add r3.y, -r3.x, c6.w
    rcp r3.x, r3.x
    cmp r3.x, r3.y, c15.x, r3.x
    mad r3.x, c2.x, r3.x, -v5.w
    mul_sat r3.x, r3.x, c15.y
    mul r0.w, r0.w, r3.x
    texld r3, r0.w, s3
    mul r3, r3.y, v3
    mad r1.yz, r1, c1.xxyw, c1.xwzw
    texld r6, r1.yzzw, s0
    mad_sat r3.xyz, r3.w, r6, r3
    add_pp r3.xyz, r3, c14
    mov r3.w, c16.x
    mad r3, c8.z, r3, r4
    mov_pp r2.z, r1.x
    mov_pp r2.w, r0.y
    mad r4.xyz, r2.zyww, c16.z, c16.z
    mov r4.w, c16.x
    mad r3, c8.w, r4, r3
    mov r0.x, r1.w
    mov r0.y, r2.x
    mad r0.xyz, r0, c16.z, c16.z
    mov r0.w, c16.x
    mad r0, c9.x, r0, r3
    mad r1, v3.xyzx, c16.xxxy, c16.yyyx
    mad r0, c9.y, r1, r0
    mad r1, v3.wwwx, c16.xxxy, c16.yyyx
    mad r0, c9.z, r1, r0
    mov r1.w, c9.w
    mad r0, r1.w, c17.xxyz, r0
    mad r0, c10.x, r5.yyyx, r0
    mad r0, c10.y, r5.yyyx, r0
    mad r0, c10.z, r5.yyyx, r0
    mad r0, c10.w, r5.yyyx, r0
    mad r0, c11.x, r5.yyyx, r0
    mad r0, c11.y, r5.yyyx, r0
    mad r0, c11.z, r5.yyyx, r0
    mad oC0, c11.w, r5.yyyx, r0

// approximately 98 instruction slots used (7 texture, 91 arithmetic)
