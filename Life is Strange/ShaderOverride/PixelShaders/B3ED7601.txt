//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D PixelTexture2D_6;
//   sampler2D PixelTexture2D_7;
//   sampler2D PixelTexture2D_8;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowTexture;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_4;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//   float4 UniformPixelVector_7;
//   float4 UniformPixelVector_8;
//   float4 UniformPixelVector_9;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   CameraWorldPos               c8       1
//   DNEResolution                c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelVector_1         c11      1
//   UniformPixelVector_2         c12      1
//   UniformPixelVector_3         c13      1
//   UniformPixelVector_4         c14      1
//   UniformPixelVector_5         c15      1
//   UniformPixelVector_6         c16      1
//   UniformPixelVector_7         c17      1
//   UniformPixelVector_8         c18      1
//   UniformPixelVector_9         c19      1
//   UniformPixelScalars_0        c20      1
//   UniformPixelScalars_1        c21      1
//   UniformPixelScalars_2        c22      1
//   UniformPixelScalars_4        c23      1
//   LightColorAndFalloffExponent c24      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//   PixelTexture2D_4             s7       1
//   PixelTexture2D_5             s8       1
//   PixelTexture2D_6             s9       1
//   PixelTexture2D_7             s10      1
//   PixelTexture2D_8             s11      1
//   ShadowTexture                s12      1
//

    ps_3_0
    def c2, 0.315322369, 0.948984623, 0, -0.948984623
    def c6, 3.12500015e-005, 0.000187500002, -0.5, 2.5
    def c25, -12, -20, 5, 0.000624999986
    def c26, 0.000976999989, 0.25, -0.949999988, 0.5
    def c27, 6.28318548, -3.14159274, 30, 2
    def c28, 10, 1.52876604, 0.0625, 0
    def c29, 0.100000001, 0.00400000019, 0.0399999991, 0.00195299997
    def c30, 0.300000012, 0.0799999908, 0.5, 0.75
    def c31, 0.800000012, 0.699999988, 0.550000012, 1.40624998e-005
    def c32, 7.60526891e-005, 0.899999976, -0, -1
    def c33, 4, 0.0432900488, 0.5, 0.00022365569
    def c34, 0.400000036, 0.800000012, 0.699999988, 0.400000006
    def c35, 1.79999995, -9.99999997e-007, 0.693147004, 2
    def c36, 0.0299999993, 0, 1.00999999, 7.5
    def c37, -3.25, 2, 2.79415617e-005, 1
    def c38, 0.125, -5.55472994, -6.98316002, 0
    def c39, 6.24999984e-006, 0.000781250012, 0.100000001, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.y
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5 v3.xyz
    dcl_texcoord6 v4.xyz
    dcl_texcoord7 v5.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9
    dcl_2d s10
    dcl_2d s11
    dcl_2d s12

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_B3ED7601_218.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    add r0.xy, c8, v5
    dp3_pp r0.z, v4, v4
    rsq_pp r0.z, r0.z
    mad_sat_pp r0.w, c7.x, v5.w, c7.y
    mul_pp r0.w, r0.w, c0.x
    mul_pp r1, r0.xyxy, c6.xxyy
    mov r2.xy, c6
    mad_pp r2.yz, r0.xxyw, r2.y, c11.xxyw
    texld_pp r3, r2.yzzw, s3
    mov_pp r4.x, r1.z
    mov r4.y, c22.z
    texld_pp r5, r4, s3
    add_pp r2.y, r5.y, c6.z
    mul_pp r2.y, r3.y, r2.y
    mad_pp r2.z, v1.y, c37.x, c37.y
    texld_pp r3, r1.zwzw, s3
    add_pp r1.z, r3.y, c6.z
    mul_pp r1.w, r1.z, c6.w
    mad_pp r1.z, r1.z, -c6.z, r2.z
    mad_pp r1.z, r2.y, -c6.z, r1.z
    add_pp r2.yz, r0.xxyw, c6.z
    dp2add_pp r3.x, c2, r2.yzzw, c2.z
    dp2add_pp r3.y, c2.wxzw, r2.yzzw, c2.z
    add_pp r3, r3.xyxy, -c6.z
    mov r2.yzw, c37
    mad_pp r3.xy, r3, r2.z, c12
    texld_pp r5, r3, s4
    dp2add_pp r2.z, r5, -r5, c37.w
    max_pp r3.x, r2.z, c2.z
    rsq_pp r2.z, r3.x
    rcp_pp r5.z, r2.z
    mov r3.x, c32.x
    mad_pp r3.xy, r3.zwzw, r3.x, c13
    texld_pp r3, r3, s4
    dp2add_pp r2.z, r3, -r3, c37.w
    max_pp r3.w, r2.z, c2.z
    rsq_pp r2.z, r3.w
    rcp_pp r3.z, r2.z
    mad_pp r3.xyz, r3, -c32.y, r5
    dp3_pp r2.z, r3, r3
    rsq_pp r2.z, r2.z
    mad_pp r3.xyz, r3, r2.z, c32.zzww
    mad_pp r3.xyz, r3, c36.x, c36.yyzw
    nrm_pp r5.xyz, r3
    mul_pp r3.xyz, r0.xxyw, c39.xyyw
    mov r3.w, c20.z
    texld_pp r6, r3.xwzw, s3
    mov r3.w, c36.w
    mad_pp r2.z, r6.y, r3.w, c23.y
    mad_pp r2.z, r2.z, c39.z, c39.w
    frc_pp r2.z, r2.z
    mad_pp r2.z, r2.z, c27.x, c27.y
    sincos_pp r6.y, r2.z
    add_pp r2.z, r1.z, r6.y
    max_pp r3.x, r6.y, c2.z
    texld_pp r6, r3.yzzw, s5
    add_pp r3.x, r3.x, r6.x
    mad_pp r3.x, r3.x, c27.z, c27.w
    mul_sat_pp r3.x, r2.z, r3.x
    frc_pp r3.y, -r3.x
    add_sat_pp r3.y, r3.y, r3.x
    cmp_pp r5.xyz, -r3.y, -c32.zzww, r5
    nrm_pp r6.xyz, r5
    nrm_pp r5.xyz, v2
    mad_pp r7.xyz, v4, r0.z, r5
    nrm_pp r8.xyz, r7
    mul_pp r3.zw, r0.xyxy, c26.x
    texld_pp r7, r3.zwzw, s7
    mul_pp r0.z, r7.x, c26.y
    add_pp r3.z, c26.z, v1.y
    mad_sat_pp r3.zw, r3.z, c25.xyxy, r1.w
    mad r1.w, r7.x, -c26.y, c26.w
    mad_pp r0.z, r3.z, r1.w, r0.z
    mad_pp r1.w, r7.x, r2.y, c23.z
    frc_pp r1.w, r1.w
    mad_pp r4.yw, r1.w, c30.xxzy, c30.xzzx
    mov r4.z, c20.w
    texld_pp r7, r4.xzzw, s3
    mov r7.zw, c25
    mad_pp r1.w, r7.y, r7.z, c21.x
    mad_pp r1.w, r1.w, c39.z, c39.w
    frc_pp r1.w, r1.w
    mad_pp r1.w, r1.w, c27.x, c27.y
    sincos_pp r9.y, r1.w
    add_pp r1.z, r1.z, r9.y
    mov_sat_pp r1.z, -r1.z
    add_pp r1.z, -r1.z, c37.w
    mul_pp r1.zw, r3, r1.z
    lrp_pp r2.y, r1.z, r4.y, r0.z
    mad_pp r4.xy, r0, r7.w, c19
    texld_pp r7, r4, s11
    mad_pp r0.z, r7.x, -c6.z, -c6.z
    cmp_pp r0.z, -r3.y, r2.y, r0.z
    mad_pp r0.z, r0.z, c28.x, c28.y
    exp_pp r0.z, r0.z
    texld_pp r7, v0, s12
    mov_sat_pp r7.x, r7.x
    mov r7.yw, -c6.z
    texld_pp r9, r7, s0
    dp3 r1.z, v3, v3
    add r2.y, -r1.z, c37.w
    mul r10, r9.x, r2.y
    mov r11, r10
    texkill r11
    if b0
      mad r4.xy, vPos, c9, c9.zwzw
      mul r4.xy, r4, v5.w
      if_ne c3.x, -c3.x
        texld r11, c28.zwzw, s1
        add r2.y, -r11.y, v5.w
        mad r4.z, r11.x, r2.y, r4.x
        mov r4.xy, r4.zyzw
        mov r2.y, v5.w
      else
        mov r2.y, v5.w
      endif
      rcp r2.y, r2.y
      mul r4.xy, r2.y, r4
      mad r4.xy, r4, c1, c1.wzzw
      texld r11, r4, s2
      mul_pp r4.xyz, r11, r11
      mul_pp r4.xyz, r4, r9.x
    else
      mov_pp r4.xyz, r9.x
    endif
    mul_pp r2.y, r3.z, c30.w
    mad_pp r1.w, r1.w, c26.y, r2.y
    mul_pp r1.w, r1.w, c28.x
    frc_pp r2.y, r1.w
    add_pp r1.w, r1.w, -r2.y
    mul_pp r3.zw, r1.w, c29.xyxy
    cmp_pp r1.w, -r3.y, r3.w, c29.z
    mad_pp r9.xyz, r1.w, c5.w, c5
    mov_sat r1.z, r1.z
    add r1.z, -r1.z, c37.w
    pow_sat_pp r7.z, r1.z, c24.w
    texld_pp r7, r7.zwzw, s0
    mul_pp r1.zw, r0.xyxy, c29.w
    texld_pp r11, r1.zwzw, s6
    mad_pp r7.yzw, r4.w, c31.xxyz, -r11.xxyz
    mad_pp r7.yzw, r3.z, r7, r11.xxyz
    mov r1.w, c31.w
    mad_pp r3.zw, r0.xyxy, r1.w, c14.xyxy
    texld_pp r11, r3.zwzw, s8
    mad_pp r1.zw, r0.xyxy, r1.w, c15.xyxy
    texld_pp r12, r1.zwzw, s8
    texld_pp r1, r1, s8
    mov r13.xw, c33
    mad_pp r1.x, r1.w, r13.x, c20.x
    mad_pp r1.x, r1.x, c33.y, c33.z
    frc_pp r1.x, r1.x
    mad_pp r1.x, r1.x, c27.x, c27.y
    sincos_pp r14.y, r1.x
    add_pp r1.x, r14.y, c37.w
    mul_pp r1.x, r1.x, -c6.z
    lrp_pp r2.y, r1.x, r12.w, r11.w
    add_pp r1.y, -r2.y, c37.w
    mad_pp r1.y, r1.y, c34.x, c34.y
    lrp_pp r2.y, r1.x, r11.w, r12.w
    mad_pp r1.x, r2.y, c34.z, c34.w
    mad_pp r1.zw, r0.xyxy, r2.x, c16.xyxy
    texld_pp r11, r1.zwzw, s9
    mad_pp r1.zw, r0.xyxy, r2.x, c17.xyxy
    texld_pp r12, r1.zwzw, s9
    add_pp r1.z, r11.y, r12.y
    mad_pp r0.xy, r0, r13.w, c18
    texld_pp r11, r0, s9
    add_pp r0.x, r1.z, r11.y
    mul_pp r0.x, r0.x, r1.x
    mov_sat_pp r2.z, r2.z
    mad_pp r0.x, r0.x, c35.x, -r2.z
    add_sat_pp r0.x, r0.x, c37.w
    add r0.y, r0.x, c35.y
    mul_pp r0.x, r0.x, r0.x
    cmp_pp r0.x, r0.y, r0.x, c2.z
    texld_pp r11, r0.x, s10
    mul_pp r1.xyz, r1.y, r11
    frc_pp r0.x, r3.x
    add_pp r0.x, -r0.x, r3.x
    add_sat_pp r0.x, -r0.x, c37.w
    mul_pp r0.x, r3.y, r0.x
    cmp_pp r1.xyz, -r0.x, r1, c37.w
    cmp_pp r1.xyz, -r3.y, r7.yzww, r1
    add_pp r2.xyz, r2.w, -c10
    mul_pp r1.xyz, r1, r2
    mad_pp r1.xyz, r1, c4.w, c4
    dp3_sat_pp r0.x, r6, r5
    mul_pp r0.y, r0.x, c0.w
    mul_sat_pp r1.w, r7.x, c0.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.z, r0.z, r1.w
    dp3_sat_pp r1.w, r6, r8
    mad_pp r2.x, r0.z, c35.z, c35.w
    mul_pp r2.x, r2.x, c38.x
    mad r0.z, r0.z, r1.w, -r0.z
    exp_pp r0.z, r0.z
    mul_pp r0.z, r0.z, r2.x
    mul_pp r0.x, r0.x, r0.z
    mul_pp r0.x, r0.w, r0.x
    dp3_sat_pp r0.z, r5, r8
    mad_pp r0.w, r0.z, c38.y, c38.z
    mul_pp r0.z, r0.z, r0.w
    exp_pp r0.z, r0.z
    lrp_pp r2.xyz, r0.z, c37.w, r9
    mul_pp r0.xzw, r0.x, r2.xyyz
    mad_pp r0.xyz, r1, r0.y, r0.xzww
    mul_pp r0.xyz, r4, r0
    mul r0.xyz, r7.x, r0
    mul r0.xyz, r0, c24
    cmp oC0.xyz, -r10.w, c2.z, r0
    mov oC0.w, c2.z

// approximately 250 instruction slots used (23 texture, 227 arithmetic)
