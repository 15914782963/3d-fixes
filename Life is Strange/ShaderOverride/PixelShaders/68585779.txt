//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNEResolution                c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   UniformPixelVector_0         c7       1
//   UniformPixelScalars_0        c8       1
//   LightColorAndFalloffExponent c9       1
//   UpperSkyColor                c10      1
//   AmbientColorAndSkyFactor     c11      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   PixelTexture2D_0             s2       1
//   PixelTexture2D_1             s3       1
//   PixelTexture2D_2             s4       1
//   VAOBuffer                    s5       1
//

    ps_3_0
    def c5, 1, 0.0625, 0, 0.5
    def c6, -100, 2, -1, 0
    dcl_texcoord4 v0.xyz
    dcl_texcoord6 v1.xyz
    dcl_texcoord5 v2.w
    dcl_texcoord v3.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_68585779_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v2.w
    dp3_pp r1.x, v1, v1
    rsq_pp r1.x, r1.x
    nrm_pp r2.xyz, v0
    texld r3, v3, s2
    mov r4.xw, c5
    add r1.yzw, r4.x, -c7.xxyz
    mul_pp r1.yzw, r1, r3.xxyz
    mad_pp r1.yzw, r1, c4.w, c4.xxyz
    mad r5.xyz, r3, c4.w, c4
    mul r1.yzw, r1, c10.xxyz
    mov_pp r2.w, c11.w
    mad_pp r1.yzw, r1, r2.w, c7.xxyz
    abs r2.w, c3.x
    if_ne c3.x, -c3.x
      texld r6, c5.yzzw, s1
      add r3.w, -r6.y, v2.w
      mad r0.z, r6.x, r3.w, r0.x
      mov r0.w, v2.w
      mov r6.xyz, r0.zyww
    else
      mov r6.xyz, c5.z
    endif
    mov r0.z, v2.w
    cmp r0.xyz, -r2.w, r0, r6
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s5
    texld_pp r6, c5.xwzw, s0
    mov r7.x, c6.x
    max r0.y, -c8.y, r7.x
    min r2.w, r0.y, c5.z
    mad r0.y, c8.y, r4.w, r4.x
    mad_pp r0.zw, v1.xyxy, r1.x, r2.xyxy
    texld_pp r4, v3, s3
    mad r4.xyz, r4, c6.y, c6.z
    add r0.zw, r0, -r4.xyxy
    mad_sat r0.zw, r0, c5.w, c5.w
    texld r7, r0.zwzw, s4
    lrp_sat r1.x, r7.x, r0.y, r2.w
    dp3_sat r0.y, r2, r4
    mad r0.yzw, r0.y, r3.xxyz, r1.x
    mul r2.xyw, r2.z, c4.xyzz
    cmp r2.xyz, r2.z, r2.xyww, c5.z
    mad r0.yzw, r0, c4.w, r2.xxyz
    mul r0.yzw, r6.x, r0
    mul_pp r0.yzw, r0, c9.xxyz
    mad_pp r0.xyz, r1.yzww, r0.x, r0.yzww
    mad_pp oC0.xyz, r5, c11, r0
    rcp r0.x, v2.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 57 instruction slots used (6 texture, 51 arithmetic)
