//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEEnvMapParameter           c7       1
//   DNEResolution                c8       1
//   UniformPixelVector_0         c9       1
//   LightColorAndFalloffExponent c10      1
//   UpperSkyColor                c11      1
//   AmbientColorAndSkyFactor     c12      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   DNEEnvironmentTexture        s2       1
//   VAOBuffer                    s3       1
//

    ps_3_0
    def c6, 0, 2, 0.0625, -9.99999997e-007
    def c13, 1, 0.5, 15, 0
    dcl_texcoord4 v0.xyz
    dcl_texcoord6 v1.xyz
    dcl_texcoord5 v2.w
    dcl_color v3.xyz
    dcl_color1 v4
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_3FEF5F19_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v4
    nrm_pp r1.xyz, v3
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v4.w
    mad r3.xy, vPos, c8, c8.zwzw
    mul r3.xy, r3, v2.w
    nrm_pp r4.xyz, v1
    nrm_pp r5.xyz, v0
    mad_pp r4.xyz, r4.z, c6.xxyw, -r4
    dp3_pp r1.x, r1, r4
    dp3_pp r1.y, r2, r4
    dp3_pp r1.z, r0, r4
    mov r1.w, c6.x
    texldl_pp r0, r1, s2
    mov_pp r1.xyz, c7
    mad_pp r0.xyz, r0, r1, c9
    mov r1.xyz, c4
    mul r2.xyz, r1, c11
    mad_pp r0.xyz, r2, c12.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r2, c6.zxzw, s1
      add r1.w, -r2.y, v2.w
      mad r3.z, r2.x, r1.w, r3.x
      mov r3.w, v2.w
      mov r2.xyz, r3.zyww
    else
      mov_pp r2.xyz, c6.x
    endif
    mov r3.z, v2.w
    cmp r2.xyz, -r0.w, r3, r2
    rcp r0.w, r2.z
    mul r2.xy, r0.w, r2
    mad r2.xy, r2, c1, c1.wzzw
    texld_pp r2, r2, s3
    texld_pp r3, c13, s0
    mov_sat_pp r0.w, r5.z
    add r1.w, r0.w, c6.w
    mul r0.w, r0.w, c0.w
    dp3_sat_pp r2.y, r4, r5
    add r2.z, r2.y, c6.w
    pow_pp r3.y, r2.y, c13.z
    mul r2.y, r3.y, c0.x
    mul r3.yzw, r0.w, c4.xxyz
    cmp r3.yzw, r1.w, r3, c6.x
    mul_pp r4.xyz, r2.y, c5
    cmp_pp r2.yzw, r2.z, r4.xxyz, c6.x
    add_pp r2.yzw, r2, r3
    mul_pp r2.yzw, r3.x, r2
    mul_pp r2.yzw, r2, c10.xxyz
    mad_pp r0.xyz, r0, r2.x, r2.yzww
    mad_pp oC0.xyz, r1, c12, r0
    rcp r0.x, v2.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 68 instruction slots used (5 texture, 63 arithmetic)
