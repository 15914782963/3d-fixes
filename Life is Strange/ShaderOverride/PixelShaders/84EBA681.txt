//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEResolution                c7       1
//   LightColorAndFalloffExponent c8       1
//   SpotDirection                c9       1
//   SpotAngles                   c10      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//

    ps_3_0
    def c2, 6.28318548, -3.14159274, 1, -1
    def c6, 0, 2, 0.0397887342, 0.5
    def c11, -0.333299994, 1, 0.5, -9.99999997e-007
    def c12, 0.0625, 0, 15, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.w
    dcl_texcoord2 v2.x
    dcl_texcoord4_pp v3.xyz
    dcl_texcoord5 v4.xyz
    dcl_texcoord6 v5.xyz
    dcl_texcoord7 v6.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_84EBA681_363.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v5
    nrm_pp r1.xyz, v3
    mad_pp r0.xyz, r0.z, c6.xxyw, -r0
    mad r0.w, v2.x, c6.z, c6.w
    frc r0.w, r0.w
    mad r0.w, r0.w, c2.x, c2.y
    sincos r2.xy, r0.w
    add r2.zw, -c6.w, v0.xyxy
    mul r3.xy, r2, c2.zwzw
    dp2add r3.x, r3, r2.zwzw, c6.x
    dp2add r3.y, r2.yxzw, r2.zwzw, c6.x
    add r2.xy, r3, c6.w
    texld r2, r2, s3
    mad r2, v1.w, r2.w, c11.x
    texkill r2
    dp3 r0.w, v4, v4
    rsq r1.w, r0.w
    mul r2.xyz, r1.w, v4
    dp3 r1.w, r2, -c9
    add r1.w, r1.w, -c10.x
    mul_sat r1.w, r1.w, c10.y
    mul_pp r2.x, r1.w, r1.w
    texld_pp r3, c11.yzzw, s0
    mov r2.yw, c6.w
    texld_pp r4, r2, s0
    add r1.w, -r0.w, c2.z
    mul r1.w, r3.x, r1.w
    mul r5, r4.x, r1.w
    mov r6, r5
    texkill r6
    if b0
      mad r2.xy, vPos, c7, c7.zwzw
      mul r5.xy, r2, v6.w
      if_ne c3.x, -c3.x
        texld r6, c12, s1
        add r1.w, -r6.y, v6.w
        mad r5.z, r6.x, r1.w, r5.x
        mov r5.xy, r5.zyzw
        mov r1.w, v6.w
      else
        mov r1.w, v6.w
      endif
      rcp r1.w, r1.w
      mul r2.xy, r1.w, r5
      mad r2.xy, r2, c1, c1.wzzw
      texld r6, r2, s2
      mul_pp r3.yzw, r6.xxyz, r6.xxyz
      mul_pp r3.yzw, r3, r3.x
    else
      mov_pp r3.yzw, r3.x
    endif
    mov_sat r0.w, r0.w
    add r0.w, -r0.w, c2.z
    pow_sat_pp r2.z, r0.w, c8.w
    texld_pp r2, r2.zwzw, s0
    mov_sat_pp r0.w, r1.z
    add r1.w, r0.w, c11.w
    mul r0.w, r0.w, c0.w
    dp3_sat_pp r0.x, r0, r1
    add r0.y, r0.x, c11.w
    pow_pp r1.x, r0.x, c12.z
    mul r0.x, r1.x, c0.x
    mul r1.xyz, r0.w, c4
    cmp r1.xyz, r1.w, r1, c6.x
    mul_pp r0.xzw, r0.x, c5.xyyz
    cmp_pp r0.xyz, r0.y, r0.xzww, c6.x
    add_pp r0.xyz, r0, r1
    mul_pp r0.xyz, r3.yzww, r0
    mul r0.xyz, r0, c8
    mul r0.xyz, r2.x, r0
    mul r0.xyz, r4.x, r0
    cmp oC0.xyz, -r5.w, c6.x, r0
    mov oC0.w, c6.x

// approximately 94 instruction slots used (6 texture, 88 arithmetic)
