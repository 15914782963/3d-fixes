//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ObjectMacroUVScales;
//   float3 ObjectNDCPosition;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   DNEResolution           c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   ObjectNDCPosition       c7       1
//   ObjectMacroUVScales     c8       1
//   UniformPixelVector_0    c9       1
//   UniformPixelScalars_0   c10      1
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   PixelTexture2D_0        s2       1
//   PixelTexture2D_1        s3       1
//

    ps_3_0
    def c4, 0.5, 0.75, 0.25, 4
    def c5, 0.0625, 0, 100000, 75
    def c6, 0.125, 0.03125, 0.5, 9.99999975e-006
    def c11, 1, 3, 0.03125, 0
    def c12, 75, -0.00100000005, 1000, 0
    dcl_texcoord4 v0
    dcl_texcoord7_pp v1
    dcl_texcoord5 v2.w
    dcl_texcoord v3.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_25233DD7_281.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c0, c0.zwzw
    mul r0.xy, r0, v2.w
    add_pp r1.xyz, c9, v1
    rcp r1.w, v2.w
    mad r2.xy, r0, r1.w, -c7
    mov r3.xy, c4
    mad r2.xy, r2, c8.zwzw, r3
    texld_pp r2, r2, s3
    add r2.xy, r2, v3
    mul r2.xy, r2, c4.z
    mov r3.xy, c11
    add r3, r3.xxyx, c10.x
    mul r4, r3.wwzw, c6.xyxz
    frc r4, r4_abs
    cmp r4, r3, r4, -r4
    mul r3.xyw, r4.xyzz, c4.w
    frc r4.xyz, r3.xyww
    add r5.xyz, r3.xyww, -r4
    mad r2.zw, r5.xyxy, c4.z, r2.xyxy
    texld r6, r2.zwzw, s2
    mul r1.w, r3.z, c11.z
    frc r1.w, r1_abs.w
    cmp r1.w, r3.z, r1.w, -r1.w
    mul r1.w, r1.w, c4.w
    frc r2.z, r1.w
    add r5.w, r1.w, -r2.z
    mad r2.xy, r5.zwzw, c4.z, r2
    texld r2, r2, s2
    lrp r1.w, r4.w, r2.y, r6.y
    mul r2.x, r1.w, v1.w
    abs r2.y, c3.x
    if_ne c3.x, -c3.x
      texld r3, c5, s1
      add r2.z, -r3.y, v2.w
      mad r0.z, r3.x, r2.z, r0.x
      mov r0.w, v2.w
      mov r3.xyz, r0.zyww
    else
      mov r3.xyz, c11.w
    endif
    mov r0.z, v2.w
    cmp r0.xyz, -r2.y, r0, r3
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c11.w
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c6.w
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c5.z, r0.x
    mad r0.y, v1.w, -r1.w, c11.x
    mul r0.z, r0.y, c5.w
    mad r0.x, c2.x, r0.x, -v2.w
    mad r0.y, r0.y, c12.x, c12.y
    rcp r0.z, r0.z
    cmp r0.y, r0.y, r0.z, c12.z
    mul_sat r0.x, r0.y, r0.x
    mul_pp oC0.w, r0.x, r2.x
    mad_pp oC0.xyz, r1, v0.w, v0

// approximately 63 instruction slots used (6 texture, 57 arithmetic)
