//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float2 DistanceFadeParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_6;
//   bool bEnableDistanceShadowFading;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   bEnableDistanceShadowFading  b1       1
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNEMiscParameter             c7       1
//   DNEResolution                c8       1
//   UniformPixelVector_0         c9       1
//   UniformPixelVector_6         c10      1
//   UniformPixelScalars_0        c11      1
//   UniformPixelScalars_1        c12      1
//   LightColorAndFalloffExponent c13      1
//   DistanceFadeParameters       c14      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   LightAttenuationTexture      s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//

    ps_3_0
    def c2, 10, 1.52876604, 1, 0.5
    def c6, 0.0625, 0, -5.55472994, -6.98316002
    def c15, 0.693147004, 2, 0.125, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord6 v2.xyz
    dcl_texcoord7 v3
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_26DB55E1_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v2
    mad_sat_pp r0.w, c7.x, v3.w, c7.y
    mul_pp r0.w, r0.w, c0.x
    dp3_pp r1.x, v1, v1
    rsq_pp r1.x, r1.x
    mul_pp r1.yzw, r1.x, v1.xxyz
    mad_pp r2.xyz, v1, r1.x, r0
    nrm_pp r3.xyz, r2
    texld_pp r2, v0, s5
    mad_pp r0.x, r2.w, c2.x, c2.y
    exp_pp r0.x, r0.x
    texld_pp r4, c2.zwzw, s0
    if b0
      mad r2.xy, vPos, c8, c8.zwzw
      mul r2.xy, r2, v3.w
      if_ne c3.x, -c3.x
        texld r5, c6, s1
        add r0.y, -r5.y, v3.w
        mad r2.z, r5.x, r0.y, r2.x
        mov r2.xy, r2.zyzw
        mov r0.y, v3.w
      else
        mov r0.y, v3.w
      endif
      rcp r0.y, r0.y
      mul r2.xy, r0.y, r2
      mad r2.xy, r2, c1, c1.wzzw
      texld r5, r2, s2
      mul_pp r2.xyz, r5, r5
      if b1
        dp3 r0.y, v3, v3
        rsq r0.y, r0.y
        rcp r0.y, r0.y
        add r0.y, -r0.y, c14.x
        mul_sat_pp r0.y, r0.y, c14.y
        mul_pp r0.y, r0.y, r0.y
        mad_pp r1.x, r5.w, r5.w, -r4.x
        mad_pp r4.yzw, r0.y, r1.x, r4.x
      else
        mov_pp r4.yzw, r4.x
      endif
      mul_pp r2.xyz, r2, r4.yzww
    else
      mov_pp r2.xyz, r4.x
    endif
    texld_pp r4, v0, s4
    mad_pp r4.yzw, r4.xxyz, c5.w, c5.xxyz
    mov_sat_pp r0.y, r0.z
    max_pp r0.z, r2.w, r4.x
    mad_pp r1.x, r0.y, c6.z, c6.w
    mul_pp r0.y, r0.y, r1.x
    exp_pp r0.y, r0.y
    lrp_pp r1.x, r0.y, r0.z, r4.x
    add_pp r0.y, -r1.x, c2.z
    texld_pp r5, v0, s3
    mul_sat_pp r0.z, r5.w, c11.z
    mul_pp r0.y, r0.y, r0.z
    texld_pp r6, v0, s6
    mad r6.xyw, r5.xyzz, c10.xyzz, -r5.xyzz
    mad_pp r5.xyz, r6.z, r6.xyww, r5
    mul_pp r5.xyz, r0.y, r5
    mul_pp r5.xyz, r5, c12.y
    mov r0.z, c2.z
    add_pp r6.xyz, r0.z, -c9
    mul_pp r5.xyz, r5, r6
    mad_pp r5.xyz, r5, c4.w, c4
    mov_sat_pp r0.y, r1.w
    mul_pp r0.z, r0.y, c0.w
    mov_sat_pp r1.x, c0.y
    mul_pp r1.x, r1.x, r1.x
    mul_pp r0.x, r0.x, r1.x
    mov_sat_pp r1.x, r3.z
    mad_pp r2.w, r0.x, c15.x, c15.y
    mul_pp r2.w, r2.w, c15.z
    mad r0.x, r0.x, r1.x, -r0.x
    exp_pp r0.x, r0.x
    mul_pp r0.x, r0.x, r2.w
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.x, r0.w, r0.x
    dp3_sat_pp r0.y, r1.yzww, r3
    mad_pp r0.w, r0.y, c6.z, c6.w
    mul_pp r0.y, r0.y, r0.w
    exp_pp r0.y, r0.y
    lrp_pp r1.xyz, r0.y, c2.z, r4.yzww
    mul_pp r0.xyw, r0.x, r1.xyzz
    mad_pp r0.xyz, r5, r0.z, r0.xyww
    mul_pp r0.xyz, r2, r0
    mul oC0.xyz, r0, c13
    mov_pp oC0.w, c6.y

// approximately 99 instruction slots used (7 texture, 92 arithmetic)
