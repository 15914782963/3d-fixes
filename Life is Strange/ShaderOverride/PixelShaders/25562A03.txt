//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   float4 WorldIncidentLighting[7];
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   DNESpecularAttenuation       c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   WorldIncidentLighting        c7       7
//   DNEEnvMapParameter           c14      1
//   DNEMiscParameter             c15      1
//   DNECubemapPosition           c16      1
//   CameraWorldPos               c17      1
//   DNEResolution                c18      1
//   UniformPixelVector_0         c19      1
//   UniformPixelVector_1         c20      1
//   UniformPixelScalars_0        c21      1
//   LightColorAndFalloffExponent c22      1
//   UpperSkyColor                c23      1
//   AmbientColorAndSkyFactor     c24      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   DNEEnvironmentTexture        s2       1
//   PixelTexture2D_0             s3       1
//   PixelTexture2D_1             s4       1
//   PixelTexture2D_2             s5       1
//   PixelTexture2D_3             s6       1
//   PixelTexture2D_4             s7       1
//   VAOBuffer                    s8       1
//

    ps_3_0
    def c6, 0, 0.333332986, 0.666665971, 9.99999997e-007
    def c25, 10, 1.52876604, 0.200000003, 0.858085215
    def c26, -5.55472994, -6.98316002, 3, -1
    def c27, 2, -1, 0.0108695654, 0.0217391308
    def c28, -1.02332771, 1.02332771, 0.886227608, 0.125
    def c29, 0.0625, 0, 1, 0.5
    def c30, -0.858085215, 0.247708291, 0.429042608, 0
    def c31, 0.693147004, 2, 0, 0
    dcl_texcoord4 v0.xyz
    dcl_texcoord6 v1.xyz
    dcl_texcoord7_pp v2.w
    dcl_texcoord5 v3
    dcl_color v4.xyz
    dcl_color1 v5
    dcl_texcoord v6.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_25562A03_242.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    nrm_pp r0.xyz, v5
    nrm_pp r1.xyz, v4
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul_pp r2.xyz, r2, v5.w
    add r3.xyz, c17, v3
    mad r4.xy, vPos, c18, c18.zwzw
    mul r4.xy, r4, v3.w
    nrm_pp r5.xyz, v1
    mad_sat_pp r0.w, c15.x, v3.w, c15.y
    mul_pp r1.w, r0.w, c0.x
    texld_pp r6, v6, s3
    mad_pp r6.xyz, r6, c27.x, c27.y
    nrm_pp r7.xyz, r6
    dp3_pp r2.w, v0, v0
    rsq_pp r2.w, r2.w
    mul_pp r6.xyz, r2.w, v0
    dp3_pp r3.w, r7, r5
    mul_pp r8.xyz, r3.w, r7
    mad_pp r8.xyz, r8, c27.x, -r5
    mad_pp r5.xyz, v0, r2.w, r5
    nrm_pp r9.xyz, r5
    mov r5.xyz, c6
    add_pp r5.xyz, r5, c21.y
    mul_pp r10.xy, r3, c27.zwzw
    texld_pp r10, r10, s7
    add_pp r5.xyz, r5, r10
    frc_pp r5.xyz, r5
    add r5.xyz, -r5, -c27.y
    max r11.xyz, c6.w, r5
    mul r5.xyz, r11, r11
    mul_pp r5.xyz, r5, r11
    frc_pp r11.xyz, -r10
    add_sat_pp r10.xyz, r10, r11
    mul_pp r5.xy, r5, r10
    add_pp r2.w, r5.y, r5.x
    mad_sat_pp r2.w, r5.z, r10.z, r2.w
    lrp_pp r5.x, r2.w, c21.z, c21.w
    mov_sat_pp r2.w, r0.z
    mul_pp r2.w, r2.w, r5.x
    mul_pp r2.w, r2.w, v2.w
    lrp_pp r5.x, r2.w, -c27.y, r6.w
    mad_pp r5.y, r5.x, c25.x, c25.y
    exp_pp r5.y, r5.y
    texld_pp r10, v6, s6
    lrp_pp r11.xyz, r2.w, c25.z, r10
    mad_pp r10.xyz, r11, c5.w, c5
    texld_pp r11, v6, s4
    texld_pp r12, v6, s5
    mad r12.xyw, r11.xyzz, c20.xyzz, -r11.xyzz
    mad_pp r12.xyw, r12.z, r12, r11.xyzz
    mov r13.y, c27.y
    add_pp r13.xyz, -r13.y, -c19
    mul_pp r12.xyw, r12, r13.xyzz
    mad_pp r12.xyw, r12, c4.w, c4.xyzz
    mul_pp r11.xyz, r11, r12.z
    mul_pp r11.xyz, r11, c20
    dp3_pp r13.x, r1, r8
    dp3_pp r13.y, r2, r8
    dp3_pp r13.z, r0, r8
    add r3.xyz, r3, -c16
    mad_pp r8.xyz, c14.w, r3, r13
    mad_pp r8.w, c15.z, r5.x, c15.w
    texldl_pp r8, r8, s2
    mov_sat_pp r3.w, r3.w
    max_pp r3.xyz, r5.x, r10
    mad_pp r2.w, r3.w, c26.x, c26.y
    mul_pp r2.w, r3.w, r2.w
    exp_pp r2.w, r2.w
    lrp_pp r5.xzw, r2.w, r3.xyyz, r10.xyyz
    mul_pp r3.xyz, r8, r5.xzww
    mul_pp r3.xyz, r3, c14
    mul_pp r3.xyz, r0.w, r3
    mad_pp r3.xyz, c21.x, r11, r3
    add_pp r3.xyz, r3, c19
    mul r5.xzw, r12.xyyw, c23.xyyz
    mad_pp r3.xyz, r5.xzww, c24.w, r3
    dp3_pp r1.z, r1, r7
    dp3_pp r1.x, r2, r7
    dp3_pp r1.y, r0, r7
    mul r0.xyz, r1, r1.xyxw
    mad r2.y, r0.y, c26.z, c26.w
    mul r2.xz, r1, r1.y
    mad_pp r2.w, r1.z, r1.z, -r0.x
    mul r8.xyz, r1, c28.xyxw
    mul r8.w, r0.z, c25.w
    mul r0, r2, c30.xyxz
    dp4 r1.x, c8, r8
    mov r1.z, c28.z
    mad_pp r1.x, c7.x, r1.z, r1.x
    dp4 r1.y, c9, r0
    add_pp r2.x, r1.y, r1.x
    dp4 r1.x, c10, r8
    mad_pp r1.x, c7.y, r1.z, r1.x
    dp4 r1.y, c11, r0
    add_pp r2.y, r1.y, r1.x
    dp4 r1.x, c12, r8
    mad_pp r1.x, c7.z, r1.z, r1.x
    dp4 r0.x, c13, r0
    add_pp r2.z, r0.x, r1.x
    mul_pp r0.xyz, r2, r12.xyww
    cmp_pp r0.xyz, r2, r0, c6.x
    add_pp r0.xyz, r0, r3
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r2, c29, s1
      add r1.x, -r2.y, v3.w
      mad r4.z, r2.x, r1.x, r4.x
      mov r4.w, v3.w
      mov r1.xyz, r4.zyww
    else
      mov r1.xyz, c6.x
    endif
    mov r4.z, v3.w
    cmp r1.xyz, -r0.w, r4, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r2, r1, s8
    texld_pp r3, c29.zwzw, s0
    dp3_sat_pp r0.w, r7, r6
    mul_pp r1.x, r0.w, c0.w
    mov_sat_pp r1.y, c0.y
    mul_pp r1.y, r1.y, r1.y
    mul_pp r1.y, r5.y, r1.y
    dp3_sat_pp r1.z, r7, r9
    mad_pp r2.y, r1.y, c31.x, c31.y
    mul_pp r2.y, r2.y, c28.w
    mad r1.y, r1.y, r1.z, -r1.y
    exp_pp r1.y, r1.y
    mul_pp r1.y, r1.y, r2.y
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.w, r0.w
    dp3_sat_pp r1.y, r6, r9
    mad_pp r1.z, r1.y, c26.x, c26.y
    mul_pp r1.y, r1.y, r1.z
    exp_pp r1.y, r1.y
    lrp_pp r2.yzw, r1.y, -c27.y, r10.xxyz
    mul_pp r1.yzw, r0.w, r2
    mad_pp r1.xyz, r12.xyww, r1.x, r1.yzww
    mul_pp r1.xyz, r3.x, r1
    mul_pp r1.xyz, r1, c22
    mad_pp r0.xyz, r0, r2.x, r1
    mad_pp oC0.xyz, r12.xyww, c24, r0
    rcp r0.x, v3.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 159 instruction slots used (10 texture, 149 arithmetic)
