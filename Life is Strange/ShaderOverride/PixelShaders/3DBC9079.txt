//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float3 DecalLocalBinormal;
//   float3 DecalLocalTangent;
//   float2 DecalNearFarPlaneDistance;
//   float4 DiffuseOverrideParameter;
//   sampler2D HeightmapTexture;
//   float4 LightMapScale;
//   sampler2D LightMapTextures;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEEnvMapParameter        c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DNEMiscParameter          c7       1
//   DNECubemapPosition        c8       1
//   CameraWorldPos            c9       1
//   DNEResolution             c10      1
//   DecalNearFarPlaneDistance c11      1
//   UniformPixelVector_0      c12      1
//   DecalLocalBinormal        c13      1
//   DecalLocalTangent         c14      1
//   UpperSkyColor             c15      1
//   AmbientColorAndSkyFactor  c16      1
//   LightMapScale             c17      1
//   NvStereoFixTexture        s0       1
//   DNEEnvironmentTexture     s1       1
//   PixelTexture2D_0          s2       1
//   PixelTexture2D_1          s3       1
//   PixelTexture2D_2          s4       1
//   HeightmapTexture          s5       1
//   LightMapTextures          s6       1
//   VAOBuffer                 s7       1
//

    ps_3_0
    def c6, 2, -1, 1, 0.00100000005
    def c18, 0.0625, 0, 0, 0
    def c19, -0.5, -5.55472994, -6.98316002, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xyw
    dcl_texcoord2 v2.xy
    dcl_texcoord6 v3.xyz
    dcl_texcoord5 v4
    dcl vPos.xy
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_3DBC9079_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    texld r0, v0, s5
    mad r0.xy, r0.zwzw, c6.x, c6.y
    dp2add r0.w, r0, -r0, c6.z
    rsq r0.w, r0.w
    rcp r0.z, r0.w
    mul r1.xyz, r0, c14.zxyw
    mad r1.xyz, r0.zxyw, c14, -r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul r1.xyz, r0.w, r1
    mul r2.xyz, r0.zxyw, r1
    mad r1.xyz, r0.yzxw, r1.yzxw, -r2
    mul r2.xyz, r0, c13.zxyw
    mad r2.xyz, r0.zxyw, c13, -r2
    dp3 r0.w, r2, r2
    rsq r0.w, r0.w
    mul r2.xyz, r0.w, r2
    mul r3.xyz, r0.zxyw, r2
    mad r2.xyz, r0.yzxw, r2.yzxw, -r3
    nrm r3.xyz, v3
    dp3_pp r4.x, r1, r3
    dp3_pp r4.y, r2, r3
    dp3_pp r4.z, r0, r3
    add r3.xyz, c9, v4
    mad r5.xy, vPos, c10, c10.zwzw
    mul r5.xy, r5, v4.w
    nrm_pp r6.xyz, r4
    mad_sat_pp r0.w, c7.x, v4.w, c7.y
    texld_pp r4, v1, s2
    mad_pp r4.xyz, r4, c6.x, c6.y
    nrm_pp r7.xyz, r4
    dp3_pp r1.w, r7, r6
    mul_pp r4.xyz, r1.w, r7
    mad_pp r4.xyz, r4, c6.x, -r6
    texld_pp r6, v1, s4
    mad_pp r6.xyz, r6, c5.w, c5
    add r7.xy, c6.z, -v1
    mul r7.xy, r7, v1
    add r2.w, -c11.x, v1.w
    add r7.z, r2.w, c6.w
    add r2.w, c11.y, -v1.w
    add r7.w, r2.w, c6.w
    texkill r7
    texld_pp r7, v1, s3
    mov_sat_pp r2.w, r7.w
    add_pp r8, r2.w, c19.x
    texkill r8
    mov r8.z, c6.z
    add_pp r8.xyz, r8.z, -c12
    mul_pp r7.xyz, r7, r8
    mad_pp r7.xyz, r7, c4.w, c4
    mov r8.x, r1.x
    mov r8.y, r2.x
    mov r8.z, r0.x
    dp3_pp r8.x, r8, r4
    mov r9.x, r1.y
    mov r9.y, r2.y
    mov r9.z, r0.y
    dp3_pp r8.y, r9, r4
    mov r0.x, r1.z
    mov r0.y, r2.z
    dp3_pp r8.z, r0, r4
    add r0.xyz, r3, -c8
    mad_pp r2.xyz, c0.w, r0, r8
    mad_pp r2.w, c7.z, r4.w, c7.w
    texldl_pp r2, r2, s1
    mov_sat_pp r1.w, r1.w
    max_pp r0.xyz, r4.w, r6
    mad_pp r1.x, r1.w, c19.y, c19.z
    mul_pp r1.x, r1.w, r1.x
    exp_pp r1.x, r1.x
    lrp_pp r3.xyz, r1.x, r0, r6
    mul_pp r0.xyz, r2, r3
    mul_pp r0.xyz, r0, c0
    mad_pp r0.xyz, r0.w, r0, c12
    texld r1, v2, s6
    mul_pp r1.xyz, r1, c17
    mad_pp r0.xyz, r1, r7, r0
    mul r1.xyz, r7, c15
    mad_pp r0.xyz, r1, c16.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r1, c18, s0
      add r1.y, -r1.y, v4.w
      mad r5.z, r1.x, r1.y, r5.x
      mov r5.w, v4.w
      mov r1.xyz, r5.zyww
    else
      mov r1.xyz, c19.w
    endif
    mov r5.z, v4.w
    cmp r1.xyz, -r0.w, r5, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s7
    mul_pp oC0.xyz, r0, r1.x
    rcp r0.x, v4.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 109 instruction slots used (9 texture, 100 arithmetic)
