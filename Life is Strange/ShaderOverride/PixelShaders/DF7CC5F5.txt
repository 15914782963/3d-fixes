//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEMiscParameter;
//   sampler2D DNEReflectionTexture;
//   float4 DNEResolution;
//   float4 DebugMode[5];
//   float4 DiffuseOverrideParameter;
//   sampler2D MipTextureParameter;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D PixelTexture2D_5;
//   sampler2D PixelTexture2D_6;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEMiscParameter          c0       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DebugMode                 c7       5
//   DNEResolution             c12      1
//   UniformPixelVector_0      c13      1
//   DNEReflectionTexture      s0       1
//   PixelTexture2D_0          s1       1
//   PixelTexture2D_1          s2       1
//   PixelTexture2D_2          s3       1
//   PixelTexture2D_3          s4       1
//   PixelTexture2D_4          s5       1
//   PixelTexture2D_5          s6       1
//   PixelTexture2D_6          s7       1
//   MipTextureParameter       s8       1
//

    ps_3_0
    def c1, 0, -0.5, 0.949999988, 15
    def c2, 0.666666687, -0.899999976, 1, 20
    def c3, 2, 1, 0, 0.5
    def c6, 1.00010002, 2.20000005, 0.5, -0.5
    def c14, -5.55472994, -6.98316002, -0.0170000009, -0.330000013
    def c15, 0.0670000017, 0.330000013, 0.879999995, 0.100000001
    def c16, 0.222450897, 0.716925859, 0.06062451, -0.00885600038
    def c17, 7.7870369, 0.137931034, 0.333333343, 95
    def c18, 116, -16, -31, 0
    def c19, -0, 0, 1, -0.0245999992
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord3_pp v3
    dcl_texcoord6 v4.xyz
    dcl_texcoord7 v5.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

    mad r0.xy, vPos, c12, c12.zwzw
    mul r0.xy, r0, v5.w
    rcp r0.z, v5.w
    mul r0.xy, r0.z, r0
    mad_pp r0.xy, r0, c6.zwzw, c6.z
    texld_pp r1, v2, s3
    mov_sat r1.y, r1.x
    add r1.y, r1.y, c1.y
    mul_sat_pp r1.y, r1.y, c2.w
    add r1.z, r1.x, c1.y
    cmp_pp r1.y, r1.z, r1.y, c1.x
    max_pp r2.x, r1.x, c1.x
    add r1.zw, r2.x, c1.xyyz
    mad r1.w, r1.w, c2.x, c2.y
    mul_sat_pp r1.w, r1.w, c1.w
    cmp_pp r1.z, r1.z, c2.z, r1.w
    mad_sat_pp r1.x, r1.z, r1.x, r1.y
    add_pp r1.y, c1.y, v3.w
    mad_sat_pp r1.x, r1.y, c3.x, r1.x
    texld_pp r2, v2, s6
    texld_pp r3, v2, s7
    lrp_pp r4.x, r1.x, r3.w, r2.w
    mad_pp r0.w, -c0.w, r4.x, c0.w
    mov r0.z, c1.x

// DNERefelctionTexture fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed --ignore-parse-errors CRC32_DF7CC5F5_166.txt
texldl r7, c220.z, s13
mad r0.x, -r7.x, c220.w, r0.x

    texldl_pp r0, r0, s0
    dp3_pp r0.w, v4, v4
    rsq_pp r0.w, r0.w
    mul_sat_pp r0.w, r0.w, v4.z
    mad_pp r1.y, r0.w, c14.x, c14.y
    mul_pp r0.w, r0.w, r1.y
    exp_pp r0.w, r0.w
    texld_pp r2, v2, s4
    texld_pp r3, v2, s5
    lrp_pp r4.yzw, r1.x, r3.xxyz, r2.xxyz
    mad_pp r2.xyz, r4.yzww, c5.w, c5
    max_pp r1.yzw, r4.x, r2.xxyz
    lrp_pp r3.xyz, r0.w, r1.yzww, r2
    mul_pp r0.xyz, r0, r3
    mul_pp r0.xyz, r0, c0.z
    mad_sat_pp r0.w, c0.x, v5.w, c0.y
    mad_pp r0.xyz, r0.w, r0, c13
    add r1.y, -r4.x, c6.x
    cmp r1.yz, r1.y, r4.x, c3
    log r3.x, r1.y
    log r3.y, r1.z
    mul r1.yz, r3.xxyw, c6.y
    exp r3.x, r1.y
    exp r3.yz, r1.z
    texld_pp r4, v2, s1
    texld_pp r5, v2, s2
    lrp_pp r6.xyz, r1.x, r5, r4
    mov r1.zw, c2.z
    add_pp r1.xyz, r1.z, -c13
    mul_pp r1.xyz, r1, r6
    mad_pp r1.xyz, r1, c4.w, c4
    texld r4, v2, s8
    mad r4, r4.xyzx, c3.yyyz, c3.zzzy
    mul r5, r4, c7.y
    mad r4, c7.x, r4, r5
    mad r4, c7.z, r1, r4
    mov r5.yzw, c3
    mad r4, c7.w, r5.wwyy, r4
    mov r3.w, c2.z
    mad r3, c8.x, r3, r4
    mov r2.w, c2.z
    mad r3, c8.y, r2, r3
    mov r0.w, c2.z
    mad r0, c8.z, r0, r3
    dp3_pp r1.w, v1, v1
    rsq_pp r1.w, r1.w
    mul r3, r1.w, v1.yzxy
    dp3_pp r1.w, v0, v0
    rsq_pp r1.w, r1.w
    mul r4, r1.w, v0.yyzx
    mul_pp r5.xw, r3.yyzw, r4.yyzw
    mad_pp r5.xw, r3.xyzz, r4.zyzx, -r5
    mul r4.xy, r5.xwzw, v1.w
    mov r3.x, r4.w
    mov_pp r4.w, r3.y
    mad r6.xyz, r4.zyww, -c1.y, -c1.y
    mov r3.y, r4.x
    mad r3.xyz, r3, -c1.y, -c1.y
    mov r6.w, c2.z
    mad r0, c8.w, r6, r0
    mov r3.w, c2.z
    mad r0, c9.x, r3, r0
    mad r3, v3.xyzx, c3.yyyz, c3.zzzy
    mad r0, c9.y, r3, r0
    mad r3, v3.wwwx, c3.yyyz, c3.zzzy
    mad r0, c9.z, r3, r0
    mov r1.w, c9.w
    mad r0, r1.w, c19.xxyz, r0
    mad r0, c10.x, r5.zzzy, r0
    add r3.xy, r2.yzzw, c14.w
    cmp r3.xy, r3, -c3.z, -c3.y
    add r4, -r2.xyzx, c15.xxxy
    cmp r3.xy, r4.yzzw, -c1.x, r3
    add r6, r2.xyzx, c14.zzzw
    add r2.xy, -r2.yzzw, -c14.w
    cmp r2.zw, r6.xyxw, c3.z, c3.y
    cmp r1.w, r4.x, c1.x, r2.w
    cmp r2.z, r6.y, r2.z, c2.z
    cmp r6.x, r6.z, r2.z, c2.z
    cmp r1.w, r3.x, r1.w, c2.z
    cmp r6.z, r3.y, r1.w, c2.z
    mov r6.yw, c3.xzzy
    mad r0, c10.y, r6, r0
    add r3, -r1.xyzx, c15.zzzw
    cmp r2.zw, r3.xyxw, c3.z, c3.y
    cmp r1.w, r3.y, r2.z, c2.z
    cmp r3.z, r3.z, r1.w, c2.z
    cmp r1.w, r2.y, c3.z, c3.y
    cmp r1.w, r2.x, c1.x, r1.w
    cmp r1.w, r4.w, c1.x, r1.w
    add r2.xyz, r1, c19.w
    cmp r2.z, r2.z, c3.z, c3.y
    cmp r2.y, r2.y, c1.x, r2.z
    cmp r2.x, r2.x, c1.x, r2.y
    cmp r3.x, -r1.w, r2.x, c1.x
    mul r1.w, r1.w, r3.x
    add r2.xy, -r1.yzzw, c15.w
    dp3 r1.x, r1, c16
    cmp r1.yz, r2.xxyw, c3.z, c3.y
    add r1.y, r1.y, r2.w
    cmp r1.y, -r1.y, c3.z, c3.y
    add r1.y, r1.z, r1.y
    cmp r1.y, -r1.y, c3.z, c3.y
    cmp r3.y, -r1.w, c1.x, r1.y
    mov r3.w, c2.z
    mad r0, c10.z, r3, r0
    mad r1.y, r1.x, c17.x, c17.y
    add r1.z, r1.x, c16.w
    pow r2.x, r1.x, c17.z
    cmp r1.x, r1.z, r2.x, r1.y
    mad r1.xy, r1.x, c18.x, c18.yzzw
    add r1.x, -r1.x, c17.w
    cmp r2.xz, r1.yyxw, c3.z, c3.y
    mov r2.yw, c3.xzzy
    mad r0, c10.w, r2, r0
    mad r0, c11.x, r5.zyzy, r0
    mad r0, c11.y, r5.zzzy, r0
    mad r0, c11.z, r5.zzzy, r0
    mad oC0, c11.w, r5.zzzy, r0

// approximately 146 instruction slots used (10 texture, 136 arithmetic)
