//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DNEResolution;
//   float4 DebugMode[5];
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_4;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   CameraWorldPos            c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DebugMode                 c7       5
//   DNEResolution             c12      1
//   UniformPixelVector_0      c13      1
//   UniformPixelVector_1      c14      1
//   UniformPixelVector_2      c15      1
//   UniformPixelVector_3      c16      1
//   UniformPixelVector_4      c17      1
//   UniformPixelScalars_0     c18      1
//   UniformPixelScalars_2     c19      1
//   UniformPixelScalars_3     c20      1
//   UniformPixelScalars_4     c21      1
//   SceneColorTexture         s0       1
//   NvStereoFixTexture        s1       1
//   PixelTexture2D_0          s2       1
//   PixelTexture2D_1          s3       1
//   PixelTexture2D_2          s4       1
//

    ps_3_0
    def c6, 0, 1, 0.5, 0.0625
    def c22, 9.99999975e-006, 100000, 0, 0
    def c23, -0, 0, 1, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord6 v2.xyz
    dcl_texcoord7 v3
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_E560DDBD_6953976.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mul r0, r0.x, v1.yzxy
    dp3_pp r1.x, v0, v0
    rsq_pp r1.x, r1.x
    mul r1, r1.x, v0.zyyx
    mul_pp r2.xy, r0.ywzw, r1.zwzw
    mad_pp r1.yz, r0.xxzw, r1.xxyw, -r2.xxyw
    mul r2.xy, r1.yzzw, v1.w
    add r3, c0.xzxy, v3.xzxy
    mad r1.yz, vPos.xxyw, c12.xxyw, c12.xzww
    mul r4.xy, r1.yzzw, v3.w
    dp3_pp r0.w, v2, v2
    rsq_pp r0.w, r0.w
    mul_pp r0.w, r0.w, v2.z
    mov r5.xyz, c6
    mul r6, r5.xyxy, c7.xxyy
    add r6, r6.zzzw, r6.xxxy
    mov r1.z, c7.z
    mul r7.xyz, r1.z, c4
    mov r7.w, c7.z
    add r6, r6, r7
    mad r6, c7.w, r5.zzyy, r6
    mad r6, c8.x, r5.xyxy, r6
    mov r1.y, c8.y
    mul r7.xyz, r1.y, c5
    mov r7.w, c8.y
    add r6, r6, r7
    mov r7.x, c18.x
    mul r7.xyz, r7.x, c14
    rcp r8.xz, c15.x
    rcp r8.w, c15.y
    rcp r8.y, c15.z
    mad r1.yz, r3.xwyw, r8.xwyw, c16.xxyw
    texld r9, r1.yzzw, s2
    mov_pp r2.z, r1.x
    mov_pp r2.w, r0.y
    mad r3, r3, r8, c17.xyxy
    texld r8, r3, s2
    mul r1.x, r2_abs.y, r8.y
    mad r1.x, r9.y, r2_abs.z, r1.x
    texld r3, r3.zwzw, s2
    mad r1.x, r3.y, r2_abs.w, r1.x
    mul r1.x, r1.x, r1.x
    mad r1.x, r1.x, c19.z, c19.w
    mul r1.xyz, r7, r1.x
    mul r3.x, r0_abs.w, r0_abs.w
    mul r0.w, r0_abs.w, r3.x
    texld r3, r0.w, s3
    mul r1.xyz, r1, r3
    add r0.w, -c20.x, v3.w
    rcp r3.x, c20.y
    mul_sat r0.w, r0.w, r3.x
    mul r1.xyz, r1, r0.w
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r3, c6.wxzw, s1
      add r3.y, -r3.y, v3.w
      mad r4.z, r3.x, r3.y, r4.x
      mov r4.w, v3.w
      mov r3.xyz, r4.zyww
    else
      mov r3.xyz, c6.x
    endif
    mov r4.z, v3.w
    cmp r3.xyz, -r0.w, r4, r3
    rcp r0.w, r3.z
    mul r3.xy, r0.w, r3
    mad r3.xy, r3, c1, c1.wzzw
    mov r3.zw, c6.x
    texldl r3, r3, s0
    add r0.w, r3.w, -c2.y
    add r3.x, -r0.w, c22.x
    rcp r0.w, r0.w
    cmp r0.w, r3.x, c22.y, r0.w
    mad r0.w, c2.x, r0.w, -v3.w
    rcp r3.x, c20.z
    mul_sat r0.w, r0.w, r3.x
    mul r1.xyz, r1, r0.w
    texld r3, c20.w, s4
    mov_sat r0.w, r3.y
    mad r0.w, r0.w, c21.x, c21.y
    mad_pp r3.xyz, r0.w, r1, c13
    mov r3.w, c6.y
    mad r3, c8.z, r3, r6
    mad r4.xyz, r2.zyww, c6.z, c6.z
    mov r4.w, c6.y
    mad r3, c8.w, r4, r3
    mov r0.x, r1.w
    mov r0.y, r2.x
    mad r0.xyz, r0, c6.z, c6.z
    mov r0.w, c6.y
    mad r0, c9.x, r0, r3
    add r0, r0, c9.y
    add r0, r0, c9.z
    mov r1.w, c9.w
    mad r0, r1.w, c23.xxyz, r0
    mad r0, c10.x, r5.xxxy, r0
    mad r0, c10.y, r5.xxxy, r0
    mad r0, c10.z, r5.xxxy, r0
    mad r0, c10.w, r5.xxxy, r0
    mad r0, c11.x, r5.xxxy, r0
    mad r0, c11.y, r5.xxxy, r0
    mad r0, c11.z, r5.xxxy, r0
    mad oC0, c11.w, r5.xxxy, r0

// approximately 108 instruction slots used (8 texture, 100 arithmetic)
