//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 FalloffParameters;
//   float4 LightPosition;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4x4 ScreenToShadowMatrix;
//   float4x4 ScreenToWorld;
//   float3 ShadowBufferSizeAndSoftTransitionScale;
//   sampler2D ShadowDepthTexture;
//   float4 ShadowModulateColor;
//   float2 ShadowTexelSize;
//
//
// Registers:
//
//   Name                                   Reg   Size
//   -------------------------------------- ----- ----
//   ShadowModulateColor                    c0       1
//   ScreenPositionScaleBias                c1       1
//   MinZ_MaxZRatio                         c2       1
//   NvStereoEnabled                        c3       1
//   ScreenToWorld                          c7       4
//   ScreenToShadowMatrix                   c11      4
//   LightPosition                          c15      1
//   FalloffParameters                      c16      1
//   ShadowBufferSizeAndSoftTransitionScale c17      1
//   ShadowTexelSize                        c18      1
//   SceneColorTexture                      s0       1
//   NvStereoFixTexture                     s1       1
//   ShadowDepthTexture                     s2       1
//

    ps_3_0
    def c4, 0.0625, 0, 9.99999975e-006, 100000
    def c5, 1, 0, 2, 3
    def c6, 0.111110002, 0, 0, 0
    def c19, -1, -0.999000013, 1, 0
    dcl_texcoord v0.xyw
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

    abs r0.x, c3.x
    if_ne c3.x, -c3.x
      texld r1, c4, s1
      add r0.y, -r1.y, v0.w
      mad r1.x, r1.x, r0.y, v0.x
      mov r1.yz, v0.xyww
    else
      mov r1.xyz, c4.y
    endif

// Stereoise v0
texldl r31, c220.z, s13
mov r30.xyw, v0
add r31.w, r30.w, -r31.y
mad r30.x, r31.w, r31.x, r30.x

    cmp r0.xyz, -r0.x, r30.xyww, r1
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.y
    texldl r0, r0, s0
    add r0.x, r0.w, -c2.y
    add r0.y, -r0.x, c4.z
    rcp r0.x, r0.x
    cmp r0.x, r0.y, c4.w, r0.x
    mul r0.x, r0.x, c2.x
    rcp r0.y, r30.w
    mul r0.yz, r0.y, r30.xxyw
    mul r0.yz, r0.x, r0
    mul r1, r0.z, c12

// Unstereoise before ScreenToShadowMatrix
add r31.w, r0.x, -r31.y
mad r0.y, -r31.w, r31.x, r0.y

    mad r1, c11, r0.y, r1
    mad r1, c13, r0.x, r1
    add r1, r1, c14
    rcp r0.w, r1.w
    mul r1.xy, r0.w, r1
    mul r2.xy, r1, c17
    frc r2.xy, r2
    mov r3.xz, c19
    mad r1.xy, r1, c17, r3.x
    add r1.xy, -r2, r1
    mul r4.xy, r1, c18
    mov r4.zw, c4.y
    texldl r4, r4, s2
    max r0.w, c19.y, -r1.z
    add r1.z, r0.w, r4.x
    mad_sat r4.x, r1.z, c17.z, r3.z
    add r5, r1.xyxy, c5.xyzy
    mul r5, r5, c18.xyxy
    mul r6, r5.xyxx, c19.zzww
    texldl r6, r6, s2
    add r1.z, r0.w, r6.x
    mad_sat r6.x, r1.z, c17.z, r3.z
    mul r5, r5.zwxx, c19.zzww
    texldl r5, r5, s2
    add r1.z, r0.w, r5.x
    mad_sat r5.x, r1.z, c17.z, r3.z
    add r7, r1.xyxy, c5.wyyx
    mul r7, r7, c18.xyxy
    mul r8, r7.xyxx, c19.zzww
    texldl r8, r8, s2
    add r1.z, r0.w, r8.x
    mad_sat r8.x, r1.z, c17.z, r3.z
    mul r7, r7.zwxx, c19.zzww
    texldl r7, r7, s2
    add r1.z, r0.w, r7.x
    mad_sat r4.y, r1.z, c17.z, r3.z
    add r7, r1.xyxy, c5.xxzx
    mul r7, r7, c18.xyxy
    mul r9, r7.xyxx, c19.zzww
    texldl r9, r9, s2
    add r1.z, r0.w, r9.x
    mad_sat r6.y, r1.z, c17.z, r3.z
    mul r7, r7.zwxx, c19.zzww
    texldl r7, r7, s2
    add r1.z, r0.w, r7.x
    mad_sat r5.y, r1.z, c17.z, r3.z
    add r7, r1.xyxy, c5.wxyz
    mul r7, r7, c18.xyxy
    mul r9, r7.xyxx, c19.zzww
    texldl r9, r9, s2
    add r1.z, r0.w, r9.x
    mad_sat r8.y, r1.z, c17.z, r3.z
    mul r7, r7.zwxx, c19.zzww
    texldl r7, r7, s2
    add r1.z, r0.w, r7.x
    mad_sat r4.z, r1.z, c17.z, r3.z
    add r7, r1.xyxy, c5.xzzz
    mul r7, r7, c18.xyxy
    mul r9, r7.xyxx, c19.zzww
    texldl r9, r9, s2
    add r1.z, r0.w, r9.x
    mad_sat r6.z, r1.z, c17.z, r3.z
    mul r7, r7.zwxx, c19.zzww
    texldl r7, r7, s2
    add r1.z, r0.w, r7.x
    mad_sat r5.z, r1.z, c17.z, r3.z
    add r7, r1.xyxy, c5.wzyw
    mul r7, r7, c18.xyxy
    mul r9, r7.xyxx, c19.zzww
    texldl r9, r9, s2
    add r1.z, r0.w, r9.x
    mad_sat r8.z, r1.z, c17.z, r3.z
    mul r7, r7.zwxx, c19.zzww
    texldl r7, r7, s2
    add r1.z, r0.w, r7.x
    mad_sat r4.w, r1.z, c17.z, r3.z
    add r7, r1.xyxy, c5.xwzw
    mul r7, r7, c18.xyxy
    mul r9, r7.xyxx, c19.zzww
    texldl r9, r9, s2
    add r1.z, r0.w, r9.x
    mad_sat r6.w, r1.z, c17.z, r3.z
    mul r7, r7.zwxx, c19.zzww
    texldl r7, r7, s2
    add r1.z, r0.w, r7.x
    mad_sat r5.w, r1.z, c17.z, r3.z
    add r1.xy, r1, c5.w
    mul r1.xy, r1, c18
    mov r1.zw, c4.y
    texldl r1, r1, s2
    add r0.w, r0.w, r1.x
    mad_sat r8.w, r0.w, c17.z, r3.z
    lrp r1, r2.x, r6.xyyz, r4.xyyz
    lrp r7, r2.x, r5.xyyz, r6.xyyz
    lrp r9, r2.x, r8.xyyz, r5.xyyz
    lrp r3.yz, r2.y, r1.xyww, r1.xxzw
    lrp r1.xy, r2.y, r7.ywzw, r7.xzzw
    lrp r1.zw, r2.y, r9.xyyw, r9.xyxz
    lrp r5.xy, r2.x, r6.zwzw, r4.zwzw
    lrp r0.w, r2.y, r5.y, r5.x
    lrp r4.xy, r2.x, r5.zwzw, r6.zwzw
    lrp r3.w, r2.y, r4.y, r4.x
    lrp r4.xy, r2.x, r8.zwzw, r5.zwzw
    lrp r5.x, r2.y, r4.y, r4.x
    add r1.x, r1.x, r3.y
    add r1.x, r1.z, r1.x
    add r1.x, r3.z, r1.x
    add r1.x, r1.y, r1.x
    add r1.x, r1.w, r1.x
    add r0.w, r0.w, r1.x
    add r0.w, r3.w, r0.w
    add r0.w, r5.x, r0.w
    mul_sat_pp r0.w, r0.w, c6.x
    mul r1.xyz, r0.z, c8
    mad r1.xyz, c7, r0.y, r1
    mad r0.xyz, c9, r0.x, r1
    add r0.xyz, r0, c10
    add r0.xyz, -r0, c15
    mul r0.xyz, r0, c15.w
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    mad r0.x, r0.x, c16.y, c16.z
    max r1.x, r0.x, c4.y
    mad r0.x, r1.x, -r1.x, c19.z
    max r1.x, r0.x, c4.y
    pow_pp r0.x, r1.x, c16.x
    add r1, r3.x, c0
    mad r1, r0.x, r1, c19.z
    mul r0.x, r0.w, r0.w
    add r2, -r1, c19.z
    mad oC0, r0.x, r2, r1

// approximately 177 instruction slots used (35 texture, 142 arithmetic)
