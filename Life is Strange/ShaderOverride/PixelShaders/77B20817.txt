//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_5;
//   float4 UniformPixelScalars_6;
//   float4 UniformPixelScalars_7;
//   float4 UniformPixelScalars_8;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//   float3 UpperSkyColor;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   CameraWorldPos            c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DNEResolution             c7       1
//   UniformPixelVector_0      c8       1
//   UniformPixelVector_1      c9       1
//   UniformPixelVector_2      c10      1
//   UniformPixelVector_3      c11      1
//   UniformPixelVector_4      c12      1
//   UniformPixelVector_5      c13      1
//   UniformPixelVector_6      c14      1
//   UniformPixelScalars_1     c15      1
//   UniformPixelScalars_2     c16      1
//   UniformPixelScalars_3     c17      1
//   UniformPixelScalars_5     c18      1
//   UniformPixelScalars_6     c19      1
//   UniformPixelScalars_7     c20      1
//   UniformPixelScalars_8     c21      1
//   UpperSkyColor             c22      1
//   AmbientColorAndSkyFactor  c23      1
//   SceneColorTexture         s0       1
//   NvStereoFixTexture        s1       1
//   PixelTexture2D_0          s2       1
//   PixelTexture2D_1          s3       1
//   PixelTexture2D_2          s4       1
//

    ps_3_0
    def c6, 10, 1.52876604, 1.41789806, -9.99999997e-007
    def c24, 0.930000007, 0.0700000003, 0.333333343, 9.99999975e-006
    def c25, 0, 0.00999999978, -0.99000001, 0.930000007
    def c26, 0.816496611, 0.577350259, 0, 0.0625
    def c27, 100000, -0.5, 0, 0
    def c28, 0, 2, 1.37, 1
    def c29, -0.707106769, -0.408248305, 0.577350259, 0.707106769
    dcl_texcoord2_pp v0.xyz
    dcl_texcoord3_pp v1.xyz
    dcl_texcoord4 v2
    dcl_texcoord6 v3.xyz
    dcl_texcoord5 v4.xyw
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_77B20817_676.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    add r0.xy, c0, v4
    mad r0.zw, vPos.xyxy, c7.xyxy, c7
    mul r1.xy, r0.zwzw, v4.w
    nrm_pp r2.xyz, v3
    mad_pp r3.xyz, r2.z, c28.xxyw, -r2
    rcp r0.z, c15.x
    mul_pp r4.xy, r0.z, r0
    mul_pp r4.zw, r4.xyxy, c18.x
    mov r5.x, c18.x
    mad_pp r5.xy, r5.x, r4, c12
    texld_pp r5, r5, s4
    mov r5.zw, c28
    mad_pp r4.zw, r4, r5.z, c13.xyxy
    texld_pp r6, r4.zwzw, s4
    mul_pp r0.w, r5.y, r6.y
    mad_sat_pp r2.w, c20.x, r0.w, c20.y
    mad_pp r2.w, r2.w, c6.x, c6.y
    exp_pp r2.w, r2.w
    mad_pp r0.xy, r0, r0.z, c9
    texld_pp r6, r0, s2
    dp2add_pp r0.x, r6, -r6, c28.w
    max_pp r3.w, r0.x, c28.x
    rsq_pp r0.x, r3.w
    rcp_pp r6.z, r0.x
    mov r0.z, c6.z
    mad_pp r0.xy, r4, r0.z, c10
    texld_pp r7, r0, s2
    dp2add_pp r0.x, r7, -r7, c28.w
    max_pp r3.w, r0.x, c28.x
    rsq_pp r0.x, r3.w
    rcp_pp r7.z, r0.x
    add_pp r0.xyz, r6, r7
    nrm_pp r5.xyz, r0
    mul_pp r0.xyz, r5, c16.x
    frc_pp r5.xyz, r0
    add_pp r0.xyz, r0, -r5
    rcp r3.w, c16.x
    mad_pp r5.xyz, r0, r3.w, c25.xxyw
    mov r4.w, c16.w
    mad_pp r4.xy, r4.w, r4, c11
    texld_pp r4, r4, s3
    lrp_pp r6.x, r4.x, c17.z, c17.w
    mad_sat_pp r0.w, r0.w, c19.w, r6.x
    mad_pp r0.xyz, r0, r3.w, c25.xxzw
    mad_pp r0.xyz, r0.w, r0, c28.xxww
    nrm_pp r6.xyz, r0
    dp3_pp r0.x, r6, r2
    add r0.y, -r0.x, c28.w
    cmp_pp r0.x, r0.x, r0_abs.y, c28.w
    add r0.y, r0.x, c6.w
    mul r0.z, r0.x, r0.x
    mad r0.w, r0.z, c24.x, c24.y
    add_pp r0.w, -r0.w, c28.w
    cmp_pp r0.w, r0.y, r0.w, c25.w
    mul_pp r2.xyz, r0.w, c14
    add_pp r4.yzw, r5.w, -c8.xxyz
    mul_pp r2.xyz, r2, r4.yzww
    mad_pp r2.xyz, r2, c4.w, c4
    mov r4.y, c24.y
    mad_pp r4.yzw, c5.w, r4.y, c5.xxyz
    dp2add_sat_pp r6.x, r3.yzzw, c26, c26.z
    dp3_sat_pp r6.y, r3, c29
    dp3_sat_pp r6.z, r3.yzxw, c29.yzww
    mad_pp r3.xyz, r2.w, r6, -r2.w
    exp_pp r6.x, r3.x
    exp_pp r6.y, r3.y
    exp_pp r6.z, r3.z
    dp3_pp r0.w, v1, c24.z
    mul_pp r3.xyz, r0.w, v0
    mul r4.yzw, r4, v0.xxyz
    dp3_pp r0.w, v1, r6
    mul r4.yzw, r0.w, r4
    mad_pp r3.xyz, r2, r3, r4.yzww
    add_pp r3.xyz, r3, c8
    mul r4.yzw, r2.xxyz, c22.xxyz
    mad_pp r3.xyz, r4.yzww, c23.w, r3
    mad_pp r2.xyz, r2, c23, r3
    dp3_pp r0.w, r5, r5
    rsq_pp r0.w, r0.w
    mul_sat_pp r0.w, r0.w, r5.z
    add r2.w, r0.w, c6.w
    mul r0.w, r0.w, r0.w
    mul_pp r0.xw, r0.zyzw, r0
    abs r3.x, c3.x
    if_ne c3.x, -c3.x
      texld r5, c26.wzzw, s1
      add r3.y, -r5.y, v4.w
      mad r1.z, r5.x, r3.y, r1.x
      mov r1.w, v4.w
      mov r3.yzw, r1.xzyw
    else
      mov_pp r3.yzw, c28.x
    endif
    mov r1.z, v4.w
    cmp r1.xyz, -r3.x, r1, r3.yzww
    rcp r1.z, r1.z
    mul r1.xy, r1.z, r1
    mad r1.xy, r1, c1, c1.wzzw
    mov r1.zw, c28.x
    texldl r1, r1, s0
    add r1.x, r1.w, -c2.y
    add r1.y, -r1.x, c24.w
    rcp r1.x, r1.x
    cmp r1.x, r1.y, c27.x, r1.x
    mad_pp r1.x, c2.x, r1.x, -v4.w
    lrp_pp r1.y, r4.x, c20.z, c20.w
    rcp r1.y, r1.y
    mul_sat_pp r1.x, r1.y, r1.x
    mul_pp r0.w, r0.w, r1.x
    cmp_pp r0.w, r2.w, r0.w, c28.x
    add_pp r0.w, r1.x, r0.w
    add_pp r0.w, r0.w, c27.y
    frc_pp r1.y, -r0.w
    add_sat_pp r0.w, r0.w, r1.y
    add r0.z, -c21.y, c21.x
    mul r0.x, r0.z, r0.x
    cmp r0.x, r0.y, r0.x, c28.x
    add_pp r0.x, r0.x, c21.y
    mul_pp r0.x, r1.x, r0.x
    mul_sat_pp oC0.w, r0.w, r0.x
    mad_pp oC0.xyz, r2, v2.w, v2

// approximately 133 instruction slots used (8 texture, 125 arithmetic)
