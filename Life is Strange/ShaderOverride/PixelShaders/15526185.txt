//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEResolution;
//   float4 DNESpecularAttenuation;
//   float4 DiffuseOverrideParameter;
//   float4 LightColorAndFalloffExponent;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 ObjectWorldPositionAndRadius;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowWarpFunctionTexture;
//   float4 SpecularOverrideParameter;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   MinZ_MaxZRatio               c2       1
//   NvStereoEnabled              c3       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   DNESpecularAttenuation       c7       1
//   DNEResolution                c8       1
//   ObjectWorldPositionAndRadius c9       1
//   UniformPixelVector_0         c10      1
//   UniformPixelVector_1         c11      1
//   UniformPixelScalars_0        c12      1
//   LightColorAndFalloffExponent c13      1
//   UpperSkyColor                c14      1
//   AmbientColorAndSkyFactor     c15      1
//   ShadowWarpFunctionTexture    s0       1
//   NvStereoFixTexture           s1       1
//   PixelTexture2D_0             s2       1
//   PixelTexture2D_1             s3       1
//   VAOBuffer                    s4       1
//

    ps_3_0
    def c6, -0.75, 0.100000001, 17.1891651, 9.76982021
    def c16, 0.200000003, 0.5, 6.28318548, -3.14159274
    def c17, -0.333299994, 0.0625, 0, -9.99999997e-007
    def c18, 0.0581761822, 0.102356032, 0.0840932205, 11.8915653
    def c19, 63.6942711, 0.5, 8, 32
    def c20, 0.00390625, 16, 0.0625, 0.5
    def c21, -1, 1, 0, 2
    def c22, 1, 0.5, 15, 0
    dcl_texcoord4 v0.xyz
    dcl_texcoord6 v1.xyz
    dcl_texcoord5 v2.w
    dcl_texcoord v3.xy
    dcl vPos.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_15526185_359.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mad r0.xy, vPos, c8, c8.zwzw
    mul r0.xy, r0, v2.w
    nrm_pp r1.xyz, v1
    nrm_pp r2.xyz, v0
    cmp r1.w, vFace, c21.x, c21.y
    mul_pp r1.w, r1.w, c0.x
    mad_pp r1.xyz, r1.z, c21.zzww, -r1
    mov r3.y, c21.y
    add r2.w, r3.y, c12.x
    mad r2.w, v3.y, v3.y, r2.w
    mad r2.w, r2.w, c16.x, c16.y
    frc r2.w, r2.w
    mad r2.w, r2.w, c16.z, c16.w
    sincos r3.y, r2.w
    add r2.w, c6.x, v3.y
    frc r3.x, r2.w
    add r3.x, r2.w, -r3.x
    mul r2.w, r2.w, r3.x
    mul r2.w, r2_abs.w, r3.y
    mul r3.x, r2.w, c6.y
    mov r3.y, c21.z
    add r3.xy, r3, v3
    mov r4.xyz, c9
    mul r4.xyz, r4, c18
    frc r4.xyz, r4_abs
    cmp r4.xyz, c9, r4, -r4
    mul r3.zw, r4.xyxy, c6
    add r2.w, r3.w, r3.z
    mad r2.w, r4.z, c18.w, r2.w
    mad r2.w, r2.w, c19.x, c19.y
    frc r2.w, r2.w
    mad r2.w, r2.w, c16.z, c16.w
    sincos r4.y, r2.w
    add r2.w, r4.y, c21.y
    mul r2.w, r2.w, c16.y
    texld r4, r2.w, s3
    mul r2.w, r4.x, c19.z
    frc r3.z, r2.w
    add r2.w, r2.w, -r3.z
    mad r2.w, r2.w, c19.w, c19.w
    mul r2.w, r2.w, c20.x
    texld r4, r2.w, s3
    add r2.w, r4.x, r4.x
    frc r2.w, r2_abs.w
    cmp r2.w, r4.x, r2.w, -r2.w
    mul r2.w, r2.w, c20.y
    frc r3.z, r2.w
    add r5.x, r2.w, -r3.z
    frc r2.w, r4_abs.x
    cmp r2.w, r4.x, r2.w, -r2.w
    add r2.w, r2.w, r2.w
    frc r3.z, r2.w
    add r5.y, r2.w, -r3.z
    mul r3.zw, r5.xyxy, c20
    mad r3.xy, r3, c20.zwzw, r3.zwzw
    texld r3, r3, s2
    mov r4.x, c17.x
    mad r4, c11.w, r3.w, r4.x
    texkill r4
    mov r4.xyz, c11
    mad_pp r3.xyz, r4, r3, c10
    mov r4.xyz, c4
    mul r5.xyz, r4, c14
    mad_pp r3.xyz, r5, c15.w, r3
    abs r2.w, c3.x
    if_ne c3.x, -c3.x
      texld r5, c17.yzzw, s1
      add r3.w, -r5.y, v2.w
      mad r0.z, r5.x, r3.w, r0.x
      mov r0.w, v2.w
      mov r5.xyz, r0.zyww
    else
      mov r5.xyz, c21.z
    endif
    mov r0.z, v2.w
    cmp r0.xyz, -r2.w, r0, r5
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s4
    texld_pp r5, c22, s0
    mul_sat_pp r0.y, r2.z, r1.w
    add r0.z, r0.y, c17.w
    mul r0.y, r0.y, c7.w
    dp3_sat_pp r0.w, r1, r2
    add r1.x, r0.w, c17.w
    pow_pp r1.y, r0.w, c22.z
    mul r0.w, r1.y, c7.x
    mul r1.yzw, r0.y, c4.xxyz
    cmp r1.yzw, r0.z, r1, c21.z
    mul_pp r0.yzw, r0.w, c5.xxyz
    cmp_pp r0.yzw, r1.x, r0, c21.z
    add_pp r0.yzw, r0, r1
    mul_pp r0.yzw, r5.x, r0
    mul_pp r0.yzw, r0, c13.xxyz
    mad_pp r0.xyz, r3, r0.x, r0.yzww
    mad_pp oC0.xyz, r4, c15, r0
    rcp r0.x, v2.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 121 instruction slots used (6 texture, 115 arithmetic)
