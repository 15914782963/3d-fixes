//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DNEResolution;
//   float4 DebugMode[5];
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   sampler2D MipTextureParameter;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_2;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_6;
//   float4 UniformPixelVector_7;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEResolution             c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DebugMode                 c7       5
//   UniformPixelVector_0      c12      1
//   UniformPixelVector_1      c13      1
//   UniformPixelVector_2      c14      1
//   UniformPixelVector_3      c15      1
//   UniformPixelVector_4      c16      1
//   UniformPixelVector_5      c17      1
//   UniformPixelVector_6      c18      1
//   UniformPixelVector_7      c19      1
//   UniformPixelScalars_1     c20      1
//   UniformPixelScalars_3     c21      1
//   SceneColorTexture         s0       1
//   NvStereoFixTexture        s1       1
//   PixelTexture2D_0          s2       1
//   PixelTexture2D_1          s3       1
//   PixelTexture2D_2          s4       1
//   MipTextureParameter       s5       1
//

    ps_3_0
    def c6, 0.600000024, 0.699999988, 0.170000002, 0.150000006
    def c22, 2, 2.79999995, 0.680000007, 9.99999975e-006
    def c23, 0.25, 0.5, 6.28318548, -3.14159274
    def c24, 0.0625, 0, 100000, 0.0850000009
    def c25, 0.800000012, 0.185000002, 1, 0
    def c26, -0, 0, 1, 0
    def c27, 1, 0, 0.5, -0.774999976
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord3_pp v3
    dcl_texcoord6 v4.xyz
    dcl_texcoord7 v5.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --stereo-sampler-ps=s15 --disable-redundant-unreal-correction --auto-fix-unreal-shadows --auto-fix-unreal-lights --auto-fix-unreal-dne-reflection --only-autofixed --quiet CRC32_4C4F56EE_572.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mul r0, r0.x, v1.yzxy
    dp3_pp r1.x, v0, v0
    rsq_pp r1.x, r1.x
    mul r1, r1.x, v0.zyyx
    mul_pp r2.xy, r0.ywzw, r1.zwzw
    mad_pp r1.yz, r0.xxzw, r1.xxyw, -r2.xxyw
    mul r2.xy, r1.yzzw, v1.w
    mad r1.yz, vPos.xxyw, c0.xxyw, c0.xzww
    mul r3.yz, r1, v5.w
    dp3_pp r0.w, v4, v4
    rsq_pp r0.w, r0.w
    mul_pp r1.yz, r0.w, v4.xxyw
    texld r4, v2, s5
    mad r4, r4.xyzx, c27.xxxy, c27.yyyx
    mul r5, r4, c7.y
    mad r4, c7.x, r4, r5
    mov r5.zw, c7
    mul r6.xyz, r5.z, c4
    mov r6.w, c7.z
    add r4, r4, r6
    mad r4, r5.w, c27.zzxx, r4
    mov r5.xy, c27
    mad r4, c8.x, r5.yxyx, r4
    mov r6.yw, c8.y
    mul r6.xyz, r6.y, c5
    add r4, r4, r6
    mul_pp r5.zw, r1.xyyz, c27.w
    mad r6.xy, r1.yzzw, c27.w, v2
    mad r6.zw, v2.xyxy, c6.x, r5
    add r6.zw, r6, c6.xyyz
    texld_pp r7, r6.zwzw, s2
    mad r6.xy, r7, c6.w, r6
    add r6.xy, r6, -c27.z
    dp2add r0.w, r6, r6, c27.y
    dp2add r6.x, r6, -r6, c27.x
    mad r5.zw, v2.xyxy, c22.x, r5
    add r5.zw, r5, c22.xyyz
    texld_pp r8, r5.zwzw, s2
    dp2add_pp r5.z, r8, -r8, c27.x
    max_pp r6.y, r5.z, c27.y
    rsq_pp r5.z, r6.y
    rcp_pp r5.z, r5.z
    mul r0.w, r0.w, r5.z
    dp2add_pp r5.z, r7, -r7, c27.x
    max_pp r6.y, r5.z, c27.y
    rsq_pp r5.z, r6.y
    rcp_pp r5.z, r5.z
    mul r5.z, r5.z, r5.z
    mul r0.w, r0.w, r5.z
    add r5.zw, -c27.z, v2.xyxy
    dp2add r7.x, c14, r5.zwzw, r5.y
    dp2add r7.y, c15, r5.zwzw, r5.y
    mad r6.yz, r1, c27.w, r7.xxyw
    add r6.yz, r6, c27.z
    texld_pp r7, r6.yzzw, s2
    mad r6.y, r7.y, c23.x, c23.y
    frc r6.y, r6.y
    mad r6.y, r6.y, c23.z, c23.w
    sincos r7.y, r6.y
    dp2add r8.x, c16, r5.zwzw, r5.y
    dp2add r8.y, c17, r5.zwzw, r5.y
    mad r1.yz, r1, c27.w, r8.xxyw
    add r1.yz, r1, c27.z
    texld_pp r8, r1.yzzw, s2
    mad r1.y, r8.y, c23.x, c23.y
    frc r1.y, r1.y
    mad r1.y, r1.y, c23.z, c23.w
    sincos r8.y, r1.y
    add r1.y, r7.y, r8.y
    add r1.y, r1.y, c22.x
    dp2add r0.w, r0.w, r1.y, c27.y
    abs r1.y, c3.x
    if_ne c3.x, -c3.x
      texld r7, c24, s1
      add r1.z, -r7.y, v5.w
      mad r3.x, r7.x, r1.z, r3.y
      mov r3.w, v5.w
      mov r6.yzw, r3.xxzw
    else
      mov r6.yzw, c27.y
    endif
    mov r7.xy, r3.yzzw
    mov r7.z, v5.w
    cmp r6.yzw, -r1.y, r7.xxyz, r6
    rcp r1.y, r6.w
    mul r1.yz, r1.y, r6
    mad r7.xy, r1.yzzw, c1, c1.wzzw
    mov r7.zw, c27.y
    texldl r7, r7, s0
    add r1.y, r7.w, -c2.y
    add r1.z, -r1.y, c22.w
    rcp r1.y, r1.y
    cmp r1.y, r1.z, c24.z, r1.y
    mad r1.y, c2.x, r1.y, -v5.w
    rcp r1.z, c21.z
    mul_sat r1.y, r1.z, r1.y
    mul r0.w, r0.w, r1.y
    mad_sat r0.w, r6.x, c20.y, r0.w
    texld r6, r0.w, s3
    max r0.w, r6.x, c27.y
    min r1.y, r0.w, c24.w
    rcp r0.w, v5.w
    mul r3.xy, r0.w, r3.yzzw
    mad r3.xy, r3, c1, c1.wzzw
    mul r7.x, r3.y, c27.z
    mov r8.x, c25.x
    mad r0.w, r3.x, r8.x, c18.x
    add r3.x, r0.w, c6.w
    add r3.y, r7.x, c18.y
    texld r3, r3, s4
    add r0.w, r3.x, -c27.x
    mad r0.w, r0.w, c25.y, c25.z
    mul r3.xyz, c19, v3
    mul r3.xyz, r0.w, r3
    mul r3.xyz, r3, r6.x
    mad r3.xyz, r1.y, c13, r3
    add_pp r3.xyz, r3, c12
    mov r3.w, c27.x
    mad r3, c8.z, r3, r4
    mov_pp r2.z, r1.x
    mov_pp r2.w, r0.y
    mad r4.xyz, r2.zyww, c27.z, c27.z
    mov r4.w, c27.x
    mad r3, c8.w, r4, r3
    mov r0.x, r1.w
    mov r0.y, r2.x
    mad r0.xyz, r0, c27.z, c27.z
    mov r0.w, c27.x
    mad r0, c9.x, r0, r3
    mad r1, v3.xyzx, c27.xxxy, c27.yyyx
    mad r0, c9.y, r1, r0
    mad r1, v3.wwwx, c27.xxxy, c27.yyyx
    mad r0, c9.z, r1, r0
    mov r1.w, c9.w
    mad r0, r1.w, c26.xxyz, r0
    mad r0, c10.x, r5.yyyx, r0
    mad r0, c10.y, r5.yyyx, r0
    mad r0, c10.z, r5.yyyx, r0
    mad r0, c10.w, r5.yyyx, r0
    mad r0, c11.x, r5.yyyx, r0
    mad r0, c11.y, r5.yyyx, r0
    mad r0, c11.z, r5.yyyx, r0
    mad oC0, c11.w, r5.yyyx, r0

// approximately 171 instruction slots used (10 texture, 161 arithmetic)
