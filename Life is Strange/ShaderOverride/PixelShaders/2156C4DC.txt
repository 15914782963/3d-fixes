//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DNECubemapPosition;
//   float4 DNEEnvMapParameter;
//   samplerCUBE DNEEnvironmentTexture;
//   float4 DNEMiscParameter;
//   float4 DNEResolution;
//   float3 DecalLocalBinormal;
//   float3 DecalLocalTangent;
//   float2 DecalNearFarPlaneDistance;
//   float4 DiffuseOverrideParameter;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   DNEEnvMapParameter        c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   DNEMiscParameter          c7       1
//   DNECubemapPosition        c8       1
//   CameraWorldPos            c9       1
//   DNEResolution             c10      1
//   DecalNearFarPlaneDistance c11      1
//   UniformPixelVector_0      c12      1
//   DecalLocalBinormal        c13      1
//   DecalLocalTangent         c14      1
//   UpperSkyColor             c15      1
//   AmbientColorAndSkyFactor  c16      1
//   NvStereoFixTexture        s0       1
//   DNEEnvironmentTexture     s1       1
//   PixelTexture2D_0          s2       1
//   PixelTexture2D_1          s3       1
//   PixelTexture2D_2          s4       1
//   VAOBuffer                 s5       1
//

    ps_3_0
    def c6, 2, -1, 1, 0.00100000005
    def c17, -0.5, -5.55472994, -6.98316002, 0
    def c18, 0.0625, 0, 0, 0
    dcl_color v0.xyz
    dcl_texcoord v1.xyw
    dcl_texcoord6 v2.xyz
    dcl_texcoord5 v3
    dcl vPos.xy
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i --disable-redundant-unreal-correction --only-autofixed CRC32_2156C4DC_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine

    mul r0.xyz, c14.zxyw, v0
    mad r0.xyz, v0.zxyw, c14, -r0
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul r0.xyz, r0.w, r0
    mul r1.xyz, r0, v0.zxyw
    mad r0.xyz, v0.yzxw, r0.yzxw, -r1
    mul r1.xyz, c13.zxyw, v0
    mad r1.xyz, v0.zxyw, c13, -r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul r1.xyz, r0.w, r1
    mul r2.xyz, r1, v0.zxyw
    mad r1.xyz, v0.yzxw, r1.yzxw, -r2
    add r2.xyz, c9, v3
    mad r3.xy, vPos, c10, c10.zwzw
    mul r3.xy, r3, v3.w
    nrm_pp r4.xyz, v2
    mad_sat_pp r0.w, c7.x, v3.w, c7.y
    texld_pp r5, v1, s2
    mad_pp r5.xyz, r5, c6.x, c6.y
    nrm_pp r6.xyz, r5
    dp3_pp r1.w, r6, r4
    mul_pp r5.xyz, r1.w, r6
    mad_pp r4.xyz, r5, c6.x, -r4
    texld_pp r6, v1, s4
    mad_pp r5.xyz, r6, c5.w, c5
    add r6.xy, c6.z, -v1
    mul r6.xy, r6, v1
    add r2.w, -c11.x, v1.w
    add r6.z, r2.w, c6.w
    add r2.w, c11.y, -v1.w
    add r6.w, r2.w, c6.w
    texkill r6
    texld_pp r6, v1, s3
    mov_sat_pp r2.w, r6.w
    add_pp r7, r2.w, c17.x
    texkill r7
    mov r7.z, c6.z
    add_pp r7.xyz, r7.z, -c12
    mul_pp r6.xyz, r6, r7
    mad_pp r6.xyz, r6, c4.w, c4
    mul_pp r1.xyz, r1, r4.y
    mad_pp r0.xyz, r0, r4.x, r1
    mad_pp r0.xyz, v0, r4.z, r0
    add r1.xyz, r2, -c8
    mad_pp r2.xyz, c0.w, r1, r0
    mad_pp r2.w, c7.z, r5.w, c7.w
    texldl_pp r2, r2, s1
    mov_sat_pp r1.w, r1.w
    max_pp r0.xyz, r5.w, r5
    mad_pp r1.x, r1.w, c17.y, c17.z
    mul_pp r1.x, r1.w, r1.x
    exp_pp r1.x, r1.x
    lrp_pp r4.xyz, r1.x, r0, r5
    mul_pp r0.xyz, r2, r4
    mul_pp r0.xyz, r0, c0
    mad_pp r0.xyz, r0.w, r0, c12
    mul r1.xyz, r6, c15
    mad_pp r0.xyz, r1, c16.w, r0
    abs r0.w, c3.x
    if_ne c3.x, -c3.x
      texld r1, c18, s0
      add r1.y, -r1.y, v3.w
      mad r3.z, r1.x, r1.y, r3.x
      mov r3.w, v3.w
      mov r1.xyz, r3.zyww
    else
      mov r1.xyz, c17.w
    endif
    mov r3.z, v3.w
    cmp r1.xyz, -r0.w, r3, r1
    rcp r0.w, r1.z
    mul r1.xy, r0.w, r1
    mad r1.xy, r1, c1, c1.wzzw
    texld_pp r1, r1, s5
    mul r1.yzw, r6.xxyz, c16.xxyz
    mad_pp oC0.xyz, r0, r1.x, r1.yzww
    rcp r0.x, v3.w
    mad oC0.w, c2.x, r0.x, c2.y

// approximately 87 instruction slots used (7 texture, 80 arithmetic)
