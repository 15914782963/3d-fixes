//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float4 DNEMiscParameter;
//   sampler2D DNEReflectionTexture;
//   float4 DNEResolution;
//   float4 DiffuseOverrideParameter;
//   sampler2D HeightmapTexture;
//   float4 LightMapScale[2];
//   sampler2D LightMapTextures[2];
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenDoorFadeSettings;
//   float4 ScreenDoorFadeSettings2;
//   sampler2D ScreenDoorNoiseTexture;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float4 UniformPixelVector_0;
//   float3 UpperSkyColor;
//   sampler2D VAOBuffer;
//   bool bEnableScreenDoorFade;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   bEnableScreenDoorFade     b0       1
//   DNEMiscParameter          c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   DiffuseOverrideParameter  c4       1
//   SpecularOverrideParameter c5       1
//   LightMapScale             c7       2
//   DNEResolution             c9       1
//   ScreenDoorFadeSettings    c10      1
//   ScreenDoorFadeSettings2   c11      1
//   UniformPixelVector_0      c12      1
//   UpperSkyColor             c13      1
//   AmbientColorAndSkyFactor  c14      1
//   LightMapTextures          s0       2
//   NvStereoFixTexture        s2       1
//   DNEReflectionTexture      s3       1
//   ScreenDoorNoiseTexture    s4       1
//   PixelTexture2D_0          s5       1
//   PixelTexture2D_1          s6       1
//   PixelTexture2D_2          s7       1
//   HeightmapTexture          s8       1
//   VAOBuffer                 s9       1
//

    ps_3_0
    def c6, 2, -1, 1, 0
    def c15, 0.5, -0.5, -5.55472994, -6.98316002
    def c16, 0.333333343, 0.0625, 0, 0
    dcl_texcoord1 v0.xy
    dcl_texcoord2 v1.xy
    dcl_texcoord6 v2.xyz
    dcl_texcoord5 v3.w
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9

// Redundant Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i -f --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed CRC32_BB251004_166.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine


def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

    texld r0, v0, s8
    mad r0.xy, r0.zwzw, c6.x, c6.y
    dp2add r1.x, r0, -r0, c6.z
    rsq r1.x, r1.x
    rcp r0.z, r1.x
    mov r0.w, -r0.x
    dp2add r1.x, r0.zwzw, r0.zwzw, c6.w
    rsq r1.x, r1.x
    mul r1.yz, r0.xwzw, r1.x
    mov r1.x, c6.w
    mul r2.xyz, r0.zxyw, r1
    mad r2.xyz, r0.yzxw, r1.yzxw, -r2
    nrm r3.xyz, v2
    dp2add_pp r1.x, r1.zyzw, r3.xzzw, c6.w
    dp3_pp r1.y, r2, r3
    dp3_pp r1.z, r0, r3
    mad r0.xy, vPos, c9, c9.zwzw
    mul r0.xy, r0, v3.w
    dp3_pp r1.x, r1, r1
    rsq_pp r1.x, r1.x
    mul_sat_pp r1.x, r1.x, r1.z
    mad_sat_pp r1.y, c0.x, v3.w, c0.y
    texld_pp r2, v0, s6
    mad_pp r2.xyz, r2, c5.w, c5
    texld_pp r3, v0, s7
    if b0
      mad r1.zw, vPos.xyxy, c11, c11.xyxy
      texld_pp r4, r1.zwzw, s4
      mad r1.z, c10.y, r4.x, c10.z
      mov r3.z, c6.z
      add r1.w, r3.z, -c10.x
      add r4, -r1.w, r1.z
      texkill r4
    endif
    texld_pp r4, v0, s5
    mov r1.z, c6.z
    add_pp r3.xyz, r1.z, -c12
    mul_pp r3.xyz, r3, r4
    mad_pp r3.xyz, r3, c4.w, c4
    rcp r1.z, v3.w
    mul r4.xy, r0, r1.z
    mad_pp r4.xy, r4, c15, c15.x
    mad_pp r4.w, -c0.w, r3.w, c0.w
    mov r4.z, c6.w

// DNERefelctionTexture fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i -f --git --disable-redundant-unreal-correction --auto-fix-unreal-dne-reflection --only-autofixed CRC32_BB251004_166.txt
texldl r7, c220.z, s13
mad r4.x, -r7.x, c220.w, r4.x

    texldl_pp r4, r4, s3
    max_pp r5.xyz, r3.w, r2
    mad_pp r1.w, r1.x, c15.z, c15.w
    mul_pp r1.x, r1.x, r1.w
    exp_pp r1.x, r1.x
    lrp_pp r6.xyz, r1.x, r5, r2
    mul_pp r2.xyz, r4, r6
    mul_pp r2.xyz, r2, c0.z
    mad_pp r1.xyw, r1.y, r2.xyzz, c12.xyzz
    texld r2, v1, s0
    mul_pp r2.xyz, r2, c7
    texld r4, v1, s1
    mul_pp r4.xyz, r4, c8
    dp3_pp r2.w, r4, c16.x
    mul_pp r2.xyz, r2.w, r2
    mad_pp r1.xyw, r3.xyzz, r2.xyzz, r1
    mul r2.xyz, r3, c13
    mad_pp r1.xyw, r2.xyzz, c14.w, r1
    abs r2.x, c3.x
    if_ne c3.x, -c3.x
      texld r4, c16.yzzw, s2
      add r2.y, -r4.y, v3.w
      mad r0.z, r4.x, r2.y, r0.x
      mov r0.w, v3.w
      mov r2.yzw, r0.xzyw
    else
      mov r2.yzw, c6.w
    endif
    mov r0.z, v3.w
    cmp r0.xyz, -r2.x, r0, r2.yzww
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    texld_pp r0, r0, s9
    mul r0.yzw, r3.xxyz, c14.xxyz
    mad_pp oC0.xyz, r1.xyww, r0.x, r0.yzww
    mad oC0.w, c2.x, r1.z, c2.y

// approximately 91 instruction slots used (11 texture, 80 arithmetic)
