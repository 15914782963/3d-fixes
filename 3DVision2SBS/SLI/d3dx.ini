[Present]
; Uncomment both of these lines to enable a custom shader that will downscale
; the backbuffer to half height then change the output mode to Top-and-Bottom,
; increasing performance in SLI at resolutions higher than 1920x1080. This
; should be used *INSTEAD* of the regular SBS shader:
run = CustomShader3DVision2SBSDownscalePass1
run = CustomShader3DVision2SBSDownscalePass2

[Resource3DVision2SBSBackupTexture]
[Resource3DVision2SBSHalfHeight]
height_multiply = 0.5
[CustomShader3DVision2SBSDownscalePass1]
; Load a custom vertex + pixel shader:
vs = ShaderFixes/3dvision2sbsdownscalevs.hlsl
ps = ShaderFixes/3dvision2sbsdownscalepass1ps.hlsl
; Explicitly unbind other shader types for safety:
hs = null
ds = null
gs = null
; Disable the OM blend stage that could interfere with the shader:
blend = disable
; Disable front/back face culling so the vertices can be in any rotation:
cull = none
; Use a triangle strip topology so we only have to output four vertices:
topology = triangle_strip
; Clear all render + depth targets to avoid compatibility issues:
o1 = null
o2 = null
o3 = null
o4 = null
o5 = null
o6 = null
o7 = null
oD = null
; Make our Resource3DVision2SBSHalfHeight compatible with the back buffer's
; description, but with the height overridden in the above resource section:
Resource3DVision2SBSHalfHeight = copy_desc bb
; Then bind it as the render target. set_viewport ensures that the view port is
; the size of the buffer so the draw call will work:
o0 = set_viewport Resource3DVision2SBSHalfHeight
; Back up any textures that were in the ps-t100 slot. The CustomResource
; section will already back up a lot of state, including shaders, render
; targets, depth targets, UAVs, viewports, blend state, rasterizer state,
; primitive topology, etc. but it does not back up textures:
Resource3DVision2SBSBackupTexture = reference ps-t100
; Bind the back buffer as a texture:
ps-t100 = bb
; Some games such as The Evil Within and Akiba's Trip constantly unbind
; StereoParams & IniParams, so we may need to explicitly rebind them now:
vs-t125 = StereoParams
ps-t125 = StereoParams
vs-t120 = IniParams
ps-t120 = IniParams
; Draw four vertices. The vertex shader will construct coordinates to cover the
; full screen using the SV_VertexID semantic so we don't need vertex buffers:
draw = 4, 0
[CustomShader3DVision2SBSDownscalePass2]
; Load a custom vertex + pixel shader:
vs = ShaderFixes/3dvision2sbsdownscalevs.hlsl
ps = ShaderFixes/3dvision2sbsdownscalepass2ps.hlsl
; Explicitly unbind other shader types for safety:
hs = null
ds = null
gs = null
; Disable the OM blend stage that could interfere with the shader:
blend = disable
; Disable front/back face culling so the vertices can be in any rotation:
cull = none
; Use a triangle strip topology so we only have to output four vertices:
topology = triangle_strip
; Clear all render + depth targets to avoid compatibility issues:
o1 = null
o2 = null
o3 = null
o4 = null
o5 = null
o6 = null
o7 = null
oD = null
; Bind the back buffer as a render target. set_viewport ensures that the view
; port is the size of the buffer so the draw call will work, and no_view_cache
; is necessary for a few games like Mad Max:
o0 = set_viewport no_view_cache bb
; Use the reverse stereo blit to give the shader access to the downscaled back
; buffers of both eyes:
ps-t100 = stereo2mono Resource3DVision2SBSHalfHeight
; Some rare games (e.g. Onechanbara Z2) use MSAA back buffers, which cannot be
; directly used with the reverse stereo blit and must be resolved to non MSAA
; versions first. The symptoms will be a black screen after enabling this
; shader with F11. In that case, replace the above line with these two:
; ps-t100 = resolve_msaa bb
; ps-t100 = stereo2mono ps-t100
; Some games such as The Evil Within and Akiba's Trip constantly unbind
; StereoParams & IniParams, so we may need to explicitly rebind them now:
vs-t125 = StereoParams
ps-t125 = StereoParams
vs-t120 = IniParams
ps-t120 = IniParams
; Draw four vertices. The vertex shader will construct coordinates to cover the
; full screen using the SV_VertexID semantic so we don't need vertex buffers:
draw = 4, 0
; Restore the original texture from the ps-t100 slot:
post ps-t100 = reference Resource3DVision2SBSBackupTexture

[KeyChange3DVision2SBSOutputMode]
key = F11
; 0 = Regular 3D Vision
; 4 = Top and Bottom
; 5 = Reversed Top and Bottom
x7 = 4, 5, 0
type = cycle
