Texture2D<float4> t5 : register(t5);

Texture2D<float4> t4 : register(t4);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s5_s : register(s5);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb2 : register(b2)
{
  float4 cb2[4];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[8];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[18];
}


Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : SV_POSITION0,
  float4 v1 : TEXCOORD0,
  float3 v2 : TEXCOORD1,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = cb1[5].z / v2.z;
  r0.xyz = v2.xyz * r0.xxx;
  r1.xy = v1.xy / v1.ww;
  r2.xyzw = t0.Sample(s0_s, r1.xy).xyzw;
  r0.w = cb1[7].x * r2.x + cb1[7].y;
  r0.w = 1 / r0.w;
  r0.xyz = r0.xyz * r0.www;
  r2.xyz = cb2[1].xyz * r0.yyy;
  r0.xyw = cb2[0].xyz * r0.xxx + r2.xyz;
  r0.xyz = cb2[2].xyz * r0.zzz + r0.xyw;
  r0.xyz = cb2[3].xyz + r0.xyz;
  r2.xyz = -cb1[4].xyz + r0.xyz;
  r0.w = dot(r2.xyz, r2.xyz);
  r0.w = rsqrt(r0.w);
  r2.xyz = r2.xyz * r0.www;
  r3.xyz = cb0[8].xyz + -r0.xyz;
  r0.w = dot(r3.xyz, r3.xyz);
  r1.z = rsqrt(r0.w);
  r0.w = cb0[8].w * r0.w;
  r4.xyzw = t2.Sample(s1_s, r0.ww).xyzw;
  r4.yzw = r3.xyz * r1.zzz + -r2.xyz;
  r3.xyz = r3.xyz * r1.zzz;
  r0.w = dot(r4.yzw, r4.yzw);
  r0.w = max(0.00100000005, r0.w);
  r0.w = rsqrt(r0.w);
  r4.yzw = r4.yzw * r0.www;
  r5.xyzw = t5.Sample(s5_s, r1.xy).xyzw;
  r5.xyz = r5.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r0.w = dot(r5.xyz, r5.xyz);
  r0.w = rsqrt(r0.w);
  r5.xyz = r5.xyz * r0.www;
  r0.w = dot(r5.xyz, r4.yzw);
  r1.z = dot(r3.xyz, r4.yzw);
  r1.w = dot(r5.xyz, r3.xyz);
  r2.x = dot(r5.xyz, -r2.xyz);
  r2.x = max(0, r2.x);
  r1.zw = max(float2(0,0), r1.zw);
  r0.w = max(0, r0.w);
  r0.w = log2(r0.w);
  r3.xyzw = t4.Sample(s4_s, r1.xy).xyzw;
  r6.xyzw = t3.Sample(s3_s, r1.xy).xyzw;
  r7.xyzw = float4(1,1,1,1) + -r3.wxyz;
  r1.x = 1 + -r7.x;
  r1.x = r1.x * 0.967999995 + 0.0299999993;
  r1.x = log2(r1.x);
  r1.x = 10 / r1.x;
  r1.y = r1.x * r1.x;
  r1.x = r1.x * r1.x + 1;
  r1.x = cb0[17].y * r1.x;
  r0.w = r1.y * r0.w;
  r0.w = exp2(r0.w);
  r0.w = r0.w * r1.x;
  r1.x = r7.x * r7.x;
  r1.y = cb0[17].w * r1.x;
  r1.x = -r1.x * cb0[17].w + 1;
  r2.y = r2.x * r1.x + r1.y;
  r2.x = 1 + -r2.x;
  r1.x = r1.w * r1.x + r1.y;
  r1.x = r1.x * r2.y + 9.99999975e-005;
  r1.x = 1 / r1.x;
  r0.w = r1.x * r0.w;
  r0.w = r0.w * r1.w;
  r0.w = cb0[17].x * r0.w;
  r0.w = max(0, r0.w);
  r2.yzw = cb0[12].xyw * r0.yyy;
  r2.yzw = cb0[11].xyw * r0.xxx + r2.yzw;
  r0.xyz = cb0[13].xyw * r0.zzz + r2.yzw;
  r0.xyz = cb0[14].xyw + r0.xyz;
  r0.xy = r0.xy / r0.zz;
  r0.z = r0.z < 0;
  r0.z = r0.z ? 1.000000 : 0;
  r8.xyzw = t1.Sample(s2_s, r0.xy).xyzw;
  r0.x = r8.w * r0.z;
  r0.x = r0.x * r4.x;
  r0.x = min(r0.x, r5.w);
  r0.xyz = cb0[9].xyz * r0.xxx;
  r2.yzw = r0.www * r0.xyz;
  r0.w = 1 + -r1.z;
  r1.x = r1.z * r1.z;
  r1.x = dot(r1.xx, r7.xx);
  r1.x = -0.5 + r1.x;
  r1.y = r0.w * r0.w;
  r1.y = r1.y * r1.y;
  r0.w = r1.y * r0.w;
  r3.xyz = r7.yzw * r0.www + r3.xyz;
  r2.yzw = r3.xyz * r2.yzw;
  r0.w = r2.x * r2.x;
  r0.w = r0.w * r0.w;
  r0.w = r0.w * r2.x;
  r0.w = r1.x * r0.w + 1;
  r1.y = 1 + -r1.w;
  r1.z = r1.y * r1.y;
  r1.z = r1.z * r1.z;
  r1.y = r1.z * r1.y;
  r1.x = r1.x * r1.y + 1;
  r0.w = r1.x * r0.w;
  r0.w = r0.w * r1.w;
  r0.xyz = r0.xyz * r0.www;
  o0.xyz = r6.xyz * r0.xyz + r2.yzw;
  o0.w = 1;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[18], immediateIndexed
dcl_constantbuffer cb1[8], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 9
div r0.x, cb1[5].z, v2.z
mul r0.xyz, r0.xxxx, v2.xyzx
div r1.xy, v1.xyxx, v1.wwww
sample r2.xyzw, r1.xyxx, t0.xyzw, s0
mad r0.w, cb1[7].x, r2.x, cb1[7].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r2.xyz, r0.yyyy, cb2[1].xyzx
mad r0.xyw, cb2[0].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
add r0.xyz, r0.xyzx, cb2[3].xyzx
add r2.xyz, r0.xyzx, -cb1[4].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
add r3.xyz, -r0.xyzx, cb0[8].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r1.z, r0.w
mul r0.w, r0.w, cb0[8].w
sample r4.xyzw, r0.wwww, t2.xyzw, s1
mad r4.yzw, r3.xxyz, r1.zzzz, -r2.xxyz
mul r3.xyz, r1.zzzz, r3.xyzx
dp3 r0.w, r4.yzwy, r4.yzwy
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r4.yzw, r0.wwww, r4.yyzw
sample r5.xyzw, r1.xyxx, t5.xyzw, s5
mad r5.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r5.xyzx, r5.xyzx
rsq r0.w, r0.w
mul r5.xyz, r0.wwww, r5.xyzx
dp3 r0.w, r5.xyzx, r4.yzwy
dp3 r1.z, r3.xyzx, r4.yzwy
dp3 r1.w, r5.xyzx, r3.xyzx
dp3 r2.x, r5.xyzx, -r2.xyzx
max r2.x, r2.x, l(0.000000)
max r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
max r0.w, r0.w, l(0.000000)
log r0.w, r0.w
sample r3.xyzw, r1.xyxx, t4.xyzw, s4
sample r6.xyzw, r1.xyxx, t3.xyzw, s3
add r7.xyzw, -r3.wxyz, l(1.000000, 1.000000, 1.000000, 1.000000)
add r1.x, -r7.x, l(1.000000)
mad r1.x, r1.x, l(0.968000), l(0.030000)
log r1.x, r1.x
div r1.x, l(10.000000), r1.x
mul r1.y, r1.x, r1.x
mad r1.x, r1.x, r1.x, l(1.000000)
mul r1.x, r1.x, cb0[17].y
mul r0.w, r0.w, r1.y
exp r0.w, r0.w
mul r0.w, r1.x, r0.w
mul r1.x, r7.x, r7.x
mul r1.y, r1.x, cb0[17].w
mad r1.x, -r1.x, cb0[17].w, l(1.000000)
mad r2.y, r2.x, r1.x, r1.y
add r2.x, -r2.x, l(1.000000)
mad r1.x, r1.w, r1.x, r1.y
mad r1.x, r1.x, r2.y, l(0.000100)
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
mul r0.w, r0.w, r1.x
mul r0.w, r1.w, r0.w
mul r0.w, r0.w, cb0[17].x
max r0.w, r0.w, l(0.000000)
mul r2.yzw, r0.yyyy, cb0[12].xxyw
mad r2.yzw, cb0[11].xxyw, r0.xxxx, r2.yyzw
mad r0.xyz, cb0[13].xywx, r0.zzzz, r2.yzwy
add r0.xyz, r0.xyzx, cb0[14].xywx
div r0.xy, r0.xyxx, r0.zzzz
lt r0.z, r0.z, l(0.000000)
and r0.z, r0.z, l(0x3f800000)
sample r8.xyzw, r0.xyxx, t1.xyzw, s2
mul r0.x, r0.z, r8.w
mul r0.x, r4.x, r0.x
min r0.x, r5.w, r0.x
mul r0.xyz, r0.xxxx, cb0[9].xyzx
mul r2.yzw, r0.xxyz, r0.wwww
add r0.w, -r1.z, l(1.000000)
mul r1.x, r1.z, r1.z
dp2 r1.x, r1.xxxx, r7.xxxx
add r1.x, r1.x, l(-0.500000)
mul r1.y, r0.w, r0.w
mul r1.y, r1.y, r1.y
mul r0.w, r0.w, r1.y
mad r3.xyz, r7.yzwy, r0.wwww, r3.xyzx
mul r2.yzw, r2.yyzw, r3.xxyz
mul r0.w, r2.x, r2.x
mul r0.w, r0.w, r0.w
mul r0.w, r2.x, r0.w
mad r0.w, r1.x, r0.w, l(1.000000)
add r1.y, -r1.w, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
mad r1.x, r1.x, r1.y, l(1.000000)
mul r0.w, r0.w, r1.x
mul r0.w, r1.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mad o0.xyz, r6.xyzx, r0.xyzx, r2.yzwy
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
