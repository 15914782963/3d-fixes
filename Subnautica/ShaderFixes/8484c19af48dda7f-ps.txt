// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8484c19af48dda7f-ps.txt
// 3DMigoto: 8484c19af48dda7f |    Unity headers extracted from MarmosetUBER
//    Shader "MarmosetUBER" {
//      Fallback "VertexLit"
//      SubShader 1/1 {
//        Tags { "RenderType"="Opaque" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "RenderType"="Opaque" }
//          ZWrite [_ZWrite]
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from MarmosetUBER:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 260 8 11
//   undeciphered1a: 14
//   Keywords { "DIRECTIONAL" "LOD_FADE_CROSSFADE" "MARMO_SPECMAP" "FX_KELP" "MARMO_EMISSION" "WBOIT" }
//   undeciphered2: 1 9 5 9 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1056
//   Float 0 [_UweFogEnabled]
//   Float 4 [_UweAboveWaterFogStartDistance]
//   Vector 16 [_UweFogVsLightDirection] 3
//   Vector 48 [_UweFogLightColor]
//   Vector 64 [_UweTopAmbientColor] 3
//   Vector 96 [_UweVsWaterPlane]
//   Float 240 [_UweVolumeTextureSlices]
//   Float 244 [_UweExtinctionAndScatteringScale]
//   Float 248 [_UweSunAttenuationFactor]
//   Vector 256 [_UweFogMiePhaseConst] 3
//   Float 280 [_SkyFogDensity]
//   Vector 288 [_SkyFogColor] 3
//   Float 300 [settingsSampleDistance]
//   Float 304 [_WBOIT_WeightToggle]
//   Float 308 [_WBOIT_WeightSharpness]
//   Vector 352 [_LightColor0]
//   Vector 368 [_SpecColor]
//   Float 384 [_EnableSimpleGlass]
//   Vector 400 [_Color]
//   Vector 416 [_MainTex_ST]
//   Float 436 [_UwePowerLoss]
//   Float 440 [_UweLocalLightScalar]
//   Float 444 [_IBLreductionAtNight]
//   Vector 448 [_BumpMap_ST]
//   Float 464 [_GlowStrengthNight]
//   Float 468 [_EmissionLMNight]
//   Float 576 [_Gray]
//   Float 580 [_Brightness]
//   Float 584 [_SpecInt]
//   Float 588 [_Shininess]
//   Float 592 [_Fresnel]
//   Vector 608 [_SpecTex_ST]
//   Vector 624 [_Illum_ST]
//   Vector 640 [_GlowColor]
//   Float 656 [_GlowStrength]
//   Float 660 [_EmissionLM]
//   Float 668 [_AffectedByDayNightCycle]
//   Vector 688 [_ExposureIBL]
//   Vector 712 [_UniformOcclusion] 2
//   Vector 896 [_SH0] 3
//   Vector 912 [_SH1] 3
//   Vector 928 [_SH2] 3
//   Vector 944 [_SH3] 3
//   Vector 960 [_SH4] 3
//   Vector 976 [_SH5] 3
//   Vector 992 [_SH6] 3
//   Vector 1008 [_SH7] 3
//   Vector 1024 [_SH8] 3
//   Matrix 112 [_UweCameraToVolumeMatrix]
//   Matrix 720 [_SkyMatrix]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityPerDraw" 160
//   Vector 128 [unity_LODFade]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 4
//   SetTexture 1 [_BumpMap] 2D 5
//   SetTexture 2 [_SpecTex] 2D 6
//   SetTexture 3 [_Illum] 2D 7
//   SetTexture 4 [_SpecCubeIBL] CUBE 8
//   SetTexture 5 [_UweExtinctionTexture] 2D 1
//   SetTexture 6 [_UweScatteringTexture] 2D 2
//   SetTexture 7 [_UweEmissiveTexture] 2D 3
//   SetTexture 8 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:57:19 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyz         8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[65], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[9], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v9.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8484c19af48dda7f-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.y, v1.w
mov r0.z, v2.w
mov r0.w, v3.w
add r1.xyz, -r0.yzwy, r15.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
dp3 r1.w, v6.xyzx, v6.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, v6.xyzx
add r3.xy, -cb0[27].zyzz, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r1.w, r3.x, cb0[41].w
add r3.xz, cb0[29].xxyx, -cb0[41].xxyx
mad r3.xz, r1.wwww, r3.xxzx, cb0[41].xxyx
mul r4.xy, cb0[43].xyxx, cb0[44].zwzz
mad r4.zw, v4.xxxy, cb0[26].xxxy, cb0[26].zzzw
sample r5.xyzw, r4.zwzz, t0.xyzw, s4
mul r6.xyzw, r5.xyzw, cb0[25].xyzw
mul r5.xyz, r6.xyzx, cb0[43].wwww
mad r2.w, r5.w, cb0[25].w, l(-1.000000)
mad r2.w, cb0[24].x, r2.w, l(1.000000)
mul r5.xyw, r2.wwww, r5.xyxz
max r1.w, r1.w, l(0.000000)
min r1.w, r1.w, cb0[27].w
mad r4.xy, r1.wwww, -r4.xyxx, r4.xyxx
mad r4.zw, v4.xxxy, cb0[28].xxxy, cb0[28].zzzw
sample r7.xyzw, r4.zwzz, t1.xyzw, s5
mad r6.xy, r7.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r6.xyxx, r6.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r6.z, r1.w
dp3 r1.w, r6.xyzx, r6.xyzx
rsq r1.w, r1.w
mul r6.xyz, r1.wwww, r6.xyzx
dp3 r7.x, v1.xyzx, r6.xyzx
dp3 r7.y, v2.xyzx, r6.xyzx
dp3 r7.z, v3.xyzx, r6.xyzx
mad r4.zw, v4.xxxy, cb0[38].xxxy, cb0[38].zzzw
sample r8.xyzw, r4.zwzz, t2.xyzw, s6
dp3 r1.w, r6.xyzx, r2.xyzx
mad_sat r1.w, |r1.w|, -cb0[37].x, l(1.250000)
mul r2.x, r1.w, r1.w
mul r2.x, r2.x, r2.x
mul r1.w, r1.w, r2.x
mul r1.w, r1.w, cb0[36].z
mul r2.xyz, r1.wwww, r8.xyzx
mul r2.xyz, r2.xyzx, cb0[23].xyzx
mul r2.xyz, r2.xyzx, cb0[43].wwww
add r1.w, -r8.w, l(1.000000)
mad r4.zw, -r1.wwww, r1.wwww, l(0.000000, 0.000000, 1.000000, 8.000000)
mad r1.w, -cb0[36].w, r4.z, r4.w
add r3.w, -r1.w, l(8.000000)
exp r3.w, r3.w
mad r4.z, r3.w, l(0.159154937), l(0.318309873)
mul r6.xyz, r2.xyzx, r4.zzzz
mad r4.zw, v4.xxxy, cb0[39].xxxy, cb0[39].zzzw
sample r8.xyzw, r4.zwzz, t3.xyzw, s7
mul r8.xyzw, r2.wwww, r8.xyzw
mul r8.xyz, r8.xyzx, cb0[40].xyzx
mul r8.xyz, r3.xxxx, r8.xyzx
mul r3.x, r3.z, r8.w
mul r9.xyz, r3.xxxx, r5.xywx
mad r8.xyz, r8.xyzx, cb0[43].wwww, r9.xyzx
add r9.xyz, -v5.xyzx, r15.xyzx
dp3 r3.x, r9.xyzx, r9.xyzx
rsq r3.x, r3.x
mul r9.xyz, r3.xxxx, r9.xyzx
dp3 r3.x, -r9.xyzx, r7.xyzx
add r3.x, r3.x, r3.x
mad r9.xyz, r7.xyzx, -r3.xxxx, -r9.xyzx
mov r10.x, cb0[45].x
mov r10.y, cb0[46].x
mov r10.z, cb0[47].x
mov r11.x, cb0[45].y
mov r11.y, cb0[46].y
mov r11.z, cb0[47].y
mov r12.x, cb0[45].z
mov r12.y, cb0[46].z
mov r12.z, cb0[47].z
mul r13.xyz, r9.zzzz, r12.xyzx
mad r9.yzw, r11.xxyz, r9.yyyy, r13.xxyz
mad r9.xyz, r10.xyzx, r9.xxxx, r9.yzwy
sample_l r9.xyzw, r9.xyzx, t4.xyzw, s8, r1.w
mul r2.xyz, r2.xyzx, r9.xyzx
mul r2.xyz, r4.yyyy, r2.xyzx
mad r2.xyz, r8.xyzx, r3.yyyy, r2.xyzx
ge r1.w, l(0.000000), cb0[41].w
mul r3.xyz, r7.zzzz, r12.xyzx
mad r3.xyz, r11.xyzx, r7.yyyy, r3.xyzx
mad r3.xyz, r10.xyzx, r7.xxxx, r3.xyzx
dp3 r4.y, r3.xyzx, r3.xyzx
max r4.y, r4.y, l(0.001000)
rsq r4.y, r4.y
mul r3.xyz, r3.xyzx, r4.yyyy
mad r4.yzw, cb0[57].xxyz, r3.yyyy, cb0[56].xxyz
mad r4.yzw, cb0[58].xxyz, r3.zzzz, r4.yyzw
mad r4.yzw, cb0[59].xxyz, r3.xxxx, r4.yyzw
mul r8.xyz, r3.xzxx, r3.yyzy
mad r4.yzw, cb0[60].xxyz, r8.xxxx, r4.yyzw
mad r4.yzw, cb0[61].xxyz, r8.yyyy, r4.yyzw
mad r4.yzw, cb0[63].xxyz, r8.zzzz, r4.yyzw
mul r3.yz, r3.yyzy, r3.yyzy
mad r3.z, r3.z, l(3.000000), l(-1.000000)
mad r4.yzw, cb0[62].xxyz, r3.zzzz, r4.yyzw
mad r3.x, r3.x, r3.x, -r3.y
mad r3.xyz, cb0[64].xyzx, r3.xxxx, r4.yzwy
mul r3.xyz, r4.xxxx, |r3.xyzx|
and r3.xyz, r1.wwww, r3.xyzx
mad r2.xyz, r3.xyzx, r5.xywx, r2.xyzx
add r1.w, -cb3[8].y, l(1.000000)
mul r4.w, r1.w, r6.w
add r1.w, r5.y, r5.x
mad r1.w, r5.z, r2.w, r1.w
mad r3.xyz, r1.wwww, l(0.333333343, 0.333333343, 0.333333343, 0.000000), -r5.xywx
mad r3.xyz, cb0[36].xxxx, r3.xyzx, r5.xywx
add r3.xyz, r3.xyzx, cb0[36].yyyy
eq r1.w, cb4[0].x, l(1.000000)
if_nz r1.w
  eq r2.w, cb4[0].y, l(1.000000)
  mul r5.xyz, v2.wwww, cb4[2].xyzx
  mad r5.xyz, cb4[1].xyzx, v1.wwww, r5.xyzx
  mad r5.xyz, cb4[3].xyzx, v3.wwww, r5.xyzx
  add r5.xyz, r5.xyzx, cb4[4].xyzx
  movc r5.xyz, r2.wwww, r5.xyzx, r0.yzwy
  add r5.xyz, r5.xyzx, -cb4[6].xyzx
  mul r5.yzw, r5.xxyz, cb4[5].xxyz
  mad r2.w, r5.y, l(0.250000), l(0.750000)
  mad r5.y, cb4[0].z, l(0.500000), l(0.750000)
  max r5.x, r2.w, r5.y
  sample r5.xyzw, r5.xzwx, t8.xyzw, s0
else 
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r2.w, r5.xyzw, cb2[45].xyzw
mul r5.xyz, r2.wwww, cb0[22].xyzx
if_nz r1.w
  eq r1.w, cb4[0].y, l(1.000000)
  mul r8.xyz, v2.wwww, cb4[2].xyzx
  mad r8.xyz, cb4[1].xyzx, v1.wwww, r8.xyzx
  mad r8.xyz, cb4[3].xyzx, v3.wwww, r8.xyzx
  add r8.xyz, r8.xyzx, cb4[4].xyzx
  movc r0.yzw, r1.wwww, r8.xxyz, r0.yyzw
  add r0.yzw, r0.yyzw, -cb4[6].xxyz
  mul r8.yzw, r0.yyzw, cb4[5].xxyz
  mul r0.y, r8.y, l(0.250000)
  mul r0.z, cb4[0].z, l(0.500000)
  mad r0.w, -cb4[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.z, r0.y
  min r8.x, r0.w, r0.y
  sample r9.xyzw, r8.xzwx, t8.xyzw, s0
  add r0.yzw, r8.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r10.xyzw, r0.yzwy, t8.xyzw, s0
  add r0.yzw, r8.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r8.xyzw, r0.yzwy, t8.xyzw, s0
  mov r7.w, l(1.000000)
  dp4 r9.x, r9.xyzw, r7.xyzw
  dp4 r9.y, r10.xyzw, r7.xyzw
  dp4 r9.z, r8.xyzw, r7.xyzw
else 
  mov r7.w, l(1.000000)
  dp4 r9.x, cb2[38].xyzw, r7.xyzw
  dp4 r9.y, cb2[39].xyzw, r7.xyzw
  dp4 r9.z, cb2[40].xyzw, r7.xyzw
endif 
max r0.yzw, r9.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
rsq r1.w, r1.w
mul r8.xyz, r1.wwww, cb2[0].xyzx
dp3_sat r1.w, r7.xyzx, r8.xyzx
add r2.w, r1.w, r1.w
mul r9.xyz, r3.xyzx, r2.wwww
mad r1.xyz, r1.xyzx, r0.xxxx, r8.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
dp3_sat r0.x, r7.xyzx, r1.xyzx
add r1.x, r3.w, r3.w
log r0.x, r0.x
mul r0.x, r0.x, r1.x
exp r0.x, r0.x
mul r1.x, r1.w, l(10.000000)
min r1.x, r1.x, l(1.000000)
mul r0.x, r0.x, r1.x
mul r1.xyz, r5.xyzx, r0.xxxx
mul r1.xyz, r1.xyzx, r6.xyzx
mul r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mad r1.xyz, r9.xyzx, r5.xyzx, r1.xyzx
mad r0.xyz, r3.xyzx, r0.yzwy, r1.xyzx
add r0.xyz, r2.xyzx, r0.xyzx
ne r1.x, cb0[0].x, l(0.000000)
if_nz r1.x
  dp3 r1.x, v9.xyzx, v9.xyzx
  sqrt r0.w, r1.x
  div r1.xyz, v9.xyzx, r0.wwww
  mul r2.xyz, r1.xyzx, cb0[18].wwww
  mul r3.xyz, r2.yyyy, cb0[8].xyzx
  mad r2.xyw, cb0[7].xyxz, r2.xxxx, r3.xyxz
  mad r2.xyz, cb0[9].xyzx, r2.zzzz, r2.xywx
  add_sat r2.xyz, r2.xyzx, cb0[10].xyzx
  div r3.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[15].x
  mad r1.w, r2.y, cb0[15].x, l(-0.500000)
  frc r2.y, r1.w
  add r1.w, r1.w, -r2.y
  add r1.w, r1.w, r2.z
  mul r2.w, r3.y, r1.w
  mov r3.x, l(0)
  add r3.xy, r2.xwxx, r3.xyxx
  sample_l r5.xyzw, r2.xwxx, t5.xyzw, s1, l(0.000000)
  sample_l r6.xyzw, r3.xyxx, t5.xyzw, s1, l(0.000000)
  add r6.xyzw, -r5.xyzw, r6.xyzw
  mad r5.xyzw, r2.yyyy, r6.wxyz, r5.wxyz
  dp3 r1.w, r1.xyzx, cb0[6].xyzx
  lt r2.z, l(0.000000), cb0[6].w
  if_nz r2.z
    lt r2.z, r1.w, l(-0.010000)
    not r3.z, r2.z
    div r3.w, -cb0[6].w, r1.w
    add r3.w, r3.w, cb0[0].y
    mul r6.x, -r0.w, cb0[17].z
    mul r6.x, r6.x, l(1.442695)
    exp r6.x, r6.x
    add r6.yzw, r0.xxyz, -cb0[18].xxyz
    mad r6.xyz, r6.xxxx, r6.yzwy, cb0[18].xyzx
    movc r5.x, r2.z, r3.w, cb0[0].y
    lt r3.w, r0.w, r5.x
    movc r2.z, r2.z, r3.w, l(-1)
    or r2.z, r3.z, r2.z
    mov r3.z, r4.w
    mov r7.xyz, r0.xyzx
    mov r7.w, r0.w
    mov r0.xyz, r6.xyzx
  else 
    div r3.w, -cb0[6].w, r1.w
    lt r6.w, l(0.000000), r3.w
    add r8.x, r0.w, -r3.w
    max r8.x, r8.x, l(0.000000)
    mul r8.x, -r8.x, cb0[17].z
    mul r8.x, r8.x, l(1.442695)
    exp r8.x, r8.x
    add r8.yzw, r0.xxyz, -cb0[18].xxyz
    mad r8.xyz, r8.xxxx, r8.yzwy, cb0[18].xyzx
    min r8.w, r0.w, r3.w
    movc r7.xyzw, r6.wwww, r8.xyzw, r0.xyzw
    mov r2.z, l(0)
  endif 
  if_z r2.z
    lt r0.w, r5.x, r7.w
    if_nz r0.w
      sample_l r6.xyzw, r2.xwxx, t6.xyzw, s2, l(0.000000)
      sample_l r8.xyzw, r3.xyxx, t6.xyzw, s2, l(0.000000)
      add r8.xyzw, -r6.xyzw, r8.xyzw
      mad r6.xyzw, r2.yyyy, r8.xyzw, r6.xyzw
      sample_l r8.xyzw, r2.xwxx, t7.xyzw, s3, l(0.000000)
      sample_l r9.xyzw, r3.xyxx, t7.xyzw, s3, l(0.000000)
      add r2.xzw, -r8.xxyz, r9.xxyz
      mad r2.xyz, r2.yyyy, r2.xzwx, r8.xyzx
      mul r3.xyw, r6.xyxz, cb0[15].yyyy
      mul r6.xyz, r5.yzwy, cb0[15].yyyy
      add r0.w, -r5.x, r7.w
      mul r8.xyz, r1.xyzx, r5.xxxx
      dp3 r1.x, r1.xyzx, -cb0[1].xyzx
      mad r1.x, -cb0[16].z, r1.x, cb0[16].y
      log r1.x, r1.x
      mul r1.x, r1.x, l(-1.500000)
      exp r1.x, r1.x
      mul r1.x, r1.x, cb0[16].x
      mul r1.xyz, r1.xxxx, r3.xywx
      dp3 r2.w, cb0[1].xyzx, cb0[6].xyzx
      max r2.w, r2.w, l(0.000100)
      mad r3.xyw, cb0[3].xyxz, cb0[3].wwww, cb0[4].xyxz
      mul r3.xyw, r6.wwww, r3.xyxw
      mul r9.xyz, r6.xyzx, cb0[15].zzzz
      mul r10.xyz, r1.wwww, r9.xyzx
      div r10.xyz, r10.xyzx, r2.wwww
      mad r5.xyz, -r5.yzwy, cb0[15].yyyy, r10.xyzx
      dp3 r1.w, r8.xyzx, cb0[6].xyzx
      add r1.w, r1.w, cb0[6].w
      mul r8.xyz, r1.wwww, r9.xyzx
      div r8.xyz, r8.xyzx, r2.wwww
      mad r9.xyz, r0.wwww, r5.xyzx, r8.xyzx
      mul r9.xyz, r9.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r9.xyz, r9.xyzx
      mul r8.xyz, r8.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r8.xyz, r8.xyzx
      add r8.xyz, -r8.xyzx, r9.xyzx
      div r5.xyz, r8.xyzx, r5.xyzx
      mul r1.xyz, r1.xyzx, r3.xywx
      mul r1.xyz, r5.xyzx, r1.xyzx
      max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      mul r3.xyw, r6.xyxz, -r0.wwww
      mul r3.xyw, r3.xyxw, l(1.442695, 1.442695, 0.000000, 1.442695)
      exp r3.xyw, r3.xyxw
      mul r5.xyz, r0.wwww, -r6.xyzx
      mul r5.xyz, r5.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r5.xyz, r5.xyzx
      add r5.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      div r5.xyz, r5.xyzx, r6.xyzx
      mul r2.xyz, r2.xyzx, r5.xyzx
      max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      mad_sat r0.w, -r0.w, l(0.080000), l(10.000000)
      mul r4.w, r0.w, r4.w
      add r1.xyz, r1.xyzx, r2.xyzx
      mad r0.xyz, r7.xyzx, r3.xywx, r1.xyzx
    else 
      mov r0.xyz, r7.xyzx
    endif 
  else 
    mov r4.w, r3.z
  endif 
endif 
mul r0.w, v9.z, cb0[19].y
mul r0.w, r0.w, l(1.442695)
exp r0.w, r0.w
max r0.w, r0.w, l(0.010000)
min r0.w, r0.w, l(1.000000)
mad r0.w, r4.w, r0.w, l(-1.000000)
mad r0.w, cb0[19].x, r0.w, l(1.000000)
mul r0.xyz, r0.xyzx, r4.wwww
mul r4.xyz, r0.wwww, r0.xyzx
mul o2.x, r0.w, r4.w
mov o0.xyzw, l(0,0,0,0)
mov o1.xyzw, r4.xyzw
mov o2.yzw, l(0,0,0,0)
ret 
// Approximately 0 instruction slots used