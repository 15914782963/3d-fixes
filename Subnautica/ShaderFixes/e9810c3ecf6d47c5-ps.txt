// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e9810c3ecf6d47c5-ps.txt
// 3DMigoto: e9810c3ecf6d47c5 |    Unity headers extracted from FX_WBOIT-WaterBase
//    Shader "FX/WBOIT-WaterBase" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent+101" "RenderType"="Transparent" }
//        Pass 1/2 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent+101" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from FX_WBOIT-WaterBase:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 226 14 11
//   undeciphered1a: 11
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 10 4 10 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 560
//   Float 0 [_UweFogEnabled]
//   Float 4 [_UweAboveWaterFogStartDistance]
//   Vector 16 [_UweFogVsLightDirection] 3
//   Vector 48 [_UweFogLightColor]
//   Vector 64 [_UweTopAmbientColor] 3
//   Vector 96 [_UweVsWaterPlane]
//   Float 240 [_UweVolumeTextureSlices]
//   Float 244 [_UweExtinctionAndScatteringScale]
//   Float 248 [_UweSunAttenuationFactor]
//   Vector 256 [_UweFogMiePhaseConst] 3
//   Float 280 [_SkyFogDensity]
//   Vector 288 [_SkyFogColor] 3
//   Float 300 [settingsSampleDistance]
//   Float 304 [_WBOIT_WeightToggle]
//   Float 308 [_WBOIT_WeightSharpness]
//   Vector 352 [_LightColor0]
//   Vector 368 [_SpecColor]
//   Vector 384 [_Color]
//   Float 400 [_Shininess]
//   Vector 432 [_ScrollSpeed]
//   Vector 448 [_Frequency]
//   Float 472 [_Cycle]
//   Vector 480 [_TexScale]
//   Float 496 [_ClipedValue]
//   Float 500 [_UWE_EditorTime]
//   Float 504 [_MaskPow]
//   Float 508 [_ClipMultiplier]
//   Float 512 [_ClipFade]
//   Float 516 [_InvFade]
//   Float 520 [_MainFoam]
//   Float 524 [_TopFoamHeight]
//   Float 528 [_BorderFoam]
//   Matrix 112 [_UweCameraToVolumeMatrix]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MaskMap] 2D 8
//   SetTexture 1 [_CameraDepthTexture] 2D 9
//   SetTexture 2 [_FlowMap] 2D 7
//   SetTexture 3 [_NoiseTex] 2D 6
//   SetTexture 4 [_MainTex] 2D 4
//   SetTexture 5 [_BumpMap] 2D 5
//   SetTexture 6 [_UweExtinctionTexture] 2D 1
//   SetTexture 7 [_UweScatteringTexture] 2D 2
//   SetTexture 8 [_UweEmissiveTexture] 2D 3
//   SetTexture 9 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 17:00:23 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float    y  
// TEXCOORD                 6   xyzw        7     NONE   float     z 
// TEXCOORD                 7   xyzw        8     NONE   float   x z 
// TEXCOORD                 8   xyz         9     NONE   float   xyz 
// TEXCOORD                 9   xyzw       10     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.y
dcl_input_ps linear v7.z
dcl_input_ps linear v8.xz
dcl_input_ps linear v9.xyz
dcl_input_ps linear v10.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e9810c3ecf6d47c5-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.y, v2.w
mov r0.z, v3.w
mov r0.w, v4.w
add r1.xyz, -r0.yzwy, r12.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
add r1.w, cb0[31].y, cb1[0].y
sample r2.xyzw, v1.xyxx, t0.xyzw, s8
div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[31].z
log r2.x, r2.x
mul r2.x, r2.x, r2.y
exp r2.x, r2.x
mad r2.x, -cb0[31].x, cb0[31].w, r2.x
lt r2.y, r2.x, l(0.000000)
discard_nz r2.y
div r2.yz, v5.xxyx, v5.wwww
sample r3.xyzw, r2.yzyy, t1.xyzw, s9
mad r2.y, cb1[7].z, r3.x, cb1[7].w
div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
add r2.y, r2.y, -v5.z
mul r2.z, r2.y, cb0[32].y
log r2.x, r2.x
mul r2.x, r2.x, l(0.750000)
exp r2.x, r2.x
mul_sat r2.x, r2.x, r2.z
mul_sat r2.y, r2.y, cb0[33].x
add r2.y, -r2.y, l(1.000000)
add r2.z, -v7.z, -cb1[5].y
div r2.z, r2.z, cb0[32].x
min r2.z, r2.z, l(1.000000)
mul r3.xyzw, v8.xzxz, cb0[30].wwyy
sample r4.xyzw, r3.xyxx, t2.xyzw, s7
mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.200000, -1.200000, -1.200000, 0.000000)
mul r3.xy, r4.xyxx, cb0[28].wwww
mad r3.zw, r1.wwww, cb0[27].xxxy, r3.zzzw
sample r5.xyzw, r3.zwzz, t3.xyzw, s6
div r1.w, r1.w, cb0[29].z
mad r1.w, -r5.x, l(0.050000), r1.w
frc r2.w, r1.w
add r1.w, r1.w, l(0.500000)
frc r1.w, r1.w
mul r3.zw, v8.xxxz, cb0[30].xxxx
mul r4.xy, r1.wwww, r3.xyxx
mad r5.xyzw, v8.xzxz, cb0[30].xxzz, r4.xyxy
sample r6.xyzw, r5.xyxx, t4.xyzw, s4
mul r3.xy, r2.wwww, r3.xyxx
mad r7.xyzw, v8.xzxz, cb0[30].xxzz, r3.xyxy
sample r8.xyzw, r7.xyxx, t4.xyzw, s4
mad r4.xy, r3.zwzz, l(0.700000, 0.700000, 0.000000, 0.000000), r4.xyxx
sample r9.xyzw, r4.xyxx, t4.xyzw, s4
mad r3.xy, r3.zwzz, l(0.700000, 0.700000, 0.000000, 0.000000), r3.xyxx
sample r3.xyzw, r3.xyxx, t4.xyzw, s4
sample r5.xyzw, r5.zwzz, t5.xyzw, s5
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
sample r7.xyzw, r7.zwzz, t5.xyzw, s5
mad r7.xy, r7.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r7.xyxx, r7.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r7.z, r1.w
lt r1.w, l(0.500000), r2.w
add r3.w, -r2.w, l(1.000000)
add r3.w, r3.w, r3.w
add r2.w, r2.w, r2.w
movc r1.w, r1.w, r3.w, r2.w
mul r6.xyzw, r6.xyzx, r9.xyzx
mad r3.xyzw, r8.xyzx, r3.xyzx, -r6.wyzw
mad r3.xyzw, r1.wwww, r3.xyzw, r6.xyzw
add r4.xyw, -r5.xyxz, r7.xyxz
mad r4.xyw, r1.wwww, r4.xyxw, r5.xyxz
mul_sat r1.w, v6.y, cb0[32].w
mad r1.w, r4.z, cb0[32].z, r1.w
mul r5.xyzw, r1.wwww, r3.wyzw
mad r3.xyzw, r3.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), -r5.wyzw
mad r3.xyzw, r2.yyyy, r3.xyzw, r5.xyzw
add_sat r3.xyzw, r3.xyzw, cb0[24].xyzw
mul r1.w, r2.x, r3.w
mul r2.w, r2.z, r1.w
eq r1.w, cb3[0].x, l(1.000000)
if_nz r1.w
  eq r3.w, cb3[0].y, l(1.000000)
  mul r5.xyz, v3.wwww, cb3[2].xyzx
  mad r5.xyz, cb3[1].xyzx, v2.wwww, r5.xyzx
  mad r5.xyz, cb3[3].xyzx, v4.wwww, r5.xyzx
  add r5.xyz, r5.xyzx, cb3[4].xyzx
  movc r5.xyz, r3.wwww, r5.xyzx, r0.yzwy
  add r5.xyz, r5.xyzx, -cb3[6].xyzx
  mul r5.yzw, r5.xxyz, cb3[5].xxyz
  mad r3.w, r5.y, l(0.250000), l(0.750000)
  mad r4.z, cb3[0].z, l(0.500000), l(0.750000)
  max r5.x, r3.w, r4.z
  sample r5.xyzw, r5.xzwx, t9.xyzw, s0
else 
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r3.w, r5.xyzw, cb2[45].xyzw
dp3 r5.x, v2.xyzx, r4.xywx
dp3 r5.y, v3.xyzx, r4.xywx
dp3 r5.z, v4.xyzx, r4.xywx
mul r4.xyz, r3.wwww, cb0[22].xyzx
if_nz r1.w
  eq r1.w, cb3[0].y, l(1.000000)
  mul r6.xyz, v3.wwww, cb3[2].xyzx
  mad r6.xyz, cb3[1].xyzx, v2.wwww, r6.xyzx
  mad r6.xyz, cb3[3].xyzx, v4.wwww, r6.xyzx
  add r6.xyz, r6.xyzx, cb3[4].xyzx
  movc r0.yzw, r1.wwww, r6.xxyz, r0.yyzw
  add r0.yzw, r0.yyzw, -cb3[6].xxyz
  mul r6.yzw, r0.yyzw, cb3[5].xxyz
  mul r0.y, r6.y, l(0.250000)
  mul r0.z, cb3[0].z, l(0.500000)
  mad r0.w, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.z, r0.y
  min r6.x, r0.w, r0.y
  sample r7.xyzw, r6.xzwx, t9.xyzw, s0
  add r0.yzw, r6.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r8.xyzw, r0.yzwy, t9.xyzw, s0
  add r0.yzw, r6.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r6.xyzw, r0.yzwy, t9.xyzw, s0
  mov r5.w, l(1.000000)
  dp4 r7.x, r7.xyzw, r5.xyzw
  dp4 r7.y, r8.xyzw, r5.xyzw
  dp4 r7.z, r6.xyzw, r5.xyzw
else 
  mov r5.w, l(1.000000)
  dp4 r7.x, cb2[38].xyzw, r5.xyzw
  dp4 r7.y, cb2[39].xyzw, r5.xyzw
  dp4 r7.z, cb2[40].xyzw, r5.xyzw
endif 
add r0.yzw, r7.xxyz, v9.xxyz
mad r1.xyz, r1.xyzx, r0.xxxx, cb2[0].xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
dp3 r0.x, r5.xyzx, cb2[0].xyzx
max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r1.x, r5.xyzx, r1.xyzx
max r1.x, r1.x, l(0.000000)
mul r1.y, cb0[25].x, l(128.000000)
log r1.x, r1.x
mul r1.x, r1.x, r1.y
exp r1.x, r1.x
mul r1.x, r1.x, cb0[23].w
mul r1.yzw, r3.xxyz, r4.xxyz
mul r4.xyz, r4.xyzx, cb0[23].xyzx
mul r4.xyz, r1.xxxx, r4.xyzx
mad r1.xyz, r1.yzwy, r0.xxxx, r4.xyzx
mad r0.xyz, r3.xyzx, r0.yzwy, r1.xyzx
add r0.xyz, r3.xyzx, r0.xyzx
ne r1.x, cb0[0].x, l(0.000000)
if_nz r1.x
  dp3 r1.x, v10.xyzx, v10.xyzx
  sqrt r0.w, r1.x
  div r1.xyz, v10.xyzx, r0.wwww
  mul r3.xyz, r1.xyzx, cb0[18].wwww
  mul r4.xyz, r3.yyyy, cb0[8].xyzx
  mad r3.xyw, cb0[7].xyxz, r3.xxxx, r4.xyxz
  mad r3.xyz, cb0[9].xyzx, r3.zzzz, r3.xywx
  add_sat r3.xyz, r3.xyzx, cb0[10].xyzx
  div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[15].x
  mad r1.w, r3.y, cb0[15].x, l(-0.500000)
  frc r3.y, r1.w
  add r1.w, r1.w, -r3.y
  add r1.w, r1.w, r3.z
  mul r3.w, r4.y, r1.w
  mov r4.x, l(0)
  add r4.xy, r3.xwxx, r4.xyxx
  sample_l r5.xyzw, r3.xwxx, t6.xyzw, s1, l(0.000000)
  sample_l r6.xyzw, r4.xyxx, t6.xyzw, s1, l(0.000000)
  add r6.xyzw, -r5.xyzw, r6.xyzw
  mad r5.xyzw, r3.yyyy, r6.wxyz, r5.wxyz
  dp3 r1.w, r1.xyzx, cb0[6].xyzx
  lt r3.z, l(0.000000), cb0[6].w
  if_nz r3.z
    lt r3.z, r1.w, l(-0.010000)
    not r4.z, r3.z
    div r4.w, -cb0[6].w, r1.w
    add r4.w, r4.w, cb0[0].y
    mul r6.x, -r0.w, cb0[17].z
    mul r6.x, r6.x, l(1.442695)
    exp r6.x, r6.x
    add r6.yzw, r0.xxyz, -cb0[18].xxyz
    mad r6.xyz, r6.xxxx, r6.yzwy, cb0[18].xyzx
    movc r5.x, r3.z, r4.w, cb0[0].y
    lt r4.w, r0.w, r5.x
    movc r3.z, r3.z, r4.w, l(-1)
    or r3.z, r4.z, r3.z
    mov r4.z, r2.w
    mov r7.xyz, r0.xyzx
    mov r7.w, r0.w
    mov r0.xyz, r6.xyzx
  else 
    div r4.w, -cb0[6].w, r1.w
    lt r6.w, l(0.000000), r4.w
    add r8.x, r0.w, -r4.w
    max r8.x, r8.x, l(0.000000)
    mul r8.x, -r8.x, cb0[17].z
    mul r8.x, r8.x, l(1.442695)
    exp r8.x, r8.x
    add r8.yzw, r0.xxyz, -cb0[18].xxyz
    mad r8.xyz, r8.xxxx, r8.yzwy, cb0[18].xyzx
    min r8.w, r0.w, r4.w
    movc r7.xyzw, r6.wwww, r8.xyzw, r0.xyzw
    mov r3.z, l(0)
  endif 
  if_z r3.z
    lt r0.w, r5.x, r7.w
    if_nz r0.w
      sample_l r6.xyzw, r3.xwxx, t7.xyzw, s2, l(0.000000)
      sample_l r8.xyzw, r4.xyxx, t7.xyzw, s2, l(0.000000)
      add r8.xyzw, -r6.xyzw, r8.xyzw
      mad r6.xyzw, r3.yyyy, r8.xyzw, r6.xyzw
      sample_l r8.xyzw, r3.xwxx, t8.xyzw, s3, l(0.000000)
      sample_l r9.xyzw, r4.xyxx, t8.xyzw, s3, l(0.000000)
      add r3.xzw, -r8.xxyz, r9.xxyz
      mad r3.xyz, r3.yyyy, r3.xzwx, r8.xyzx
      mul r4.xyw, r6.xyxz, cb0[15].yyyy
      mul r6.xyz, r5.yzwy, cb0[15].yyyy
      add r0.w, -r5.x, r7.w
      mul r8.xyz, r1.xyzx, r5.xxxx
      dp3 r1.x, r1.xyzx, -cb0[1].xyzx
      mad r1.x, -cb0[16].z, r1.x, cb0[16].y
      log r1.x, r1.x
      mul r1.x, r1.x, l(-1.500000)
      exp r1.x, r1.x
      mul r1.x, r1.x, cb0[16].x
      mul r1.xyz, r1.xxxx, r4.xywx
      dp3 r3.w, cb0[1].xyzx, cb0[6].xyzx
      max r3.w, r3.w, l(0.000100)
      mad r4.xyw, cb0[3].xyxz, cb0[3].wwww, cb0[4].xyxz
      mul r4.xyw, r6.wwww, r4.xyxw
      mul r9.xyz, r6.xyzx, cb0[15].zzzz
      mul r10.xyz, r1.wwww, r9.xyzx
      div r10.xyz, r10.xyzx, r3.wwww
      mad r5.xyz, -r5.yzwy, cb0[15].yyyy, r10.xyzx
      dp3 r1.w, r8.xyzx, cb0[6].xyzx
      add r1.w, r1.w, cb0[6].w
      mul r8.xyz, r1.wwww, r9.xyzx
      div r8.xyz, r8.xyzx, r3.wwww
      mad r9.xyz, r0.wwww, r5.xyzx, r8.xyzx
      mul r9.xyz, r9.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r9.xyz, r9.xyzx
      mul r8.xyz, r8.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r8.xyz, r8.xyzx
      add r8.xyz, -r8.xyzx, r9.xyzx
      div r5.xyz, r8.xyzx, r5.xyzx
      mul r1.xyz, r1.xyzx, r4.xywx
      mul r1.xyz, r5.xyzx, r1.xyzx
      max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      mul r4.xyw, r6.xyxz, -r0.wwww
      mul r4.xyw, r4.xyxw, l(1.442695, 1.442695, 0.000000, 1.442695)
      exp r4.xyw, r4.xyxw
      mul r5.xyz, r0.wwww, -r6.xyzx
      mul r5.xyz, r5.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r5.xyz, r5.xyzx
      add r5.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      div r5.xyz, r5.xyzx, r6.xyzx
      mul r3.xyz, r3.xyzx, r5.xyzx
      max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      mad_sat r0.w, -r0.w, l(0.080000), l(10.000000)
      mul r2.w, r0.w, r2.w
      add r1.xyz, r1.xyzx, r3.xyzx
      mad r0.xyz, r7.xyzx, r4.xywx, r1.xyzx
    else 
      mov r0.xyz, r7.xyzx
    endif 
  else 
    mov r2.w, r4.z
  endif 
endif 
mul r0.w, v10.z, cb0[19].y
mul r0.w, r0.w, l(1.442695)
exp r0.w, r0.w
max r0.w, r0.w, l(0.010000)
min r0.w, r0.w, l(1.000000)
mad r0.w, r2.w, r0.w, l(-1.000000)
mad r0.w, cb0[19].x, r0.w, l(1.000000)
mul r0.xyz, r0.xyzx, r2.wwww
mul r2.xyz, r0.wwww, r0.xyzx
mul o2.x, r0.w, r2.w
mov o0.xyzw, l(0,0,0,0)
mov o1.xyzw, r2.xyzw
mov o2.yzw, l(0,0,0,0)
ret 
// Approximately 0 instruction slots used