// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 4ecbd92ac51b8423-vs.txt
// 3DMigoto: 4ecbd92ac51b8423 |    Unity headers extracted from UWE_Overlays_HeatResist
//    Shader "UWE/Overlays/HeatResist" {
//      Fallback "Specular"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 3/3 {
//          Name "META"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="META" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from UWE_Overlays_HeatResist:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201609010 50 0 0
//   undeciphered1a: 4
//   undeciphered2: 1 0 6 0 0 0
//   undeciphered3: 187 6 0 0 7 8 1 2 3 4 4 5 5 6
//   ConstBuffer "$Globals" 464
//   Float 116 [_FresnelFade]
//   Vector 448 [_MainTex_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityPerDraw" 160
//   Vector 144 [unity_WorldTransformParams]
//   Matrix 0 [unity_ObjectToWorld]
//   Matrix 64 [unity_WorldToObject]
//   ConstBuffer "UnityPerFrame" 384
//   Matrix 272 [unity_MatrixVP]
//   ConstBuffer "UnityLightmaps" 32
//   Vector 0 [unity_LightmapST]
//   Vector 16 [unity_DynamicLightmapST]
//   ConstBuffer "UnityMetaPass" 48
//   VectorBool 0 [unity_MetaVertexControl] 4
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityPerFrame" 3
//   BindCB "UnityLightmaps" 4
//   BindCB "UnityMetaPass" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:55:32 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// TEXCOORD                 2   xyzw        5     NONE   float   xy  
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[29], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[10], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xy
dcl_input v5.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_temps 6
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 4ecbd92ac51b8423-vs.txt

mul r4.w, -r4.x, r4.y
mad r5.xyz, -r4.wwww, cb10[0].xyzw, cb1[4].xyzw

lt r0.x, l(0.000000), v0.z
and r0.z, r0.x, l(0x38d1b717)
mad r0.xy, v4.xyxx, cb4[0].xyxx, cb4[0].zwzz
movc r0.xyz, cb5[0].xxxx, r0.xyzx, v0.xyzx
lt r0.w, l(0.000000), r0.z
and r1.z, r0.w, l(0x38d1b717)
mad r1.xy, v5.xyxx, cb4[1].xyxx, cb4[1].zwzz
movc r0.xyz, cb5[0].yyyy, r1.xyzx, r0.xyzx
mul r1.xyzw, r0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
add r0.xyzw, r0.xyzw, cb2[3].xyzw
mul r1.xyzw, r0.yyyy, cb3[18].xyzw
mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
mad o1.xy, v3.xyxx, cb0[28].xyxx, cb0[28].zwzz
dp3 r0.y, v2.xyzx, cb2[4].xyzx
dp3 r0.z, v2.xyzx, cb2[5].xyzx
dp3 r0.x, v2.xyzx, cb2[6].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyz, v1.yyyy, cb2[1].yzxy
mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r2.xyz, r0.xyzx, r1.xyzx
mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
mul r0.w, v1.w, cb2[9].w
mul r2.xyz, r0.wwww, r2.xyzx
mov o2.y, r2.x
mul r3.xyz, v0.yyyy, cb2[1].xyzx
mad r3.xyz, cb2[0].xyzx, v0.xxxx, r3.xyzx
mad r3.xyz, cb2[2].xyzx, v0.zzzz, r3.xyzx
mad r3.xyz, cb2[3].xyzx, v0.wwww, r3.xyzx
mov o2.w, r3.x
mov o2.x, r1.z
mov o2.z, r0.y
mov o3.x, r1.x
mov o4.x, r1.y
mov o3.z, r0.z
mov o4.z, r0.x
mov o3.w, r3.y
mov o4.w, r3.z
mov o3.y, r2.y
mov o4.y, r2.z
mov o5.xyz, l(0,0,0,0)
mul r0.xyz, r5.yyyy, cb2[5].xyzx
mad r0.xyz, cb2[4].xyzx, r5.xxxx, r0.xyzx
mad r0.xyz, cb2[6].xyzx, r5.zzzz, r0.xyzx
add r0.xyz, r0.xyzx, cb2[7].xyzx
add r0.xyz, r0.xyzx, -v0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v2.xyzx
dp3 r0.x, r0.xyzx, r1.xyzx
mul r0.x, |r0.x|, |r0.x|
mul r0.x, r0.x, r0.x
mul_sat o6.w, r0.x, cb0[7].y
mov o6.xyz, l(0,0,0,0)
ret 
// Approximately 0 instruction slots used