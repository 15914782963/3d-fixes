// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 49227efc06789024-ps.txt
// 3DMigoto: 49227efc06789024 |    Unity headers extracted from MarmosetUBER
//    Shader "MarmosetUBER" {
//      Fallback "VertexLit"
//      SubShader 1/1 {
//        Tags { "RenderType"="Opaque" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "RenderType"="Opaque" }
//          ZWrite [_ZWrite]
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from MarmosetUBER:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 257 10 11
//   undeciphered1a: 14
//   Keywords { "DIRECTIONAL" "MARMO_SPECMAP" "UWE_LIGHTMAP" "MARMO_EMISSION" "UWE_3COLOR" }
//   undeciphered2: 1 11 4 11 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1040
//   Float 0 [_UweFogEnabled]
//   Float 4 [_UweAboveWaterFogStartDistance]
//   Vector 16 [_UweFogVsLightDirection] 3
//   Vector 48 [_UweFogLightColor]
//   Vector 64 [_UweTopAmbientColor] 3
//   Vector 96 [_UweVsWaterPlane]
//   Float 240 [_UweVolumeTextureSlices]
//   Float 244 [_UweExtinctionAndScatteringScale]
//   Float 248 [_UweSunAttenuationFactor]
//   Vector 256 [_UweFogMiePhaseConst] 3
//   Float 280 [_SkyFogDensity]
//   Vector 288 [_SkyFogColor] 3
//   Float 300 [settingsSampleDistance]
//   Vector 352 [_LightColor0]
//   Vector 368 [_SpecColor]
//   Float 384 [_EnableSimpleGlass]
//   Vector 400 [_Color]
//   Vector 416 [_MainTex_ST]
//   Float 436 [_UwePowerLoss]
//   Float 440 [_UweLocalLightScalar]
//   Float 444 [_IBLreductionAtNight]
//   Vector 448 [_BumpMap_ST]
//   Vector 464 [_Color2]
//   Vector 480 [_Color3]
//   Vector 496 [_Lightmap_ST]
//   Float 512 [_LightmapStrength]
//   Float 516 [_GlowStrengthNight]
//   Float 520 [_EmissionLMNight]
//   Float 536 [_Gray]
//   Float 540 [_Brightness]
//   Float 544 [_SpecInt]
//   Float 548 [_Shininess]
//   Float 552 [_Fresnel]
//   Vector 560 [_SpecColor2]
//   Vector 576 [_SpecColor3]
//   Vector 592 [_SpecTex_ST]
//   Vector 608 [_Illum_ST]
//   Vector 624 [_GlowColor]
//   Float 640 [_GlowStrength]
//   Float 644 [_EmissionLM]
//   Float 652 [_AffectedByDayNightCycle]
//   Vector 672 [_ExposureIBL]
//   Vector 688 [_ExposureLM] 2
//   Vector 696 [_UniformOcclusion] 2
//   Vector 880 [_SH0] 3
//   Vector 896 [_SH1] 3
//   Vector 912 [_SH2] 3
//   Vector 928 [_SH3] 3
//   Vector 944 [_SH4] 3
//   Vector 960 [_SH5] 3
//   Vector 976 [_SH6] 3
//   Vector 992 [_SH7] 3
//   Vector 1008 [_SH8] 3
//   Matrix 112 [_UweCameraToVolumeMatrix]
//   Matrix 704 [_SkyMatrix]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MultiColorMask] 2D 6
//   SetTexture 1 [_MainTex] 2D 4
//   SetTexture 2 [_Lightmap] 2D 7
//   SetTexture 3 [_BumpMap] 2D 5
//   SetTexture 4 [_SpecTex] 2D 8
//   SetTexture 5 [_Illum] 2D 9
//   SetTexture 6 [_SpecCubeIBL] CUBE 10
//   SetTexture 7 [_UweExtinctionTexture] 2D 1
//   SetTexture 8 [_UweScatteringTexture] 2D 2
//   SetTexture 9 [_UweEmissiveTexture] 2D 3
//   SetTexture 10 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:55:21 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyz         8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[64], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 49227efc06789024-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.y, v1.w
mov r0.z, v2.w
mov r0.w, v3.w
add r1.xyz, -r0.yzwy, r15.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
dp3 r1.w, v6.xyzx, v6.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, v6.xyzx
add r3.xy, -cb0[27].zyzz, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r1.w, r3.x, cb0[40].w
add r3.xz, cb0[32].yyzy, -cb0[40].xxyx
mad r3.xz, r1.wwww, r3.xxzx, cb0[40].xxyx
mul r4.xy, cb0[42].xyxx, cb0[43].zwzz
mad r4.zw, v4.xxxy, cb0[26].xxxy, cb0[26].zzzw
sample r5.xyzw, r4.zwzz, t0.xyzw, s6
add r6.xyzw, -cb0[25].xyzw, cb0[29].xyzw
mad r6.xyzw, r5.yyyy, r6.xyzw, cb0[25].xyzw
add r7.xyzw, -r6.xyzw, cb0[30].xyzw
mad r6.xyzw, r5.zzzz, r7.xyzw, r6.xyzw
sample r7.xyzw, r4.zwzz, t1.xyzw, s4
mul r6.xyz, r6.xyzx, r7.xyzx
mul r6.xyz, r6.xyzx, cb0[42].wwww
mad r2.w, r7.w, r6.w, l(-1.000000)
mad r2.w, cb0[24].x, r2.w, l(1.000000)
mul r6.xyw, r2.wwww, r6.xyxz
max r1.w, r1.w, l(0.000000)
min r1.w, r1.w, cb0[27].w
mad r4.xy, r1.wwww, -r4.xyxx, r4.xyxx
mad r4.zw, v4.zzzw, cb0[31].xxxy, cb0[31].zzzw
sample r7.xyzw, r4.zwzz, t2.xyzw, s7
mul r4.zw, r7.xxxy, cb0[32].xxxx
mad r5.xw, -r7.xxxy, cb0[32].xxxx, l(1.000000, 0.000000, 0.000000, 1.000000)
mad r4.zw, cb0[43].xxxy, r5.xxxw, r4.zzzw
mul r4.xy, r4.zwzz, r4.xyxx
mad r4.zw, v4.xxxy, cb0[28].xxxy, cb0[28].zzzw
sample r7.xyzw, r4.zwzz, t3.xyzw, s5
mad r7.xy, r7.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r7.xyxx, r7.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r7.z, r1.w
dp3 r1.w, r7.xyzx, r7.xyzx
rsq r1.w, r1.w
mul r7.xyz, r1.wwww, r7.xyzx
dp3 r8.x, v1.xyzx, r7.xyzx
dp3 r8.y, v2.xyzx, r7.xyzx
dp3 r8.z, v3.xyzx, r7.xyzx
mad r4.zw, v4.xxxy, cb0[37].xxxy, cb0[37].zzzw
sample r9.xyzw, r4.zwzz, t4.xyzw, s8
dp3 r1.w, r7.xyzx, r2.xyzx
mad_sat r1.w, |r1.w|, -cb0[34].z, l(1.250000)
mul r2.x, r1.w, r1.w
mul r2.x, r2.x, r2.x
mul r1.w, r1.w, r2.x
mul r1.w, r1.w, cb0[34].x
mul r2.xyz, r1.wwww, r9.xyzx
add r7.xyz, -cb0[23].xyzx, cb0[35].xyzx
mad r5.xyw, r5.yyyy, r7.xyxz, cb0[23].xyxz
add r7.xyz, -r5.xywx, cb0[36].xyzx
mad r5.xyz, r5.zzzz, r7.xyzx, r5.xywx
mul r2.xyz, r2.xyzx, r5.xyzx
mul r2.xyz, r2.xyzx, cb0[42].wwww
add r1.w, -r9.w, l(1.000000)
mad r4.zw, -r1.wwww, r1.wwww, l(0.000000, 0.000000, 1.000000, 8.000000)
mad r1.w, -cb0[34].y, r4.z, r4.w
add r3.w, -r1.w, l(8.000000)
exp r3.w, r3.w
mad r4.z, r3.w, l(0.159154937), l(0.318309873)
mul r5.xyz, r2.xyzx, r4.zzzz
mad r4.zw, v4.xxxy, cb0[38].xxxy, cb0[38].zzzw
sample r7.xyzw, r4.zwzz, t5.xyzw, s9
mul r7.xyzw, r2.wwww, r7.xyzw
mul r7.xyz, r7.xyzx, cb0[39].xyzx
mul r7.xyz, r3.xxxx, r7.xyzx
mul r3.x, r3.z, r7.w
mul r9.xyz, r3.xxxx, r6.xywx
mad r7.xyz, r7.xyzx, cb0[42].wwww, r9.xyzx
add r9.xyz, -v5.xyzx, r15.xyzx
dp3 r3.x, r9.xyzx, r9.xyzx
rsq r3.x, r3.x
mul r9.xyz, r3.xxxx, r9.xyzx
dp3 r3.x, -r9.xyzx, r8.xyzx
add r3.x, r3.x, r3.x
mad r9.xyz, r8.xyzx, -r3.xxxx, -r9.xyzx
mov r10.x, cb0[44].x
mov r10.y, cb0[45].x
mov r10.z, cb0[46].x
mov r11.x, cb0[44].y
mov r11.y, cb0[45].y
mov r11.z, cb0[46].y
mov r12.x, cb0[44].z
mov r12.y, cb0[45].z
mov r12.z, cb0[46].z
mul r13.xyz, r9.zzzz, r12.xyzx
mad r9.yzw, r11.xxyz, r9.yyyy, r13.xxyz
mad r9.xyz, r10.xyzx, r9.xxxx, r9.yzwy
sample_l r9.xyzw, r9.xyzx, t6.xyzw, s10, r1.w
mul r2.xyz, r2.xyzx, r9.xyzx
mul r2.xyz, r4.yyyy, r2.xyzx
mad r2.xyz, r7.xyzx, r3.yyyy, r2.xyzx
ge r1.w, l(0.000000), cb0[40].w
mul r3.xyz, r8.zzzz, r12.xyzx
mad r3.xyz, r11.xyzx, r8.yyyy, r3.xyzx
mad r3.xyz, r10.xyzx, r8.xxxx, r3.xyzx
dp3 r4.y, r3.xyzx, r3.xyzx
max r4.y, r4.y, l(0.001000)
rsq r4.y, r4.y
mul r3.xyz, r3.xyzx, r4.yyyy
mad r4.yzw, cb0[56].xxyz, r3.yyyy, cb0[55].xxyz
mad r4.yzw, cb0[57].xxyz, r3.zzzz, r4.yyzw
mad r4.yzw, cb0[58].xxyz, r3.xxxx, r4.yyzw
mul r7.xyz, r3.xzxx, r3.yyzy
mad r4.yzw, cb0[59].xxyz, r7.xxxx, r4.yyzw
mad r4.yzw, cb0[60].xxyz, r7.yyyy, r4.yyzw
mad r4.yzw, cb0[62].xxyz, r7.zzzz, r4.yyzw
mul r3.yz, r3.yyzy, r3.yyzy
mad r3.z, r3.z, l(3.000000), l(-1.000000)
mad r4.yzw, cb0[61].xxyz, r3.zzzz, r4.yyzw
mad r3.x, r3.x, r3.x, -r3.y
mad r3.xyz, cb0[63].xyzx, r3.xxxx, r4.yzwy
mul r3.xyz, r4.xxxx, |r3.xyzx|
and r3.xyz, r1.wwww, r3.xyzx
mad r2.xyz, r3.xyzx, r6.xywx, r2.xyzx
add r1.w, r6.y, r6.x
mad r1.w, r6.z, r2.w, r1.w
mad r3.xyz, r1.wwww, l(0.333333343, 0.333333343, 0.333333343, 0.000000), -r6.xywx
mad r3.xyz, cb0[33].zzzz, r3.xyzx, r6.xywx
add r3.xyz, r3.xyzx, cb0[33].wwww
eq r1.w, cb3[0].x, l(1.000000)
if_nz r1.w
  eq r2.w, cb3[0].y, l(1.000000)
  mul r4.xyz, v2.wwww, cb3[2].xyzx
  mad r4.xyz, cb3[1].xyzx, v1.wwww, r4.xyzx
  mad r4.xyz, cb3[3].xyzx, v3.wwww, r4.xyzx
  add r4.xyz, r4.xyzx, cb3[4].xyzx
  movc r4.xyz, r2.wwww, r4.xyzx, r0.yzwy
  add r4.xyz, r4.xyzx, -cb3[6].xyzx
  mul r4.yzw, r4.xxyz, cb3[5].xxyz
  mad r2.w, r4.y, l(0.250000), l(0.750000)
  mad r4.y, cb3[0].z, l(0.500000), l(0.750000)
  max r4.x, r2.w, r4.y
  sample r4.xyzw, r4.xzwx, t10.xyzw, s0
else 
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r2.w, r4.xyzw, cb2[45].xyzw
mul r4.xyz, r2.wwww, cb0[22].xyzx
if_nz r1.w
  eq r1.w, cb3[0].y, l(1.000000)
  mul r6.xyz, v2.wwww, cb3[2].xyzx
  mad r6.xyz, cb3[1].xyzx, v1.wwww, r6.xyzx
  mad r6.xyz, cb3[3].xyzx, v3.wwww, r6.xyzx
  add r6.xyz, r6.xyzx, cb3[4].xyzx
  movc r0.yzw, r1.wwww, r6.xxyz, r0.yyzw
  add r0.yzw, r0.yyzw, -cb3[6].xxyz
  mul r6.yzw, r0.yyzw, cb3[5].xxyz
  mul r0.y, r6.y, l(0.250000)
  mul r0.z, cb3[0].z, l(0.500000)
  mad r0.w, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.z, r0.y
  min r6.x, r0.w, r0.y
  sample r7.xyzw, r6.xzwx, t10.xyzw, s0
  add r0.yzw, r6.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r9.xyzw, r0.yzwy, t10.xyzw, s0
  add r0.yzw, r6.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r6.xyzw, r0.yzwy, t10.xyzw, s0
  mov r8.w, l(1.000000)
  dp4 r7.x, r7.xyzw, r8.xyzw
  dp4 r7.y, r9.xyzw, r8.xyzw
  dp4 r7.z, r6.xyzw, r8.xyzw
else 
  mov r8.w, l(1.000000)
  dp4 r7.x, cb2[38].xyzw, r8.xyzw
  dp4 r7.y, cb2[39].xyzw, r8.xyzw
  dp4 r7.z, cb2[40].xyzw, r8.xyzw
endif 
max r0.yzw, r7.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
rsq r1.w, r1.w
mul r6.xyz, r1.wwww, cb2[0].xyzx
dp3_sat r1.w, r8.xyzx, r6.xyzx
add r2.w, r1.w, r1.w
mul r7.xyz, r3.xyzx, r2.wwww
mad r1.xyz, r1.xyzx, r0.xxxx, r6.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
dp3_sat r0.x, r8.xyzx, r1.xyzx
add r1.x, r3.w, r3.w
log r0.x, r0.x
mul r0.x, r0.x, r1.x
exp r0.x, r0.x
mul r1.x, r1.w, l(10.000000)
min r1.x, r1.x, l(1.000000)
mul r0.x, r0.x, r1.x
mul r1.xyz, r4.xyzx, r0.xxxx
mul r1.xyz, r1.xyzx, r5.xyzx
mul r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mad r1.xyz, r7.xyzx, r4.xyzx, r1.xyzx
mad r0.xyz, r3.xyzx, r0.yzwy, r1.xyzx
add r0.xyz, r2.xyzx, r0.xyzx
ne r1.x, cb0[0].x, l(0.000000)
if_nz r1.x
  mul r1.x, cb0[18].w, l(0.577350259)
  mul r1.yzw, r1.xxxx, cb0[8].xxyz
  mad r1.yzw, cb0[7].xxyz, r1.xxxx, r1.yyzw
  mad r1.xyz, cb0[9].xyzx, r1.xxxx, r1.yzwy
  add_sat r1.xyz, r1.xyzx, cb0[10].xyzx
  div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[15].x
  mad r1.y, r1.y, cb0[15].x, l(-0.500000)
  frc r2.z, r1.y
  add r1.y, r1.y, -r2.z
  add r1.y, r1.y, r1.z
  mul r1.w, r2.y, r1.y
  mov r2.x, l(0)
  add r1.yz, r1.xxwx, r2.xxyx
  sample_l r3.xyzw, r1.xwxx, t7.xyzw, s1, l(0.000000)
  sample_l r4.xyzw, r1.yzyy, t7.xyzw, s1, l(0.000000)
  add r4.xyzw, -r3.xyzw, r4.xyzw
  mad r3.xyzw, r2.zzzz, r4.wxyz, r3.wxyz
  dp3 r2.x, l(0.577350259, 0.577350259, 0.577350259, 0.000000), cb0[6].xyzx
  lt r2.y, l(0.000000), cb0[6].w
  if_nz r2.y
    lt r2.y, r2.x, l(-0.010000)
    not r2.w, r2.y
    div r4.x, -cb0[6].w, r2.x
    add r4.x, r4.x, cb0[0].y
    mul r4.y, cb0[17].z, l(-2.498821)
    exp r4.y, r4.y
    add r5.xyz, r0.xyzx, -cb0[18].xyzx
    mad o0.xyz, r4.yyyy, r5.xyzx, cb0[18].xyzx
    movc r3.x, r2.y, r4.x, cb0[0].y
    lt r4.x, l(1.73205078), r3.x
    movc r2.y, r2.y, r4.x, l(-1)
    or r2.y, r2.w, r2.y
    mov o0.w, l(1.000000)
    mov r0.w, l(1.73205078)
  else 
    div r2.w, -cb0[6].w, r2.x
    lt r4.x, l(0.000000), r2.w
    add r4.y, -r2.w, l(1.73205078)
    max r4.y, r4.y, l(0.000000)
    mul r4.y, -r4.y, cb0[17].z
    mul r4.y, r4.y, l(1.442695)
    exp r4.y, r4.y
    add r5.xyz, r0.xyzx, -cb0[18].xyzx
    mad r5.xyz, r4.yyyy, r5.xyzx, cb0[18].xyzx
    min r5.w, r2.w, l(1.73205078)
    mov r0.w, l(1.73205078)
    movc r0.xyzw, r4.xxxx, r5.xyzw, r0.xyzw
    mov r2.y, l(0)
  endif 
  if_z r2.y
    lt r2.y, r3.x, r0.w
    if_nz r2.y
      sample_l r4.xyzw, r1.xwxx, t8.xyzw, s2, l(0.000000)
      sample_l r5.xyzw, r1.yzyy, t8.xyzw, s2, l(0.000000)
      add r5.xyzw, -r4.xyzw, r5.xyzw
      mad r4.xyzw, r2.zzzz, r5.xyzw, r4.xyzw
      sample_l r5.xyzw, r1.xwxx, t9.xyzw, s3, l(0.000000)
      sample_l r1.xyzw, r1.yzyy, t9.xyzw, s3, l(0.000000)
      add r1.xyz, -r5.xyzx, r1.xyzx
      mad r1.xyz, r2.zzzz, r1.xyzx, r5.xyzx
      mul r2.yzw, r4.xxyz, cb0[15].yyyy
      mul r4.xyz, r3.yzwy, cb0[15].yyyy
      add r0.w, -r3.x, r0.w
      mul r1.w, r3.x, l(0.577350259)
      dp3 r3.x, l(0.577350259, 0.577350259, 0.577350259, 0.000000), -cb0[1].xyzx
      mad r3.x, -cb0[16].z, r3.x, cb0[16].y
      log r3.x, r3.x
      mul r3.x, r3.x, l(-1.500000)
      exp r3.x, r3.x
      mul r3.x, r3.x, cb0[16].x
      mul r2.yzw, r2.yyzw, r3.xxxx
      dp3 r3.x, cb0[1].xyzx, cb0[6].xyzx
      max r3.x, r3.x, l(0.000100)
      mad r5.xyz, cb0[3].xyzx, cb0[3].wwww, cb0[4].xyzx
      mul r5.xyz, r4.wwww, r5.xyzx
      mul r6.xyz, r4.xyzx, cb0[15].zzzz
      mul r7.xyz, r2.xxxx, r6.xyzx
      div r7.xyz, r7.xyzx, r3.xxxx
      mad r3.yzw, -r3.yyzw, cb0[15].yyyy, r7.xxyz
      dp3 r1.w, r1.wwww, cb0[6].xyzx
      add r1.w, r1.w, cb0[6].w
      mul r6.xyz, r1.wwww, r6.xyzx
      div r6.xyz, r6.xyzx, r3.xxxx
      mad r7.xyz, r0.wwww, r3.yzwy, r6.xyzx
      mul r7.xyz, r7.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r7.xyz, r7.xyzx
      mul r6.xyz, r6.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r6.xyz, r6.xyzx
      add r6.xyz, -r6.xyzx, r7.xyzx
      div r3.xyz, r6.xyzx, r3.yzwy
      mul r2.xyz, r2.yzwy, r5.xyzx
      mul r2.xyz, r3.xyzx, r2.xyzx
      max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      mul r3.xyz, r4.xyzx, -r0.wwww
      mul r3.xyz, r3.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r3.xyz, r3.xyzx
      mul r5.xyz, r0.wwww, -r4.xyzx
      mul r5.xyz, r5.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r5.xyz, r5.xyzx
      add r5.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      div r4.xyz, r5.xyzx, r4.xyzx
      mul r1.xyz, r1.xyzx, r4.xyzx
      max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      mad_sat r0.w, -r0.w, l(0.080000), l(10.000000)
      mov r1.w, l(1.000000)
      mul r0.w, r0.w, r1.w
      add r1.xyz, r1.xyzx, r2.xyzx
      mad o0.xyz, r0.xyzx, r3.xyzx, r1.xyzx
      mov o0.w, r0.w
    else 
      mov o0.xyz, r0.xyzx
      mov o0.w, l(1.000000)
    endif 
  endif 
else 
  mov o0.xyz, r0.xyzx
  mov o0.w, l(1.000000)
endif 
ret 
// Approximately 0 instruction slots used