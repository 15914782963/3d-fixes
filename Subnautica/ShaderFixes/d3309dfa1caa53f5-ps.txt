// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d3309dfa1caa53f5-ps.txt
// 3DMigoto: d3309dfa1caa53f5 |    Unity headers extracted from UWE_Overlays_LightSensitive
//    Shader "UWE/Overlays/LightSensitive" {
//      Fallback "Specular"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from UWE_Overlays_LightSensitive:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 138 6 9
//   undeciphered1a: 9
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 9 4 9 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 496
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Vector 64 [_Color]
//   Vector 80 [_NoiseSpeed]
//   Vector 96 [_DeformSpeed]
//   Float 112 [_DeformStrength]
//   Float 116 [_AlphaFade]
//   Float 120 [_MainScale]
//   Float 124 [_UweFogEnabled]
//   Float 128 [_UweAboveWaterFogStartDistance]
//   Vector 132 [_UweFogVsLightDirection] 3
//   Vector 160 [_UweFogLightColor]
//   Vector 176 [_UweTopAmbientColor] 3
//   Vector 208 [_UweVsWaterPlane]
//   Float 352 [_UweVolumeTextureSlices]
//   Float 356 [_UweExtinctionAndScatteringScale]
//   Float 360 [_UweSunAttenuationFactor]
//   Vector 368 [_UweFogMiePhaseConst] 3
//   Float 392 [_SkyFogDensity]
//   Vector 400 [_SkyFogColor] 3
//   Float 412 [settingsSampleDistance]
//   Matrix 224 [_UweCameraToVolumeMatrix]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_DeformMap] 2D 5
//   SetTexture 1 [_NoiseMap] 2D 4
//   SetTexture 2 [_MainTex] 2D 1
//   SetTexture 3 [_MaskTex] 2D 3
//   SetTexture 4 [_BumpMap] 2D 2
//   SetTexture 5 [_UweExtinctionTexture] 2D 6
//   SetTexture 6 [_UweScatteringTexture] 2D 7
//   SetTexture 7 [_UweEmissiveTexture] 2D 8
//   SetTexture 8 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:59:43 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xy          3     NONE   float   xy  
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyz         8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[26], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d3309dfa1caa53f5-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.y, v4.w
mov r0.z, v5.w
mov r0.w, v6.w
add r1.xyz, -r0.yzwy, r10.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r2.xyzw, v2.zwxy, cb0[7].zzzz
mad r2.xy, cb0[6].xyxx, cb1[0].yyyy, r2.xyxx
sample r3.xyzw, r2.xyxx, t0.xyzw, s5
mad r2.xy, cb0[5].xyxx, cb1[0].yyyy, r2.zwzz
mad r2.xy, r3.xyxx, cb0[7].xxxx, r2.xyxx
sample r2.xyzw, r2.xyxx, t1.xyzw, s4
mul r3.xyzw, v1.xyzw, cb0[7].zzzz
sample r4.xyzw, r3.xyxx, t2.xyzw, s1
sample r5.xyzw, v3.xyxx, t3.xyzw, s3
mul r1.w, r4.w, cb0[4].w
mul r1.w, r2.x, r1.w
mul r1.w, r1.w, cb0[7].y
mul o0.w, r5.x, r1.w
sample r3.xyzw, r3.zwzz, t4.xyzw, s2
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r3.xyxx, r3.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r3.z, r1.w
mul r1.w, r2.x, r5.x
mul r1.w, r1.w, l(10.000000)
eq r2.x, cb3[0].x, l(1.000000)
if_nz r2.x
  eq r2.x, cb3[0].y, l(1.000000)
  mul r2.yzw, v5.wwww, cb3[2].xxyz
  mad r2.yzw, cb3[1].xxyz, v4.wwww, r2.yyzw
  mad r2.yzw, cb3[3].xxyz, v6.wwww, r2.yyzw
  add r2.yzw, r2.yyzw, cb3[4].xxyz
  movc r0.yzw, r2.xxxx, r2.yyzw, r0.yyzw
  add r0.yzw, r0.yyzw, -cb3[6].xxyz
  mul r2.yzw, r0.yyzw, cb3[5].xxyz
  mad r0.y, r2.y, l(0.250000), l(0.750000)
  mad r0.z, cb3[0].z, l(0.500000), l(0.750000)
  max r2.x, r0.z, r0.y
  sample r2.xyzw, r2.xzwx, t8.xyzw, s0
else 
  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r0.y, r2.xyzw, cb2[45].xyzw
dp3 r2.x, v4.xyzx, r3.xyzx
dp3 r2.y, v5.xyzx, r3.xyzx
dp3 r2.z, v6.xyzx, r3.xyzx
mul r0.yzw, r0.yyyy, cb0[2].xxyz
mad r1.xyz, r1.xyzx, r0.xxxx, cb2[0].xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
dp3 r0.x, r2.xyzx, r1.xyzx
max r0.x, r0.x, l(0.000000)
log r0.x, r0.x
mul r0.x, r0.x, l(32.000000)
exp r0.x, r0.x
mul r0.x, r1.w, r0.x
mul r0.yzw, r0.yyzw, cb0[3].xxyz
mul r1.xyz, r0.xxxx, r0.yzwy
ne r2.x, cb0[7].w, l(0.000000)
if_nz r2.x
  dp3 r2.x, v7.xyzx, v7.xyzx
  sqrt r1.w, r2.x
  div r2.xyz, v7.xyzx, r1.wwww
  mul r3.xyz, r2.xyzx, cb0[25].wwww
  mul r4.xyz, r3.yyyy, cb0[15].xyzx
  mad r3.xyw, cb0[14].xyxz, r3.xxxx, r4.xyxz
  mad r3.xyz, cb0[16].xyzx, r3.zzzz, r3.xywx
  add_sat r3.xyz, r3.xyzx, cb0[17].xyzx
  div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[22].x
  mad r2.w, r3.y, cb0[22].x, l(-0.500000)
  frc r3.y, r2.w
  add r2.w, r2.w, -r3.y
  add r2.w, r2.w, r3.z
  mul r3.w, r4.y, r2.w
  mov r4.x, l(0)
  add r4.xy, r3.xwxx, r4.xyxx
  sample_l r5.xyzw, r3.xwxx, t5.xyzw, s6, l(0.000000)
  sample_l r6.xyzw, r4.xyxx, t5.xyzw, s6, l(0.000000)
  add r6.xyzw, -r5.xyzw, r6.xyzw
  mad r5.xyzw, r3.yyyy, r6.wxyz, r5.wxyz
  dp3 r2.w, r2.xyzx, cb0[13].xyzx
  lt r3.z, l(0.000000), cb0[13].w
  if_nz r3.z
    lt r3.z, r2.w, l(-0.010000)
    not r4.z, r3.z
    div r4.w, -cb0[13].w, r2.w
    add r4.w, r4.w, cb0[8].x
    mul r6.x, -r1.w, cb0[24].z
    mul r6.x, r6.x, l(1.442695)
    exp r6.x, r6.x
    mad r6.yzw, r0.yyzw, r0.xxxx, -cb0[25].xxyz
    mad o0.xyz, r6.xxxx, r6.yzwy, cb0[25].xyzx
    movc r5.x, r3.z, r4.w, cb0[8].x
    lt r4.w, r1.w, r5.x
    movc r3.z, r3.z, r4.w, l(-1)
    or r3.z, r4.z, r3.z
  else 
    div r4.z, -cb0[13].w, r2.w
    lt r4.w, l(0.000000), r4.z
    add r6.x, r1.w, -r4.z
    max r6.x, r6.x, l(0.000000)
    mul r6.x, -r6.x, cb0[24].z
    mul r6.x, r6.x, l(1.442695)
    exp r6.x, r6.x
    mad r0.xyz, r0.yzwy, r0.xxxx, -cb0[25].xyzx
    mad r0.xyz, r6.xxxx, r0.xyzx, cb0[25].xyzx
    min r0.w, r1.w, r4.z
    movc r1.xyzw, r4.wwww, r0.xyzw, r1.xyzw
    mov r3.z, l(0)
  endif 
  if_z r3.z
    lt r0.x, r5.x, r1.w
    if_nz r0.x
      sample_l r0.xyzw, r3.xwxx, t6.xyzw, s7, l(0.000000)
      sample_l r6.xyzw, r4.xyxx, t6.xyzw, s7, l(0.000000)
      add r6.xyzw, -r0.xyzw, r6.xyzw
      mad r0.xyzw, r3.yyyy, r6.xyzw, r0.xyzw
      sample_l r6.xyzw, r3.xwxx, t7.xyzw, s8, l(0.000000)
      sample_l r4.xyzw, r4.xyxx, t7.xyzw, s8, l(0.000000)
      add r3.xzw, -r6.xxyz, r4.xxyz
      mad r3.xyz, r3.yyyy, r3.xzwx, r6.xyzx
      mul r0.xyz, r0.xyzx, cb0[22].yyyy
      mul r4.xyz, r5.yzwy, cb0[22].yyyy
      add r1.w, -r5.x, r1.w
      mul r6.xyz, r2.xyzx, r5.xxxx
      dp3 r2.x, r2.xyzx, -cb0[8].yzwy
      mad r2.x, -cb0[23].z, r2.x, cb0[23].y
      log r2.x, r2.x
      mul r2.x, r2.x, l(-1.500000)
      exp r2.x, r2.x
      mul r2.x, r2.x, cb0[23].x
      mul r0.xyz, r0.xyzx, r2.xxxx
      dp3 r2.x, cb0[8].yzwy, cb0[13].xyzx
      max r2.x, r2.x, l(0.000100)
      mad r7.xyz, cb0[10].xyzx, cb0[10].wwww, cb0[11].xyzx
      mul r7.xyz, r0.wwww, r7.xyzx
      mul r8.xyz, r4.xyzx, cb0[22].zzzz
      mul r2.yzw, r2.wwww, r8.xxyz
      div r2.yzw, r2.yyzw, r2.xxxx
      mad r2.yzw, -r5.yyzw, cb0[22].yyyy, r2.yyzw
      dp3 r0.w, r6.xyzx, cb0[13].xyzx
      add r0.w, r0.w, cb0[13].w
      mul r5.xyz, r0.wwww, r8.xyzx
      div r5.xyz, r5.xyzx, r2.xxxx
      mad r6.xyz, r1.wwww, r2.yzwy, r5.xyzx
      mul r6.xyz, r6.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r6.xyz, r6.xyzx
      mul r5.xyz, r5.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r5.xyz, r5.xyzx
      add r5.xyz, -r5.xyzx, r6.xyzx
      div r2.xyz, r5.xyzx, r2.yzwy
      mul r0.xyz, r0.xyzx, r7.xyzx
      mul r0.xyz, r2.xyzx, r0.xyzx
      max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      mul r2.xyz, r4.xyzx, -r1.wwww
      mul r2.xyz, r2.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r2.xyz, r2.xyzx
      mul r5.xyz, r1.wwww, -r4.xyzx
      mul r5.xyz, r5.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r5.xyz, r5.xyzx
      add r5.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      div r4.xyz, r5.xyzx, r4.xyzx
      mul r3.xyz, r3.xyzx, r4.xyzx
      max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r0.xyz, r0.xyzx, r3.xyzx
      mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
    else 
      mov o0.xyz, r1.xyzx
    endif 
  endif 
else 
  mov o0.xyz, r1.xyzx
endif 
ret 
// Approximately 0 instruction slots used