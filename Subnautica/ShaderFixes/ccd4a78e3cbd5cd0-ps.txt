// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed ccd4a78e3cbd5cd0-ps.txt
// 3DMigoto: ccd4a78e3cbd5cd0 | Matched 2 variants of 1 shaders: MarmosetUBER
//
//       Unity headers extracted from MarmosetUBER
//       Shader "MarmosetUBER" {
//         Fallback "VertexLit"
//         SubShader 1/1 {
//           Tags { "RenderType"="Opaque" }
//           Pass 1/3 {
//             Name "DEFERRED"
//             Tags { "LIGHTMODE"="DEFERRED" "RenderType"="Opaque" }
//             ZWrite [_ZWrite]
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from MarmosetUBER:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 199 11 2
//      undeciphered1a: 13
// 2:   Keywords { "UNITY_HDR_ON" "LOD_FADE_CROSSFADE" "FX_DEFORM" "MARMO_EMISSION" "FX_SINWAVE" "FX_BUILDING" "UWE_SCHOOLFISH" "UWE_SIG" "MARMO_ALPHA_CLIP" }
// 1:   Keywords { "UNITY_HDR_ON" "LOD_FADE_CROSSFADE" "FX_DEFORM" "MARMO_EMISSION" "FX_SINWAVE" "FX_BUILDING" "UWE_SCHOOLFISH" "UWE_SIG" }
//      undeciphered2: 1 8 5 8 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 1184
//      Vector 368 [_SpecColor]
//      Float 384 [_EnableSimpleGlass]
//      Vector 400 [_Color]
//      Vector 416 [_MainTex_ST]
//      Float 432 [_UWE_EditorTime]
//      Float 436 [_UwePowerLoss]
//      Float 440 [_UweLocalLightScalar]
//      Float 444 [_IBLreductionAtNight]
//      Vector 448 [_BumpMap_ST]
//      Float 464 [_GlowStrengthNight]
//      Float 468 [_EmissionLMNight]
//      Vector 480 [_SIGMap_ST]
//      Float 496 [_minYpos]
//      Float 500 [_maxYpos]
//      Vector 512 [_DeformMap_ST]
//      Vector 528 [_DeformParams]
//      Vector 624 [_BorderColor]
//      Float 640 [_NoiseThickness]
//      Float 644 [_NoiseStr]
//      Vector 656 [_BuildParams]
//      Float 672 [_BuildLinear]
//      Float 676 [_Built]
//      Float 680 [_SubConstructProgress]
//      Float 704 [_Gray]
//      Float 708 [_Brightness]
//      Float 712 [_SpecInt]
//      Float 716 [_Shininess]
//      Float 720 [_Fresnel]
//      Vector 736 [_GlowColor]
//      Float 752 [_GlowStrength]
//      Float 756 [_EmissionLM]
//      Float 764 [_Cutoff]
//      Float 768 [_AffectedByDayNightCycle]
//      Float 772 [_Outdoors]
//      Vector 784 [_ExposureIBL]
//      Vector 808 [_UniformOcclusion] 2
//      Vector 992 [_SH0] 3
//      Vector 1008 [_SH1] 3
//      Vector 1024 [_SH2] 3
//      Vector 1040 [_SH3] 3
//      Vector 1056 [_SH4] 3
//      Vector 1072 [_SH5] 3
//      Vector 1088 [_SH6] 3
//      Vector 1104 [_SH7] 3
//      Vector 1120 [_SH8] 3
//      Matrix 816 [_SkyMatrix]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 752
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      ConstBuffer "UnityPerDraw" 160
//      Vector 128 [unity_LODFade]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_DitherMaskLOD2D] 2D 1
//      SetTexture 1 [_DeformMap] 2D 5
//      SetTexture 2 [_MainTex] 2D 2
//      SetTexture 3 [_BumpMap] 2D 3
//      SetTexture 4 [_SIGMap] 2D 4
//      SetTexture 5 [_SpecCubeIBL] CUBE 7
//      SetTexture 6 [_EmissiveTex] 2D 6
//      SetTexture 7 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityPerDraw" 3
//      BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:59:32 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
// TEXCOORD                 3   xyzw        5     NONE   float   xy  
// TEXCOORD                 4   xyzw        6     NONE   float   xyz 
// TEXCOORD                 5   xyz         7     NONE   float   xyz 
// TEXCOORD                 6   xyzw        8     NONE   float       
// TEXCOORD                 7   xyz         9     NONE   float       
// TEXCOORD                 8   xyz        10     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[71], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[9], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v10.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed ccd4a78e3cbd5cd0-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v7.xyzx, v7.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v7.xyzx
div r1.xy, v10.xyxx, v10.zzzz
frc r0.w, r1.y
mad r1.z, r0.w, l(0.062500), cb3[8].y
sample r1.xyzw, r1.xzxx, t0.xyzw, s1
add r0.w, r1.w, l(-0.500000)
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
add r0.w, cb0[27].x, cb1[0].y
mad r1.xy, v5.xyxx, cb0[32].xyxx, cb0[32].zwzz
mad r1.xy, cb0[33].xyxx, r0.wwww, r1.xyxx
sample r1.xyzw, r1.xyxx, t1.xyzw, s5
mad r1.xy, r1.xyxx, cb0[33].zwzz, v5.xyxx
add r1.zw, -cb0[27].zzzy, l(0.000000, 0.000000, 1.000000, 1.000000)
mul r1.z, r1.z, cb0[48].x
add r2.xy, cb0[29].xyxx, -cb0[47].xyxx
mad r2.xy, r1.zzzz, r2.xyxx, cb0[47].xyxx
mul r2.zw, cb0[49].xxxy, cb0[50].zzzw
mul r3.xyzw, v1.xyzw, cb0[25].xyzw
mad r4.xy, r1.xyxx, cb0[26].xyxx, cb0[26].zwzz
sample r4.xyzw, r4.xyxx, t2.xyzw, s2
mul r3.xyz, r3.xyzx, r4.xyzx
mul r3.xyz, r3.xyzx, cb0[49].wwww
mad r3.w, r4.w, r3.w, l(-1.000000)
mad r3.w, cb0[24].x, r3.w, l(1.000000)
mul r4.xyz, r3.wwww, r3.xyzx
max r1.z, r1.z, l(0.000000)
min r1.z, r1.z, cb0[27].w
mad r2.zw, r1.zzzz, -r2.zzzw, r2.zzzw
mad r3.xy, r1.xyxx, cb0[28].xyxx, cb0[28].zwzz
sample r5.xyzw, r3.xyxx, t3.xyzw, s3
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.z, r5.xyxx, r5.xyxx
min r1.z, r1.z, l(1.000000)
add r1.z, -r1.z, l(1.000000)
sqrt r5.z, r1.z
dp3 r1.z, r5.xyzx, r5.xyzx
rsq r1.z, r1.z
mul r5.xyz, r1.zzzz, r5.xyzx
dp3 r6.x, v2.xyzx, r5.xyzx
dp3 r6.y, v3.xyzx, r5.xyzx
dp3 r6.z, v4.xyzx, r5.xyzx
mad r1.xy, r1.xyxx, cb0[30].xyxx, cb0[30].zwzz
sample r7.xyzw, r1.xyxx, t4.yxzw, s4
dp3 r0.x, r5.xyzx, r0.xyzx
mad_sat r0.x, |r0.x|, -cb0[45].x, l(1.250000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.y, r0.x
mul r0.x, r0.x, cb0[44].z
mul r0.xyz, r0.xxxx, cb0[23].xyzx
mul r0.xyz, r0.xyzx, cb0[49].wwww
add r1.x, -cb0[44].w, l(8.000000)
add r1.y, -r1.x, l(8.000000)
exp r1.y, r1.y
mad r1.z, r1.y, l(0.159154937), l(0.318309873)
mul r5.xyz, r0.xyzx, r1.zzzz
mov r7.y, l(1.000000)
mul r3.xy, r3.wwww, r7.xyxx
mul r7.xyz, r3.xxxx, cb0[46].xyzx
mul r7.xyz, r2.xxxx, r7.xyzx
mul r1.z, r2.y, r3.y
mul r8.xyz, r1.zzzz, r4.xyzx
mad r7.xyz, r7.xyzx, cb0[49].wwww, r8.xyzx
add r8.xyz, -v6.xyzx, r14.xyzx
dp3 r1.z, r8.xyzx, r8.xyzx
rsq r1.z, r1.z
mul r8.xyz, r1.zzzz, r8.xyzx
dp3 r1.z, -r8.xyzx, r6.xyzx
add r1.z, r1.z, r1.z
mad r8.xyz, r6.xyzx, -r1.zzzz, -r8.xyzx
mov r9.x, cb0[51].x
mov r9.y, cb0[52].x
mov r9.z, cb0[53].x
mov r10.x, cb0[51].y
mov r10.y, cb0[52].y
mov r10.z, cb0[53].y
mov r11.x, cb0[51].z
mov r11.y, cb0[52].z
mov r11.z, cb0[53].z
mul r12.xyz, r8.zzzz, r11.xyzx
mad r8.yzw, r10.xxyz, r8.yyyy, r12.xxyz
mad r8.xyz, r9.xyzx, r8.xxxx, r8.yzwy
sample_l r8.xyzw, r8.xyzx, t5.xyzw, s7, r1.x
mul r0.xyz, r0.xyzx, r8.xyzx
mul r0.xyz, r2.wwww, r0.xyzx
mad r0.xyz, r7.xyzx, r1.wwww, r0.xyzx
ge r1.x, l(0.000000), cb0[48].x
mul r2.xyw, r6.zzzz, r11.xyxz
mad r2.xyw, r10.xyxz, r6.yyyy, r2.xyxw
mad r2.xyw, r9.xyxz, r6.xxxx, r2.xyxw
dp3 r1.z, r2.xywx, r2.xywx
max r1.z, r1.z, l(0.001000)
rsq r1.z, r1.z
mul r2.xyw, r1.zzzz, r2.xyxw
mad r7.xyz, cb0[63].xyzx, r2.yyyy, cb0[62].xyzx
mad r7.xyz, cb0[64].xyzx, r2.wwww, r7.xyzx
mad r7.xyz, cb0[65].xyzx, r2.xxxx, r7.xyzx
mul r8.xyz, r2.xwxx, r2.yywy
mad r7.xyz, cb0[66].xyzx, r8.xxxx, r7.xyzx
mad r7.xyz, cb0[67].xyzx, r8.yyyy, r7.xyzx
mad r7.xyz, cb0[69].xyzx, r8.zzzz, r7.xyzx
mul r1.zw, r2.yyyw, r2.yyyw
mad r1.w, r1.w, l(3.000000), l(-1.000000)
mad r7.xyz, cb0[68].xyzx, r1.wwww, r7.xyzx
mad r1.z, r2.x, r2.x, -r1.z
mad r2.xyw, cb0[70].xyxz, r1.zzzz, r7.xyxz
mul r2.xyz, r2.zzzz, |r2.xywx|
and r1.xzw, r1.xxxx, r2.xxyz
mad r0.xyz, r1.xzwx, r4.xyzx, r0.xyzx
mul r2.y, r0.w, cb0[41].w
mov r7.x, v2.z
mov r7.y, v3.z
mov r7.z, v4.z
mul r1.xzw, r7.xxyz, r7.xxyz
mul r1.xzw, r1.xxzw, l(1.960000, 0.000000, 1.960000, 1.960000)
mul r1.xzw, r1.xxzw, r1.xxzw
add r1.xzw, r1.xxzw, r1.xxzw
dp3 r0.w, r1.xzwx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r1.xzw, r1.xxzw, r0.wwww
mul r7.xyz, v6.xyzx, cb0[41].xxxx
add r3.xy, r7.xyxx, r7.xyxx
frc r8.xyz, r3.yxxy
add r8.xyz, r8.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r7.xyz, r7.zzyz, l(2.000000, 2.000000, 2.000000, 0.000000), |r8.xyzx|
frc r7.xyz, r7.xyzx
add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r7.xyz, v6.xyzx, cb0[41].xxxx, |r7.xyzx|
frc r0.w, r7.y
add r0.w, r0.w, l(-0.500000)
add r0.w, |r0.w|, r7.x
frc r0.w, r0.w
add r0.w, r0.w, l(-0.500000)
add r0.w, |r0.w|, r7.z
frc r0.w, r0.w
add r0.w, r0.w, l(-0.500000)
mov r2.xz, l(0,0,0,0)
mad r2.xyz, v6.xyzx, cb0[41].zzzz, r2.xyzx
add r3.xy, r2.xyxx, r2.xyxx
frc r7.xyz, r3.yxxy
add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r7.xyz, r2.zzyz, l(2.000000, 2.000000, 2.000000, 0.000000), |r7.xyzx|
frc r7.xyz, r7.xyzx
add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r2.xyz, r2.xyzx, |r7.xyzx|
frc r2.y, r2.y
add r2.y, r2.y, l(-0.500000)
add r2.x, |r2.y|, r2.x
frc r2.x, r2.x
add r2.x, r2.x, l(-0.500000)
add r2.x, |r2.x|, r2.z
frc r2.x, r2.x
add r2.x, r2.x, l(-0.500000)
mul r2.yz, |r2.xxxx|, l(0.000000, 0.714285731, 0.649350643, 0.000000)
mul r7.xyz, v6.xyzx, cb0[41].yyyy
mul r7.xyz, r7.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000)
sample r8.xyzw, r7.yzyy, t6.xyzw, s6
sample r9.xyzw, r7.xzxx, t6.xyzw, s6
mul r9.xyz, r1.zzzz, r9.xyzx
mad r8.xyz, r1.xxxx, r8.xyzx, r9.xyzx
sample r7.xyzw, r7.yxyy, t6.xyzw, s6
mad r1.xzw, r1.wwww, r7.xxyz, r8.xxyz
mul r2.w, r2.y, r1.x
add r3.x, cb0[42].y, cb0[42].z
mad r0.w, |r0.w|, l(0.714285731), r2.w
mul r2.w, cb0[40].y, l(0.220000)
mad r0.w, r0.w, cb0[40].y, -r2.w
add r2.w, -v6.y, cb0[31].x
add r3.y, -cb0[31].x, cb0[31].y
div r2.w, r2.w, |r3.y|
add r2.w, r2.w, r3.x
add_sat r2.w, r0.w, r2.w
add r0.w, -r0.w, r3.x
add r2.w, r2.w, l(0.400000)
add r2.w, -r0.w, r2.w
mad r0.w, cb0[42].x, r2.w, r0.w
add r2.w, -r0.w, cb0[40].x
mad r1.xzw, r1.xxzw, r2.yyyy, r2.wwww
mul_sat r1.xzw, r1.xxzw, l(8.000000, 0.000000, 8.000000, 8.000000)
mul r1.xzw, r1.xxzw, cb0[39].xxyz
mul r1.xzw, r1.xxzw, l(20.000000, 0.000000, 20.000000, 20.000000)
mad r2.x, |r2.x|, l(-1.29870129), l(3.000000)
mul r2.y, r2.z, r2.z
mul r2.x, r2.y, r2.x
mad r0.xyz, r1.xzwx, r2.xxxx, r0.xyzx
mov_sat r0.w, r0.w
add r0.w, r0.w, -cb0[47].w
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
add r0.w, r4.y, r4.x
mad r0.w, r3.z, r3.w, r0.w
mad r1.xzw, r0.wwww, l(0.333333343, 0.000000, 0.333333343, 0.333333343), -r4.xxyz
mad r1.xzw, cb0[44].xxxx, r1.xxzw, r4.xxyz
add r1.xzw, r1.xxzw, cb0[44].yyyy
eq r0.w, cb4[0].x, l(1.000000)
if_nz r0.w
  eq r0.w, cb4[0].y, l(1.000000)
  mul r2.xyz, v3.wwww, cb4[2].xyzx
  mad r2.xyz, cb4[1].xyzx, v2.wwww, r2.xyzx
  mad r2.xyz, cb4[3].xyzx, v4.wwww, r2.xyzx
  add r2.xyz, r2.xyzx, cb4[4].xyzx
  mov r3.y, v2.w
  mov r3.z, v3.w
  mov r3.w, v4.w
  movc r2.xyz, r0.wwww, r2.xyzx, r3.yzwy
  add r2.xyz, r2.xyzx, -cb4[6].xyzx
  mul r2.yzw, r2.xxyz, cb4[5].xxyz
  mul r0.w, r2.y, l(0.250000)
  mul r2.y, cb4[0].z, l(0.500000)
  mad r3.x, -cb4[0].z, l(0.500000), l(0.250000)
  max r0.w, r0.w, r2.y
  min r2.x, r3.x, r0.w
  sample r3.xyzw, r2.xzwx, t7.xyzw, s0
  add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r4.xyzw, r4.xyzx, t7.xyzw, s0
  add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r2.xyzw, r2.xyzx, t7.xyzw, s0
  mov r6.w, l(1.000000)
  dp4 r3.x, r3.xyzw, r6.xyzw
  dp4 r3.y, r4.xyzw, r6.xyzw
  dp4 r3.z, r2.xyzw, r6.xyzw
else 
  mov r6.w, l(1.000000)
  dp4 r3.x, cb2[38].xyzw, r6.xyzw
  dp4 r3.y, cb2[39].xyzw, r6.xyzw
  dp4 r3.z, cb2[40].xyzw, r6.xyzw
endif 
max r2.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul o1.xyz, r5.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000)
mul o1.w, r1.y, l(0.015625)
mad o2.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mad o3.xyz, r1.xzwx, r2.xyzx, r0.xyzx
add r0.xy, -cb0[48].yxyy, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r0.x, r0.y, l(2.000000), r0.x
mul o2.w, r0.x, l(0.333333343)
mov o0.xyz, r1.xzwx
mov o0.w, l(1.000000)
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used