// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 33b1ee0a46fd5fc8-ps.txt
// 3DMigoto: 33b1ee0a46fd5fc8 | Matched 2 variants of 1 shaders: UWE/Experimental/Steve's Projected Decal
//
//       Unity headers extracted from UWE_Experimental_Steve's Projected Decal
//       Shader "UWE/Experimental/Steve's Projected Decal" {
//         Fallback "Specular"
//         SubShader 1/1 {
//           Tags { "QUEUE"="Geometry+256" }
//           Pass 2/2 {
//             Name "PREPASS"
//             Tags { "LIGHTMODE"="PREPASSFINAL" "QUEUE"="Geometry+256" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from UWE_Experimental_Steve's Projected Decal:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 26 4 3
//      undeciphered1a: 3
// 2:   Keywords { "SHADOWS_SHADOWMASK" }
//      undeciphered2: 1 4 3 4 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 96
//      Vector 48 [_SpecColor]
//      Float 64 [_Scale]
//      Vector 80 [_Color]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 112 [_ZBufferParams]
//      ConstBuffer "UnityPerDraw" 160
//      Matrix 64 [unity_WorldToObject]
//      SetTexture 0 [_CameraDepthTexture] 2D 0
//      SetTexture 1 [_MainTex] 2D 2
//      SetTexture 2 [_SIGMap] 2D 3
//      SetTexture 3 [_LightBuffer] 2D 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:54:41 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xy w
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyw
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 5
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 33b1ee0a46fd5fc8-ps.txt

mul r3.w, -r3.x, r3.y
mad r4.xyz, -r3.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.xy, v2.xyxx, v2.wwww
sample r1.xyzw, r0.xyxx, t0.xyzw, s0
mad r0.z, cb1[7].z, r1.x, cb1[7].w
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
add r1.xyz, v1.xyzx, -r4.xyzx
mul r1.xyz, r0.zzzz, r1.xyzx
div r1.xyz, r1.xyzx, v2.wwww
add r1.xyz, r1.xyzx, r4.xyzx
mul r2.xyzw, r1.yyyy, cb2[5].xyzw
mad r2.xyzw, cb2[4].xyzw, r1.xxxx, r2.xyzw
mad r1.xyzw, cb2[6].xyzw, r1.zzzz, r2.xyzw
add r1.xyzw, r1.xyzw, cb2[7].xyzw
div r1.xyz, r1.xyzx, r1.wwww
div r1.xyz, r1.xyzx, cb0[4].xxxx
lt r2.xyz, |r1.xyzx|, l(0.500000, 0.500000, 0.500000, 0.000000)
and r0.z, r2.y, r2.x
and r0.z, r2.z, r0.z
if_nz r0.z
  add r0.zw, r1.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000)
  sample r1.xyzw, r0.zwzz, t1.xyzw, s2
  mul r1.xyzw, r1.xyzw, cb0[5].xyzw
  sample r2.xyzw, r0.zwzz, t2.xyzw, s3
  sample r0.xyzw, r0.xyxx, t3.xyzw, s1
  log r0.xyzw, r0.xyzw
  add r0.xyz, -r0.xyzx, v3.xyzx
  mul r0.w, r2.x, -r0.w
  mul r2.xzw, r0.xxyz, cb0[3].xxyz
  mul r2.xzw, r0.wwww, r2.xxzw
  mad r0.xyz, r1.xyzx, r0.xyzx, r2.xzwx
  mad r0.xyz, r2.yyyy, r1.xyzx, r0.xyzx
  mov r0.w, l(1.000000)
  mul o0.xyzw, r1.wwww, r0.xyzw
  ret 
else 
  mov o0.xyzw, l(0,0,0,0)
  ret 
endif 
ret 
// Approximately 0 instruction slots used