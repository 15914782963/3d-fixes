// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6080ff423c0b0043-ps.txt
// 3DMigoto: 6080ff423c0b0043 |    Unity headers extracted from Particles_MagmaFrag
//    Shader "Particles/MagmaFrag" {
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="AlphaTest" "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="AlphaTest" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Particles_MagmaFrag:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 163 9 11
//   undeciphered1a: 10
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
//   undeciphered2: 1 9 6 9 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 432
//   Vector 32 [_LightColor0]
//   Vector 64 [_ColorStrength]
//   Float 80 [_UweFogEnabled]
//   Float 84 [_UweAboveWaterFogStartDistance]
//   Vector 96 [_UweFogVsLightDirection] 3
//   Vector 128 [_UweFogLightColor]
//   Vector 144 [_UweTopAmbientColor] 3
//   Vector 176 [_UweVsWaterPlane]
//   Float 320 [_UweVolumeTextureSlices]
//   Float 324 [_UweExtinctionAndScatteringScale]
//   Float 328 [_UweSunAttenuationFactor]
//   Vector 336 [_UweFogMiePhaseConst] 3
//   Float 360 [_SkyFogDensity]
//   Vector 368 [_SkyFogColor] 3
//   Float 380 [settingsSampleDistance]
//   Float 416 [_Cutoff]
//   Matrix 192 [_UweCameraToVolumeMatrix]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 384
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_Emissive] 2D 5
//   SetTexture 1 [_RampTex] 2D 2
//   SetTexture 2 [_MainTex] 2D 3
//   SetTexture 3 [_BumpMap] 2D 4
//   SetTexture 4 [_ShadowMapTexture] 2D 1
//   SetTexture 5 [_UweExtinctionTexture] 2D 6
//   SetTexture 6 [_UweScatteringTexture] 2D 7
//   SetTexture 7 [_UweEmissiveTexture] 2D 8
//   SetTexture 8 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:56:08 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   x  w
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[27], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyw
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6080ff423c0b0043-ps.txt

mul r10.w, -r10.x, r10.y
mad r11.xyz, -r10.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.zwzz, t0.xyzw, s5
dp2_sat r0.y, r0.xxxx, v5.xxxx
add r0.z, -r0.y, l(1.000000)
add r0.z, r0.z, v5.x
mul r1.x, r0.z, l(0.500000)
mov r1.y, l(0.500000)
sample r1.xyzw, r1.xyxx, t1.xyzw, s2
sample r2.xyzw, v1.xyxx, t2.xyzw, s3
mul r0.z, r0.x, l(5.000000)
mul r1.xyz, r1.xyzx, r0.zzzz
mul r3.xyz, r1.xyzx, cb0[4].xyzx
sample r4.xyzw, v1.xyxx, t3.xyzw, s4
mad r4.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.z, r4.xyxx, r4.xyxx
min r0.z, r0.z, l(1.000000)
add r0.z, -r0.z, l(1.000000)
sqrt r4.z, r0.z
mad r1.xyz, r1.xyzx, cb0[4].xyzx, -r2.xyzx
mad r1.xyz, r0.yyyy, r1.xyzx, r2.xyzx
dp2 r2.w, r0.xxxx, v5.wwww
add r0.x, r2.w, -cb0[26].x
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
mov r5.y, v2.w
mov r5.z, v3.w
mov r5.w, v4.w
add r0.xzw, -r5.yyzw, r11.xxyz
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r0.x, r0.xzwx, r6.xyzx
add r6.xyz, r5.yzwy, -cb3[25].xyzx
dp3 r0.z, r6.xyzx, r6.xyzx
sqrt r0.z, r0.z
add r0.z, -r0.x, r0.z
mad r0.x, cb3[25].w, r0.z, r0.x
mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
eq r0.z, cb5[0].x, l(1.000000)
if_nz r0.z
  eq r0.w, cb5[0].y, l(1.000000)
  mul r6.xyz, v3.wwww, cb5[2].xyzx
  mad r6.xyz, cb5[1].xyzx, v2.wwww, r6.xyzx
  mad r6.xyz, cb5[3].xyzx, v4.wwww, r6.xyzx
  add r6.xyz, r6.xyzx, cb5[4].xyzx
  movc r6.xyz, r0.wwww, r6.xyzx, r5.yzwy
  add r6.xyz, r6.xyzx, -cb5[6].xyzx
  mul r6.yzw, r6.xxyz, cb5[5].xxyz
  mad r0.w, r6.y, l(0.250000), l(0.750000)
  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
  max r6.x, r0.w, r1.w
  sample r6.xyzw, r6.xzwx, t8.xyzw, s0
else 
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r0.w, r6.xyzw, cb2[45].xyzw
div r6.xy, v8.xyxx, v8.wwww
sample r6.xyzw, r6.xyxx, t4.xyzw, s1
add_sat r0.x, r0.x, r6.x
min r0.w, r0.x, r0.w
movc r0.x, r0.z, r0.w, r0.x
dp3 r6.x, v2.xyzx, r4.xyzx
dp3 r6.y, v3.xyzx, r4.xyzx
dp3 r6.z, v4.xyzx, r4.xyzx
mul r4.xyz, r0.xxxx, cb0[2].xyzx
if_nz r0.z
  eq r0.x, cb5[0].y, l(1.000000)
  mul r7.xyz, v3.wwww, cb5[2].xyzx
  mad r7.xyz, cb5[1].xyzx, v2.wwww, r7.xyzx
  mad r7.xyz, cb5[3].xyzx, v4.wwww, r7.xyzx
  add r7.xyz, r7.xyzx, cb5[4].xyzx
  movc r0.xzw, r0.xxxx, r7.xxyz, r5.yyzw
  add r0.xzw, r0.xxzw, -cb5[6].xxyz
  mul r5.yzw, r0.xxzw, cb5[5].xxyz
  mul r0.x, r5.y, l(0.250000)
  mul r0.z, cb5[0].z, l(0.500000)
  mad r0.w, -cb5[0].z, l(0.500000), l(0.250000)
  max r0.x, r0.z, r0.x
  min r5.x, r0.w, r0.x
  sample r7.xyzw, r5.xzwx, t8.xyzw, s0
  add r0.xzw, r5.xxzw, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r8.xyzw, r0.xzwx, t8.xyzw, s0
  add r0.xzw, r5.xxzw, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r5.xyzw, r0.xzwx, t8.xyzw, s0
  mov r6.w, l(1.000000)
  dp4 r7.x, r7.xyzw, r6.xyzw
  dp4 r7.y, r8.xyzw, r6.xyzw
  dp4 r7.z, r5.xyzw, r6.xyzw
else 
  mov r6.w, l(1.000000)
  dp4 r7.x, cb2[38].xyzw, r6.xyzw
  dp4 r7.y, cb2[39].xyzw, r6.xyzw
  dp4 r7.z, cb2[40].xyzw, r6.xyzw
endif 
add r0.xzw, r7.xxyz, v7.xxyz
max r0.xzw, r0.xxzw, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r1.w, r6.xyzx, cb2[0].xyzx
max r1.w, r1.w, l(0.000000)
mul r4.xyz, r1.xyzx, r4.xyzx
mul r0.xzw, r0.xxzw, r1.xxyz
mad r0.xzw, r4.xxyz, r1.wwww, r0.xxzw
mad r0.xyz, r3.xyzx, r0.yyyy, r0.xzwx
ne r1.x, cb0[5].x, l(0.000000)
if_nz r1.x
  dp3 r1.x, v6.xyzx, v6.xyzx
  sqrt r0.w, r1.x
  div r1.xyz, v6.xyzx, r0.wwww
  mul r3.xyz, r1.xyzx, cb0[23].wwww
  mul r4.xyz, r3.yyyy, cb0[13].xyzx
  mad r3.xyw, cb0[12].xyxz, r3.xxxx, r4.xyxz
  mad r3.xyz, cb0[14].xyzx, r3.zzzz, r3.xywx
  add_sat r3.xyz, r3.xyzx, cb0[15].xyzx
  div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[20].x
  mad r1.w, r3.y, cb0[20].x, l(-0.500000)
  frc r3.y, r1.w
  add r1.w, r1.w, -r3.y
  add r1.w, r1.w, r3.z
  mul r3.w, r4.y, r1.w
  mov r4.x, l(0)
  add r4.xy, r3.xwxx, r4.xyxx
  sample_l r5.xyzw, r3.xwxx, t5.xyzw, s6, l(0.000000)
  sample_l r6.xyzw, r4.xyxx, t5.xyzw, s6, l(0.000000)
  add r6.xyzw, -r5.xyzw, r6.xyzw
  mad r5.xyzw, r3.yyyy, r6.wxyz, r5.wxyz
  dp3 r1.w, r1.xyzx, cb0[11].xyzx
  lt r3.z, l(0.000000), cb0[11].w
  if_nz r3.z
    lt r3.z, r1.w, l(-0.010000)
    not r4.z, r3.z
    div r4.w, -cb0[11].w, r1.w
    add r4.w, r4.w, cb0[5].y
    mul r6.x, -r0.w, cb0[22].z
    mul r6.x, r6.x, l(1.442695)
    exp r6.x, r6.x
    add r6.yzw, r0.xxyz, -cb0[23].xxyz
    mad r2.xyz, r6.xxxx, r6.yzwy, cb0[23].xyzx
    movc r5.x, r3.z, r4.w, cb0[5].y
    lt r4.w, r0.w, r5.x
    movc r3.z, r3.z, r4.w, l(-1)
    or r3.z, r4.z, r3.z
  else 
    div r4.z, -cb0[11].w, r1.w
    lt r4.w, l(0.000000), r4.z
    add r6.x, r0.w, -r4.z
    max r6.x, r6.x, l(0.000000)
    mul r6.x, -r6.x, cb0[22].z
    mul r6.x, r6.x, l(1.442695)
    exp r6.x, r6.x
    add r6.yzw, r0.xxyz, -cb0[23].xxyz
    mad r6.xyz, r6.xxxx, r6.yzwy, cb0[23].xyzx
    min r6.w, r0.w, r4.z
    movc r0.xyzw, r4.wwww, r6.xyzw, r0.xyzw
    mov r3.z, l(0)
  endif 
  if_z r3.z
    lt r3.z, r5.x, r0.w
    if_nz r3.z
      sample_l r6.xyzw, r3.xwxx, t6.xyzw, s7, l(0.000000)
      sample_l r7.xyzw, r4.xyxx, t6.xyzw, s7, l(0.000000)
      add r7.xyzw, -r6.xyzw, r7.xyzw
      mad r6.xyzw, r3.yyyy, r7.xyzw, r6.xyzw
      sample_l r7.xyzw, r3.xwxx, t7.xyzw, s8, l(0.000000)
      sample_l r4.xyzw, r4.xyxx, t7.xyzw, s8, l(0.000000)
      add r3.xzw, -r7.xxyz, r4.xxyz
      mad r3.xyz, r3.yyyy, r3.xzwx, r7.xyzx
      mul r4.xyz, r6.xyzx, cb0[20].yyyy
      mul r6.xyz, r5.yzwy, cb0[20].yyyy
      add r0.w, -r5.x, r0.w
      mul r7.xyz, r1.xyzx, r5.xxxx
      dp3 r1.x, r1.xyzx, -cb0[6].xyzx
      mad r1.x, -cb0[21].z, r1.x, cb0[21].y
      log r1.x, r1.x
      mul r1.x, r1.x, l(-1.500000)
      exp r1.x, r1.x
      mul r1.x, r1.x, cb0[21].x
      mul r1.xyz, r1.xxxx, r4.xyzx
      dp3 r3.w, cb0[6].xyzx, cb0[11].xyzx
      max r3.w, r3.w, l(0.000100)
      mad r4.xyz, cb0[8].xyzx, cb0[8].wwww, cb0[9].xyzx
      mul r4.xyz, r6.wwww, r4.xyzx
      mul r8.xyz, r6.xyzx, cb0[20].zzzz
      mul r9.xyz, r1.wwww, r8.xyzx
      div r9.xyz, r9.xyzx, r3.wwww
      mad r5.xyz, -r5.yzwy, cb0[20].yyyy, r9.xyzx
      dp3 r1.w, r7.xyzx, cb0[11].xyzx
      add r1.w, r1.w, cb0[11].w
      mul r7.xyz, r1.wwww, r8.xyzx
      div r7.xyz, r7.xyzx, r3.wwww
      mad r8.xyz, r0.wwww, r5.xyzx, r7.xyzx
      mul r8.xyz, r8.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r8.xyz, r8.xyzx
      mul r7.xyz, r7.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r7.xyz, r7.xyzx
      add r7.xyz, -r7.xyzx, r8.xyzx
      div r5.xyz, r7.xyzx, r5.xyzx
      mul r1.xyz, r1.xyzx, r4.xyzx
      mul r1.xyz, r5.xyzx, r1.xyzx
      max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      mul r4.xyz, r6.xyzx, -r0.wwww
      mul r4.xyz, r4.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r4.xyz, r4.xyzx
      mul r5.xyz, r0.wwww, -r6.xyzx
      mul r5.xyz, r5.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r5.xyz, r5.xyzx
      add r5.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      div r5.xyz, r5.xyzx, r6.xyzx
      mul r3.xyz, r3.xyzx, r5.xyzx
      max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r1.xyz, r1.xyzx, r3.xyzx
      mad r2.xyz, r0.xyzx, r4.xyzx, r1.xyzx
    else 
      mov r2.xyz, r0.xyzx
    endif 
  endif 
else 
  mov r2.xyz, r0.xyzx
endif 
mov o0.xyzw, r2.xyzw
ret 
// Approximately 0 instruction slots used