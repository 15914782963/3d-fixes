// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 151b2c49e98bde48-ps.txt
// 3DMigoto: 151b2c49e98bde48 | Matched 2 variants of 1 shaders: Hidden/UWE/Capped
//
//       Unity headers extracted from Hidden_UWE_Capped
//       Shader "Hidden/UWE/Capped" {
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           LOD 400
//           Tags { "RenderType"="Opaque" }
//           Pass 2/6 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="FORWARDADD" "RenderType"="Opaque" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Hidden_UWE_Capped:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 67 6 2
//      undeciphered1a: 6
// 2:   Keywords { "DIRECTIONAL_COOKIE" "LOD_FADE_CROSSFADE" }
// 1:   Keywords { "DIRECTIONAL_COOKIE" }
//      undeciphered2: 1 6 4 6 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 496
//      Vector 32 [_LightColor0]
//      Vector 48 [_SpecColor]
//      Float 128 [_CapBorderBlendRange]
//      Float 132 [_CapBorderBlendOffset]
//      Float 136 [_CapBorderBlendAngle]
//      Vector 144 [_Color]
//      Float 160 [_Shininess]
//      Matrix 64 [unity_WorldToLight]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 752
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 720 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_SideTexture] 2D 2
//      SetTexture 1 [_CapTexture] 2D 4
//      SetTexture 2 [_SideBumpMap] 2D 3
//      SetTexture 3 [_CapBumpMap] 2D 5
//      SetTexture 4 [_LightTexture0] 2D 1
//      SetTexture 5 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:53:38 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 151b2c49e98bde48-ps.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, r7.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
sample r1.xyzw, v1.xyxx, t0.xyzw, s2
sample r2.xyzw, v1.xyxx, t1.xyzw, s4
sample r3.xyzw, v1.zwzz, t2.xyzw, s3
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r3.w, r3.xyxx, r3.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r3.z, r3.w
sample r4.xyzw, v1.zwzz, t3.xyzw, s5
mad r4.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r3.w, r4.xyxx, r4.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r4.z, r3.w
mad r3.w, v1.y, l(2.000000), l(-0.500000)
add r3.w, r3.w, cb0[8].y
mad r3.w, -r3.w, cb0[8].z, l(1.000000)
add r3.w, -r2.w, r3.w
max r3.w, r3.w, l(-1.000000)
min r3.w, r3.w, l(1.000000)
ge r4.w, r3.w, -cb0[8].x
lt r5.x, cb0[8].x, r3.w
add r3.w, r3.w, cb0[8].x
add r5.y, cb0[8].x, cb0[8].x
div r3.w, r3.w, r5.y
movc r3.w, r5.x, l(1.000000), r3.w
and r3.w, r3.w, r4.w
add r1.xyzw, r1.xyzw, -r2.xyzw
mad r1.xyzw, r3.wwww, r1.xyzw, r2.xyzw
add r2.xyz, r3.xyzx, -r4.xyzx
mad r2.xyz, r3.wwww, r2.xyzx, r4.xyzx
mul r1.xyz, r1.xyzx, cb0[9].xyzx
mul r3.xy, v5.yyyy, cb0[5].xyxx
mad r3.xy, cb0[4].xyxx, v5.xxxx, r3.xyxx
mad r3.xy, cb0[6].xyxx, v5.zzzz, r3.xyxx
add r3.xy, r3.xyxx, cb0[7].xyxx
eq r2.w, cb3[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb3[0].y, l(1.000000)
  mul r4.xyz, v5.yyyy, cb3[2].xyzx
  mad r4.xyz, cb3[1].xyzx, v5.xxxx, r4.xyzx
  mad r4.xyz, cb3[3].xyzx, v5.zzzz, r4.xyzx
  add r4.xyz, r4.xyzx, cb3[4].xyzx
  movc r4.xyz, r2.wwww, r4.xyzx, v5.xyzx
  add r4.xyz, r4.xyzx, -cb3[6].xyzx
  mul r4.yzw, r4.xxyz, cb3[5].xxyz
  mad r2.w, r4.y, l(0.250000), l(0.750000)
  mad r3.z, cb3[0].z, l(0.500000), l(0.750000)
  max r4.x, r2.w, r3.z
  sample r4.xyzw, r4.xzwx, t5.xyzw, s0
else 
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r2.w, r4.xyzw, cb2[45].xyzw
sample r3.xyzw, r3.xyxx, t4.xyzw, s1
mul r2.w, r2.w, r3.w
dp3 r3.x, v2.xyzx, r2.xyzx
dp3 r3.y, v3.xyzx, r2.xyzx
dp3 r3.z, v4.xyzx, r2.xyzx
mul r2.xyz, r2.wwww, cb0[2].xyzx
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.xyzx, cb2[0].xyzx
dp3 r0.x, r3.xyzx, r0.xyzx
max r0.xw, r0.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.y, cb0[10].x, l(128.000000)
log r0.x, r0.x
mul r0.x, r0.x, r0.y
exp r0.x, r0.x
mul r0.x, r1.w, r0.x
mul r1.xyz, r1.xyzx, r2.xyzx
mul r2.xyz, r2.xyzx, cb0[3].xyzx
mul r0.xyz, r0.xxxx, r2.xyzx
mad o0.xyz, r1.xyzx, r0.wwww, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used