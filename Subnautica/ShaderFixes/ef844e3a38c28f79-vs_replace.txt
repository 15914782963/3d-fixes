// Water, pre-emptively fixed only - not tested

// 3DMigoto: ef844e3a38c28f79 |    Unity headers extracted from FX_WBOIT-WaterBase
//    Shader "FX/WBOIT-WaterBase" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent+101" "RenderType"="Transparent" }
//        Pass 2/2 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent+101" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from FX_WBOIT-WaterBase:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201609010 94 0 0
//   undeciphered1a: 6
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 0 4 0 0 0
//   undeciphered3: 143 5 0 0 7 8 1 2 3 4 2 1
//   ConstBuffer "$Globals" 560
//   Vector 416 [_Scale]
//   Vector 448 [_Frequency]
//   Float 464 [_Speed]
//   Float 468 [_Dir]
//   Float 496 [_ClipedValue]
//   Float 500 [_UWE_EditorTime]
//   Vector 544 [_MaskMap_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityPerDraw" 160
//   Matrix 0 [unity_ObjectToWorld]
//   Matrix 64 [unity_WorldToObject]
//   ConstBuffer "UnityPerFrame" 384
//   Matrix 144 [unity_MatrixV]
//   Matrix 272 [unity_MatrixVP]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

// ---- Created with 3Dmigoto v1.2.65 on Thu Jan 25 17:00:34 2018

// Unity constant buffers reconstructed with DarkStarSword's hlsltool.py:
// hlsltool.py --reconstruct-unity-cbuffers --in-place ef844e3a38c28f79-vs_replace.txt

cbuffer UnityPerFrame : register(b3) {
  row_major matrix unity_MatrixV : packoffset(c9);
  row_major matrix unity_MatrixVP : packoffset(c17);
}

cbuffer UnityPerDraw : register(b2) {
  row_major matrix unity_ObjectToWorld : packoffset(c0);
  row_major matrix unity_WorldToObject : packoffset(c4);
}

cbuffer UnityPerCamera : register(b1) {
  float4 _Time : packoffset(c0);
  float4 _ProjectionParams : packoffset(c5);
}

cbuffer Globals : register(b0) {
  float4 _Scale : packoffset(c26);
  float4 _Frequency : packoffset(c28);
  float _Speed : packoffset(c29);
  float _Dir : packoffset(c29.y);
  float _ClipedValue : packoffset(c31);
  float _UWE_EditorTime : packoffset(c31.y);
  float4 _MaskMap_ST : packoffset(c34);
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  float4 v1 : TANGENT0,
  float3 v2 : NORMAL0,
  float4 v3 : TEXCOORD0,
  float4 v4 : TEXCOORD1,
  float4 v5 : TEXCOORD2,
  float4 v6 : TEXCOORD3,
  float4 v7 : COLOR0,
  out float4 o0 : SV_POSITION0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3,
  out float4 o5 : TEXCOORD4,
  out float4 o6 : TEXCOORD5,
  out float4 o7 : TEXCOORD6,
  out float4 o8 : TEXCOORD7,
  out float4 o9 : TEXCOORD8,
  out float4 o10 : TEXCOORD9)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = unity_ObjectToWorld[1].yxzy * v0.yyyy;
  r0.xyzw = unity_ObjectToWorld[0].yxzy * v0.xxxx + r0.xyzw;
  r0.xyzw = unity_ObjectToWorld[2].yxzy * v0.zzzz + r0.xyzw;
  r0.xyzw = unity_ObjectToWorld[3].yxzy * v0.wwww + r0.xyzw;
  r1.x = _Time.y + _UWE_EditorTime;
  r0.xyzw = r1.xxxx * _Speed + r0.xyzw;
  r1.xy = float2(0.200000003,0.200000003) * r0.xy;
  r2.xyz = r0.zzw * float3(0.200000003,0.200000003,0.200000003) + -r1.xyy;
  r0.x = -0.349999994 + _Dir;
  r1.xyz = r0.xxx * r2.xyz + r1.xyy;
  r2.xyz = float3(8,8,8) * _Frequency.xyz;
  r1.xyz = r2.xyz * r1.xyz + float3(0.5,0.5,0.5);
  r1.xyz = frac(r1.xyz);
  r1.xyz = r1.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r2.xyz = abs(r1.xyz) * abs(r1.xyz);
  r1.xyz = -abs(r1.xyz) * float3(2,2,2) + float3(3,3,3);
  r1.xyz = r2.xyz * r1.xyz;
  r1.xyz = r1.xyz * float3(0.833333313,0.833333313,0.833333313) + float3(0.25,0.25,0.25);
  r2.xyz = r0.zzw + -r0.wyy;
  r0.xyz = _Dir * r2.xyz + r0.wyy;
  r0.xyz = _Frequency.xyz * r0.xyz + float3(0.5,0.5,0.5);
  r0.xyz = frac(r0.xyz);
  r0.xyz = r0.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r2.xyz = abs(r0.xyz) * abs(r0.xyz);
  r0.xyz = -abs(r0.xyz) * float3(2,2,2) + float3(3,3,3);
  r0.xyz = r2.xyz * r0.xyz;
  r0.xyz = r0.xyz * r1.xyz;
  r0.xyz = _Scale.xyz * r0.xyz;
  r0.xyz = v7.xyz * r0.xyz;
  r1.xyz = unity_WorldToObject[1].xyz * r0.yyy;
  r1.xyz = unity_WorldToObject[0].xyz * r0.xxx + r1.xyz;
  r0.yzw = unity_WorldToObject[2].xyz * r0.zzz + r1.xyz;
  r0.xyz = unity_WorldToObject[3].xyz * r0.xxx + r0.yzw;
  r0.w = 1 + -_ClipedValue;
  r0.xyz = r0.xyz * r0.www + v0.xyz;
  r1.xyzw = unity_ObjectToWorld[1].xyzw * r0.yyyy;
  r1.xyzw = unity_ObjectToWorld[0].xyzw * r0.xxxx + r1.xyzw;
  r1.xyzw = unity_ObjectToWorld[2].xyzw * r0.zzzz + r1.xyzw;
  r2.xyzw = unity_ObjectToWorld[3].xyzw + r1.xyzw;
  r3.xyzw = unity_MatrixVP[1].xyzw * r2.yyyy;
  r3.xyzw = unity_MatrixVP[0].xyzw * r2.xxxx + r3.xyzw;
  r3.xyzw = unity_MatrixVP[2].xyzw * r2.zzzz + r3.xyzw;
  o0.xyzw = unity_MatrixVP[3].xyzw * r2.wwww + r3.xyzw;
  o1.xy = v3.xy * _MaskMap_ST.xy + _MaskMap_ST.zw;
  r3.y = dot(v2.xyz, unity_WorldToObject[0].xyz);
  r3.z = dot(v2.xyz, unity_WorldToObject[1].xyz);
  r3.x = dot(v2.xyz, unity_WorldToObject[2].xyz);
  r0.w = dot(r3.xyz, r3.xyz);
  r0.w = rsqrt(r0.w);
  r3.xyz = r3.xyz * r0.www;
  r4.xyz = unity_ObjectToWorld[1].yzx * v1.yyy;
  r4.xyz = unity_ObjectToWorld[0].yzx * v1.xxx + r4.xyz;
  r4.xyz = unity_ObjectToWorld[2].yzx * v1.zzz + r4.xyz;
  r0.w = dot(r4.xyz, r4.xyz);
  r0.w = rsqrt(r0.w);
  r4.xyz = r4.xyz * r0.www;
  r5.xyz = r4.xyz * r3.xyz;
  r5.xyz = r3.zxy * r4.yzx + -r5.xyz;
  r5.xyz = v1.www * r5.xyz;
  o2.y = r5.x;
  o2.x = r4.z;
  o2.z = r3.y;
  o3.x = r4.x;
  o4.x = r4.y;
  o3.z = r3.z;
  o4.z = r3.x;
  o3.y = r5.y;
  o4.y = r5.z;
  o5.xyz = unity_ObjectToWorld[3].xyz * v0.www + r1.xyz;
  o9.xyzw = unity_ObjectToWorld[3].xyzw * v0.wwww + r1.xyzw;
  r0.w = unity_MatrixV[1].z * r2.y;
  r0.w = unity_MatrixV[0].z * r2.x + r0.w;
  r0.w = unity_MatrixV[2].z * r2.z + r0.w;
  r0.w = unity_MatrixV[3].z * r2.w + r0.w;
  o6.z = -r0.w;
  r1.xyz = unity_MatrixVP[1].xyw * r2.yyy;
  r1.xyz = unity_MatrixVP[0].xyw * r2.xxx + r1.xyz;
  r1.xyz = unity_MatrixVP[2].xyw * r2.zzz + r1.xyz;
  r1.xyz = unity_MatrixVP[3].xyw * r2.www + r1.xyz;

float4 s = StereoParams.Load(0);
r1.x += s.x * (r1.z - s.y);

  r0.w = _ProjectionParams.x * r1.y;
  r2.w = 0.5 * r0.w;
  r2.xz = float2(0.5,0.5) * r1.xz;
  o6.w = r1.z;
  o6.xy = r2.xw + r2.zz;
  o7.xyz = r0.xyz;
  o7.w = v0.w;
  r1.xyzw = unity_MatrixV[1].xyzw * unity_ObjectToWorld[1].yyyy;
  r1.xyzw = unity_MatrixV[0].xyzw * unity_ObjectToWorld[1].xxxx + r1.xyzw;
  r1.xyzw = unity_MatrixV[2].xyzw * unity_ObjectToWorld[1].zzzz + r1.xyzw;
  r1.xyzw = unity_MatrixV[3].xyzw * unity_ObjectToWorld[1].wwww + r1.xyzw;
  r1.xyzw = r1.xyzw * r0.yyyy;
  r2.xyzw = unity_MatrixV[1].xyzw * unity_ObjectToWorld[0].yyyy;
  r2.xyzw = unity_MatrixV[0].xyzw * unity_ObjectToWorld[0].xxxx + r2.xyzw;
  r2.xyzw = unity_MatrixV[2].xyzw * unity_ObjectToWorld[0].zzzz + r2.xyzw;
  r2.xyzw = unity_MatrixV[3].xyzw * unity_ObjectToWorld[0].wwww + r2.xyzw;
  r1.xyzw = r2.xyzw * r0.xxxx + r1.xyzw;
  r2.xyzw = unity_MatrixV[1].xyzw * unity_ObjectToWorld[2].yyyy;
  r2.xyzw = unity_MatrixV[0].xyzw * unity_ObjectToWorld[2].xxxx + r2.xyzw;
  r2.xyzw = unity_MatrixV[2].xyzw * unity_ObjectToWorld[2].zzzz + r2.xyzw;
  r2.xyzw = unity_MatrixV[3].xyzw * unity_ObjectToWorld[2].wwww + r2.xyzw;
  r0.xyzw = r2.xyzw * r0.zzzz + r1.xyzw;
  r1.xyzw = unity_MatrixV[1].xyzw * unity_ObjectToWorld[3].yyyy;
  r1.xyzw = unity_MatrixV[0].xyzw * unity_ObjectToWorld[3].xxxx + r1.xyzw;
  r1.xyzw = unity_MatrixV[2].xyzw * unity_ObjectToWorld[3].zzzz + r1.xyzw;
  r1.xyzw = unity_MatrixV[3].xyzw * unity_ObjectToWorld[3].wwww + r1.xyzw;
  r0.xyzw = r1.xyzw * v0.wwww + r0.xyzw;
  o8.xyzw = r0.xyzw;
  o10.xyz = r0.xyz;
  o10.w = 0;
  return;
}
