// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 102b2b20e41e5d15-vs.txt
// 3DMigoto: 102b2b20e41e5d15 | Matched 2 variants of 1 shaders: UWE/Particles/UBER
//
//       Unity headers extracted from UWE_Particles_UBER
//       Shader "UWE/Particles/UBER" {
//         CustomEditor "ParticlesShaderGUI"
//         SubShader 1/1 {
//           Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="Vertex" "QUEUE"="Transparent+101" "RenderType"="Transparent" }
//           Pass 1/1 {
//             Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="Vertex" "QUEUE"="Transparent+101" "RenderType"="Transparent" }
//             ZWrite Off
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from UWE_Particles_UBER:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201609010 59 0 0
//      undeciphered1a: 5
// 2:   Keywords { "FX_DEFORM" "WBOIT" "FX_TRAILNOISE" "FX_SOFTEDGES" "FX_ADDFOG" "FX_FORCELIGHT_VERTEX" }
// 1:   Keywords { "FX_DEFORM" "WBOIT" "FX_TRAILNOISE" "FX_SOFTEDGES" "FX_ADDFOG" }
//      undeciphered2: 1 0 4 0 0 0
//      undeciphered3: 15 4 0 0 2 1 3 4 1 2
//      ConstBuffer "$Globals" 576
//      Float 404 [_UWE_EditorTime]
//      Vector 528 [_Scale]
//      Vector 544 [_Frequency]
//      Float 560 [_Speed]
//      Float 564 [_RandPhase]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityPerDraw" 160
//      Matrix 0 [unity_ObjectToWorld]
//      Matrix 64 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 384
//      Matrix 144 [unity_MatrixV]
//      Matrix 272 [unity_MatrixVP]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerDraw" 2
//      BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:53:30 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// NORMAL                   0   xyz         3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
// TEXCOORD                 3   xyzw        5     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[36], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[7], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xy
dcl_input v3.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.x, cb0[25].y, cb1[0].y
mul r0.y, cb0[35].y, l(1000.000000)
mad r0.x, r0.x, cb0[35].x, r0.y
mul r1.xyzw, v0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
add r0.yzw, r1.yyxz, r1.xxzy
add r0.yzw, r1.zzyx, r0.yyzw
mov o5.xyzw, r1.xyzw
mad r0.xyz, r0.yzwy, l(0.333333343, 0.333333343, 0.333333343, 0.000000), -r0.xxxx
mad r0.xyz, r0.xyzx, cb0[34].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
frc r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r1.xyz, |r0.xyzx|, |r0.xyzx|
mad r0.xyz, -|r0.xyzx|, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
mad r0.xyz, r1.xyzx, r0.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mul r0.xyz, r0.xyzx, cb0[33].xyzx
mul r1.xyz, r0.yyyy, cb2[5].xyzx
mad r0.xyw, cb2[4].xyxz, r0.xxxx, r1.xyxz
mad r0.xyz, cb2[6].xyzx, r0.zzzz, r0.xywx
add r0.w, -v1.w, l(1.000000)
mad r0.xyz, r0.wwww, r0.xyzx, v0.xyzx
mul r1.xyzw, r0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb2[3].xyzw
mul r2.xyzw, r1.yyyy, cb3[18].xyzw
mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
mad r2.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
mov o0.xyzw, r2.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 102b2b20e41e5d15-vs.txt
ne r5.w, r2.w, l(1.0)
if_nz r5.w
  add r5.w, r2.w, -r5.y
  mad r2.x, r5.w, r5.x, r2.x
endif

mov o1.xyzw, v1.xyzw
mov o2.xy, v2.xyxx
mov o2.zw, v3.xxxy
mul r3.xyz, cb2[1].yyyy, cb3[10].xyzx
mad r3.xyz, cb3[9].xyzx, cb2[1].xxxx, r3.xyzx
mad r3.xyz, cb3[11].xyzx, cb2[1].zzzz, r3.xyzx
mad r3.xyz, cb3[12].xyzx, cb2[1].wwww, r3.xyzx
mul r3.xyz, r0.yyyy, r3.xyzx
mul r4.xyz, cb2[0].yyyy, cb3[10].xyzx
mad r4.xyz, cb3[9].xyzx, cb2[0].xxxx, r4.xyzx
mad r4.xyz, cb3[11].xyzx, cb2[0].zzzz, r4.xyzx
mad r4.xyz, cb3[12].xyzx, cb2[0].wwww, r4.xyzx
mad r0.xyw, r4.xyxz, r0.xxxx, r3.xyxz
mul r3.xyz, cb2[2].yyyy, cb3[10].xyzx
mad r3.xyz, cb3[9].xyzx, cb2[2].xxxx, r3.xyzx
mad r3.xyz, cb3[11].xyzx, cb2[2].zzzz, r3.xyzx
mad r3.xyz, cb3[12].xyzx, cb2[2].wwww, r3.xyzx
mad r0.xyz, r3.xyzx, r0.zzzz, r0.xywx
mul r3.xyz, cb2[3].yyyy, cb3[10].xyzx
mad r3.xyz, cb3[9].xyzx, cb2[3].xxxx, r3.xyzx
mad r3.xyz, cb3[11].xyzx, cb2[3].zzzz, r3.xyzx
mad r3.xyz, cb3[12].xyzx, cb2[3].wwww, r3.xyzx
mad o3.xyz, r3.xyzx, v0.wwww, r0.xyzx
mov o3.w, v3.z
mul r0.x, r1.y, cb3[10].z
mad r0.x, cb3[9].z, r1.x, r0.x
mad r0.x, cb3[11].z, r1.z, r0.x
mad r0.x, cb3[12].z, r1.w, r0.x
mov o4.z, -r0.x
mul r0.x, r2.y, cb1[5].x
mul r0.w, r0.x, l(0.500000)
mul r0.xz, r2.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mov o4.w, r2.w
add o4.xy, r0.zzzz, r0.xwxx
ret 
// Approximately 0 instruction slots used