// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed d4290050bbfba360-vs.txt
// 3DMigoto: d4290050bbfba360 | Matched 2 variants of 1 shaders: Unlit/FX_WarpTube
//
//       Unity headers extracted from Unlit_FX_WarpTube
//       Shader "Unlit/FX_WarpTube" {
//         SubShader 1/1 {
//           LOD 100
//           Tags { "QUEUE"="Transparent" "RenderType"="Transparent+80" }
//           Pass 1/1 {
//             Tags { "QUEUE"="Transparent" "RenderType"="Transparent+80" }
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Unlit_FX_WarpTube:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201609010 32 0 0
//      undeciphered1a: 3
// 2:   Keywords { "DETAILONLY" }
//      undeciphered2: 1 1 4 1 0 0
//      undeciphered3: 11 3 0 0 1 2 3 4
//      ConstBuffer "$Globals" 272
//      Vector 80 [_DeformTex_ST]
//      Vector 96 [_DeformStrength]
//      Float 116 [_MainOffset]
//      Vector 128 [_DeformSpeed]
//      Float 160 [_DeformNormalStrength]
//      Vector 176 [_SinWaveFrequency]
//      Vector 192 [_SinWaveSpeed]
//      Vector 208 [_SinWaveStrength]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityPerDraw" 160
//      Matrix 0 [unity_ObjectToWorld]
//      Matrix 64 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 384
//      Matrix 272 [unity_MatrixVP]
//      SetTexture 0 [_DeformTex] 2D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerDraw" 2
//      BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:59:45 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// NORMAL                   0   xyz         1     NONE   float   xyz 
// SV_POSITION              0   xyzw        2      POS   float   xyzw
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_constantbuffer cb3[24], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xy
dcl_output o0.xy
dcl_output o1.xyz
dcl_output_siv o2.xyzw, position
dcl_output o3.xyz
dcl_output o4.xyz
dcl_temps 5
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed d4290050bbfba360-vs.txt

mul r3.w, -r3.x, r3.y
mad r4.xyz, -r3.wwww, cb10[0].xyzw, cb1[4].xyzw

mov o0.xy, v2.xyxx
mad r0.xy, cb0[8].xyxx, cb0[7].yyyy, v2.xyxx
mad r0.xy, r0.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample_l r0.xyzw, r0.xyxx, t0.xyzw, s0, l(0.000000)
mad r0.xy, r0.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r0.xyxx, r0.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r0.z, r0.w
mul r0.xyz, r0.xyzx, v1.xyzx
mul r0.xyz, r0.xyzx, v2.yyyy
mad o1.xyz, r0.xyzx, cb0[10].xxxx, v1.xyzx
mad r0.xyz, r0.xyzx, cb0[6].xyzx, v0.xyzx
mul r1.xy, cb0[7].yyyy, cb0[12].xyxx
mad r1.xy, r0.zzzz, cb0[11].xyxx, r1.xyxx
sincos r1.xy, null, r1.xyxx
mul r1.xy, r0.zzzz, r1.xyxx
mad r0.xy, r1.xyxx, cb0[13].xyxx, r0.xyxx
mul r1.xyzw, r0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb2[3].xyzw
mul r2.xyzw, r1.yyyy, cb3[18].xyzw
mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
mad o2.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
mov o3.xyz, r0.xyzx
mul r1.xyz, r4.yyyy, cb2[5].xyzx
mad r1.xyz, cb2[4].xyzx, r4.xxxx, r1.xyzx
mad r1.xyz, cb2[6].xyzx, r4.zzzz, r1.xyzx
add r1.xyz, r1.xyzx, cb2[7].xyzx
add r0.xyz, -r0.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o4.xyz, r0.wwww, r0.xyzx
ret 
// Approximately 0 instruction slots used