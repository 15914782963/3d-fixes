// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed e8931ec5653261d0-vs.txt
// 3DMigoto: e8931ec5653261d0 |    Unity headers extracted from Hidden_uSky_Stars
//    Shader "Hidden/uSky/Stars" {
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Geometry+502" "RenderType"="Background" }
//        Pass 1/1 {
//          Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Geometry+502" "RenderType"="Background" }
//          ZWrite Off
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hidden_uSky_Stars:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201609010 35 0 0
//   undeciphered1a: 4
//   undeciphered2: 1 0 4 0 0 0
//   undeciphered3: 13 3 0 0 2 1 3 4
//   ConstBuffer "$Globals" 656
//   Float 580 [StarIntensity]
//   Matrix 592 [rotationMatrix]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 48 [unity_DeltaTime]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityPerDraw" 160
//   Matrix 0 [unity_ObjectToWorld]
//   ConstBuffer "UnityPerFrame" 384
//   Matrix 272 [unity_MatrixVP]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 17:00:22 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
//
vs_4_0
dcl_immediateConstantBuffer { { 0.897907794, -0.347608536, 0, 0},
                              { 0.550299287, 0.273586661, 0, 0},
                              { 0.823886, 0.0988530666, 0, 0},
                              { 0.922739, -0.122108862, 0, 0},
                              { 0.800630152, -0.0889568031, 0, 0},
                              { 0.711673379, 0.158864424, 0, 0},
                              { 0.870537817, 0.0854845569, 0, 0},
                              { 0.956022382, -0.0581145398, 0, 0} }
dcl_constantbuffer cb0[40], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_constantbuffer cb3[24], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o3.xyz
dcl_temps 6
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed e8931ec5653261d0-vs.txt

mul r4.w, -r4.x, r4.y
mad r5.xyz, -r4.wwww, cb10[0].xyzw, cb1[4].xyzw

mul r0.xyz, v0.yyyy, cb0[38].xyzx
mad r0.xyz, cb0[37].xyzx, v0.xxxx, r0.xyzx
mad r0.xyz, cb0[39].xyzx, v0.zzzz, r0.xyzx
add r1.xyz, r0.yxzy, r5.yxzy
mul r2.xyzw, r1.xxxx, cb2[1].xyzw
mad r2.xyzw, cb2[0].xyzw, r1.yyyy, r2.xyzw
mad r2.xyzw, cb2[2].xyzw, r1.zzzz, r2.xyzw
mov_sat r1.x, r1.x
add r2.xyzw, r2.xyzw, cb2[3].xyzw
mul r3.xyzw, r2.yyyy, cb3[18].xyzw
mad r3.xyzw, cb3[17].xyzw, r2.xxxx, r3.xyzw
mad r3.xyzw, cb3[19].xyzw, r2.zzzz, r3.xyzw
mad o0.xyzw, cb3[20].xyzw, r2.wwww, r3.xyzw
mul r1.yz, v0.xxyx, l(0.000000, 256.000000, 256.000000, 0.000000)
frc r1.yz, r1.yyzy
add r0.w, r1.z, l(1.000000)
mad r1.z, cb1[0].x, l(2.000000), cb1[3].z
mad r0.w, r0.w, r1.z, r1.y
frc r0.w, r0.w
mul r0.w, r0.w, l(8.000000)
frc r1.y, r0.w
ftoi r0.w, r0.w
mul r1.y, r1.y, l(2.500000)
mad r0.w, r1.y, icb[r0.w + 0].y, icb[r0.w + 0].x
mad r1.y, v1.w, l(-3.940000), l(6.500000)
add r1.y, -r1.y, l(-1.440000)
mul r1.y, r1.y, l(0.928771198)
exp r1.y, r1.y
mul r2.w, r0.w, r1.y
mul r2.xyz, r2.wwww, v1.xyzx
mul r2.xyzw, r2.xyzw, cb0[36].yyyy
mul o1.xyzw, r1.xxxx, r2.xyzw
add r1.xy, v2.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul o2.xy, r1.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000)
mul r1.xyz, r0.yyyy, cb2[1].xyzx
mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
mad o3.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
ret 
// Approximately 0 instruction slots used