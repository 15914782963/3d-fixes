// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a5a824cb02716f92-ps.txt
// 3DMigoto: a5a824cb02716f92 |    Unity headers extracted from FX_WBOIT-SphereVolumeNoise
//    Shader "FX/WBOIT-SphereVolumeNoise" {
//      SubShader 1/1 {
//        LOD 200
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent+101" "RenderType"="Transparent" }
//        Pass 1/1 {
//          Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent+101" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from FX_WBOIT-SphereVolumeNoise:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 288 1 16
//   undeciphered1a: 12
//   undeciphered2: 1 4 2 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 496
//   Float 32 [_UweFogEnabled]
//   Float 36 [_UweAboveWaterFogStartDistance]
//   Vector 48 [_UweFogVsLightDirection] 3
//   Vector 80 [_UweFogLightColor]
//   Vector 96 [_UweTopAmbientColor] 3
//   Vector 128 [_UweVsWaterPlane]
//   Float 272 [_UweVolumeTextureSlices]
//   Float 276 [_UweExtinctionAndScatteringScale]
//   Float 280 [_UweSunAttenuationFactor]
//   Vector 288 [_UweFogMiePhaseConst] 3
//   Float 312 [_SkyFogDensity]
//   Vector 320 [_SkyFogColor] 3
//   Float 332 [settingsSampleDistance]
//   Float 336 [_WBOIT_WeightToggle]
//   Float 340 [_WBOIT_WeightSharpness]
//   Vector 352 [_Color]
//   Vector 368 [_NoiseScale]
//   Vector 384 [_NoiseSpeed]
//   Vector 400 [_NoiseOffset]
//   Float 416 [_UWE_EditorTime]
//   Float 420 [_Octaves]
//   Float 424 [_SeaLevel]
//   Float 452 [_UweLocalLightScalar]
//   Float 480 [_RadiusSqr]
//   Float 484 [_Visibility]
//   Matrix 144 [_UweCameraToVolumeMatrix]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 3
//   SetTexture 1 [_UweExtinctionTexture] 2D 0
//   SetTexture 2 [_UweScatteringTexture] 2D 1
//   SetTexture 3 [_UweEmissiveTexture] 2D 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:58:20 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xy w
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[31], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 14
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a5a824cb02716f92-ps.txt

mul r12.w, -r12.x, r12.y
mad r13.xyz, -r12.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, v1.xyzx, -r13.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r1.xyz, v3.xyzx, -v5.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, v5.xyzx, -r1.xyzx
dp3 r1.x, v5.xyzx, v5.xyzx
mad r1.x, -r0.w, r0.w, r1.x
ge r1.y, cb0[30].x, r1.x
add r1.x, -r1.x, cb0[30].x
sqrt r1.x, r1.x
add r2.y, r0.w, -r1.x
add r2.x, r0.w, r1.x
and r1.xy, r1.yyyy, r2.xyxx
ge r1.zw, r1.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
and r1.zw, r1.zzzw, l(0, 0, 0x3f800000, 0x3f800000)
mul r1.xy, r1.zwzz, r1.xyxx
div r1.zw, v2.xxxy, v2.wwww
sample r2.xyzw, r1.zwzz, t0.xyzw, s3
mad r0.w, cb1[7].z, r2.x, cb1[7].w
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
dp3 r1.z, v4.xyzx, v4.xyzx
rsq r1.w, r1.z
mul r2.xyz, r1.wwww, v4.xyzx
div r0.w, r0.w, r2.z
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
sqrt r0.w, r0.w
max r1.w, r1.y, r1.x
min r1.x, r1.y, r1.x
min r1.y, r0.w, r1.w
min r0.w, r0.w, r1.x
add r1.x, -r0.w, r1.y
mul r1.y, r1.x, l(0.333333343)
div_sat r1.x, r1.x, cb0[30].y
ne r1.w, cb0[2].x, l(0.000000)
if_nz r1.w
  sqrt r2.w, r1.z
  div r3.xyz, v4.xyzx, r2.wwww
  mul r4.xyz, r3.xyzx, cb0[20].wwww
  mul r5.xyz, r4.yyyy, cb0[10].xyzx
  mad r4.xyw, cb0[9].xyxz, r4.xxxx, r5.xyxz
  mad r4.xyz, cb0[11].xyzx, r4.zzzz, r4.xywx
  add_sat r4.xyz, r4.xyzx, cb0[12].xyzx
  div r5.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[17].x
  mad r3.w, r4.y, cb0[17].x, l(-0.500000)
  frc r4.y, r3.w
  add r3.w, r3.w, -r4.y
  add r3.w, r3.w, r4.z
  mul r4.w, r5.y, r3.w
  mov r5.x, l(0)
  add r5.xy, r4.xwxx, r5.xyxx
  sample_l r6.xyzw, r4.xwxx, t1.xyzw, s0, l(0.000000)
  sample_l r7.xyzw, r5.xyxx, t1.xyzw, s0, l(0.000000)
  add r7.xyzw, -r6.xyzw, r7.xyzw
  mad r6.xyzw, r4.yyyy, r7.wxyz, r6.wxyz
  dp3 r3.w, r3.xyzx, cb0[8].xyzx
  lt r4.z, l(0.000000), cb0[8].w
  if_nz r4.z
    lt r4.z, r3.w, l(-0.010000)
    not r5.z, r4.z
    div r5.w, -cb0[8].w, r3.w
    add r5.w, r5.w, cb0[2].y
    mul r7.x, -r2.w, cb0[19].z
    mul r7.x, r7.x, l(1.442695)
    exp r7.x, r7.x
    add r7.yzw, -cb0[20].xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
    mad r7.xyz, r7.xxxx, r7.yzwy, cb0[20].xyzx
    movc r6.x, r4.z, r5.w, cb0[2].y
    lt r5.w, r2.w, r6.x
    movc r4.z, r4.z, r5.w, l(-1)
    or r4.z, r5.z, r4.z
    mov r2.xyz, l(1.000000,1.000000,1.000000,0)
  else 
    div r5.z, -cb0[8].w, r3.w
    lt r5.w, l(0.000000), r5.z
    add r7.w, r2.w, -r5.z
    max r7.w, r7.w, l(0.000000)
    mul r7.w, -r7.w, cb0[19].z
    mul r7.w, r7.w, l(1.442695)
    exp r7.w, r7.w
    add r8.xyz, -cb0[20].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r8.xyz, r7.wwww, r8.xyzx, cb0[20].xyzx
    min r8.w, r2.w, r5.z
    mov r2.xyz, l(1.000000,1.000000,1.000000,0)
    movc r2.xyzw, r5.wwww, r8.xyzw, r2.xyzw
    mov r4.z, l(0)
  endif 
  if_z r4.z
    lt r4.z, r6.x, r2.w
    if_nz r4.z
      sample_l r8.xyzw, r4.xwxx, t2.xyzw, s1, l(0.000000)
      sample_l r9.xyzw, r5.xyxx, t2.xyzw, s1, l(0.000000)
      add r9.xyzw, -r8.xyzw, r9.xyzw
      mad r8.xyzw, r4.yyyy, r9.xyzw, r8.xyzw
      sample_l r9.xyzw, r4.xwxx, t3.xyzw, s2, l(0.000000)
      sample_l r5.xyzw, r5.xyxx, t3.xyzw, s2, l(0.000000)
      add r4.xzw, -r9.xxyz, r5.xxyz
      mad r4.xyz, r4.yyyy, r4.xzwx, r9.xyzx
      mul r5.xyz, r8.xyzx, cb0[17].yyyy
      mul r8.xyz, r6.yzwy, cb0[17].yyyy
      add r2.w, -r6.x, r2.w
      mul r9.xyz, r3.xyzx, r6.xxxx
      dp3 r3.x, r3.xyzx, -cb0[3].xyzx
      mad r3.x, -cb0[18].z, r3.x, cb0[18].y
      log r3.x, r3.x
      mul r3.x, r3.x, l(-1.500000)
      exp r3.x, r3.x
      mul r3.x, r3.x, cb0[18].x
      mul r3.xyz, r3.xxxx, r5.xyzx
      dp3 r4.w, cb0[3].xyzx, cb0[8].xyzx
      max r4.w, r4.w, l(0.000100)
      mad r5.xyz, cb0[5].xyzx, cb0[5].wwww, cb0[6].xyzx
      mul r5.xyz, r8.wwww, r5.xyzx
      mul r10.xyz, r8.xyzx, cb0[17].zzzz
      mul r11.xyz, r3.wwww, r10.xyzx
      div r11.xyz, r11.xyzx, r4.wwww
      mad r6.xyz, -r6.yzwy, cb0[17].yyyy, r11.xyzx
      dp3 r3.w, r9.xyzx, cb0[8].xyzx
      add r3.w, r3.w, cb0[8].w
      mul r9.xyz, r3.wwww, r10.xyzx
      div r9.xyz, r9.xyzx, r4.wwww
      mad r10.xyz, r2.wwww, r6.xyzx, r9.xyzx
      mul r10.xyz, r10.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r10.xyz, r10.xyzx
      mul r9.xyz, r9.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r9.xyz, r9.xyzx
      add r9.xyz, -r9.xyzx, r10.xyzx
      div r6.xyz, r9.xyzx, r6.xyzx
      mul r3.xyz, r3.xyzx, r5.xyzx
      mul r3.xyz, r6.xyzx, r3.xyzx
      max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      mul r5.xyz, r8.xyzx, -r2.wwww
      mul r5.xyz, r5.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r5.xyz, r5.xyzx
      mul r6.xyz, r2.wwww, -r8.xyzx
      mul r6.xyz, r6.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r6.xyz, r6.xyzx
      add r6.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      div r6.xyz, r6.xyzx, r8.xyzx
      mul r4.xyz, r4.xyzx, r6.xyzx
      max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r3.xyz, r3.xyzx, r4.xyzx
      mad r7.xyz, r2.xyzx, r5.xyzx, r3.xyzx
    else 
      mov r7.xyz, r2.xyzx
    endif 
  endif 
else 
  mov r7.xyz, l(1.000000,1.000000,1.000000,0)
endif 
add r2.x, r7.y, r7.x
add r2.x, r7.z, r2.x
add r2.y, cb0[26].x, cb1[0].y
mad r2.z, r2.y, cb0[24].w, cb0[25].w
mov r3.y, l(0)
mov r3.x, r2.x
mov r2.w, l(1)
loop 
  ige r3.z, r2.w, l(3)
  breakc_nz r3.z
  itof r3.z, r2.w
  mad r3.z, r1.y, r3.z, r0.w
  mad r4.xyz, r0.xyzx, r3.zzzz, r13.xyzx
  mul r4.xzw, r4.xxyz, cb0[23].xxyz
  imul null, r3.w, r2.w, l(20)
  itof r3.w, r3.w
  mad r5.xyz, r2.yyyy, cb0[24].xyzx, r4.xzwx
  add r5.xyz, r5.xyzx, cb0[25].xyzx
  mul r5.xyz, r5.xyzx, l(2.200000, 2.200000, 2.200000, 0.000000)
  add r3.w, r3.w, l(20.000000)
  div r5.xyz, r5.xyzx, r3.wwww
  mov r6.xyz, r5.xyzx
  mov r8.xyz, r5.xyzx
  mov r3.w, l(1.400000)
  mov r4.xw, l(0,0,0,0)
  loop 
    lt r5.w, cb0[26].y, r4.w
    breakc_nz r5.w
    add r9.xy, r8.xyxx, r8.xyxx
    frc r9.xyz, r9.yxxy
    add r9.xyz, r9.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    mad r9.xyz, r8.zzyz, l(2.000000, 2.000000, 2.000000, 0.000000), |r9.xyzx|
    frc r9.xyz, r9.xyzx
    add r9.xyz, r9.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    mad r9.xyz, r2.zzzz, l(0.200000, 0.200000, 0.200000, 0.000000), |r9.xyzx|
    add r9.xyz, r6.xyzx, r9.xyzx
    mul r3.w, r3.w, l(1.500000)
    mul r6.xyz, r9.xyzx, l(1.200000, 1.200000, 1.200000, 0.000000)
    frc r5.w, r6.y
    add r5.w, r5.w, l(-0.500000)
    mad r5.w, r9.x, l(1.200000), |r5.w|
    frc r5.w, r5.w
    add r5.w, r5.w, l(-0.500000)
    mad r5.w, r9.z, l(1.200000), |r5.w|
    frc r5.w, r5.w
    add r5.w, r5.w, l(-0.500000)
    div r5.w, |r5.w|, r3.w
    add r4.x, r4.x, r5.w
    mad r8.xyz, r8.xyzx, l(1.800000, 1.800000, 1.800000, 0.000000), l(0.140000, 0.140000, 0.140000, 0.000000)
    add r4.w, r4.w, l(1.000000)
  endloop 
  mad r3.w, r4.z, l(0.100000), -cb0[26].z
  mul_sat r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.010000, 1.42857146)
  mad r4.z, r3.w, l(-2.000000), l(3.000000)
  mul r3.w, r3.w, r3.w
  mad r3.w, -r4.z, r3.w, l(1.000000)
  mul r3.w, r3.w, r4.x
  add r3.z, -r3.z, l(1.000000)
  mul r3.z, r3.w, r3.z
  mad r3.y, r3.z, l(0.333333343), r3.y
  mul r3.z, r4.y, l(0.100000)
  min r3.z, r3.z, l(0.000000)
  add r3.x, r3.z, r3.x
  iadd r2.w, r2.w, l(1)
endloop 
mul r0.x, r1.x, r1.x
mul r0.x, r0.x, r3.y
mad r0.yzw, r0.xxxx, r2.xxxx, r7.xxyz
mov_sat r3.x, r3.x
add r2.xyz, -r0.yzwy, cb0[22].xyzx
mad r0.yzw, r3.xxxx, r2.xxyz, r0.yyzw
mul_sat r0.x, r0.x, l(8.000000)
mul r2.w, r0.x, cb0[22].w
max r0.x, cb0[28].y, l(0.050000)
min r0.x, r0.x, l(1.000000)
mul r3.xyz, r0.xxxx, r0.yzwy
if_nz r1.w
  sqrt r3.w, r1.z
  div r1.xyz, v4.xyzx, r3.wwww
  mul r4.xyz, r1.xyzx, cb0[20].wwww
  mul r5.xyz, r4.yyyy, cb0[10].xyzx
  mad r4.xyw, cb0[9].xyxz, r4.xxxx, r5.xyxz
  mad r4.xyz, cb0[11].xyzx, r4.zzzz, r4.xywx
  add_sat r4.xyz, r4.xyzx, cb0[12].xyzx
  div r5.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[17].x
  mad r1.w, r4.y, cb0[17].x, l(-0.500000)
  frc r4.y, r1.w
  add r1.w, r1.w, -r4.y
  add r1.w, r1.w, r4.z
  mul r4.w, r5.y, r1.w
  mov r5.x, l(0)
  add r5.xy, r4.xwxx, r5.xyxx
  sample_l r6.xyzw, r4.xwxx, t1.xyzw, s0, l(0.000000)
  sample_l r7.xyzw, r5.xyxx, t1.xyzw, s0, l(0.000000)
  add r7.xyzw, -r6.xyzw, r7.xyzw
  mad r6.xyzw, r4.yyyy, r7.wxyz, r6.wxyz
  dp3 r1.w, r1.xyzx, cb0[8].xyzx
  lt r4.z, l(0.000000), cb0[8].w
  if_nz r4.z
    lt r4.z, r1.w, l(-0.010000)
    not r5.z, r4.z
    div r5.w, -cb0[8].w, r1.w
    add r5.w, r5.w, cb0[2].y
    mul r7.x, -r3.w, cb0[19].z
    mul r7.x, r7.x, l(1.442695)
    exp r7.x, r7.x
    mad r7.yzw, r0.yyzw, r0.xxxx, -cb0[20].xxyz
    mad r7.xyz, r7.xxxx, r7.yzwy, cb0[20].xyzx
    movc r6.x, r4.z, r5.w, cb0[2].y
    lt r5.w, r3.w, r6.x
    movc r4.z, r4.z, r5.w, l(-1)
    or r4.z, r5.z, r4.z
    mov r5.z, r2.w
    mov r8.xyz, r3.xyzx
    mov r8.w, r3.w
    mov r3.xyz, r7.xyzx
  else 
    div r5.w, -cb0[8].w, r1.w
    lt r7.w, l(0.000000), r5.w
    add r9.x, r3.w, -r5.w
    max r9.x, r9.x, l(0.000000)
    mul r9.x, -r9.x, cb0[19].z
    mul r9.x, r9.x, l(1.442695)
    exp r9.x, r9.x
    mad r0.xyz, r0.yzwy, r0.xxxx, -cb0[20].xyzx
    mad r0.xyz, r9.xxxx, r0.xyzx, cb0[20].xyzx
    min r0.w, r3.w, r5.w
    movc r8.xyzw, r7.wwww, r0.xyzw, r3.xyzw
    mov r4.z, l(0)
  endif 
  if_z r4.z
    lt r0.x, r6.x, r8.w
    if_nz r0.x
      sample_l r0.xyzw, r4.xwxx, t2.xyzw, s1, l(0.000000)
      sample_l r7.xyzw, r5.xyxx, t2.xyzw, s1, l(0.000000)
      add r7.xyzw, -r0.xyzw, r7.xyzw
      mad r0.xyzw, r4.yyyy, r7.xyzw, r0.xyzw
      sample_l r7.xyzw, r4.xwxx, t3.xyzw, s2, l(0.000000)
      sample_l r9.xyzw, r5.xyxx, t3.xyzw, s2, l(0.000000)
      add r4.xzw, -r7.xxyz, r9.xxyz
      mad r4.xyz, r4.yyyy, r4.xzwx, r7.xyzx
      mul r0.xyz, r0.xyzx, cb0[17].yyyy
      mul r5.xyw, r6.yzyw, cb0[17].yyyy
      add r3.w, -r6.x, r8.w
      mul r7.xyz, r1.xyzx, r6.xxxx
      dp3 r1.x, r1.xyzx, -cb0[3].xyzx
      mad r1.x, -cb0[18].z, r1.x, cb0[18].y
      log r1.x, r1.x
      mul r1.x, r1.x, l(-1.500000)
      exp r1.x, r1.x
      mul r1.x, r1.x, cb0[18].x
      mul r0.xyz, r0.xyzx, r1.xxxx
      dp3 r1.x, cb0[3].xyzx, cb0[8].xyzx
      max r1.x, r1.x, l(0.000100)
      mad r9.xyz, cb0[5].xyzx, cb0[5].wwww, cb0[6].xyzx
      mul r9.xyz, r0.wwww, r9.xyzx
      mul r10.xyz, r5.xywx, cb0[17].zzzz
      mul r1.yzw, r1.wwww, r10.xxyz
      div r1.yzw, r1.yyzw, r1.xxxx
      mad r1.yzw, -r6.yyzw, cb0[17].yyyy, r1.yyzw
      dp3 r0.w, r7.xyzx, cb0[8].xyzx
      add r0.w, r0.w, cb0[8].w
      mul r6.xyz, r0.wwww, r10.xyzx
      div r6.xyz, r6.xyzx, r1.xxxx
      mad r7.xyz, r3.wwww, r1.yzwy, r6.xyzx
      mul r7.xyz, r7.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r7.xyz, r7.xyzx
      mul r6.xyz, r6.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r6.xyz, r6.xyzx
      add r6.xyz, -r6.xyzx, r7.xyzx
      div r1.xyz, r6.xyzx, r1.yzwy
      mul r0.xyz, r0.xyzx, r9.xyzx
      mul r0.xyz, r1.xyzx, r0.xyzx
      max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      mul r1.xyz, r5.xywx, -r3.wwww
      mul r1.xyz, r1.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r1.xyz, r1.xyzx
      mul r6.xyz, r3.wwww, -r5.xywx
      mul r6.xyz, r6.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r6.xyz, r6.xyzx
      add r6.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      div r5.xyw, r6.xyxz, r5.xyxw
      mul r4.xyz, r4.xyzx, r5.xywx
      max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      mad_sat r0.w, -r3.w, l(0.080000), l(10.000000)
      mul r2.w, r0.w, r2.w
      add r0.xyz, r0.xyzx, r4.xyzx
      mad r3.xyz, r8.xyzx, r1.xyzx, r0.xyzx
    else 
      mov r3.xyz, r8.xyzx
    endif 
  else 
    mov r2.w, r5.z
  endif 
endif 
mul r0.x, v4.z, cb0[21].y
mul r0.x, r0.x, l(1.442695)
exp r0.x, r0.x
max r0.x, r0.x, l(0.010000)
min r0.x, r0.x, l(1.000000)
mad r0.x, r2.w, r0.x, l(-1.000000)
mad r0.x, cb0[21].x, r0.x, l(1.000000)
mul r0.yzw, r2.wwww, r3.xxyz
mul r2.xyz, r0.xxxx, r0.yzwy
mul o2.x, r0.x, r2.w
mov o0.xyzw, l(0,0,0,0)
mov o1.xyzw, r2.xyzw
mov o2.yzw, l(0,0,0,0)
ret 
// Approximately 0 instruction slots used