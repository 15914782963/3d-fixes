// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed bda6af2b349760f2-ps.txt
// 3DMigoto: bda6af2b349760f2 |    Unity headers extracted from UWE_SIG Alpha Border
//    Shader "UWE/SIG Alpha Border" {
//      Fallback "Specular"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 2/9 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from UWE_SIG Alpha Border:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 78 4 3
//   undeciphered1a: 5
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 5 4 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 448
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Vector 64 [_Color]
//   Float 80 [_UweFogEnabled]
//   Float 84 [_UweAboveWaterFogStartDistance]
//   Vector 176 [_UweVsWaterPlane]
//   Float 320 [_UweVolumeTextureSlices]
//   Float 324 [_UweExtinctionAndScatteringScale]
//   Float 380 [settingsSampleDistance]
//   Float 432 [_Cutoff]
//   Matrix 192 [_UweCameraToVolumeMatrix]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_BumpMap] 2D 2
//   SetTexture 2 [_SIGMap] 2D 3
//   SetTexture 3 [_UweExtinctionTexture] 2D 4
//   SetTexture 4 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:59:00 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy  
// TEXCOORD                 7     zw        2     NONE   float       
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[28], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 7
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed bda6af2b349760f2-ps.txt

mul r5.w, -r5.x, r5.y
mad r6.xyz, -r5.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v6.xyzx, r6.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
sample r1.xyzw, v1.xyxx, t0.xyzw, s1
mul r2.xyzw, r1.xyzw, cb0[4].xyzw
sample r3.xyzw, v1.zwzz, t1.xyzw, s2
mad r1.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r3.x, r1.xyxx, r1.xyxx
min r3.x, r3.x, l(1.000000)
add r3.x, -r3.x, l(1.000000)
sqrt r1.z, r3.x
sample r3.xyzw, v2.xyxx, t2.xyzw, s3
max r3.y, r3.z, l(0.010000)
mad r1.w, r1.w, cb0[4].w, -cb0[27].x
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
eq r1.w, cb3[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb3[0].y, l(1.000000)
  mul r4.xyz, v6.yyyy, cb3[2].xyzx
  mad r4.xyz, cb3[1].xyzx, v6.xxxx, r4.xyzx
  mad r4.xyz, cb3[3].xyzx, v6.zzzz, r4.xyzx
  add r4.xyz, r4.xyzx, cb3[4].xyzx
  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  add r4.xyz, r4.xyzx, -cb3[6].xyzx
  mul r4.yzw, r4.xxyz, cb3[5].xxyz
  mad r1.w, r4.y, l(0.250000), l(0.750000)
  mad r3.z, cb3[0].z, l(0.500000), l(0.750000)
  max r4.x, r1.w, r3.z
  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
else 
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r1.w, r4.xyzw, cb2[45].xyzw
dp3 r4.x, v3.xyzx, r1.xyzx
dp3 r4.y, v4.xyzx, r1.xyzx
dp3 r4.z, v5.xyzx, r1.xyzx
mul r1.xyz, r1.wwww, cb0[2].xyzx
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r4.xyzx, cb2[0].xyzx
dp3 r0.x, r4.xyzx, r0.xyzx
max r0.xw, r0.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.y, r3.y, l(128.000000)
log r0.x, r0.x
mul r0.x, r0.x, r0.y
exp r0.x, r0.x
mul r0.x, r3.x, r0.x
mul r3.xyz, r1.xyzx, r2.xyzx
mul r1.xyz, r1.xyzx, cb0[3].xyzx
mul r0.xyz, r0.xxxx, r1.xyzx
mad r2.xyz, r3.xyzx, r0.wwww, r0.xyzx
ne r0.x, cb0[5].x, l(0.000000)
if_nz r0.x
  dp3 r0.x, v7.xyzx, v7.xyzx
  sqrt r0.y, r0.x
  div r1.xyz, v7.xyzx, r0.yyyy
  mul r3.xyz, r1.xyzx, cb0[23].wwww
  mul r4.xyz, r3.yyyy, cb0[13].xyzx
  mad r3.xyw, cb0[12].xyxz, r3.xxxx, r4.xyxz
  mad r3.xyz, cb0[14].xyzx, r3.zzzz, r3.xywx
  add_sat r3.xyz, r3.xyzx, cb0[15].xyzx
  div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[20].x
  mad r0.z, r3.y, cb0[20].x, l(-0.500000)
  frc r0.w, r0.z
  add r0.z, -r0.w, r0.z
  add r0.z, r0.z, r3.z
  mul r3.w, r4.y, r0.z
  mov r4.x, l(0)
  add r3.yz, r3.xxwx, r4.xxyx
  sample_l r4.xyzw, r3.xwxx, t3.xyzw, s4, l(0.000000)
  sample_l r3.xyzw, r3.yzyy, t3.xyzw, s4, l(0.000000)
  add r3.xyzw, -r4.xyzw, r3.xyzw
  mad r3.xyzw, r0.wwww, r3.wxyz, r4.wxyz
  mul r4.xyz, r3.yzwy, cb0[20].yyyy
  dp3 r0.z, r1.xyzx, cb0[11].xyzx
  lt r0.w, l(0.000000), cb0[11].w
  lt r1.x, r0.z, l(0.000000)
  not r1.y, r1.x
  div r0.z, -cb0[11].w, r0.z
  add r1.z, r0.z, cb0[5].y
  movc r0.x, r1.x, r1.z, cb0[5].y
  lt r1.x, l(0.000000), r0.z
  min r0.z, r0.z, r0.y
  movc r3.y, r1.x, r0.z, r0.y
  movc r0.xy, r0.wwww, r0.xyxx, r3.xyxx
  and r0.z, r0.w, r1.y
  lt r0.w, r0.x, r0.y
  add r0.x, -r0.x, r0.y
  mul r1.xyz, r4.xyzx, -r0.xxxx
  mul r1.xyz, r1.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
  exp r1.xyz, r1.xyzx
  mul r1.xyz, r1.xyzx, r2.xyzx
  movc r0.xyw, r0.wwww, r1.xyxz, r2.xyxz
  movc r2.xyz, r0.zzzz, r2.xyzx, r0.xywx
endif 
mov o0.xyzw, r2.xyzw
ret 
// Approximately 0 instruction slots used