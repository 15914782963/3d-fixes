// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9deb93ee480eee47-ps.txt
// 3DMigoto: 9deb93ee480eee47 | Matched 4 variants of 1 shaders: MarmosetUBER
//
//       Unity headers extracted from MarmosetUBER
//       Shader "MarmosetUBER" {
//         Fallback "VertexLit"
//         SubShader 1/1 {
//           Tags { "RenderType"="Opaque" }
//           Pass 1/3 {
//             Name "DEFERRED"
//             Tags { "LIGHTMODE"="DEFERRED" "RenderType"="Opaque" }
//             ZWrite [_ZWrite]
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from MarmosetUBER:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 194 10 2
//      undeciphered1a: 12
// 4:   Keywords { "UNITY_HDR_ON" "MARMO_SPECMAP" "UWE_WAVING" "MARMO_EMISSION" "FX_BUILDING" "FX_BURST" }
// 8:   Keywords { "UNITY_HDR_ON" "MARMO_SPECMAP" "UWE_WAVING" "MARMO_EMISSION" "FX_BUILDING" "MARMO_ALPHA_CLIP" "FX_BURST" }
// 2:   Keywords { "UNITY_HDR_ON" "MARMO_SPECMAP" "UWE_WAVING" "MARMO_EMISSION" "FX_BUILDING" "MARMO_ALPHA_CLIP" }
// 1:   Keywords { "UNITY_HDR_ON" "MARMO_SPECMAP" "UWE_WAVING" "MARMO_EMISSION" "FX_BUILDING" }
//      undeciphered2: 1 7 4 7 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 1168
//      Vector 368 [_SpecColor]
//      Float 384 [_EnableSimpleGlass]
//      Vector 400 [_Color]
//      Vector 416 [_MainTex_ST]
//      Float 432 [_UWE_EditorTime]
//      Float 436 [_UwePowerLoss]
//      Float 440 [_UweLocalLightScalar]
//      Float 444 [_IBLreductionAtNight]
//      Vector 448 [_BumpMap_ST]
//      Float 464 [_GlowStrengthNight]
//      Float 468 [_EmissionLMNight]
//      Float 572 [_minYpos]
//      Float 576 [_maxYpos]
//      Vector 608 [_BorderColor]
//      Float 624 [_NoiseThickness]
//      Float 628 [_NoiseStr]
//      Vector 640 [_BuildParams]
//      Float 656 [_BuildLinear]
//      Float 660 [_Built]
//      Float 664 [_SubConstructProgress]
//      Float 688 [_Gray]
//      Float 692 [_Brightness]
//      Float 696 [_SpecInt]
//      Float 700 [_Shininess]
//      Float 704 [_Fresnel]
//      Vector 720 [_SpecTex_ST]
//      Vector 736 [_Illum_ST]
//      Vector 752 [_GlowColor]
//      Float 768 [_GlowStrength]
//      Float 772 [_EmissionLM]
//      Float 780 [_Cutoff]
//      Float 784 [_AffectedByDayNightCycle]
//      Float 788 [_Outdoors]
//      Vector 800 [_ExposureIBL]
//      Vector 824 [_UniformOcclusion] 2
//      Vector 1008 [_SH0] 3
//      Vector 1024 [_SH1] 3
//      Vector 1040 [_SH2] 3
//      Vector 1056 [_SH3] 3
//      Vector 1072 [_SH4] 3
//      Vector 1088 [_SH5] 3
//      Vector 1104 [_SH6] 3
//      Vector 1120 [_SH7] 3
//      Vector 1136 [_SH8] 3
//      Matrix 832 [_SkyMatrix]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 752
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_MainTex] 2D 1
//      SetTexture 1 [_BumpMap] 2D 2
//      SetTexture 2 [_SpecTex] 2D 4
//      SetTexture 3 [_Illum] 2D 5
//      SetTexture 4 [_SpecCubeIBL] CUBE 6
//      SetTexture 5 [_EmissiveTex] 2D 3
//      SetTexture 6 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:58:02 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyz         8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[72], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 14
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9deb93ee480eee47-ps.txt

mul r12.w, -r12.x, r12.y
mad r13.xyz, -r12.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v6.xyzx, v6.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v6.xyzx
add r0.w, cb0[27].x, cb1[0].y
add r1.xy, -cb0[27].zyzz, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r1.x, r1.x, cb0[49].x
add r1.zw, cb0[29].xxxy, -cb0[48].xxxy
mad r1.zw, r1.xxxx, r1.zzzw, cb0[48].xxxy
mul r2.xy, cb0[50].xyxx, cb0[51].zwzz
mad r2.zw, v4.xxxy, cb0[26].xxxy, cb0[26].zzzw
sample r3.xyzw, r2.zwzz, t0.xyzw, s1
mul r3.xyz, r3.xyzx, cb0[25].xyzx
mul r3.xyz, r3.xyzx, cb0[50].wwww
mad r2.z, r3.w, cb0[25].w, l(-1.000000)
mad r2.z, cb0[24].x, r2.z, l(1.000000)
mul r3.xyw, r2.zzzz, r3.xyxz
max r1.x, r1.x, l(0.000000)
min r1.x, r1.x, cb0[27].w
mad r2.xy, r1.xxxx, -r2.xyxx, r2.xyxx
mad r4.xy, v4.xyxx, cb0[28].xyxx, cb0[28].zwzz
sample r4.xyzw, r4.xyxx, t1.xyzw, s2
mad r4.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.x, r4.xyxx, r4.xyxx
min r1.x, r1.x, l(1.000000)
add r1.x, -r1.x, l(1.000000)
sqrt r4.z, r1.x
dp3 r1.x, r4.xyzx, r4.xyzx
rsq r1.x, r1.x
mul r4.xyz, r1.xxxx, r4.xyzx
dp3 r5.x, v1.xyzx, r4.xyzx
dp3 r5.y, v2.xyzx, r4.xyzx
dp3 r5.z, v3.xyzx, r4.xyzx
mad r6.xy, v4.xyxx, cb0[45].xyxx, cb0[45].zwzz
sample r6.xyzw, r6.xyxx, t2.xyzw, s4
dp3 r0.x, r4.xyzx, r0.xyzx
mad_sat r0.x, |r0.x|, -cb0[44].x, l(1.250000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.y, r0.x
mul r0.x, r0.x, cb0[43].z
mul r0.xyz, r0.xxxx, r6.xyzx
mul r0.xyz, r0.xyzx, cb0[23].xyzx
mul r0.xyz, r0.xyzx, cb0[50].wwww
add r1.x, -r6.w, l(1.000000)
mad r4.xy, -r1.xxxx, r1.xxxx, l(1.000000, 8.000000, 0.000000, 0.000000)
mad r1.x, -cb0[43].w, r4.x, r4.y
add r2.w, -r1.x, l(8.000000)
exp r2.w, r2.w
mad r4.x, r2.w, l(0.159154937), l(0.318309873)
mul r4.xyz, r0.xyzx, r4.xxxx
mad r6.xy, v4.xyxx, cb0[46].xyxx, cb0[46].zwzz
sample r6.xyzw, r6.xyxx, t3.xyzw, s5
mul r6.xyzw, r2.zzzz, r6.xyzw
mul r6.xyz, r6.xyzx, cb0[47].xyzx
mul r6.xyz, r1.zzzz, r6.xyzx
mul r1.z, r1.w, r6.w
mul r7.xyz, r1.zzzz, r3.xywx
mad r6.xyz, r6.xyzx, cb0[50].wwww, r7.xyzx
add r7.xyz, -v5.xyzx, r13.xyzx
dp3 r1.z, r7.xyzx, r7.xyzx
rsq r1.z, r1.z
mul r7.xyz, r1.zzzz, r7.xyzx
dp3 r1.z, -r7.xyzx, r5.xyzx
add r1.z, r1.z, r1.z
mad r7.xyz, r5.xyzx, -r1.zzzz, -r7.xyzx
mov r8.x, cb0[52].x
mov r8.y, cb0[53].x
mov r8.z, cb0[54].x
mov r9.x, cb0[52].y
mov r9.y, cb0[53].y
mov r9.z, cb0[54].y
mov r10.x, cb0[52].z
mov r10.y, cb0[53].z
mov r10.z, cb0[54].z
mul r11.xyz, r7.zzzz, r10.xyzx
mad r7.yzw, r9.xxyz, r7.yyyy, r11.xxyz
mad r7.xyz, r8.xyzx, r7.xxxx, r7.yzwy
sample_l r7.xyzw, r7.xyzx, t4.xyzw, s6, r1.x
mul r0.xyz, r0.xyzx, r7.xyzx
mul r0.xyz, r2.yyyy, r0.xyzx
mad r0.xyz, r6.xyzx, r1.yyyy, r0.xyzx
ge r1.x, l(0.000000), cb0[49].x
mul r1.yzw, r5.zzzz, r10.xxyz
mad r1.yzw, r9.xxyz, r5.yyyy, r1.yyzw
mad r1.yzw, r8.xxyz, r5.xxxx, r1.yyzw
dp3 r2.y, r1.yzwy, r1.yzwy
max r2.y, r2.y, l(0.001000)
rsq r2.y, r2.y
mul r1.yzw, r1.yyzw, r2.yyyy
mad r6.xyz, cb0[64].xyzx, r1.zzzz, cb0[63].xyzx
mad r6.xyz, cb0[65].xyzx, r1.wwww, r6.xyzx
mad r6.xyz, cb0[66].xyzx, r1.yyyy, r6.xyzx
mul r7.xyz, r1.ywyy, r1.zzwz
mad r6.xyz, cb0[67].xyzx, r7.xxxx, r6.xyzx
mad r6.xyz, cb0[68].xyzx, r7.yyyy, r6.xyzx
mad r6.xyz, cb0[70].xyzx, r7.zzzz, r6.xyzx
mul r1.zw, r1.zzzw, r1.zzzw
mad r1.w, r1.w, l(3.000000), l(-1.000000)
mad r6.xyz, cb0[69].xyzx, r1.wwww, r6.xyzx
mad r1.y, r1.y, r1.y, -r1.z
mad r1.yzw, cb0[71].xxyz, r1.yyyy, r6.xxyz
mul r1.yzw, r2.xxxx, |r1.yyzw|
and r1.xyz, r1.yzwy, r1.xxxx
mad r0.xyz, r1.xyzx, r3.xywx, r0.xyzx
mul r1.y, r0.w, cb0[40].w
mov r6.x, v1.z
mov r6.y, v2.z
mov r6.z, v3.z
mul r6.xyz, r6.xyzx, r6.xyzx
mul r6.xyz, r6.xyzx, l(1.960000, 1.960000, 1.960000, 0.000000)
mul r6.xyz, r6.xyzx, r6.xyzx
add r6.xyz, r6.xyzx, r6.xyzx
dp3 r0.w, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r6.xyz, r6.xyzx, r0.wwww
mul r7.xyz, v5.xyzx, cb0[40].xxxx
add r2.xy, r7.xyxx, r7.xyxx
frc r8.xyz, r2.yxxy
add r8.xyz, r8.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r7.xyz, r7.zzyz, l(2.000000, 2.000000, 2.000000, 0.000000), |r8.xyzx|
frc r7.xyz, r7.xyzx
add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r7.xyz, v5.xyzx, cb0[40].xxxx, |r7.xyzx|
frc r0.w, r7.y
add r0.w, r0.w, l(-0.500000)
add r0.w, |r0.w|, r7.x
frc r0.w, r0.w
add r0.w, r0.w, l(-0.500000)
add r0.w, |r0.w|, r7.z
frc r0.w, r0.w
add r0.w, r0.w, l(-0.500000)
mov r1.xz, l(0,0,0,0)
mad r1.xyz, v5.xyzx, cb0[40].zzzz, r1.xyzx
add r2.xy, r1.xyxx, r1.xyxx
frc r7.xyz, r2.yxxy
add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r7.xyz, r1.zzyz, l(2.000000, 2.000000, 2.000000, 0.000000), |r7.xyzx|
frc r7.xyz, r7.xyzx
add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r1.xyz, r1.xyzx, |r7.xyzx|
frc r1.y, r1.y
add r1.y, r1.y, l(-0.500000)
add r1.x, |r1.y|, r1.x
frc r1.x, r1.x
add r1.x, r1.x, l(-0.500000)
add r1.x, |r1.x|, r1.z
frc r1.x, r1.x
add r1.x, r1.x, l(-0.500000)
mul r1.yz, |r1.xxxx|, l(0.000000, 0.714285731, 0.649350643, 0.000000)
mul r7.xyz, v5.xyzx, cb0[40].yyyy
mul r7.xyz, r7.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000)
sample r8.xyzw, r7.yzyy, t5.xyzw, s3
sample r9.xyzw, r7.xzxx, t5.xyzw, s3
mul r9.xyz, r6.yyyy, r9.xyzx
mad r6.xyw, r6.xxxx, r8.xyxz, r9.xyxz
sample r7.xyzw, r7.yxyy, t5.xyzw, s3
mad r6.xyz, r6.zzzz, r7.xyzx, r6.xywx
mul r1.w, r1.y, r6.x
add r2.x, cb0[41].y, cb0[41].z
mad r0.w, |r0.w|, l(0.714285731), r1.w
mul r1.w, cb0[39].y, l(0.220000)
mad r0.w, r0.w, cb0[39].y, -r1.w
add r1.w, -v5.y, cb0[35].w
add r2.y, -cb0[35].w, cb0[36].x
div r1.w, r1.w, |r2.y|
add r1.w, r1.w, r2.x
add_sat r1.w, r0.w, r1.w
add r0.w, -r0.w, r2.x
add r1.w, r1.w, l(0.400000)
add r1.w, -r0.w, r1.w
mad r0.w, cb0[41].x, r1.w, r0.w
add r1.w, -r0.w, cb0[39].x
mad r6.xyz, r6.xyzx, r1.yyyy, r1.wwww
mul_sat r6.xyz, r6.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000)
mul r6.xyz, r6.xyzx, cb0[38].xyzx
mul r6.xyz, r6.xyzx, l(20.000000, 20.000000, 20.000000, 0.000000)
mad r1.x, |r1.x|, l(-1.29870129), l(3.000000)
mul r1.y, r1.z, r1.z
mul r1.x, r1.y, r1.x
mad r0.xyz, r6.xyzx, r1.xxxx, r0.xyzx
mov_sat r0.w, r0.w
add r0.w, r0.w, -cb0[48].w
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
add r0.w, r3.y, r3.x
mad r0.w, r3.z, r2.z, r0.w
mad r1.xyz, r0.wwww, l(0.333333343, 0.333333343, 0.333333343, 0.000000), -r3.xywx
mad r1.xyz, cb0[43].xxxx, r1.xyzx, r3.xywx
add r1.xyz, r1.xyzx, cb0[43].yyyy
eq r0.w, cb3[0].x, l(1.000000)
if_nz r0.w
  eq r0.w, cb3[0].y, l(1.000000)
  mul r2.xyz, v2.wwww, cb3[2].xyzx
  mad r2.xyz, cb3[1].xyzx, v1.wwww, r2.xyzx
  mad r2.xyz, cb3[3].xyzx, v3.wwww, r2.xyzx
  add r2.xyz, r2.xyzx, cb3[4].xyzx
  mov r3.y, v1.w
  mov r3.z, v2.w
  mov r3.w, v3.w
  movc r2.xyz, r0.wwww, r2.xyzx, r3.yzwy
  add r2.xyz, r2.xyzx, -cb3[6].xyzx
  mul r3.yzw, r2.xxyz, cb3[5].xxyz
  mul r0.w, r3.y, l(0.250000)
  mul r1.w, cb3[0].z, l(0.500000)
  mad r2.x, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.w, r0.w, r1.w
  min r3.x, r2.x, r0.w
  sample r6.xyzw, r3.xzwx, t6.xyzw, s0
  add r2.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r7.xyzw, r2.xyzx, t6.xyzw, s0
  add r2.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r3.xyzw, r2.xyzx, t6.xyzw, s0
  mov r5.w, l(1.000000)
  dp4 r2.x, r6.xyzw, r5.xyzw
  dp4 r2.y, r7.xyzw, r5.xyzw
  dp4 r2.z, r3.xyzw, r5.xyzw
else 
  mov r5.w, l(1.000000)
  dp4 r2.x, cb2[38].xyzw, r5.xyzw
  dp4 r2.y, cb2[39].xyzw, r5.xyzw
  dp4 r2.z, cb2[40].xyzw, r5.xyzw
endif 
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul o1.xyz, r4.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000)
mul o1.w, r2.w, l(0.015625)
mad o2.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mad o3.xyz, r1.xyzx, r2.xyzx, r0.xyzx
add r0.xy, -cb0[49].yxyy, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r0.x, r0.y, l(2.000000), r0.x
mul o2.w, r0.x, l(0.333333343)
mov o0.xyz, r1.xyzx
mov o0.w, l(1.000000)
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used