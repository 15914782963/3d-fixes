// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a5abdb1944b9248a-ps.txt
// 3DMigoto: a5abdb1944b9248a |    Unity headers extracted from FX_WBOIT-WaterBase
//    Shader "FX/WBOIT-WaterBase" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent+101" "RenderType"="Transparent" }
//        Pass 2/2 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent+101" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from FX_WBOIT-WaterBase:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 209 12 9
//   undeciphered1a: 10
//   Keywords { "DIRECTIONAL_COOKIE" }
//   undeciphered2: 1 11 4 11 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 624
//   Float 0 [_UweFogEnabled]
//   Float 4 [_UweAboveWaterFogStartDistance]
//   Vector 16 [_UweFogVsLightDirection] 3
//   Vector 48 [_UweFogLightColor]
//   Vector 64 [_UweTopAmbientColor] 3
//   Vector 96 [_UweVsWaterPlane]
//   Float 240 [_UweVolumeTextureSlices]
//   Float 244 [_UweExtinctionAndScatteringScale]
//   Float 248 [_UweSunAttenuationFactor]
//   Vector 256 [_UweFogMiePhaseConst] 3
//   Float 280 [_SkyFogDensity]
//   Vector 288 [_SkyFogColor] 3
//   Float 300 [settingsSampleDistance]
//   Float 304 [_WBOIT_WeightToggle]
//   Float 308 [_WBOIT_WeightSharpness]
//   Vector 352 [_LightColor0]
//   Vector 368 [_SpecColor]
//   Vector 384 [_Color]
//   Float 400 [_Shininess]
//   Vector 432 [_ScrollSpeed]
//   Vector 448 [_Frequency]
//   Float 472 [_Cycle]
//   Vector 480 [_TexScale]
//   Float 496 [_ClipedValue]
//   Float 500 [_UWE_EditorTime]
//   Float 504 [_MaskPow]
//   Float 508 [_ClipMultiplier]
//   Float 512 [_ClipFade]
//   Float 516 [_InvFade]
//   Float 520 [_MainFoam]
//   Float 524 [_TopFoamHeight]
//   Float 528 [_BorderFoam]
//   Matrix 112 [_UweCameraToVolumeMatrix]
//   Matrix 544 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MaskMap] 2D 8
//   SetTexture 1 [_CameraDepthTexture] 2D 9
//   SetTexture 2 [_FlowMap] 2D 7
//   SetTexture 3 [_NoiseTex] 2D 6
//   SetTexture 4 [_MainTex] 2D 4
//   SetTexture 5 [_BumpMap] 2D 5
//   SetTexture 6 [_LightTexture0] 2D 10
//   SetTexture 7 [_UweExtinctionTexture] 2D 1
//   SetTexture 8 [_UweScatteringTexture] 2D 2
//   SetTexture 9 [_UweEmissiveTexture] 2D 3
//   SetTexture 10 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:58:20 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float    y  
// TEXCOORD                 7   xyzw        8     NONE   float     z 
// TEXCOORD                 8   xyzw        9     NONE   float   x z 
// TEXCOORD                 9   xyzw       10     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[38], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.y
dcl_input_ps linear v8.z
dcl_input_ps linear v9.xz
dcl_input_ps linear v10.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a5abdb1944b9248a-ps.txt

mul r10.w, -r10.x, r10.y
mad r11.xyz, -r10.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, r11.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
add r1.x, cb0[31].y, cb1[0].y
sample r2.xyzw, v1.xyxx, t0.xyzw, s8
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[31].z
log r1.z, r2.x
mul r1.y, r1.z, r1.y
exp r1.y, r1.y
mad r1.y, -cb0[31].x, cb0[31].w, r1.y
lt r1.z, r1.y, l(0.000000)
discard_nz r1.z
div r1.zw, v6.xxxy, v6.wwww
sample r2.xyzw, r1.zwzz, t1.xyzw, s9
mad r1.z, cb1[7].z, r2.x, cb1[7].w
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
add r1.z, r1.z, -v6.z
mul r1.w, r1.z, cb0[32].y
log r1.y, r1.y
mul r1.y, r1.y, l(0.750000)
exp r1.y, r1.y
mul_sat r1.y, r1.y, r1.w
mul_sat r1.z, r1.z, cb0[33].x
add r1.z, -r1.z, l(1.000000)
add r1.w, -v8.z, -cb1[5].y
div r1.w, r1.w, cb0[32].x
mul r2.xyzw, v9.xzxz, cb0[30].wwyy
sample r3.xyzw, r2.xyxx, t2.xyzw, s7
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.200000, -1.200000, -1.200000, 0.000000)
mul r2.xy, r3.xyxx, cb0[28].wwww
mad r2.zw, r1.xxxx, cb0[27].xxxy, r2.zzzw
sample r4.xyzw, r2.zwzz, t3.xyzw, s6
div r1.x, r1.x, cb0[29].z
mad r1.x, -r4.x, l(0.050000), r1.x
frc r2.z, r1.x
add r1.x, r1.x, l(0.500000)
frc r1.x, r1.x
mul r3.xy, v9.xzxx, cb0[30].xxxx
mul r4.xy, r1.xxxx, r2.xyxx
mad r5.xyzw, v9.xzxz, cb0[30].xxzz, r4.xyxy
sample r6.xyzw, r5.xyxx, t4.xyzw, s4
mul r2.xy, r2.zzzz, r2.xyxx
mad r7.xyzw, v9.xzxz, cb0[30].xxzz, r2.xyxy
sample r8.xyzw, r7.xyxx, t4.xyzw, s4
mad r4.xy, r3.xyxx, l(0.700000, 0.700000, 0.000000, 0.000000), r4.xyxx
sample r4.xyzw, r4.xyxx, t4.xyzw, s4
mad r2.xy, r3.xyxx, l(0.700000, 0.700000, 0.000000, 0.000000), r2.xyxx
sample r9.xyzw, r2.xyxx, t4.xyzw, s4
sample r5.xyzw, r5.zwzz, t5.xyzw, s5
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.x, r5.xyxx, r5.xyxx
min r1.xw, r1.xxxw, l(1.000000, 0.000000, 0.000000, 1.000000)
add r1.x, -r1.x, l(1.000000)
sqrt r5.z, r1.x
sample r7.xyzw, r7.zwzz, t5.xyzw, s5
mad r7.xy, r7.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.x, r7.xyxx, r7.xyxx
min r1.x, r1.x, l(1.000000)
add r1.x, -r1.x, l(1.000000)
sqrt r7.z, r1.x
lt r1.x, l(0.500000), r2.z
add r2.x, -r2.z, l(1.000000)
add r2.xy, r2.xzxx, r2.xzxx
movc r1.x, r1.x, r2.x, r2.y
mul r2.xyzw, r4.xyzx, r6.xyzx
mad r4.xyzw, r8.xyzx, r9.xyzx, -r2.wyzw
mad r2.xyzw, r1.xxxx, r4.xyzw, r2.xyzw
add r3.xyw, -r5.xyxz, r7.xyxz
mad r3.xyw, r1.xxxx, r3.xyxw, r5.xyxz
mul_sat r1.x, v7.y, cb0[32].w
mad r1.x, r3.z, cb0[32].z, r1.x
mul r4.xyzw, r1.xxxx, r2.wyzw
mad r2.xyzw, r2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), -r4.wyzw
mad r2.xyzw, r1.zzzz, r2.xyzw, r4.xyzw
add_sat r2.xyzw, r2.xyzw, cb0[24].xyzw
mul r1.x, r1.y, r2.w
mul r1.x, r1.w, r1.x
mul r1.yz, v5.yyyy, cb0[35].xxyx
mad r1.yz, cb0[34].xxyx, v5.xxxx, r1.yyzy
mad r1.yz, cb0[36].xxyx, v5.zzzz, r1.yyzy
add r1.yz, r1.yyzy, cb0[37].xxyx
eq r1.w, cb3[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb3[0].y, l(1.000000)
  mul r4.xyz, v5.yyyy, cb3[2].xyzx
  mad r4.xyz, cb3[1].xyzx, v5.xxxx, r4.xyzx
  mad r4.xyz, cb3[3].xyzx, v5.zzzz, r4.xyzx
  add r4.xyz, r4.xyzx, cb3[4].xyzx
  movc r4.xyz, r1.wwww, r4.xyzx, v5.xyzx
  add r4.xyz, r4.xyzx, -cb3[6].xyzx
  mul r4.yzw, r4.xxyz, cb3[5].xxyz
  mad r1.w, r4.y, l(0.250000), l(0.750000)
  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
  max r4.x, r1.w, r2.w
  sample r4.xyzw, r4.xzwx, t10.xyzw, s0
else 
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r1.w, r4.xyzw, cb2[45].xyzw
sample r4.xyzw, r1.yzyy, t6.xyzw, s10
mul r1.y, r1.w, r4.w
dp3 r4.x, v2.xyzx, r3.xywx
dp3 r4.y, v3.xyzx, r3.xywx
dp3 r4.z, v4.xyzx, r3.xywx
mul r1.yzw, r1.yyyy, cb0[22].xxyz
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r4.xyzx, cb2[0].xyzx
dp3 r0.x, r4.xyzx, r0.xyzx
max r0.xw, r0.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.y, cb0[25].x, l(128.000000)
log r0.x, r0.x
mul r0.x, r0.x, r0.y
exp r0.x, r0.x
mul r0.x, r0.x, cb0[23].w
mul r2.xyz, r1.yzwy, r2.xyzx
mul r1.yzw, r1.yyzw, cb0[23].xxyz
mul r0.xyz, r0.xxxx, r1.yzwy
mad r0.xyz, r2.xyzx, r0.wwww, r0.xyzx
mul r2.xyz, r1.xxxx, r0.xyzx
add r0.w, r2.y, r2.x
mad r0.w, r0.z, r1.x, r0.w
mul_sat r0.w, r0.w, l(0.333333343)
mul r3.x, r0.w, r1.x
ne r0.w, cb0[0].x, l(0.000000)
if_nz r0.w
  dp3 r0.w, v10.xyzx, v10.xyzx
  sqrt r2.w, r0.w
  div r1.yzw, v10.xxyz, r2.wwww
  mul r3.yzw, r1.yyzw, cb0[18].wwww
  mul r4.xyz, r3.zzzz, cb0[8].xyzx
  mad r4.xyz, cb0[7].xyzx, r3.yyyy, r4.xyzx
  mad r3.yzw, cb0[9].xxyz, r3.wwww, r4.xxyz
  add_sat r4.xyz, r3.yzwy, cb0[10].xyzx
  div r5.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[15].x
  mad r0.w, r4.y, cb0[15].x, l(-0.500000)
  frc r3.y, r0.w
  add r0.w, r0.w, -r3.y
  add r0.w, r0.w, r4.z
  mul r4.w, r5.y, r0.w
  mov r5.x, l(0)
  add r3.zw, r4.xxxw, r5.xxxy
  sample_l r5.xyzw, r4.xwxx, t7.xyzw, s1, l(0.000000)
  sample_l r6.xyzw, r3.zwzz, t7.xyzw, s1, l(0.000000)
  add r6.xyzw, -r5.xyzw, r6.xyzw
  mad r5.xyzw, r3.yyyy, r6.wxyz, r5.wxyz
  dp3 r0.w, r1.yzwy, cb0[6].xyzx
  lt r4.y, l(0.000000), cb0[6].w
  if_nz r4.y
    lt r4.y, r0.w, l(-0.010000)
    not r4.z, r4.y
    div r6.x, -cb0[6].w, r0.w
    add r6.x, r6.x, cb0[0].y
    mul r6.y, -r2.w, cb0[17].z
    mul r6.y, r6.y, l(1.442695)
    exp r6.y, r6.y
    mad r7.xyz, r0.xyzx, r1.xxxx, -cb0[18].xyzx
    mad r6.yzw, r6.yyyy, r7.xxyz, cb0[18].xxyz
    movc r5.x, r4.y, r6.x, cb0[0].y
    lt r6.x, r2.w, r5.x
    movc r4.y, r4.y, r6.x, l(-1)
    or r4.y, r4.z, r4.y
    mov r4.z, r3.x
    mov r7.xyz, r2.xyzx
    mov r7.w, r2.w
    mov r2.xyz, r6.yzwy
  else 
    div r6.x, -cb0[6].w, r0.w
    lt r8.x, l(0.000000), r6.x
    add r8.y, r2.w, -r6.x
    max r8.y, r8.y, l(0.000000)
    mul r8.y, -r8.y, cb0[17].z
    mul r8.y, r8.y, l(1.442695)
    exp r8.y, r8.y
    mad r0.xyz, r0.xyzx, r1.xxxx, -cb0[18].xyzx
    mad r9.xyz, r8.yyyy, r0.xyzx, cb0[18].xyzx
    min r9.w, r2.w, r6.x
    movc r7.xyzw, r8.xxxx, r9.xyzw, r2.xyzw
    mov r4.y, l(0)
  endif 
  if_z r4.y
    lt r0.x, r5.x, r7.w
    if_nz r0.x
      sample_l r6.xyzw, r4.xwxx, t8.xyzw, s2, l(0.000000)
      sample_l r8.xyzw, r3.zwzz, t8.xyzw, s2, l(0.000000)
      add r8.xyzw, -r6.xyzw, r8.xyzw
      mad r6.xyzw, r3.yyyy, r8.xyzw, r6.xyzw
      sample_l r8.xyzw, r4.xwxx, t9.xyzw, s3, l(0.000000)
      sample_l r9.xyzw, r3.zwzz, t9.xyzw, s3, l(0.000000)
      add r0.xyz, -r8.xyzx, r9.xyzx
      mad r0.xyz, r3.yyyy, r0.xyzx, r8.xyzx
      mul r3.yzw, r6.xxyz, cb0[15].yyyy
      mul r4.xyw, r5.yzyw, cb0[15].yyyy
      add r1.x, -r5.x, r7.w
      mul r6.xyz, r1.yzwy, r5.xxxx
      dp3 r1.y, r1.yzwy, -cb0[1].xyzx
      mad r1.y, -cb0[16].z, r1.y, cb0[16].y
      log r1.y, r1.y
      mul r1.y, r1.y, l(-1.500000)
      exp r1.y, r1.y
      mul r1.y, r1.y, cb0[16].x
      mul r1.yzw, r1.yyyy, r3.yyzw
      dp3 r2.w, cb0[1].xyzx, cb0[6].xyzx
      max r2.w, r2.w, l(0.000100)
      mad r3.yzw, cb0[3].xxyz, cb0[3].wwww, cb0[4].xxyz
      mul r3.yzw, r6.wwww, r3.yyzw
      mul r8.xyz, r4.xywx, cb0[15].zzzz
      mul r9.xyz, r0.wwww, r8.xyzx
      div r9.xyz, r9.xyzx, r2.wwww
      mad r5.xyz, -r5.yzwy, cb0[15].yyyy, r9.xyzx
      dp3 r0.w, r6.xyzx, cb0[6].xyzx
      add r0.w, r0.w, cb0[6].w
      mul r6.xyz, r0.wwww, r8.xyzx
      div r6.xyz, r6.xyzx, r2.wwww
      mad r8.xyz, r1.xxxx, r5.xyzx, r6.xyzx
      mul r8.xyz, r8.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r8.xyz, r8.xyzx
      mul r6.xyz, r6.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r6.xyz, r6.xyzx
      add r6.xyz, -r6.xyzx, r8.xyzx
      div r5.xyz, r6.xyzx, r5.xyzx
      mul r1.yzw, r1.yyzw, r3.yyzw
      mul r1.yzw, r5.xxyz, r1.yyzw
      max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
      mul r3.yzw, r4.xxyw, -r1.xxxx
      mul r3.yzw, r3.yyzw, l(0.000000, 1.442695, 1.442695, 1.442695)
      exp r3.yzw, r3.yyzw
      mul r5.xyz, r1.xxxx, -r4.xywx
      mul r5.xyz, r5.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r5.xyz, r5.xyzx
      add r5.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      div r4.xyw, r5.xyxz, r4.xyxw
      mul r0.xyz, r0.xyzx, r4.xywx
      max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      mad_sat r0.w, -r1.x, l(0.080000), l(10.000000)
      mul r3.x, r0.w, r3.x
      add r0.xyz, r0.xyzx, r1.yzwy
      mad r2.xyz, r7.xyzx, r3.yzwy, r0.xyzx
    else 
      mov r2.xyz, r7.xyzx
    endif 
  else 
    mov r3.x, r4.z
  endif 
endif 
mul r0.x, v10.z, cb0[19].y
mul r0.x, r0.x, l(1.442695)
exp r0.x, r0.x
max r0.x, r0.x, l(0.010000)
min r0.x, r0.x, l(1.000000)
mad r0.x, r3.x, r0.x, l(-1.000000)
mad r0.x, cb0[19].x, r0.x, l(1.000000)
mul r0.yzw, r2.xxyz, r3.xxxx
mul o1.xyz, r0.xxxx, r0.yzwy
mov o0.xyzw, l(0,0,0,0)
mov o1.w, l(0)
mov o2.xyzw, l(0,0,0,0)
ret 
// Approximately 0 instruction slots used