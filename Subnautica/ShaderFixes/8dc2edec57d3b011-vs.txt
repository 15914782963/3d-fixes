// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 8dc2edec57d3b011-vs.txt
// 3DMigoto: 8dc2edec57d3b011 | Matched 2 variants of 1 shaders: UWE/Particles/UBER
//
//       Unity headers extracted from UWE_Particles_UBER
//       Shader "UWE/Particles/UBER" {
//         CustomEditor "ParticlesShaderGUI"
//         SubShader 1/1 {
//           Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="Vertex" "QUEUE"="Transparent+101" "RenderType"="Transparent" }
//           Pass 1/1 {
//             Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="Vertex" "QUEUE"="Transparent+101" "RenderType"="Transparent" }
//             ZWrite Off
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from UWE_Particles_UBER:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201609010 377 0 48
//      undeciphered1a: 10
// 2:   Keywords { "FX_DEFORM" "FX_REFRACT" "WBOIT" "FX_LIGHTMODE_VERTEX" "FX_TRAILNOISE" "FX_NEARCLIP" "FX_UNDERWATER" "FX_SOFTEDGES" "FX_SCROLL" "FX_FRESNELCLIP" "FX_MULMAP" "FX_ISMESH" "FX_ADDFOG" "FX_ALPHAPOW" "FX_TRIPLANAR" "FX_UNDERFLOOD" "FX_FORCELIGHT_VERTEX" }
// 1:   Keywords { "FX_DEFORM" "FX_REFRACT" "WBOIT" "FX_LIGHTMODE_VERTEX" "FX_TRAILNOISE" "FX_NEARCLIP" "FX_UNDERWATER" "FX_SOFTEDGES" "FX_SCROLL" "FX_FRESNELCLIP" "FX_MULMAP" "FX_ISMESH" "FX_ADDFOG" "FX_ALPHAPOW" "FX_TRIPLANAR" "FX_UNDERFLOOD" }
//      undeciphered2: 1 3 5 3 0 0
//      undeciphered3: 15 4 0 0 2 1 3 4 1 2
//      ConstBuffer "$Globals" 1040
//      Float 64 [_UweFogEnabled]
//      Vector 96 [_UweFogWsLightDirection] 3
//      Vector 128 [_UweTopAmbientColor] 3
//      Vector 144 [_UweBottomAmbientColor] 3
//      Float 304 [_UweVolumeTextureSlices]
//      Float 308 [_UweExtinctionAndScatteringScale]
//      Float 312 [_UweSunAttenuationFactor]
//      Vector 336 [_UweColorCastFactor] 2
//      Float 432 [_AffectedByDayNightCycle]
//      Float 436 [_LightDesaturation]
//      Float 440 [_NormalSharpness]
//      Float 444 [_SelfIllumination]
//      Float 448 [_LightWrapAround]
//      Float 476 [_UweWaterTransmission]
//      Float 480 [_UweWaterEmissionAmbientScale]
//      Vector 496 [_ExposureIBL]
//      Vector 512 [_SH0] 3
//      Vector 528 [_SH1] 3
//      Vector 544 [_SH2] 3
//      Vector 560 [_SH3] 3
//      Vector 576 [_SH4] 3
//      Vector 592 [_SH5] 3
//      Vector 608 [_SH6] 3
//      Vector 624 [_SH7] 3
//      Vector 640 [_SH8] 3
//      Float 724 [_UWE_EditorTime]
//      Float 868 [_ClipOffset]
//      Float 872 [_ClipFade]
//      Vector 992 [_Scale]
//      Vector 1008 [_Frequency]
//      Float 1024 [_Speed]
//      Float 1028 [_RandPhase]
//      Matrix 176 [_UweCameraToVolumeMatrix]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 752
//      Vector 96 [unity_LightColor0]
//      Vector 112 [unity_LightColor1]
//      Vector 128 [unity_LightColor2]
//      Vector 144 [unity_LightColor3]
//      Vector 160 [unity_LightColor4]
//      Vector 176 [unity_LightColor5]
//      Vector 192 [unity_LightColor6]
//      Vector 208 [unity_LightColor7]
//      Vector 224 [unity_LightPosition0]
//      Vector 240 [unity_LightPosition1]
//      Vector 256 [unity_LightPosition2]
//      Vector 272 [unity_LightPosition3]
//      Vector 288 [unity_LightPosition4]
//      Vector 304 [unity_LightPosition5]
//      Vector 320 [unity_LightPosition6]
//      Vector 336 [unity_LightPosition7]
//      Vector 352 [unity_LightAtten0]
//      Vector 368 [unity_LightAtten1]
//      Vector 384 [unity_LightAtten2]
//      Vector 400 [unity_LightAtten3]
//      Vector 416 [unity_LightAtten4]
//      Vector 432 [unity_LightAtten5]
//      Vector 448 [unity_LightAtten6]
//      Vector 464 [unity_LightAtten7]
//      Vector 480 [unity_SpotDirection0]
//      Vector 496 [unity_SpotDirection1]
//      Vector 512 [unity_SpotDirection2]
//      Vector 528 [unity_SpotDirection3]
//      Vector 544 [unity_SpotDirection4]
//      Vector 560 [unity_SpotDirection5]
//      Vector 576 [unity_SpotDirection6]
//      Vector 592 [unity_SpotDirection7]
//      ConstBuffer "UnityPerDraw" 160
//      Matrix 0 [unity_ObjectToWorld]
//      Matrix 64 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 384
//      Matrix 144 [unity_MatrixV]
//      Matrix 272 [unity_MatrixVP]
//      SetTexture 0 [_UweExtinctionTexture] 2D 0
//      SetTexture 1 [_UweEmissiveTexture] 2D 1
//      SetTexture 2 [_LightTextureB0] 2D 2
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityPerDraw" 3
//      BindCB "UnityPerFrame" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:57:34 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// NORMAL                   0   xyz         3     NONE   float   xyz 
// TANGENT                  0   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
// TEXCOORD                 3   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyz         6     NONE   float   xyz 
// TEXCOORD                10   xyz         7     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[65], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[34], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_constantbuffer cb4[21], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xy
dcl_input v3.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyz
dcl_output o7.xyz
dcl_temps 11

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.x, cb0[45].y, cb1[0].y
mul r1.xyzw, v0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
mad r1.xyzw, cb3[3].xyzw, v0.wwww, r1.xyzw
mul r0.y, cb0[64].y, l(1000.000000)
mad r0.x, r0.x, cb0[64].x, r0.y
add r0.yzw, r1.yyxz, r1.xxzy
add r0.yzw, r1.zzyx, r0.yyzw
mad r0.xyz, r0.yzwy, l(0.333333343, 0.333333343, 0.333333343, 0.000000), -r0.xxxx
mad r0.xyz, r0.xyzx, cb0[63].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
frc r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r2.xyz, |r0.xyzx|, |r0.xyzx|
mad r0.xyz, -|r0.xyzx|, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
mad r0.xyz, r2.xyzx, r0.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mul r0.xyz, r0.xyzx, cb0[62].xyzx
mul r2.xyz, r0.yyyy, cb3[5].xyzx
mad r0.xyw, cb3[4].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb3[6].xyzx, r0.zzzz, r0.xywx
add r0.w, -v1.w, l(1.000000)
mad r0.xyz, r0.wwww, r0.xyzx, v0.xyzx
mul r2.xyzw, r0.yyyy, cb3[1].xyzw
mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
add r2.xyzw, r2.xyzw, cb3[3].xyzw
mul r3.xyzw, r2.yyyy, cb4[18].xyzw
mad r3.xyzw, cb4[17].xyzw, r2.xxxx, r3.xyzw
mad r3.xyzw, cb4[19].xyzw, r2.zzzz, r3.xyzw
mad r3.xyzw, cb4[20].xyzw, r2.wwww, r3.xyzw
mul r4.xyz, cb3[0].yyyy, cb4[10].xyzx
mad r4.xyz, cb4[9].xyzx, cb3[0].xxxx, r4.xyzx
mad r4.xyz, cb4[11].xyzx, cb3[0].zzzz, r4.xyzx
mad r4.xyz, cb4[12].xyzx, cb3[0].wwww, r4.xyzx
mul r5.xyz, cb3[1].yyyy, cb4[10].xyzx
mad r5.xyz, cb4[9].xyzx, cb3[1].xxxx, r5.xyzx
mad r5.xyz, cb4[11].xyzx, cb3[1].zzzz, r5.xyzx
mad r5.xyz, cb4[12].xyzx, cb3[1].wwww, r5.xyzx
mul r6.xyz, cb3[2].yyyy, cb4[10].xyzx
mad r6.xyz, cb4[9].xyzx, cb3[2].xxxx, r6.xyzx
mad r6.xyz, cb4[11].xyzx, cb3[2].zzzz, r6.xyzx
mad r6.xyz, cb4[12].xyzx, cb3[2].wwww, r6.xyzx
mul r7.xyz, cb3[3].yyyy, cb4[10].xyzx
mad r7.xyz, cb4[9].xyzx, cb3[3].xxxx, r7.xyzx
mad r7.xyz, cb4[11].xyzx, cb3[3].zzzz, r7.xyzx
mad r7.xyz, cb4[12].xyzx, cb3[3].wwww, r7.xyzx
mul r8.xyz, r0.yyyy, r5.xyzx
mad r0.xyw, r4.xyxz, r0.xxxx, r8.xyxz
mad r0.xyz, r6.xyzx, r0.zzzz, r0.xywx
mad r0.xyz, r7.xyzx, v0.wwww, r0.xyzx
mul r5.xyz, r5.xyzx, v3.yyyy
mad r4.xyz, r4.xyzx, v3.xxxx, r5.xyzx
mad r4.xyz, r6.xyzx, v3.zzzz, r4.xyzx
add r4.xyz, r4.xyzx, l(-0.000000, -0.000000, -1.000000, 0.000000)
mad r4.xyz, cb0[27].zzzz, r4.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
ne r0.w, cb2[6].w, l(0.000000)
if_nz r0.w
  eq r0.w, cb2[14].w, l(0.000000)
  if_nz r0.w
    ne r0.w, cb0[27].x, l(0.000000)
    not r4.w, r0.w
    if_nz r0.w
      ne r0.w, cb0[4].x, l(0.000000)
      if_nz r0.w
        ge r0.w, l(0.000000), r1.y
        ge r5.x, -cb0[6].y, l(0.000000)
        div r5.y, r1.y, cb0[6].y
        and r5.x, r5.y, r5.x
        and r0.w, r0.w, r5.x
        lt r5.x, l(0.000000), r0.w
        if_nz r5.x
          mul r5.xyz, r0.yyyy, cb0[12].xyzx
          mad r5.xyz, cb0[11].xyzx, r0.xxxx, r5.xyzx
          mad r5.xyz, cb0[13].xyzx, r0.zzzz, r5.xyzx
          add_sat r5.xyz, r5.xyzx, cb0[14].xyzx
          div r6.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[19].x
          mad r5.y, r5.y, cb0[19].x, l(-0.500000)
          frc r6.z, r5.y
          add r5.y, r5.y, -r6.z
          add r5.y, r5.y, r5.z
          mul r5.w, r6.y, r5.y
          mov r6.x, l(0)
          add r5.yz, r5.xxwx, r6.xxyx
          sample_l r7.xyzw, r5.xwxx, t0.xyzw, s0, l(0.000000)
          sample_l r8.xyzw, r5.yzyy, t0.xyzw, s0, l(0.000000)
          add r6.xyw, -r7.xyxz, r8.xyxz
          mad r6.xyw, r6.zzzz, r6.xyxw, r7.xyxz
          sample_l r7.xyzw, r5.xwxx, t1.xyzw, s1, l(0.000000)
          sample_l r5.xyzw, r5.yzyy, t1.xyzw, s1, l(0.000000)
          add r5.xyz, -r7.xyzx, r5.xyzx
          mad r5.xyz, r6.zzzz, r5.xyzx, r7.xyzx
          mul r6.xyz, r6.xywx, cb0[19].yyyy
          dp3 r5.w, r0.xyzx, r0.xyzx
          sqrt r5.w, r5.w
          mul r7.xyz, r6.xyzx, cb0[19].zzzz
          min r6.w, r7.y, r7.x
          min r6.w, r7.z, r6.w
          mul r7.w, r0.w, cb0[21].y
          mad r5.w, -r5.w, cb0[21].x, -r7.w
          mul r5.w, r5.w, l(1.442695)
          exp r5.w, r5.w
          mad r8.xyz, -r6.xyzx, cb0[19].zzzz, r6.wwww
          mad r7.xyz, r5.wwww, r8.xyzx, r7.xyzx
          mul r7.xyz, -r0.wwww, r7.xyzx
          mul r7.xyz, r7.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
          exp r7.xyz, r7.xyzx
          mul r5.xyz, r5.xyzx, cb0[30].xxxx
          div r5.xyz, r5.xyzx, r6.xyzx
          mad r5.xyz, cb2[6].xyzx, r7.xyzx, r5.xyzx
          mov_sat r0.w, -r1.y
          add r5.w, cb0[29].w, l(-1.000000)
          mad r0.w, r0.w, r5.w, l(1.000000)
          mul r5.xyz, r0.wwww, r5.xyzx
        else 
          mov r5.xyz, cb2[6].xyzx
          mov r7.xyz, l(1.000000,1.000000,1.000000,0)
        endif 
      else 
        mov r5.xyz, cb2[6].xyzx
        mov r7.xyz, l(1.000000,1.000000,1.000000,0)
      endif 
      mad r0.w, v3.y, l(0.500000), l(0.500000)
      add r6.xyz, cb0[8].xyzx, -cb0[9].xyzx
      mad r6.xyz, r0.wwww, r6.xyzx, cb0[9].xyzx
      mad r5.xyz, r6.xyzx, r7.xyzx, r5.xyzx
      dp3 r0.w, r5.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
      add r6.xyz, -r5.xyzx, r0.wwww
      mad r5.xyz, cb0[27].yyyy, r6.xyzx, r5.xyzx
    else 
      mov r5.xyz, cb2[6].xyzx
    endif 
  else 
    mov r5.xyz, cb2[6].xyzx
    mov r4.w, l(0)
  endif 
  if_z r4.w
    mad r6.xyz, -r0.xyzx, cb2[14].wwww, cb2[14].xyzx
    dp3 r0.w, r6.xyzx, r6.xyzx
    rsq r4.w, r0.w
    mul r6.xyz, r4.wwww, r6.xyzx
    mul r0.w, r0.w, cb2[14].w
    div r7.x, r0.w, cb2[22].w
    mov r7.y, l(0)
    sample_l r7.xyzw, r7.xyxx, t2.xyzw, s2, l(0.000000)
    dp3_sat r0.w, r6.xyzx, cb2[30].xyzx
    add r0.w, r0.w, -cb2[22].x
    mul_sat r0.w, r0.w, cb2[22].y
    mul r0.w, r0.w, r7.x
    dp3 r4.w, r6.xyzx, r4.xyzx
    mad r4.w, r4.w, cb0[28].x, l(1.000000)
    add_sat r4.w, r4.w, -cb0[28].x
    mul r0.w, r0.w, r4.w
    mul r5.xyz, r0.wwww, r5.xyzx
  else 
    mov r5.xyz, l(0,0,0,0)
  endif 
else 
  mov r5.xyz, l(0,0,0,0)
endif 
ne r0.w, cb2[7].w, l(0.000000)
if_nz r0.w
  eq r0.w, cb2[15].w, l(0.000000)
  if_nz r0.w
    ne r0.w, cb0[27].x, l(0.000000)
    not r4.w, r0.w
    if_nz r0.w
      ne r0.w, cb0[4].x, l(0.000000)
      if_nz r0.w
        ge r0.w, l(0.000000), r1.y
        ge r5.w, -cb0[6].y, l(0.000000)
        div r6.x, r1.y, cb0[6].y
        and r5.w, r5.w, r6.x
        and r0.w, r0.w, r5.w
        lt r5.w, l(0.000000), r0.w
        if_nz r5.w
          mul r6.xyz, r0.yyyy, cb0[12].xyzx
          mad r6.xyz, cb0[11].xyzx, r0.xxxx, r6.xyzx
          mad r6.xyz, cb0[13].xyzx, r0.zzzz, r6.xyzx
          add_sat r6.xyz, r6.xyzx, cb0[14].xyzx
          div r7.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[19].x
          mad r5.w, r6.y, cb0[19].x, l(-0.500000)
          frc r6.y, r5.w
          add r5.w, r5.w, -r6.y
          add r5.w, r5.w, r6.z
          mul r6.w, r7.y, r5.w
          mov r7.x, l(0)
          add r7.xy, r6.xwxx, r7.xyxx
          sample_l r8.xyzw, r6.xwxx, t0.xyzw, s0, l(0.000000)
          sample_l r9.xyzw, r7.xyxx, t0.xyzw, s0, l(0.000000)
          add r9.xyz, -r8.xyzx, r9.xyzx
          mad r8.xyz, r6.yyyy, r9.xyzx, r8.xyzx
          sample_l r9.xyzw, r6.xwxx, t1.xyzw, s1, l(0.000000)
          sample_l r7.xyzw, r7.xyxx, t1.xyzw, s1, l(0.000000)
          add r6.xzw, -r9.xxyz, r7.xxyz
          mad r6.xyz, r6.yyyy, r6.xzwx, r9.xyzx
          mul r7.xyz, r8.xyzx, cb0[19].yyyy
          dp3 r5.w, r0.xyzx, r0.xyzx
          sqrt r5.w, r5.w
          mul r8.xyz, r7.xyzx, cb0[19].zzzz
          min r6.w, r8.y, r8.x
          min r6.w, r8.z, r6.w
          mul r7.w, r0.w, cb0[21].y
          mad r5.w, -r5.w, cb0[21].x, -r7.w
          mul r5.w, r5.w, l(1.442695)
          exp r5.w, r5.w
          mad r9.xyz, -r7.xyzx, cb0[19].zzzz, r6.wwww
          mad r8.xyz, r5.wwww, r9.xyzx, r8.xyzx
          mul r8.xyz, -r0.wwww, r8.xyzx
          mul r8.xyz, r8.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
          exp r8.xyz, r8.xyzx
          mul r6.xyz, r6.xyzx, cb0[30].xxxx
          div r6.xyz, r6.xyzx, r7.xyzx
          mad r6.xyz, cb2[7].xyzx, r8.xyzx, r6.xyzx
          mov_sat r0.w, -r1.y
          add r5.w, cb0[29].w, l(-1.000000)
          mad r0.w, r0.w, r5.w, l(1.000000)
          mul r6.xyz, r0.wwww, r6.xyzx
        else 
          mov r6.xyz, cb2[7].xyzx
          mov r8.xyz, l(1.000000,1.000000,1.000000,0)
        endif 
      else 
        mov r6.xyz, cb2[7].xyzx
        mov r8.xyz, l(1.000000,1.000000,1.000000,0)
      endif 
      mad r0.w, v3.y, l(0.500000), l(0.500000)
      add r7.xyz, cb0[8].xyzx, -cb0[9].xyzx
      mad r7.xyz, r0.wwww, r7.xyzx, cb0[9].xyzx
      mad r6.xyz, r7.xyzx, r8.xyzx, r6.xyzx
      dp3 r0.w, r6.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
      add r7.xyz, -r6.xyzx, r0.wwww
      mad r6.xyz, cb0[27].yyyy, r7.xyzx, r6.xyzx
    else 
      mov r6.xyz, cb2[7].xyzx
    endif 
  else 
    mov r6.xyz, cb2[7].xyzx
    mov r4.w, l(0)
  endif 
  if_z r4.w
    mad r7.xyz, -r0.xyzx, cb2[15].wwww, cb2[15].xyzx
    dp3 r0.w, r7.xyzx, r7.xyzx
    rsq r4.w, r0.w
    mul r7.xyz, r4.wwww, r7.xyzx
    mul r0.w, r0.w, cb2[15].w
    div r8.x, r0.w, cb2[23].w
    mov r8.y, l(0)
    sample_l r8.xyzw, r8.xyxx, t2.xyzw, s2, l(0.000000)
    dp3_sat r0.w, r7.xyzx, cb2[31].xyzx
    add r0.w, r0.w, -cb2[23].x
    mul_sat r0.w, r0.w, cb2[23].y
    mul r0.w, r0.w, r8.x
    dp3 r4.w, r7.xyzx, r4.xyzx
    mad r4.w, r4.w, cb0[28].x, l(1.000000)
    add_sat r4.w, r4.w, -cb0[28].x
    mul r0.w, r0.w, r4.w
    mul r6.xyz, r0.wwww, r6.xyzx
  else 
    mov r6.xyz, l(0,0,0,0)
  endif 
else 
  mov r6.xyz, l(0,0,0,0)
endif 
add r5.xyz, r5.xyzx, r6.xyzx
ne r0.w, cb2[8].w, l(0.000000)
if_nz r0.w
  eq r0.w, cb2[16].w, l(0.000000)
  if_nz r0.w
    ne r0.w, cb0[27].x, l(0.000000)
    not r4.w, r0.w
    if_nz r0.w
      ne r0.w, cb0[4].x, l(0.000000)
      if_nz r0.w
        ge r0.w, l(0.000000), r1.y
        ge r5.w, -cb0[6].y, l(0.000000)
        div r6.x, r1.y, cb0[6].y
        and r5.w, r5.w, r6.x
        and r0.w, r0.w, r5.w
        lt r5.w, l(0.000000), r0.w
        if_nz r5.w
          mul r6.xyz, r0.yyyy, cb0[12].xyzx
          mad r6.xyz, cb0[11].xyzx, r0.xxxx, r6.xyzx
          mad r6.xyz, cb0[13].xyzx, r0.zzzz, r6.xyzx
          add_sat r6.xyz, r6.xyzx, cb0[14].xyzx
          div r7.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[19].x
          mad r5.w, r6.y, cb0[19].x, l(-0.500000)
          frc r6.y, r5.w
          add r5.w, r5.w, -r6.y
          add r5.w, r5.w, r6.z
          mul r6.w, r7.y, r5.w
          mov r7.x, l(0)
          add r7.xy, r6.xwxx, r7.xyxx
          sample_l r8.xyzw, r6.xwxx, t0.xyzw, s0, l(0.000000)
          sample_l r9.xyzw, r7.xyxx, t0.xyzw, s0, l(0.000000)
          add r9.xyz, -r8.xyzx, r9.xyzx
          mad r8.xyz, r6.yyyy, r9.xyzx, r8.xyzx
          sample_l r9.xyzw, r6.xwxx, t1.xyzw, s1, l(0.000000)
          sample_l r7.xyzw, r7.xyxx, t1.xyzw, s1, l(0.000000)
          add r6.xzw, -r9.xxyz, r7.xxyz
          mad r6.xyz, r6.yyyy, r6.xzwx, r9.xyzx
          mul r7.xyz, r8.xyzx, cb0[19].yyyy
          dp3 r5.w, r0.xyzx, r0.xyzx
          sqrt r5.w, r5.w
          mul r8.xyz, r7.xyzx, cb0[19].zzzz
          min r6.w, r8.y, r8.x
          min r6.w, r8.z, r6.w
          mul r7.w, r0.w, cb0[21].y
          mad r5.w, -r5.w, cb0[21].x, -r7.w
          mul r5.w, r5.w, l(1.442695)
          exp r5.w, r5.w
          mad r9.xyz, -r7.xyzx, cb0[19].zzzz, r6.wwww
          mad r8.xyz, r5.wwww, r9.xyzx, r8.xyzx
          mul r8.xyz, -r0.wwww, r8.xyzx
          mul r8.xyz, r8.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
          exp r8.xyz, r8.xyzx
          mul r6.xyz, r6.xyzx, cb0[30].xxxx
          div r6.xyz, r6.xyzx, r7.xyzx
          mad r6.xyz, cb2[8].xyzx, r8.xyzx, r6.xyzx
          mov_sat r0.w, -r1.y
          add r5.w, cb0[29].w, l(-1.000000)
          mad r0.w, r0.w, r5.w, l(1.000000)
          mul r6.xyz, r0.wwww, r6.xyzx
        else 
          mov r6.xyz, cb2[8].xyzx
          mov r8.xyz, l(1.000000,1.000000,1.000000,0)
        endif 
      else 
        mov r6.xyz, cb2[8].xyzx
        mov r8.xyz, l(1.000000,1.000000,1.000000,0)
      endif 
      mad r0.w, v3.y, l(0.500000), l(0.500000)
      add r7.xyz, cb0[8].xyzx, -cb0[9].xyzx
      mad r7.xyz, r0.wwww, r7.xyzx, cb0[9].xyzx
      mad r6.xyz, r7.xyzx, r8.xyzx, r6.xyzx
      dp3 r0.w, r6.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
      add r7.xyz, -r6.xyzx, r0.wwww
      mad r6.xyz, cb0[27].yyyy, r7.xyzx, r6.xyzx
    else 
      mov r6.xyz, cb2[8].xyzx
    endif 
  else 
    mov r6.xyz, cb2[8].xyzx
    mov r4.w, l(0)
  endif 
  if_z r4.w
    mad r7.xyz, -r0.xyzx, cb2[16].wwww, cb2[16].xyzx
    dp3 r0.w, r7.xyzx, r7.xyzx
    rsq r4.w, r0.w
    mul r7.xyz, r4.wwww, r7.xyzx
    mul r0.w, r0.w, cb2[16].w
    div r8.x, r0.w, cb2[24].w
    mov r8.y, l(0)
    sample_l r8.xyzw, r8.xyxx, t2.xyzw, s2, l(0.000000)
    dp3_sat r0.w, r7.xyzx, cb2[32].xyzx
    add r0.w, r0.w, -cb2[24].x
    mul_sat r0.w, r0.w, cb2[24].y
    mul r0.w, r0.w, r8.x
    dp3 r4.w, r7.xyzx, r4.xyzx
    mad r4.w, r4.w, cb0[28].x, l(1.000000)
    add_sat r4.w, r4.w, -cb0[28].x
    mul r0.w, r0.w, r4.w
    mul r6.xyz, r0.wwww, r6.xyzx
  else 
    mov r6.xyz, l(0,0,0,0)
  endif 
else 
  mov r6.xyz, l(0,0,0,0)
endif 
add r5.xyz, r5.xyzx, r6.xyzx
ne r0.w, cb2[9].w, l(0.000000)
if_nz r0.w
  eq r0.w, cb2[17].w, l(0.000000)
  if_nz r0.w
    ne r0.w, cb0[27].x, l(0.000000)
    not r4.w, r0.w
    if_nz r0.w
      ne r0.w, cb0[4].x, l(0.000000)
      if_nz r0.w
        ge r0.w, l(0.000000), r1.y
        ge r5.w, -cb0[6].y, l(0.000000)
        div r6.x, r1.y, cb0[6].y
        and r5.w, r5.w, r6.x
        and r0.w, r0.w, r5.w
        lt r5.w, l(0.000000), r0.w
        if_nz r5.w
          mul r6.xyz, r0.yyyy, cb0[12].xyzx
          mad r6.xyz, cb0[11].xyzx, r0.xxxx, r6.xyzx
          mad r6.xyz, cb0[13].xyzx, r0.zzzz, r6.xyzx
          add_sat r6.xyz, r6.xyzx, cb0[14].xyzx
          div r7.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[19].x
          mad r5.w, r6.y, cb0[19].x, l(-0.500000)
          frc r6.y, r5.w
          add r5.w, r5.w, -r6.y
          add r5.w, r5.w, r6.z
          mul r6.w, r7.y, r5.w
          mov r7.x, l(0)
          add r7.xy, r6.xwxx, r7.xyxx
          sample_l r8.xyzw, r6.xwxx, t0.xyzw, s0, l(0.000000)
          sample_l r9.xyzw, r7.xyxx, t0.xyzw, s0, l(0.000000)
          add r9.xyz, -r8.xyzx, r9.xyzx
          mad r8.xyz, r6.yyyy, r9.xyzx, r8.xyzx
          sample_l r9.xyzw, r6.xwxx, t1.xyzw, s1, l(0.000000)
          sample_l r7.xyzw, r7.xyxx, t1.xyzw, s1, l(0.000000)
          add r6.xzw, -r9.xxyz, r7.xxyz
          mad r6.xyz, r6.yyyy, r6.xzwx, r9.xyzx
          mul r7.xyz, r8.xyzx, cb0[19].yyyy
          dp3 r5.w, r0.xyzx, r0.xyzx
          sqrt r5.w, r5.w
          mul r8.xyz, r7.xyzx, cb0[19].zzzz
          min r6.w, r8.y, r8.x
          min r6.w, r8.z, r6.w
          mul r7.w, r0.w, cb0[21].y
          mad r5.w, -r5.w, cb0[21].x, -r7.w
          mul r5.w, r5.w, l(1.442695)
          exp r5.w, r5.w
          mad r9.xyz, -r7.xyzx, cb0[19].zzzz, r6.wwww
          mad r8.xyz, r5.wwww, r9.xyzx, r8.xyzx
          mul r8.xyz, -r0.wwww, r8.xyzx
          mul r8.xyz, r8.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
          exp r8.xyz, r8.xyzx
          mul r6.xyz, r6.xyzx, cb0[30].xxxx
          div r6.xyz, r6.xyzx, r7.xyzx
          mad r6.xyz, cb2[9].xyzx, r8.xyzx, r6.xyzx
          mov_sat r0.w, -r1.y
          add r5.w, cb0[29].w, l(-1.000000)
          mad r0.w, r0.w, r5.w, l(1.000000)
          mul r6.xyz, r0.wwww, r6.xyzx
        else 
          mov r6.xyz, cb2[9].xyzx
          mov r8.xyz, l(1.000000,1.000000,1.000000,0)
        endif 
      else 
        mov r6.xyz, cb2[9].xyzx
        mov r8.xyz, l(1.000000,1.000000,1.000000,0)
      endif 
      mad r0.w, v3.y, l(0.500000), l(0.500000)
      add r7.xyz, cb0[8].xyzx, -cb0[9].xyzx
      mad r7.xyz, r0.wwww, r7.xyzx, cb0[9].xyzx
      mad r6.xyz, r7.xyzx, r8.xyzx, r6.xyzx
      dp3 r0.w, r6.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
      add r7.xyz, -r6.xyzx, r0.wwww
      mad r6.xyz, cb0[27].yyyy, r7.xyzx, r6.xyzx
    else 
      mov r6.xyz, cb2[9].xyzx
    endif 
  else 
    mov r6.xyz, cb2[9].xyzx
    mov r4.w, l(0)
  endif 
  if_z r4.w
    mad r7.xyz, -r0.xyzx, cb2[17].wwww, cb2[17].xyzx
    dp3 r0.w, r7.xyzx, r7.xyzx
    rsq r4.w, r0.w
    mul r7.xyz, r4.wwww, r7.xyzx
    mul r0.w, r0.w, cb2[17].w
    div r8.x, r0.w, cb2[25].w
    mov r8.y, l(0)
    sample_l r8.xyzw, r8.xyxx, t2.xyzw, s2, l(0.000000)
    dp3_sat r0.w, r7.xyzx, cb2[33].xyzx
    add r0.w, r0.w, -cb2[25].x
    mul_sat r0.w, r0.w, cb2[25].y
    mul r0.w, r0.w, r8.x
    dp3 r4.x, r7.xyzx, r4.xyzx
    mad r4.x, r4.x, cb0[28].x, l(1.000000)
    add_sat r4.x, r4.x, -cb0[28].x
    mul r0.w, r0.w, r4.x
    mul r4.xyz, r0.wwww, r6.xyzx
  else 
    mov r4.xyz, l(0,0,0,0)
  endif 
else 
  mov r4.xyz, l(0,0,0,0)
endif 
add r4.xyz, r4.xyzx, r5.xyzx
add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r4.xyz, cb0[27].wwww, r5.xyzx, r4.xyzx
mad r5.xyz, cb0[33].xyzx, v3.yyyy, cb0[32].xyzx
mad r5.xyz, cb0[34].xyzx, v3.zzzz, r5.xyzx
mad r5.xyz, cb0[35].xyzx, v3.xxxx, r5.xyzx
mul r6.xyz, v3.xzxx, v3.yyzy
mad r5.xyz, cb0[36].xyzx, r6.xxxx, r5.xyzx
mad r5.xyz, cb0[37].xyzx, r6.yyyy, r5.xyzx
mad r5.xyz, cb0[39].xyzx, r6.zzzz, r5.xyzx
mul r6.xy, v3.yzyy, v3.yzyy
mad r0.w, r6.y, l(3.000000), l(-1.000000)
mad r5.xyz, cb0[38].xyzx, r0.wwww, r5.xyzx
mad r0.w, v3.x, v3.x, -r6.x
mad r5.xyz, cb0[40].xyzx, r0.wwww, r5.xyzx
add r0.w, cb0[31].y, cb0[31].x
add r0.w, r0.w, cb0[31].z
mul r0.w, r0.w, l(0.333333343)
mul r6.xyz, r0.wwww, |r5.xyzx|
dp3 r4.w, r6.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mad r5.xyz, -|r5.xyzx|, r0.wwww, r4.wwww
mad r5.xyz, cb0[27].yyyy, r5.xyzx, r6.xyzx
mad r5.xyz, cb0[27].xxxx, -r5.xyzx, r5.xyzx
mad o1.xyz, v1.xyzx, r4.xyzx, r5.xyzx

// Relocated to here with asmtool.py
mov o0.xyzw, r3.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 8dc2edec57d3b011-vs.txt
ne r10.w, r3.w, l(1.0)
if_nz r10.w
  add r10.w, r3.w, -r10.y
  mad r3.x, r10.w, r10.x, r3.x
endif

mul r4.xz, r3.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mul r0.w, r3.y, cb1[5].x
mul r4.w, r0.w, l(0.500000)
add o4.xy, r4.zzzz, r4.xwxx
mul r0.w, r2.y, cb4[10].z
mad r0.w, cb4[9].z, r2.x, r0.w
mad r0.w, cb4[11].z, r2.z, r0.w
mad r0.w, cb4[12].z, r2.w, r0.w
mov o4.z, -r0.w
add r0.w, -r0.z, -cb0[54].y
add r0.w, r0.w, -cb1[5].y
add r2.x, cb0[54].z, cb0[54].y
div_sat r0.w, r0.w, r2.x
mul o1.w, r0.w, v1.w
dp3 r2.x, v3.xyzx, cb3[4].xyzx
dp3 r2.y, v3.xyzx, cb3[5].xyzx
dp3 r2.z, v3.xyzx, cb3[6].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul o7.xyz, r0.wwww, r2.xyzx

// mov o0.xyzw, r3.xyzw // Relocated from here with asmtool.py

mov o2.xy, v2.xyxx
mov o2.zw, v3.xxxy
mov o3.w, v3.z
mov o3.xyz, r0.xyzx
mov o4.w, r3.w
mov o5.xyzw, r1.xyzw
mov o6.xyz, l(0,0,0,0)
ret 
// Approximately 0 instruction slots used