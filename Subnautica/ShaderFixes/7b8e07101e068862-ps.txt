// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7b8e07101e068862-ps.txt
// 3DMigoto: 7b8e07101e068862 |    Unity headers extracted from UWE_Marmoset_Mesmer
//    Shader "UWE/Marmoset/Mesmer" {
//      Fallback "VertexLit"
//      SubShader 1/1 {
//        Tags { "RenderType"="Opaque" }
//        Pass 1/2 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="DEFERRED" "RenderType"="Opaque" }
//          ZWrite [_ZWrite]
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from UWE_Marmoset_Mesmer:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 212 14 2
//   undeciphered1a: 14
//   Keywords { "UNITY_HDR_ON" "LOD_FADE_CROSSFADE" "MARMO_SPECMAP" "FX_BUILDING" }
//   undeciphered2: 1 11 5 11 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1168
//   Vector 368 [_SpecColor]
//   Vector 384 [_Color]
//   Vector 400 [_MainTex_ST]
//   Float 416 [_UWE_EditorTime]
//   Float 420 [_UwePowerLoss]
//   Float 424 [_UweLocalLightScalar]
//   Float 428 [_IBLreductionAtNight]
//   Vector 432 [_BumpMap_ST]
//   Float 448 [_GlowStrengthNight]
//   Float 452 [_EmissionLMNight]
//   Float 464 [_minYpos]
//   Float 468 [_maxYpos]
//   Vector 496 [_DeformParams]
//   Vector 528 [_BorderColor]
//   Float 544 [_NoiseThickness]
//   Float 548 [_NoiseStr]
//   Vector 560 [_BuildParams]
//   Float 576 [_BuildLinear]
//   Float 580 [_Built]
//   Float 584 [_SubConstructProgress]
//   Vector 592 [_ScrollSpeed]
//   Vector 608 [_ScrollTex_ST]
//   Vector 624 [_ScrollColor]
//   Vector 640 [_ColorStrength]
//   Vector 672 [_GlowScrollColor]
//   Float 688 [_Hypnotize]
//   Float 692 [_Gray]
//   Float 696 [_Brightness]
//   Float 700 [_SpecInt]
//   Float 704 [_Shininess]
//   Float 708 [_Fresnel]
//   Vector 720 [_SpecTex_ST]
//   Vector 736 [_Illum_ST]
//   Vector 752 [_GlowColor]
//   Float 768 [_GlowStrength]
//   Float 772 [_EmissionLM]
//   Float 780 [_Cutoff]
//   Float 784 [_AffectedByDayNightCycle]
//   Float 788 [_Outdoors]
//   Vector 800 [_ExposureIBL]
//   Vector 824 [_UniformOcclusion] 2
//   Vector 1008 [_SH0] 3
//   Vector 1024 [_SH1] 3
//   Vector 1040 [_SH2] 3
//   Vector 1056 [_SH3] 3
//   Vector 1072 [_SH4] 3
//   Vector 1088 [_SH5] 3
//   Vector 1104 [_SH6] 3
//   Vector 1120 [_SH7] 3
//   Vector 1136 [_SH8] 3
//   Matrix 832 [_SkyMatrix]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityPerDraw" 160
//   Vector 128 [unity_LODFade]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_DitherMaskLOD2D] 2D 1
//   SetTexture 1 [_MainTex] 2D 2
//   SetTexture 2 [_BumpMap] 2D 3
//   SetTexture 3 [_SpecTex] 2D 8
//   SetTexture 4 [_Illum] 2D 9
//   SetTexture 5 [_SpecCubeIBL] CUBE 10
//   SetTexture 6 [_EmissiveTex] 2D 5
//   SetTexture 7 [_ScrollTex2] 2D 7
//   SetTexture 8 [_DeformMap] 2D 4
//   SetTexture 9 [_ScrollTex] 2D 6
//   SetTexture 10 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:57:01 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyz         8     NONE   float       
// TEXCOORD                 8   xyz         9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[72], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[9], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v9.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7b8e07101e068862-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v6.xyzx, v6.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v6.xyzx
div r1.xy, v9.xyxx, v9.zzzz
frc r0.w, r1.y
mad r1.z, r0.w, l(0.062500), cb3[8].y
sample r1.xyzw, r1.xzxx, t0.xyzw, s1
add r0.w, r1.w, l(-0.500000)
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
add r0.w, cb0[26].x, cb1[0].y
add r1.xy, -cb0[26].zyzz, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r1.x, r1.x, cb0[49].x
add r1.zw, cb0[28].xxxy, -cb0[48].xxxy
mad r1.zw, r1.xxxx, r1.zzzw, cb0[48].xxxy
mul r2.xy, cb0[50].xyxx, cb0[51].zwzz
mad r3.zw, v4.xxxy, cb0[25].xxxy, cb0[25].zzzw
sample r4.xyzw, r3.zwzz, t1.xyzw, s2
mul r4.xyz, r4.xyzx, cb0[24].xyzx
mul r5.xyz, r4.xyzx, cb0[50].wwww
max r1.x, r1.x, l(0.000000)
min r1.x, r1.x, cb0[26].w
mad r2.xy, r1.xxxx, -r2.xyxx, r2.xyxx
mad r2.zw, v4.xxxy, cb0[27].xxxy, cb0[27].zzzw
sample r6.xyzw, r2.zwzz, t2.xyzw, s3
mad r6.xy, r6.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.x, r6.xyxx, r6.xyxx
min r1.x, r1.x, l(1.000000)
add r1.x, -r1.x, l(1.000000)
sqrt r6.z, r1.x
dp3 r1.x, r6.xyzx, r6.xyzx
rsq r1.x, r1.x
mul r6.xyz, r1.xxxx, r6.xyzx
dp3 r7.x, v1.xyzx, r6.xyzx
dp3 r7.y, v2.xyzx, r6.xyzx
dp3 r7.z, v3.xyzx, r6.xyzx
mad r2.zw, v4.xxxy, cb0[45].xxxy, cb0[45].zzzw
sample r8.xyzw, r2.zwzz, t3.xyzw, s8
dp3 r0.x, r6.xyzx, r0.xyzx
mad_sat r0.x, |r0.x|, -cb0[44].y, l(1.250000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.y, r0.x
mul r0.x, r0.x, cb0[43].w
mul r0.xyz, r0.xxxx, r8.xyzx
mul r0.xyz, r0.xyzx, cb0[23].xyzx
mul r0.xyz, r0.xyzx, cb0[50].wwww
add r1.x, -r8.w, l(1.000000)
mad r2.zw, -r1.xxxx, r1.xxxx, l(0.000000, 0.000000, 1.000000, 8.000000)
mad r1.x, -cb0[44].x, r2.z, r2.w
add r2.z, -r1.x, l(8.000000)
exp r2.z, r2.z
mad r2.w, r2.z, l(0.159154937), l(0.318309873)
mul r6.xyz, r0.xyzx, r2.wwww
mad r8.xy, v4.xyxx, cb0[46].xyxx, cb0[46].zwzz
sample r8.xyzw, r8.xyxx, t4.xyzw, s9
mul r8.xyz, r8.xyzx, cb0[47].xyzx
mul r8.xyz, r1.zzzz, r8.xyzx
mul r1.w, r1.w, r8.w
mul r9.xyz, r1.wwww, r5.xyzx
mad r8.xyz, r8.xyzx, cb0[50].wwww, r9.xyzx
add r9.xyz, -v5.xyzx, r15.xyzx
dp3 r1.w, r9.xyzx, r9.xyzx
rsq r1.w, r1.w
mul r9.xyz, r1.wwww, r9.xyzx
dp3 r1.w, -r9.xyzx, r7.xyzx
add r1.w, r1.w, r1.w
mad r9.xyz, r7.xyzx, -r1.wwww, -r9.xyzx
mov r10.x, cb0[52].x
mov r10.y, cb0[53].x
mov r10.z, cb0[54].x
mov r11.x, cb0[52].y
mov r11.y, cb0[53].y
mov r11.z, cb0[54].y
mov r12.x, cb0[52].z
mov r12.y, cb0[53].z
mov r12.z, cb0[54].z
mul r13.xyz, r9.zzzz, r12.xyzx
mad r9.yzw, r11.xxyz, r9.yyyy, r13.xxyz
mad r9.xyz, r10.xyzx, r9.xxxx, r9.yzwy
sample_l r9.xyzw, r9.xyzx, t5.xyzw, s10, r1.x
mul r0.xyz, r0.xyzx, r9.xyzx
mul r0.xyz, r2.yyyy, r0.xyzx
mad r0.xyz, r8.xyzx, r1.yyyy, r0.xyzx
ge r1.x, l(0.000000), cb0[49].x
mul r8.xyz, r7.zzzz, r12.xyzx
mad r8.xyz, r11.xyzx, r7.yyyy, r8.xyzx
mad r8.xyz, r10.xyzx, r7.xxxx, r8.xyzx
dp3 r1.y, r8.xyzx, r8.xyzx
max r1.y, r1.y, l(0.001000)
rsq r1.y, r1.y
mul r8.xyz, r1.yyyy, r8.xyzx
mad r9.xyz, cb0[64].xyzx, r8.yyyy, cb0[63].xyzx
mad r9.xyz, cb0[65].xyzx, r8.zzzz, r9.xyzx
mad r9.xyz, cb0[66].xyzx, r8.xxxx, r9.xyzx
mul r10.xyz, r8.xzxx, r8.yyzy
mad r9.xyz, cb0[67].xyzx, r10.xxxx, r9.xyzx
mad r9.xyz, cb0[68].xyzx, r10.yyyy, r9.xyzx
mad r9.xyz, cb0[70].xyzx, r10.zzzz, r9.xyzx
mul r1.yw, r8.yyyz, r8.yyyz
mad r1.w, r1.w, l(3.000000), l(-1.000000)
mad r8.yzw, cb0[69].xxyz, r1.wwww, r9.xxyz
mad r1.y, r8.x, r8.x, -r1.y
mad r8.xyz, cb0[71].xyzx, r1.yyyy, r8.yzwy
mul r2.xyw, r2.xxxx, |r8.xyxz|
and r1.xyw, r1.xxxx, r2.xyxw
mad r0.xyz, r1.xywx, r5.xyzx, r0.xyzx
mul r8.y, r0.w, cb0[35].w
mov r9.x, v1.z
mov r9.y, v2.z
mov r9.z, v3.z
mul r1.xyw, r9.xyxz, r9.xyxz
mul r1.xyw, r1.xyxw, l(1.960000, 1.960000, 0.000000, 1.960000)
mul r1.xyw, r1.xyxw, r1.xyxw
add r1.xyw, r1.xyxw, r1.xyxw
dp3 r2.x, r1.xywx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r1.xyw, r1.xyxw, r2.xxxx
mul r2.xyw, v5.xyxz, cb0[35].xxxx
add r9.xy, r2.xyxx, r2.xyxx
frc r9.xyz, r9.yxxy
add r9.xyz, r9.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r2.xyw, r2.wwwy, l(2.000000, 2.000000, 0.000000, 2.000000), |r9.xyxz|
frc r2.xyw, r2.xyxw
add r2.xyw, r2.xyxw, l(-0.500000, -0.500000, 0.000000, -0.500000)
mad r2.xyw, v5.xyxz, cb0[35].xxxx, |r2.xyxw|
frc r2.y, r2.y
add r2.y, r2.y, l(-0.500000)
add r2.x, |r2.y|, r2.x
frc r2.x, r2.x
add r2.x, r2.x, l(-0.500000)
add r2.x, |r2.x|, r2.w
frc r2.x, r2.x
mov r8.xz, l(0,0,0,0)
mad r8.xyz, v5.xyzx, cb0[35].zzzz, r8.xyzx
add r2.yw, r8.xxxy, r8.xxxy
frc r9.xyz, r2.wyyw
add r9.xyz, r9.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r9.xyz, r8.zzyz, l(2.000000, 2.000000, 2.000000, 0.000000), |r9.xyzx|
frc r9.xyz, r9.xyzx
add r9.xyz, r9.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r8.xyz, r8.xyzx, |r9.xyzx|
frc r2.y, r8.y
add r2.xy, r2.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r2.y, |r2.y|, r8.x
frc r2.y, r2.y
add r2.y, r2.y, l(-0.500000)
add r2.y, |r2.y|, r8.z
frc r2.y, r2.y
add r2.y, r2.y, l(-0.500000)
mul r8.xy, |r2.yyyy|, l(0.714285731, 0.649350643, 0.000000, 0.000000)
mul r9.xyz, v5.xyzx, cb0[35].yyyy
mul r9.xyz, r9.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000)
sample r10.xyzw, r9.yzyy, t6.xyzw, s5
sample r11.xyzw, r9.xzxx, t6.xyzw, s5
mul r11.xyz, r1.yyyy, r11.xyzx
mad r10.xyz, r1.xxxx, r10.xyzx, r11.xyzx
sample r9.xyzw, r9.yxyy, t6.xyzw, s5
mad r1.xyw, r1.wwww, r9.xyxz, r10.xyxz
mul r2.w, r8.x, r1.x
add r4.w, cb0[36].y, cb0[36].z
mad r2.x, |r2.x|, l(0.714285731), r2.w
mul r2.w, cb0[34].y, l(0.220000)
mad r2.x, r2.x, cb0[34].y, -r2.w
add r2.w, -v5.y, cb0[29].x
add r5.w, -cb0[29].x, cb0[29].y
div r2.w, r2.w, |r5.w|
add r2.w, r2.w, r4.w
add_sat r2.w, r2.x, r2.w
add r2.x, -r2.x, r4.w
add r2.w, r2.w, l(0.400000)
add r2.w, -r2.x, r2.w
mad r2.x, cb0[36].x, r2.w, r2.x
add r2.w, -r2.x, cb0[34].x
mad r1.xyw, r1.xyxw, r8.xxxx, r2.wwww
mul_sat r1.xyw, r1.xyxw, l(8.000000, 8.000000, 0.000000, 8.000000)
mul r1.xyw, r1.xyxw, cb0[33].xyxz
mul r1.xyw, r1.xyxw, l(20.000000, 20.000000, 0.000000, 20.000000)
mad r2.y, |r2.y|, l(-1.29870129), l(3.000000)
mul r2.w, r8.y, r8.y
mul r2.y, r2.w, r2.y
mad r0.xyz, r1.xywx, r2.yyyy, r0.xyzx
mov_sat r2.x, r2.x
mad r3.xy, v4.xyxx, cb0[38].xyxx, cb0[38].zwzz
mad r8.xyzw, cb0[37].xyzw, r0.wwww, r3.xyzw
sample r9.xyzw, r8.zwzz, t7.xyzw, s7
mul r1.x, r9.x, cb0[40].w
mad r1.yw, cb0[31].xxxy, r0.wwww, r3.zzzw
sample r3.xyzw, r1.ywyy, t8.xyzw, s4
mul r9.xzw, r9.wwww, cb0[42].xxyz
mul r9.xzw, r9.xxzw, cb0[40].xxyz
mad r0.xyz, r9.xzwx, r3.xyzx, r0.xyzx
add r1.yw, -r8.xxxy, r3.xxxy
mad r1.yw, cb0[31].zzzw, r1.yyyw, r8.xxxy
sample r8.xyzw, r1.ywyy, t9.xyzw, s6
add r0.w, r3.x, l(0.800000)
mad r0.w, r9.y, r0.w, l(-0.600000)
mul r1.y, cb0[39].w, cb0[43].x
mad r1.x, r1.x, r8.w, -r0.w
mad_sat r0.w, r1.y, r1.x, r0.w
mad r1.xyw, -r4.xyxz, cb0[50].wwww, cb0[39].xyxz
mad r1.xyw, r0.wwww, r1.xyxw, r5.xyxz
mad r3.xyz, cb0[39].xyzx, r1.zzzz, -r0.xyzx
mad r0.xyz, r0.wwww, r3.xyzx, r0.xyzx
add r0.w, r2.x, -cb0[48].w
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
add r0.w, r1.y, r1.x
add r0.w, r1.w, r0.w
mad r2.xyw, r0.wwww, l(0.333333343, 0.333333343, 0.000000, 0.333333343), -r1.xyxw
mad r1.xyz, cb0[43].yyyy, r2.xywx, r1.xywx
add r1.xyz, r1.xyzx, cb0[43].zzzz
eq r0.w, cb4[0].x, l(1.000000)
if_nz r0.w
  eq r0.w, cb4[0].y, l(1.000000)
  mul r2.xyw, v2.wwww, cb4[2].xyxz
  mad r2.xyw, cb4[1].xyxz, v1.wwww, r2.xyxw
  mad r2.xyw, cb4[3].xyxz, v3.wwww, r2.xyxw
  add r2.xyw, r2.xyxw, cb4[4].xyxz
  mov r3.y, v1.w
  mov r3.z, v2.w
  mov r3.w, v3.w
  movc r2.xyw, r0.wwww, r2.xyxw, r3.yzyw
  add r2.xyw, r2.xyxw, -cb4[6].xyxz
  mul r3.yzw, r2.xxyw, cb4[5].xxyz
  mul r0.w, r3.y, l(0.250000)
  mul r1.w, cb4[0].z, l(0.500000)
  mad r2.x, -cb4[0].z, l(0.500000), l(0.250000)
  max r0.w, r0.w, r1.w
  min r3.x, r2.x, r0.w
  sample r4.xyzw, r3.xzwx, t10.xyzw, s0
  add r2.xyw, r3.xzxw, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r5.xyzw, r2.xywx, t10.xyzw, s0
  add r2.xyw, r3.xzxw, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r3.xyzw, r2.xywx, t10.xyzw, s0
  mov r7.w, l(1.000000)
  dp4 r4.x, r4.xyzw, r7.xyzw
  dp4 r4.y, r5.xyzw, r7.xyzw
  dp4 r4.z, r3.xyzw, r7.xyzw
else 
  mov r7.w, l(1.000000)
  dp4 r4.x, cb2[38].xyzw, r7.xyzw
  dp4 r4.y, cb2[39].xyzw, r7.xyzw
  dp4 r4.z, cb2[40].xyzw, r7.xyzw
endif 
max r2.xyw, r4.xyxz, l(0.000000, 0.000000, 0.000000, 0.000000)
mul o1.xyz, r6.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000)
mul o1.w, r2.z, l(0.015625)
mad o2.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mad o3.xyz, r1.xyzx, r2.xywx, r0.xyzx
add r0.xy, -cb0[49].yxyy, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r0.x, r0.y, l(2.000000), r0.x
mul o2.w, r0.x, l(0.333333343)
mov o0.xyz, r1.xyzx
mov o0.w, l(1.000000)
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used