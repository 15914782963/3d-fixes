// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 264242e43a6a9e12-ps.txt
// 3DMigoto: 264242e43a6a9e12 |    Unity headers extracted from Custom_DynamicMagmaBlob
//    Shader "Custom/DynamicMagmaBlob" {
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="AlphaTest" "RenderType"="Opaque" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="AlphaTest" "RenderType"="Opaque" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_DynamicMagmaBlob:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 71 9 2
//   undeciphered1a: 7
//   Keywords { "POINT" }
//   undeciphered2: 1 7 4 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 512
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Float 128 [_FlowSpeed]
//   Float 132 [_EmissiveCut]
//   Float 496 [_Cutoff]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_Emissive] 2D 6
//   SetTexture 1 [_SigMap] 2D 5
//   SetTexture 2 [_RampTex] 2D 2
//   SetTexture 3 [_MainTex] 2D 3
//   SetTexture 4 [_BumpMap] 2D 4
//   SetTexture 5 [_LightTexture0] 2D 1
//   SetTexture 6 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:54:11 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy  
// TEXCOORD                 6     zw        2     NONE   float       
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 264242e43a6a9e12-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v6.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r1.xyz, -v6.xyzx, r8.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
sample r2.xyzw, v1.zwzz, t0.xyzw, s6
sample r3.xyzw, v2.xyxx, t1.xyzw, s5
add r1.w, r2.x, -cb0[8].y
mul_sat r1.w, r1.w, l(10.000000)
add r2.y, -r1.w, cb0[8].y
add r2.y, r2.y, l(1.000000)
mul r4.x, r2.y, l(0.500000)
mov r4.yz, l(0,0.500000,0,0)
sample r5.xyzw, r4.xyxx, t2.xyzw, s2
mul r2.y, r2.x, l(0.200000)
mad r2.y, cb1[0].y, cb0[8].x, r2.y
mul r4.w, r1.w, r2.y
add r2.yz, r4.zzwz, v1.xxyx
sample r4.xyzw, v1.xyxx, t3.xyzw, s3
sample r6.xyzw, r2.yzyy, t3.xyzw, s3
mul r3.yzw, r6.xxyz, l(0.000000, 5.000000, 5.000000, 5.000000)
mad r3.yzw, r3.yyzw, r5.xxyz, -r4.xxyz
mad r3.yzw, r1.wwww, r3.yyzw, r4.xxyz
sample r4.xyzw, v1.xyxx, t4.xyzw, s4
mad r4.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r4.xyxx, r4.xyxx
min r2.w, r2.w, l(1.000000)
add r2.xw, -r2.xxxw, l(1.000000, 0.000000, 0.000000, 1.000000)
sqrt r4.z, r2.w
sample r5.xyzw, r2.yzyy, t4.xyzw, s4
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.y, r5.xyxx, r5.xyxx
min r2.y, r2.y, l(1.000000)
add r2.y, -r2.y, l(1.000000)
sqrt r5.z, r2.y
add r2.yzw, -r4.xxyz, r5.xxyz
mad r2.yzw, r1.wwww, r2.yyzw, r4.xxyz
add r1.w, r2.x, -cb0[31].x
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
mul r4.xyz, v6.yyyy, cb0[5].xyzx
mad r4.xyz, cb0[4].xyzx, v6.xxxx, r4.xyzx
mad r4.xyz, cb0[6].xyzx, v6.zzzz, r4.xyzx
add r4.xyz, r4.xyzx, cb0[7].xyzx
eq r1.w, cb3[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb3[0].y, l(1.000000)
  mul r5.xyz, v6.yyyy, cb3[2].xyzx
  mad r5.xyz, cb3[1].xyzx, v6.xxxx, r5.xyzx
  mad r5.xyz, cb3[3].xyzx, v6.zzzz, r5.xyzx
  add r5.xyz, r5.xyzx, cb3[4].xyzx
  movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  add r5.xyz, r5.xyzx, -cb3[6].xyzx
  mul r5.yzw, r5.xxyz, cb3[5].xxyz
  mad r1.w, r5.y, l(0.250000), l(0.750000)
  mad r4.w, cb3[0].z, l(0.500000), l(0.750000)
  max r5.x, r1.w, r4.w
  sample r5.xyzw, r5.xzwx, t6.xyzw, s0
else 
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r1.w, r5.xyzw, cb2[45].xyzw
dp3 r4.x, r4.xyzx, r4.xyzx
sample r4.xyzw, r4.xxxx, t5.xyzw, s1
mul r1.w, r1.w, r4.x
dp3 r4.x, v3.xyzx, r2.yzwy
dp3 r4.y, v4.xyzx, r2.yzwy
dp3 r4.z, v5.xyzx, r2.yzwy
mul r2.yzw, r1.wwww, cb0[2].xxyz
mad r1.xyz, r1.xyzx, r0.wwww, r0.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.x, r4.xyzx, r0.xyzx
dp3 r0.y, r4.xyzx, r1.xyzx
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, cb0[3].w, l(128.000000)
log r0.y, r0.y
mul r0.y, r0.y, r0.z
exp r0.y, r0.y
mul r0.y, r3.x, r0.y
mul r1.xyz, r2.yzwy, r3.yzwy
mul r2.yzw, r2.yyzw, cb0[3].xxyz
mul r0.yzw, r0.yyyy, r2.yyzw
mad o0.xyz, r1.xyzx, r0.xxxx, r0.yzwy
mov o0.w, r2.x
ret 
// Approximately 0 instruction slots used