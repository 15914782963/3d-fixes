// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 456ec9b8880a2c2f-ps.txt
// 3DMigoto: 456ec9b8880a2c2f | Matched 2 variants of 1 shaders: MarmosetUBER
//
//       Unity headers extracted from MarmosetUBER
//       Shader "MarmosetUBER" {
//         Fallback "VertexLit"
//         SubShader 1/1 {
//           Tags { "RenderType"="Opaque" }
//           Pass 2/3 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="FORWARDBASE" "RenderType"="Opaque" }
//             ZWrite [_ZWrite]
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from MarmosetUBER:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 266 12 11
//      undeciphered1a: 13
// 2:   Keywords { "DIRECTIONAL" "LOD_FADE_CROSSFADE" "UWE_SIG" "UWE_INFECTION" }
// 1:   Keywords { "DIRECTIONAL" "UWE_SIG" "UWE_INFECTION" }
//      undeciphered2: 1 9 4 9 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 960
//      Float 0 [_UweFogEnabled]
//      Float 4 [_UweAboveWaterFogStartDistance]
//      Vector 16 [_UweFogVsLightDirection] 3
//      Vector 48 [_UweFogLightColor]
//      Vector 64 [_UweTopAmbientColor] 3
//      Vector 96 [_UweVsWaterPlane]
//      Float 240 [_UweVolumeTextureSlices]
//      Float 244 [_UweExtinctionAndScatteringScale]
//      Float 248 [_UweSunAttenuationFactor]
//      Vector 256 [_UweFogMiePhaseConst] 3
//      Float 280 [_SkyFogDensity]
//      Vector 288 [_SkyFogColor] 3
//      Float 300 [settingsSampleDistance]
//      Vector 352 [_LightColor0]
//      Vector 368 [_SpecColor]
//      Float 384 [_EnableSimpleGlass]
//      Vector 400 [_Color]
//      Vector 416 [_MainTex_ST]
//      Float 440 [_UweLocalLightScalar]
//      Float 444 [_IBLreductionAtNight]
//      Vector 448 [_BumpMap_ST]
//      Float 468 [_InfectionAmount]
//      Vector 480 [_InfectionScale]
//      Vector 496 [_InfectionOffset]
//      Float 560 [_Gray]
//      Float 564 [_Brightness]
//      Float 568 [_SpecInt]
//      Float 572 [_Shininess]
//      Float 576 [_Fresnel]
//      Float 580 [_AffectedByDayNightCycle]
//      Vector 592 [_ExposureIBL]
//      Vector 616 [_UniformOcclusion] 2
//      Vector 800 [_SH0] 3
//      Vector 816 [_SH1] 3
//      Vector 832 [_SH2] 3
//      Vector 848 [_SH3] 3
//      Vector 864 [_SH4] 3
//      Vector 880 [_SH5] 3
//      Vector 896 [_SH6] 3
//      Vector 912 [_SH7] 3
//      Vector 928 [_SH8] 3
//      Matrix 112 [_UweCameraToVolumeMatrix]
//      Matrix 624 [_SkyMatrix]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 752
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      Vector 720 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_MainTex] 2D 4
//      SetTexture 1 [_InfectionAlbedomap] 2D 6
//      SetTexture 2 [_InfectionNormalMap] 2D 7
//      SetTexture 3 [_BumpMap] 2D 5
//      SetTexture 4 [_SpecCubeIBL] CUBE 8
//      SetTexture 5 [_UweExtinctionTexture] 2D 1
//      SetTexture 6 [_UweScatteringTexture] 2D 2
//      SetTexture 7 [_UweEmissiveTexture] 2D 3
//      SetTexture 8 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:55:15 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
// TEXCOORD                 3   xyzw        5     NONE   float   xy  
// TEXCOORD                 4   xyzw        6     NONE   float   xyzw
// TEXCOORD                 5   xyz         7     NONE   float   xyz 
// TEXCOORD                 6   xyzw        8     NONE   float       
// TEXCOORD                 7   xyz         9     NONE   float       
// TEXCOORD                 8   xyzw       10     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[59], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyz
dcl_input_ps linear v10.xyzw
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 456ec9b8880a2c2f-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.y, v2.w
mov r0.z, v3.w
mov r0.w, v4.w
add r1.xyz, -r0.yzwy, r14.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
dp3 r1.w, v7.xyzx, v7.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, v7.xyzx
add r1.w, -cb0[27].z, l(1.000000)
mul r1.w, r1.w, cb0[36].y
mul r3.xy, cb0[37].xyxx, cb0[38].zwzz
mad r3.zw, v5.xxxy, cb0[26].xxxy, cb0[26].zzzw
sample r4.xyzw, r3.zwzz, t0.xyzw, s4
mul r5.xyzw, r4.xyzw, cb0[25].xyzw
mov r6.x, v1.w
mov r6.y, v6.w
mov r6.z, v10.w
mad r6.xyz, r6.xyzx, cb0[30].xyzx, cb0[31].xyzx
dp3 r2.w, v1.xyzx, v1.xyzx
rsq r2.w, r2.w
mul r7.xyz, r2.wwww, v1.xyzx
mul r7.xyz, r7.xyzx, r7.xyzx
mul r7.xyz, r7.xyzx, l(1.960000, 1.960000, 1.960000, 0.000000)
mul r7.xyz, r7.xyzx, r7.xyzx
add r7.xyz, r7.xyzx, r7.xyzx
dp3 r2.w, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r7.xyz, r7.xyzx, r2.wwww
sample r8.xyzw, r6.yzyy, t1.xyzw, s6
sample r9.xyzw, r6.xzxx, t1.xyzw, s6
mul r9.xyzw, r7.yyyy, r9.xyzw
mad r8.xyzw, r7.xxxx, r8.xyzw, r9.xyzw
sample r9.xyzw, r6.yxyy, t1.xyzw, s6
mad r8.xyzw, r7.zzzz, r9.xyzw, r8.xyzw
mul r2.w, r8.w, cb0[29].y
mad r4.xyz, -r4.xyzx, cb0[25].xyzx, r8.xyzx
mad r4.xyz, r2.wwww, r4.xyzx, r5.xyzx
mul r3.z, r2.w, r8.w
max r3.z, r3.z, r5.w
mul r4.xyz, r4.xyzx, cb0[37].wwww
add r3.z, r3.z, l(-1.000000)
mad r3.z, cb0[24].x, r3.z, l(1.000000)
mul r4.xyw, r3.zzzz, r4.xyxz
max r1.w, r1.w, l(0.000000)
min r1.w, r1.w, cb0[27].w
mad r3.xy, r1.wwww, -r3.xyxx, r3.xyxx
sample r5.xyzw, r6.yzyy, t2.xyzw, s7
sample r9.xyzw, r6.xzxx, t2.xyzw, s7
mul r9.xyz, r7.yyyy, r9.xyzx
mad r5.xyz, r7.xxxx, r5.xyzx, r9.xyzx
sample r6.xyzw, r6.yxyy, t2.xyzw, s7
mad r5.xyz, r7.zzzz, r6.xyzx, r5.xyzx
mad r6.xy, v5.xyxx, cb0[28].xyxx, cb0[28].zwzz
sample r6.xyzw, r6.xyxx, t3.xyzw, s5
mad r6.xy, r6.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r6.xyxx, r6.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r6.z, r1.w
mul r5.xy, r5.xyxx, cb0[29].yyyy
mul r7.xy, r5.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000)
mov r7.z, l(0)
mad r5.xyw, r2.wwww, r7.xyxz, r6.xyxz
dp3 r1.w, r5.xywx, r5.xywx
rsq r1.w, r1.w
mul r5.xyw, r1.wwww, r5.xyxw
dp3 r6.x, v2.xyzx, r5.xywx
dp3 r6.y, v3.xyzx, r5.xywx
dp3 r6.z, v4.xyzx, r5.xywx
add r7.xyzw, r8.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
mad r7.xyzw, r2.wwww, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
dp3 r1.w, r5.xywx, r2.xyzx
mad_sat r1.w, |r1.w|, -cb0[36].x, l(1.250000)
mul r2.x, r1.w, r1.w
mul r2.x, r2.x, r2.x
mul r1.w, r1.w, r2.x
mul r1.w, r1.w, cb0[35].z
mul r2.xyz, r1.wwww, r7.xyzx
mul r2.xyz, r2.xyzx, cb0[23].xyzx
mul r2.xyz, r2.xyzx, cb0[37].wwww
add r1.w, -r7.w, l(1.000000)
mad r5.xy, -r1.wwww, r1.wwww, l(1.000000, 8.000000, 0.000000, 0.000000)
mad r1.w, -cb0[35].w, r5.x, r5.y
add r3.w, -r1.w, l(8.000000)
exp r3.w, r3.w
mad r5.x, r3.w, l(0.159154937), l(0.318309873)
mul r5.xyw, r2.xyxz, r5.xxxx
mul r7.xyz, r8.xyzx, r5.zzzz
mul r7.xyz, r2.wwww, r7.xyzx
add r8.xyz, -v6.xyzx, r14.xyzx
dp3 r2.w, r8.xyzx, r8.xyzx
rsq r2.w, r2.w
mul r8.xyz, r2.wwww, r8.xyzx
dp3 r2.w, -r8.xyzx, r6.xyzx
add r2.w, r2.w, r2.w
mad r8.xyz, r6.xyzx, -r2.wwww, -r8.xyzx
mov r9.x, cb0[39].x
mov r9.y, cb0[40].x
mov r9.z, cb0[41].x
mov r10.x, cb0[39].y
mov r10.y, cb0[40].y
mov r10.z, cb0[41].y
mov r11.x, cb0[39].z
mov r11.y, cb0[40].z
mov r11.z, cb0[41].z
mul r12.xyz, r8.zzzz, r11.xyzx
mad r8.yzw, r10.xxyz, r8.yyyy, r12.xxyz
mad r8.xyz, r9.xyzx, r8.xxxx, r8.yzwy
sample_l r8.xyzw, r8.xyzx, t4.xyzw, s8, r1.w
mul r2.xyz, r2.xyzx, r8.xyzx
mul r2.xyz, r3.yyyy, r2.xyzx
mad r2.xyz, r7.xyzx, l(75.000000, 75.000000, 75.000000, 0.000000), r2.xyzx
ge r1.w, l(0.000000), cb0[36].y
mul r7.xyz, r6.zzzz, r11.xyzx
mad r7.xyz, r10.xyzx, r6.yyyy, r7.xyzx
mad r7.xyz, r9.xyzx, r6.xxxx, r7.xyzx
dp3 r2.w, r7.xyzx, r7.xyzx
max r2.w, r2.w, l(0.001000)
rsq r2.w, r2.w
mul r7.xyz, r2.wwww, r7.xyzx
mad r8.xyz, cb0[51].xyzx, r7.yyyy, cb0[50].xyzx
mad r8.xyz, cb0[52].xyzx, r7.zzzz, r8.xyzx
mad r8.xyz, cb0[53].xyzx, r7.xxxx, r8.xyzx
mul r9.xyz, r7.xzxx, r7.yyzy
mad r8.xyz, cb0[54].xyzx, r9.xxxx, r8.xyzx
mad r8.xyz, cb0[55].xyzx, r9.yyyy, r8.xyzx
mad r8.xyz, cb0[57].xyzx, r9.zzzz, r8.xyzx
mul r7.yz, r7.yyzy, r7.yyzy
mad r2.w, r7.z, l(3.000000), l(-1.000000)
mad r8.xyz, cb0[56].xyzx, r2.wwww, r8.xyzx
mad r2.w, r7.x, r7.x, -r7.y
mad r7.xyz, cb0[58].xyzx, r2.wwww, r8.xyzx
mul r7.xyz, r3.xxxx, |r7.xyzx|
and r7.xyz, r1.wwww, r7.xyzx
mad r2.xyz, r7.xyzx, r4.xywx, r2.xyzx
add r1.w, r4.y, r4.x
mad r1.w, r4.z, r3.z, r1.w
mad r3.xyz, r1.wwww, l(0.333333343, 0.333333343, 0.333333343, 0.000000), -r4.xywx
mad r3.xyz, cb0[35].xxxx, r3.xyzx, r4.xywx
add r3.xyz, r3.xyzx, cb0[35].yyyy
eq r1.w, cb3[0].x, l(1.000000)
if_nz r1.w
  eq r2.w, cb3[0].y, l(1.000000)
  mul r4.xyz, v3.wwww, cb3[2].xyzx
  mad r4.xyz, cb3[1].xyzx, v2.wwww, r4.xyzx
  mad r4.xyz, cb3[3].xyzx, v4.wwww, r4.xyzx
  add r4.xyz, r4.xyzx, cb3[4].xyzx
  movc r4.xyz, r2.wwww, r4.xyzx, r0.yzwy
  add r4.xyz, r4.xyzx, -cb3[6].xyzx
  mul r4.yzw, r4.xxyz, cb3[5].xxyz
  mad r2.w, r4.y, l(0.250000), l(0.750000)
  mad r4.y, cb3[0].z, l(0.500000), l(0.750000)
  max r4.x, r2.w, r4.y
  sample r4.xyzw, r4.xzwx, t8.xyzw, s0
else 
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r2.w, r4.xyzw, cb2[45].xyzw
mul r4.xyz, r2.wwww, cb0[22].xyzx
if_nz r1.w
  eq r1.w, cb3[0].y, l(1.000000)
  mul r7.xyz, v3.wwww, cb3[2].xyzx
  mad r7.xyz, cb3[1].xyzx, v2.wwww, r7.xyzx
  mad r7.xyz, cb3[3].xyzx, v4.wwww, r7.xyzx
  add r7.xyz, r7.xyzx, cb3[4].xyzx
  movc r0.yzw, r1.wwww, r7.xxyz, r0.yyzw
  add r0.yzw, r0.yyzw, -cb3[6].xxyz
  mul r7.yzw, r0.yyzw, cb3[5].xxyz
  mul r0.y, r7.y, l(0.250000)
  mul r0.z, cb3[0].z, l(0.500000)
  mad r0.w, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.z, r0.y
  min r7.x, r0.w, r0.y
  sample r8.xyzw, r7.xzwx, t8.xyzw, s0
  add r0.yzw, r7.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r9.xyzw, r0.yzwy, t8.xyzw, s0
  add r0.yzw, r7.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r7.xyzw, r0.yzwy, t8.xyzw, s0
  mov r6.w, l(1.000000)
  dp4 r8.x, r8.xyzw, r6.xyzw
  dp4 r8.y, r9.xyzw, r6.xyzw
  dp4 r8.z, r7.xyzw, r6.xyzw
else 
  mov r6.w, l(1.000000)
  dp4 r8.x, cb2[38].xyzw, r6.xyzw
  dp4 r8.y, cb2[39].xyzw, r6.xyzw
  dp4 r8.z, cb2[40].xyzw, r6.xyzw
endif 
max r0.yzw, r8.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
rsq r1.w, r1.w
mul r7.xyz, r1.wwww, cb2[0].xyzx
dp3_sat r1.w, r6.xyzx, r7.xyzx
add r2.w, r1.w, r1.w
mul r8.xyz, r3.xyzx, r2.wwww
mad r1.xyz, r1.xyzx, r0.xxxx, r7.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
dp3_sat r0.x, r6.xyzx, r1.xyzx
add r1.x, r3.w, r3.w
log r0.x, r0.x
mul r0.x, r0.x, r1.x
exp r0.x, r0.x
mul r1.x, r1.w, l(10.000000)
min r1.x, r1.x, l(1.000000)
mul r0.x, r0.x, r1.x
mul r1.xyz, r4.xyzx, r0.xxxx
mul r1.xyz, r5.xywx, r1.xyzx
mul r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mad r1.xyz, r8.xyzx, r4.xyzx, r1.xyzx
mad r0.xyz, r3.xyzx, r0.yzwy, r1.xyzx
add r0.xyz, r2.xyzx, r0.xyzx
ne r1.x, cb0[0].x, l(0.000000)
if_nz r1.x
  dp3 r1.x, v10.xyzx, v10.xyzx
  sqrt r0.w, r1.x
  div r1.xyz, v10.xyzx, r0.wwww
  mul r2.xyz, r1.xyzx, cb0[18].wwww
  mul r3.xyz, r2.yyyy, cb0[8].xyzx
  mad r2.xyw, cb0[7].xyxz, r2.xxxx, r3.xyxz
  mad r2.xyz, cb0[9].xyzx, r2.zzzz, r2.xywx
  add_sat r2.xyz, r2.xyzx, cb0[10].xyzx
  div r3.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[15].x
  mad r1.w, r2.y, cb0[15].x, l(-0.500000)
  frc r2.y, r1.w
  add r1.w, r1.w, -r2.y
  add r1.w, r1.w, r2.z
  mul r2.w, r3.y, r1.w
  mov r3.x, l(0)
  add r3.xy, r2.xwxx, r3.xyxx
  sample_l r4.xyzw, r2.xwxx, t5.xyzw, s1, l(0.000000)
  sample_l r5.xyzw, r3.xyxx, t5.xyzw, s1, l(0.000000)
  add r5.xyzw, -r4.xyzw, r5.xyzw
  mad r4.xyzw, r2.yyyy, r5.wxyz, r4.wxyz
  dp3 r1.w, r1.xyzx, cb0[6].xyzx
  lt r2.z, l(0.000000), cb0[6].w
  if_nz r2.z
    lt r2.z, r1.w, l(-0.010000)
    not r3.z, r2.z
    div r3.w, -cb0[6].w, r1.w
    add r3.w, r3.w, cb0[0].y
    mul r5.x, -r0.w, cb0[17].z
    mul r5.x, r5.x, l(1.442695)
    exp r5.x, r5.x
    add r5.yzw, r0.xxyz, -cb0[18].xxyz
    mad o0.xyz, r5.xxxx, r5.yzwy, cb0[18].xyzx
    movc r4.x, r2.z, r3.w, cb0[0].y
    lt r3.w, r0.w, r4.x
    movc r2.z, r2.z, r3.w, l(-1)
    or r2.z, r3.z, r2.z
    mov o0.w, l(1.000000)
  else 
    div r3.z, -cb0[6].w, r1.w
    lt r3.w, l(0.000000), r3.z
    add r5.x, r0.w, -r3.z
    max r5.x, r5.x, l(0.000000)
    mul r5.x, -r5.x, cb0[17].z
    mul r5.x, r5.x, l(1.442695)
    exp r5.x, r5.x
    add r5.yzw, r0.xxyz, -cb0[18].xxyz
    mad r5.xyz, r5.xxxx, r5.yzwy, cb0[18].xyzx
    min r5.w, r0.w, r3.z
    movc r0.xyzw, r3.wwww, r5.xyzw, r0.xyzw
    mov r2.z, l(0)
  endif 
  if_z r2.z
    lt r2.z, r4.x, r0.w
    if_nz r2.z
      sample_l r5.xyzw, r2.xwxx, t6.xyzw, s2, l(0.000000)
      sample_l r6.xyzw, r3.xyxx, t6.xyzw, s2, l(0.000000)
      add r6.xyzw, -r5.xyzw, r6.xyzw
      mad r5.xyzw, r2.yyyy, r6.xyzw, r5.xyzw
      sample_l r6.xyzw, r2.xwxx, t7.xyzw, s3, l(0.000000)
      sample_l r3.xyzw, r3.xyxx, t7.xyzw, s3, l(0.000000)
      add r2.xzw, -r6.xxyz, r3.xxyz
      mad r2.xyz, r2.yyyy, r2.xzwx, r6.xyzx
      mul r3.xyz, r5.xyzx, cb0[15].yyyy
      mul r5.xyz, r4.yzwy, cb0[15].yyyy
      add r0.w, -r4.x, r0.w
      mul r6.xyz, r1.xyzx, r4.xxxx
      dp3 r1.x, r1.xyzx, -cb0[1].xyzx
      mad r1.x, -cb0[16].z, r1.x, cb0[16].y
      log r1.x, r1.x
      mul r1.x, r1.x, l(-1.500000)
      exp r1.x, r1.x
      mul r1.x, r1.x, cb0[16].x
      mul r1.xyz, r1.xxxx, r3.xyzx
      dp3 r2.w, cb0[1].xyzx, cb0[6].xyzx
      max r2.w, r2.w, l(0.000100)
      mad r3.xyz, cb0[3].xyzx, cb0[3].wwww, cb0[4].xyzx
      mul r3.xyz, r5.wwww, r3.xyzx
      mul r7.xyz, r5.xyzx, cb0[15].zzzz
      mul r8.xyz, r1.wwww, r7.xyzx
      div r8.xyz, r8.xyzx, r2.wwww
      mad r4.xyz, -r4.yzwy, cb0[15].yyyy, r8.xyzx
      dp3 r1.w, r6.xyzx, cb0[6].xyzx
      add r1.w, r1.w, cb0[6].w
      mul r6.xyz, r1.wwww, r7.xyzx
      div r6.xyz, r6.xyzx, r2.wwww
      mad r7.xyz, r0.wwww, r4.xyzx, r6.xyzx
      mul r7.xyz, r7.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r7.xyz, r7.xyzx
      mul r6.xyz, r6.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r6.xyz, r6.xyzx
      add r6.xyz, -r6.xyzx, r7.xyzx
      div r4.xyz, r6.xyzx, r4.xyzx
      mul r1.xyz, r1.xyzx, r3.xyzx
      mul r1.xyz, r4.xyzx, r1.xyzx
      max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      mul r3.xyz, r5.xyzx, -r0.wwww
      mul r3.xyz, r3.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r3.xyz, r3.xyzx
      mul r4.xyz, r0.wwww, -r5.xyzx
      mul r4.xyz, r4.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r4.xyz, r4.xyzx
      add r4.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      div r4.xyz, r4.xyzx, r5.xyzx
      mul r2.xyz, r2.xyzx, r4.xyzx
      max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      mad_sat r0.w, -r0.w, l(0.080000), l(10.000000)
      mov r1.w, l(1.000000)
      mul r0.w, r0.w, r1.w
      add r1.xyz, r1.xyzx, r2.xyzx
      mad o0.xyz, r0.xyzx, r3.xyzx, r1.xyzx
      mov o0.w, r0.w
    else 
      mov o0.xyz, r0.xyzx
      mov o0.w, l(1.000000)
    endif 
  endif 
else 
  mov o0.xyz, r0.xyzx
  mov o0.w, l(1.000000)
endif 
ret 
// Approximately 0 instruction slots used