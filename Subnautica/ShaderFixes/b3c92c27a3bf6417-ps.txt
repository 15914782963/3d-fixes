// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b3c92c27a3bf6417-ps.txt
// 3DMigoto: b3c92c27a3bf6417 |    Unity headers extracted from UWE_Overlays_HeatResist
//    Shader "UWE/Overlays/HeatResist" {
//      Fallback "Specular"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from UWE_Overlays_HeatResist:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 83 6 4
//   undeciphered1a: 6
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 7 4 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 512
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Vector 64 [_Color]
//   Vector 80 [_NoiseSpeed]
//   Vector 96 [_DeformSpeed]
//   Float 112 [_DeformStrength]
//   Float 120 [_AlphaFade]
//   Float 124 [_MainScale]
//   Float 128 [_UweFogEnabled]
//   Float 132 [_UweAboveWaterFogStartDistance]
//   Vector 224 [_UweVsWaterPlane]
//   Float 368 [_UweVolumeTextureSlices]
//   Float 372 [_UweExtinctionAndScatteringScale]
//   Float 428 [settingsSampleDistance]
//   Matrix 240 [_UweCameraToVolumeMatrix]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_DeformMap] 2D 5
//   SetTexture 1 [_NoiseMap] 2D 4
//   SetTexture 2 [_MainTex] 2D 1
//   SetTexture 3 [_MaskTex] 2D 3
//   SetTexture 4 [_BumpMap] 2D 2
//   SetTexture 5 [_UweExtinctionTexture] 2D 6
//   SetTexture 6 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:58:43 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xy          3     NONE   float   xy  
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyz         8     NONE   float   xyz 
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[27], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b3c92c27a3bf6417-ps.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v7.xyzx, r7.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyzw, v2.zwxy, cb0[7].wwww
mad r1.xy, cb0[6].xyxx, cb1[0].yyyy, r1.xyxx
sample r2.xyzw, r1.xyxx, t0.xyzw, s5
mad r1.xy, cb0[5].xyxx, cb1[0].yyyy, r1.zwzz
mad r1.xy, r2.xyxx, cb0[7].xxxx, r1.xyxx
sample r1.xyzw, r1.xyxx, t1.xyzw, s4
mul r2.xyzw, v1.xyzw, cb0[7].wwww
sample r3.xyzw, r2.xyxx, t2.xyzw, s1
mul r4.xyzw, r3.xyzw, cb0[4].xyzw
mul r1.y, r4.w, cb0[7].z
sample r5.xyzw, v3.xyxx, t3.xyzw, s3
mul r1.y, r1.y, r5.x
mul o0.w, r1.x, r1.y
sample r1.xyzw, r2.zwzz, t4.xyzw, s2
mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r1.xyxx, r1.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r1.z, r1.w
mul r1.w, r3.x, l(40.000000)
eq r2.x, cb3[0].x, l(1.000000)
if_nz r2.x
  eq r2.x, cb3[0].y, l(1.000000)
  mul r2.yzw, v7.yyyy, cb3[2].xxyz
  mad r2.yzw, cb3[1].xxyz, v7.xxxx, r2.yyzw
  mad r2.yzw, cb3[3].xxyz, v7.zzzz, r2.yyzw
  add r2.yzw, r2.yyzw, cb3[4].xxyz
  movc r2.xyz, r2.xxxx, r2.yzwy, v7.xyzx
  add r2.xyz, r2.xyzx, -cb3[6].xyzx
  mul r2.yzw, r2.xxyz, cb3[5].xxyz
  mad r2.y, r2.y, l(0.250000), l(0.750000)
  mad r3.x, cb3[0].z, l(0.500000), l(0.750000)
  max r2.x, r2.y, r3.x
  sample r2.xyzw, r2.xzwx, t6.xyzw, s0
else 
  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r2.x, r2.xyzw, cb2[45].xyzw
dp3 r3.x, v4.xyzx, r1.xyzx
dp3 r3.y, v5.xyzx, r1.xyzx
dp3 r3.z, v6.xyzx, r1.xyzx
mul r1.xyz, r2.xxxx, cb0[2].xyzx
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.xyzx, cb2[0].xyzx
dp3 r0.x, r3.xyzx, r0.xyzx
max r0.xw, r0.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.x, r0.x
mul r0.x, r0.x, l(51.200001)
exp r0.x, r0.x
mul r0.x, r1.w, r0.x
mul r2.xyz, r1.xyzx, r4.xyzx
mul r1.xyz, r1.xyzx, cb0[3].xyzx
mul r0.xyz, r0.xxxx, r1.xyzx
mad r0.xyz, r2.xyzx, r0.wwww, r0.xyzx
ne r0.w, cb0[8].x, l(0.000000)
if_nz r0.w
  dp3 r0.w, v8.xyzx, v8.xyzx
  sqrt r1.y, r0.w
  div r2.xyz, v8.xyzx, r1.yyyy
  mul r3.xyz, r2.xyzx, cb0[26].wwww
  mul r4.xyz, r3.yyyy, cb0[16].xyzx
  mad r3.xyw, cb0[15].xyxz, r3.xxxx, r4.xyxz
  mad r3.xyz, cb0[17].xyzx, r3.zzzz, r3.xywx
  add_sat r3.xyz, r3.xyzx, cb0[18].xyzx
  div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[23].x
  mad r0.w, r3.y, cb0[23].x, l(-0.500000)
  frc r1.z, r0.w
  add r0.w, r0.w, -r1.z
  add r0.w, r0.w, r3.z
  mul r3.w, r4.y, r0.w
  mov r4.x, l(0)
  add r3.yz, r3.xxwx, r4.xxyx
  sample_l r4.xyzw, r3.xwxx, t5.xyzw, s6, l(0.000000)
  sample_l r3.xyzw, r3.yzyy, t5.xyzw, s6, l(0.000000)
  add r3.xyzw, -r4.xyzw, r3.xyzw
  mad r3.xyzw, r1.zzzz, r3.wxyz, r4.wxyz
  mul r4.xyz, r3.yzwy, cb0[23].yyyy
  dp3 r0.w, r2.xyzx, cb0[14].xyzx
  lt r1.z, l(0.000000), cb0[14].w
  lt r1.w, r0.w, l(0.000000)
  not r2.x, r1.w
  div r0.w, -cb0[14].w, r0.w
  add r2.y, r0.w, cb0[8].y
  movc r1.x, r1.w, r2.y, cb0[8].y
  lt r1.w, l(0.000000), r0.w
  min r0.w, r0.w, r1.y
  movc r3.y, r1.w, r0.w, r1.y
  movc r1.xy, r1.zzzz, r1.xyxx, r3.xyxx
  and r0.w, r1.z, r2.x
  lt r1.z, r1.x, r1.y
  add r1.x, -r1.x, r1.y
  mul r1.xyw, r4.xyxz, -r1.xxxx
  mul r1.xyw, r1.xyxw, l(1.442695, 1.442695, 0.000000, 1.442695)
  exp r1.xyw, r1.xyxw
  mul r1.xyw, r0.xyxz, r1.xyxw
  movc r1.xyz, r1.zzzz, r1.xywx, r0.xyzx
  movc o0.xyz, r0.wwww, r0.xyzx, r1.xyzx
else 
  mov o0.xyz, r0.xyzx
endif 
ret 
// Approximately 0 instruction slots used