// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9a77523e51e58fbf-ps.txt
// 3DMigoto: 9a77523e51e58fbf |    Unity headers extracted from UWE_SIG Transparent Mask
//    Shader "UWE/SIG Transparent Mask" {
//      Fallback "Specular"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from UWE_SIG Transparent Mask:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 161 8 11
//   undeciphered1a: 10
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 8 4 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 448
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Vector 64 [_Color]
//   Vector 80 [_Tint]
//   Float 96 [_UweFogEnabled]
//   Float 100 [_UweAboveWaterFogStartDistance]
//   Vector 112 [_UweFogVsLightDirection] 3
//   Vector 144 [_UweFogLightColor]
//   Vector 160 [_UweTopAmbientColor] 3
//   Vector 192 [_UweVsWaterPlane]
//   Float 336 [_UweVolumeTextureSlices]
//   Float 340 [_UweExtinctionAndScatteringScale]
//   Float 344 [_UweSunAttenuationFactor]
//   Vector 352 [_UweFogMiePhaseConst] 3
//   Float 376 [_SkyFogDensity]
//   Vector 384 [_SkyFogColor] 3
//   Float 396 [settingsSampleDistance]
//   Matrix 208 [_UweCameraToVolumeMatrix]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_Mask] 2D 3
//   SetTexture 2 [_BumpMap] 2D 2
//   SetTexture 3 [_SIGMap] 2D 4
//   SetTexture 4 [_UweExtinctionTexture] 2D 5
//   SetTexture 5 [_UweScatteringTexture] 2D 6
//   SetTexture 6 [_UweEmissiveTexture] 2D 7
//   SetTexture 7 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:57:57 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy  
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[25], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9a77523e51e58fbf-ps.txt

mul r10.w, -r10.x, r10.y
mad r11.xyz, -r10.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.y, v3.w
mov r0.z, v4.w
mov r0.w, v5.w
add r1.xyz, -r0.yzwy, r11.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
sample r2.xyzw, v1.xyxx, t0.xyzw, s1
mul r3.xyz, r2.xyzx, cb0[4].xyzx
sample r4.xyzw, v1.xyxx, t1.xyzw, s3
mad r2.xyz, -r2.xyzx, cb0[4].xyzx, cb0[5].xyzx
mad r2.xyz, r4.xxxx, r2.xyzx, r3.xyzx
mul o0.w, r2.w, cb0[4].w
sample r3.xyzw, v1.zwzz, t2.xyzw, s2
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r3.xyxx, r3.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r3.z, r1.w
sample r4.xyzw, v2.xyxx, t3.xyzw, s4
mul r5.xyz, r4.yyyy, cb0[4].xyzx
max r1.w, r4.z, l(0.010000)
eq r2.w, cb3[0].x, l(1.000000)
if_nz r2.w
  eq r3.w, cb3[0].y, l(1.000000)
  mul r4.yzw, v4.wwww, cb3[2].xxyz
  mad r4.yzw, cb3[1].xxyz, v3.wwww, r4.yyzw
  mad r4.yzw, cb3[3].xxyz, v5.wwww, r4.yyzw
  add r4.yzw, r4.yyzw, cb3[4].xxyz
  movc r4.yzw, r3.wwww, r4.yyzw, r0.yyzw
  add r4.yzw, r4.yyzw, -cb3[6].xxyz
  mul r6.yzw, r4.yyzw, cb3[5].xxyz
  mad r3.w, r6.y, l(0.250000), l(0.750000)
  mad r4.y, cb3[0].z, l(0.500000), l(0.750000)
  max r6.x, r3.w, r4.y
  sample r6.xyzw, r6.xzwx, t7.xyzw, s0
else 
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r3.w, r6.xyzw, cb2[45].xyzw
dp3 r6.x, v3.xyzx, r3.xyzx
dp3 r6.y, v4.xyzx, r3.xyzx
dp3 r6.z, v5.xyzx, r3.xyzx
mul r3.xyz, r3.wwww, cb0[2].xyzx
if_nz r2.w
  eq r2.w, cb3[0].y, l(1.000000)
  mul r4.yzw, v4.wwww, cb3[2].xxyz
  mad r4.yzw, cb3[1].xxyz, v3.wwww, r4.yyzw
  mad r4.yzw, cb3[3].xxyz, v5.wwww, r4.yyzw
  add r4.yzw, r4.yyzw, cb3[4].xxyz
  movc r0.yzw, r2.wwww, r4.yyzw, r0.yyzw
  add r0.yzw, r0.yyzw, -cb3[6].xxyz
  mul r7.yzw, r0.yyzw, cb3[5].xxyz
  mul r0.y, r7.y, l(0.250000)
  mul r0.z, cb3[0].z, l(0.500000)
  mad r0.w, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.z, r0.y
  min r7.x, r0.w, r0.y
  sample r8.xyzw, r7.xzwx, t7.xyzw, s0
  add r0.yzw, r7.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r9.xyzw, r0.yzwy, t7.xyzw, s0
  add r0.yzw, r7.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r7.xyzw, r0.yzwy, t7.xyzw, s0
  mov r6.w, l(1.000000)
  dp4 r8.x, r8.xyzw, r6.xyzw
  dp4 r8.y, r9.xyzw, r6.xyzw
  dp4 r8.z, r7.xyzw, r6.xyzw
else 
  mov r6.w, l(1.000000)
  dp4 r8.x, cb2[38].xyzw, r6.xyzw
  dp4 r8.y, cb2[39].xyzw, r6.xyzw
  dp4 r8.z, cb2[40].xyzw, r6.xyzw
endif 
add r0.yzw, r8.xxyz, v7.xxyz
mad r1.xyz, r1.xyzx, r0.xxxx, cb2[0].xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
dp3 r0.x, r6.xyzx, cb2[0].xyzx
max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r1.x, r6.xyzx, r1.xyzx
max r1.x, r1.x, l(0.000000)
mul r1.y, r1.w, l(128.000000)
log r1.x, r1.x
mul r1.x, r1.x, r1.y
exp r1.x, r1.x
mul r1.x, r4.x, r1.x
mul r1.yzw, r2.xxyz, r3.xxyz
mul r3.xyz, r3.xyzx, cb0[3].xyzx
mul r3.xyz, r1.xxxx, r3.xyzx
mad r1.xyz, r1.yzwy, r0.xxxx, r3.xyzx
mad r0.xyz, r2.xyzx, r0.yzwy, r1.xyzx
mad r0.xyz, r5.xyzx, r2.xyzx, r0.xyzx
ne r1.x, cb0[6].x, l(0.000000)
if_nz r1.x
  dp3 r1.x, v6.xyzx, v6.xyzx
  sqrt r0.w, r1.x
  div r1.xyz, v6.xyzx, r0.wwww
  mul r2.xyz, r1.xyzx, cb0[24].wwww
  mul r3.xyz, r2.yyyy, cb0[14].xyzx
  mad r2.xyw, cb0[13].xyxz, r2.xxxx, r3.xyxz
  mad r2.xyz, cb0[15].xyzx, r2.zzzz, r2.xywx
  add_sat r2.xyz, r2.xyzx, cb0[16].xyzx
  div r3.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[21].x
  mad r1.w, r2.y, cb0[21].x, l(-0.500000)
  frc r2.y, r1.w
  add r1.w, r1.w, -r2.y
  add r1.w, r1.w, r2.z
  mul r2.w, r3.y, r1.w
  mov r3.x, l(0)
  add r3.xy, r2.xwxx, r3.xyxx
  sample_l r4.xyzw, r2.xwxx, t4.xyzw, s5, l(0.000000)
  sample_l r5.xyzw, r3.xyxx, t4.xyzw, s5, l(0.000000)
  add r5.xyzw, -r4.xyzw, r5.xyzw
  mad r4.xyzw, r2.yyyy, r5.wxyz, r4.wxyz
  dp3 r1.w, r1.xyzx, cb0[12].xyzx
  lt r2.z, l(0.000000), cb0[12].w
  if_nz r2.z
    lt r2.z, r1.w, l(-0.010000)
    not r3.z, r2.z
    div r3.w, -cb0[12].w, r1.w
    add r3.w, r3.w, cb0[6].y
    mul r5.x, -r0.w, cb0[23].z
    mul r5.x, r5.x, l(1.442695)
    exp r5.x, r5.x
    add r5.yzw, r0.xxyz, -cb0[24].xxyz
    mad o0.xyz, r5.xxxx, r5.yzwy, cb0[24].xyzx
    movc r4.x, r2.z, r3.w, cb0[6].y
    lt r3.w, r0.w, r4.x
    movc r2.z, r2.z, r3.w, l(-1)
    or r2.z, r3.z, r2.z
  else 
    div r3.z, -cb0[12].w, r1.w
    lt r3.w, l(0.000000), r3.z
    add r5.x, r0.w, -r3.z
    max r5.x, r5.x, l(0.000000)
    mul r5.x, -r5.x, cb0[23].z
    mul r5.x, r5.x, l(1.442695)
    exp r5.x, r5.x
    add r5.yzw, r0.xxyz, -cb0[24].xxyz
    mad r5.xyz, r5.xxxx, r5.yzwy, cb0[24].xyzx
    min r5.w, r0.w, r3.z
    movc r0.xyzw, r3.wwww, r5.xyzw, r0.xyzw
    mov r2.z, l(0)
  endif 
  if_z r2.z
    lt r2.z, r4.x, r0.w
    if_nz r2.z
      sample_l r5.xyzw, r2.xwxx, t5.xyzw, s6, l(0.000000)
      sample_l r6.xyzw, r3.xyxx, t5.xyzw, s6, l(0.000000)
      add r6.xyzw, -r5.xyzw, r6.xyzw
      mad r5.xyzw, r2.yyyy, r6.xyzw, r5.xyzw
      sample_l r6.xyzw, r2.xwxx, t6.xyzw, s7, l(0.000000)
      sample_l r3.xyzw, r3.xyxx, t6.xyzw, s7, l(0.000000)
      add r2.xzw, -r6.xxyz, r3.xxyz
      mad r2.xyz, r2.yyyy, r2.xzwx, r6.xyzx
      mul r3.xyz, r5.xyzx, cb0[21].yyyy
      mul r5.xyz, r4.yzwy, cb0[21].yyyy
      add r0.w, -r4.x, r0.w
      mul r6.xyz, r1.xyzx, r4.xxxx
      dp3 r1.x, r1.xyzx, -cb0[7].xyzx
      mad r1.x, -cb0[22].z, r1.x, cb0[22].y
      log r1.x, r1.x
      mul r1.x, r1.x, l(-1.500000)
      exp r1.x, r1.x
      mul r1.x, r1.x, cb0[22].x
      mul r1.xyz, r1.xxxx, r3.xyzx
      dp3 r2.w, cb0[7].xyzx, cb0[12].xyzx
      max r2.w, r2.w, l(0.000100)
      mad r3.xyz, cb0[9].xyzx, cb0[9].wwww, cb0[10].xyzx
      mul r3.xyz, r5.wwww, r3.xyzx
      mul r7.xyz, r5.xyzx, cb0[21].zzzz
      mul r8.xyz, r1.wwww, r7.xyzx
      div r8.xyz, r8.xyzx, r2.wwww
      mad r4.xyz, -r4.yzwy, cb0[21].yyyy, r8.xyzx
      dp3 r1.w, r6.xyzx, cb0[12].xyzx
      add r1.w, r1.w, cb0[12].w
      mul r6.xyz, r1.wwww, r7.xyzx
      div r6.xyz, r6.xyzx, r2.wwww
      mad r7.xyz, r0.wwww, r4.xyzx, r6.xyzx
      mul r7.xyz, r7.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r7.xyz, r7.xyzx
      mul r6.xyz, r6.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r6.xyz, r6.xyzx
      add r6.xyz, -r6.xyzx, r7.xyzx
      div r4.xyz, r6.xyzx, r4.xyzx
      mul r1.xyz, r1.xyzx, r3.xyzx
      mul r1.xyz, r4.xyzx, r1.xyzx
      max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      mul r3.xyz, r5.xyzx, -r0.wwww
      mul r3.xyz, r3.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r3.xyz, r3.xyzx
      mul r4.xyz, r0.wwww, -r5.xyzx
      mul r4.xyz, r4.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r4.xyz, r4.xyzx
      add r4.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      div r4.xyz, r4.xyzx, r5.xyzx
      mul r2.xyz, r2.xyzx, r4.xyzx
      max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r1.xyz, r1.xyzx, r2.xyzx
      mad o0.xyz, r0.xyzx, r3.xyzx, r1.xyzx
    else 
      mov o0.xyz, r0.xyzx
    endif 
  endif 
else 
  mov o0.xyz, r0.xyzx
endif 
ret 
// Approximately 0 instruction slots used