// asmtool.py --remap-cb-matrix 0 28 100 28 -I ../../../ -f cc442aacf39e9396-vs.txt
// 3DMigoto: cc442aacf39e9396 |    Unity headers extracted from Hidden_Waterscape_WaterSunShafts
//    Shader "Hidden/Waterscape/WaterSunShafts" {
//      SubShader 1/1 {
//        Tags { "RenderType"="Opaque" }
//        Pass 1/2 {
//          Name "SUNSHAFTS"
//          Tags { "RenderType"="Opaque" }
//          ZWrite Off
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hidden_Waterscape_WaterSunShafts:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201609010 27 0 0
//   undeciphered1a: 5
//   undeciphered2: 1 0 4 0 0 0
//   undeciphered3: 9 2 0 0 3 4
//   ConstBuffer "$Globals" 528
//   Vector 416 [_ImagePlaneSize] 2
//   ScalarInt 512 [_CascadeIndex]
//   Matrix 448 [_CameraToWorldMatrix]
//   ConstBuffer "UnityShadows" 416
//   Matrix 128 [unity_WorldToShadow0]
//   Matrix 192 [unity_WorldToShadow1]
//   Matrix 256 [unity_WorldToShadow2]
//   Matrix 320 [unity_WorldToShadow3]
//   ConstBuffer "UnityPerDraw" 160
//   Matrix 0 [unity_ObjectToWorld]
//   ConstBuffer "UnityPerFrame" 384
//   Matrix 272 [unity_MatrixVP]
//   BindCB "$Globals" 0
//   BindCB "UnityShadows" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:59:31 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 0   xyzw        2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[33], immediateIndexed
dcl_constantbuffer cb1[24], dynamicIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_input v0.xyz
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_temps 9
dcl_resource_structured t100, 528

// cb0[28:32] remapped to t100 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb-matrix 0 28 100 28 -I ../../../ -f cc442aacf39e9396-vs.txt
ld_structured r5.xyzw, l(0), l(448), t100.xyzw
ld_structured r6.xyzw, l(0), l(464), t100.xyzw
ld_structured r7.xyzw, l(0), l(480), t100.xyzw
ld_structured r8.xyzw, l(0), l(496), t100.xyzw

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb2[3].xyzw
mul r1.xyzw, r0.yyyy, cb3[18].xyzw
mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
mov o1.xy, v2.xyxx
mad r0.xy, v2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul o2.xy, r0.xyxx, cb0[26].xyxx
mov o2.z, l(-1.000000)
ishl r0.x, cb0[32].x, l(2)
mul r1.xyzw, r5.yyyy, cb1[r0.x + 9].xyzw
mad r1.xyzw, cb1[r0.x + 8].xyzw, r5.xxxx, r1.xyzw
mad r1.xyzw, cb1[r0.x + 10].xyzw, r5.zzzz, r1.xyzw
mad r1.xyzw, cb1[r0.x + 11].xyzw, r5.wwww, r1.xyzw
mov o3.x, r1.x
mul r2.xyzw, r6.yyyy, cb1[r0.x + 9].xyzw
mad r2.xyzw, cb1[r0.x + 8].xyzw, r6.xxxx, r2.xyzw
mad r2.xyzw, cb1[r0.x + 10].xyzw, r6.zzzz, r2.xyzw
mad r2.xyzw, cb1[r0.x + 11].xyzw, r6.wwww, r2.xyzw
mov o3.y, r2.x
mul r3.xyzw, r7.yyyy, cb1[r0.x + 9].xyzw
mad r3.xyzw, cb1[r0.x + 8].xyzw, r7.xxxx, r3.xyzw
mad r3.xyzw, cb1[r0.x + 10].xyzw, r7.zzzz, r3.xyzw
mad r3.xyzw, cb1[r0.x + 11].xyzw, r7.wwww, r3.xyzw
mov o3.z, r3.x
mul r4.xyzw, r8.yyyy, cb1[r0.x + 9].xyzw
mad r4.xyzw, cb1[r0.x + 8].xyzw, r8.xxxx, r4.xyzw
mad r4.xyzw, cb1[r0.x + 10].xyzw, r8.zzzz, r4.xyzw
mad r0.xyzw, cb1[r0.x + 11].xyzw, r8.wwww, r4.xyzw
mov o3.w, r0.x
mov o4.x, r1.y
mov o4.y, r2.y
mov o4.z, r3.y
mov o4.w, r0.y
mov o5.x, r1.z
mov o6.x, r1.w
mov o5.y, r2.z
mov o6.y, r2.w
mov o5.z, r3.z
mov o6.z, r3.w
mov o5.w, r0.z
mov o6.w, r0.w
ret 
// Approximately 0 instruction slots used