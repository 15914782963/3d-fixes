// asmtool.py -I ../.. --fix-unity-lighting-ps=TEXCOORD4 --only-autofixed b925bae5cae3925a-ps.txt
// 3DMigoto: b925bae5cae3925a | Matched 2 variants of 1 shaders: Hidden/Internal-ScreenSpaceShadows
//
//       Unity headers extracted from Hidden_Internal-ScreenSpaceShadows
//       Shader "Hidden/Internal-ScreenSpaceShadows" {
//         SubShader 3/4 {
//           Tags { "ShadowmapFilter"="PCF_5x5" }
//           Pass 1/1 {
//             Tags { "ShadowmapFilter"="PCF_5x5" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Hidden_Internal-ScreenSpaceShadows:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 55 1 0
//      undeciphered1a: 7
// 1:   Keywords { "SHADOWS_SINGLE_CASCADE" }
// 2:   Keywords { "SHADOWS_SPLIT_SPHERES" "SHADOWS_SINGLE_CASCADE" }
//      undeciphered2: 1 2 4 2 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 64
//      Vector 48 [_ShadowMapTexture_TexelSize]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 112 [_ZBufferParams]
//      Vector 128 [unity_OrthoParams]
//      ConstBuffer "UnityPerCameraRare" 352
//      Matrix 288 [unity_CameraToWorld]
//      ConstBuffer "UnityShadows" 416
//      Vector 384 [_LightShadowData]
//      Matrix 128 [unity_WorldToShadow0]
//      Matrix 192 [unity_WorldToShadow1]
//      Matrix 256 [unity_WorldToShadow2]
//      Matrix 320 [unity_WorldToShadow3]
//      SetTexture 0 [_CameraDepthTexture] 2D 0
//      SetTexture 1 [_ShadowMapTexture] 2D 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerCameraRare" 2
//      BindCB "UnityShadows" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:58:51 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4      w        4     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_output o0.xyzw
dcl_temps 10

// New input from vertex shader with unity_CameraInvProjection[0].x:
dcl_input_ps linear v4.w
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s0
mad r0.y, cb1[7].x, r0.x, cb1[7].y
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
add r0.z, -r0.y, r0.x
mad r0.y, cb1[8].w, r0.z, r0.y
add r0.x, -r0.x, l(1.000000)
add r1.xyz, -v3.xyzx, v4.xyzx
mad r0.xzw, r0.xxxx, r1.xxyz, v3.xxyz
mad r0.xzw, -v2.xxyz, r0.yyyy, r0.xxzw
mul r1.xyz, r0.yyyy, v2.xyzx
mad r0.xyz, cb1[8].wwww, r0.xzwx, r1.xyzx

// copy depth from r0.z to r8.x:
mov r8.x, r0.z


// Unity light/shadow fix (pixel shader stage) inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps=TEXCOORD4 --only-autofixed b925bae5cae3925a-ps.txt

add r9.x, r8.x, -r7.y
mul r9.x, r7.x, r9.x
ne r7.w, l(0.0, 0.0, 0.0, 0.0), v4.w
if_nz r7.w
  mad r0.x, -r9.x, v4.w, r0.x
endif

mul r1.xyzw, r0.yyyy, cb2[19].xyzw
mad r1.xyzw, cb2[18].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb2[20].xyzw, r0.zzzz, r1.xyzw
add r0.xyzw, r0.xyzw, cb2[21].xyzw

if_z r7.w
  mad r0.xyz, -r9.xxxx, cb10[0].xyzx, r0.xyzw
endif

mul r1.xyz, r0.yyyy, cb3[9].xyzx
mad r1.xyz, cb3[8].xyzx, r0.xxxx, r1.xyzx
mad r0.xyz, cb3[10].xyzx, r0.zzzz, r1.xyzx
mad r0.xyz, cb3[11].xyzx, r0.wwww, r0.xyzx
mov r1.xz, cb0[3].yyyy
mov r1.y, l(0.142857149)
mad r0.xy, r0.xyxx, cb0[3].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
frc r2.xy, r0.xyxx
round_ni r0.xy, r0.xyxx
add r0.xy, r0.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mad r2.zw, -r2.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
mad r3.xy, -r2.xyxx, l(3.000000, 3.000000, 0.000000, 0.000000), l(4.000000, 4.000000, 0.000000, 0.000000)
div r2.zw, r2.zzzw, r3.xxxy
add r4.xy, r2.zwzz, l(-2.000000, -2.000000, 0.000000, 0.000000)
mov r5.z, r4.y
mad r2.zw, r2.xxxy, l(0.000000, 0.000000, 3.000000, 3.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
div r3.xz, r2.xxyx, r2.zzwz
add r5.xw, r3.xxxz, l(2.000000, 0.000000, 0.000000, 2.000000)
mov r4.w, r5.x
add r2.yz, r2.xxyx, l(0.000000, 3.000000, 3.000000, 0.000000)
mul r0.w, r2.x, l(3.000000)
mad r6.xz, r0.wwww, l(-1.000000, 0.000000, 1.000000, 0.000000), l(4.000000, 0.000000, 1.000000, 0.000000)
mul r5.xy, r2.yzyy, cb0[3].xyxx
mul r1.xyz, r1.xyzx, r5.zywz
mov r4.z, r5.x
mov r5.w, r1.x
mov r2.xz, cb0[3].xxxx
mov r2.y, l(0.142857149)
mul r5.xyz, r2.yxzy, r4.zxwz
mad r4.xyzw, r0.xyxy, cb0[3].xyxy, r5.ywxw
mad r2.xy, r0.xyxx, cb0[3].xyxx, r5.zwzz
sample_c_lz r0.w, r2.xyxx, t1.xxxx, s1, r0.z
sample_c_lz r1.x, r4.xyxx, t1.xxxx, s1, r0.z
sample_c_lz r2.x, r4.zwzz, t1.xxxx, s1, r0.z
mov r6.y, l(7.000000)
mul r3.xyz, r3.yyyy, r6.xyzx
mul r2.yzw, r2.wwww, r6.xxyz
mul r4.xy, r6.xzxx, l(7.000000, 7.000000, 0.000000, 0.000000)
mul r2.x, r2.x, r3.y
mad r1.x, r3.x, r1.x, r2.x
mad r0.w, r3.z, r0.w, r1.x
mov r1.w, r5.y
mad r3.xyzw, r0.xyxy, cb0[3].xyxy, r1.wywz
mov r5.yw, r1.yyyz
sample_c_lz r1.x, r3.xyxx, t1.xxxx, s1, r0.z
sample_c_lz r1.y, r3.zwzz, t1.xxxx, s1, r0.z
mad r0.w, r4.x, r1.x, r0.w
mad r3.xyzw, r0.xyxy, cb0[3].xyxy, r5.xyzy
mad r5.xyzw, r0.xyxy, cb0[3].xyxy, r5.xwzw
sample_c_lz r0.x, r3.xyxx, t1.xxxx, s1, r0.z
sample_c_lz r0.y, r3.zwzz, t1.xxxx, s1, r0.z
mad r0.x, r0.x, l(49.000000), r0.w
mad r0.x, r4.y, r0.y, r0.x
mad r0.x, r2.y, r1.y, r0.x
sample_c_lz r0.y, r5.xyxx, t1.xxxx, s1, r0.z
sample_c_lz r0.z, r5.zwzz, t1.xxxx, s1, r0.z
mad r0.x, r2.z, r0.y, r0.x
mad r0.x, r2.w, r0.z, r0.x
mul r0.x, r0.x, l(0.00694444450)
add r0.y, -cb3[24].x, l(1.000000)
mad o0.xyzw, r0.xxxx, r0.yyyy, cb3[24].xxxx
ret 
// Approximately 0 instruction slots used