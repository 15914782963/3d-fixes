// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed -f a94921dd45056bdf-ps.txt
// 3DMigoto: a94921dd45056bdf | Matched 3 variants of 1 shaders: Hidden/Internal-DeferredShadingCustom
//
//       Unity headers extracted from Hidden_Internal-DeferredShadingCustom
//       Shader "Hidden/Internal-DeferredShadingCustom" {
//         SubShader 1/1 {
//           Pass 1/2 {
//             Tags { "SHADOWSUPPORT"="true" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Hidden_Internal-DeferredShadingCustom:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 105 5 4
//      undeciphered1a: 9
// 4:   Keywords { "DIRECTIONAL_COOKIE" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" }
// 2:   Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SHADOWMASK" }
// 1:   Keywords { "DIRECTIONAL_COOKIE" }
//      undeciphered2: 1 8 3 8 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 544
//      Vector 48 [_LightDir]
//      Vector 80 [_LightColor]
//      Float 208 [_UweFogEnabled]
//      Vector 272 [_UweTopAmbientColor] 3
//      Vector 288 [_UweBottomAmbientColor] 3
//      Float 448 [_UweVolumeTextureSlices]
//      Float 452 [_UweExtinctionAndScatteringScale]
//      Float 456 [_UweSunAttenuationFactor]
//      Vector 480 [_UweColorCastFactor] 2
//      Float 512 [_UweCausticsScale]
//      Vector 516 [_UweCausticsAmount] 3
//      Float 528 [_UweWaterEmissionAmbientScale]
//      Matrix 112 [unity_WorldToLight]
//      Matrix 384 [_UweWorldToVolumeMatrix]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      Vector 112 [_ZBufferParams]
//      ConstBuffer "UnityPerCameraRare" 352
//      Matrix 288 [unity_CameraToWorld]
//      SetTexture 0 [_CameraDepthTexture] 2D 0
//      SetTexture 1 [_UweExtinctionTexture] 2D 2
//      SetTexture 2 [_UweScatteringTexture] 2D 3
//      SetTexture 3 [_UweEmissiveTexture] 2D 4
//      SetTexture 4 [_LightTexture0] 2D 1
//      SetTexture 5 [_CameraGBufferTexture0] 2D 5
//      SetTexture 6 [_CameraGBufferTexture1] 2D 6
//      SetTexture 7 [_CameraGBufferTexture2] 2D 7
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerCameraRare" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:58:26 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 3      w        2     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 14

// New input from vertex shader with unity_CameraInvProjection[0].x:
dcl_input_ps linear v2.w
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed -f a94921dd45056bdf-ps.txt

mul r9.w, -r9.x, r9.y
ne r11.x, l(0.0, 0.0, 0.0, 0.0), v2.w
if_nz r11.x
  mul r9.w, r9.w, v2.w
  mad r10.xyz, -r9.wwww, cb2[18].xyzw, cb1[4].xyzw
else
  mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw
endif

div r0.x, cb1[5].z, v2.z
mul r0.xyz, r0.xxxx, v2.xyzx
div r1.xy, v1.xyxx, v1.wwww
sample r2.xyzw, r1.xyxx, t0.xyzw, s0
mad r0.w, cb1[7].x, r2.x, cb1[7].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r0.xyz, r0.wwww, r0.xyzx

// copy depth from r0.z to r12.x:
mov r12.x, r0.z


// Unity light/shadow fix (pixel shader stage) inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed -f a94921dd45056bdf-ps.txt

add r13.x, r12.x, -r9.y
mul r13.x, r9.x, r13.x
ne r9.w, l(0.0, 0.0, 0.0, 0.0), v2.w
if_nz r9.w
  mad r0.x, -r13.x, v2.w, r0.x
endif

mul r2.xyz, r0.yyyy, cb2[19].xyzx
mad r2.xyz, cb2[18].xyzx, r0.xxxx, r2.xyzx
mad r2.xyz, cb2[20].xyzx, r0.zzzz, r2.xyzx
add r2.xyz, r2.xyzx, cb2[21].xyzx

if_z r9.w
  mad r2.xyz, -r13.xxxx, cb10[0].xyzx, r2.xyzw
endif

mul r3.xyz, r2.yyyy, cb0[25].xyzx
mad r3.xyz, cb0[24].xyzx, r2.xxxx, r3.xyzx
mad r3.xyz, cb0[26].xyzx, r2.zzzz, r3.xyzx
add_sat r3.xyz, r3.xyzx, cb0[27].xyzx
div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[28].x
mad r0.w, r3.y, cb0[28].x, l(-0.500000)
frc r1.z, r0.w
add r0.w, r0.w, -r1.z
add r0.w, r0.w, r3.z
mul r3.w, r4.y, r0.w
mov r4.x, l(0)
add r3.yz, r3.xxwx, r4.xxyx
sample_l r4.xyzw, r3.xwxx, t2.xyzw, s3, l(0.000000)
sample_l r5.xyzw, r3.yzyy, t2.xyzw, s3, l(0.000000)
add r0.w, -r4.w, r5.w
mad r4.xyz, r1.zzzz, r0.wwww, r4.wwww
sample_l r5.xyzw, r3.xwxx, t3.xyzw, s4, l(0.000000)
sample_l r6.xyzw, r3.yzyy, t3.xyzw, s4, l(0.000000)
add r6.xyzw, -r5.xyzw, r6.xyzw
mad r5.xyzw, r1.zzzz, r6.xyzw, r5.xyzw
lt r0.w, r2.y, l(0.000000)
ne r1.w, cb0[13].x, l(0.000000)
and r0.w, r0.w, r1.w
if_nz r0.w
  add r0.w, -cb0[32].y, l(1.000000)
  mul r6.xy, r2.yyyy, cb0[8].xyxx
  mad r6.xy, cb0[7].xyxx, r2.xxxx, r6.xyxx
  mad r6.xy, cb0[9].xyxx, r2.zzzz, r6.xyxx
  add r6.xy, r6.xyxx, cb0[10].xyxx
  mul r6.xy, r6.xyxx, cb0[32].xxxx
  sample r6.xyzw, r6.xyxx, t4.xyzw, s1
  mad r6.xyz, r6.xyzx, cb0[32].zzzz, r0.wwww
  max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
else 
  mov r6.xyz, l(1.000000,1.000000,1.000000,0)
endif 
mul r6.xyz, r4.zzzz, r6.xyzx
if_nz r1.w
  sample_l r7.xyzw, r3.xwxx, t1.xyzw, s2, l(0.000000)
  sample_l r3.xyzw, r3.yzyy, t1.xyzw, s2, l(0.000000)
  add r3.xyz, -r7.xyzx, r3.xyzx
  mad r3.xyz, r1.zzzz, r3.xyzx, r7.xyzx
  mul r7.xyz, r3.xyzx, cb0[28].yyyy
  ge r0.w, l(0.000000), r2.y
  ge r1.z, -cb0[3].y, l(0.000000)
  div r1.w, r2.y, cb0[3].y
  and r1.z, r1.w, r1.z
  and r0.w, r0.w, r1.z
  lt r1.z, l(0.000000), r0.w
  dp3 r0.x, r0.xyzx, r0.xyzx
  sqrt r0.x, r0.x
  mul r8.xyz, r7.xyzx, cb0[28].zzzz
  min r0.y, r8.y, r8.x
  min r0.y, r8.z, r0.y
  mul r0.z, r0.w, cb0[30].y
  mad r0.x, -r0.x, cb0[30].x, -r0.z
  mul r0.x, r0.x, l(1.442695)
  exp r0.x, r0.x
  mad r7.xyz, -r7.xyzx, cb0[28].zzzz, r0.yyyy
  mad r0.xyz, r0.xxxx, r7.xyzx, r8.xyzx
  mul r0.xyz, r0.xyzx, -r0.wwww
  mul r0.xyz, r0.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
  exp r0.xyz, r0.xyzx
  mul r7.xyz, r0.xyzx, r4.zzzz
  mul r0.xyz, r0.xyzx, r6.xyzx
  movc r4.xyz, r1.zzzz, r7.xyzx, r4.xyzx
  movc r6.xyz, r1.zzzz, r0.xyzx, r6.xyzx
  mul r0.xyz, r5.xyzx, cb0[33].xxxx
  mad r3.xyz, r3.xyzx, cb0[28].yyyy, l(0.000100, 0.000100, 0.000100, 0.000000)
  div r0.xyz, r0.xyzx, r3.xyzx
else 
  mov r0.xyz, l(0,0,0,0)
endif 
mul r3.xyz, r5.wwww, r4.xyzx
sample r4.xyzw, r1.xyxx, t5.xyzw, s5
sample r5.xyzw, r1.xyxx, t6.xyzw, s6
sample r1.xyzw, r1.xyxx, t7.xyzw, s7
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
add r2.xyz, r2.xyzx, -r10.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mad r2.xyz, -r2.xyzx, r0.wwww, -cb0[3].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
mul r0.w, r5.w, l(128.000000)
dp3 r2.x, r2.xyzx, r1.xyzx
max r2.x, r2.x, l(0.000000)
max r0.w, r0.w, l(0.100000)
log r2.x, r2.x
mul r0.w, r0.w, r2.x
exp r0.w, r0.w
mov_sat r2.x, r6.x
mul r0.w, r0.w, r2.x
dp3 r1.x, -cb0[3].xyzx, r1.xyzx
max r1.x, r1.x, l(0.000000)
mul r2.xyz, r6.xyzx, r1.xxxx
mul r2.xyz, r2.xyzx, cb0[5].xyzx
dp3 r1.x, cb0[5].xyzx, l(0.0396819152, 0.458021790, 0.00609653955, 0.000000)
mul r2.w, r0.w, r1.x
lt r0.w, r1.w, l(0.500000)
and r0.w, r0.w, l(0x3f800000)
mad r1.x, r1.y, l(0.500000), l(0.500000)
add r1.yzw, cb0[17].xxyz, -cb0[18].xxyz
mad r1.xyz, r1.xxxx, r1.yzwy, cb0[18].xyzx
mad r0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
mul r1.xyzw, r0.wwww, r2.xyzw
max r1.w, r1.w, l(0.000000)
min r1.w, r1.w, l(100000.000000)
mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
mul r1.xyz, r5.xyzx, r1.xyzx
mul r1.xyz, r1.wwww, r1.xyzx
mad r0.xyz, r4.xyzx, r0.xyzx, r1.xyzx
mov r0.w, l(1.000000)
exp o0.xyzw, -r0.xyzw
ret 
// Approximately 0 instruction slots used