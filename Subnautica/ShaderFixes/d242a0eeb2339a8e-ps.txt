// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d242a0eeb2339a8e-ps.txt
// 3DMigoto: d242a0eeb2339a8e |    Unity headers extracted from UWE_SIG Triplanar with Capping
//    Shader "UWE/SIG Triplanar with Capping" {
//      Fallback "Specular"
//      SubShader 1/1 {
//        Tags { "RenderType"="Opaque" }
//        Pass 2/6 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "RenderType"="Opaque" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from UWE_SIG Triplanar with Capping:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 149 10 4
//   undeciphered1a: 12
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 5 4 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 512
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Vector 96 [_Color]
//   Float 112 [_CapScale]
//   Float 116 [_SideScale]
//   Float 120 [_TriplanarBlendRange]
//   Vector 128 [_CapColor]
//   Vector 144 [_CapSpecColor]
//   Float 160 [_CapBorderBlendRange]
//   Float 164 [_CapBorderBlendOffset]
//   Float 168 [_CapBorderBlendAngle]
//   Float 172 [_InnerBorderBlendRange]
//   Float 176 [_InnerBorderBlendOffset]
//   Vector 192 [_BorderTint]
//   Float 208 [_Gloss]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_CapTexture] 2D 1
//   SetTexture 1 [_SideTexture] 2D 3
//   SetTexture 2 [_SideBumpMap] 2D 4
//   SetTexture 3 [_CapBumpMap] 2D 2
//   SetTexture 4 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:59:42 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xy          5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_output o0.xyzw
dcl_temps 14
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d242a0eeb2339a8e-ps.txt

mul r12.w, -r12.x, r12.y
mad r13.xyz, -r12.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v4.xyzx, r13.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xy, v4.xzxx, cb0[7].xxxx
sample r2.xyzw, r1.xyxx, t0.xyzw, s1
add r1.z, v2.z, cb0[10].y
mad r1.z, -r1.z, cb0[10].z, l(1.000000)
add r1.z, -r2.w, r1.z
max r1.z, r1.z, l(-1.000000)
min r1.z, r1.z, l(1.000000)
add r1.z, r1.z, cb0[10].x
add r1.w, cb0[10].x, cb0[10].x
div_sat r1.z, r1.z, r1.w
lt r1.w, l(0.000000), r1.z
if_nz r1.w
  mov r3.x, v1.z
  mov r3.y, v2.z
  mov r3.z, v3.z
  mul r4.xyz, r3.xyzx, r3.xyzx
  mul r4.xyz, r4.xyzx, l(1.960000, 1.960000, 1.960000, 0.000000)
  log r4.xyz, r4.xyzx
  mul r4.xyz, r4.xyzx, cb0[7].zzzz
  exp r4.xyz, r4.xyzx
  mul r4.xyz, r4.xyzx, cb0[7].zzzz
  dp3 r1.w, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  div r4.xyz, r4.xyzx, r1.wwww
  mul r5.xyz, v4.xyzx, cb0[7].yyyy
  sample r6.xyzw, r5.yzyy, t1.xyzw, s3
  sample r7.xyzw, r5.xzxx, t1.xyzw, s3
  mul r7.xyzw, r4.yyyy, r7.xyzw
  mad r6.xyzw, r4.xxxx, r6.xyzw, r7.xyzw
  sample r7.xyzw, r5.yxyy, t1.xyzw, s3
  mad r6.xyzw, r4.zzzz, r7.xyzw, r6.xyzw
  lt r7.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzx
  lt r8.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r7.xyz, -r7.xyzx, r8.xyzx
  itof r7.xyz, r7.xyzx
  sample r8.xyzw, r5.yzyy, t2.xyzw, s4
  mad r8.xy, r8.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r1.w, r8.xyxx, r8.xyxx
  min r1.w, r1.w, l(1.000000)
  add r1.w, -r1.w, l(1.000000)
  sqrt r1.w, r1.w
  mov r3.w, -v3.z
  mul r9.xyz, r3.wyxw, r7.xxxx
  mul r8.yzw, r8.yyyy, r9.xxyz
  mad r8.xyz, r8.xxxx, r9.yzxy, r8.yzwy
  mad r8.xyz, r1.wwww, r3.xyzx, r8.xyzx
  sample r9.xyzw, r5.xzxx, t2.xyzw, s4
  mad r5.zw, r9.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
  dp2 r1.w, r5.zwzz, r5.zwzz
  min r1.w, r1.w, l(1.000000)
  add r1.w, -r1.w, l(1.000000)
  sqrt r1.w, r1.w
  mov r9.xz, r3.yyzy
  mov r9.y, -v1.z
  mul r9.xyz, r7.yyyy, r9.xyzx
  mul r7.xyw, r3.xwxy, r7.yyyy
  mul r10.xyz, r5.wwww, r7.xywx
  mad r10.xyz, r5.zzzz, r9.xyzx, r10.xyzx
  mad r10.xyz, r1.wwww, r3.xyzx, r10.xyzx
  sample r5.xyzw, r5.yxyy, t2.xyzw, s4
  mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r1.w, r5.xyxx, r5.xyxx
  min r1.w, r1.w, l(1.000000)
  add r1.w, -r1.w, l(1.000000)
  sqrt r1.w, r1.w
  mul r11.xyz, r3.zyxz, r7.zzzz
  mul r5.yzw, r5.yyyy, r11.xxyz
  mad r5.xyz, r5.xxxx, r11.zxyz, r5.yzwy
  mad r5.xyz, r1.wwww, r3.xyzx, r5.xyzx
  mul r10.xyz, r4.yyyy, r10.xyzx
  mad r4.xyw, r8.xyxz, r4.xxxx, r10.xyxz
  mad r4.xyz, r5.xyzx, r4.zzzz, r4.xywx
  dp3 r1.w, r4.xyzx, r4.xyzx
  rsq r1.w, r1.w
  mul r5.xyzw, r2.xyzw, cb0[8].xyzw
  mad r6.xyzw, r6.xyzw, cb0[6].xyzw, -r5.xyzw
  mad r5.xyzw, r1.zzzz, r6.xyzw, r5.xyzw
  sample r6.xyzw, r1.xyxx, t3.xyzw, s2
  mad r6.xy, r6.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r3.w, r6.xyxx, r6.xyxx
  min r3.w, r3.w, l(1.000000)
  add r3.w, -r3.w, l(1.000000)
  sqrt r3.w, r3.w
  mul r6.yzw, r7.xxyw, r6.yyyy
  mad r6.xyz, r6.xxxx, r9.xyzx, r6.yzwy
  mad r3.xyz, r3.wwww, r3.xyzx, r6.xyzx
  dp3 r3.w, r3.xyzx, r3.xyzx
  rsq r3.w, r3.w
  mul r3.xyz, r3.wwww, r3.xyzx
  mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  mad r3.xyz, r1.zzzz, r4.xyzx, r3.xyzx
  dp3 r1.w, r3.xyzx, r3.xyzx
  rsq r1.w, r1.w
  mul r3.xyz, r1.wwww, r3.xyzx
  add r4.xyz, cb0[3].xyzx, -cb0[9].xyzx
  mad r4.xyz, r1.zzzz, r4.xyzx, cb0[9].xyzx
else 
  mul r5.xyzw, r2.xyzw, cb0[8].xyzw
  sample r1.xyzw, r1.xyxx, t3.xyzw, s2
  mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r1.z, r1.xyxx, r1.xyxx
  min r1.z, r1.z, l(1.000000)
  add r1.z, -r1.z, l(1.000000)
  sqrt r1.z, r1.z
  lt r1.w, l(0.000000), v2.z
  lt r2.x, v2.z, l(0.000000)
  iadd r1.w, -r1.w, r2.x
  itof r1.w, r1.w
  mov r2.x, v2.z
  mov r2.y, -v1.z
  mov r2.z, v3.z
  mul r2.xyz, r1.wwww, r2.xyzx
  mov r6.x, v1.z
  mov r6.y, -v3.z
  mov r6.z, v2.z
  mul r7.xyz, r1.wwww, r6.xyzx
  mul r7.xyz, r1.yyyy, r7.xyzx
  mad r1.xyw, r1.xxxx, r2.xyxz, r7.xyxz
  mov r6.w, v3.z
  mad r1.xyz, r1.zzzz, r6.xzwx, r1.xywx
  dp3 r1.w, r1.xyzx, r1.xyzx
  rsq r1.w, r1.w
  mul r3.xyz, r1.wwww, r1.xyzx
  mov r4.xyz, cb0[3].xyzx
endif 
add r1.x, cb0[10].w, l(1.000000)
add r1.y, -cb0[11].x, l(1.010000)
div r1.x, r1.x, r1.y
mad r1.x, r1.x, -cb0[11].x, -cb0[10].w
add r1.x, -r1.x, r5.w
div_sat r1.x, r1.x, cb0[10].w
add r1.yzw, r5.xxyz, -cb0[12].xxyz
mad r1.xyz, r1.xxxx, r1.yzwy, cb0[12].xyzx
mov r2.x, v1.x
mov r2.y, v2.x
mov r2.z, v3.x
dp3 r2.x, r3.xyzx, r2.xyzx
mov r5.x, v1.y
mov r5.y, v2.y
mov r5.z, v3.y
dp3 r2.y, r3.xyzx, r5.xyzx
mov r5.x, v1.z
mov r5.y, v2.z
mov r5.z, v3.z
dp3 r2.z, r3.xyzx, r5.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
eq r1.w, cb3[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb3[0].y, l(1.000000)
  mul r3.xyz, v4.yyyy, cb3[2].xyzx
  mad r3.xyz, cb3[1].xyzx, v4.xxxx, r3.xyzx
  mad r3.xyz, cb3[3].xyzx, v4.zzzz, r3.xyzx
  add r3.xyz, r3.xyzx, cb3[4].xyzx
  movc r3.xyz, r1.wwww, r3.xyzx, v4.xyzx
  add r3.xyz, r3.xyzx, -cb3[6].xyzx
  mul r3.yzw, r3.xxyz, cb3[5].xxyz
  mad r1.w, r3.y, l(0.250000), l(0.750000)
  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
  max r3.x, r1.w, r2.w
  sample r3.xyzw, r3.xzwx, t4.xyzw, s0
else 
  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r1.w, r3.xyzw, cb2[45].xyzw
dp3 r3.x, v1.xyzx, r2.xyzx
dp3 r3.y, v2.xyzx, r2.xyzx
dp3 r3.z, v3.xyzx, r2.xyzx
mul r2.xyz, r1.wwww, cb0[2].xyzx
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.xyzx, cb2[0].xyzx
dp3 r0.x, r3.xyzx, r0.xyzx
max r0.xw, r0.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.y, cb0[13].x, l(128.000000)
log r0.x, r0.x
mul r0.x, r0.x, r0.y
exp r0.x, r0.x
mul r0.x, r1.x, r0.x
mul r1.xyz, r1.xyzx, r2.xyzx
mul r2.xyz, r4.xyzx, r2.xyzx
mul r0.xyz, r0.xxxx, r2.xyzx
mad o0.xyz, r1.xyzx, r0.wwww, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used