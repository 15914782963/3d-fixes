// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 92a2841dc01f97fa-ps.txt
// 3DMigoto: 92a2841dc01f97fa | Matched 6 variants of 1 shaders: MarmosetUBER
//
//        Unity headers extracted from MarmosetUBER
//        Shader "MarmosetUBER" {
//          Fallback "VertexLit"
//          SubShader 1/1 {
//            Tags { "RenderType"="Opaque" }
//            Pass 1/3 {
//              Name "DEFERRED"
//              Tags { "LIGHTMODE"="DEFERRED" "RenderType"="Opaque" }
//              ZWrite [_ZWrite]
//              Program "fp" {
//                SubProgram "d3d11" {
//                }
//              }
//            }
//          }
//        }
//
//     Unity 5.3 headers extracted from MarmosetUBER:
//       API d3d11
//       Shader model ps_4_0
//       undeciphered1: 201609010 144 12 2
//       undeciphered1a: 12
// 10:   Keywords { "UNITY_HDR_ON" "LOD_FADE_CROSSFADE" "MARMO_SPECMAP" "FX_KELP" "UWE_INFECTION" "MARMO_ALPHA_CLIP" }
// 08:   Keywords { "UNITY_HDR_ON" "LOD_FADE_CROSSFADE" "MARMO_SPECMAP" "UWE_INFECTION" "MARMO_ALPHA_CLIP" }
// 20:   Keywords { "UNITY_HDR_ON" "LOD_FADE_CROSSFADE" "MARMO_SPECMAP" "UWE_LIGHTMAP" "UWE_INFECTION" "MARMO_ALPHA_CLIP" }
// 02:   Keywords { "UNITY_HDR_ON" "MARMO_SPECMAP" "FX_KELP" "UWE_INFECTION" "MARMO_ALPHA_CLIP" }
// 01:   Keywords { "UNITY_HDR_ON" "MARMO_SPECMAP" "UWE_INFECTION" "MARMO_ALPHA_CLIP" }
// 04:   Keywords { "UNITY_HDR_ON" "MARMO_SPECMAP" "UWE_LIGHTMAP" "UWE_INFECTION" "MARMO_ALPHA_CLIP" }
//       undeciphered2: 1 7 4 7 0 0
//       undeciphered3: 0 0
//       ConstBuffer "$Globals" 960
//       Vector 368 [_SpecColor]
//       Float 384 [_EnableSimpleGlass]
//       Vector 400 [_Color]
//       Vector 416 [_MainTex_ST]
//       Float 440 [_UweLocalLightScalar]
//       Float 444 [_IBLreductionAtNight]
//       Vector 448 [_BumpMap_ST]
//       Float 468 [_InfectionAmount]
//       Vector 480 [_InfectionScale]
//       Vector 496 [_InfectionOffset]
//       Float 536 [_Gray]
//       Float 540 [_Brightness]
//       Float 544 [_SpecInt]
//       Float 548 [_Shininess]
//       Float 552 [_Fresnel]
//       Vector 560 [_SpecTex_ST]
//       Float 576 [_Cutoff]
//       Float 580 [_AffectedByDayNightCycle]
//       Float 584 [_Outdoors]
//       Vector 592 [_ExposureIBL]
//       Vector 616 [_UniformOcclusion] 2
//       Vector 800 [_SH0] 3
//       Vector 816 [_SH1] 3
//       Vector 832 [_SH2] 3
//       Vector 848 [_SH3] 3
//       Vector 864 [_SH4] 3
//       Vector 880 [_SH5] 3
//       Vector 896 [_SH6] 3
//       Vector 912 [_SH7] 3
//       Vector 928 [_SH8] 3
//       Matrix 624 [_SkyMatrix]
//       ConstBuffer "UnityPerCamera" 144
//       Vector 64 [_WorldSpaceCameraPos] 3
//       ConstBuffer "UnityLighting" 752
//       Vector 608 [unity_SHAr]
//       Vector 624 [unity_SHAg]
//       Vector 640 [unity_SHAb]
//       ConstBuffer "UnityProbeVolume" 112
//       Vector 0 [unity_ProbeVolumeParams]
//       Vector 80 [unity_ProbeVolumeSizeInv] 3
//       Vector 96 [unity_ProbeVolumeMin] 3
//       Matrix 16 [unity_ProbeVolumeWorldToObject]
//       SetTexture 0 [_MainTex] 2D 1
//       SetTexture 1 [_InfectionAlbedomap] 2D 3
//       SetTexture 2 [_InfectionNormalMap] 2D 4
//       SetTexture 3 [_BumpMap] 2D 2
//       SetTexture 4 [_SpecTex] 2D 5
//       SetTexture 5 [_SpecCubeIBL] CUBE 6
//       SetTexture 6 [unity_ProbeVolumeSH] 3D 0
//       BindCB "$Globals" 0
//       BindCB "UnityPerCamera" 1
//       BindCB "UnityLighting" 2
//       BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:57:43 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
// TEXCOORD                 3   xyzw        5     NONE   float   xy  
// TEXCOORD                 4   xyzw        6     NONE   float   xyzw
// TEXCOORD                 5   xyz         7     NONE   float   xyz 
// TEXCOORD                 6   xyzw        8     NONE   float       
// TEXCOORD                 7   xyz         9     NONE   float       
// TEXCOORD                 8   xyzw       10     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[59], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyz
dcl_input_ps linear v10.w
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 14
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 92a2841dc01f97fa-ps.txt

mul r12.w, -r12.x, r12.y
mad r13.xyz, -r12.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v7.xyzx, v7.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v7.xyzx
add r0.w, -cb0[27].z, l(1.000000)
mul r0.w, r0.w, cb0[36].y
mul r1.xy, cb0[37].xyxx, cb0[38].zwzz
mad r1.zw, v5.xxxy, cb0[26].xxxy, cb0[26].zzzw
sample r2.xyzw, r1.zwzz, t0.xyzw, s1
mul r3.xyzw, r2.xyzw, cb0[25].xyzw
mov r4.x, v1.w
mov r4.y, v6.w
mov r4.z, v10.w
mad r4.xyz, r4.xyzx, cb0[30].xyzx, cb0[31].xyzx
dp3 r1.z, v1.xyzx, v1.xyzx
rsq r1.z, r1.z
mul r5.xyz, r1.zzzz, v1.xyzx
mul r5.xyz, r5.xyzx, r5.xyzx
mul r5.xyz, r5.xyzx, l(1.960000, 1.960000, 1.960000, 0.000000)
mul r5.xyz, r5.xyzx, r5.xyzx
add r5.xyz, r5.xyzx, r5.xyzx
dp3 r1.z, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r5.xyz, r5.xyzx, r1.zzzz
sample r6.xyzw, r4.yzyy, t1.xyzw, s3
sample r7.xyzw, r4.xzxx, t1.xyzw, s3
mul r7.xyzw, r5.yyyy, r7.xyzw
mad r6.xyzw, r5.xxxx, r6.xyzw, r7.xyzw
sample r7.xyzw, r4.yxyy, t1.xyzw, s3
mad r6.xyzw, r5.zzzz, r7.xyzw, r6.xyzw
mul r1.z, r6.w, cb0[29].y
mad r2.xyz, -r2.xyzx, cb0[25].xyzx, r6.xyzx
mad r2.xyz, r1.zzzz, r2.xyzx, r3.xyzx
mul r1.w, r1.z, r6.w
max r1.w, r1.w, r3.w
mul r2.xyz, r2.xyzx, cb0[37].wwww
add r2.w, r1.w, l(-1.000000)
mad r2.w, cb0[24].x, r2.w, l(1.000000)
mul r3.xyz, r2.wwww, r2.xyzx
max r0.w, r0.w, l(0.000000)
min r0.w, r0.w, cb0[27].w
mad r1.xy, r0.wwww, -r1.xyxx, r1.xyxx
sample r7.xyzw, r4.yzyy, t2.xyzw, s4
sample r8.xyzw, r4.xzxx, t2.xyzw, s4
mul r8.xyz, r5.yyyy, r8.xyzx
mad r5.xyw, r5.xxxx, r7.xyxz, r8.xyxz
sample r4.xyzw, r4.yxyy, t2.xyzw, s4
mad r4.xyz, r5.zzzz, r4.xyzx, r5.xywx
mad r2.xy, v5.xyxx, cb0[28].xyxx, cb0[28].zwzz
sample r5.xyzw, r2.xyxx, t3.xyzw, s2
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r5.xyxx, r5.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r5.z, r0.w
mul r2.xy, r4.xyxx, cb0[29].yyyy
mul r7.xy, r2.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000)
mov r7.z, l(0)
mad r4.xyw, r1.zzzz, r7.xyxz, r5.xyxz
dp3 r0.w, r4.xywx, r4.xywx
rsq r0.w, r0.w
mul r4.xyw, r0.wwww, r4.xyxw
dp3 r5.x, v2.xyzx, r4.xywx
dp3 r5.y, v3.xyzx, r4.xywx
dp3 r5.z, v4.xyzx, r4.xywx
mad r2.xy, v5.xyxx, cb0[35].xyxx, cb0[35].zwzz
sample r7.xyzw, r2.xyxx, t4.xyzw, s5
add r8.xyzw, r6.xyzw, -r7.xyzw
mad r7.xyzw, r1.zzzz, r8.xyzw, r7.xyzw
dp3 r0.x, r4.xywx, r0.xyzx
mad_sat r0.x, |r0.x|, -cb0[34].z, l(1.250000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.y, r0.x
mul r0.x, r0.x, cb0[34].x
mul r0.xyz, r0.xxxx, r7.xyzx
mul r0.xyz, r0.xyzx, cb0[23].xyzx
mul r0.xyz, r0.xyzx, cb0[37].wwww
add r0.w, -r7.w, l(1.000000)
mad r2.xy, -r0.wwww, r0.wwww, l(1.000000, 8.000000, 0.000000, 0.000000)
mad r0.w, -cb0[34].y, r2.x, r2.y
add r2.x, -r0.w, l(8.000000)
exp r2.x, r2.x
mad r2.y, r2.x, l(0.159154937), l(0.318309873)
mul r4.xyw, r0.xyxz, r2.yyyy
mul r6.xyz, r6.xyzx, r4.zzzz
mul r6.xyz, r1.zzzz, r6.xyzx
add r7.xyz, -v6.xyzx, r13.xyzx
dp3 r1.z, r7.xyzx, r7.xyzx
rsq r1.z, r1.z
mul r7.xyz, r1.zzzz, r7.xyzx
dp3 r1.z, -r7.xyzx, r5.xyzx
add r1.z, r1.z, r1.z
mad r7.xyz, r5.xyzx, -r1.zzzz, -r7.xyzx
mov r8.x, cb0[39].x
mov r8.y, cb0[40].x
mov r8.z, cb0[41].x
mov r9.x, cb0[39].y
mov r9.y, cb0[40].y
mov r9.z, cb0[41].y
mov r10.x, cb0[39].z
mov r10.y, cb0[40].z
mov r10.z, cb0[41].z
mul r11.xyz, r7.zzzz, r10.xyzx
mad r7.yzw, r9.xxyz, r7.yyyy, r11.xxyz
mad r7.xyz, r8.xyzx, r7.xxxx, r7.yzwy
sample_l r7.xyzw, r7.xyzx, t5.xyzw, s6, r0.w
mul r0.xyz, r0.xyzx, r7.xyzx
mul r0.xyz, r1.yyyy, r0.xyzx
mad r0.xyz, r6.xyzx, l(75.000000, 75.000000, 75.000000, 0.000000), r0.xyzx
ge r0.w, l(0.000000), cb0[36].y
mul r6.xyz, r5.zzzz, r10.xyzx
mad r6.xyz, r9.xyzx, r5.yyyy, r6.xyzx
mad r6.xyz, r8.xyzx, r5.xxxx, r6.xyzx
dp3 r1.y, r6.xyzx, r6.xyzx
max r1.y, r1.y, l(0.001000)
rsq r1.y, r1.y
mul r6.xyz, r1.yyyy, r6.xyzx
mad r7.xyz, cb0[51].xyzx, r6.yyyy, cb0[50].xyzx
mad r7.xyz, cb0[52].xyzx, r6.zzzz, r7.xyzx
mad r7.xyz, cb0[53].xyzx, r6.xxxx, r7.xyzx
mul r8.xyz, r6.xzxx, r6.yyzy
mad r7.xyz, cb0[54].xyzx, r8.xxxx, r7.xyzx
mad r7.xyz, cb0[55].xyzx, r8.yyyy, r7.xyzx
mad r7.xyz, cb0[57].xyzx, r8.zzzz, r7.xyzx
mul r1.yz, r6.yyzy, r6.yyzy
mad r1.z, r1.z, l(3.000000), l(-1.000000)
mad r6.yzw, cb0[56].xxyz, r1.zzzz, r7.xxyz
mad r1.y, r6.x, r6.x, -r1.y
mad r6.xyz, cb0[58].xyzx, r1.yyyy, r6.yzwy
mul r1.xyz, r1.xxxx, |r6.xyzx|
and r1.xyz, r0.wwww, r1.xyzx
mad r0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
add r0.w, r1.w, -cb0[36].x
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
add r0.w, r3.y, r3.x
mad r0.w, r2.z, r2.w, r0.w
mad r1.xyz, r0.wwww, l(0.333333343, 0.333333343, 0.333333343, 0.000000), -r3.xyzx
mad r1.xyz, cb0[33].zzzz, r1.xyzx, r3.xyzx
add r1.xyz, r1.xyzx, cb0[33].wwww
eq r0.w, cb3[0].x, l(1.000000)
if_nz r0.w
  eq r0.w, cb3[0].y, l(1.000000)
  mul r2.yzw, v3.wwww, cb3[2].xxyz
  mad r2.yzw, cb3[1].xxyz, v2.wwww, r2.yyzw
  mad r2.yzw, cb3[3].xxyz, v4.wwww, r2.yyzw
  add r2.yzw, r2.yyzw, cb3[4].xxyz
  mov r3.y, v2.w
  mov r3.z, v3.w
  mov r3.w, v4.w
  movc r2.yzw, r0.wwww, r2.yyzw, r3.yyzw
  add r2.yzw, r2.yyzw, -cb3[6].xxyz
  mul r3.yzw, r2.yyzw, cb3[5].xxyz
  mul r0.w, r3.y, l(0.250000)
  mul r1.w, cb3[0].z, l(0.500000)
  mad r2.y, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.w, r0.w, r1.w
  min r3.x, r2.y, r0.w
  sample r6.xyzw, r3.xzwx, t6.xyzw, s0
  add r2.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r7.xyzw, r2.yzwy, t6.xyzw, s0
  add r2.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r3.xyzw, r2.yzwy, t6.xyzw, s0
  mov r5.w, l(1.000000)
  dp4 r6.x, r6.xyzw, r5.xyzw
  dp4 r6.y, r7.xyzw, r5.xyzw
  dp4 r6.z, r3.xyzw, r5.xyzw
else 
  mov r5.w, l(1.000000)
  dp4 r6.x, cb2[38].xyzw, r5.xyzw
  dp4 r6.y, cb2[39].xyzw, r5.xyzw
  dp4 r6.z, cb2[40].xyzw, r5.xyzw
endif 
max r2.yzw, r6.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
mul o1.xyz, r4.xywx, l(0.125000, 0.125000, 0.125000, 0.000000)
mul o1.w, r2.x, l(0.015625)
mad o2.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mad o3.xyz, r1.xyzx, r2.yzwy, r0.xyzx
add r0.xy, -cb0[36].zyzz, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r0.x, r0.y, l(2.000000), r0.x
mul o2.w, r0.x, l(0.333333343)
mov o0.xyz, r1.xyzx
mov o0.w, l(1.000000)
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used