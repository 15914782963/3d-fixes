// asmtool.py --remap-cb-matrix 0 9 100 9 --remap-cb-matrix 0 22 100 22 -I ../../../ -f 30bc9ca8dc890727-ps.txt
// 3DMigoto: 30bc9ca8dc890727 |    Unity headers extracted from Hidden_Waterscape_WaterSunShafts
//    Shader "Hidden/Waterscape/WaterSunShafts" {
//      SubShader 1/1 {
//        Tags { "RenderType"="Opaque" }
//        Pass 1/2 {
//          Name "SUNSHAFTS"
//          Tags { "RenderType"="Opaque" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hidden_Waterscape_WaterSunShafts:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 88 1 8
//   undeciphered1a: 10
//   undeciphered2: 1 5 2 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 528
//   Vector 64 [_UweFogWsLightDirection] 3
//   Vector 80 [_UweFogLightColor]
//   Vector 128 [_UweVsWaterPlane]
//   Float 272 [_UweVolumeTextureSlices]
//   Float 276 [_UweExtinctionAndScatteringScale]
//   Float 280 [_UweSunAttenuationFactor]
//   Vector 304 [_UweColorCastFactor] 2
//   Vector 336 [_UweCausticsAmount] 3
//   Float 424 [_StartDistance]
//   Float 428 [_MaxDistance]
//   Float 432 [_ShaftsScale]
//   Float 436 [_Intensity]
//   Matrix 144 [_UweCameraToVolumeMatrix]
//   Matrix 352 [_CameraToCausticsMatrix]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 3
//   SetTexture 1 [_UweExtinctionTexture] 2D 0
//   SetTexture 2 [_UweScatteringTexture] 2D 1
//   SetTexture 3 [_CausticsTexture] 2D 4
//   SetTexture 4 [_UweSunShadowMap] 2D 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:54:32 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[28], immediateIndexed
dcl_constantbuffer cb1[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_comparison
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_output o0.xyzw
dcl_temps 18
dcl_resource_structured t100, 448

// cb0[9:13] remapped to t100 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb-matrix 0 9 100 9 --remap-cb-matrix 0 22 100 22 -I ../../../ -f 30bc9ca8dc890727-ps.txt
ld_structured r10.xyzw, l(0), l(144), t100.xyzw
ld_structured r11.xyzw, l(0), l(160), t100.xyzw
ld_structured r12.xyzw, l(0), l(176), t100.xyzw
ld_structured r13.xyzw, l(0), l(192), t100.xyzw


// cb0[22:26] remapped to t100 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb-matrix 0 9 100 9 --remap-cb-matrix 0 22 100 22 -I ../../../ -f 30bc9ca8dc890727-ps.txt
ld_structured r14.xyzw, l(0), l(352), t100.xyzw
ld_structured r15.xyzw, l(0), l(368), t100.xyzw
ld_structured r16.xyzw, l(0), l(384), t100.xyzw
ld_structured r17.xyzw, l(0), l(400), t100.xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s3
mad r0.x, cb1[7].z, r0.x, cb1[7].w
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
mul r0.xyz, r0.xxxx, v2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
sqrt r0.w, r0.w
div r0.xyz, r0.xyzx, r0.wwww
min r1.y, r0.w, cb0[26].w
dp3 r0.w, r0.xyzx, cb0[8].xyzx
lt r1.z, l(0.000000), cb0[8].w
if_nz r1.z
  lt r1.z, r0.w, l(0.000000)
  if_nz r1.z
    div r1.z, -cb0[8].w, r0.w
    max r1.x, r1.z, cb0[26].z
  else 
    mov o0.xyzw, l(0,0,0,0)
    ret 
  endif 
else 
  div r0.w, -cb0[8].w, r0.w
  lt r1.z, l(0.000000), r0.w
  min r0.w, r0.w, r1.y
  movc r1.y, r1.z, r0.w, r1.y
  mov r1.x, cb0[26].z
endif 
lt r0.w, r1.y, r1.x
if_nz r0.w
  mov o0.xyzw, l(0,0,0,0)
  ret 
endif 
mul r2.xyz, r0.xyzx, cb0[26].zzzz
mul r3.xyz, r2.yyyy, r11.xyzx
mad r2.xyw, r10.xyxz, r2.xxxx, r3.xyxz
mad r2.xyz, r12.xyzx, r2.zzzz, r2.xywx
add_sat r2.xyz, r2.xyzx, r13.xyzx
div r3.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[17].x
mad r0.w, r2.y, cb0[17].x, l(-0.500000)
frc r1.z, r0.w
add r0.w, r0.w, -r1.z
add r0.w, r0.w, r2.z
mul r2.w, r3.y, r0.w
mov r3.x, l(0)
add r2.yz, r2.xxwx, r3.xxyx
sample_l r3.xyzw, r2.xwxx, t1.xyzw, s0, l(0.000000)
sample_l r4.xyzw, r2.yzyy, t1.xyzw, s0, l(0.000000)
add r4.xyz, -r3.xyzx, r4.xyzx
mad r3.xyz, r1.zzzz, r4.xyzx, r3.xyzx
sample_l r4.xyzw, r2.xwxx, t2.xyzw, s1, l(0.000000)
sample_l r2.xyzw, r2.yzyy, t2.xyzw, s1, l(0.000000)
add r2.xyzw, -r4.xyzw, r2.xyzw
mad r2.xyzw, r1.zzzz, r2.xyzw, r4.xyzw
mul r2.xyz, r2.xyzx, cb0[17].yyyy
mul r3.xyz, r3.xyzx, cb0[17].yyyy
mul r4.xyz, r0.xyzx, r1.xxxx
mul r5.xyz, r0.yyyy, r15.xyzx
mad r5.xyz, r14.xyzx, r0.xxxx, r5.xyzx
mad r5.xyz, r16.xyzx, r0.zzzz, r5.xyzx
mul r1.zw, r4.yyyy, r15.xxxy
mad r1.zw, r14.xxxy, r4.xxxx, r1.zzzw
mad r1.zw, r16.xxxy, r4.zzzz, r1.zzzw
add r1.zw, r1.zzzw, r17.xxxy
mul r1.zw, r1.zzzw, cb0[27].xxxx
mul r5.xy, r5.xyxx, cb0[27].xxxx
mov r4.w, l(1.000000)
dp4 r0.w, v3.xyzw, r4.xyzw
dp4 r3.w, v4.xyzw, r4.xyzw
dp4 r4.w, v5.xyzw, r4.xyzw
dp3 r6.x, v3.xyzx, r0.xyzx
dp3 r6.y, v4.xyzx, r0.xyzx
dp3 r6.z, v5.xyzx, r0.xyzx
div r0.x, l(-1.000000), cb0[4].y
dp3 r0.y, cb0[8].xyzx, r4.xyzx
add r0.y, r0.y, cb0[8].w
mul r0.x, r0.x, -r0.y
mov r4.xyz, l(0,0,0,0)
mov r0.yz, r1.zzwz
mov r7.x, r0.w
mov r7.y, r3.w
mov r7.z, r4.w
mov r5.w, r1.x
loop 
  ge r6.w, r5.w, r1.y
  breakc_nz r6.w
  sample_l r8.xyzw, r0.yzyy, t3.xyzw, s4, l(0.000000)
  sample_c_lz r6.w, r7.xyxx, t4.xxxx, s2, r7.z
  mul r8.xyz, r6.wwww, r8.xyzx
  mul r9.xyz, r3.xyzx, -r5.wwww
  mul r9.xyz, r9.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
  exp r9.xyz, r9.xyzx
  mad r4.xyz, r8.xyzx, r9.xyzx, r4.xyzx
  mad r0.yz, r5.xxyx, l(0.000000, 0.050000, 0.050000, 0.000000), r0.yyzy
  mad r7.xyz, r6.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000), r7.xyzx
  add r5.w, r5.w, l(0.050000)
endloop 
add r0.y, r5.z, l(-1.000000)
mul_sat r0.y, r0.y, l(-0.800000)
mad r0.z, r0.y, l(-2.000000), l(3.000000)
mul r0.y, r0.y, r0.y
mul r0.y, r0.y, r0.z
mul r0.yzw, r0.yyyy, cb0[5].xxyz
mul r0.yzw, r2.xxyz, r0.yyzw
mul r0.yzw, r2.wwww, r0.yyzw
mul r0.yzw, r0.yyzw, cb0[21].zzzz
mul r0.yzw, r4.xxyz, r0.yyzw
mul r0.yzw, r0.yyzw, l(0.000000, 0.050000, 0.050000, 0.050000)
mul r1.yzw, r3.xxyz, cb0[17].zzzz
min r2.x, r1.z, r1.y
min r2.x, r1.w, r2.x
mul r2.y, r0.x, cb0[19].y
mad r1.x, -r1.x, cb0[19].x, -r2.y
mul r1.x, r1.x, l(1.442695)
exp r1.x, r1.x
mad r2.xyz, -r3.xyzx, cb0[17].zzzz, r2.xxxx
mad r1.xyz, r1.xxxx, r2.xyzx, r1.yzwy
mul r1.xyz, -r0.xxxx, r1.xyzx
mul r1.xyz, r1.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
exp r1.xyz, r1.xyzx
mul r0.xyz, r0.yzwy, r1.xyzx
mul o0.xyz, r0.xyzx, cb0[27].yyyy
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used