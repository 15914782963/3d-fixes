// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a6a0b75e4c79be34-ps.txt
// 3DMigoto: a6a0b75e4c79be34 |    Unity headers extracted from UWE_SIG Triplanar with Capping
//    Shader "UWE/SIG Triplanar with Capping" {
//      Fallback "Specular"
//      SubShader 1/1 {
//        Tags { "RenderType"="Opaque" }
//        Pass 1/6 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from UWE_SIG Triplanar with Capping:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 182 15 6
//   undeciphered1a: 13
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" }
//   undeciphered2: 1 7 6 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 512
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Vector 96 [_Color]
//   Float 112 [_CapScale]
//   Float 116 [_SideScale]
//   Float 120 [_TriplanarBlendRange]
//   Vector 128 [_CapColor]
//   Vector 144 [_CapSpecColor]
//   Float 160 [_CapBorderBlendRange]
//   Float 164 [_CapBorderBlendOffset]
//   Float 168 [_CapBorderBlendAngle]
//   Float 172 [_InnerBorderBlendRange]
//   Float 176 [_InnerBorderBlendOffset]
//   Vector 192 [_BorderTint]
//   Float 208 [_Gloss]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 384
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_CapTexture] 2D 3
//   SetTexture 1 [_SideTexture] 2D 5
//   SetTexture 2 [_SideBumpMap] 2D 6
//   SetTexture 3 [_CapBumpMap] 2D 4
//   SetTexture 4 [_ShadowMapTexture] 2D 2
//   SetTexture 5 [unity_ShadowMask] 2D 0
//   SetTexture 6 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:58:22 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy w
// TEXCOORD                 6   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyw
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a6a0b75e4c79be34-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.y, v1.w
mov r0.z, v2.w
mov r0.w, v3.w
add r1.xyz, -r0.yzwy, r14.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r2.xy, r0.ywyy, cb0[7].xxxx
sample r3.xyzw, r2.xyxx, t0.xyzw, s3
add r1.w, v2.z, cb0[10].y
mad r1.w, -r1.w, cb0[10].z, l(1.000000)
add r1.w, -r3.w, r1.w
max r1.w, r1.w, l(-1.000000)
min r1.w, r1.w, l(1.000000)
add r1.w, r1.w, cb0[10].x
add r2.z, cb0[10].x, cb0[10].x
div_sat r1.w, r1.w, r2.z
lt r2.z, l(0.000000), r1.w
if_nz r2.z
  mov r4.x, v1.z
  mov r4.y, v2.z
  mov r4.z, v3.z
  mul r5.xyz, r4.xyzx, r4.xyzx
  mul r5.xyz, r5.xyzx, l(1.960000, 1.960000, 1.960000, 0.000000)
  log r5.xyz, r5.xyzx
  mul r5.xyz, r5.xyzx, cb0[7].zzzz
  exp r5.xyz, r5.xyzx
  mul r5.xyz, r5.xyzx, cb0[7].zzzz
  dp3 r2.z, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  div r5.xyz, r5.xyzx, r2.zzzz
  mul r6.xyz, r0.yzwy, cb0[7].yyyy
  sample r7.xyzw, r6.yzyy, t1.xyzw, s5
  sample r8.xyzw, r6.xzxx, t1.xyzw, s5
  mul r8.xyzw, r5.yyyy, r8.xyzw
  mad r7.xyzw, r5.xxxx, r7.xyzw, r8.xyzw
  sample r8.xyzw, r6.yxyy, t1.xyzw, s5
  mad r7.xyzw, r5.zzzz, r8.xyzw, r7.xyzw
  lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r4.xyzx
  lt r9.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r8.xyz, -r8.xyzx, r9.xyzx
  itof r8.xyz, r8.xyzx
  sample r9.xyzw, r6.yzyy, t2.xyzw, s6
  mad r2.zw, r9.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
  dp2 r5.w, r2.zwzz, r2.zwzz
  min r5.w, r5.w, l(1.000000)
  add r5.w, -r5.w, l(1.000000)
  sqrt r5.w, r5.w
  mov r4.w, -v3.z
  mul r9.xyz, r4.wyxw, r8.xxxx
  mul r10.xyz, r2.wwww, r9.xyzx
  mad r9.xyz, r2.zzzz, r9.yzxy, r10.xyzx
  mad r9.xyz, r5.wwww, r4.xyzx, r9.xyzx
  sample r10.xyzw, r6.xzxx, t2.xyzw, s6
  mad r2.zw, r10.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
  dp2 r5.w, r2.zwzz, r2.zwzz
  min r5.w, r5.w, l(1.000000)
  add r5.w, -r5.w, l(1.000000)
  sqrt r5.w, r5.w
  mov r10.xz, r4.yyzy
  mov r10.y, -v1.z
  mul r10.xyz, r8.yyyy, r10.xyzx
  mul r8.xyw, r4.xwxy, r8.yyyy
  mul r11.xyz, r2.wwww, r8.xywx
  mad r11.xyz, r2.zzzz, r10.xyzx, r11.xyzx
  mad r11.xyz, r5.wwww, r4.xyzx, r11.xyzx
  sample r6.xyzw, r6.yxyy, t2.xyzw, s6
  mad r2.zw, r6.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
  dp2 r4.w, r2.zwzz, r2.zwzz
  min r4.w, r4.w, l(1.000000)
  add r4.w, -r4.w, l(1.000000)
  sqrt r4.w, r4.w
  mul r6.xyz, r4.zyxz, r8.zzzz
  mul r12.xyz, r2.wwww, r6.xyzx
  mad r6.xyz, r2.zzzz, r6.zxyz, r12.xyzx
  mad r6.xyz, r4.wwww, r4.xyzx, r6.xyzx
  mul r11.xyz, r5.yyyy, r11.xyzx
  mad r5.xyw, r9.xyxz, r5.xxxx, r11.xyxz
  mad r5.xyz, r6.xyzx, r5.zzzz, r5.xywx
  dp3 r2.z, r5.xyzx, r5.xyzx
  rsq r2.z, r2.z
  mul r6.xyzw, r3.xyzw, cb0[8].xyzw
  mad r7.xyzw, r7.xyzw, cb0[6].xyzw, -r6.xyzw
  mad r6.xyzw, r1.wwww, r7.xyzw, r6.xyzw
  sample r7.xyzw, r2.xyxx, t3.xyzw, s4
  mad r7.xy, r7.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r2.w, r7.xyxx, r7.xyxx
  min r2.w, r2.w, l(1.000000)
  add r2.w, -r2.w, l(1.000000)
  sqrt r2.w, r2.w
  mul r7.yzw, r8.xxyw, r7.yyyy
  mad r7.xyz, r7.xxxx, r10.xyzx, r7.yzwy
  mad r4.xyz, r2.wwww, r4.xyzx, r7.xyzx
  dp3 r2.w, r4.xyzx, r4.xyzx
  rsq r2.w, r2.w
  mul r4.xyz, r2.wwww, r4.xyzx
  mad r5.xyz, r5.xyzx, r2.zzzz, -r4.xyzx
  mad r4.xyz, r1.wwww, r5.xyzx, r4.xyzx
  dp3 r2.z, r4.xyzx, r4.xyzx
  rsq r2.z, r2.z
  mul r4.xyz, r2.zzzz, r4.xyzx
  add r5.xyz, cb0[3].xyzx, -cb0[9].xyzx
  mad r5.xyz, r1.wwww, r5.xyzx, cb0[9].xyzx
else 
  mul r6.xyzw, r3.xyzw, cb0[8].xyzw
  sample r2.xyzw, r2.xyxx, t3.xyzw, s4
  mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r1.w, r2.xyxx, r2.xyxx
  min r1.w, r1.w, l(1.000000)
  add r1.w, -r1.w, l(1.000000)
  sqrt r1.w, r1.w
  lt r2.z, l(0.000000), v2.z
  lt r2.w, v2.z, l(0.000000)
  iadd r2.z, -r2.z, r2.w
  itof r2.z, r2.z
  mov r3.x, v2.z
  mov r3.y, -v1.z
  mov r3.z, v3.z
  mul r3.xyz, r2.zzzz, r3.xyzx
  mov r7.x, v1.z
  mov r7.y, -v3.z
  mov r7.z, v2.z
  mul r8.xyz, r2.zzzz, r7.xyzx
  mul r2.yzw, r2.yyyy, r8.xxyz
  mad r2.xyz, r2.xxxx, r3.xyzx, r2.yzwy
  mov r7.w, v3.z
  mad r2.xyz, r1.wwww, r7.xzwx, r2.xyzx
  dp3 r1.w, r2.xyzx, r2.xyzx
  rsq r1.w, r1.w
  mul r4.xyz, r1.wwww, r2.xyzx
  mov r5.xyz, cb0[3].xyzx
endif 
add r1.w, cb0[10].w, l(1.000000)
add r2.x, -cb0[11].x, l(1.010000)
div r1.w, r1.w, r2.x
mad r1.w, r1.w, -cb0[11].x, -cb0[10].w
add r1.w, -r1.w, r6.w
div_sat r1.w, r1.w, cb0[10].w
add r2.xyz, r6.xyzx, -cb0[12].xyzx
mad r2.xyz, r1.wwww, r2.xyzx, cb0[12].xyzx
mov r3.x, v1.x
mov r3.y, v2.x
mov r3.z, v3.x
dp3 r3.x, r4.xyzx, r3.xyzx
mov r6.x, v1.y
mov r6.y, v2.y
mov r6.z, v3.y
dp3 r3.y, r4.xyzx, r6.xyzx
mov r6.x, v1.z
mov r6.y, v2.z
mov r6.z, v3.z
dp3 r3.z, r4.xyzx, r6.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
mov r4.x, cb4[9].z
mov r4.y, cb4[10].z
mov r4.z, cb4[11].z
dp3 r1.w, r1.xyzx, r4.xyzx
add r4.xyz, r0.yzwy, -cb3[25].xyzx
dp3 r2.w, r4.xyzx, r4.xyzx
sqrt r2.w, r2.w
add r2.w, -r1.w, r2.w
mad r1.w, cb3[25].w, r2.w, r1.w
mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
eq r2.w, cb5[0].x, l(1.000000)
if_nz r2.w
  eq r3.w, cb5[0].y, l(1.000000)
  mul r4.xyz, v2.wwww, cb5[2].xyzx
  mad r4.xyz, cb5[1].xyzx, v1.wwww, r4.xyzx
  mad r4.xyz, cb5[3].xyzx, v3.wwww, r4.xyzx
  add r4.xyz, r4.xyzx, cb5[4].xyzx
  movc r4.xyz, r3.wwww, r4.xyzx, r0.yzwy
  add r4.xyz, r4.xyzx, -cb5[6].xyzx
  mul r4.yzw, r4.xxyz, cb5[5].xxyz
  mad r3.w, r4.y, l(0.250000), l(0.750000)
  mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  max r4.x, r3.w, r4.y
  sample r4.xyzw, r4.xzwx, t6.xyzw, s1
else 
  sample r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), t5.xyzw, s0
endif 
dp4_sat r3.w, r4.xyzw, cb2[45].xyzw
div r4.xy, v5.xyxx, v5.wwww
sample r4.xyzw, r4.xyxx, t4.xyzw, s2
add_sat r1.w, r1.w, r4.x
min r1.w, r3.w, r1.w
dp3 r4.x, v1.xyzx, r3.xyzx
dp3 r4.y, v2.xyzx, r3.xyzx
dp3 r4.z, v3.xyzx, r3.xyzx
mul r3.xyz, r1.wwww, cb0[2].xyzx
if_nz r2.w
  eq r1.w, cb5[0].y, l(1.000000)
  mul r6.xyz, v2.wwww, cb5[2].xyzx
  mad r6.xyz, cb5[1].xyzx, v1.wwww, r6.xyzx
  mad r6.xyz, cb5[3].xyzx, v3.wwww, r6.xyzx
  add r6.xyz, r6.xyzx, cb5[4].xyzx
  movc r0.yzw, r1.wwww, r6.xxyz, r0.yyzw
  add r0.yzw, r0.yyzw, -cb5[6].xxyz
  mul r6.yzw, r0.yyzw, cb5[5].xxyz
  mul r0.y, r6.y, l(0.250000)
  mul r0.z, cb5[0].z, l(0.500000)
  mad r0.w, -cb5[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.z, r0.y
  min r6.x, r0.w, r0.y
  sample r7.xyzw, r6.xzwx, t6.xyzw, s1
  add r0.yzw, r6.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r8.xyzw, r0.yzwy, t6.xyzw, s1
  add r0.yzw, r6.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r6.xyzw, r0.yzwy, t6.xyzw, s1
  mov r4.w, l(1.000000)
  dp4 r7.x, r7.xyzw, r4.xyzw
  dp4 r7.y, r8.xyzw, r4.xyzw
  dp4 r7.z, r6.xyzw, r4.xyzw
else 
  mov r4.w, l(1.000000)
  dp4 r7.x, cb2[38].xyzw, r4.xyzw
  dp4 r7.y, cb2[39].xyzw, r4.xyzw
  dp4 r7.z, cb2[40].xyzw, r4.xyzw
endif 
add r0.yzw, r7.xxyz, v4.xxyz
mad r1.xyz, r1.xyzx, r0.xxxx, cb2[0].xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
dp3 r0.x, r4.xyzx, cb2[0].xyzx
max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r1.x, r4.xyzx, r1.xyzx
max r1.x, r1.x, l(0.000000)
mul r1.y, cb0[13].x, l(128.000000)
log r1.x, r1.x
mul r1.x, r1.x, r1.y
exp r1.x, r1.x
mul r1.x, r2.x, r1.x
mul r1.yzw, r2.xxyz, r3.xxyz
mul r3.xyz, r5.xyzx, r3.xyzx
mul r3.xyz, r1.xxxx, r3.xyzx
mad r1.xyz, r1.yzwy, r0.xxxx, r3.xyzx
mad o0.xyz, r2.xyzx, r0.yzwy, r1.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used