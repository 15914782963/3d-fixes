// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed cc7647b8ca259f7d-ps.txt
// 3DMigoto: cc7647b8ca259f7d | Matched 2 variants of 1 shaders: MarmosetUBER
//
//       Unity headers extracted from MarmosetUBER
//       Shader "MarmosetUBER" {
//         Fallback "VertexLit"
//         SubShader 1/1 {
//           Tags { "RenderType"="Opaque" }
//           Pass 1/3 {
//             Name "DEFERRED"
//             Tags { "LIGHTMODE"="DEFERRED" "RenderType"="Opaque" }
//             ZWrite [_ZWrite]
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from MarmosetUBER:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 195 12 2
//      undeciphered1a: 10
// 2:   Keywords { "UNITY_HDR_ON" "MARMO_SPECMAP" "UWE_DETAILMAP" "FX_BUILDING" "FX_BURST" }
// 1:   Keywords { "UNITY_HDR_ON" "MARMO_SPECMAP" "UWE_DETAILMAP" "FX_BUILDING" }
//      undeciphered2: 1 9 4 9 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 1088
//      Vector 368 [_SpecColor]
//      Float 384 [_EnableSimpleGlass]
//      Vector 400 [_Color]
//      Vector 416 [_MainTex_ST]
//      Float 432 [_UWE_EditorTime]
//      Float 440 [_UweLocalLightScalar]
//      Float 444 [_IBLreductionAtNight]
//      Vector 448 [_BumpMap_ST]
//      Vector 464 [_DetailIntensities]
//      Vector 496 [_DetailDiffuseTex_ST]
//      Vector 512 [_DetailBumpTex_ST]
//      Vector 528 [_DetailSpecTex_ST]
//      Float 552 [_minYpos]
//      Float 556 [_maxYpos]
//      Vector 576 [_BorderColor]
//      Float 592 [_NoiseThickness]
//      Float 596 [_NoiseStr]
//      Vector 608 [_BuildParams]
//      Float 624 [_BuildLinear]
//      Float 628 [_Built]
//      Float 632 [_SubConstructProgress]
//      Float 656 [_Gray]
//      Float 660 [_Brightness]
//      Float 664 [_SpecInt]
//      Float 668 [_Shininess]
//      Float 672 [_Fresnel]
//      Vector 688 [_SpecTex_ST]
//      Float 704 [_Cutoff]
//      Float 708 [_AffectedByDayNightCycle]
//      Float 712 [_Outdoors]
//      Vector 720 [_ExposureIBL]
//      Vector 744 [_UniformOcclusion] 2
//      Vector 928 [_SH0] 3
//      Vector 944 [_SH1] 3
//      Vector 960 [_SH2] 3
//      Vector 976 [_SH3] 3
//      Vector 992 [_SH4] 3
//      Vector 1008 [_SH5] 3
//      Vector 1024 [_SH6] 3
//      Vector 1040 [_SH7] 3
//      Vector 1056 [_SH8] 3
//      Matrix 752 [_SkyMatrix]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 752
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_MainTex] 2D 1
//      SetTexture 1 [_DetailDiffuseTex] 2D 3
//      SetTexture 2 [_BumpMap] 2D 2
//      SetTexture 3 [_DetailBumpTex] 2D 4
//      SetTexture 4 [_SpecTex] 2D 7
//      SetTexture 5 [_DetailSpecTex] 2D 5
//      SetTexture 6 [_SpecCubeIBL] CUBE 8
//      SetTexture 7 [_EmissiveTex] 2D 6
//      SetTexture 8 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:59:31 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyz         8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[67], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed cc7647b8ca259f7d-ps.txt

mul r10.w, -r10.x, r10.y
mad r11.xyz, -r10.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v6.xyzx, v6.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v6.xyzx
add r0.w, cb0[27].x, cb1[0].y
add r1.x, -cb0[27].z, l(1.000000)
mul r1.x, r1.x, cb0[44].y
mul r1.yz, cb0[45].xxyx, cb0[46].zzwz
mad r2.xy, v4.xyxx, cb0[26].xyxx, cb0[26].zwzz
sample r2.xyzw, r2.xyxx, t0.xyzw, s1
mul r2.xyzw, r2.xyzw, cb0[25].xyzw
mad r3.xy, v4.zwzz, cb0[31].xyxx, cb0[31].zwzz
sample r3.xyzw, r3.xyxx, t1.xyzw, s3
add r4.xy, -cb0[29].xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mov r5.x, cb0[29].x
mov r5.w, l(2.000000)
mul r3.xyzw, r3.xyzw, r5.xxxw
mov r5.x, l(4.594794)
mov r5.w, cb0[29].x
mad r3.xyzw, r3.xyzw, r5.xxxw, r4.xxxx
mul r2.xyz, r2.xyzx, r3.xyzx
mul r2.xyz, r2.xyzx, cb0[45].wwww
mad r1.w, r2.w, r3.w, l(-1.000000)
mad r1.w, cb0[24].x, r1.w, l(1.000000)
mul r2.xyw, r1.wwww, r2.xyxz
max r1.x, r1.x, l(0.000000)
min r1.x, r1.x, cb0[27].w
mad r1.xy, r1.xxxx, -r1.yzyy, r1.yzyy
mad r3.xy, v4.xyxx, cb0[28].xyxx, cb0[28].zwzz
sample r3.xyzw, r3.xyxx, t2.xyzw, s2
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.z, r3.xyxx, r3.xyxx
min r1.z, r1.z, l(1.000000)
add r1.z, -r1.z, l(1.000000)
sqrt r5.z, r1.z
mad r3.zw, v4.zzzw, cb0[32].xxxy, cb0[32].zzzw
sample r6.xyzw, r3.zwzz, t3.xyzw, s4
mad r3.zw, r6.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mad r5.xy, r3.zwzz, cb0[29].yyyy, r3.xyxx
dp3 r1.z, r5.xyzx, r5.xyzx
rsq r1.z, r1.z
mul r3.xyz, r1.zzzz, r5.xyzx
dp3 r5.x, v1.xyzx, r3.xyzx
dp3 r5.y, v2.xyzx, r3.xyzx
dp3 r5.z, v3.xyzx, r3.xyzx
mad r4.xz, v4.xxyx, cb0[43].xxyx, cb0[43].zzwz
sample r6.xyzw, r4.xzxx, t4.xyzw, s7
mad r4.xz, v4.zzwz, cb0[33].xxyx, cb0[33].zzwz
sample r7.xyzw, r4.xzxx, t5.xyzw, s5
mov r4.x, cb0[29].z
mov r4.w, l(2.000000)
mul r7.xyzw, r4.xxxw, r7.xyzw
mov r4.x, l(4.594794)
mov r4.w, cb0[29].z
mad r4.xyzw, r7.xyzw, r4.xxxw, r4.yyyy
mul_sat r4.xyzw, r4.xyzw, r6.xyzw
dp3 r0.x, r3.xyzx, r0.xyzx
mad_sat r0.x, |r0.x|, -cb0[42].x, l(1.250000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.y, r0.x
mul r0.x, r0.x, cb0[41].z
mul r0.xyz, r0.xxxx, r4.xyzx
mul r0.xyz, r0.xyzx, cb0[23].xyzx
mul r0.xyz, r0.xyzx, cb0[45].wwww
add r1.z, -r4.w, l(1.000000)
mad r3.xy, -r1.zzzz, r1.zzzz, l(1.000000, 8.000000, 0.000000, 0.000000)
mad r1.z, -cb0[41].w, r3.x, r3.y
add r3.x, -r1.z, l(8.000000)
exp r3.x, r3.x
mad r3.y, r3.x, l(0.159154937), l(0.318309873)
mul r3.yzw, r0.xxyz, r3.yyyy
add r4.xyz, -v5.xyzx, r11.xyzx
dp3 r4.w, r4.xyzx, r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, r4.xyzx
dp3 r4.w, -r4.xyzx, r5.xyzx
add r4.w, r4.w, r4.w
mad r4.xyz, r5.xyzx, -r4.wwww, -r4.xyzx
mov r6.x, cb0[47].x
mov r6.y, cb0[48].x
mov r6.z, cb0[49].x
mov r7.x, cb0[47].y
mov r7.y, cb0[48].y
mov r7.z, cb0[49].y
mov r8.x, cb0[47].z
mov r8.y, cb0[48].z
mov r8.z, cb0[49].z
mul r9.xyz, r4.zzzz, r8.xyzx
mad r4.yzw, r7.xxyz, r4.yyyy, r9.xxyz
mad r4.xyz, r6.xyzx, r4.xxxx, r4.yzwy
sample_l r4.xyzw, r4.xyzx, t6.xyzw, s8, r1.z
mul r0.xyz, r0.xyzx, r4.xyzx
ge r1.z, l(0.000000), cb0[44].y
mul r4.xyz, r5.zzzz, r8.xyzx
mad r4.xyz, r7.xyzx, r5.yyyy, r4.xyzx
mad r4.xyz, r6.xyzx, r5.xxxx, r4.xyzx
dp3 r4.w, r4.xyzx, r4.xyzx
max r4.w, r4.w, l(0.001000)
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, r4.xyzx
mad r6.xyz, cb0[59].xyzx, r4.yyyy, cb0[58].xyzx
mad r6.xyz, cb0[60].xyzx, r4.zzzz, r6.xyzx
mad r6.xyz, cb0[61].xyzx, r4.xxxx, r6.xyzx
mul r7.xyz, r4.xzxx, r4.yyzy
mad r6.xyz, cb0[62].xyzx, r7.xxxx, r6.xyzx
mad r6.xyz, cb0[63].xyzx, r7.yyyy, r6.xyzx
mad r6.xyz, cb0[65].xyzx, r7.zzzz, r6.xyzx
mul r4.yz, r4.yyzy, r4.yyzy
mad r4.z, r4.z, l(3.000000), l(-1.000000)
mad r6.xyz, cb0[64].xyzx, r4.zzzz, r6.xyzx
mad r4.x, r4.x, r4.x, -r4.y
mad r4.xyz, cb0[66].xyzx, r4.xxxx, r6.xyzx
mul r4.xyz, r1.xxxx, |r4.xyzx|
and r4.xyz, r1.zzzz, r4.xyzx
mul r4.xyz, r2.xywx, r4.xyzx
mad r0.xyz, r0.xyzx, r1.yyyy, r4.xyzx
mul r1.y, r0.w, cb0[38].w
mov r4.x, v1.z
mov r4.y, v2.z
mov r4.z, v3.z
mul r4.xyz, r4.xyzx, r4.xyzx
mul r4.xyz, r4.xyzx, l(1.960000, 1.960000, 1.960000, 0.000000)
mul r4.xyz, r4.xyzx, r4.xyzx
add r4.xyz, r4.xyzx, r4.xyzx
dp3 r0.w, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r4.xyz, r4.xyzx, r0.wwww
mul r6.xyz, v5.xyzx, cb0[38].xxxx
add r6.xw, r6.xxxy, r6.xxxy
frc r7.xyz, r6.wxxw
add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r6.xyz, r6.zzyz, l(2.000000, 2.000000, 2.000000, 0.000000), |r7.xyzx|
frc r6.xyz, r6.xyzx
add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r6.xyz, v5.xyzx, cb0[38].xxxx, |r6.xyzx|
frc r0.w, r6.y
add r0.w, r0.w, l(-0.500000)
add r0.w, |r0.w|, r6.x
frc r0.w, r0.w
add r0.w, r0.w, l(-0.500000)
add r0.w, |r0.w|, r6.z
frc r0.w, r0.w
add r0.w, r0.w, l(-0.500000)
mov r1.xz, l(0,0,0,0)
mad r1.xyz, v5.xyzx, cb0[38].zzzz, r1.xyzx
add r6.xy, r1.xyxx, r1.xyxx
frc r6.xyz, r6.yxxy
add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r6.xyz, r1.zzyz, l(2.000000, 2.000000, 2.000000, 0.000000), |r6.xyzx|
frc r6.xyz, r6.xyzx
add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r1.xyz, r1.xyzx, |r6.xyzx|
frc r1.y, r1.y
add r1.y, r1.y, l(-0.500000)
add r1.x, |r1.y|, r1.x
frc r1.x, r1.x
add r1.x, r1.x, l(-0.500000)
add r1.x, |r1.x|, r1.z
frc r1.x, r1.x
add r1.x, r1.x, l(-0.500000)
mul r1.yz, |r1.xxxx|, l(0.000000, 0.714285731, 0.649350643, 0.000000)
mul r6.xyz, v5.xyzx, cb0[38].yyyy
mul r6.xyz, r6.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000)
sample r7.xyzw, r6.yzyy, t7.xyzw, s6
sample r8.xyzw, r6.xzxx, t7.xyzw, s6
mul r8.xyz, r4.yyyy, r8.xyzx
mad r4.xyw, r4.xxxx, r7.xyxz, r8.xyxz
sample r6.xyzw, r6.yxyy, t7.xyzw, s6
mad r4.xyz, r4.zzzz, r6.xyzx, r4.xywx
mul r4.w, r1.y, r4.x
add r6.x, cb0[39].y, cb0[39].z
mad r0.w, |r0.w|, l(0.714285731), r4.w
mul r4.w, cb0[37].y, l(0.220000)
mad r0.w, r0.w, cb0[37].y, -r4.w
add r4.w, -v5.y, cb0[34].z
add r6.y, -cb0[34].z, cb0[34].w
div r4.w, r4.w, |r6.y|
add r4.w, r4.w, r6.x
add_sat r4.w, r0.w, r4.w
add r0.w, -r0.w, r6.x
add r4.w, r4.w, l(0.400000)
add r4.w, -r0.w, r4.w
mad r0.w, cb0[39].x, r4.w, r0.w
add r4.w, -r0.w, cb0[37].x
mad r4.xyz, r4.xyzx, r1.yyyy, r4.wwww
mul_sat r4.xyz, r4.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000)
mul r4.xyz, r4.xyzx, cb0[36].xyzx
mul r4.xyz, r4.xyzx, l(20.000000, 20.000000, 20.000000, 0.000000)
mad r1.x, |r1.x|, l(-1.29870129), l(3.000000)
mul r1.y, r1.z, r1.z
mul r1.x, r1.y, r1.x
mad r0.xyz, r4.xyzx, r1.xxxx, r0.xyzx
mov_sat r0.w, r0.w
add r0.w, r0.w, -cb0[44].x
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
add r0.w, r2.y, r2.x
mad r0.w, r2.z, r1.w, r0.w
mad r1.xyz, r0.wwww, l(0.333333343, 0.333333343, 0.333333343, 0.000000), -r2.xywx
mad r1.xyz, cb0[41].xxxx, r1.xyzx, r2.xywx
add r1.xyz, r1.xyzx, cb0[41].yyyy
eq r0.w, cb3[0].x, l(1.000000)
if_nz r0.w
  eq r0.w, cb3[0].y, l(1.000000)
  mul r2.xyz, v2.wwww, cb3[2].xyzx
  mad r2.xyz, cb3[1].xyzx, v1.wwww, r2.xyzx
  mad r2.xyz, cb3[3].xyzx, v3.wwww, r2.xyzx
  add r2.xyz, r2.xyzx, cb3[4].xyzx
  mov r4.y, v1.w
  mov r4.z, v2.w
  mov r4.w, v3.w
  movc r2.xyz, r0.wwww, r2.xyzx, r4.yzwy
  add r2.xyz, r2.xyzx, -cb3[6].xyzx
  mul r2.yzw, r2.xxyz, cb3[5].xxyz
  mul r0.w, r2.y, l(0.250000)
  mul r1.w, cb3[0].z, l(0.500000)
  mad r2.y, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.w, r0.w, r1.w
  min r2.x, r2.y, r0.w
  sample r4.xyzw, r2.xzwx, t8.xyzw, s0
  add r6.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r6.xyzw, r6.xyzx, t8.xyzw, s0
  add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r2.xyzw, r2.xyzx, t8.xyzw, s0
  mov r5.w, l(1.000000)
  dp4 r4.x, r4.xyzw, r5.xyzw
  dp4 r4.y, r6.xyzw, r5.xyzw
  dp4 r4.z, r2.xyzw, r5.xyzw
else 
  mov r5.w, l(1.000000)
  dp4 r4.x, cb2[38].xyzw, r5.xyzw
  dp4 r4.y, cb2[39].xyzw, r5.xyzw
  dp4 r4.z, cb2[40].xyzw, r5.xyzw
endif 
max r2.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul o1.xyzw, r3.yzwx, l(0.125000, 0.125000, 0.125000, 0.015625)
mad o2.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mad o3.xyz, r1.xyzx, r2.xyzx, r0.xyzx
add r0.xy, -cb0[44].zyzz, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r0.x, r0.y, l(2.000000), r0.x
mul o2.w, r0.x, l(0.333333343)
mov o0.xyz, r1.xyzx
mov o0.w, l(1.000000)
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used