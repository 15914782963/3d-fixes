// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3b1684447e3b91e5-ps.txt
// 3DMigoto: 3b1684447e3b91e5 |    Unity headers extracted from FX_add_WaterSplash
//    Shader "FX/add_WaterSplash" {
//      Fallback "Transparent/VertexLit"
//      SubShader 1/1 {
//        LOD 500
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/2 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from FX_add_WaterSplash:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 28 5 0
//   undeciphered1a: 4
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 5 2 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 496
//   Vector 64 [_Color]
//   Vector 80 [_scrollSpeed]
//   Vector 96 [_distortScrollSpeed]
//   Float 112 [_EmissiveStrengh]
//   Float 116 [_distortStr]
//   Float 128 [_RimPower]
//   Float 132 [_InvFade]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 4
//   SetTexture 1 [_DistortMap] 2D 3
//   SetTexture 2 [_MainTex] 2D 0
//   SetTexture 3 [_MainTex2] 2D 1
//   SetTexture 4 [_MaskTex] 2D 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:54:55 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyzw
dcl_output o0.xyzw
dcl_temps 6
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3b1684447e3b91e5-ps.txt

mul r4.w, -r4.x, r4.y
mad r5.xyz, -r4.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.xy, v6.xyxx, v6.wwww
sample r0.xyzw, r0.xyxx, t0.xyzw, s4
mad r0.x, cb1[7].z, r0.x, cb1[7].w
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
add r0.x, r0.x, -v6.z
mul_sat r0.x, r0.x, cb0[8].y
add r0.yzw, -v4.xxyz, r5.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
dp3 r0.y, r0.yzwy, v3.xyzx
mul r0.y, r0.y, r0.y
min r0.y, r0.y, l(1.000000)
log r0.y, r0.y
mul r0.y, r0.y, cb0[8].x
exp r0.y, r0.y
mad r0.zw, cb0[6].xxxy, cb1[0].yyyy, v2.zzzw
sample r1.xyzw, r0.zwzz, t1.xyzw, s3
mad r2.xyzw, cb1[0].yyyy, cb0[5].xyzw, v1.xyzw
mad r1.xyzw, r1.xyxy, cb0[7].yyyy, r2.xyzw
sample r2.xyzw, r1.xyxx, t2.xyzw, s0
sample r1.xyzw, r1.zwzz, t3.xyzw, s1
sample r3.xyzw, v2.xyxx, t4.xyzw, s2
mul r0.z, r1.x, r3.x
mad r1.xyz, r1.xyzx, r3.xyzx, r2.xyzx
mul r0.z, r0.z, r2.x
mul r2.xyzw, v5.xyzw, cb0[7].xxxx
mul r2.xyzw, r2.xyzw, cb0[4].xyzw
mul r0.z, r0.z, r2.w
mul r1.xyz, r1.xyzx, r2.xyzx
mul r0.y, r0.y, r0.z
mul r0.x, r0.x, r0.y
mul o0.xyz, r0.xxxx, r1.xyzx
mov o0.w, r0.x
ret 
// Approximately 0 instruction slots used