// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0f7a1ff58ae2408f-ps.txt
// 3DMigoto: 0f7a1ff58ae2408f | Matched 2 variants of 1 shaders: MarmosetUBER
//
//       Unity headers extracted from MarmosetUBER
//       Shader "MarmosetUBER" {
//         Fallback "VertexLit"
//         SubShader 1/1 {
//           Tags { "RenderType"="Opaque" }
//           Pass 1/3 {
//             Name "DEFERRED"
//             Tags { "LIGHTMODE"="DEFERRED" "RenderType"="Opaque" }
//             ZWrite [_ZWrite]
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from MarmosetUBER:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 203 12 2
//      undeciphered1a: 11
// 2:   Keywords { "MARMO_SPECMAP" "FX_SINWAVE" "FX_BUILDING" "MARMO_ALPHA_CLIP" "FX_BURST" "UWE_DITHERALPHA" }
// 1:   Keywords { "MARMO_SPECMAP" "FX_SINWAVE" "FX_BUILDING" "MARMO_ALPHA_CLIP" "UWE_DITHERALPHA" }
//      undeciphered2: 1 8 4 8 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 1072
//      Vector 368 [_SpecColor]
//      Float 384 [_EnableSimpleGlass]
//      Vector 400 [_Color]
//      Vector 416 [_MainTex_ST]
//      Float 432 [_UWE_EditorTime]
//      Float 440 [_UweLocalLightScalar]
//      Float 444 [_IBLreductionAtNight]
//      Vector 448 [_BumpMap_ST]
//      Float 472 [_minYpos]
//      Float 476 [_maxYpos]
//      Vector 560 [_BorderColor]
//      Float 576 [_NoiseThickness]
//      Float 580 [_NoiseStr]
//      Vector 592 [_BuildParams]
//      Float 608 [_BuildLinear]
//      Float 612 [_Built]
//      Float 616 [_SubConstructProgress]
//      Float 640 [_Gray]
//      Float 644 [_Brightness]
//      Float 648 [_SpecInt]
//      Float 652 [_Shininess]
//      Float 656 [_Fresnel]
//      Vector 672 [_SpecTex_ST]
//      Float 688 [_Cutoff]
//      Float 692 [_AffectedByDayNightCycle]
//      Float 696 [_Outdoors]
//      Vector 704 [_ExposureIBL]
//      Vector 728 [_UniformOcclusion] 2
//      Vector 912 [_SH0] 3
//      Vector 928 [_SH1] 3
//      Vector 944 [_SH2] 3
//      Vector 960 [_SH3] 3
//      Vector 976 [_SH4] 3
//      Vector 992 [_SH5] 3
//      Vector 1008 [_SH6] 3
//      Vector 1024 [_SH7] 3
//      Vector 1040 [_SH8] 3
//      Float 1052 [_UweVrFadeAmount]
//      Matrix 736 [_SkyMatrix]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 752
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_VrFadeMask] 2D 7
//      SetTexture 1 [_DitherMaskLOD2D] 2D 3
//      SetTexture 2 [_MainTex] 2D 1
//      SetTexture 3 [_BumpMap] 2D 2
//      SetTexture 4 [_SpecTex] 2D 5
//      SetTexture 5 [_SpecCubeIBL] CUBE 6
//      SetTexture 6 [_EmissiveTex] 2D 4
//      SetTexture 7 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Thu Jan 25 16:53:27 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyz         8     NONE   float       
// TEXCOORD                 8   xyz         9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[66], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v9.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0f7a1ff58ae2408f-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v6.xyzx, v6.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v6.xyzx
div r1.xy, v9.xyxx, v9.zzzz
sample r2.xyzw, v4.xyxx, t0.xyzw, s7
add r0.w, -r2.x, l(1.000000)
mad r0.w, -cb0[65].w, r0.w, l(1.000000)
mul r0.w, r0.w, l(16.000000)
round_ni r0.w, r0.w
mul r0.w, r0.w, l(0.062500)
min r0.w, r0.w, l(0.937500)
frc r1.y, r1.y
mad r1.z, r1.y, l(0.062500), r0.w
sample r2.xyzw, r1.xzxx, t1.xyzw, s3
add r0.w, r2.w, l(-0.500000)
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
add r0.w, cb0[27].x, cb1[0].y
add r1.z, -cb0[27].z, l(1.000000)
mul r1.z, r1.z, cb0[43].y
mul r2.xy, cb0[44].xyxx, cb0[45].zwzz
mad r2.zw, v4.xxxy, cb0[26].xxxy, cb0[26].zzzw
sample r3.xyzw, r2.zwzz, t2.xyzw, s1
mul r3.xyz, r3.xyzx, cb0[25].xyzx
mul r3.xyz, r3.xyzx, cb0[44].wwww
mad r2.z, r3.w, cb0[25].w, l(-1.000000)
mad r2.z, cb0[24].x, r2.z, l(1.000000)
mul r3.xyw, r2.zzzz, r3.xyxz
max r1.z, r1.z, l(0.000000)
min r1.z, r1.z, cb0[27].w
mad r2.xy, r1.zzzz, -r2.xyxx, r2.xyxx
mad r4.xy, v4.xyxx, cb0[28].xyxx, cb0[28].zwzz
sample r4.xyzw, r4.xyxx, t3.xyzw, s2
mad r4.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.z, r4.xyxx, r4.xyxx
min r1.z, r1.z, l(1.000000)
add r1.z, -r1.z, l(1.000000)
sqrt r4.z, r1.z
dp3 r1.z, r4.xyzx, r4.xyzx
rsq r1.z, r1.z
mul r4.xyz, r1.zzzz, r4.xyzx
dp3 r5.x, v1.xyzx, r4.xyzx
dp3 r5.y, v2.xyzx, r4.xyzx
dp3 r5.z, v3.xyzx, r4.xyzx
mad r6.xy, v4.xyxx, cb0[42].xyxx, cb0[42].zwzz
sample r6.xyzw, r6.xyxx, t4.xyzw, s5
dp3 r0.x, r4.xyzx, r0.xyzx
mad_sat r0.x, |r0.x|, -cb0[41].x, l(1.250000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.y, r0.x
mul r0.x, r0.x, cb0[40].z
mul r0.xyz, r0.xxxx, r6.xyzx
mul r0.xyz, r0.xyzx, cb0[23].xyzx
mul r0.xyz, r0.xyzx, cb0[44].wwww
add r1.z, -r6.w, l(1.000000)
mad r4.xy, -r1.zzzz, r1.zzzz, l(1.000000, 8.000000, 0.000000, 0.000000)
mad r1.z, -cb0[40].w, r4.x, r4.y
add r2.w, -r1.z, l(8.000000)
exp r2.w, r2.w
mad r4.x, r2.w, l(0.159154937), l(0.318309873)
mul r4.xyz, r0.xyzx, r4.xxxx
add r6.xyz, -v5.xyzx, r12.xyzx
dp3 r4.w, r6.xyzx, r6.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, r6.xyzx
dp3 r4.w, -r6.xyzx, r5.xyzx
add r4.w, r4.w, r4.w
mad r6.xyz, r5.xyzx, -r4.wwww, -r6.xyzx
mov r7.x, cb0[46].x
mov r7.y, cb0[47].x
mov r7.z, cb0[48].x
mov r8.x, cb0[46].y
mov r8.y, cb0[47].y
mov r8.z, cb0[48].y
mov r9.x, cb0[46].z
mov r9.y, cb0[47].z
mov r9.z, cb0[48].z
mul r10.xyz, r6.zzzz, r9.xyzx
mad r6.yzw, r8.xxyz, r6.yyyy, r10.xxyz
mad r6.xyz, r7.xyzx, r6.xxxx, r6.yzwy
sample_l r6.xyzw, r6.xyzx, t5.xyzw, s6, r1.z
mul r0.xyz, r0.xyzx, r6.xyzx
ge r1.z, l(0.000000), cb0[43].y
mul r6.xyz, r5.zzzz, r9.xyzx
mad r6.xyz, r8.xyzx, r5.yyyy, r6.xyzx
mad r6.xyz, r7.xyzx, r5.xxxx, r6.xyzx
dp3 r4.w, r6.xyzx, r6.xyzx
max r4.w, r4.w, l(0.001000)
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, r6.xyzx
mad r7.xyz, cb0[58].xyzx, r6.yyyy, cb0[57].xyzx
mad r7.xyz, cb0[59].xyzx, r6.zzzz, r7.xyzx
mad r7.xyz, cb0[60].xyzx, r6.xxxx, r7.xyzx
mul r8.xyz, r6.xzxx, r6.yyzy
mad r7.xyz, cb0[61].xyzx, r8.xxxx, r7.xyzx
mad r7.xyz, cb0[62].xyzx, r8.yyyy, r7.xyzx
mad r7.xyz, cb0[64].xyzx, r8.zzzz, r7.xyzx
mul r6.yz, r6.yyzy, r6.yyzy
mad r4.w, r6.z, l(3.000000), l(-1.000000)
mad r7.xyz, cb0[63].xyzx, r4.wwww, r7.xyzx
mad r4.w, r6.x, r6.x, -r6.y
mad r6.xyz, cb0[65].xyzx, r4.wwww, r7.xyzx
mul r6.xyz, r2.xxxx, |r6.xyzx|
and r6.xyz, r1.zzzz, r6.xyzx
mul r6.xyz, r3.xywx, r6.xyzx
mad r0.xyz, r0.xyzx, r2.yyyy, r6.xyzx
mul r6.y, r0.w, cb0[37].w
mov r7.x, v1.z
mov r7.y, v2.z
mov r7.z, v3.z
mul r7.xyz, r7.xyzx, r7.xyzx
mul r7.xyz, r7.xyzx, l(1.960000, 1.960000, 1.960000, 0.000000)
mul r7.xyz, r7.xyzx, r7.xyzx
add r7.xyz, r7.xyzx, r7.xyzx
dp3 r0.w, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r7.xyz, r7.xyzx, r0.wwww
mul r8.xyz, v5.xyzx, cb0[37].xxxx
add r2.xy, r8.xyxx, r8.xyxx
frc r9.xyz, r2.yxxy
add r9.xyz, r9.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r8.xyz, r8.zzyz, l(2.000000, 2.000000, 2.000000, 0.000000), |r9.xyzx|
frc r8.xyz, r8.xyzx
add r8.xyz, r8.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r8.xyz, v5.xyzx, cb0[37].xxxx, |r8.xyzx|
frc r0.w, r8.y
add r0.w, r0.w, l(-0.500000)
add r0.w, |r0.w|, r8.x
frc r0.w, r0.w
add r0.w, r0.w, l(-0.500000)
add r0.w, |r0.w|, r8.z
frc r0.w, r0.w
add r0.w, r0.w, l(-0.500000)
mov r6.xz, l(0,0,0,0)
mad r6.xyz, v5.xyzx, cb0[37].zzzz, r6.xyzx
add r2.xy, r6.xyxx, r6.xyxx
frc r8.xyz, r2.yxxy
add r8.xyz, r8.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r8.xyz, r6.zzyz, l(2.000000, 2.000000, 2.000000, 0.000000), |r8.xyzx|
frc r8.xyz, r8.xyzx
add r8.xyz, r8.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r6.xyz, r6.xyzx, |r8.xyzx|
frc r1.z, r6.y
add r1.z, r1.z, l(-0.500000)
add r1.z, |r1.z|, r6.x
frc r1.z, r1.z
add r1.z, r1.z, l(-0.500000)
add r1.z, |r1.z|, r6.z
frc r1.z, r1.z
add r1.z, r1.z, l(-0.500000)
mul r2.xy, |r1.zzzz|, l(0.714285731, 0.649350643, 0.000000, 0.000000)
mul r6.xyz, v5.xyzx, cb0[37].yyyy
mul r6.xyz, r6.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000)
sample r8.xyzw, r6.yzyy, t6.xyzw, s4
sample r9.xyzw, r6.xzxx, t6.xyzw, s4
mul r9.xyz, r7.yyyy, r9.xyzx
mad r7.xyw, r7.xxxx, r8.xyxz, r9.xyxz
sample r6.xyzw, r6.yxyy, t6.xyzw, s4
mad r6.xyz, r7.zzzz, r6.xyzx, r7.xywx
mul r4.w, r2.x, r6.x
add r6.w, cb0[38].y, cb0[38].z
mad r0.w, |r0.w|, l(0.714285731), r4.w
mul r4.w, cb0[36].y, l(0.220000)
mad r0.w, r0.w, cb0[36].y, -r4.w
add r4.w, -v5.y, cb0[29].z
add r7.x, -cb0[29].z, cb0[29].w
div r4.w, r4.w, |r7.x|
add r4.w, r4.w, r6.w
add_sat r4.w, r0.w, r4.w
add r0.w, -r0.w, r6.w
add r4.w, r4.w, l(0.400000)
add r4.w, -r0.w, r4.w
mad r0.w, cb0[38].x, r4.w, r0.w
add r4.w, -r0.w, cb0[36].x
mad r6.xyz, r6.xyzx, r2.xxxx, r4.wwww
mul_sat r6.xyz, r6.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000)
mul r6.xyz, r6.xyzx, cb0[35].xyzx
mul r6.xyz, r6.xyzx, l(20.000000, 20.000000, 20.000000, 0.000000)
mad r1.z, |r1.z|, l(-1.29870129), l(3.000000)
mul r2.x, r2.y, r2.y
mul r1.z, r1.z, r2.x
mad r0.xyz, r6.xyzx, r1.zzzz, r0.xyzx
mov_sat r0.w, r0.w
add r1.z, r0.w, -cb0[43].x
lt r1.z, r1.z, l(0.000000)
discard_nz r1.z
mul r0.w, r0.w, l(16.000000)
round_ni r0.w, r0.w
mul r0.w, r0.w, l(0.062500)
min r0.w, r0.w, l(0.937500)
mad r1.w, r1.y, l(0.062500), r0.w
sample r1.xyzw, r1.xwxx, t1.xyzw, s3
add r0.w, r1.w, l(-0.500000)
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
add r0.w, r3.y, r3.x
mad r0.w, r3.z, r2.z, r0.w
mad r1.xyz, r0.wwww, l(0.333333343, 0.333333343, 0.333333343, 0.000000), -r3.xywx
mad r1.xyz, cb0[40].xxxx, r1.xyzx, r3.xywx
add r1.xyz, r1.xyzx, cb0[40].yyyy
eq r0.w, cb3[0].x, l(1.000000)
if_nz r0.w
  eq r0.w, cb3[0].y, l(1.000000)
  mul r2.xyz, v2.wwww, cb3[2].xyzx
  mad r2.xyz, cb3[1].xyzx, v1.wwww, r2.xyzx
  mad r2.xyz, cb3[3].xyzx, v3.wwww, r2.xyzx
  add r2.xyz, r2.xyzx, cb3[4].xyzx
  mov r3.y, v1.w
  mov r3.z, v2.w
  mov r3.w, v3.w
  movc r2.xyz, r0.wwww, r2.xyzx, r3.yzwy
  add r2.xyz, r2.xyzx, -cb3[6].xyzx
  mul r3.yzw, r2.xxyz, cb3[5].xxyz
  mul r0.w, r3.y, l(0.250000)
  mul r1.w, cb3[0].z, l(0.500000)
  mad r2.x, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.w, r0.w, r1.w
  min r3.x, r2.x, r0.w
  sample r6.xyzw, r3.xzwx, t7.xyzw, s0
  add r2.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r7.xyzw, r2.xyzx, t7.xyzw, s0
  add r2.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r3.xyzw, r2.xyzx, t7.xyzw, s0
  mov r5.w, l(1.000000)
  dp4 r2.x, r6.xyzw, r5.xyzw
  dp4 r2.y, r7.xyzw, r5.xyzw
  dp4 r2.z, r3.xyzw, r5.xyzw
else 
  mov r5.w, l(1.000000)
  dp4 r2.x, cb2[38].xyzw, r5.xyzw
  dp4 r2.y, cb2[39].xyzw, r5.xyzw
  dp4 r2.z, cb2[40].xyzw, r5.xyzw
endif 
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul o1.xyz, r4.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000)
mul o1.w, r2.w, l(0.015625)
mad o2.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mad r0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
exp o3.xyz, -r0.xyzx
add r0.xy, -cb0[43].zyzz, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r0.x, r0.y, l(2.000000), r0.x
mul o2.w, r0.x, l(0.333333343)
mov o0.xyz, r1.xyzx
mov o0.w, l(1.000000)
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used