// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 9c015ee0a215de94-vs.txt
// 3DMigoto: 9c015ee0a215de94 | Matched 18 variants of 3 shaders: Custom/S_WindBark, Custom/S_WindBillboard, Custom/S_WindLeaf
//
// 3f000:    Unity headers extracted from Custom_S_WindBark
// 0003f:    Unity headers extracted from Custom_S_WindBillboard
// 00fc0:    Unity headers extracted from Custom_S_WindLeaf
// 3f000:    Shader "Custom/S_WindBark" {
// 0003f:    Shader "Custom/S_WindBillboard" {
// 00fc0:    Shader "Custom/S_WindLeaf" {
// 3f000:      Fallback "Diffuse"
// 00fff:      Fallback "Transparent/Cutout/Diffuse"
//             SubShader 1/1 {
//               LOD 200
// 00fc0:        Tags { "QUEUE"="Geometry+1" "RenderType"="Opaque" }
// 3f03f:        Tags { "RenderType"="Opaque" }
//               Pass 1/5 {
//                 Name "FORWARD"
// 00fc0:          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry+1" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
// 3f03f:          Tags { "LIGHTMODE"="ForwardBase" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//                 Program "vp" {
//                   SubProgram "d3d11" {
//                   }
//                 }
//               }
//             }
//           }
//
// 3f000: Unity 5.3 headers extracted from Custom_S_WindBark:
// 0003f: Unity 5.3 headers extracted from Custom_S_WindBillboard:
// 00fc0: Unity 5.3 headers extracted from Custom_S_WindLeaf:
//          API d3d11
//          Shader model vs_4_0
//          undeciphered1: 201608170 75 0 0
//          undeciphered1a: 5
// 10410:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
// 02082:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
// 20820:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
// 04104:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_ON" }
// 08208:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
// 01041:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" }
//          undeciphered2: 1 0 4 0 0 0
//          undeciphered3: 175 6 0 0 7 8 1 2 3 4 5 6 2 1
// 3f000:   ConstBuffer "$Globals" 160
// 00fff:   ConstBuffer "$Globals" 176
//          Vector 80 [_Wind]
//          Vector 144 [_MainTex_ST]
//          ConstBuffer "UnityPerCamera" 144
//          Vector 0 [_Time]
//          Vector 16 [_SinTime]
//          Vector 80 [_ProjectionParams]
//          ConstBuffer "UnityPerDraw" 352
//          Vector 336 [unity_WorldTransformParams]
//          Matrix 0 [glstate_matrix_mvp]
//          Matrix 192 [unity_ObjectToWorld]
//          Matrix 256 [unity_WorldToObject]
//          ConstBuffer "UnityLightmaps" 32
//          Vector 16 [unity_DynamicLightmapST]
//          BindCB "$Globals" 0
//          BindCB "UnityPerCamera" 1
//          BindCB "UnityPerDraw" 2
//          BindCB "UnityLightmaps" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:38:00 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float   xy  
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   x z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 4     zw        1     NONE   float     zw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 6   xyzw        5     NONE   float   xyzw
// TEXCOORD                 8   xyzw        6     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v5.xy
dcl_input v7.xz
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.zw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.x, cb2[15].y, cb2[15].x
frc r0.x, r0.x
add r0.x, r0.x, cb1[1].z
mov r1.x, cb2[12].w
mov r1.y, cb2[13].w
mov r1.z, cb2[14].w
dp3 r0.y, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.y, r0.y, v7.z
add r0.x, r0.y, r0.x
add r1.y, r0.y, v7.x
add r2.x, r0.x, cb2[15].x
mad r2.y, r0.x, l(0.700000), cb2[15].z
add r0.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
frc r0.xy, r0.xyxx
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r0.zw, |r0.xxxy|, |r0.xxxy|
mad r0.xy, -|r0.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mad r0.xy, r0.zwzz, r0.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r0.xy, r0.xyxx, r0.xyxx
mad r0.x, r0.y, r0.y, r0.x
add r0.x, r0.x, l(3.330000)
mad r0.x, r0.x, l(0.330000), l(0.750000)
mul r0.xyz, r0.xxxx, cb0[5].xyzx
add r0.w, r1.y, l(1.000000)
dp3 r1.x, v0.xyzx, r0.wwww
add r1.xyzw, r1.xxyy, cb1[0].yyyy
mul r1.xyzw, r1.xyzw, l(1.975000, 0.793000, 0.375000, 0.193000)
frc r1.xyzw, r1.xyzw
mad r1.xyzw, r1.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-0.500000, -0.500000, -0.500000, -0.500000)
frc r1.xyzw, r1.xyzw
mad r1.xyzw, r1.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r2.xyzw, |r1.xyzw|, |r1.xyzw|
mad r1.xyzw, -|r1.xyzw|, l(2.000000, 2.000000, 2.000000, 2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
mul r1.xyzw, r1.xyzw, r2.xyzw
add r1.xy, r1.ywyy, r1.xzxx
mul r0.w, r1.y, l(20.000000)
mul r2.xyz, r0.wwww, r0.xyzx
mul r1.z, r0.w, v5.y
mul r2.xyz, r2.xyzx, v5.yyyy
mad r1.xyz, r1.xzxx, l(0.000000, 0.300000, 0.000000, 0.000000), r2.xyzx
add r1.xyz, r1.xyzx, v0.xyzx
mad r0.xyz, v5.xxxx, r0.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, v0.xyzx, v0.xyzx
sqrt r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyzw, r0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb2[3].xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 9c015ee0a215de94-vs.txt
ne r5.w, r1.w, l(1.0)
if_nz r5.w
  add r5.w, r1.w, -r5.y
  mad r1.x, r5.w, r5.x, r1.x
endif

mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
mov o1.zw, v5.xxxy
mul r2.xyz, r0.yyyy, cb2[13].xyzx
mad r0.xyw, cb2[12].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb2[14].xyzx, r0.zzzz, r0.xywx
mad r0.xyz, cb2[15].xyzx, v0.wwww, r0.xyzx
mov o2.w, r0.x
dp3 r2.y, v2.xyzx, cb2[16].xyzx
dp3 r2.z, v2.xyzx, cb2[17].xyzx
dp3 r2.x, v2.xyzx, cb2[18].xyzx
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, r2.xyzx
mul r3.xyz, v1.yyyy, cb2[13].yzxy
mad r3.xyz, cb2[12].yzxy, v1.xxxx, r3.xyzx
mad r3.xyz, cb2[14].yzxy, v1.zzzz, r3.xyzx
dp3 r0.x, r3.xyzx, r3.xyzx
rsq r0.x, r0.x
mul r3.xyz, r0.xxxx, r3.xyzx
mul r4.xyz, r2.xyzx, r3.xyzx
mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
mul r0.x, v1.w, cb2[21].w
mul r4.xyz, r0.xxxx, r4.xyzx
mov o2.y, r4.x
mov o2.x, r3.z
mov o2.z, r2.y
mov o3.w, r0.y
mov o4.w, r0.z
mov o3.x, r3.x
mov o4.x, r3.y
mov o3.z, r2.z
mov o4.z, r2.x
mov o3.y, r4.y
mov o4.y, r4.z
mul r0.x, r1.y, cb1[5].x
mul r0.w, r0.x, l(0.500000)
mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mov o5.zw, r1.zzzw
add o5.xy, r0.zzzz, r0.xwxx
mad o6.zw, v5.xxxy, cb3[1].xxxy, cb3[1].zzzw
mov o6.xy, l(0,0,0,0)
ret 
// Approximately 0 instruction slots used