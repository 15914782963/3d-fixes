// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed ed22ffa890f11664-vs.txt
// 3DMigoto: ed22ffa890f11664 | Matched 10 variants of 2 shaders: Custom/EnvBlend, Standard
//
// 300:    Unity headers extracted from Custom_EnvBlend
// 0ff:    Unity headers extracted from Standard
// 300:    Shader "Custom/EnvBlend" {
// 0ff:    Shader "Standard" {
// 300:      CustomEditor "EnvBlendShaderGUI"
// 0ff:      CustomEditor "StandardShaderGUI"
//           Fallback "VertexLit"
//           SubShader 2/2 {
//             LOD 150
//             Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//             Pass 1/4 {
//               Name "FORWARD"
//               Tags { "LIGHTMODE"="ForwardBase" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//               ZWrite [_ZWrite]
//               Program "vp" {
//                 SubProgram "d3d11_9x" {
//                 }
//               }
//             }
//           }
//         }
//
// 300: Unity 5.3 headers extracted from Custom_EnvBlend:
// 0ff: Unity 5.3 headers extracted from Standard:
//        API d3d11_9x
//        Shader model vs_4_0_level_9_1
//        undeciphered1: 201608170 62 0 0
//        undeciphered1a: 6
// 022:   Keywords { "DIRECTIONAL" "FOG_EXP2" "VERTEXLIGHT_ON" "_SPECULARHIGHLIGHTS_OFF" }
// 111:   Keywords { "DIRECTIONAL" "FOG_EXP2" "VERTEXLIGHT_ON" }
// 200:   Keywords { "DIRECTIONAL" "FOG_EXP2" "_EMISSION" "VERTEXLIGHT_ON" "_SPECGLOSSMAP" }
// 088:   Keywords { "DIRECTIONAL" "FOG_EXP2" "_EMISSION" "VERTEXLIGHT_ON" "_SPECULARHIGHLIGHTS_OFF" }
// 044:   Keywords { "DIRECTIONAL" "FOG_EXP2" "_EMISSION" "VERTEXLIGHT_ON" }
//        undeciphered2: 1 0 5 0 0 0
//        undeciphered3: 27 4 0 0 1 2 3 4 4 5
//        ConstBuffer "$Globals" 176
//        Vector 96 [_MainTex_ST]
//        Vector 112 [_DetailAlbedoMap_ST]
//        Float 156 [_UVSec]
//        ConstBuffer "UnityPerCamera" 144
//        Vector 64 [_WorldSpaceCameraPos] 3
//        ConstBuffer "UnityLighting" 720
//        Vector 32 [unity_4LightPosX0]
//        Vector 48 [unity_4LightPosY0]
//        Vector 64 [unity_4LightPosZ0]
//        Vector 80 [unity_4LightAtten0]
//        Vector 96 [unity_LightColor0]
//        Vector 112 [unity_LightColor1]
//        Vector 128 [unity_LightColor2]
//        Vector 144 [unity_LightColor3]
//        Vector 160 [unity_LightColor4]
//        Vector 176 [unity_LightColor5]
//        Vector 192 [unity_LightColor6]
//        Vector 208 [unity_LightColor7]
//        Vector 608 [unity_SHAr]
//        Vector 624 [unity_SHAg]
//        Vector 640 [unity_SHAb]
//        Vector 656 [unity_SHBr]
//        Vector 672 [unity_SHBg]
//        Vector 688 [unity_SHBb]
//        Vector 704 [unity_SHC]
//        ConstBuffer "UnityPerDraw" 352
//        Matrix 0 [glstate_matrix_mvp]
//        Matrix 192 [unity_ObjectToWorld]
//        Matrix 256 [unity_WorldToObject]
//        ConstBuffer "UnityFog" 32
//        Vector 16 [unity_FogParams]
//        BindCB "$Globals" 0
//        BindCB "UnityPerCamera" 1
//        BindCB "UnityLighting" 2
//        BindCB "UnityPerDraw" 3
//        BindCB "UnityFog" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 05:34:11 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             6         2  ( FLT, FLT, FLT, FLT)
// c3         cb0             9         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c5         cb2             2         8  ( FLT, FLT, FLT, FLT)
// c13        cb2            38         7  ( FLT, FLT, FLT, FLT)
// c20        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c24        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c31        cb4             1         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
    def c32, 9.99999997e-007, 0, 1, 0.416666657
    def c33, 1.05499995, -0.0549999997, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    mad oT0.xy, v2, c1, c1.zwzw
    mul r0.x, c3.w, c3.w
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c2.xyxy, c2
    mul r0.xyz, v0.y, c25
    mad r0.xyz, c24, v0.x, r0
    mad r0.xyz, c26, v0.z, r0
    mad r0.xyz, c27, v0.w, r0
    add r1.xyz, r0, -c4
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    add r1, -r0.y, c6
    mul r2, r1, r1
    add r3, -r0.x, c5
    add r0, -r0.z, c7
    mad r2, r3, r3, r2
    mad r2, r0, r0, r2
    max r2, r2, c32.x
    rsq r4.x, r2.x
    rsq r4.y, r2.y
    rsq r4.z, r2.z
    rsq r4.w, r2.w
    mov r5.z, c32.z
    mad r2, r2, c8, r5.z
    dp3 r5.x, v1, c28
    dp3 r5.y, v1, c29
    dp3 r5.z, v1, c30
    nrm r6.xyz, r5
    mul r1, r1, r6.y
    mad r1, r3, r6.x, r1
    mad r0, r0, r6.z, r1
    mul r0, r4, r0
    max r0, r0, c32.y
    rcp r1.x, r2.x
    rcp r1.y, r2.y
    rcp r1.z, r2.z
    rcp r1.w, r2.w
    mul r0, r0, r1
    mul r1.xyz, r0.y, c10
    mad r1.xyz, c9, r0.x, r1
    mad r0.xyz, c11, r0.z, r1
    mad r0.xyz, c12, r0.w, r0
    mul r0.w, r6.y, r6.y
    mad r0.w, r6.x, r6.x, -r0.w
    mul r1, r6.yzzx, r6.xyzz
    dp4 r2.x, c16, r1
    dp4 r2.y, c17, r1
    dp4 r2.z, c18, r1
    mad r1.xyz, c19, r0.w, r2
    mov r6.w, c32.z
    dp4 r2.x, c13, r6
    dp4 r2.y, c14, r6
    dp4 r2.z, c15, r6
    mov oT4.xyz, r6
    add r1.xyz, r1, r2
    max r1.xyz, r1, c32.y
    mov r1.w, c32.w
    lit r2, r1.xxww
    mov r2.x, r2.z
    lit r3, r1.yyww
    lit r1, r1.zzww
    mov r2.z, r1.z
    mov r2.y, r3.z
    mad r1.xyz, r2, c33.x, c33.y
    max r1.xyz, r1, c32.y
    add oT5.xyz, r0, r1
    mul r0, v0.y, c21
    mad r0, c20, v0.x, r0
    mad r0, c22, v0.z, r0
    add r0, r0, c23
    mul r1.x, r0.z, c31.x
    mul r1.x, r1.x, -r1.x
    exp oT1.w, r1.x
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT2, c32.y
    mov oT3, c32.y
    mov oT4.w, c32.y
    mov oT5.w, c32.y

// approximately 84 instruction slots used
vs_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[22], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o2.w
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed ed22ffa890f11664-vs.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

mul r0.xyzw, v0.yyyy, cb3[1].xyzw
mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb3[3].xyzw
mov o0.xyzw, r0.xyzw
mul r0.x, r0.z, cb4[1].x
mul r0.x, r0.x, -r0.x
exp o2.w, r0.x
eq r0.x, cb0[9].w, l(0.000000)
movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
mul r0.xyz, v0.yyyy, cb3[13].xyzx
mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
add r1.xyz, r0.xyzx, -r7.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul o2.xyz, r0.wwww, r1.xyzx
mov o3.xyzw, l(0,0,0,0)
mov o4.xyzw, l(0,0,0,0)
mov o5.w, l(0)
dp3 r1.x, v1.xyzx, cb3[16].xyzx
dp3 r1.y, v1.xyzx, cb3[17].xyzx
dp3 r1.z, v1.xyzx, cb3[18].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mov o5.xyz, r1.xyzx
mul r0.w, r1.y, r1.y
mad r0.w, r1.x, r1.x, -r0.w
mul r2.xyzw, r1.yzzx, r1.xyzz
dp4 r3.x, cb2[41].xyzw, r2.xyzw
dp4 r3.y, cb2[42].xyzw, r2.xyzw
dp4 r3.z, cb2[43].xyzw, r2.xyzw
mad r2.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
mov r1.w, l(1.000000)
dp4 r3.x, cb2[38].xyzw, r1.xyzw
dp4 r3.y, cb2[39].xyzw, r1.xyzw
dp4 r3.z, cb2[40].xyzw, r1.xyzw
add r2.xyz, r2.xyzx, r3.xyzx
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r2.xyz, r2.xyzx
mul r2.xyz, r2.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r2.xyz, r2.xyzx
mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r3.xyzw, -r0.yyyy, cb2[3].xyzw
mul r4.xyzw, r1.yyyy, r3.xyzw
mul r3.xyzw, r3.xyzw, r3.xyzw
add r5.xyzw, -r0.xxxx, cb2[2].xyzw
add r0.xyzw, -r0.zzzz, cb2[4].xyzw
mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
rsq r3.xyzw, r0.xyzw
mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
mul r1.xyzw, r1.xyzw, r3.xyzw
max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyz, r0.yyyy, cb2[7].xyzx
mad r1.xyz, cb2[6].xyzx, r0.xxxx, r1.xyzx
mad r0.xyz, cb2[8].xyzx, r0.zzzz, r1.xyzx
mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
add o6.xyz, r2.xyzx, r0.xyzx
mov o6.w, l(0)
ret 
// Approximately 0 instruction slots used