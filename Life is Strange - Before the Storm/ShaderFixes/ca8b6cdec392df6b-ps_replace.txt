// 3DMigoto: ca8b6cdec392df6b | Matched 41 variants of 1 shaders: Hidden/StenciledEdgeDetectShader
//
//                 Unity headers extracted from Hidden_StenciledEdgeDetectShader
//                 Shader "Hidden/StenciledEdgeDetectShader" {
//                   SubShader 1/1 {
//                     Pass 4/6 {
//                       ZWrite Off
//                       Program "fp" {
//                         SubProgram "d3d11" {
//                         }
//                       }
//                     }
//                   }
//                 }
//
//              Unity 5.3 headers extracted from Hidden_StenciledEdgeDetectShader:
//                API d3d11
//                Shader model ps_4_0
//                undeciphered1: 201608170 75 13 0
//                undeciphered1a: 6
//                undeciphered2: 1 7 3 7 0 0
//                undeciphered3: 0 0
//                ConstBuffer "$Globals" 160
//                Vector 48 [_HashTexture_ST]
//                Vector 64 [_Sensitivity]
//                Float 84 [_OutlineJitter]
//                Matrix 96 [_InverseView]
//                ConstBuffer "UnityPerCamera" 144
//                Vector 0 [_Time]
//                Vector 112 [_ZBufferParams]
//                ConstBuffer "UnityPerCameraRare" 352
//                Matrix 96 [unity_CameraProjection]
//                SetTexture 0 [_MainTex] 2D 2
//                SetTexture 1 [_CameraGBufferTexture0] 2D 0
//                SetTexture 2 [_CameraGBufferTexture2] 2D 1
//                SetTexture 3 [_CameraDepthTexture] 2D 6
//                SetTexture 4 [_NoiseTexture] 2D 4
//                SetTexture 5 [_OutlineNoiseTexture] 2D 5
//                SetTexture 6 [_HashTexture] 2D 3
//                BindCB "$Globals" 0
//                BindCB "UnityPerCamera" 1
//                BindCB "UnityPerCameraRare" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

// ---- Created with 3Dmigoto v1.2.61 on Wed Jan 03 05:22:43 2018
Texture2D<float4> t6 : register(t6);

Texture2D<float4> t5 : register(t5);

Texture2D<float4> t4 : register(t4);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s6_s : register(s6);

SamplerState s5_s : register(s5);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb2 : register(b2) // UnityPerCameraRare
{
  // float4 cb2[8];
  matrix unity_CameraProjection : packoffset(c6);
}

cbuffer cb1 : register(b1)
{
  float4 cb1[8];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[10];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : SV_POSITION0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  float2 v5 : TEXCOORD4,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = t2.Sample(s1_s, v3.xy).xyzw;
  r0.xyz = r0.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r1.xyzw = t3.Sample(s6_s, v3.xy).xyzw;
  r0.w = cb1[7].z * r1.x + cb1[7].w;
  r0.w = 1 / r0.w;
  r1.z = -1;
  r2.xy = v3.xy * float2(2,2) + float2(-1,-1);

  // r1.x = r2.x / cb2[6].x;
  // r1.y = r2.y / cb2[7].y;
  r1.x = r2.x / unity_CameraProjection[0].x;
  r1.y = r2.y / unity_CameraProjection[1].y;

  r1.xyz = r1.xyz * r0.www;

// View space adjustment to fix dot/stripe shading pattern on object surface (not edges):
float4 s = StereoParams.Load(0);
r1.x -= s.x * (r0.w - s.y) / unity_CameraProjection[0].x;

// _InverseView:
  r2.xyz = cb0[7].xyz * r1.yyy;
  r1.xyw = cb0[6].xyz * r1.xxx + r2.xyz;
  r1.xyz = cb0[8].xyz * r1.zzz + r1.xyw;
  r1.xyz = cb0[9].xyz + r1.xyz;

  r2.xyzw = float4(6,6,6,6) * r1.yzxz;
  r3.xyzw = float4(125,125,2.4000001,1.80000007) * cb1[0].xxyy;
  r3.xyzw = floor(r3.xyzw);
  r4.xy = r3.zw * float2(0.25,0.25) + r2.zx;
  r2.xyzw = r3.zwzw * float4(0.25,0.25,0.25,0.25) + r2.xyzw;
  r3.xy = float2(0.0524999984,0) * r3.xy;
  r3.xy = v3.xy * float2(0.163000003,0.163000003) + r3.xy;
  r2.xyzw = cb0[3].xyxy * r2.xyzw;
  r3.zw = cb0[3].xy * r4.xy;
  r4.xyzw = t6.Sample(s3_s, r3.zw).yzxw;
  r5.xyzw = t6.Sample(s3_s, r2.xy).xyzw;
  r2.xyzw = t6.Sample(s3_s, r2.zw).xyzw;
  r4.y = r2.x;
  r4.x = r5.x;
  r0.x = dot(r4.xyz, abs(r0.xyz));
  r0.x = -0.800000012 + r0.x;
  r0.x = saturate(100 * r0.x);
  r0.yzw = float3(3,3,3) * r1.xyz;
  r0.yz = r0.yz + r0.zw;
  r0.yz = cb0[3].xy * r0.yz;
  r0.yz = float2(0.529999971,0.529999971) * r0.yz;
  r2.xyzw = t4.Sample(s4_s, r0.yz).xyzw;
  r0.y = -0.300000012 + r2.x;
  r0.y = saturate(r0.y + r0.y);
  r0.x = r0.x * r0.y;
  r2.xyzw = t1.Sample(s0_s, v3.xy).xyzw;
  r0.y = 63.75 * r2.w;
  r0.z = cmp(r0.y >= -r0.y);
  r0.y = frac(abs(r0.y));
  r0.y = r0.z ? r0.y : -r0.y;
  r0.y = cmp(r0.y >= 0.5);
  r0.y = r0.y ? 1.000000 : 0;
  r0.x = r0.x * r0.y;
  r2.xy = r3.xy + r1.xy;
  r2.z = r2.y + r1.z;
  r1.xyzw = t5.Sample(s5_s, r2.xz).xyzw;
  r0.y = r1.x * r1.x;
  r0.y = r0.y * r0.y;
  r1.xyzw = t4.Sample(s4_s, r3.xy).xyzw;
  r0.z = r1.x * 0.00999999978 + -0.00499999989;
  r0.zw = r0.zz * cb0[5].yy + v3.xy;
  r1.xy = v4.xy * float2(0.850000024,0.850000024) + r0.zw;
  r1.xyzw = t1.Sample(s0_s, r1.xy).xyzw;
  r1.xy = float2(63.75,127.5) * r1.ww;
  r1.zw = cmp(r1.xy >= -r1.xy);
  r1.xy = frac(abs(r1.xy));
  r1.xy = r1.zw ? r1.xy : -r1.xy;
  r1.xy = cmp(r1.xy >= float2(0.5,0.5));
  r1.x = r1.x ? -1 : -0;
  r2.xyzw = t1.Sample(s0_s, r0.zw).xyzw;
  r0.zw = v5.xy * float2(0.850000024,0.850000024) + r0.zw;
  r3.xyzw = t1.Sample(s0_s, r0.zw).xyzw;
  r0.zw = float2(63.75,127.5) * r3.ww;
  r1.zw = float2(63.75,127.5) * r2.ww;
  r2.xy = cmp(r1.zw >= -r1.zw);
  r1.zw = frac(abs(r1.zw));
  r1.zw = r2.xy ? r1.zw : -r1.zw;
  r1.zw = cmp(r1.zw >= float2(0.5,0.5));
  r1.z = r1.z ? 1.000000 : 0;
  r1.x = r1.z + r1.x;
  r2.x = cb0[4].y * cb0[4].y;
  r1.x = r2.x * abs(r1.x);
  r1.x = cmp(r1.x < 0.100000001);
  r1.x = r1.x ? 1.000000 : 0;
  r2.yz = cmp(r0.zw >= -r0.zw);
  r0.zw = frac(abs(r0.zw));
  r0.zw = r2.yz ? r0.zw : -r0.zw;
  r0.zw = cmp(r0.zw >= float2(0.5,0.5));
  r0.w = (int)r1.y | (int)r0.w;
  r0.w = (int)r1.w | (int)r0.w;
  r0.zw = r0.zw ? float2(-1,0) : float2(-0,1);
  r0.z = r1.z + r0.z;
  r0.z = r2.x * abs(r0.z);
  r0.z = cmp(r0.z < 0.100000001);
  r0.z = r0.z ? 1.000000 : 0;
  r0.z = r1.x + r0.z;
  r0.z = 0.5 * r0.z;
  r0.z = -r0.z * r0.z + 1;
  r0.y = r0.z * r0.y;
  r0.x = r0.y * r0.w + r0.x;
  r1.xyzw = t0.Sample(s2_s, v3.xy).xyzw;
  r2.xyzw = float4(1,1,1,1) + -r1.xyzw;
  o0.xyzw = r0.xxxx * r2.xyzw + r1.xyzw;
  return;
}
