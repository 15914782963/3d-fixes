// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3ca0c071222bb9ad-ps.txt
// 3DMigoto: 3ca0c071222bb9ad |    Unity headers extracted from Instanced_NewInstancedSurfaceShader
//    Shader "Instanced/NewInstancedSurfaceShader" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Instanced_NewInstancedSurfaceShader:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 98 5 4
//   undeciphered1a: 11
//   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
//   undeciphered2: 1 7 4 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 96
//   Vector 0 [unity_Lightmap_HDR]
//   Vector 16 [unity_DynamicLightmap_HDR]
//   Float 64 [_Glossiness]
//   Float 68 [_Metallic]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "Props" 16
//   Vector 0 [_Color]
//   SetTexture 0 [_MainTex] 2D 3
//   SetTexture 1 [unity_Lightmap] 2D 0
//   SetTexture 2 [unity_LightmapInd] 2D -1
//   SetTexture 3 [unity_DynamicLightmap] 2D 1
//   SetTexture 4 [unity_DynamicDirectionality] 2D -1
//   SetTexture 5 [unity_SpecCube0] CUBE 2
//   SetTexture 6 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityReflectionProbes" 2
//   BindCB "Props" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:35:15 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 6   xyz         5     NONE   float       
// TEXCOORD                 7   xyz         6     NONE   float       
// TEXCOORD                 8   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[5], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3ca0c071222bb9ad-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, r12.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
sample r1.xyzw, v1.xyxx, t0.xyzw, s3
mul r2.xyz, r1.xyzx, cb3[0].xyzx
add r0.w, -cb0[4].x, l(1.000000)
dp3 r1.w, -r0.xyzx, v2.xyzx
add r1.w, r1.w, r1.w
mad r3.xyz, v2.xyzx, -r1.wwww, -r0.xyzx
sample r4.xyzw, v4.xyxx, t1.xyzw, s0
log r1.w, r4.w
mul r1.w, r1.w, cb0[0].y
exp r1.w, r1.w
mul r1.w, r1.w, cb0[0].x
mul r4.xyz, r4.xyzx, r1.wwww
sample r5.xyzw, v4.xyxx, t2.xyzw, s0
add r5.xyz, r5.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r1.w, v2.xyzx, r5.xyzx
add r1.w, r1.w, l(0.500000)
mul r4.xyz, r1.wwww, r4.xyzx
max r1.w, r5.w, l(0.000100)
div r4.xyz, r4.xyzx, r1.wwww
sample r5.xyzw, v4.zwzz, t3.xyzw, s1
mul r1.w, r5.w, cb0[1].x
mul r5.xyz, r5.xyzx, r1.wwww
log r5.xyz, r5.xyzx
mul r5.xyz, r5.xyzx, cb0[1].yyyy
exp r5.xyz, r5.xyzx
sample r6.xyzw, v4.zwzz, t4.xyzw, s1
add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r1.w, v2.xyzx, r6.xyzx
add r1.w, r1.w, l(0.500000)
mul r5.xyz, r1.wwww, r5.xyzx
max r1.w, r6.w, l(0.000100)
div r5.xyz, r5.xyzx, r1.wwww
add r4.xyz, r4.xyzx, r5.xyzx
lt r1.w, l(0.000000), cb2[2].w
if_nz r1.w
  dp3 r1.w, r3.xyzx, r3.xyzx
  rsq r1.w, r1.w
  mul r5.xyz, r1.wwww, r3.xyzx
  add r6.xyz, -v3.xyzx, cb2[0].xyzx
  div r6.xyz, r6.xyzx, r5.xyzx
  add r7.xyz, -v3.xyzx, cb2[1].xyzx
  div r7.xyz, r7.xyzx, r5.xyzx
  lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
  movc r6.xyz, r8.xyzx, r6.xyzx, r7.xyzx
  min r1.w, r6.y, r6.x
  min r1.w, r6.z, r1.w
  add r6.xyz, v3.xyzx, -cb2[2].xyzx
  mad r5.xyz, r5.xyzx, r1.wwww, r6.xyzx
else 
  mov r5.xyz, r3.xyzx
endif 
mad r1.w, -r0.w, l(0.700000), l(1.700000)
mul r1.w, r0.w, r1.w
mul r1.w, r1.w, l(6.000000)
sample_l r5.xyzw, r5.xyzx, t5.xyzw, s2, r1.w
eq r2.w, cb2[3].w, l(1.000000)
log r3.w, r5.w
mul r3.w, r3.w, cb2[3].y
exp r3.w, r3.w
movc r2.w, r2.w, r3.w, l(1.000000)
mul r2.w, r2.w, cb2[3].x
mul r6.xyz, r5.xyzx, r2.wwww
lt r3.w, cb2[1].w, l(0.999990)
if_nz r3.w
  lt r3.w, l(0.000000), cb2[6].w
  if_nz r3.w
    dp3 r3.w, r3.xyzx, r3.xyzx
    rsq r3.w, r3.w
    mul r7.xyz, r3.wwww, r3.xyzx
    add r8.xyz, -v3.xyzx, cb2[4].xyzx
    div r8.xyz, r8.xyzx, r7.xyzx
    add r9.xyz, -v3.xyzx, cb2[5].xyzx
    div r9.xyz, r9.xyzx, r7.xyzx
    lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
    movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
    min r3.w, r8.y, r8.x
    min r3.w, r8.z, r3.w
    add r8.xyz, v3.xyzx, -cb2[6].xyzx
    mad r3.xyz, r7.xyzx, r3.wwww, r8.xyzx
  endif 
  sample_l r3.xyzw, r3.xyzx, t6.xyzw, s2, r1.w
  eq r1.w, cb2[7].w, l(1.000000)
  log r3.w, r3.w
  mul r3.w, r3.w, cb2[7].y
  exp r3.w, r3.w
  movc r1.w, r1.w, r3.w, l(1.000000)
  mul r1.w, r1.w, cb2[7].x
  mul r3.xyz, r3.xyzx, r1.wwww
  mad r5.xyz, r2.wwww, r5.xyzx, -r3.xyzx
  mad r6.xyz, cb2[1].wwww, r5.xyzx, r3.xyzx
endif 
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v2.xyzx
mad r1.xyz, r1.xyzx, cb3[0].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r1.xyz, cb0[4].yyyy, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r1.w, -cb0[4].y, l(0.960000), l(0.960000)
mul r2.xyz, r1.wwww, r2.xyzx
dp3 r0.x, r3.xyzx, r0.xyzx
mul r0.y, r0.w, r0.w
mad r0.y, r0.y, r0.y, l(1.000000)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
add r0.z, -r1.w, cb0[4].x
add_sat r0.z, r0.z, l(1.000000)
mul r3.xyz, r6.xyzx, r0.yyyy
add r0.x, -|r0.x|, l(1.000000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.x, r0.y
add r0.yzw, -r1.xxyz, r0.zzzz
mad r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
mul r0.xyz, r0.xyzx, r3.xyzx
mad o0.xyz, r2.xyzx, r4.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used