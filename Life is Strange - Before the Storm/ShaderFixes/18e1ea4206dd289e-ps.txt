// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 18e1ea4206dd289e-ps.txt
// 3DMigoto: 18e1ea4206dd289e | Matched 3 variants of 1 shaders: Custom/S_UnderWater
//
//       Unity headers extracted from Custom_S_UnderWater
//       Shader "Custom/S_UnderWater" {
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           LOD 200
//           Tags { "RenderType"="Opaque" }
//           Pass 2/4 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="ForwardAdd" "RenderType"="Opaque" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Custom_S_UnderWater:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201608170 125 8 0
//      undeciphered1a: 6
//      Keywords { "SPOT" }
//      undeciphered2: 1 7 3 7 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 224
//      Vector 32 [_LightColor0]
//      Vector 144 [_Color]
//      Float 160 [_WorldTiling]
//      Float 164 [_WaterSpeed]
//      Float 168 [_WaveletTiling]
//      Float 176 [_WaveletMin]
//      Float 180 [_WaveletMax]
//      Float 184 [_CutoffSteps]
//      Float 188 [_RefractDistort]
//      Float 208 [_Cutoff]
//      Matrix 64 [unity_WorldToLight]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 720
//      Vector 0 [_WorldSpaceLightPos0]
//      SetTexture 0 [_WaterBumpMap] 2D 5
//      SetTexture 1 [_WaveletBlend] 2D 6
//      SetTexture 2 [_MainTex] 2D 2
//      SetTexture 3 [_SpecGlossMap] 2D 3
//      SetTexture 4 [_BumpMap] 2D 4
//      SetTexture 5 [_LightTexture0] 2D 0
//      SetTexture 6 [_LightTextureB0] 2D 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 04:26:00 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 18e1ea4206dd289e-ps.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.xy, v5.xzxx, cb0[10].xxxx
mad r0.zw, cb0[10].yyyy, cb1[0].xxxx, r0.xxxy
sample r1.xyzw, r0.zwzz, t0.xyzw, s5
mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.z, r1.xyxx, r1.xyxx
min r0.z, r0.z, l(1.000000)
add r0.z, -r0.z, l(1.000000)
sqrt r1.z, r0.z
mul r0.z, cb0[10].y, cb1[0].x
mul r2.xyz, r0.zzzz, l(1.418000, 2.980000, 2.198000, 0.000000)
mad r0.zw, r0.xxxy, l(0.000000, 0.000000, 1.418000, 1.418000), -r2.xxxx
mad r0.xy, r0.xyxx, cb0[10].zzzz, r2.yzyy
sample r2.xyzw, r0.xyxx, t1.xyzw, s6
sample r0.xyzw, r0.zwzz, t0.xyzw, s5
mad r0.xy, r0.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r0.xyxx, r0.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r0.z, r0.w
add r0.xyz, r0.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r0.xyz, r0.xyzx, cb0[11].zzzz
round_ni r0.xyz, r0.xyzx
div r0.xyz, r0.xyzx, cb0[11].zzzz
add r0.xyz, r0.xyzx, l(0.000000, 0.000000, -0.990000, 0.000000)
add r0.w, -cb0[11].x, cb0[11].y
mad r0.w, r2.x, r0.w, cb0[11].x
mad r0.xyz, r0.wwww, r0.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
dp3 r0.z, r0.xyzx, r0.xyzx
rsq r0.z, r0.z
mul r0.xy, r0.zzzz, r0.xyxx
mad r0.xy, r0.xyxx, cb0[11].wwww, v1.xyxx
sample r1.xyzw, r0.xyxx, t2.xyzw, s2
mad r0.z, r1.w, cb0[9].w, -cb0[13].x
mul r1.xyzw, r1.xyzw, cb0[9].xyzw
lt r0.z, r0.z, l(0.000000)
discard_nz r0.z
sample r2.xyzw, r0.xyxx, t4.xyzw, s4
sample r0.xyzw, r0.xyxx, t3.xyzw, s3
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r2.xyxx, r2.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r2.z, r2.w
dp3 r3.x, v2.xyzx, r2.xyzx
dp3 r3.y, v3.xyzx, r2.xyzx
dp3 r3.z, v4.xyzx, r2.xyzx
dp3 r2.x, r3.xyzx, r3.xyzx
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, r3.xyzx
add r3.xyz, -v5.xyzx, r7.xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx
add r4.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r2.w, r4.xyzx, r4.xyzx
rsq r2.w, r2.w
mad r5.xyz, r4.xyzx, r2.wwww, r3.xyzx
dp3 r3.x, r2.xyzx, r3.xyzx
mul r3.yzw, r2.wwww, r4.xxyz
dp3 r2.w, r5.xyzx, r5.xyzx
max r2.w, r2.w, l(0.001000)
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, r5.xyzx
dp3_sat r2.w, r2.xyzx, r4.xyzx
dp3_sat r2.x, r2.xyzx, r3.yzwy
dp3_sat r2.y, r3.yzwy, r4.xyzx
add r4.xyzw, -r0.wxyz, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r0.w, r4.x, r4.x
mul r2.z, r0.w, r0.w
mad r3.y, r2.w, r2.z, -r2.w
mad r2.w, r3.y, r2.w, l(1.000000)
mad r2.w, r2.w, r2.w, l(1.000000012E-007)
mul r2.z, r2.z, l(0.318309873)
div r2.z, r2.z, r2.w
mad r2.w, -r4.x, r4.x, l(1.000000)
mad r3.y, |r3.x|, r2.w, r0.w
mad r0.w, r2.x, r2.w, r0.w
mul r0.w, r0.w, |r3.x|
add r2.w, -|r3.x|, l(1.000000)
mad r0.w, r2.x, r3.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.w, r2.z, r0.w
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.x, r0.w
max r0.w, r0.w, l(0.000000)
dp3 r2.z, r0.xyzx, r0.xyzx
ne r2.z, r2.z, l(0.000000)
and r2.z, r2.z, l(0x3f800000)
mul r0.w, r0.w, r2.z
mul r3.xyzw, v5.yyyy, cb0[5].xyzw
mad r3.xyzw, cb0[4].xyzw, v5.xxxx, r3.xyzw
mad r3.xyzw, cb0[6].xyzw, v5.zzzz, r3.xyzw
add r3.xyzw, r3.xyzw, cb0[7].xyzw
div r5.xy, r3.xyxx, r3.wwww
add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample r5.xyzw, r5.xyxx, t5.xyzw, s0
lt r2.z, l(0.000000), r3.z
dp3 r3.x, r3.xyzx, r3.xyzx
sample r3.xyzw, r3.xxxx, t6.xyzw, s1
and r2.z, r2.z, l(0x3f800000)
mul r2.z, r5.w, r2.z
mul r2.z, r3.x, r2.z
mul r3.xyz, r2.zzzz, cb0[2].xyzx
mul r5.xyz, r0.wwww, r3.xyzx
add r0.w, -r2.y, l(1.000000)
mul r2.y, r2.y, r2.y
dp2 r2.y, r2.yyyy, r4.xxxx
add r2.y, r2.y, l(-0.500000)
mul r2.z, r0.w, r0.w
mul r2.z, r2.z, r2.z
mul r0.w, r0.w, r2.z
mad r4.xyz, r4.yzwy, r0.wwww, r0.xyzx
mul r4.xyz, r4.xyzx, r5.xyzx
max r0.x, r0.y, r0.x
max r0.x, r0.z, r0.x
add r0.x, -r0.x, l(1.000000)
mul r0.xyz, r0.xxxx, r1.xyzx
mov o0.w, r1.w
mul r0.w, r2.w, r2.w
mul r0.w, r0.w, r0.w
mul r0.w, r2.w, r0.w
mad r0.w, r2.y, r0.w, l(1.000000)
add r1.x, -r2.x, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r1.x, r2.y, r1.x, l(1.000000)
mul r0.w, r0.w, r1.x
mul r0.w, r2.x, r0.w
mul r1.xyz, r0.wwww, r3.xyzx
mad o0.xyz, r0.xyzx, r1.xyzx, r4.xyzx
ret 
// Approximately 0 instruction slots used