// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8623b82a09d4b6f6-ps.txt
// 3DMigoto: 8623b82a09d4b6f6 | Matched 2 variants of 1 shaders: Hidden/LISDeferredShading
//
//       Unity headers extracted from Hidden_LISDeferredShading
//       Shader "Hidden/LISDeferredShading" {
//         SubShader 1/1 {
//           Pass 1/2 {
//             Tags { "SHADOWSUPPORT"="true" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Hidden_LISDeferredShading:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201608170 294 8 6
//      undeciphered1a: 11
//      Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
//      undeciphered2: 1 8 4 8 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 336
//      Vector 64 [_LightPos]
//      Vector 80 [_LightColor]
//      Vector 176 [_ShadowOffsets0]
//      Vector 192 [_ShadowOffsets1]
//      Vector 208 [_ShadowOffsets2]
//      Vector 224 [_ShadowOffsets3]
//      Vector 272 [_LISSkinSSS]
//      Vector 288 [_LISSkinSpec] 3
//      Vector 304 [_LISHairSpec] 3
//      Matrix 112 [unity_WorldToLight]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      Vector 112 [_ZBufferParams]
//      ConstBuffer "UnityPerCameraRare" 352
//      Matrix 288 [unity_CameraToWorld]
//      ConstBuffer "UnityShadows" 416
//      Vector 384 [_LightShadowData]
//      Vector 400 [unity_ShadowFadeCenterAndType]
//      Matrix 128 [unity_WorldToShadow0]
//      Matrix 192 [unity_WorldToShadow1]
//      Matrix 256 [unity_WorldToShadow2]
//      Matrix 320 [unity_WorldToShadow3]
//      SetTexture 0 [_CameraDepthTexture] 2D 0
//      SetTexture 1 [_LightTexture0] 2D 2
//      SetTexture 2 [_LightTextureB0] 2D 1
//      SetTexture 3 [_CameraGBufferTexture0] 2D 5
//      SetTexture 4 [_CameraGBufferTexture1] 2D 6
//      SetTexture 5 [_CameraGBufferTexture2] 2D 7
//      SetTexture 6 [_LISGlobalLightRamp] 2D 4
//      SetTexture 7 [_ShadowMapTexture] 2D 3
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerCameraRare" 2
//      BindCB "UnityShadows" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:37:21 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[20], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_comparison
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8623b82a09d4b6f6-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.x, cb1[5].z, v2.z
mul r0.xyz, r0.xxxx, v2.xyzx
div r1.xy, v1.xyxx, v1.wwww
sample r2.xyzw, r1.xyxx, t0.xyzw, s0
mad r0.w, cb1[7].x, r2.x, cb1[7].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r2.xyz, r0.wwww, r0.xyzx
mul r3.xyz, r2.yyyy, cb2[19].xyzx
mad r2.xyw, cb2[18].xyxz, r2.xxxx, r3.xyxz
mad r2.xyw, cb2[20].xyxz, r2.zzzz, r2.xyxw
add r2.xyw, r2.xyxw, cb2[21].xyxz
add r3.xyz, r2.xywx, -cb3[25].xyzx
dp3 r0.x, r3.xyzx, r3.xyzx
sqrt r0.x, r0.x
mad r0.x, -r0.z, r0.w, r0.x
mad r0.x, cb3[25].w, r0.x, r2.z
add r0.yzw, -r2.xxyw, cb0[4].xxyz
dp3 r1.z, r0.yzwy, r0.yzwy
rsq r1.w, r1.z
mul r3.xyz, r0.yzwy, r1.wwww
mul r4.xyz, r2.yyyy, cb0[8].xywx
mad r4.xyz, cb0[7].xywx, r2.xxxx, r4.xyzx
mad r4.xyz, cb0[9].xywx, r2.wwww, r4.xyzx
add r4.xyz, r4.xyzx, cb0[10].xywx
div r4.xy, r4.xyxx, r4.zzzz
sample_b r5.xyzw, r4.xyxx, t1.xyzw, s2, l(-8.000000)
lt r2.z, r4.z, l(0.000000)
and r2.z, r2.z, l(0x3f800000)
mul r2.z, r2.z, r5.w
mul r1.z, r1.z, cb0[4].w
sample r4.xyzw, r1.zzzz, t2.xyzw, s1
mul r1.z, r2.z, r4.x
mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
mul r4.xyzw, r2.yyyy, cb3[9].xyzw
mad r4.xyzw, cb3[8].xyzw, r2.xxxx, r4.xyzw
mad r4.xyzw, cb3[10].xyzw, r2.wwww, r4.xyzw
add r4.xyzw, r4.xyzw, cb3[11].xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, r4.xyzx, cb0[11].xyzx
sample_c_lz r5.x, r5.xyxx, t7.xxxx, s3, r5.z
add r6.xyz, r4.xyzx, cb0[12].xyzx
sample_c_lz r5.y, r6.xyxx, t7.xxxx, s3, r6.z
add r6.xyz, r4.xyzx, cb0[13].xyzx
sample_c_lz r5.z, r6.xyxx, t7.xxxx, s3, r6.z
add r4.xyz, r4.xyzx, cb0[14].xyzx
sample_c_lz r5.w, r4.xyxx, t7.xxxx, s3, r4.z
add r2.z, -cb3[24].x, l(1.000000)
mad r4.xyzw, r5.xyzw, r2.zzzz, cb3[24].xxxx
dp4 r2.z, r4.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
add_sat r0.x, r0.x, r2.z
mul r0.x, r0.x, r1.z
mul r4.xyz, r0.xxxx, cb0[5].xyzx
sample r5.xyzw, r1.xyxx, t3.xyzw, s5
sample r6.xyzw, r1.xyxx, t4.wxyz, s6
sample r7.xyzw, r1.xyxx, t5.xyzw, s7
mad r1.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
mul r4.xyz, r4.xyzx, r5.wwww
mul r0.x, r7.w, l(3.000000)
ftoi r0.x, r0.x
ieq r2.z, r0.x, l(1)
movc r7.xyz, r2.zzzz, cb0[18].xyzx, r6.yzwy
movc r7.xyz, r0.xxxx, r7.xyzx, cb0[19].xyzx
add r2.xyw, r2.xyxw, -r12.xyxz
dp3 r3.w, r2.xywx, r2.xywx
rsq r3.w, r3.w
mul r2.xyw, r2.xyxw, r3.wwww
if_z r0.x
  mad r6.yzw, r6.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
  dp3 r3.w, r6.yzwy, r6.yzwy
  rsq r3.w, r3.w
  mov_sat r6.x, r6.x
  add r4.w, -r6.x, l(1.000000)
  mad r8.xyz, r0.yzwy, r1.wwww, -r2.xywx
  dp3 r5.w, r8.xyzx, r8.xyzx
  max r5.w, r5.w, l(0.001000)
  rsq r5.w, r5.w
  mul r8.xyz, r5.wwww, r8.xyzx
  dp3 r5.w, r1.xyzx, -r2.xywx
  dp3_sat r9.x, r1.xyzx, r3.xyzx
  dp3_sat r7.w, r3.xyzx, r8.xyzx
  mov r9.y, l(0.500000)
  sample r9.xyzw, r9.xyxx, t6.xyzw, s4
  mul r7.w, r7.w, r7.w
  dp2 r7.w, r7.wwww, r4.wwww
  add r7.w, r7.w, l(-0.500000)
  add r8.w, -r9.x, l(1.000000)
  mul r9.y, r8.w, r8.w
  mul r9.y, r9.y, r9.y
  mul r8.w, r8.w, r9.y
  mad r8.w, r7.w, r8.w, l(1.000000)
  add r5.w, -|r5.w|, l(1.000000)
  mul r9.y, r5.w, r5.w
  mul r9.y, r9.y, r9.y
  mul r5.w, r5.w, r9.y
  mad r5.w, r7.w, r5.w, l(1.000000)
  mul r5.w, r5.w, r8.w
  mul r5.w, r9.x, r5.w
  mul r9.xyz, r1.xyzx, l(0.400000, 0.400000, 0.400000, 0.000000)
  mad r6.yzw, r6.yyzw, r3.wwww, r9.xxyz
  dp3_sat r3.w, r6.yzwy, r3.xyzx
  dp3 r6.y, r6.yzwy, -r2.xywx
  dp3_sat r6.z, r1.xyzx, r8.xyzx
  mul r6.w, r4.w, r4.w
  mad r4.w, -r4.w, r4.w, l(1.000000)
  mad r7.w, |r6.y|, r4.w, r6.w
  mad r4.w, r3.w, r4.w, r6.w
  mul r4.w, r4.w, |r6.y|
  mad r4.w, r3.w, r7.w, r4.w
  add r4.w, r4.w, l(0.000010)
  div r4.w, l(0.500000), r4.w
  mul r6.y, r6.w, r6.w
  mad r6.w, r6.z, r6.y, -r6.z
  mad r6.z, r6.w, r6.z, l(1.000000)
  mul r6.y, r6.y, l(0.318309873)
  mad r6.z, r6.z, r6.z, l(1.000000012E-007)
  div r6.y, r6.y, r6.z
  mul r4.w, r4.w, r6.y
  mul r4.w, r4.w, l(3.14159274)
  mul r3.w, r3.w, r4.w
  mul r4.w, r3.w, r3.w
  mul r3.w, r3.w, r4.w
  mul r6.yzw, r4.xxyz, r5.wwww
  mul r8.xyz, r4.xyzx, r3.wwww
  mul r8.xyz, r7.xyzx, r8.xyzx
  mad r8.xyz, r5.xyzx, r6.yzwy, r8.xyzx
else 
  ieq r0.x, r0.x, l(2)
  if_nz r0.x
    add r0.x, -r6.x, l(1.000000)
    mad r6.yzw, r0.yyzw, r1.wwww, -r2.xxyw
    dp3 r3.w, r6.yzwy, r6.yzwy
    max r3.w, r3.w, l(0.001000)
    rsq r3.w, r3.w
    mul r6.yzw, r3.wwww, r6.yyzw
    dp3 r3.w, r1.xyzx, -r2.xywx
    dp3_sat r9.x, r1.xyzx, r3.xyzx
    dp3_sat r4.w, r1.xyzx, r6.yzwy
    dp3_sat r5.w, r3.xyzx, r6.yzwy
    mov r9.y, l(0.500000)
    sample r9.xyzw, r9.xyxx, t6.xyzw, s4
    mul r6.y, r5.w, r5.w
    dp2 r6.y, r6.yyyy, r0.xxxx
    add r6.y, r6.y, l(-0.500000)
    add r6.z, -r9.x, l(1.000000)
    mul r6.w, r6.z, r6.z
    mul r6.w, r6.w, r6.w
    mul r6.z, r6.z, r6.w
    mad r6.z, r6.y, r6.z, l(1.000000)
    add r6.w, -|r3.w|, l(1.000000)
    mul r7.w, r6.w, r6.w
    mul r7.w, r7.w, r7.w
    mul r6.w, r6.w, r7.w
    mad r6.y, r6.y, r6.w, l(1.000000)
    mul r6.y, r6.y, r6.z
    mul r6.y, r9.x, r6.y
    mul r6.z, r0.x, r0.x
    mad r0.x, -r0.x, r0.x, l(1.000000)
    mad r6.w, |r3.w|, r0.x, r6.z
    mad r0.x, r9.x, r0.x, r6.z
    mul r0.x, r0.x, |r3.w|
    mad r0.x, r9.x, r6.w, r0.x
    add r0.x, r0.x, l(0.000010)
    div r0.x, l(0.500000), r0.x
    mul r3.w, r6.z, r6.z
    mad r6.z, r4.w, r3.w, -r4.w
    mad r4.w, r6.z, r4.w, l(1.000000)
    mul r3.w, r3.w, l(0.318309873)
    mad r4.w, r4.w, r4.w, l(1.000000012E-007)
    div r3.w, r3.w, r4.w
    mul r0.x, r0.x, r3.w
    mul r0.x, r0.x, l(3.14159274)
    mul r0.x, r9.x, r0.x
    max r0.x, r0.x, l(0.000000)
    dp3 r3.w, r7.xyzx, r7.xyzx
    ne r3.w, r3.w, l(0.000000)
    and r3.w, r3.w, l(0x3f800000)
    mul r0.x, r0.x, r3.w
    mul r6.yzw, r4.xxyz, r6.yyyy
    mul r9.xyz, r4.xyzx, r0.xxxx
    add r0.x, -r5.w, l(1.000000)
    mul r3.w, r0.x, r0.x
    mul r3.w, r3.w, r3.w
    mul r0.x, r0.x, r3.w
    add r10.xyz, -r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r10.xyz, r10.xyzx, r0.xxxx, r7.xyzx
    mul r9.xyz, r9.xyzx, r10.xyzx
    mad r8.xyz, r5.xyzx, r6.yzwy, r9.xyzx
  else 
    if_nz r2.z
      add r0.x, -r6.x, l(1.000000)
      mad r6.yzw, r0.yyzw, r1.wwww, -r2.xxyw
      dp3 r2.z, r6.yzwy, r6.yzwy
      max r2.z, r2.z, l(0.001000)
      rsq r2.z, r2.z
      mul r6.yzw, r2.zzzz, r6.yyzw
      dp3 r2.z, r1.xyzx, -r2.xywx
      dp3 r3.w, r1.xyzx, r3.xyzx
      mov_sat r9.x, r3.w
      dp3_sat r4.w, r1.xyzx, r6.yzwy
      dp3_sat r5.w, r3.xyzx, r6.yzwy
      mov r9.y, l(0.500000)
      sample r9.xyzw, r9.xyxx, t6.xyzw, s4
      mul r6.y, r5.w, r5.w
      dp2 r6.y, r6.yyyy, r0.xxxx
      add r6.y, r6.y, l(-0.500000)
      add r6.z, -r9.x, l(1.000000)
      mul r6.w, r6.z, r6.z
      mul r6.w, r6.w, r6.w
      mul r6.z, r6.z, r6.w
      mad r6.z, r6.y, r6.z, l(1.000000)
      add r6.w, -|r2.z|, l(1.000000)
      mul r7.w, r6.w, r6.w
      mul r7.w, r7.w, r7.w
      mul r6.w, r6.w, r7.w
      mad r6.y, r6.y, r6.w, l(1.000000)
      mul r6.y, r6.y, r6.z
      mul r6.y, r9.x, r6.y
      add r3.w, r3.w, l(-0.100000)
      min r3.w, |r3.w|, l(1.000000)
      add r3.w, -r3.w, l(1.000000)
      mad r6.z, cb0[17].w, l(10.000000), l(2.000000)
      log r3.w, r3.w
      mul r3.w, r3.w, r6.z
      exp r3.w, r3.w
      mul r10.x, r3.w, cb0[17].x
      mul r10.yz, r3.wwww, -cb0[17].yyzy
      add r9.yzw, r10.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r6.yzw, r6.yyyy, r9.yyzw
      mul r3.w, r0.x, r0.x
      mad r0.x, -r0.x, r0.x, l(1.000000)
      mad r7.w, |r2.z|, r0.x, r3.w
      mad r0.x, r9.x, r0.x, r3.w
      mul r0.x, r0.x, |r2.z|
      mad r0.x, r9.x, r7.w, r0.x
      add r0.x, r0.x, l(0.000010)
      div r0.x, l(0.500000), r0.x
      mul r2.z, r3.w, r3.w
      mad r3.w, r4.w, r2.z, -r4.w
      mad r3.w, r3.w, r4.w, l(1.000000)
      mul r2.z, r2.z, l(0.318309873)
      mad r3.w, r3.w, r3.w, l(1.000000012E-007)
      div r2.z, r2.z, r3.w
      mul r0.x, r0.x, r2.z
      mul r0.x, r0.x, l(3.14159274)
      mul r0.x, r9.x, r0.x
      max r0.x, r0.x, l(0.000000)
      dp3 r2.z, r7.xyzx, r7.xyzx
      ne r2.z, r2.z, l(0.000000)
      and r2.z, r2.z, l(0x3f800000)
      mul r0.x, r0.x, r2.z
      mul r6.yzw, r4.xxyz, r6.yyzw
      mul r9.xyz, r4.xyzx, r0.xxxx
      add r0.x, -r5.w, l(1.000000)
      mul r2.z, r0.x, r0.x
      mul r2.z, r2.z, r2.z
      mul r0.x, r0.x, r2.z
      add r10.xyz, -r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mad r10.xyz, r10.xyzx, r0.xxxx, r7.xyzx
      mul r9.xyz, r9.xyzx, r10.xyzx
      mad r8.xyz, r5.xyzx, r6.yzwy, r9.xyzx
    else 
      add r0.x, -r6.x, l(1.000000)
      mad r0.yzw, r0.yyzw, r1.wwww, -r2.xxyw
      dp3 r1.w, r0.yzwy, r0.yzwy
      max r1.w, r1.w, l(0.001000)
      rsq r1.w, r1.w
      mul r0.yzw, r0.yyzw, r1.wwww
      dp3 r1.w, r1.xyzx, -r2.xywx
      dp3_sat r2.x, r1.xyzx, r3.xyzx
      dp3_sat r1.x, r1.xyzx, r0.yzwy
      dp3_sat r0.y, r3.xyzx, r0.yzwy
      mul r0.z, r0.y, r0.y
      dp2 r0.z, r0.zzzz, r0.xxxx
      add r0.z, r0.z, l(-0.500000)
      add r0.w, -r2.x, l(1.000000)
      mul r1.y, r0.w, r0.w
      mul r1.y, r1.y, r1.y
      mul r0.w, r0.w, r1.y
      mad r0.w, r0.z, r0.w, l(1.000000)
      add r1.y, -|r1.w|, l(1.000000)
      mul r1.z, r1.y, r1.y
      mul r1.z, r1.z, r1.z
      mul r1.y, r1.y, r1.z
      mad r0.z, r0.z, r1.y, l(1.000000)
      mul r0.z, r0.z, r0.w
      mul r0.w, r0.x, r0.x
      mad r0.x, -r0.x, r0.x, l(1.000000)
      mad r1.y, |r1.w|, r0.x, r0.w
      mad r0.x, r2.x, r0.x, r0.w
      mul r0.x, r0.x, |r1.w|
      mad r0.x, r2.x, r1.y, r0.x
      add r0.x, r0.x, l(0.000010)
      div r0.x, l(0.500000), r0.x
      mul r0.w, r0.w, r0.w
      mad r1.y, r1.x, r0.w, -r1.x
      mad r1.x, r1.y, r1.x, l(1.000000)
      mul r0.w, r0.w, l(0.318309873)
      mad r1.x, r1.x, r1.x, l(1.000000012E-007)
      div r0.w, r0.w, r1.x
      mul r0.x, r0.w, r0.x
      mul r0.x, r0.x, l(3.14159274)
      mul r0.xz, r2.xxxx, r0.xxzx
      max r0.x, r0.x, l(0.000000)
      dp3 r0.w, r7.xyzx, r7.xyzx
      ne r0.w, r0.w, l(0.000000)
      and r0.w, r0.w, l(0x3f800000)
      mul r0.x, r0.w, r0.x
      mul r1.xyz, r0.zzzz, r4.xyzx
      mul r0.xzw, r4.xxyz, r0.xxxx
      add r0.y, -r0.y, l(1.000000)
      mul r1.w, r0.y, r0.y
      mul r1.w, r1.w, r1.w
      mul r0.y, r0.y, r1.w
      add r2.xyz, -r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mad r2.xyz, r2.xyzx, r0.yyyy, r7.xyzx
      mul r0.xyz, r0.xzwx, r2.xyzx
      mad r8.xyz, r5.xyzx, r1.xyzx, r0.xyzx
    endif 
  endif 
endif 
mov r8.w, l(1.000000)
exp o0.xyzw, -r8.xyzw
ret 
// Approximately 0 instruction slots used