// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed ff6db440d6e8060d-vs.txt
// 3DMigoto: ff6db440d6e8060d | Matched 3 variants of 1 shaders: Dawn/FlapFlag
//
//       Unity headers extracted from Dawn_FlapFlag
//       Shader "Dawn/FlapFlag" {
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           LOD 200
//           Tags { "RenderType"="Opaque" }
//           Pass 1/5 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="ForwardBase" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Dawn_FlapFlag:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201608170 45 0 0
//      undeciphered1a: 5
// 2:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
// 4:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_ON" }
// 1:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_ON" }
//      undeciphered2: 1 0 4 0 0 0
//      undeciphered3: 191 7 0 0 7 8 1 2 3 4 4 5 5 6 2 1
//      ConstBuffer "$Globals" 256
//      Vector 80 [_FlapParams] 2
//      Vector 96 [_FlapDirection]
//      Vector 112 [_FlutterParams] 3
//      Vector 128 [_FlutterDirection]
//      Vector 224 [_MainTex_ST]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityPerDraw" 352
//      Vector 336 [unity_WorldTransformParams]
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      ConstBuffer "UnityLightmaps" 32
//      Vector 0 [unity_LightmapST]
//      Vector 16 [unity_DynamicLightmapST]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerDraw" 2
//      BindCB "UnityLightmaps" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:40:58 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// TEXCOORD                 2   xyzw        5     NONE   float   xy  
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xy
dcl_input v5.xy
dcl_input v7.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.x, cb0[7].x, cb1[0].y
mad r0.x, r0.x, l(1.200000), cb0[7].z
mad r0.y, cb1[0].y, cb0[5].x, cb0[5].y
sincos r0.y, null, r0.y
mul r0.y, r0.y, v7.x
mad r1.xyzw, cb0[6].xyzw, r0.yyyy, v0.xyzw
mad r0.x, r1.y, cb0[7].y, r0.x
sincos null, r0.x, r0.x
mad r0.y, cb1[0].y, cb0[7].x, cb0[7].z
mad r0.y, r1.x, cb0[7].y, r0.y
sincos r0.y, null, r0.y
add r0.x, r0.x, r0.y
mul r0.x, r0.x, v7.y
mad r0.xyzw, cb0[8].xyzw, r0.xxxx, r1.xyzw
mul r1.xyzw, r0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb2[3].xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed ff6db440d6e8060d-vs.txt
ne r5.w, r1.w, l(1.0)
if_nz r5.w
  add r5.w, r1.w, -r5.y
  mad r1.x, r5.w, r5.x, r1.x
endif

mad o1.xy, v3.xyxx, cb0[14].xyxx, cb0[14].zwzz
mul r2.xyz, r0.yyyy, cb2[13].xyzx
mad r2.xyz, cb2[12].xyzx, r0.xxxx, r2.xyzx
mad r0.xyz, cb2[14].xyzx, r0.zzzz, r2.xyzx
mad r0.xyz, cb2[15].xyzx, r0.wwww, r0.xyzx
mov o2.w, r0.x
dp3 r2.y, v2.xyzx, cb2[16].xyzx
dp3 r2.z, v2.xyzx, cb2[17].xyzx
dp3 r2.x, v2.xyzx, cb2[18].xyzx
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, r2.xyzx
mul r3.xyz, v1.yyyy, cb2[13].yzxy
mad r3.xyz, cb2[12].yzxy, v1.xxxx, r3.xyzx
mad r3.xyz, cb2[14].yzxy, v1.zzzz, r3.xyzx
dp3 r0.x, r3.xyzx, r3.xyzx
rsq r0.x, r0.x
mul r3.xyz, r0.xxxx, r3.xyzx
mul r4.xyz, r2.xyzx, r3.xyzx
mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
mul r0.x, v1.w, cb2[21].w
mul r4.xyz, r0.xxxx, r4.xyzx
mov o2.y, r4.x
mov o2.x, r3.z
mov o2.z, r2.y
mov o3.w, r0.y
mov o4.w, r0.z
mov o3.x, r3.x
mov o4.x, r3.y
mov o3.z, r2.z
mov o4.z, r2.x
mov o3.y, r4.y
mov o4.y, r4.z
mad o5.zw, v5.xxxy, cb3[1].xxxy, cb3[1].zzzw
mad o5.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
mul r0.x, r1.y, cb1[5].x
mul r0.w, r0.x, l(0.500000)
mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mov o6.zw, r1.zzzw
add o6.xy, r0.zzzz, r0.xwxx
ret 
// Approximately 0 instruction slots used