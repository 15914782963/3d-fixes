// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed dcaa954ce8c65ac5-ps.txt
// 3DMigoto: dcaa954ce8c65ac5 |    Unity headers extracted from Dawn_LISRedEyeShader
//    Shader "Dawn/LISRedEyeShader" {
//      Fallback "Dawn/LISRedEyeShaderForward"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry" "RenderType"="Opaque" }
//        Pass 1/3 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "QUEUE"="Geometry" "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Dawn_LISRedEyeShader:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 205 12 4
//   undeciphered1a: 14
//   Keywords { "LIGHTMAP_ON" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
//   undeciphered2: 1 10 3 9 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 176
//   Vector 0 [unity_Lightmap_HDR]
//   Vector 16 [unity_DynamicLightmap_HDR]
//   Float 64 [_irisSize]
//   Float 68 [_pupilSize]
//   Float 72 [_limbus]
//   Float 76 [_parallax]
//   Float 80 [_smoothness]
//   Float 84 [_specularTerm]
//   Vector 88 [_RedStrength] 2
//   Float 96 [_HighlightMask]
//   Float 124 [_fakeSpecSmooth]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_CorneaBump] 2D 8
//   SetTexture 1 [_MainTex] 2D 5
//   SetTexture 2 [_RedTex] 2D 6
//   SetTexture 3 [_WellBumpMap] 2D 7
//   SetTexture 4 [_IrisTex] 2D 4
//   SetTexture 5 [_IrisColorTex] 2D 3
//   SetTexture 6 [unity_Lightmap] 2D 0
//   SetTexture 7 [unity_DynamicLightmap] 2D 1
//   SetTexture 8 [unity_SpecCube0] CUBE 2
//   SetTexture 9 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityReflectionProbes" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:39:52 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_resource_texturecube (float,float,float,float) t9
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed dcaa954ce8c65ac5-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r15.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, v7.xyzx, v7.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, v7.xyzx
add r0.w, cb0[4].x, l(-1.000000)
mul r0.w, r0.w, l(0.500000)
mad r3.xy, v1.xyxx, cb0[4].xxxx, -r0.wwww
sample r4.xyzw, r3.xyxx, t0.xyzw, s8
add r5.xy, r4.wyww, r4.wyww
mad r3.zw, r4.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r0.w, r3.zwzz, r3.zwzz
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r5.z, r0.w
sample r4.xyzw, v1.xyxx, t1.xyzw, s5
sample r6.xyzw, v1.xyxx, t2.xyzw, s6
add r6.xyz, -r4.xyzx, r6.xyzx
mad r4.xyz, cb0[5].wwww, r6.xyzx, r4.xyzx
sample r6.xyzw, v1.xyxx, t3.xyzw, s7
add r7.xy, r6.wyww, r6.wyww
mad r3.zw, r6.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r0.w, r3.zwzz, r3.zwzz
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r7.z, r0.w
add r6.xyz, r7.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r6.xyz, cb0[5].zzzz, r6.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
sample r3.xyzw, r3.xyxx, t1.xyzw, s5
add r3.xyz, r5.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r3.xyz, r3.wwww, r3.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
add r3.xyz, r6.xyzx, r3.xyzx
mul r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
sample r5.xyzw, v1.xyxx, t4.xyzw, s4
mul r0.w, r5.w, cb0[5].z
add r1.w, -r5.z, l(1.000000)
mul r5.yz, cb0[4].xxzx, l(0.000000, 0.600000, 20.000000, 0.000000)
mad r6.xyz, cb0[4].xxxx, l(0.600000, -0.0360000022, -0.0540000089, 0.000000), l(-1.000000, 0.500000, 1.200000, 0.000000)
mul r2.w, r6.x, l(0.500000)
mad r5.yw, v1.xxxy, r5.yyyy, -r2.wwww
add r2.w, -r6.y, r6.z
mad r2.w, cb0[4].y, r2.w, r6.y
mul r4.w, r1.w, r2.w
mad r1.w, r1.w, r2.w, l(-1.000000)
mul r4.w, r4.w, l(0.500000)
mad r6.xy, r5.ywyy, r1.wwww, -r4.wwww
add r1.w, cb0[4].w, cb0[4].w
sample r7.xyzw, r5.ywyy, t4.xyzw, s4
mul r1.w, r1.w, r7.y
mad r5.yw, v1.xxxy, l(0.000000, 0.750000, 0.000000, 0.750000), l(0.000000, 0.125000, 0.000000, 0.125000)
add r4.w, r2.w, l(-1.000000)
mul r4.w, r4.w, l(0.500000)
mad r6.zw, v1.xxxy, r2.wwww, -r4.wwww
add r6.zw, -r5.yyyw, r6.zzzw
mad r5.yw, v1.xxxy, r6.zzzw, r5.yyyw
max r2.xw, -r2.xxxz, l(-0.750000, 0.000000, 0.000000, -0.750000)
min r8.xz, r2.xxwx, l(0.750000, 0.000000, 0.750000, 0.000000)
sample r9.xyzw, r5.ywyy, t4.xyzw, s4
mul r2.x, r1.w, l(0.500000)
mad r1.w, r9.z, r1.w, -r2.x
mov r8.y, -r2.y
dp3 r2.x, r8.xyzx, r8.xyzx
rsq r2.x, r2.x
mul r2.yw, r2.xxxx, r8.xxxy
mad r2.x, r8.z, r2.x, l(0.420000)
div r2.xy, r2.ywyy, r2.xxxx
mul r5.yw, r1.wwww, r2.xxxy
mul r5.yw, r7.yyyy, r5.yyyw
max r5.yw, r5.yyyw, l(0.000000, -0.100000, 0.000000, -0.100000)
min r5.yw, r5.yyyw, l(0.000000, 0.100000, 0.000000, 0.100000)
add r6.xy, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
add r5.yw, -r5.yyyw, r6.xxxy
sample r7.xyzw, r5.ywyy, t5.xyzw, s3
max r1.w, r2.z, l(0.000000)
mad_sat r1.w, r1.w, l(0.450000), l(-0.200000)
mul r2.zw, r1.wwww, l(0.000000, 0.000000, 0.500000, 0.250000)
mad r2.z, r9.z, r2.z, -r2.w
mad r2.xy, -r2.zzzz, r2.xyxx, r6.xyxx
sample r2.xyzw, r2.xyxx, t5.xyzw, s3
add r2.xyz, -r4.xyzx, r7.xyzx
mad r2.xyz, r3.wwww, r2.xyzx, r4.xyzx
max r4.x, r3.w, r5.x
mul r4.yz, r0.wwww, l(0.000000, 0.500000, 0.050000, 0.000000)
mad r0.w, cb0[5].x, r3.w, r4.y
min r6.w, r0.w, l(1.000000)
mad r0.w, r4.x, cb0[5].y, r4.z
min r6.xyz, r0.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
add r4.xyz, v5.xyzx, -v6.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r5.xyw, r0.wwww, r4.xyxz
dp3 r7.x, v2.xyzx, r3.xyzx
dp3 r7.y, v3.xyzx, r3.xyzx
dp3 r7.z, v4.xyzx, r3.xyzx
dp3 r3.x, r7.xyzx, r7.xyzx
rsq r3.x, r3.x
mul r3.xyz, r3.xxxx, r7.xyzx
add r8.xyz, -v6.xyzx, r15.xyzx
dp3 r4.w, r8.xyzx, r8.xyzx
rsq r4.w, r4.w
mul r8.xyz, r4.wwww, r8.xyzx
mad r4.xyz, r4.xyzx, r0.wwww, r8.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx
dp3 r0.w, r3.xyzx, r8.xyzx
dp3_sat r4.w, r3.xyzx, r5.xywx
dp3_sat r3.x, r3.xyzx, r4.xyzx
add r3.y, -cb0[7].w, l(1.000000)
mad r3.z, |r0.w|, r3.y, cb0[7].w
mad r3.y, r4.w, r3.y, cb0[7].w
mul r0.w, |r0.w|, r3.y
mad r0.w, r4.w, r3.z, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r3.y, cb0[7].w, cb0[7].w
mad r3.z, r3.x, r3.y, -r3.x
mad r3.x, r3.z, r3.x, l(1.000000)
mul r3.y, r3.y, l(0.318309873)
mad r3.x, r3.x, r3.x, l(1.000000012E-007)
div r3.x, r3.y, r3.x
mul r0.w, r0.w, r3.x
mul r0.w, r0.w, l(3.14159274)
mul_sat r0.w, r4.w, r0.w
mul r0.w, r0.w, l(0.400000)
add r3.x, -r9.z, l(1.000000)
mad r2.xyz, r0.wwww, r3.xxxx, r2.xyzx
add r0.w, -r3.w, l(2.000000)
mul r0.w, r0.w, r2.w
mul r0.w, r3.w, r0.w
mul_sat r0.w, r1.w, r0.w
mad r3.xyz, r2.xyzx, -r5.zzzz, -r2.xyzx
mad r2.xyz, r0.wwww, r3.xyzx, r2.xyzx
add r0.w, cb0[6].x, l(252.000000)
mul r0.w, r0.w, l(0.00392156886)
add r3.xy, -r6.wzww, l(1.000000, 1.000000, 0.000000, 0.000000)
dp3 r1.w, -r1.xyzx, r7.xyzx
add r1.w, r1.w, r1.w
mad r4.xyz, r7.xyzx, -r1.wwww, -r1.xyzx
sample r5.xyzw, v8.xyxx, t6.xyzw, s0
log r1.w, r5.w
mul r1.w, r1.w, cb0[0].y
exp r1.w, r1.w
mul r1.w, r1.w, cb0[0].x
sample r8.xyzw, v8.zwzz, t7.xyzw, s1
mul r2.w, r8.w, cb0[1].x
mul r8.xyz, r8.xyzx, r2.wwww
log r8.xyz, r8.xyzx
mul r8.xyz, r8.xyzx, cb0[1].yyyy
exp r8.xyz, r8.xyzx
mad r5.xyz, r1.wwww, r5.xyzx, r8.xyzx
mul r5.xyz, r0.wwww, r5.xyzx
lt r1.w, l(0.000000), cb2[2].w
if_nz r1.w
  dp3 r1.w, r4.xyzx, r4.xyzx
  rsq r1.w, r1.w
  mul r8.xyz, r1.wwww, r4.xyzx
  add r9.xyz, -r0.xyzx, cb2[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r0.xyzx, cb2[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r1.w, r9.y, r9.x
  min r1.w, r9.z, r1.w
  add r9.xyz, r0.xyzx, -cb2[2].xyzx
  mad r8.xyz, r8.xyzx, r1.wwww, r9.xyzx
else 
  mov r8.xyz, r4.xyzx
endif 
mad r1.w, -r3.x, l(0.700000), l(1.700000)
mul r1.w, r1.w, r3.x
mul r1.w, r1.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t8.xyzw, s2, r1.w
eq r2.w, cb2[3].w, l(1.000000)
log r3.z, r8.w
mul r3.z, r3.z, cb2[3].y
exp r3.z, r3.z
movc r2.w, r2.w, r3.z, l(1.000000)
mul r2.w, r2.w, cb2[3].x
mul r9.xyz, r8.xyzx, r2.wwww
lt r3.z, cb2[1].w, l(0.999990)
if_nz r3.z
  lt r3.z, l(0.000000), cb2[6].w
  if_nz r3.z
    dp3 r3.z, r4.xyzx, r4.xyzx
    rsq r3.z, r3.z
    mul r10.xyz, r3.zzzz, r4.xyzx
    add r11.xyz, -r0.xyzx, cb2[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r0.xyzx, cb2[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r3.z, r11.y, r11.x
    min r3.z, r11.z, r3.z
    add r0.xyz, r0.xyzx, -cb2[6].xyzx
    mad r4.xyz, r10.xyzx, r3.zzzz, r0.xyzx
  endif 
  sample_l r4.xyzw, r4.xyzx, t9.xyzw, s2, r1.w
  eq r0.x, cb2[7].w, l(1.000000)
  log r0.y, r4.w
  mul r0.y, r0.y, cb2[7].y
  exp r0.y, r0.y
  movc r0.x, r0.x, r0.y, l(1.000000)
  mul r0.x, r0.x, cb2[7].x
  mul r0.xyz, r4.xyzx, r0.xxxx
  mad r4.xyz, r2.wwww, r8.xyzx, -r0.xyzx
  mad r9.xyz, cb2[1].wwww, r4.xyzx, r0.xyzx
endif 
mul r0.xyz, r0.wwww, r9.xyzx
mul r2.xyz, r2.xyzx, r3.yyyy
dp3 r0.w, r7.xyzx, r1.xyzx
mul r1.x, r3.x, r3.x
mad r1.x, r1.x, r1.x, l(1.000000)
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
add r1.y, -r3.y, l(1.000000)
add_sat r1.y, r1.y, r6.w
mul r0.xyz, r0.xyzx, r1.xxxx
add r0.w, -|r0.w|, l(1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.w, r0.w, r1.x
add r1.x, -r6.z, r1.y
mad r0.w, r0.w, r1.x, r6.z
mul r0.xyz, r0.wwww, r0.xyzx
mad o3.xyz, r2.xyzx, r5.xyzx, r0.xyzx
mad o2.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mad o0.w, cb0[6].x, l(0.00392156886), l(0.988235354)
mov o0.xyz, r2.xyzx
mov o1.xyzw, r6.xyzw
mov o2.w, l(1.000000)
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used