// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 19f7d1c4d351745e-ps.txt
// 3DMigoto: 19f7d1c4d351745e |    Unity headers extracted from Custom_SH_DawnTerrainMetallic
//    Shader "Custom/SH_DawnTerrainMetallic" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="Geometry+2" "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry+2" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_SH_DawnTerrainMetallic:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 120 8 4
//   undeciphered1a: 14
//   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" }
//   undeciphered2: 1 10 3 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 128
//   Vector 0 [unity_Lightmap_HDR]
//   Float 64 [_HighlightMask]
//   Vector 80 [_Color]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_MainTex1] 2D 5
//   SetTexture 2 [_BumpMap] 2D 4
//   SetTexture 3 [_BumpMap1] 2D 7
//   SetTexture 4 [_SpecGlossMap] 2D 3
//   SetTexture 5 [_SpecGlossMap1] 2D 6
//   SetTexture 6 [unity_Lightmap] 2D 0
//   SetTexture 7 [unity_LightmapInd] 2D -1
//   SetTexture 8 [unity_SpecCube0] CUBE 1
//   SetTexture 9 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityReflectionProbes" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 04:26:24 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   x   
// TEXCOORD                 4   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_resource_texturecube (float,float,float,float) t9
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.x
dcl_input_ps linear v6.xy
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 19f7d1c4d351745e-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r15.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
sample r2.xyzw, v1.xyxx, t0.xyzw, s2
sample r3.xyzw, v1.zwzz, t1.xyzw, s5
sample r4.xyzw, v1.xyxx, t2.xyzw, s4
mad r4.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r4.xyxx, r4.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r4.z, r0.w
sample r5.xyzw, v1.zwzz, t3.xyzw, s7
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r5.xyxx, r5.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r5.z, r0.w
sample r6.xyzw, v1.xyxx, t4.xyzw, s3
sample r7.xyzw, v1.zwzz, t5.xyzw, s6
add r0.w, -v5.x, l(1.000000)
add r1.w, r2.w, v5.x
add r0.w, r0.w, r3.w
max r2.w, r0.w, r1.w
add r2.w, r2.w, l(-0.200000)
add r1.w, r1.w, -r2.w
max r1.w, r1.w, l(0.000000)
add r0.w, r0.w, -r2.w
max r0.w, r0.w, l(0.000000)
add r0.w, r0.w, r1.w
div r0.w, r1.w, r0.w
add r3.xyz, -r2.xyzx, r3.xyzx
mad r2.xyz, r0.wwww, r3.xyzx, r2.xyzx
mul r3.xyz, r2.xyzx, cb0[5].xyzx
add r6.yz, -r6.xxwx, r7.xxwx
mad r6.xy, r0.wwww, r6.yzyy, r6.xwxx
add r5.xyz, -r4.xyzx, r5.xyzx
mad r4.xyz, r0.wwww, r5.xyzx, r4.xyzx
add r0.w, cb0[4].x, l(252.000000)
mul r0.w, r0.w, l(0.00392156886)
dp3 r5.x, v2.xyzx, r4.xyzx
dp3 r5.y, v3.xyzx, r4.xyzx
dp3 r5.z, v4.xyzx, r4.xyzx
add r1.w, -r6.y, l(1.000000)
dp3 r2.w, -r1.xyzx, r5.xyzx
add r2.w, r2.w, r2.w
mad r4.xyz, r5.xyzx, -r2.wwww, -r1.xyzx
sample r7.xyzw, v6.xyxx, t6.xyzw, s0
log r2.w, r7.w
mul r2.w, r2.w, cb0[0].y
exp r2.w, r2.w
mul r2.w, r2.w, cb0[0].x
mul r7.xyz, r7.xyzx, r2.wwww
sample r8.xyzw, v6.xyxx, t7.xyzw, s0
add r8.xyz, r8.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r2.w, r5.xyzx, r8.xyzx
add r2.w, r2.w, l(0.500000)
mul r7.xyz, r2.wwww, r7.xyzx
max r2.w, r8.w, l(0.000100)
div r7.xyz, r7.xyzx, r2.wwww
mul r7.xyz, r0.wwww, r7.xyzx
lt r2.w, l(0.000000), cb2[2].w
if_nz r2.w
  dp3 r2.w, r4.xyzx, r4.xyzx
  rsq r2.w, r2.w
  mul r8.xyz, r2.wwww, r4.xyzx
  add r9.xyz, -r0.xyzx, cb2[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r0.xyzx, cb2[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r2.w, r9.y, r9.x
  min r2.w, r9.z, r2.w
  add r9.xyz, r0.xyzx, -cb2[2].xyzx
  mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
else 
  mov r8.xyz, r4.xyzx
endif 
mad r2.w, -r1.w, l(0.700000), l(1.700000)
mul r2.w, r1.w, r2.w
mul r2.w, r2.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t8.xyzw, s1, r2.w
eq r3.w, cb2[3].w, l(1.000000)
log r4.w, r8.w
mul r4.w, r4.w, cb2[3].y
exp r4.w, r4.w
movc r3.w, r3.w, r4.w, l(1.000000)
mul r3.w, r3.w, cb2[3].x
mul r9.xyz, r8.xyzx, r3.wwww
lt r4.w, cb2[1].w, l(0.999990)
if_nz r4.w
  lt r4.w, l(0.000000), cb2[6].w
  if_nz r4.w
    dp3 r4.w, r4.xyzx, r4.xyzx
    rsq r4.w, r4.w
    mul r10.xyz, r4.wwww, r4.xyzx
    add r11.xyz, -r0.xyzx, cb2[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r0.xyzx, cb2[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r4.w, r11.y, r11.x
    min r4.w, r11.z, r4.w
    add r0.xyz, r0.xyzx, -cb2[6].xyzx
    mad r4.xyz, r10.xyzx, r4.wwww, r0.xyzx
  endif 
  sample_l r4.xyzw, r4.xyzx, t9.xyzw, s1, r2.w
  eq r0.x, cb2[7].w, l(1.000000)
  log r0.y, r4.w
  mul r0.y, r0.y, cb2[7].y
  exp r0.y, r0.y
  movc r0.x, r0.x, r0.y, l(1.000000)
  mul r0.x, r0.x, cb2[7].x
  mul r0.xyz, r4.xyzx, r0.xxxx
  mad r4.xyz, r3.wwww, r8.xyzx, -r0.xyzx
  mad r9.xyz, cb2[1].wwww, r4.xyzx, r0.xyzx
endif 
mul r0.xyz, r0.wwww, r9.xyzx
dp3 r0.w, r5.xyzx, r5.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r5.xyzx
mad r2.xyz, r2.xyzx, cb0[5].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r2.xyz, r6.xxxx, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r0.w, -r6.x, l(0.960000), l(0.960000)
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r1.x, r4.xyzx, r1.xyzx
mul r1.y, r1.w, r1.w
mad r1.y, r1.y, r1.y, l(1.000000)
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
add r0.w, -r0.w, r6.y
add_sat r0.w, r0.w, l(1.000000)
mul r0.xyz, r0.xyzx, r1.yyyy
add r1.x, -|r1.x|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
add r1.yzw, -r2.xxyz, r0.wwww
mad r1.xyz, r1.xxxx, r1.yzwy, r2.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mad o0.xyz, r3.xyzx, r7.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used