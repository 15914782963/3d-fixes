// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed def7104a070800b8-ps.txt
// 3DMigoto: def7104a070800b8 |    Unity headers extracted from Instanced_NewInstancedSurfaceShader
//    Shader "Instanced/NewInstancedSurfaceShader" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Instanced_NewInstancedSurfaceShader:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 148 4 6
//   undeciphered1a: 12
//   Keywords { "DIRECTIONAL" "INSTANCING_ON" }
//   undeciphered2: 1 4 7 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 112
//   Vector 48 [_LightColor0]
//   Float 80 [_Glossiness]
//   Float 84 [_Metallic]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   ConstBuffer "UnityDrawCallInfo" 16
//   ScalarInt 0 [unity_BaseInstanceID]
//   ConstBuffer "UnityInstancing_Props" 8000
//   Vector 0 [_Color0]
//   Vector 16 [_Color1]
//   Vector 32 [_Color2]
//   Vector 48 [_Color3]
//   Vector 64 [_Color4]
//   Vector 80 [_Color5]
//   Vector 96 [_Color6]
//   Vector 112 [_Color7]
//   Vector 128 [_Color8]
//   Vector 144 [_Color9]
//   Vector 160 [_Color10]
//   Vector 176 [_Color11]
//   Vector 192 [_Color12]
//   Vector 208 [_Color13]
//   Vector 224 [_Color14]
//   Vector 240 [_Color15]
//   Vector 256 [_Color16]
//   Vector 272 [_Color17]
//   Vector 288 [_Color18]
//   Vector 304 [_Color19]
//   Vector 320 [_Color20]
//   Vector 336 [_Color21]
//   Vector 352 [_Color22]
//   Vector 368 [_Color23]
//   Vector 384 [_Color24]
//   Vector 400 [_Color25]
//   Vector 416 [_Color26]
//   Vector 432 [_Color27]
//   Vector 448 [_Color28]
//   Vector 464 [_Color29]
//   Vector 480 [_Color30]
//   Vector 496 [_Color31]
//   Vector 512 [_Color32]
//   Vector 528 [_Color33]
//   Vector 544 [_Color34]
//   Vector 560 [_Color35]
//   Vector 576 [_Color36]
//   Vector 592 [_Color37]
//   Vector 608 [_Color38]
//   Vector 624 [_Color39]
//   Vector 640 [_Color40]
//   Vector 656 [_Color41]
//   Vector 672 [_Color42]
//   Vector 688 [_Color43]
//   Vector 704 [_Color44]
//   Vector 720 [_Color45]
//   Vector 736 [_Color46]
//   Vector 752 [_Color47]
//   Vector 768 [_Color48]
//   Vector 784 [_Color49]
//   Vector 800 [_Color50]
//   Vector 816 [_Color51]
//   Vector 832 [_Color52]
//   Vector 848 [_Color53]
//   Vector 864 [_Color54]
//   Vector 880 [_Color55]
//   Vector 896 [_Color56]
//   Vector 912 [_Color57]
//   Vector 928 [_Color58]
//   Vector 944 [_Color59]
//   Vector 960 [_Color60]
//   Vector 976 [_Color61]
//   Vector 992 [_Color62]
//   Vector 1008 [_Color63]
//   Vector 1024 [_Color64]
//   Vector 1040 [_Color65]
//   Vector 1056 [_Color66]
//   Vector 1072 [_Color67]
//   Vector 1088 [_Color68]
//   Vector 1104 [_Color69]
//   Vector 1120 [_Color70]
//   Vector 1136 [_Color71]
//   Vector 1152 [_Color72]
//   Vector 1168 [_Color73]
//   Vector 1184 [_Color74]
//   Vector 1200 [_Color75]
//   Vector 1216 [_Color76]
//   Vector 1232 [_Color77]
//   Vector 1248 [_Color78]
//   Vector 1264 [_Color79]
//   Vector 1280 [_Color80]
//   Vector 1296 [_Color81]
//   Vector 1312 [_Color82]
//   Vector 1328 [_Color83]
//   Vector 1344 [_Color84]
//   Vector 1360 [_Color85]
//   Vector 1376 [_Color86]
//   Vector 1392 [_Color87]
//   Vector 1408 [_Color88]
//   Vector 1424 [_Color89]
//   Vector 1440 [_Color90]
//   Vector 1456 [_Color91]
//   Vector 1472 [_Color92]
//   Vector 1488 [_Color93]
//   Vector 1504 [_Color94]
//   Vector 1520 [_Color95]
//   Vector 1536 [_Color96]
//   Vector 1552 [_Color97]
//   Vector 1568 [_Color98]
//   Vector 1584 [_Color99]
//   Vector 1600 [_Color100]
//   Vector 1616 [_Color101]
//   Vector 1632 [_Color102]
//   Vector 1648 [_Color103]
//   Vector 1664 [_Color104]
//   Vector 1680 [_Color105]
//   Vector 1696 [_Color106]
//   Vector 1712 [_Color107]
//   Vector 1728 [_Color108]
//   Vector 1744 [_Color109]
//   Vector 1760 [_Color110]
//   Vector 1776 [_Color111]
//   Vector 1792 [_Color112]
//   Vector 1808 [_Color113]
//   Vector 1824 [_Color114]
//   Vector 1840 [_Color115]
//   Vector 1856 [_Color116]
//   Vector 1872 [_Color117]
//   Vector 1888 [_Color118]
//   Vector 1904 [_Color119]
//   Vector 1920 [_Color120]
//   Vector 1936 [_Color121]
//   Vector 1952 [_Color122]
//   Vector 1968 [_Color123]
//   Vector 1984 [_Color124]
//   Vector 2000 [_Color125]
//   Vector 2016 [_Color126]
//   Vector 2032 [_Color127]
//   Vector 2048 [_Color128]
//   Vector 2064 [_Color129]
//   Vector 2080 [_Color130]
//   Vector 2096 [_Color131]
//   Vector 2112 [_Color132]
//   Vector 2128 [_Color133]
//   Vector 2144 [_Color134]
//   Vector 2160 [_Color135]
//   Vector 2176 [_Color136]
//   Vector 2192 [_Color137]
//   Vector 2208 [_Color138]
//   Vector 2224 [_Color139]
//   Vector 2240 [_Color140]
//   Vector 2256 [_Color141]
//   Vector 2272 [_Color142]
//   Vector 2288 [_Color143]
//   Vector 2304 [_Color144]
//   Vector 2320 [_Color145]
//   Vector 2336 [_Color146]
//   Vector 2352 [_Color147]
//   Vector 2368 [_Color148]
//   Vector 2384 [_Color149]
//   Vector 2400 [_Color150]
//   Vector 2416 [_Color151]
//   Vector 2432 [_Color152]
//   Vector 2448 [_Color153]
//   Vector 2464 [_Color154]
//   Vector 2480 [_Color155]
//   Vector 2496 [_Color156]
//   Vector 2512 [_Color157]
//   Vector 2528 [_Color158]
//   Vector 2544 [_Color159]
//   Vector 2560 [_Color160]
//   Vector 2576 [_Color161]
//   Vector 2592 [_Color162]
//   Vector 2608 [_Color163]
//   Vector 2624 [_Color164]
//   Vector 2640 [_Color165]
//   Vector 2656 [_Color166]
//   Vector 2672 [_Color167]
//   Vector 2688 [_Color168]
//   Vector 2704 [_Color169]
//   Vector 2720 [_Color170]
//   Vector 2736 [_Color171]
//   Vector 2752 [_Color172]
//   Vector 2768 [_Color173]
//   Vector 2784 [_Color174]
//   Vector 2800 [_Color175]
//   Vector 2816 [_Color176]
//   Vector 2832 [_Color177]
//   Vector 2848 [_Color178]
//   Vector 2864 [_Color179]
//   Vector 2880 [_Color180]
//   Vector 2896 [_Color181]
//   Vector 2912 [_Color182]
//   Vector 2928 [_Color183]
//   Vector 2944 [_Color184]
//   Vector 2960 [_Color185]
//   Vector 2976 [_Color186]
//   Vector 2992 [_Color187]
//   Vector 3008 [_Color188]
//   Vector 3024 [_Color189]
//   Vector 3040 [_Color190]
//   Vector 3056 [_Color191]
//   Vector 3072 [_Color192]
//   Vector 3088 [_Color193]
//   Vector 3104 [_Color194]
//   Vector 3120 [_Color195]
//   Vector 3136 [_Color196]
//   Vector 3152 [_Color197]
//   Vector 3168 [_Color198]
//   Vector 3184 [_Color199]
//   Vector 3200 [_Color200]
//   Vector 3216 [_Color201]
//   Vector 3232 [_Color202]
//   Vector 3248 [_Color203]
//   Vector 3264 [_Color204]
//   Vector 3280 [_Color205]
//   Vector 3296 [_Color206]
//   Vector 3312 [_Color207]
//   Vector 3328 [_Color208]
//   Vector 3344 [_Color209]
//   Vector 3360 [_Color210]
//   Vector 3376 [_Color211]
//   Vector 3392 [_Color212]
//   Vector 3408 [_Color213]
//   Vector 3424 [_Color214]
//   Vector 3440 [_Color215]
//   Vector 3456 [_Color216]
//   Vector 3472 [_Color217]
//   Vector 3488 [_Color218]
//   Vector 3504 [_Color219]
//   Vector 3520 [_Color220]
//   Vector 3536 [_Color221]
//   Vector 3552 [_Color222]
//   Vector 3568 [_Color223]
//   Vector 3584 [_Color224]
//   Vector 3600 [_Color225]
//   Vector 3616 [_Color226]
//   Vector 3632 [_Color227]
//   Vector 3648 [_Color228]
//   Vector 3664 [_Color229]
//   Vector 3680 [_Color230]
//   Vector 3696 [_Color231]
//   Vector 3712 [_Color232]
//   Vector 3728 [_Color233]
//   Vector 3744 [_Color234]
//   Vector 3760 [_Color235]
//   Vector 3776 [_Color236]
//   Vector 3792 [_Color237]
//   Vector 3808 [_Color238]
//   Vector 3824 [_Color239]
//   Vector 3840 [_Color240]
//   Vector 3856 [_Color241]
//   Vector 3872 [_Color242]
//   Vector 3888 [_Color243]
//   Vector 3904 [_Color244]
//   Vector 3920 [_Color245]
//   Vector 3936 [_Color246]
//   Vector 3952 [_Color247]
//   Vector 3968 [_Color248]
//   Vector 3984 [_Color249]
//   Vector 4000 [_Color250]
//   Vector 4016 [_Color251]
//   Vector 4032 [_Color252]
//   Vector 4048 [_Color253]
//   Vector 4064 [_Color254]
//   Vector 4080 [_Color255]
//   Vector 4096 [_Color256]
//   Vector 4112 [_Color257]
//   Vector 4128 [_Color258]
//   Vector 4144 [_Color259]
//   Vector 4160 [_Color260]
//   Vector 4176 [_Color261]
//   Vector 4192 [_Color262]
//   Vector 4208 [_Color263]
//   Vector 4224 [_Color264]
//   Vector 4240 [_Color265]
//   Vector 4256 [_Color266]
//   Vector 4272 [_Color267]
//   Vector 4288 [_Color268]
//   Vector 4304 [_Color269]
//   Vector 4320 [_Color270]
//   Vector 4336 [_Color271]
//   Vector 4352 [_Color272]
//   Vector 4368 [_Color273]
//   Vector 4384 [_Color274]
//   Vector 4400 [_Color275]
//   Vector 4416 [_Color276]
//   Vector 4432 [_Color277]
//   Vector 4448 [_Color278]
//   Vector 4464 [_Color279]
//   Vector 4480 [_Color280]
//   Vector 4496 [_Color281]
//   Vector 4512 [_Color282]
//   Vector 4528 [_Color283]
//   Vector 4544 [_Color284]
//   Vector 4560 [_Color285]
//   Vector 4576 [_Color286]
//   Vector 4592 [_Color287]
//   Vector 4608 [_Color288]
//   Vector 4624 [_Color289]
//   Vector 4640 [_Color290]
//   Vector 4656 [_Color291]
//   Vector 4672 [_Color292]
//   Vector 4688 [_Color293]
//   Vector 4704 [_Color294]
//   Vector 4720 [_Color295]
//   Vector 4736 [_Color296]
//   Vector 4752 [_Color297]
//   Vector 4768 [_Color298]
//   Vector 4784 [_Color299]
//   Vector 4800 [_Color300]
//   Vector 4816 [_Color301]
//   Vector 4832 [_Color302]
//   Vector 4848 [_Color303]
//   Vector 4864 [_Color304]
//   Vector 4880 [_Color305]
//   Vector 4896 [_Color306]
//   Vector 4912 [_Color307]
//   Vector 4928 [_Color308]
//   Vector 4944 [_Color309]
//   Vector 4960 [_Color310]
//   Vector 4976 [_Color311]
//   Vector 4992 [_Color312]
//   Vector 5008 [_Color313]
//   Vector 5024 [_Color314]
//   Vector 5040 [_Color315]
//   Vector 5056 [_Color316]
//   Vector 5072 [_Color317]
//   Vector 5088 [_Color318]
//   Vector 5104 [_Color319]
//   Vector 5120 [_Color320]
//   Vector 5136 [_Color321]
//   Vector 5152 [_Color322]
//   Vector 5168 [_Color323]
//   Vector 5184 [_Color324]
//   Vector 5200 [_Color325]
//   Vector 5216 [_Color326]
//   Vector 5232 [_Color327]
//   Vector 5248 [_Color328]
//   Vector 5264 [_Color329]
//   Vector 5280 [_Color330]
//   Vector 5296 [_Color331]
//   Vector 5312 [_Color332]
//   Vector 5328 [_Color333]
//   Vector 5344 [_Color334]
//   Vector 5360 [_Color335]
//   Vector 5376 [_Color336]
//   Vector 5392 [_Color337]
//   Vector 5408 [_Color338]
//   Vector 5424 [_Color339]
//   Vector 5440 [_Color340]
//   Vector 5456 [_Color341]
//   Vector 5472 [_Color342]
//   Vector 5488 [_Color343]
//   Vector 5504 [_Color344]
//   Vector 5520 [_Color345]
//   Vector 5536 [_Color346]
//   Vector 5552 [_Color347]
//   Vector 5568 [_Color348]
//   Vector 5584 [_Color349]
//   Vector 5600 [_Color350]
//   Vector 5616 [_Color351]
//   Vector 5632 [_Color352]
//   Vector 5648 [_Color353]
//   Vector 5664 [_Color354]
//   Vector 5680 [_Color355]
//   Vector 5696 [_Color356]
//   Vector 5712 [_Color357]
//   Vector 5728 [_Color358]
//   Vector 5744 [_Color359]
//   Vector 5760 [_Color360]
//   Vector 5776 [_Color361]
//   Vector 5792 [_Color362]
//   Vector 5808 [_Color363]
//   Vector 5824 [_Color364]
//   Vector 5840 [_Color365]
//   Vector 5856 [_Color366]
//   Vector 5872 [_Color367]
//   Vector 5888 [_Color368]
//   Vector 5904 [_Color369]
//   Vector 5920 [_Color370]
//   Vector 5936 [_Color371]
//   Vector 5952 [_Color372]
//   Vector 5968 [_Color373]
//   Vector 5984 [_Color374]
//   Vector 6000 [_Color375]
//   Vector 6016 [_Color376]
//   Vector 6032 [_Color377]
//   Vector 6048 [_Color378]
//   Vector 6064 [_Color379]
//   Vector 6080 [_Color380]
//   Vector 6096 [_Color381]
//   Vector 6112 [_Color382]
//   Vector 6128 [_Color383]
//   Vector 6144 [_Color384]
//   Vector 6160 [_Color385]
//   Vector 6176 [_Color386]
//   Vector 6192 [_Color387]
//   Vector 6208 [_Color388]
//   Vector 6224 [_Color389]
//   Vector 6240 [_Color390]
//   Vector 6256 [_Color391]
//   Vector 6272 [_Color392]
//   Vector 6288 [_Color393]
//   Vector 6304 [_Color394]
//   Vector 6320 [_Color395]
//   Vector 6336 [_Color396]
//   Vector 6352 [_Color397]
//   Vector 6368 [_Color398]
//   Vector 6384 [_Color399]
//   Vector 6400 [_Color400]
//   Vector 6416 [_Color401]
//   Vector 6432 [_Color402]
//   Vector 6448 [_Color403]
//   Vector 6464 [_Color404]
//   Vector 6480 [_Color405]
//   Vector 6496 [_Color406]
//   Vector 6512 [_Color407]
//   Vector 6528 [_Color408]
//   Vector 6544 [_Color409]
//   Vector 6560 [_Color410]
//   Vector 6576 [_Color411]
//   Vector 6592 [_Color412]
//   Vector 6608 [_Color413]
//   Vector 6624 [_Color414]
//   Vector 6640 [_Color415]
//   Vector 6656 [_Color416]
//   Vector 6672 [_Color417]
//   Vector 6688 [_Color418]
//   Vector 6704 [_Color419]
//   Vector 6720 [_Color420]
//   Vector 6736 [_Color421]
//   Vector 6752 [_Color422]
//   Vector 6768 [_Color423]
//   Vector 6784 [_Color424]
//   Vector 6800 [_Color425]
//   Vector 6816 [_Color426]
//   Vector 6832 [_Color427]
//   Vector 6848 [_Color428]
//   Vector 6864 [_Color429]
//   Vector 6880 [_Color430]
//   Vector 6896 [_Color431]
//   Vector 6912 [_Color432]
//   Vector 6928 [_Color433]
//   Vector 6944 [_Color434]
//   Vector 6960 [_Color435]
//   Vector 6976 [_Color436]
//   Vector 6992 [_Color437]
//   Vector 7008 [_Color438]
//   Vector 7024 [_Color439]
//   Vector 7040 [_Color440]
//   Vector 7056 [_Color441]
//   Vector 7072 [_Color442]
//   Vector 7088 [_Color443]
//   Vector 7104 [_Color444]
//   Vector 7120 [_Color445]
//   Vector 7136 [_Color446]
//   Vector 7152 [_Color447]
//   Vector 7168 [_Color448]
//   Vector 7184 [_Color449]
//   Vector 7200 [_Color450]
//   Vector 7216 [_Color451]
//   Vector 7232 [_Color452]
//   Vector 7248 [_Color453]
//   Vector 7264 [_Color454]
//   Vector 7280 [_Color455]
//   Vector 7296 [_Color456]
//   Vector 7312 [_Color457]
//   Vector 7328 [_Color458]
//   Vector 7344 [_Color459]
//   Vector 7360 [_Color460]
//   Vector 7376 [_Color461]
//   Vector 7392 [_Color462]
//   Vector 7408 [_Color463]
//   Vector 7424 [_Color464]
//   Vector 7440 [_Color465]
//   Vector 7456 [_Color466]
//   Vector 7472 [_Color467]
//   Vector 7488 [_Color468]
//   Vector 7504 [_Color469]
//   Vector 7520 [_Color470]
//   Vector 7536 [_Color471]
//   Vector 7552 [_Color472]
//   Vector 7568 [_Color473]
//   Vector 7584 [_Color474]
//   Vector 7600 [_Color475]
//   Vector 7616 [_Color476]
//   Vector 7632 [_Color477]
//   Vector 7648 [_Color478]
//   Vector 7664 [_Color479]
//   Vector 7680 [_Color480]
//   Vector 7696 [_Color481]
//   Vector 7712 [_Color482]
//   Vector 7728 [_Color483]
//   Vector 7744 [_Color484]
//   Vector 7760 [_Color485]
//   Vector 7776 [_Color486]
//   Vector 7792 [_Color487]
//   Vector 7808 [_Color488]
//   Vector 7824 [_Color489]
//   Vector 7840 [_Color490]
//   Vector 7856 [_Color491]
//   Vector 7872 [_Color492]
//   Vector 7888 [_Color493]
//   Vector 7904 [_Color494]
//   Vector 7920 [_Color495]
//   Vector 7936 [_Color496]
//   Vector 7952 [_Color497]
//   Vector 7968 [_Color498]
//   Vector 7984 [_Color499]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [unity_SpecCube0] CUBE 0
//   SetTexture 2 [unity_SpecCube1] CUBE -1
//   SetTexture 3 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//   BindCB "UnityProbeVolume" 4
//   BindCB "UnityDrawCallInfo" 5
//   BindCB "UnityInstancing_Props" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 05:29:16 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 6   xyzw        5     NONE   float       
// SV_InstanceID            0   x           6     NONE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_constantbuffer cb6[500], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps constant v6.x
dcl_output o0.xyzw
dcl_temps 14
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed def7104a070800b8-ps.txt

mul r12.w, -r12.x, r12.y
mad r13.xyz, -r12.wwww, cb10[0].xyzw, cb1[4].xyzw

iadd r0.x, v6.x, cb5[0].x
add r0.yzw, -v3.xxyz, r13.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r1.yzw, r0.yyzw, r1.xxxx
sample r2.xyzw, v1.xyxx, t0.xyzw, s2
mul r3.xyz, r2.xyzx, cb6[r0.x + 0].xyzx
add r2.w, -cb0[5].x, l(1.000000)
dp3 r3.w, -r1.yzwy, v2.xyzx
add r3.w, r3.w, r3.w
mad r4.xyz, v2.xyzx, -r3.wwww, -r1.yzwy
eq r3.w, cb4[0].x, l(1.000000)
if_nz r3.w
  eq r3.w, cb4[0].y, l(1.000000)
  mul r5.xyz, v3.yyyy, cb4[2].xyzx
  mad r5.xyz, cb4[1].xyzx, v3.xxxx, r5.xyzx
  mad r5.xyz, cb4[3].xyzx, v3.zzzz, r5.xyzx
  add r5.xyz, r5.xyzx, cb4[4].xyzx
  movc r5.xyz, r3.wwww, r5.xyzx, v3.xyzx
  add r5.xyz, r5.xyzx, -cb4[6].xyzx
  mul r5.yzw, r5.xxyz, cb4[5].xxyz
  mul r3.w, r5.y, l(0.250000)
  mul r4.w, cb4[0].z, l(0.500000)
  mad r5.y, -cb4[0].z, l(0.500000), l(0.250000)
  max r3.w, r3.w, r4.w
  min r5.x, r5.y, r3.w
  sample r6.xyzw, r5.xzwx, t3.xyzw, s1
  add r7.xyz, r5.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r7.xyzw, r7.xyzx, t3.xyzw, s1
  add r5.xyz, r5.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r5.xyzw, r5.xyzx, t3.xyzw, s1
  mov r8.xyz, v2.xyzx
  mov r8.w, l(1.000000)
  dp4 r6.x, r6.xyzw, r8.xyzw
  dp4 r6.y, r7.xyzw, r8.xyzw
  dp4 r6.z, r5.xyzw, r8.xyzw
else 
  mov r5.xyz, v2.xyzx
  mov r5.w, l(1.000000)
  dp4 r6.x, cb2[38].xyzw, r5.xyzw
  dp4 r6.y, cb2[39].xyzw, r5.xyzw
  dp4 r6.z, cb2[40].xyzw, r5.xyzw
endif 
add r5.xyz, r6.xyzx, v4.xyzx
max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r3.w, l(0.000000), cb3[2].w
if_nz r3.w
  dp3 r3.w, r4.xyzx, r4.xyzx
  rsq r3.w, r3.w
  mul r6.xyz, r3.wwww, r4.xyzx
  add r7.xyz, -v3.xyzx, cb3[0].xyzx
  div r7.xyz, r7.xyzx, r6.xyzx
  add r8.xyz, -v3.xyzx, cb3[1].xyzx
  div r8.xyz, r8.xyzx, r6.xyzx
  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  min r3.w, r7.y, r7.x
  min r3.w, r7.z, r3.w
  add r7.xyz, v3.xyzx, -cb3[2].xyzx
  mad r6.xyz, r6.xyzx, r3.wwww, r7.xyzx
else 
  mov r6.xyz, r4.xyzx
endif 
mad r3.w, -r2.w, l(0.700000), l(1.700000)
mul r3.w, r2.w, r3.w
mul r3.w, r3.w, l(6.000000)
sample_l r6.xyzw, r6.xyzx, t1.xyzw, s0, r3.w
eq r4.w, cb3[3].w, l(1.000000)
log r5.w, r6.w
mul r5.w, r5.w, cb3[3].y
exp r5.w, r5.w
movc r4.w, r4.w, r5.w, l(1.000000)
mul r4.w, r4.w, cb3[3].x
mul r7.xyz, r6.xyzx, r4.wwww
lt r5.w, cb3[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb3[6].w
  if_nz r5.w
    dp3 r5.w, r4.xyzx, r4.xyzx
    rsq r5.w, r5.w
    mul r8.xyz, r4.xyzx, r5.wwww
    add r9.xyz, -v3.xyzx, cb3[4].xyzx
    div r9.xyz, r9.xyzx, r8.xyzx
    add r10.xyz, -v3.xyzx, cb3[5].xyzx
    div r10.xyz, r10.xyzx, r8.xyzx
    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
    movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
    min r5.w, r9.y, r9.x
    min r5.w, r9.z, r5.w
    add r9.xyz, v3.xyzx, -cb3[6].xyzx
    mad r4.xyz, r8.xyzx, r5.wwww, r9.xyzx
  endif 
  sample_l r8.xyzw, r4.xyzx, t2.xyzw, s0, r3.w
  eq r3.w, cb3[7].w, l(1.000000)
  log r4.x, r8.w
  mul r4.x, r4.x, cb3[7].y
  exp r4.x, r4.x
  movc r3.w, r3.w, r4.x, l(1.000000)
  mul r3.w, r3.w, cb3[7].x
  mul r4.xyz, r8.xyzx, r3.wwww
  mad r6.xyz, r4.wwww, r6.xyzx, -r4.xyzx
  mad r7.xyz, cb3[1].wwww, r6.xyzx, r4.xyzx
endif 
dp3 r3.w, v2.xyzx, v2.xyzx
rsq r3.w, r3.w
mul r4.xyz, r3.wwww, v2.xyzx
mad r2.xyz, r2.xyzx, cb6[r0.x + 0].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r2.xyz, cb0[5].yyyy, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r0.x, -cb0[5].y, l(0.960000), l(0.960000)
mul r3.xyz, r0.xxxx, r3.xyzx
mad r0.yzw, r0.yyzw, r1.xxxx, cb2[0].xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
max r1.x, r1.x, l(0.001000)
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
dp3 r1.x, r4.xyzx, r1.yzwy
dp3_sat r1.y, r4.xyzx, cb2[0].xyzx
dp3_sat r1.z, r4.xyzx, r0.yzwy
dp3_sat r0.y, cb2[0].xyzx, r0.yzwy
mul r0.z, r0.y, r0.y
dp2 r0.z, r0.zzzz, r2.wwww
add r0.z, r0.z, l(-0.500000)
add r0.w, -r1.y, l(1.000000)
mul r1.w, r0.w, r0.w
mul r1.w, r1.w, r1.w
mul r0.w, r0.w, r1.w
mad r0.w, r0.z, r0.w, l(1.000000)
add r1.w, -|r1.x|, l(1.000000)
mul r3.w, r1.w, r1.w
mul r3.w, r3.w, r3.w
mul r1.w, r1.w, r3.w
mad r0.z, r0.z, r1.w, l(1.000000)
mul r0.z, r0.z, r0.w
mul r0.z, r1.y, r0.z
mul r0.w, r2.w, r2.w
mad r2.w, -r2.w, r2.w, l(1.000000)
mad r3.w, |r1.x|, r2.w, r0.w
mad r2.w, r1.y, r2.w, r0.w
mul r1.x, |r1.x|, r2.w
mad r1.x, r1.y, r3.w, r1.x
add r1.x, r1.x, l(0.000010)
div r1.x, l(0.500000), r1.x
mul r2.w, r0.w, r0.w
mad r3.w, r1.z, r2.w, -r1.z
mad r1.z, r3.w, r1.z, l(1.000000)
mul r2.w, r2.w, l(0.318309873)
mad r1.z, r1.z, r1.z, l(1.000000012E-007)
div r1.z, r2.w, r1.z
mul r1.x, r1.z, r1.x
mul r1.x, r1.x, l(3.14159274)
mul r1.x, r1.y, r1.x
max r1.x, r1.x, l(0.000000)
mad r0.w, r0.w, r0.w, l(1.000000)
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
dp3 r1.y, r2.xyzx, r2.xyzx
ne r1.y, r1.y, l(0.000000)
and r1.y, r1.y, l(0x3f800000)
mul r1.x, r1.y, r1.x
add r0.x, -r0.x, cb0[5].x
add_sat r0.x, r0.x, l(1.000000)
mad r4.xyz, cb0[3].xyzx, r0.zzzz, r5.xyzx
mul r1.xyz, r1.xxxx, cb0[3].xyzx
add r0.y, -r0.y, l(1.000000)
mul r0.z, r0.y, r0.y
mul r0.z, r0.z, r0.z
mul r0.y, r0.y, r0.z
add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r5.xyz, r5.xyzx, r0.yyyy, r2.xyzx
mul r1.xyz, r1.xyzx, r5.xyzx
mad r1.xyz, r3.xyzx, r4.xyzx, r1.xyzx
mul r0.yzw, r7.xxyz, r0.wwww
add r3.xyz, -r2.xyzx, r0.xxxx
mad r2.xyz, r1.wwww, r3.xyzx, r2.xyzx
mad o0.xyz, r0.yzwy, r2.xyzx, r1.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used