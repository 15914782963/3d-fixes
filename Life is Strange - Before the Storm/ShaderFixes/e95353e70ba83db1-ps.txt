// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e95353e70ba83db1-ps.txt
// 3DMigoto: e95353e70ba83db1 |    Unity headers extracted from Custom_S_WindBillboard
//    Shader "Custom/S_WindBillboard" {
//      Fallback "Transparent/Cutout/Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 3/5 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_S_WindBillboard:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 77 6 0
//   undeciphered1a: 6
//   Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" }
//   undeciphered2: 1 4 2 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 0 [unity_Lightmap_HDR]
//   Float 72 [_BumpScale]
//   Vector 96 [_Color]
//   Float 192 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_BumpMap] 2D 2
//   SetTexture 2 [unity_Lightmap] 2D 0
//   SetTexture 3 [unity_LightmapInd] 2D -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 05:32:56 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 4     zw        1     NONE   float       
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float   xy  
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v6.xy
dcl_input_ps_sgv v7.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e95353e70ba83db1-ps.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s1
mad r0.w, r0.w, cb0[6].w, -cb0[12].x
mul r0.xyz, r0.xyzx, cb0[6].xyzx
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
mov o0.xyz, r0.xyzx
mov o0.w, l(0.988235295)
mov o1.xyzw, l(0,0,0,0)
mov o2.w, l(1.000000)
sample r1.xyzw, v1.xyxx, t1.xyzw, s2
mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.xy, r1.xyxx, cb0[4].zzzz
dp2 r0.w, r1.xyxx, r1.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r1.z, r0.w
movc r0.w, v7.x, l(1.000000), l(-1.000000)
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r2.x, v2.xyzx, r1.xyzx
dp3 r2.y, v3.xyzx, r1.xyzx
dp3 r2.z, v4.xyzx, r1.xyzx
mad o2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov r1.x, v2.w
mov r1.y, v3.w
mov r1.z, v4.w
add r1.xyz, -r1.xyzx, r7.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r1.xyzx
dp3 r1.w, r2.xyzx, r3.xyzx
add r1.w, -|r1.w|, l(1.000000)
mul r2.w, r1.w, r1.w
mul r2.w, r2.w, r2.w
mul r1.w, r1.w, r2.w
sample r3.xyzw, v6.xyxx, t3.xyzw, s0
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r2.w, r3.xyzx, r3.xyzx
sqrt r2.w, r2.w
max r2.w, r2.w, l(0.001000)
div r3.xyz, r3.xyzx, r2.wwww
mad r1.xyz, r1.xyzx, r0.wwww, r3.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3_sat r0.w, r3.xyzx, r1.xyzx
dp3_sat r1.x, r2.xyzx, r3.xyzx
dp2 r0.w, r0.wwww, r0.wwww
add r0.w, r0.w, l(-0.500000)
mad r1.y, r0.w, r1.w, l(1.000000)
add r1.z, -r1.x, l(1.000000)
mul r1.w, r1.z, r1.z
mul r1.w, r1.w, r1.w
mul r1.z, r1.z, r1.w
mad r0.w, r0.w, r1.z, l(1.000000)
mul r0.w, r1.y, r0.w
mul r0.w, r1.x, r0.w
sample r3.xyzw, v6.xyxx, t2.xyzw, s0
log r1.y, r3.w
mul r1.y, r1.y, cb0[0].y
exp r1.y, r1.y
mul r1.y, r1.y, cb0[0].x
mul r1.yzw, r3.xxyz, r1.yyyy
mul r3.xyz, r2.wwww, r1.yzwy
add r2.w, -r2.w, l(1.000000)
mul r1.yzw, r1.yyzw, r2.wwww
mul r3.xyz, r0.wwww, r3.xyzx
add r4.xy, v6.xyxx, l(0.500000, 0.000000, 0.000000, 0.000000)
sample r5.xyzw, r4.xyxx, t3.xyzw, s0
sample r4.xyzw, r4.xyxx, t2.xyzw, s0
mad r5.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r5.xyzx, r5.xyzx
sqrt r0.w, r0.w
max r0.w, r0.w, l(0.001000)
div r5.xyz, r5.xyzx, r0.wwww
dp3_sat r2.x, r2.xyzx, r5.xyzx
log r2.y, r4.w
mul r2.y, r2.y, cb0[0].y
exp r2.y, r2.y
mul r2.y, r2.y, cb0[0].x
mul r2.yzw, r4.xxyz, r2.yyyy
add r3.w, -r0.w, l(1.000000)
mul r4.xyz, r0.wwww, r2.yzwy
mul r2.yzw, r2.yyzw, r3.wwww
mul r2.yzw, r2.xxxx, r2.yyzw
mad r1.xyz, r1.yzwy, r1.xxxx, r2.yzwy
mad r1.xyz, r1.xyzx, l(0.988235295, 0.988235295, 0.988235295, 0.000000), r3.xyzx
mul r2.yzw, r0.xxyz, r4.xxyz
mul r2.xyz, r2.xxxx, r2.yzwy
mul r2.xyz, r2.xyzx, l(0.988235295, 0.988235295, 0.988235295, 0.000000)
mad r0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
exp o3.xyz, -r0.xyzx
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used