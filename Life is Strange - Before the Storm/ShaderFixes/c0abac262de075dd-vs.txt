// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed c0abac262de075dd-vs.txt
// 3DMigoto: c0abac262de075dd |    Unity headers extracted from VFX_SmokeRibbon
//    Shader "VFX/SmokeRibbon" {
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent+10" "RenderType"="Transparent" }
//        Pass 1/1 {
//          Tags { "QUEUE"="Transparent+10" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from VFX_SmokeRibbon:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201608170 50 0 0
//   undeciphered1a: 2
//   Keywords { "SOFTPARTICLES_ON" }
//   undeciphered2: 1 0 3 0 0 0
//   undeciphered3: 9 2 0 0 3 4
//   ConstBuffer "$Globals" 144
//   Vector 32 [_MainTex_ST]
//   Vector 48 [_Params]
//   Vector 64 [_Fade] 2
//   Vector 80 [_WorldRight] 3
//   Vector 112 [_MoveVector] 3
//   Vector 128 [_OtherFrame_T] 3
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 64 [glstate_matrix_modelview0]
//   Matrix 256 [unity_WorldToObject]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:39:05 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[19], immediateIndexed
dcl_input v0.xy
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.zw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 3

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r2.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.x, cb0[3].x, cb0[4].y
mad r0.y, v0.y, l(6.200000), r0.x
mul r1.xyz, v0.yyyy, l(2.160000, 22.200001, 10.400000, 0.000000)
mad r0.xzw, r0.xxxx, l(0.300000, 0.000000, 0.400000, 0.700000), r1.xxyz
sincos null, r0.x, r0.x
sincos r0.yzw, null, r0.yyzw
mul r0.z, r0.z, l(0.200000)
mad r0.x, r0.y, r0.x, r0.z
mul r0.y, cb0[3].y, cb0[3].x
mul r0.y, r0.y, l(0.250000)
lt r0.z, cb0[3].x, l(4.000000)
movc r0.y, r0.z, r0.y, cb0[3].y
mul r1.y, r0.y, v0.y
mul r0.y, r0.y, r1.y
mul r0.x, r0.y, r0.x
mul r0.y, cb1[0].x, l(1.700000)
mad r0.y, v0.y, l(4.100000), r0.y
sincos null, r0.y, r0.y
add r0.y, r0.y, r0.w
mad r0.y, r0.y, l(0.200000), l(0.020000)
mul r0.y, r1.y, r0.y
mad r0.y, r0.y, cb0[3].z, cb0[3].z
mad r0.x, v0.x, r0.y, r0.x
mul r0.yzw, cb0[5].yyyy, cb2[17].xxyz
mad r0.yzw, cb2[16].xxyz, cb0[5].xxxx, r0.yyzw
mad r0.yzw, cb2[18].xxyz, cb0[5].zzzz, r0.yyzw
dp3 r0.z, r0.yzwy, r0.yzwy
rsq r0.z, r0.z
mul r0.yz, r0.zzzz, r0.yywy
mul r1.xz, r0.xxxx, r0.yyzy
mul r0.xyz, cb0[7].yyyy, cb2[17].xyzx
mad r0.xyz, cb2[16].xyzx, cb0[7].xxxx, r0.xyzx
mad r0.xyz, cb2[18].xyzx, cb0[7].zzzz, r0.xyzx
mul r0.w, v0.y, v0.y
mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
mul r1.xyzw, r0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb2[3].xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed c0abac262de075dd-vs.txt
ne r2.w, r1.w, l(1.0)
if_nz r2.w
  add r2.w, r1.w, -r2.y
  mad r1.x, r2.w, r2.x, r1.x
endif

mad o1.xy, v1.xyxx, cb0[2].xyxx, cb0[2].zwzz
mad o1.zw, v1.xxxy, cb0[2].xxxx, cb0[8].xxxy
mul r0.y, r0.y, cb2[5].z
mad r0.x, cb2[4].z, r0.x, r0.y
mad r0.x, cb2[6].z, r0.z, r0.x
add r0.x, r0.x, cb2[7].z
mov o2.z, -r0.x
mul r0.x, r1.y, cb1[5].x
mul r0.w, r0.x, l(0.500000)
mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mov o2.w, r1.w
add o2.xy, r0.zzzz, r0.xwxx
mad o3.xyz, -v0.yyyy, v0.yyyy, l(1.000000, 1.000000, 1.000000, 0.000000)
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used