// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 4ceee3b7b4232dbf-ps.txt
// 3DMigoto: 4ceee3b7b4232dbf | Matched 6 variants of 1 shaders: Dawn/VFX/FractalScreenSaver
//
//        Unity headers extracted from Dawn_VFX_FractalScreenSaver
//        Shader "Dawn/VFX/FractalScreenSaver" {
//          Fallback "Diffuse"
//          SubShader 1/1 {
//            LOD 200
//            Tags { "RenderType"="Opaque" }
//            Pass 3/4 {
//              Name "DEFERRED"
//              Tags { "LIGHTMODE"="Deferred" "RenderType"="Opaque" }
//              Program "fp" {
//                SubProgram "d3d11" {
//                }
//              }
//            }
//          }
//        }
//
//     Unity 5.3 headers extracted from Dawn_VFX_FractalScreenSaver:
//       API d3d11
//       Shader model ps_4_0
//       undeciphered1: 201608170 125 6 9
//       undeciphered1a: 13
//       Keywords { "UNITY_HDR_ON" }
//       undeciphered2: 1 6 5 5 0 0
//       undeciphered3: 0 0
//       ConstBuffer "$Globals" 112
//       Float 64 [_HighlightMask]
//       Float 68 [_Emissive]
//       ConstBuffer "UnityPerCamera" 144
//       Vector 64 [_WorldSpaceCameraPos] 3
//       ConstBuffer "UnityLighting" 720
//       Vector 608 [unity_SHAr]
//       Vector 624 [unity_SHAg]
//       Vector 640 [unity_SHAb]
//       ConstBuffer "UnityReflectionProbes" 128
//       Vector 0 [unity_SpecCube0_BoxMax]
//       Vector 16 [unity_SpecCube0_BoxMin]
//       Vector 32 [unity_SpecCube0_ProbePosition]
//       Vector 48 [unity_SpecCube0_HDR]
//       Vector 64 [unity_SpecCube1_BoxMax]
//       Vector 80 [unity_SpecCube1_BoxMin]
//       Vector 96 [unity_SpecCube1_ProbePosition]
//       Vector 112 [unity_SpecCube1_HDR]
//       ConstBuffer "UnityProbeVolume" 112
//       Vector 0 [unity_ProbeVolumeParams]
//       Vector 80 [unity_ProbeVolumeSizeInv] 3
//       Vector 96 [unity_ProbeVolumeMin] 3
//       Matrix 16 [unity_ProbeVolumeWorldToObject]
//       SetTexture 0 [_MainTex] 2D 2
//       SetTexture 1 [_Specular] 2D 4
//       SetTexture 2 [_ScanLines] 2D 3
//       SetTexture 3 [unity_SpecCube0] CUBE 0
//       SetTexture 4 [unity_SpecCube1] CUBE -1
//       SetTexture 5 [unity_ProbeVolumeSH] 3D 1
//       BindCB "$Globals" 0
//       BindCB "UnityPerCamera" 1
//       BindCB "UnityLighting" 2
//       BindCB "UnityReflectionProbes" 3
//       BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 04:42:23 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 3     zw        1     NONE   float     zw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float       
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[5], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 4ceee3b7b4232dbf-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, r14.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, v4.xyzx, v4.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v4.xyzx
add r2.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r0.w, r2.x, l(1.500000)
add r1.w, r2.y, r2.y
mov r2.x, r0.w
mov r2.y, r1.w
mov r2.z, l(0)
loop 
  ige r2.w, r2.z, l(16)
  breakc_nz r2.w
  mul r2.w, r2.y, r2.y
  mad r3.x, r2.x, r2.x, -r2.w
  dp2 r3.y, r2.yyyy, r2.xxxx
  add r2.xy, r3.xyxx, v1.zwzz
  dp2 r2.w, r2.xyxx, r2.xyxx
  lt r2.w, l(4.000000), r2.w
  if_nz r2.w
    break 
  endif 
  iadd r2.z, r2.z, l(1)
endloop 
itof r0.w, r2.z
mul r2.x, r0.w, l(0.062500)
mov r2.y, l(0.500000)
sample r2.xyzw, r2.xyxx, t0.xyzw, s2
sample r3.xyzw, v1.xyxx, t1.xyzw, s4
mul r4.xy, v1.xyxx, l(4.000000, 128.000000, 0.000000, 0.000000)
sample r4.xyzw, r4.xyxx, t2.xyzw, s3
dp3_sat r0.w, v2.xyzx, r1.xyzx
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r0.w
mul r1.xyz, r0.wwww, r2.xyzx
mul r2.xyz, r1.xyzx, cb0[4].yyyy
mul r1.xyz, r4.xyzx, r1.xyzx
add r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
min r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.w, cb0[4].x, l(252.000000)
mul r0.w, r0.w, l(0.00392156886)
add r1.w, -r3.w, l(1.000000)
dp3 r2.w, -r0.xyzx, v2.xyzx
add r2.w, r2.w, r2.w
mad r5.xyz, v2.xyzx, -r2.wwww, -r0.xyzx
eq r2.w, cb4[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb4[0].y, l(1.000000)
  mul r6.xyz, v3.yyyy, cb4[2].xyzx
  mad r6.xyz, cb4[1].xyzx, v3.xxxx, r6.xyzx
  mad r6.xyz, cb4[3].xyzx, v3.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb4[4].xyzx
  movc r6.xyz, r2.wwww, r6.xyzx, v3.xyzx
  add r6.xyz, r6.xyzx, -cb4[6].xyzx
  mul r6.yzw, r6.xxyz, cb4[5].xxyz
  mul r2.w, r6.y, l(0.250000)
  mul r4.w, cb4[0].z, l(0.500000)
  mad r5.w, -cb4[0].z, l(0.500000), l(0.250000)
  max r2.w, r2.w, r4.w
  min r6.x, r5.w, r2.w
  sample r7.xyzw, r6.xzwx, t5.xyzw, s1
  add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r8.xyzw, r8.xyzx, t5.xyzw, s1
  add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r6.xyzw, r6.xyzx, t5.xyzw, s1
  mov r9.xyz, v2.xyzx
  mov r9.w, l(1.000000)
  dp4 r7.x, r7.xyzw, r9.xyzw
  dp4 r7.y, r8.xyzw, r9.xyzw
  dp4 r7.z, r6.xyzw, r9.xyzw
else 
  mov r6.xyz, v2.xyzx
  mov r6.w, l(1.000000)
  dp4 r7.x, cb2[38].xyzw, r6.xyzw
  dp4 r7.y, cb2[39].xyzw, r6.xyzw
  dp4 r7.z, cb2[40].xyzw, r6.xyzw
endif 
add r6.xyz, r7.xyzx, v6.xyzx
max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r6.xyz, r0.wwww, r6.xyzx
lt r2.w, l(0.000000), cb3[2].w
if_nz r2.w
  dp3 r2.w, r5.xyzx, r5.xyzx
  rsq r2.w, r2.w
  mul r7.xyz, r2.wwww, r5.xyzx
  add r8.xyz, -v3.xyzx, cb3[0].xyzx
  div r8.xyz, r8.xyzx, r7.xyzx
  add r9.xyz, -v3.xyzx, cb3[1].xyzx
  div r9.xyz, r9.xyzx, r7.xyzx
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  min r2.w, r8.y, r8.x
  min r2.w, r8.z, r2.w
  add r8.xyz, v3.xyzx, -cb3[2].xyzx
  mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
else 
  mov r7.xyz, r5.xyzx
endif 
mad r2.w, -r1.w, l(0.700000), l(1.700000)
mul r2.w, r1.w, r2.w
mul r2.w, r2.w, l(6.000000)
sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r2.w
eq r4.w, cb3[3].w, l(1.000000)
log r5.w, r7.w
mul r5.w, r5.w, cb3[3].y
exp r5.w, r5.w
movc r4.w, r4.w, r5.w, l(1.000000)
mul r4.w, r4.w, cb3[3].x
mul r8.xyz, r7.xyzx, r4.wwww
lt r5.w, cb3[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb3[6].w
  if_nz r5.w
    dp3 r5.w, r5.xyzx, r5.xyzx
    rsq r5.w, r5.w
    mul r9.xyz, r5.wwww, r5.xyzx
    add r10.xyz, -v3.xyzx, cb3[4].xyzx
    div r10.xyz, r10.xyzx, r9.xyzx
    add r11.xyz, -v3.xyzx, cb3[5].xyzx
    div r11.xyz, r11.xyzx, r9.xyzx
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
    min r5.w, r10.y, r10.x
    min r5.w, r10.z, r5.w
    add r10.xyz, v3.xyzx, -cb3[6].xyzx
    mad r5.xyz, r9.xyzx, r5.wwww, r10.xyzx
  endif 
  sample_l r5.xyzw, r5.xyzx, t4.xyzw, s0, r2.w
  eq r2.w, cb3[7].w, l(1.000000)
  log r5.w, r5.w
  mul r5.w, r5.w, cb3[7].y
  exp r5.w, r5.w
  movc r2.w, r2.w, r5.w, l(1.000000)
  mul r2.w, r2.w, cb3[7].x
  mul r5.xyz, r5.xyzx, r2.wwww
  mad r7.xyz, r4.wwww, r7.xyzx, -r5.xyzx
  mad r8.xyz, cb3[1].wwww, r7.xyzx, r5.xyzx
endif 
mul r5.xyz, r0.wwww, r8.xyzx
max r0.w, r3.y, r3.x
max r0.w, r3.z, r0.w
add r0.w, -r0.w, l(1.000000)
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.x, v2.xyzx, r0.xyzx
mul r0.y, r1.w, r1.w
mad r0.y, r0.y, r0.y, l(1.000000)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
add r0.z, -r0.w, r3.w
add_sat r0.z, r0.z, l(1.000000)
mul r5.xyz, r5.xyzx, r0.yyyy
add r0.x, -|r0.x|, l(1.000000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.x, r0.y
add r0.yzw, -r3.xxyz, r0.zzzz
mad r0.xyz, r0.xxxx, r0.yzwy, r3.xyzx
mul r0.xyz, r0.xyzx, r5.xyzx
mad r0.xyz, r1.xyzx, r6.xyzx, r0.xyzx
mad o3.xyz, r2.xyzx, r4.xyzx, r0.xyzx
mad o0.w, cb0[4].x, l(0.00392156886), l(0.988235354)
mov o0.xyz, r1.xyzx
mov o1.xyzw, r3.xyzw
mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o2.w, l(1.000000)
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used