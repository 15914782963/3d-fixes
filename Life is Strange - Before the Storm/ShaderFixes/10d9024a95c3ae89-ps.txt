// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 10d9024a95c3ae89-ps.txt
// 3DMigoto: 10d9024a95c3ae89 |    Unity headers extracted from Instanced_NewInstancedSurfaceShader
//    Shader "Instanced/NewInstancedSurfaceShader" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Instanced_NewInstancedSurfaceShader:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 163 4 4
//   undeciphered1a: 14
//   Keywords { "DIRECTIONAL" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_ON" }
//   undeciphered2: 1 6 5 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 96
//   Vector 16 [unity_DynamicLightmap_HDR]
//   Vector 32 [_LightColor0]
//   Float 64 [_Glossiness]
//   Float 68 [_Metallic]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "Props" 16
//   Vector 0 [_Color]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [unity_DynamicLightmap] 2D 0
//   SetTexture 2 [unity_DynamicDirectionality] 2D -1
//   SetTexture 3 [unity_DynamicNormal] 2D -1
//   SetTexture 4 [unity_SpecCube0] CUBE 1
//   SetTexture 5 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//   BindCB "Props" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 04:23:18 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 6   xyzw        4     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[5], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.zw
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 10d9024a95c3ae89-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, r15.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
sample r2.xyzw, v1.xyxx, t0.xyzw, s2
mul r3.xyz, r2.xyzx, cb4[0].xyzx
add r1.w, -cb0[4].x, l(1.000000)
dp3 r2.w, -r1.xyzx, v2.xyzx
add r2.w, r2.w, r2.w
mad r4.xyz, v2.xyzx, -r2.wwww, -r1.xyzx
sample r5.xyzw, v4.zwzz, t1.xyzw, s0
mul r2.w, r5.w, cb0[1].x
mul r5.xyz, r5.xyzx, r2.wwww
log r5.xyz, r5.xyzx
mul r5.xyz, r5.xyzx, cb0[1].yyyy
exp r5.xyz, r5.xyzx
sample r6.xyzw, v4.zwzz, t2.xyzw, s0
sample r7.xyzw, v4.zwzz, t3.xyzw, s0
mad r6.xyz, r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r2.w, r6.xyzx, r6.xyzx
sqrt r2.w, r2.w
max r2.w, r2.w, l(0.001000)
div r6.xyz, r6.xyzx, r2.wwww
mad r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r3.w, r7.xyzx, r6.xyzx
max r3.w, r3.w, l(0.125000)
div r5.xyz, r5.xyzx, r3.wwww
add r3.w, -r2.w, l(1.000000)
mul r7.xyz, r3.wwww, r5.xyzx
mul r5.xyz, r2.wwww, r5.xyzx
dp3_sat r2.w, v2.xyzx, r6.xyzx
lt r3.w, l(0.000000), cb3[2].w
if_nz r3.w
  dp3 r3.w, r4.xyzx, r4.xyzx
  rsq r3.w, r3.w
  mul r8.xyz, r3.wwww, r4.xyzx
  add r9.xyz, -v3.xyzx, cb3[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -v3.xyzx, cb3[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r3.w, r9.y, r9.x
  min r3.w, r9.z, r3.w
  add r9.xyz, v3.xyzx, -cb3[2].xyzx
  mad r8.xyz, r8.xyzx, r3.wwww, r9.xyzx
else 
  mov r8.xyz, r4.xyzx
endif 
mad r3.w, -r1.w, l(0.700000), l(1.700000)
mul r3.w, r1.w, r3.w
mul r3.w, r3.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t4.xyzw, s1, r3.w
eq r4.w, cb3[3].w, l(1.000000)
log r5.w, r8.w
mul r5.w, r5.w, cb3[3].y
exp r5.w, r5.w
movc r4.w, r4.w, r5.w, l(1.000000)
mul r4.w, r4.w, cb3[3].x
mul r9.xyz, r8.xyzx, r4.wwww
lt r5.w, cb3[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb3[6].w
  if_nz r5.w
    dp3 r5.w, r4.xyzx, r4.xyzx
    rsq r5.w, r5.w
    mul r10.xyz, r4.xyzx, r5.wwww
    add r11.xyz, -v3.xyzx, cb3[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -v3.xyzx, cb3[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r5.w, r11.y, r11.x
    min r5.w, r11.z, r5.w
    add r11.xyz, v3.xyzx, -cb3[6].xyzx
    mad r4.xyz, r10.xyzx, r5.wwww, r11.xyzx
  endif 
  sample_l r10.xyzw, r4.xyzx, t5.xyzw, s1, r3.w
  eq r3.w, cb3[7].w, l(1.000000)
  log r4.x, r10.w
  mul r4.x, r4.x, cb3[7].y
  exp r4.x, r4.x
  movc r3.w, r3.w, r4.x, l(1.000000)
  mul r3.w, r3.w, cb3[7].x
  mul r4.xyz, r10.xyzx, r3.wwww
  mad r8.xyz, r4.wwww, r8.xyzx, -r4.xyzx
  mad r9.xyz, cb3[1].wwww, r8.xyzx, r4.xyzx
endif 
dp3 r3.w, v2.xyzx, v2.xyzx
rsq r3.w, r3.w
mul r4.xyz, r3.wwww, v2.xyzx
mad r2.xyz, r2.xyzx, cb4[0].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r3.w, -cb0[4].y, l(0.960000), l(0.960000)
mul r3.xyz, r3.wwww, r3.xyzx
mad r8.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r4.w, r8.xyzx, r8.xyzx
max r4.w, r4.w, l(0.001000)
rsq r4.w, r4.w
mul r8.xyz, r4.wwww, r8.xyzx
dp3 r1.x, r4.xyzx, r1.xyzx
dp3_sat r1.y, r4.xyzx, cb2[0].xyzx
dp3_sat r1.z, r4.xyzx, r8.xyzx
dp3_sat r4.w, cb2[0].xyzx, r8.xyzx
mul r5.w, r4.w, r4.w
dp2 r5.w, r5.wwww, r1.wwww
add r5.w, r5.w, l(-0.500000)
add r6.w, -r1.y, l(1.000000)
mul r7.w, r6.w, r6.w
mul r7.w, r7.w, r7.w
mul r6.w, r6.w, r7.w
mad r6.w, r5.w, r6.w, l(1.000000)
add r7.w, -|r1.x|, l(1.000000)
mul r8.x, r7.w, r7.w
mul r8.x, r8.x, r8.x
mul r7.w, r7.w, r8.x
mad r5.w, r5.w, r7.w, l(1.000000)
mul r5.w, r5.w, r6.w
mul r5.w, r1.y, r5.w
mul r6.w, r1.w, r1.w
mad r8.x, -r1.w, r1.w, l(1.000000)
mad r8.y, |r1.x|, r8.x, r6.w
mad r8.x, r1.y, r8.x, r6.w
mul r1.x, |r1.x|, r8.x
mad r1.x, r1.y, r8.y, r1.x
add r1.x, r1.x, l(0.000010)
div r1.x, l(0.500000), r1.x
mul r8.x, r6.w, r6.w
mad r8.y, r1.z, r8.x, -r1.z
mad r1.z, r8.y, r1.z, l(1.000000)
mul r8.y, r8.x, l(0.318309873)
mad r1.z, r1.z, r1.z, l(1.000000012E-007)
div r1.z, r8.y, r1.z
mul r1.x, r1.z, r1.x
mul r1.x, r1.x, l(3.14159274)
mul r1.x, r1.y, r1.x
max r1.x, r1.x, l(0.000000)
mad r1.yz, r6.wwww, r6.wwww, l(0.000000, 1.000000, -1.000000, 0.000000)
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
dp3 r6.w, r2.xyzx, r2.xyzx
ne r6.w, r6.w, l(0.000000)
and r6.w, r6.w, l(0x3f800000)
mul r1.x, r1.x, r6.w
add r3.w, -r3.w, cb0[4].x
add_sat r3.w, r3.w, l(1.000000)
mul r8.yzw, r5.wwww, cb0[2].xxyz
mad r7.xyz, r7.xyzx, r2.wwww, r8.yzwy
mul r8.yzw, r1.xxxx, cb0[2].xxyz
add r1.x, -r4.w, l(1.000000)
mul r2.w, r1.x, r1.x
mul r2.w, r2.w, r2.w
mul r1.x, r1.x, r2.w
add r10.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r10.xyz, r10.xyzx, r1.xxxx, r2.xyzx
mul r8.yzw, r8.yyzw, r10.xxyz
mad r7.xyz, r3.xyzx, r7.xyzx, r8.yzwy
mul r8.yzw, r9.xxyz, r1.yyyy
add r9.xyz, -r2.xyzx, r3.wwww
mad r9.xyz, r7.wwww, r9.xyzx, r2.xyzx
mad r7.xyz, r8.yzwy, r9.xyzx, r7.xyzx
mad r0.xyz, r0.xyzx, r0.wwww, r6.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3_sat r0.w, r4.xyzx, r6.xyzx
dp3_sat r1.x, r4.xyzx, r0.xyzx
dp3_sat r0.x, r6.xyzx, r0.xyzx
mul r0.y, r1.x, r1.x
mad r0.y, r0.y, r1.z, l(1.000010)
mul r0.x, r0.x, r0.x
max r0.x, r0.x, l(0.100000)
mad r0.z, r1.w, r1.w, l(0.500000)
mul r0.xy, r0.zyzz, r0.xyxx
mul r0.x, r0.y, r0.x
mul r0.x, r0.x, l(4.000000)
div r0.x, r8.x, r0.x
mad r0.xyz, r0.xxxx, r2.xyzx, r3.xyzx
mul r0.xyz, r5.xyzx, r0.xyzx
mad o0.xyz, r0.xyzx, r0.wwww, r7.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used