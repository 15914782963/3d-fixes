// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0897345283e64f28-ps.txt
// 3DMigoto: 0897345283e64f28 |    Unity headers extracted from Custom_RedEyeShader
//    Shader "Custom/RedEyeShader" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_RedEyeShader:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 207 9 4
//   undeciphered1a: 17
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_ON" }
//   undeciphered2: 1 11 4 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 144
//   Vector 16 [unity_DynamicLightmap_HDR]
//   Vector 32 [_LightColor0]
//   Float 64 [_Parallax]
//   Float 68 [_Smoothness]
//   Vector 72 [_RedStrength] 2
//   Vector 80 [_Specular]
//   Vector 96 [_Color]
//   Float 112 [_HighlightMask]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_ParallaxMap] 2D 5
//   SetTexture 1 [_BumpMap] 2D 6
//   SetTexture 2 [_WellBumpMap] 2D 7
//   SetTexture 3 [_MainTex] 2D 3
//   SetTexture 4 [_RedTex] 2D 4
//   SetTexture 5 [_ShadowMapTexture] 2D 2
//   SetTexture 6 [unity_DynamicLightmap] 2D 0
//   SetTexture 7 [unity_DynamicDirectionality] 2D -1
//   SetTexture 8 [unity_DynamicNormal] 2D -1
//   SetTexture 9 [unity_SpecCube0] CUBE 1
//   SetTexture 10 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 04:20:17 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xy w
// TEXCOORD                 7   xyzw        6     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texturecube (float,float,float,float) t9
dcl_resource_texturecube (float,float,float,float) t10
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyw
dcl_input_ps linear v6.zw
dcl_output o0.xyzw
dcl_temps 19
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r17.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0897345283e64f28-ps.txt

mul r17.w, -r17.x, r17.y
mad r18.xyz, -r17.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r18.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mul r3.xyz, r2.yyyy, v3.xyzx
mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
sample r4.xyzw, v1.xyxx, t0.xyzw, s5
mul r1.w, r4.y, cb0[4].z
mul r2.w, r1.w, l(0.250000)
mad r2.w, r4.x, l(0.200000), -r2.w
sample r5.xyzw, v1.xyxx, t1.xyzw, s6
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r3.w, r5.xyxx, r5.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r5.z, r3.w
sample r6.xyzw, v1.xyxx, t2.xyzw, s7
mad r6.xy, r6.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r3.w, r6.xyxx, r6.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r6.z, r3.w
add r4.xzw, -r5.xxyz, r6.xxyz
mad r4.xzw, cb0[4].zzzz, r4.xxzw, r5.xxyz
mul r3.w, cb0[4].x, l(0.500000)
mad r2.w, r2.w, cb0[4].x, -r3.w
dp3 r3.w, r3.xyzx, r3.xyzx
rsq r3.w, r3.w
mul r3.xy, r3.wwww, r3.xyxx
mad r3.z, r3.z, r3.w, l(0.420000)
div r3.xy, r3.xyxx, r3.zzzz
mad r3.xy, r2.wwww, r3.xyxx, v1.xyxx
sample r5.xyzw, r3.xyxx, t3.xyzw, s3
sample r3.xyzw, r3.xyxx, t4.xyzw, s4
add r3.xyz, -r5.xyzx, r3.xyzx
mad r3.xyz, cb0[4].wwww, r3.xyzx, r5.xyzx
mul r3.xyz, r3.xyzx, cb0[6].xyzx
mad r2.w, r1.w, l(0.275000), l(1.000000)
mul r3.xyz, r2.wwww, r3.xyzx
mad r2.w, r4.y, cb0[4].z, cb0[4].y
min r2.w, r2.w, l(1.000000)
mad r5.xyz, r1.wwww, l(0.050000, 0.050000, 0.050000, 0.000000), cb0[5].xyzx
min r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r1.w, cb0[7].x, l(252.000000)
mul r1.w, r1.w, l(0.00392156886)
div r6.xy, v5.xyxx, v5.wwww
sample r6.xyzw, r6.xyxx, t5.xyzw, s2
dp3 r7.x, v2.xyzx, r4.xzwx
dp3 r7.y, v3.xyzx, r4.xzwx
dp3 r7.z, v4.xyzx, r4.xzwx
add r3.w, -r2.w, l(1.000000)
dp3 r4.x, -r2.xyzx, r7.xyzx
add r4.x, r4.x, r4.x
mad r4.xyz, r7.xyzx, -r4.xxxx, -r2.xyzx
mul r6.xyz, r6.xxxx, cb0[2].xyzx
sample r8.xyzw, v6.zwzz, t6.xyzw, s0
mul r4.w, r8.w, cb0[1].x
mul r8.xyz, r8.xyzx, r4.wwww
log r8.xyz, r8.xyzx
mul r8.xyz, r8.xyzx, cb0[1].yyyy
exp r8.xyz, r8.xyzx
sample r9.xyzw, v6.zwzz, t7.xyzw, s0
sample r10.xyzw, v6.zwzz, t8.xyzw, s0
mad r9.xyz, r9.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r4.w, r9.xyzx, r9.xyzx
sqrt r4.w, r4.w
max r4.w, r4.w, l(0.001000)
div r9.xyz, r9.xyzx, r4.wwww
mad r10.xyz, r10.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r5.w, r10.xyzx, r9.xyzx
max r5.w, r5.w, l(0.125000)
div r8.xyz, r8.xyzx, r5.wwww
add r5.w, -r4.w, l(1.000000)
mul r10.xyz, r5.wwww, r8.xyzx
mul r8.xyz, r4.wwww, r8.xyzx
dp3_sat r4.w, r7.xyzx, r9.xyzx
mul r10.xyz, r4.wwww, r10.xyzx
lt r4.w, l(0.000000), cb3[2].w
if_nz r4.w
  dp3 r4.w, r4.xyzx, r4.xyzx
  rsq r4.w, r4.w
  mul r11.xyz, r4.wwww, r4.xyzx
  add r12.xyz, -r0.xyzx, cb3[0].xyzx
  div r12.xyz, r12.xyzx, r11.xyzx
  add r13.xyz, -r0.xyzx, cb3[1].xyzx
  div r13.xyz, r13.xyzx, r11.xyzx
  lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
  movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
  min r4.w, r12.y, r12.x
  min r4.w, r12.z, r4.w
  add r12.xyz, r0.xyzx, -cb3[2].xyzx
  mad r11.xyz, r11.xyzx, r4.wwww, r12.xyzx
else 
  mov r11.xyz, r4.xyzx
endif 
mad r4.w, -r3.w, l(0.700000), l(1.700000)
mul r4.w, r3.w, r4.w
mul r4.w, r4.w, l(6.000000)
sample_l r11.xyzw, r11.xyzx, t9.xyzw, s1, r4.w
eq r5.w, cb3[3].w, l(1.000000)
log r6.w, r11.w
mul r6.w, r6.w, cb3[3].y
exp r6.w, r6.w
movc r5.w, r5.w, r6.w, l(1.000000)
mul r5.w, r5.w, cb3[3].x
mul r12.xyz, r11.xyzx, r5.wwww
lt r6.w, cb3[1].w, l(0.999990)
if_nz r6.w
  lt r6.w, l(0.000000), cb3[6].w
  if_nz r6.w
    dp3 r6.w, r4.xyzx, r4.xyzx
    rsq r6.w, r6.w
    mul r13.xyz, r4.xyzx, r6.wwww
    add r14.xyz, -r0.xyzx, cb3[4].xyzx
    div r14.xyz, r14.xyzx, r13.xyzx
    add r15.xyz, -r0.xyzx, cb3[5].xyzx
    div r15.xyz, r15.xyzx, r13.xyzx
    lt r16.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r13.xyzx
    movc r14.xyz, r16.xyzx, r14.xyzx, r15.xyzx
    min r6.w, r14.y, r14.x
    min r6.w, r14.z, r6.w
    add r0.xyz, r0.xyzx, -cb3[6].xyzx
    mad r4.xyz, r13.xyzx, r6.wwww, r0.xyzx
  endif 
  sample_l r4.xyzw, r4.xyzx, t10.xyzw, s1, r4.w
  eq r0.x, cb3[7].w, l(1.000000)
  log r0.y, r4.w
  mul r0.y, r0.y, cb3[7].y
  exp r0.y, r0.y
  movc r0.x, r0.x, r0.y, l(1.000000)
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r4.xyzx, r0.xxxx
  mad r4.xyz, r5.wwww, r11.xyzx, -r0.xyzx
  mad r12.xyz, cb3[1].wwww, r4.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.wwww, r12.xyzx
dp3 r4.x, r7.xyzx, r7.xyzx
rsq r4.x, r4.x
mul r4.xyz, r4.xxxx, r7.xyzx
max r4.w, r5.y, r5.x
max r4.w, r5.z, r4.w
add r4.w, -r4.w, l(1.000000)
mul r3.xyz, r3.xyzx, r4.wwww
mad r7.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r5.w, r7.xyzx, r7.xyzx
max r5.w, r5.w, l(0.001000)
rsq r5.w, r5.w
mul r7.xyz, r5.wwww, r7.xyzx
dp3 r2.x, r4.xyzx, r2.xyzx
dp3_sat r2.y, r4.xyzx, cb2[0].xyzx
dp3_sat r2.z, r4.xyzx, r7.xyzx
dp3_sat r5.w, cb2[0].xyzx, r7.xyzx
mul r6.w, r5.w, r5.w
dp2 r6.w, r6.wwww, r3.wwww
add r6.w, r6.w, l(-0.500000)
add r7.x, -r2.y, l(1.000000)
mul r7.y, r7.x, r7.x
mul r7.y, r7.y, r7.y
mul r7.x, r7.x, r7.y
mad r7.x, r6.w, r7.x, l(1.000000)
add r7.y, -|r2.x|, l(1.000000)
mul r7.z, r7.y, r7.y
mul r7.z, r7.z, r7.z
mul r7.y, r7.y, r7.z
mad r6.w, r6.w, r7.y, l(1.000000)
mul r6.w, r6.w, r7.x
mul r6.w, r2.y, r6.w
mul r7.x, r3.w, r3.w
mad r7.z, -r3.w, r3.w, l(1.000000)
mad r7.w, |r2.x|, r7.z, r7.x
mad r7.z, r2.y, r7.z, r7.x
mul r2.x, |r2.x|, r7.z
mad r2.x, r2.y, r7.w, r2.x
add r2.x, r2.x, l(0.000010)
div r2.x, l(0.500000), r2.x
mul r7.z, r7.x, r7.x
mad r7.w, r2.z, r7.z, -r2.z
mad r2.z, r7.w, r2.z, l(1.000000)
mul r7.w, r7.z, l(0.318309873)
mad r2.z, r2.z, r2.z, l(1.000000012E-007)
div r2.z, r7.w, r2.z
mul r2.x, r2.z, r2.x
mul r2.x, r2.x, l(3.14159274)
mul r2.x, r2.y, r2.x
max r2.x, r2.x, l(0.000000)
mad r2.yz, r7.xxxx, r7.xxxx, l(0.000000, 1.000000, -1.000000, 0.000000)
div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
dp3 r7.x, r5.xyzx, r5.xyzx
ne r7.x, r7.x, l(0.000000)
and r7.x, r7.x, l(0x3f800000)
mul r2.x, r2.x, r7.x
add r2.w, r2.w, -r4.w
add_sat r2.w, r2.w, l(1.000000)
mul r11.xyz, r6.wwww, r6.xyzx
mad r10.xyz, r10.xyzx, r1.wwww, r11.xyzx
mul r6.xyz, r6.xyzx, r2.xxxx
add r2.x, -r5.w, l(1.000000)
mul r4.w, r2.x, r2.x
mul r4.w, r4.w, r4.w
mul r2.x, r2.x, r4.w
add r11.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r11.xyz, r11.xyzx, r2.xxxx, r5.xyzx
mul r6.xyz, r6.xyzx, r11.xyzx
mad r6.xyz, r3.xyzx, r10.xyzx, r6.xyzx
mul r0.xyz, r0.xyzx, r2.yyyy
add r2.xyw, -r5.xyxz, r2.wwww
mad r2.xyw, r7.yyyy, r2.xyxw, r5.xyxz
mad r0.xyz, r0.xyzx, r2.xywx, r6.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, r9.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3_sat r0.w, r4.xyzx, r9.xyzx
dp3_sat r2.x, r4.xyzx, r1.xyzx
dp3_sat r1.x, r9.xyzx, r1.xyzx
mul r1.y, r2.x, r2.x
mad r1.y, r1.y, r2.z, l(1.000010)
mul r1.x, r1.x, r1.x
max r1.x, r1.x, l(0.100000)
mad r1.z, r3.w, r3.w, l(0.500000)
mul r1.xy, r1.zyzz, r1.xyxx
mul r1.x, r1.y, r1.x
mul r1.x, r1.x, l(4.000000)
div r1.x, r7.z, r1.x
mad r1.xyz, r1.xxxx, r5.xyzx, r3.xyzx
mul r1.xyz, r8.xyzx, r1.xyzx
mul r1.xyz, r0.wwww, r1.xyzx
mad o0.xyz, r1.xyzx, r1.wwww, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used