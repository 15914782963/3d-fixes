// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 1bb0bc79caaa4a3b-ps.txt
// 3DMigoto: 1bb0bc79caaa4a3b |    Unity headers extracted from Custom_S_FountainWater
//    Shader "Custom/S_FountainWater" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_S_FountainWater:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 212 7 4
//   undeciphered1a: 17
//   Keywords { "DIRECTIONAL" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_ON" }
//   undeciphered2: 1 8 4 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 160
//   Vector 16 [unity_DynamicLightmap_HDR]
//   Vector 32 [_LightColor0]
//   Float 64 [_InvFade]
//   Vector 80 [_Specular]
//   Vector 96 [_Color]
//   Float 112 [_WorldTiling]
//   Float 116 [_WaterSpeed]
//   Float 120 [_WaveletTiling]
//   Float 128 [_WaveletMin]
//   Float 132 [_WaveletMax]
//   Float 144 [_CutoffSteps]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_BumpMap] 2D 2
//   SetTexture 1 [_WaveletBlend] 2D 3
//   SetTexture 2 [_CameraDepthTexture] 2D 4
//   SetTexture 3 [unity_DynamicLightmap] 2D 0
//   SetTexture 4 [unity_DynamicDirectionality] 2D -1
//   SetTexture 5 [unity_DynamicNormal] 2D -1
//   SetTexture 6 [unity_SpecCube0] CUBE 1
//   SetTexture 7 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:34:24 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 6   xyzw        5     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.zw
dcl_output o0.xyzw
dcl_temps 19
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r17.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 1bb0bc79caaa4a3b-ps.txt

mul r17.w, -r17.x, r17.y
mad r18.xyz, -r17.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v1.w
mov r0.y, v2.w
mov r0.z, v3.w
add r1.xyz, -r0.xyzx, r18.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
div r3.xy, r0.xzxx, cb0[7].xxxx
mul r1.w, cb0[7].y, cb1[0].x
mad r3.zw, cb0[7].yyyy, cb1[0].xxxx, r3.xxxy
mul r4.xyz, r1.wwww, l(1.418000, 2.980000, 2.198000, 0.000000)
mad r4.xw, r3.xxxy, l(1.418000, 0.000000, 0.000000, 1.418000), -r4.xxxx
sample r5.xyzw, r3.zwzz, t0.xyzw, s2
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
sample r6.xyzw, r4.xwxx, t0.xyzw, s2
mad r6.xy, r6.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r6.xyxx, r6.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r6.z, r1.w
add r5.xyz, r5.xyzx, r6.xyzx
dp3 r1.w, r5.xyzx, r5.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, r5.xyzx
mul r5.xyz, r5.xyzx, cb0[9].xxxx
round_ni r5.xyz, r5.xyzx
div r5.xyz, r5.xyzx, cb0[9].xxxx
mad r3.xy, r3.xyxx, cb0[7].zzzz, r4.yzyy
sample r3.xyzw, r3.xyxx, t1.xyzw, s3
add r1.w, -cb0[8].x, cb0[8].y
mad r1.w, r3.x, r1.w, cb0[8].x
add r3.xyz, r5.xyzx, l(0.000000, 0.000000, -0.990000, 0.000000)
mad r3.xyz, r1.wwww, r3.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
div r4.xyz, v4.xyzx, v4.wwww
sample r5.xyzw, r4.xyxx, t2.xyzw, s4
mad r1.w, cb1[7].z, r5.x, cb1[7].w
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
mad r2.w, cb1[7].z, r4.z, cb1[7].w
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
add r1.w, r1.w, -r2.w
mul_sat r1.w, r1.w, cb0[4].x
log r1.w, r1.w
mul r1.w, r1.w, |r3.y|
exp r1.w, r1.w
mul r4.xyzw, r1.wwww, cb0[6].xyzw
mul r4.xyz, r1.wwww, r4.xyzx
add r5.xyzw, cb0[5].wxyz, l(5.000000, 5.000000, 5.000000, 5.000000)
mad_sat r5.xyzw, r1.wwww, r5.xyzw, l(-5.000000, -5.000000, -5.000000, -5.000000)
dp3 r6.x, v1.xyzx, r3.xyzx
dp3 r6.y, v2.xyzx, r3.xyzx
dp3 r6.z, v3.xyzx, r3.xyzx
add r3.xyzw, -r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
dp3 r1.w, -r2.xyzx, r6.xyzx
add r1.w, r1.w, r1.w
mad r7.xyz, r6.xyzx, -r1.wwww, -r2.xyzx
sample r8.xyzw, v5.zwzz, t3.xyzw, s0
mul r1.w, r8.w, cb0[1].x
mul r8.xyz, r8.xyzx, r1.wwww
log r8.xyz, r8.xyzx
mul r8.xyz, r8.xyzx, cb0[1].yyyy
exp r8.xyz, r8.xyzx
sample r9.xyzw, v5.zwzz, t4.xyzw, s0
sample r10.xyzw, v5.zwzz, t5.xyzw, s0
mad r9.xyz, r9.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.w, r9.xyzx, r9.xyzx
sqrt r1.w, r1.w
max r1.w, r1.w, l(0.001000)
div r9.xyz, r9.xyzx, r1.wwww
mad r10.xyz, r10.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r2.w, r10.xyzx, r9.xyzx
max r2.w, r2.w, l(0.125000)
div r8.xyz, r8.xyzx, r2.wwww
add r2.w, -r1.w, l(1.000000)
mul r10.xyz, r2.wwww, r8.xyzx
mul r8.xyz, r1.wwww, r8.xyzx
dp3_sat r1.w, r6.xyzx, r9.xyzx
mul r10.xyz, r1.wwww, r10.xyzx
lt r1.w, l(0.000000), cb3[2].w
if_nz r1.w
  dp3 r1.w, r7.xyzx, r7.xyzx
  rsq r1.w, r1.w
  mul r11.xyz, r1.wwww, r7.xyzx
  add r12.xyz, -r0.xyzx, cb3[0].xyzx
  div r12.xyz, r12.xyzx, r11.xyzx
  add r13.xyz, -r0.xyzx, cb3[1].xyzx
  div r13.xyz, r13.xyzx, r11.xyzx
  lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
  movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
  min r1.w, r12.y, r12.x
  min r1.w, r12.z, r1.w
  add r12.xyz, r0.xyzx, -cb3[2].xyzx
  mad r11.xyz, r11.xyzx, r1.wwww, r12.xyzx
else 
  mov r11.xyz, r7.xyzx
endif 
mad r1.w, -r3.x, l(0.700000), l(1.700000)
mul r1.w, r1.w, r3.x
mul r1.w, r1.w, l(6.000000)
sample_l r11.xyzw, r11.xyzx, t6.xyzw, s1, r1.w
eq r2.w, cb3[3].w, l(1.000000)
log r6.w, r11.w
mul r6.w, r6.w, cb3[3].y
exp r6.w, r6.w
movc r2.w, r2.w, r6.w, l(1.000000)
mul r2.w, r2.w, cb3[3].x
mul r12.xyz, r11.xyzx, r2.wwww
lt r6.w, cb3[1].w, l(0.999990)
if_nz r6.w
  lt r6.w, l(0.000000), cb3[6].w
  if_nz r6.w
    dp3 r6.w, r7.xyzx, r7.xyzx
    rsq r6.w, r6.w
    mul r13.xyz, r6.wwww, r7.xyzx
    add r14.xyz, -r0.xyzx, cb3[4].xyzx
    div r14.xyz, r14.xyzx, r13.xyzx
    add r15.xyz, -r0.xyzx, cb3[5].xyzx
    div r15.xyz, r15.xyzx, r13.xyzx
    lt r16.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r13.xyzx
    movc r14.xyz, r16.xyzx, r14.xyzx, r15.xyzx
    min r6.w, r14.y, r14.x
    min r6.w, r14.z, r6.w
    add r0.xyz, r0.xyzx, -cb3[6].xyzx
    mad r7.xyz, r13.xyzx, r6.wwww, r0.xyzx
  endif 
  sample_l r7.xyzw, r7.xyzx, t7.xyzw, s1, r1.w
  eq r0.x, cb3[7].w, l(1.000000)
  log r0.y, r7.w
  mul r0.y, r0.y, cb3[7].y
  exp r0.y, r0.y
  movc r0.x, r0.x, r0.y, l(1.000000)
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r7.xyzx, r0.xxxx
  mad r7.xyz, r2.wwww, r11.xyzx, -r0.xyzx
  mad r12.xyz, cb3[1].wwww, r7.xyzx, r0.xyzx
endif 
mul r0.xyz, r12.xyzx, l(0.988235295, 0.988235295, 0.988235295, 0.000000)
dp3 r1.w, r6.xyzx, r6.xyzx
rsq r1.w, r1.w
mul r6.xyz, r1.wwww, r6.xyzx
max r1.w, r5.z, r5.y
max r1.w, r5.w, r1.w
add r1.w, -r1.w, l(1.000000)
mul r4.xyz, r1.wwww, r4.xyzx
mul r4.xyz, r4.wwww, r4.xyzx
add r2.w, -r1.w, l(1.000000)
mad o0.w, r4.w, r1.w, r2.w
mad r7.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r1.w, r7.xyzx, r7.xyzx
max r1.w, r1.w, l(0.001000)
rsq r1.w, r1.w
mul r7.xyz, r1.wwww, r7.xyzx
dp3 r1.w, r6.xyzx, r2.xyzx
dp3_sat r2.x, r6.xyzx, cb2[0].xyzx
dp3_sat r2.y, r6.xyzx, r7.xyzx
dp3_sat r2.z, cb2[0].xyzx, r7.xyzx
mul r4.w, r2.z, r2.z
dp2 r4.w, r4.wwww, r3.xxxx
add r4.w, r4.w, l(-0.500000)
add r6.w, -r2.x, l(1.000000)
mul r7.x, r6.w, r6.w
mul r7.x, r7.x, r7.x
mul r6.w, r6.w, r7.x
mad r6.w, r4.w, r6.w, l(1.000000)
add r7.x, -|r1.w|, l(1.000000)
mul r7.y, r7.x, r7.x
mul r7.y, r7.y, r7.y
mul r7.x, r7.x, r7.y
mad r4.w, r4.w, r7.x, l(1.000000)
mul r4.w, r4.w, r6.w
mul r4.w, r2.x, r4.w
mul r6.w, r3.x, r3.x
mad r7.y, -r3.x, r3.x, l(1.000000)
mad r7.z, |r1.w|, r7.y, r6.w
mad r7.y, r2.x, r7.y, r6.w
mul r1.w, |r1.w|, r7.y
mad r1.w, r2.x, r7.z, r1.w
add r1.w, r1.w, l(0.000010)
div r1.w, l(0.500000), r1.w
mul r7.y, r6.w, r6.w
mad r7.z, r2.y, r7.y, -r2.y
mad r2.y, r7.z, r2.y, l(1.000000)
mul r7.z, r7.y, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r7.z, r2.y
mul r1.w, r1.w, r2.y
mul r1.w, r1.w, l(3.14159274)
mul r1.w, r2.x, r1.w
mad r2.xy, r6.wwww, r6.wwww, l(1.000000, -1.000000, 0.000000, 0.000000)
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
dp3 r6.w, r5.yzwy, r5.yzwy
ne r6.w, r6.w, l(0.000000)
and r6.w, r6.w, l(0x3f800000)
mul r1.w, r1.w, r6.w
add r2.w, r2.w, r5.x
min r2.w, r2.w, l(1.000000)
mul r11.xyz, r4.wwww, cb0[2].xyzx
mad r10.xyz, r10.xyzx, l(0.988235295, 0.988235295, 0.988235295, 0.000000), r11.xyzx
mul r11.xyz, r1.wwww, cb0[2].xyzx
add r1.w, -r2.z, l(1.000000)
mul r2.z, r1.w, r1.w
mul r2.z, r2.z, r2.z
mul r1.w, r1.w, r2.z
mad r3.yzw, r3.yyzw, r1.wwww, r5.yyzw
mul r3.yzw, r3.yyzw, r11.xxyz
mad r3.yzw, r4.xxyz, r10.xxyz, r3.yyzw
mul r0.xyz, r0.xyzx, r2.xxxx
add r2.xzw, -r5.yyzw, r2.wwww
mad r2.xzw, r7.xxxx, r2.xxzw, r5.yyzw
mad r0.xyz, r0.xyzx, r2.xzwx, r3.yzwy
mad r1.xyz, r1.xyzx, r0.wwww, r9.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3_sat r0.w, r6.xyzx, r9.xyzx
dp3_sat r1.w, r6.xyzx, r1.xyzx
dp3_sat r1.x, r9.xyzx, r1.xyzx
mul r1.xy, r1.xwxx, r1.xwxx
mad r1.y, r1.y, r2.y, l(1.000010)
max r1.x, r1.x, l(0.100000)
mad r1.z, r3.x, r3.x, l(0.500000)
mul r1.xy, r1.zyzz, r1.xyxx
mul r1.x, r1.y, r1.x
mul r1.x, r1.x, l(4.000000)
div r1.x, r7.y, r1.x
mad r1.xyz, r1.xxxx, r5.yzwy, r4.xyzx
mul r1.xyz, r8.xyzx, r1.xyzx
mul r1.xyz, r0.wwww, r1.xyzx
mad o0.xyz, r1.xyzx, l(0.988235295, 0.988235295, 0.988235295, 0.000000), r0.xyzx
ret 
// Approximately 0 instruction slots used