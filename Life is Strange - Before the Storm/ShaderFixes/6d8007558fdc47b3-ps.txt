// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6d8007558fdc47b3-ps.txt
// 3DMigoto: 6d8007558fdc47b3 |    Unity headers extracted from Dawn_LISEyeShaderForward
//    Shader "Dawn/LISEyeShaderForward" {
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry" "RenderType"="Opaque" }
//        Pass 3/4 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "QUEUE"="Geometry" "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Dawn_LISEyeShaderForward:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 155 10 4
//   undeciphered1a: 13
//   Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
//   undeciphered2: 1 8 3 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 160
//   Vector 16 [unity_DynamicLightmap_HDR]
//   Float 64 [_irisSize]
//   Float 68 [_pupilSize]
//   Float 72 [_limbus]
//   Float 76 [_parallax]
//   Float 80 [_smoothness]
//   Float 84 [_specularTerm]
//   Float 88 [_HighlightMask]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_CorneaBump] 2D 5
//   SetTexture 1 [_MainTex] 2D 4
//   SetTexture 2 [_IrisTex] 2D 3
//   SetTexture 3 [_IrisColorTex] 2D 2
//   SetTexture 4 [unity_DynamicLightmap] 2D 0
//   SetTexture 5 [unity_DynamicDirectionality] 2D -1
//   SetTexture 6 [unity_SpecCube0] CUBE 1
//   SetTexture 7 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityReflectionProbes" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:36:41 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.zw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6d8007558fdc47b3-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r14.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, v6.xyzx, v6.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, v6.xyzx
add r0.w, cb0[4].x, l(-1.000000)
mul r0.w, r0.w, l(0.500000)
mad r3.xy, v1.xyxx, cb0[4].xxxx, -r0.wwww
sample r4.xyzw, r3.xyxx, t0.xyzw, s5
add r5.xy, r4.wyww, r4.wyww
mad r3.zw, r4.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r0.w, r3.zwzz, r3.zwzz
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r5.z, r0.w
sample r4.xyzw, v1.xyxx, t1.xyzw, s4
sample r3.xyzw, r3.xyxx, t1.xyzw, s4
add r3.xyz, r5.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r3.xyz, r3.wwww, r3.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
sample r5.xyzw, v1.xyxx, t2.xyzw, s3
add r0.w, -r5.z, l(1.000000)
mul r5.yz, cb0[4].xxzx, l(0.000000, 0.600000, 20.000000, 0.000000)
mad r6.xyz, cb0[4].xxxx, l(0.600000, -0.0360000022, -0.0540000089, 0.000000), l(-1.000000, 0.500000, 1.200000, 0.000000)
mul r1.w, r6.x, l(0.500000)
mad r5.yw, v1.xxxy, r5.yyyy, -r1.wwww
add r1.w, -r6.y, r6.z
mad r1.w, cb0[4].y, r1.w, r6.y
mul r2.w, r0.w, r1.w
mad r0.w, r0.w, r1.w, l(-1.000000)
mul r2.w, r2.w, l(0.500000)
mad r6.xy, r5.ywyy, r0.wwww, -r2.wwww
add r0.w, cb0[4].w, cb0[4].w
sample r7.xyzw, r5.ywyy, t2.xyzw, s3
mul r0.w, r0.w, r7.y
mad r5.yw, v1.xxxy, l(0.000000, 0.750000, 0.000000, 0.750000), l(0.000000, 0.125000, 0.000000, 0.125000)
add r2.w, r1.w, l(-1.000000)
mul r2.w, r2.w, l(0.500000)
mad r6.zw, v1.xxxy, r1.wwww, -r2.wwww
add r6.zw, -r5.yyyw, r6.zzzw
mad r5.yw, v1.xxxy, r6.zzzw, r5.yyyw
max r2.xw, -r2.xxxz, l(-0.750000, 0.000000, 0.000000, -0.750000)
min r8.xz, r2.xxwx, l(0.750000, 0.000000, 0.750000, 0.000000)
sample r9.xyzw, r5.ywyy, t2.xyzw, s3
mul r1.w, r0.w, l(0.500000)
mad r0.w, r9.z, r0.w, -r1.w
mov r8.y, -r2.y
dp3 r1.w, r8.xyzx, r8.xyzx
rsq r1.w, r1.w
mul r2.xy, r1.wwww, r8.xyxx
mad r1.w, r8.z, r1.w, l(0.420000)
div r2.xy, r2.xyxx, r1.wwww
mul r5.yw, r0.wwww, r2.xxxy
mul r5.yw, r7.yyyy, r5.yyyw
max r5.yw, r5.yyyw, l(0.000000, -0.100000, 0.000000, -0.100000)
min r5.yw, r5.yyyw, l(0.000000, 0.100000, 0.000000, 0.100000)
add r6.xy, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
add r5.yw, -r5.yyyw, r6.xxxy
sample r7.xyzw, r5.ywyy, t3.xyzw, s2
max r0.w, r2.z, l(0.000000)
mad_sat r0.w, r0.w, l(0.450000), l(-0.200000)
mul r2.zw, r0.wwww, l(0.000000, 0.000000, 0.500000, 0.250000)
mad r1.w, r9.z, r2.z, -r2.w
mad r2.xy, -r1.wwww, r2.xyxx, r6.xyxx
sample r2.xyzw, r2.xyxx, t3.xyzw, s2
add r2.xyz, -r4.xyzx, r7.xyzx
mad r2.xyz, r3.wwww, r2.xyzx, r4.xyzx
mul r4.w, r3.w, cb0[5].x
max r1.w, r3.w, r5.x
mul r4.xyz, r1.wwww, cb0[5].yyyy
add r5.x, -r3.w, l(2.000000)
mul r2.w, r2.w, r5.x
mul r2.w, r3.w, r2.w
mul_sat r0.w, r0.w, r2.w
mad r5.xyz, r2.xyzx, -r5.zzzz, -r2.xyzx
mad r2.xyz, r0.wwww, r5.xyzx, r2.xyzx
add r0.w, cb0[5].z, l(252.000000)
mul r0.w, r0.w, l(0.00392156886)
dp3 r5.x, v2.xyzx, r3.xyzx
dp3 r5.y, v3.xyzx, r3.xyzx
dp3 r5.z, v4.xyzx, r3.xyzx
mad r2.w, -cb0[5].x, r3.w, l(1.000000)
dp3 r3.x, -r1.xyzx, r5.xyzx
add r3.x, r3.x, r3.x
mad r3.xyz, r5.xyzx, -r3.xxxx, -r1.xyzx
sample r6.xyzw, v7.zwzz, t4.xyzw, s0
mul r5.w, r6.w, cb0[1].x
mul r6.xyz, r6.xyzx, r5.wwww
log r6.xyz, r6.xyzx
mul r6.xyz, r6.xyzx, cb0[1].yyyy
exp r6.xyz, r6.xyzx
sample r7.xyzw, v7.zwzz, t5.xyzw, s0
add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r5.w, r5.xyzx, r7.xyzx
add r5.w, r5.w, l(0.500000)
mul r6.xyz, r5.wwww, r6.xyzx
max r5.w, r7.w, l(0.000100)
div r6.xyz, r6.xyzx, r5.wwww
mul r6.xyz, r0.wwww, r6.xyzx
lt r5.w, l(0.000000), cb2[2].w
if_nz r5.w
  dp3 r5.w, r3.xyzx, r3.xyzx
  rsq r5.w, r5.w
  mul r7.xyz, r3.xyzx, r5.wwww
  add r8.xyz, -r0.xyzx, cb2[0].xyzx
  div r8.xyz, r8.xyzx, r7.xyzx
  add r9.xyz, -r0.xyzx, cb2[1].xyzx
  div r9.xyz, r9.xyzx, r7.xyzx
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  min r5.w, r8.y, r8.x
  min r5.w, r8.z, r5.w
  add r8.xyz, r0.xyzx, -cb2[2].xyzx
  mad r7.xyz, r7.xyzx, r5.wwww, r8.xyzx
else 
  mov r7.xyz, r3.xyzx
endif 
mad r5.w, -r2.w, l(0.700000), l(1.700000)
mul r5.w, r2.w, r5.w
mul r5.w, r5.w, l(6.000000)
sample_l r7.xyzw, r7.xyzx, t6.xyzw, s1, r5.w
eq r6.w, cb2[3].w, l(1.000000)
log r7.w, r7.w
mul r7.w, r7.w, cb2[3].y
exp r7.w, r7.w
movc r6.w, r6.w, r7.w, l(1.000000)
mul r6.w, r6.w, cb2[3].x
mul r8.xyz, r7.xyzx, r6.wwww
lt r7.w, cb2[1].w, l(0.999990)
if_nz r7.w
  lt r7.w, l(0.000000), cb2[6].w
  if_nz r7.w
    dp3 r7.w, r3.xyzx, r3.xyzx
    rsq r7.w, r7.w
    mul r9.xyz, r3.xyzx, r7.wwww
    add r10.xyz, -r0.xyzx, cb2[4].xyzx
    div r10.xyz, r10.xyzx, r9.xyzx
    add r11.xyz, -r0.xyzx, cb2[5].xyzx
    div r11.xyz, r11.xyzx, r9.xyzx
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
    min r7.w, r10.y, r10.x
    min r7.w, r10.z, r7.w
    add r0.xyz, r0.xyzx, -cb2[6].xyzx
    mad r3.xyz, r9.xyzx, r7.wwww, r0.xyzx
  endif 
  sample_l r9.xyzw, r3.xyzx, t7.xyzw, s1, r5.w
  eq r0.x, cb2[7].w, l(1.000000)
  log r0.y, r9.w
  mul r0.y, r0.y, cb2[7].y
  exp r0.y, r0.y
  movc r0.x, r0.x, r0.y, l(1.000000)
  mul r0.x, r0.x, cb2[7].x
  mul r0.xyz, r9.xyzx, r0.xxxx
  mad r3.xyz, r6.wwww, r7.xyzx, -r0.xyzx
  mad r8.xyz, cb2[1].wwww, r3.xyzx, r0.xyzx
endif 
mul r0.xyz, r0.wwww, r8.xyzx
max r0.w, r4.z, r4.z
max r0.w, r4.z, r0.w
add r0.w, -r0.w, l(1.000000)
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r1.x, r5.xyzx, r1.xyzx
mul r1.y, r2.w, r2.w
mad r1.y, r1.y, r1.y, l(1.000000)
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
mad r0.w, cb0[5].x, r3.w, -r0.w
add_sat r0.w, r0.w, l(1.000000)
mul r0.xyz, r0.xyzx, r1.yyyy
add r1.x, -|r1.x|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.w, -r1.w, cb0[5].y, r0.w
mad r0.w, r1.x, r0.w, r4.z
mul r0.xyz, r0.wwww, r0.xyzx
mad o3.xyz, r2.xyzx, r6.xyzx, r0.xyzx
mad o2.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mad o0.w, cb0[5].z, l(0.00392156886), l(0.988235354)
mov o0.xyz, r2.xyzx
mov o1.xyzw, r4.xyzw
mov o2.w, l(1.000000)
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used