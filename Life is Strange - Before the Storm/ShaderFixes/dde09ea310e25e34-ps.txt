// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed dde09ea310e25e34-ps.txt
// 3DMigoto: dde09ea310e25e34 | Matched 2 variants of 1 shaders: Hidden/LISDeferredShading
//
//       Unity headers extracted from Hidden_LISDeferredShading
//       Shader "Hidden/LISDeferredShading" {
//         SubShader 1/1 {
//           Pass 1/2 {
//             Tags { "SHADOWSUPPORT"="true" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Hidden_LISDeferredShading:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201608170 272 8 6
//      undeciphered1a: 10
//      Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_HDR_ON" }
//      undeciphered2: 1 7 4 7 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 272
//      Vector 48 [_LightDir]
//      Vector 80 [_LightColor]
//      Vector 208 [_LISSkinSSS]
//      Vector 224 [_LISSkinSpec] 3
//      Vector 240 [_LISHairSpec] 3
//      Matrix 112 [unity_WorldToLight]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      Vector 112 [_ZBufferParams]
//      ConstBuffer "UnityPerCameraRare" 352
//      Matrix 288 [unity_CameraToWorld]
//      ConstBuffer "UnityShadows" 416
//      Vector 384 [_LightShadowData]
//      Vector 400 [unity_ShadowFadeCenterAndType]
//      SetTexture 0 [_CameraDepthTexture] 2D 0
//      SetTexture 1 [_ShadowMapTexture] 2D 2
//      SetTexture 2 [_LightTexture0] 2D 1
//      SetTexture 3 [_CameraGBufferTexture0] 2D 4
//      SetTexture 4 [_CameraGBufferTexture1] 2D 5
//      SetTexture 5 [_CameraGBufferTexture2] 2D 6
//      SetTexture 6 [_LISGlobalLightRamp] 2D 3
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerCameraRare" 2
//      BindCB "UnityShadows" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:39:54 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed dde09ea310e25e34-ps.txt

mul r10.w, -r10.x, r10.y
mad r11.xyz, -r10.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.x, cb1[5].z, v2.z
mul r0.xyz, r0.xxxx, v2.xyzx
div r1.xy, v1.xyxx, v1.wwww
sample r2.xyzw, r1.xyxx, t0.xyzw, s0
mad r0.w, cb1[7].x, r2.x, cb1[7].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r2.xyz, r0.wwww, r0.xyzx
mul r3.xyz, r2.yyyy, cb2[19].xyzx
mad r2.xyw, cb2[18].xyxz, r2.xxxx, r3.xyxz
mad r2.xyw, cb2[20].xyxz, r2.zzzz, r2.xyxw
add r2.xyw, r2.xyxw, cb2[21].xyxz
add r3.xyz, r2.xywx, -cb3[25].xyzx
dp3 r0.x, r3.xyzx, r3.xyzx
sqrt r0.x, r0.x
mad r0.x, -r0.z, r0.w, r0.x
mad r0.x, cb3[25].w, r0.x, r2.z
mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
sample r3.xyzw, r1.xyxx, t1.xyzw, s2
add_sat r0.x, r0.x, r3.x
mul r0.yz, r2.yyyy, cb0[8].xxyx
mad r0.yz, cb0[7].xxyx, r2.xxxx, r0.yyzy
mad r0.yz, cb0[9].xxyx, r2.wwww, r0.yyzy
add r0.yz, r0.yyzy, cb0[10].xxyx
sample_b r3.xyzw, r0.yzyy, t2.xyzw, s1, l(-8.000000)
mul r0.x, r0.x, r3.w
mul r0.xyz, r0.xxxx, cb0[5].xyzx
sample r3.xyzw, r1.xyxx, t3.xyzw, s4
sample r4.xyzw, r1.xyxx, t4.wxyz, s5
sample r1.xyzw, r1.xyxx, t5.xyzw, s6
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r0.xyz, r0.xyzx, r3.wwww
mul r0.w, r1.w, l(3.000000)
ftoi r0.w, r0.w
ieq r1.w, r0.w, l(1)
movc r5.xyz, r1.wwww, cb0[14].xyzx, r4.yzwy
movc r5.xyz, r0.wwww, r5.xyzx, cb0[15].xyzx
add r2.xyz, r2.xywx, -r11.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r6.xyz, r2.wwww, r2.xyzx
if_z r0.w
  mad r4.yzw, r4.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
  dp3 r3.w, r4.yzwy, r4.yzwy
  rsq r3.w, r3.w
  mov_sat r4.x, r4.x
  add r5.w, -r4.x, l(1.000000)
  mad r7.xyz, -r2.xyzx, r2.wwww, -cb0[3].xyzx
  dp3 r6.w, r7.xyzx, r7.xyzx
  max r6.w, r6.w, l(0.001000)
  rsq r6.w, r6.w
  mul r7.xyz, r6.wwww, r7.xyzx
  dp3 r6.w, r1.xyzx, -r6.xyzx
  dp3_sat r8.x, r1.xyzx, -cb0[3].xyzx
  dp3_sat r7.w, -cb0[3].xyzx, r7.xyzx
  mov r8.y, l(0.500000)
  sample r8.xyzw, r8.xyxx, t6.xyzw, s3
  mul r7.w, r7.w, r7.w
  dp2 r7.w, r7.wwww, r5.wwww
  add r7.w, r7.w, l(-0.500000)
  add r8.y, -r8.x, l(1.000000)
  mul r8.z, r8.y, r8.y
  mul r8.z, r8.z, r8.z
  mul r8.y, r8.y, r8.z
  mad r8.y, r7.w, r8.y, l(1.000000)
  add r6.w, -|r6.w|, l(1.000000)
  mul r8.z, r6.w, r6.w
  mul r8.z, r8.z, r8.z
  mul r6.w, r6.w, r8.z
  mad r6.w, r7.w, r6.w, l(1.000000)
  mul r6.w, r6.w, r8.y
  mul r6.w, r8.x, r6.w
  mul r8.xyz, r1.xyzx, l(0.400000, 0.400000, 0.400000, 0.000000)
  mad r4.yzw, r4.yyzw, r3.wwww, r8.xxyz
  dp3_sat r3.w, r4.yzwy, -cb0[3].xyzx
  dp3 r4.y, r4.yzwy, -r6.xyzx
  dp3_sat r4.z, r1.xyzx, r7.xyzx
  mul r4.w, r5.w, r5.w
  mad r5.w, -r5.w, r5.w, l(1.000000)
  mad r7.x, |r4.y|, r5.w, r4.w
  mad r5.w, r3.w, r5.w, r4.w
  mul r4.y, |r4.y|, r5.w
  mad r4.y, r3.w, r7.x, r4.y
  add r4.y, r4.y, l(0.000010)
  div r4.y, l(0.500000), r4.y
  mul r4.w, r4.w, r4.w
  mad r5.w, r4.z, r4.w, -r4.z
  mad r4.z, r5.w, r4.z, l(1.000000)
  mul r4.w, r4.w, l(0.318309873)
  mad r4.z, r4.z, r4.z, l(1.000000012E-007)
  div r4.z, r4.w, r4.z
  mul r4.y, r4.z, r4.y
  mul r4.y, r4.y, l(3.14159274)
  mul r3.w, r3.w, r4.y
  mul r4.y, r3.w, r3.w
  mul r3.w, r3.w, r4.y
  mul r4.yzw, r0.xxyz, r6.wwww
  mul r7.xyz, r0.xyzx, r3.wwww
  mul r7.xyz, r5.xyzx, r7.xyzx
  mad r4.yzw, r3.xxyz, r4.yyzw, r7.xxyz
else 
  ieq r0.w, r0.w, l(2)
  if_nz r0.w
    add r0.w, -r4.x, l(1.000000)
    mad r7.xyz, -r2.xyzx, r2.wwww, -cb0[3].xyzx
    dp3 r3.w, r7.xyzx, r7.xyzx
    max r3.w, r3.w, l(0.001000)
    rsq r3.w, r3.w
    mul r7.xyz, r3.wwww, r7.xyzx
    dp3 r3.w, r1.xyzx, -r6.xyzx
    dp3_sat r8.x, r1.xyzx, -cb0[3].xyzx
    dp3_sat r5.w, r1.xyzx, r7.xyzx
    dp3_sat r6.w, -cb0[3].xyzx, r7.xyzx
    mov r8.y, l(0.500000)
    sample r7.xyzw, r8.xyxx, t6.xyzw, s3
    mul r7.y, r6.w, r6.w
    dp2 r7.y, r7.yyyy, r0.wwww
    add r7.y, r7.y, l(-0.500000)
    add r7.z, -r7.x, l(1.000000)
    mul r7.w, r7.z, r7.z
    mul r7.w, r7.w, r7.w
    mul r7.z, r7.z, r7.w
    mad r7.z, r7.y, r7.z, l(1.000000)
    add r7.w, -|r3.w|, l(1.000000)
    mul r8.x, r7.w, r7.w
    mul r8.x, r8.x, r8.x
    mul r7.w, r7.w, r8.x
    mad r7.y, r7.y, r7.w, l(1.000000)
    mul r7.y, r7.y, r7.z
    mul r7.y, r7.x, r7.y
    mul r7.z, r0.w, r0.w
    mad r0.w, -r0.w, r0.w, l(1.000000)
    mad r7.w, |r3.w|, r0.w, r7.z
    mad r0.w, r7.x, r0.w, r7.z
    mul r0.w, r0.w, |r3.w|
    mad r0.w, r7.x, r7.w, r0.w
    add r0.w, r0.w, l(0.000010)
    div r0.w, l(0.500000), r0.w
    mul r3.w, r7.z, r7.z
    mad r7.z, r5.w, r3.w, -r5.w
    mad r5.w, r7.z, r5.w, l(1.000000)
    mul r3.w, r3.w, l(0.318309873)
    mad r5.w, r5.w, r5.w, l(1.000000012E-007)
    div r3.w, r3.w, r5.w
    mul r0.w, r0.w, r3.w
    mul r0.w, r0.w, l(3.14159274)
    mul r0.w, r7.x, r0.w
    max r0.w, r0.w, l(0.000000)
    dp3 r3.w, r5.xyzx, r5.xyzx
    ne r3.w, r3.w, l(0.000000)
    and r3.w, r3.w, l(0x3f800000)
    mul r0.w, r0.w, r3.w
    mul r7.xyz, r0.xyzx, r7.yyyy
    mul r8.xyz, r0.xyzx, r0.wwww
    add r0.w, -r6.w, l(1.000000)
    mul r3.w, r0.w, r0.w
    mul r3.w, r3.w, r3.w
    mul r0.w, r0.w, r3.w
    add r9.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r9.xyz, r9.xyzx, r0.wwww, r5.xyzx
    mul r8.xyz, r8.xyzx, r9.xyzx
    mad r4.yzw, r3.xxyz, r7.xxyz, r8.xxyz
  else 
    if_nz r1.w
      add r0.w, -r4.x, l(1.000000)
      mad r7.xyz, -r2.xyzx, r2.wwww, -cb0[3].xyzx
      dp3 r1.w, r7.xyzx, r7.xyzx
      max r1.w, r1.w, l(0.001000)
      rsq r1.w, r1.w
      mul r7.xyz, r1.wwww, r7.xyzx
      dp3 r1.w, r1.xyzx, -r6.xyzx
      dp3 r3.w, r1.xyzx, -cb0[3].xyzx
      mov_sat r8.x, r3.w
      dp3_sat r5.w, r1.xyzx, r7.xyzx
      dp3_sat r6.w, -cb0[3].xyzx, r7.xyzx
      mov r8.y, l(0.500000)
      sample r7.xyzw, r8.xyxx, t6.xyzw, s3
      mul r7.y, r6.w, r6.w
      dp2 r7.y, r7.yyyy, r0.wwww
      add r7.y, r7.y, l(-0.500000)
      add r7.z, -r7.x, l(1.000000)
      mul r7.w, r7.z, r7.z
      mul r7.w, r7.w, r7.w
      mul r7.z, r7.z, r7.w
      mad r7.z, r7.y, r7.z, l(1.000000)
      add r7.w, -|r1.w|, l(1.000000)
      mul r8.x, r7.w, r7.w
      mul r8.x, r8.x, r8.x
      mul r7.w, r7.w, r8.x
      mad r7.y, r7.y, r7.w, l(1.000000)
      mul r7.y, r7.y, r7.z
      mul r7.y, r7.x, r7.y
      add r3.w, r3.w, l(-0.100000)
      min r3.w, |r3.w|, l(1.000000)
      add r3.w, -r3.w, l(1.000000)
      mad r7.z, cb0[13].w, l(10.000000), l(2.000000)
      log r3.w, r3.w
      mul r3.w, r3.w, r7.z
      exp r3.w, r3.w
      mul r8.x, r3.w, cb0[13].x
      mul r8.yz, r3.wwww, -cb0[13].yyzy
      add r8.xyz, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r7.yzw, r7.yyyy, r8.xxyz
      mul r3.w, r0.w, r0.w
      mad r0.w, -r0.w, r0.w, l(1.000000)
      mad r8.x, |r1.w|, r0.w, r3.w
      mad r0.w, r7.x, r0.w, r3.w
      mul r0.w, r0.w, |r1.w|
      mad r0.w, r7.x, r8.x, r0.w
      add r0.w, r0.w, l(0.000010)
      div r0.w, l(0.500000), r0.w
      mul r1.w, r3.w, r3.w
      mad r3.w, r5.w, r1.w, -r5.w
      mad r3.w, r3.w, r5.w, l(1.000000)
      mul r1.w, r1.w, l(0.318309873)
      mad r3.w, r3.w, r3.w, l(1.000000012E-007)
      div r1.w, r1.w, r3.w
      mul r0.w, r0.w, r1.w
      mul r0.w, r0.w, l(3.14159274)
      mul r0.w, r7.x, r0.w
      max r0.w, r0.w, l(0.000000)
      dp3 r1.w, r5.xyzx, r5.xyzx
      ne r1.w, r1.w, l(0.000000)
      and r1.w, r1.w, l(0x3f800000)
      mul r0.w, r0.w, r1.w
      mul r7.xyz, r0.xyzx, r7.yzwy
      mul r8.xyz, r0.xyzx, r0.wwww
      add r0.w, -r6.w, l(1.000000)
      mul r1.w, r0.w, r0.w
      mul r1.w, r1.w, r1.w
      mul r0.w, r0.w, r1.w
      add r9.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mad r9.xyz, r9.xyzx, r0.wwww, r5.xyzx
      mul r8.xyz, r8.xyzx, r9.xyzx
      mad r4.yzw, r3.xxyz, r7.xxyz, r8.xxyz
    else 
      add r0.w, -r4.x, l(1.000000)
      mad r2.xyz, -r2.xyzx, r2.wwww, -cb0[3].xyzx
      dp3 r1.w, r2.xyzx, r2.xyzx
      max r1.w, r1.w, l(0.001000)
      rsq r1.w, r1.w
      mul r2.xyz, r1.wwww, r2.xyzx
      dp3 r1.w, r1.xyzx, -r6.xyzx
      dp3_sat r2.w, r1.xyzx, -cb0[3].xyzx
      dp3_sat r1.x, r1.xyzx, r2.xyzx
      dp3_sat r1.y, -cb0[3].xyzx, r2.xyzx
      mul r1.z, r1.y, r1.y
      dp2 r1.z, r1.zzzz, r0.wwww
      add r1.z, r1.z, l(-0.500000)
      add r2.x, -r2.w, l(1.000000)
      mul r2.y, r2.x, r2.x
      mul r2.y, r2.y, r2.y
      mul r2.x, r2.x, r2.y
      mad r2.x, r1.z, r2.x, l(1.000000)
      add r2.y, -|r1.w|, l(1.000000)
      mul r2.z, r2.y, r2.y
      mul r2.z, r2.z, r2.z
      mul r2.y, r2.y, r2.z
      mad r1.z, r1.z, r2.y, l(1.000000)
      mul r1.z, r1.z, r2.x
      mul r1.z, r2.w, r1.z
      mul r2.x, r0.w, r0.w
      mad r0.w, -r0.w, r0.w, l(1.000000)
      mad r2.y, |r1.w|, r0.w, r2.x
      mad r0.w, r2.w, r0.w, r2.x
      mul r0.w, r0.w, |r1.w|
      mad r0.w, r2.w, r2.y, r0.w
      add r0.w, r0.w, l(0.000010)
      div r0.w, l(0.500000), r0.w
      mul r1.w, r2.x, r2.x
      mad r2.x, r1.x, r1.w, -r1.x
      mad r1.x, r2.x, r1.x, l(1.000000)
      mul r1.w, r1.w, l(0.318309873)
      mad r1.x, r1.x, r1.x, l(1.000000012E-007)
      div r1.x, r1.w, r1.x
      mul r0.w, r0.w, r1.x
      mul r0.w, r0.w, l(3.14159274)
      mul r0.w, r2.w, r0.w
      max r0.w, r0.w, l(0.000000)
      dp3 r1.x, r5.xyzx, r5.xyzx
      ne r1.x, r1.x, l(0.000000)
      and r1.x, r1.x, l(0x3f800000)
      mul r0.w, r0.w, r1.x
      mul r1.xzw, r0.xxyz, r1.zzzz
      mul r0.xyz, r0.xyzx, r0.wwww
      add r0.w, -r1.y, l(1.000000)
      mul r1.y, r0.w, r0.w
      mul r1.y, r1.y, r1.y
      mul r0.w, r0.w, r1.y
      add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mad r2.xyz, r2.xyzx, r0.wwww, r5.xyzx
      mul r0.xyz, r0.xyzx, r2.xyzx
      mad r4.yzw, r3.xxyz, r1.xxzw, r0.xxyz
    endif 
  endif 
endif 
mov o0.xyz, r4.yzwy
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used