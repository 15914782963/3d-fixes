// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed e2a140e6777e4846-vs.txt
// 3DMigoto: e2a140e6777e4846 | Matched 10 variants of 1 shaders: Custom/LISStandardSpec
//
//         Unity headers extracted from Custom_LISStandardSpec
//         Shader "Custom/LISStandardSpec" {
//           CustomEditor "LISStandardShaderGUI"
//           Fallback "VertexLit"
//           SubShader 2/2 {
//             LOD 150
//             Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//             Pass 1/4 {
//               Name "FORWARD"
//               Tags { "LIGHTMODE"="ForwardBase" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//               ZWrite [_ZWrite]
//               Program "vp" {
//                 SubProgram "d3d11_9x" {
//                 }
//               }
//             }
//           }
//         }
//
//      Unity 5.3 headers extracted from Custom_LISStandardSpec:
//        API d3d11_9x
//        Shader model vs_4_0_level_9_1
//        undeciphered1: 201608170 49 0 0
//        undeciphered1a: 3
// 387:   Keywords { "DIRECTIONAL" "_EMISSION" "_DETAIL_MULX2" "_SPECGLOSSMAP" }
// 078:   Keywords { "DIRECTIONAL" "_EMISSION" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
//        undeciphered2: 1 0 4 0 0 0
//        undeciphered3: 43 4 0 0 1 2 3 4 5 6
//        ConstBuffer "$Globals" 192
//        Vector 96 [_MainTex_ST]
//        Vector 112 [_DetailAlbedoMap_ST]
//        Float 156 [_UVSec]
//        ConstBuffer "UnityPerCamera" 144
//        Vector 64 [_WorldSpaceCameraPos] 3
//        ConstBuffer "UnityLighting" 720
//        Vector 608 [unity_SHAr]
//        Vector 624 [unity_SHAg]
//        Vector 640 [unity_SHAb]
//        Vector 656 [unity_SHBr]
//        Vector 672 [unity_SHBg]
//        Vector 688 [unity_SHBb]
//        Vector 704 [unity_SHC]
//        ConstBuffer "UnityPerDraw" 352
//        Matrix 0 [glstate_matrix_mvp]
//        Matrix 192 [unity_ObjectToWorld]
//        Matrix 256 [unity_WorldToObject]
//        BindCB "$Globals" 0
//        BindCB "UnityPerCamera" 1
//        BindCB "UnityLighting" 2
//        BindCB "UnityPerDraw" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 05:30:37 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float       
// TEXCOORD                 2   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             6         2  ( FLT, FLT, FLT, FLT)
// c3         cb0             9         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c5         cb2            38         7  ( FLT, FLT, FLT, FLT)
// c12        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c16        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
    def c23, 1, 8, 0.125, 0
    def c24, 0.100000001, 0.0500000007, 0.416666657, 0
    def c25, 1.05499995, -0.0549999997, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord4 v4
    mad oT0.xy, v2, c1, c1.zwzw
    mul r0.x, c3.w, c3.w
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v4
    mad oT0.zw, r2.xyxy, c2.xyxy, c2
    mul r0.xyz, v0.y, c17
    mad r0.xyz, c16, v0.x, r0
    mad r0.xyz, c18, v0.z, r0
    mad r0.xyz, c19, v0.w, r0
    add r0.xyz, r0, -c4
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r0
    dp3 r0.x, v1, c20
    dp3 r0.y, v1, c21
    dp3 r0.z, v1, c22
    nrm r1.xyz, r0
    mov r1.w, c23.x
    dp4 r0.x, c5, r1
    dp4 r0.y, c6, r1
    dp4 r0.z, c7, r1
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    rcp r1.w, r0.w
    mul r2.xyz, r0.w, r0
    mul r0.w, r1.w, c23.y
    mad r1.w, r1.w, c24.x, c24.y
    min r1.w, r1.w, c23.x
    frc r2.w, -r0.w
    add r0.w, r0.w, r2.w
    mul r0.w, r0.w, c23.z
    mad r2.xyz, r2, r0.w, -r0
    mad r0.xyz, r1.w, r2, r0
    mul r0.w, r1.y, r1.y
    mad r0.w, r1.x, r1.x, -r0.w
    mul r2, r1.yzzx, r1.xyzz
    mov oT4.xyz, r1
    dp4 r1.x, c8, r2
    dp4 r1.y, c9, r2
    dp4 r1.z, c10, r2
    mad r1.xyz, c11, r0.w, r1
    add r0.xyz, r0, r1
    max r0.xyz, r0, c23.w
    mov r0.w, c24.z
    lit r1, r0.xxww
    mov r1.x, r1.z
    lit r2, r0.yyww
    lit r0, r0.zzww
    mov r1.z, r0.z
    mov r1.y, r2.z
    mad r0.xyz, r1, c25.x, c25.y
    max oT5.xyz, r0, c23.w
    mul r0, v0.y, c13
    mad r0, c12, v0.x, r0
    mad r0, c14, v0.z, r0
    add r0, r0, c15
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT2, c23.w
    mov oT3, c23.w
    mov oT4.w, c23.w
    mov oT5.w, c23.w

// approximately 65 instruction slots used
vs_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[22], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v4.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_temps 5
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed e2a140e6777e4846-vs.txt

mul r3.w, -r3.x, r3.y
mad r4.xyz, -r3.wwww, cb10[0].xyzw, cb1[4].xyzw

mul r0.xyzw, v0.yyyy, cb3[1].xyzw
mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
add o0.xyzw, r0.xyzw, cb3[3].xyzw
eq r0.x, cb0[9].w, l(0.000000)
movc r0.xy, r0.xxxx, v2.xyxx, v4.xyxx
mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
mul r0.xyz, v0.yyyy, cb3[13].xyzx
mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
add r0.xyz, r0.xyzx, -r4.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o2.xyz, r0.wwww, r0.xyzx
mov o3.xyzw, l(0,0,0,0)
mov o4.xyzw, l(0,0,0,0)
mov o5.w, l(0)
dp3 r0.x, v1.xyzx, cb3[16].xyzx
dp3 r0.y, v1.xyzx, cb3[17].xyzx
dp3 r0.z, v1.xyzx, cb3[18].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mov o5.xyz, r0.xyzx
mov r0.w, l(1.000000)
dp4 r1.x, cb2[38].xyzw, r0.xyzw
dp4 r1.y, cb2[39].xyzw, r0.xyzw
dp4 r1.z, cb2[40].xyzw, r0.xyzw
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r1.w, r0.w
sqrt r0.w, r0.w
mul r2.xyz, r1.wwww, r1.xyzx
mul r1.w, r0.w, l(8.000000)
mad r0.w, r0.w, l(0.100000), l(0.050000)
min r0.w, r0.w, l(1.000000)
round_pi r1.w, r1.w
mul r1.w, r1.w, l(0.125000)
mad r2.xyz, r2.xyzx, r1.wwww, -r1.xyzx
mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
mul r0.w, r0.y, r0.y
mad r0.w, r0.x, r0.x, -r0.w
mul r2.xyzw, r0.yzzx, r0.xyzz
dp4 r0.x, cb2[41].xyzw, r2.xyzw
dp4 r0.y, cb2[42].xyzw, r2.xyzw
dp4 r0.z, cb2[43].xyzw, r2.xyzw
mad r0.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov o6.w, l(0)
ret 
// Approximately 0 instruction slots used