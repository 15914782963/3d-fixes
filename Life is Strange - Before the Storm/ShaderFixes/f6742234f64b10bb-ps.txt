// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f6742234f64b10bb-ps.txt
// 3DMigoto: f6742234f64b10bb |    Unity headers extracted from Dawn_LISEyeShaderForward
//    Shader "Dawn/LISEyeShaderForward" {
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry" "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Dawn_LISEyeShaderForward:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 245 12 4
//   undeciphered1a: 17
//   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" }
//   undeciphered2: 1 8 3 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 144
//   Vector 0 [unity_Lightmap_HDR]
//   Float 64 [_irisSize]
//   Float 68 [_pupilSize]
//   Float 72 [_limbus]
//   Float 76 [_parallax]
//   Float 80 [_smoothness]
//   Float 84 [_specularTerm]
//   Float 88 [_HighlightMask]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_CorneaBump] 2D 5
//   SetTexture 1 [_MainTex] 2D 4
//   SetTexture 2 [_IrisTex] 2D 3
//   SetTexture 3 [_IrisColorTex] 2D 2
//   SetTexture 4 [unity_Lightmap] 2D 0
//   SetTexture 5 [unity_LightmapInd] 2D -1
//   SetTexture 6 [unity_SpecCube0] CUBE 1
//   SetTexture 7 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityReflectionProbes" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 05:37:30 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float       
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v6.xy
dcl_output o0.xyzw
dcl_temps 19
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r17.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f6742234f64b10bb-ps.txt

mul r17.w, -r17.x, r17.y
mad r18.xyz, -r17.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r18.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mul r3.xyz, r2.yyyy, v3.xyzx
mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
add r1.w, cb0[4].x, l(-1.000000)
mul r1.w, r1.w, l(0.500000)
mad r4.xy, v1.xyxx, cb0[4].xxxx, -r1.wwww
sample r5.xyzw, r4.xyxx, t0.xyzw, s5
add r6.xy, r5.wyww, r5.wyww
mad r4.zw, r5.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r1.w, r4.zwzz, r4.zwzz
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r6.z, r1.w
sample r5.xyzw, v1.xyxx, t1.xyzw, s4
sample r4.xyzw, r4.xyxx, t1.xyzw, s4
add r4.xyz, r6.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r4.xyz, r4.wwww, r4.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
sample r6.xyzw, v1.xyxx, t2.xyzw, s3
add r1.w, -r6.z, l(1.000000)
mul r6.yz, cb0[4].xxzx, l(0.000000, 0.600000, 20.000000, 0.000000)
mad r7.xyz, cb0[4].xxxx, l(0.600000, -0.0360000022, -0.0540000089, 0.000000), l(-1.000000, 0.500000, 1.200000, 0.000000)
mul r2.w, r7.x, l(0.500000)
mad r6.yw, v1.xxxy, r6.yyyy, -r2.wwww
add r2.w, -r7.y, r7.z
mad r2.w, cb0[4].y, r2.w, r7.y
mul r3.w, r1.w, r2.w
mad r1.w, r1.w, r2.w, l(-1.000000)
mul r3.w, r3.w, l(0.500000)
mad r7.xy, r6.ywyy, r1.wwww, -r3.wwww
add r1.w, cb0[4].w, cb0[4].w
sample r8.xyzw, r6.ywyy, t2.xyzw, s3
mul r1.w, r1.w, r8.y
mad r6.yw, v1.xxxy, l(0.000000, 0.750000, 0.000000, 0.750000), l(0.000000, 0.125000, 0.000000, 0.125000)
add r3.w, r2.w, l(-1.000000)
mul r3.w, r3.w, l(0.500000)
mad r7.zw, v1.xxxy, r2.wwww, -r3.wwww
add r7.zw, -r6.yyyw, r7.zzzw
mad r6.yw, v1.xxxy, r7.zzzw, r6.yyyw
max r3.xw, -r3.xxxz, l(-0.750000, 0.000000, 0.000000, -0.750000)
min r9.xz, r3.xxwx, l(0.750000, 0.000000, 0.750000, 0.000000)
sample r10.xyzw, r6.ywyy, t2.xyzw, s3
mul r2.w, r1.w, l(0.500000)
mad r1.w, r10.z, r1.w, -r2.w
mov r9.y, -r3.y
dp3 r2.w, r9.xyzx, r9.xyzx
rsq r2.w, r2.w
mul r3.xy, r2.wwww, r9.xyxx
mad r2.w, r9.z, r2.w, l(0.420000)
div r3.xy, r3.xyxx, r2.wwww
mul r6.yw, r1.wwww, r3.xxxy
mul r6.yw, r8.yyyy, r6.yyyw
max r6.yw, r6.yyyw, l(0.000000, -0.100000, 0.000000, -0.100000)
min r6.yw, r6.yyyw, l(0.000000, 0.100000, 0.000000, 0.100000)
add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
add r6.yw, -r6.yyyw, r7.xxxy
sample r8.xyzw, r6.ywyy, t3.xyzw, s2
max r1.w, r3.z, l(0.000000)
mad_sat r1.w, r1.w, l(0.450000), l(-0.200000)
mul r3.zw, r1.wwww, l(0.000000, 0.000000, 0.500000, 0.250000)
mad r2.w, r10.z, r3.z, -r3.w
mad r3.xy, -r2.wwww, r3.xyxx, r7.xyxx
sample r3.xyzw, r3.xyxx, t3.xyzw, s2
add r3.xyz, -r5.xyzx, r8.xyzx
mad r3.xyz, r4.wwww, r3.xyzx, r5.xyzx
max r2.w, r4.w, r6.x
mul r5.x, r2.w, cb0[5].y
add r5.y, -r4.w, l(2.000000)
mul r3.w, r3.w, r5.y
mul r3.w, r4.w, r3.w
mul_sat r1.w, r1.w, r3.w
mad r5.yzw, r3.xxyz, -r6.zzzz, -r3.xxyz
mad r3.xyz, r1.wwww, r5.yzwy, r3.xyzx
add r1.w, cb0[5].z, l(252.000000)
mul r1.w, r1.w, l(0.00392156886)
dp3 r6.x, v2.xyzx, r4.xyzx
dp3 r6.y, v3.xyzx, r4.xyzx
dp3 r6.z, v4.xyzx, r4.xyzx
mad r3.w, -cb0[5].x, r4.w, l(1.000000)
dp3 r4.x, -r2.xyzx, r6.xyzx
add r4.x, r4.x, r4.x
mad r4.xyz, r6.xyzx, -r4.xxxx, -r2.xyzx
sample r7.xyzw, v6.xyxx, t4.xyzw, s0
log r5.y, r7.w
mul r5.y, r5.y, cb0[0].y
exp r5.y, r5.y
mul r5.y, r5.y, cb0[0].x
mul r5.yzw, r7.xxyz, r5.yyyy
sample r7.xyzw, v6.xyxx, t5.xyzw, s0
mad r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r6.w, r7.xyzx, r7.xyzx
sqrt r6.w, r6.w
max r6.w, r6.w, l(0.001000)
div r7.xyz, r7.xyzx, r6.wwww
add r7.w, -r6.w, l(1.000000)
mul r8.xyz, r5.yzwy, r7.wwww
mul r5.yzw, r5.yyzw, r6.wwww
dp3_sat r6.w, r6.xyzx, r7.xyzx
add r9.xy, v6.xyxx, l(0.500000, 0.000000, 0.000000, 0.000000)
sample r10.xyzw, r9.xyxx, t4.xyzw, s0
log r7.w, r10.w
mul r7.w, r7.w, cb0[0].y
exp r7.w, r7.w
mul r7.w, r7.w, cb0[0].x
mul r10.xyz, r10.xyzx, r7.wwww
sample r9.xyzw, r9.xyxx, t5.xyzw, s0
mad r9.xyz, r9.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r7.w, r9.xyzx, r9.xyzx
sqrt r7.w, r7.w
max r7.w, r7.w, l(0.001000)
div r9.xyz, r9.xyzx, r7.wwww
add r8.w, -r7.w, l(1.000000)
mul r11.xyz, r8.wwww, r10.xyzx
mul r10.xyz, r7.wwww, r10.xyzx
dp3_sat r7.w, r6.xyzx, r9.xyzx
mul r11.xyz, r7.wwww, r11.xyzx
mad r8.xyz, r8.xyzx, r6.wwww, r11.xyzx
lt r6.w, l(0.000000), cb2[2].w
if_nz r6.w
  dp3 r6.w, r4.xyzx, r4.xyzx
  rsq r6.w, r6.w
  mul r11.xyz, r4.xyzx, r6.wwww
  add r12.xyz, -r0.xyzx, cb2[0].xyzx
  div r12.xyz, r12.xyzx, r11.xyzx
  add r13.xyz, -r0.xyzx, cb2[1].xyzx
  div r13.xyz, r13.xyzx, r11.xyzx
  lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
  movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
  min r6.w, r12.y, r12.x
  min r6.w, r12.z, r6.w
  add r12.xyz, r0.xyzx, -cb2[2].xyzx
  mad r11.xyz, r11.xyzx, r6.wwww, r12.xyzx
else 
  mov r11.xyz, r4.xyzx
endif 
mad r6.w, -r3.w, l(0.700000), l(1.700000)
mul r6.w, r3.w, r6.w
mul r6.w, r6.w, l(6.000000)
sample_l r11.xyzw, r11.xyzx, t6.xyzw, s1, r6.w
eq r7.w, cb2[3].w, l(1.000000)
log r8.w, r11.w
mul r8.w, r8.w, cb2[3].y
exp r8.w, r8.w
movc r7.w, r7.w, r8.w, l(1.000000)
mul r7.w, r7.w, cb2[3].x
mul r12.xyz, r11.xyzx, r7.wwww
lt r8.w, cb2[1].w, l(0.999990)
if_nz r8.w
  lt r8.w, l(0.000000), cb2[6].w
  if_nz r8.w
    dp3 r8.w, r4.xyzx, r4.xyzx
    rsq r8.w, r8.w
    mul r13.xyz, r4.xyzx, r8.wwww
    add r14.xyz, -r0.xyzx, cb2[4].xyzx
    div r14.xyz, r14.xyzx, r13.xyzx
    add r15.xyz, -r0.xyzx, cb2[5].xyzx
    div r15.xyz, r15.xyzx, r13.xyzx
    lt r16.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r13.xyzx
    movc r14.xyz, r16.xyzx, r14.xyzx, r15.xyzx
    min r8.w, r14.y, r14.x
    min r8.w, r14.z, r8.w
    add r0.xyz, r0.xyzx, -cb2[6].xyzx
    mad r4.xyz, r13.xyzx, r8.wwww, r0.xyzx
  endif 
  sample_l r13.xyzw, r4.xyzx, t7.xyzw, s1, r6.w
  eq r0.x, cb2[7].w, l(1.000000)
  log r0.y, r13.w
  mul r0.y, r0.y, cb2[7].y
  exp r0.y, r0.y
  movc r0.x, r0.x, r0.y, l(1.000000)
  mul r0.x, r0.x, cb2[7].x
  mul r0.xyz, r13.xyzx, r0.xxxx
  mad r4.xyz, r7.wwww, r11.xyzx, -r0.xyzx
  mad r12.xyz, cb2[1].wwww, r4.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.wwww, r12.xyzx
dp3 r4.x, r6.xyzx, r6.xyzx
rsq r4.x, r4.x
mul r4.xyz, r4.xxxx, r6.xyzx
max r6.x, r5.x, r5.x
max r6.x, r5.x, r6.x
add r6.x, -r6.x, l(1.000000)
mul r3.xyz, r3.xyzx, r6.xxxx
mad r6.yzw, r1.xxyz, r0.wwww, r7.xxyz
dp3 r7.w, r6.yzwy, r6.yzwy
max r7.w, r7.w, l(0.001000)
rsq r7.w, r7.w
mul r6.yzw, r6.yyzw, r7.wwww
dp3 r2.x, r4.xyzx, r2.xyzx
dp3_sat r2.y, r4.xyzx, r7.xyzx
dp3_sat r2.z, r4.xyzx, r6.yzwy
dp3_sat r6.y, r7.xyzx, r6.yzwy
add r6.z, r6.y, r6.y
mul r6.z, r6.y, r6.z
mad r6.z, r6.z, r3.w, l(-0.500000)
add r6.w, -r2.y, l(1.000000)
mul r7.x, r6.w, r6.w
mul r7.x, r7.x, r7.x
mul r6.w, r6.w, r7.x
mad r6.w, r6.z, r6.w, l(1.000000)
add r7.x, -|r2.x|, l(1.000000)
mul r7.y, r7.x, r7.x
mul r7.y, r7.y, r7.y
mul r7.x, r7.x, r7.y
mad r6.z, r6.z, r7.x, l(1.000000)
mul r6.z, r6.z, r6.w
mul r6.z, r2.y, r6.z
mul r6.w, r3.w, r3.w
mad r7.y, -r3.w, r3.w, l(1.000000)
mad r7.z, |r2.x|, r7.y, r6.w
mad r7.y, r2.y, r7.y, r6.w
mul r2.x, |r2.x|, r7.y
mad r2.x, r2.y, r7.z, r2.x
add r2.x, r2.x, l(0.000010)
div r2.x, l(0.500000), r2.x
mul r7.y, r6.w, r6.w
mad r7.z, r2.z, r7.y, -r2.z
mad r2.z, r7.z, r2.z, l(1.000000)
mul r7.z, r7.y, l(0.318309873)
mad r2.z, r2.z, r2.z, l(1.000000012E-007)
div r2.z, r7.z, r2.z
mul r2.x, r2.z, r2.x
mul r2.x, r2.x, l(3.14159274)
mul r2.x, r2.y, r2.x
max r2.x, r2.x, l(0.000000)
mad r2.yz, r6.wwww, r6.wwww, l(0.000000, 1.000000, -1.000000, 0.000000)
div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
dp3 r6.w, r5.xxxx, r5.xxxx
ne r6.w, r6.w, l(0.000000)
and r6.w, r6.w, l(0x3f800000)
mul r2.x, r2.x, r6.w
mad r4.w, cb0[5].x, r4.w, -r6.x
add_sat r4.w, r4.w, l(1.000000)
mul r6.xzw, r5.yyzw, r6.zzzz
mad r6.xzw, r8.xxyz, r1.wwww, r6.xxzw
mul r5.yzw, r5.yyzw, r2.xxxx
add r2.x, -r6.y, l(1.000000)
mul r6.y, r2.x, r2.x
mul r6.y, r6.y, r6.y
mul r2.x, r2.x, r6.y
mad r6.y, -r2.w, cb0[5].y, l(1.000000)
mad r2.x, r6.y, r2.x, r5.x
mul r5.yzw, r2.xxxx, r5.yyzw
mad r5.yzw, r3.xxyz, r6.xxzw, r5.yyzw
mul r0.xyz, r0.xyzx, r2.yyyy
mad r2.x, -r2.w, cb0[5].y, r4.w
mad r2.x, r7.x, r2.x, r5.x
mad r0.xyz, r0.xyzx, r2.xxxx, r5.yzwy
mad r1.xyz, r1.xyzx, r0.wwww, r9.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3_sat r0.w, r4.xyzx, r9.xyzx
dp3_sat r2.x, r4.xyzx, r1.xyzx
dp3_sat r1.x, r9.xyzx, r1.xyzx
mul r1.y, r2.x, r2.x
mad r1.y, r1.y, r2.z, l(1.000010)
mul r1.x, r1.x, r1.x
max r1.x, r1.x, l(0.100000)
mad r1.z, r3.w, r3.w, l(0.500000)
mul r1.xy, r1.zyzz, r1.xyxx
mul r1.x, r1.y, r1.x
mul r1.x, r1.x, l(4.000000)
div r1.x, r7.y, r1.x
mad r1.xyz, r1.xxxx, r5.xxxx, r3.xyzx
mul r1.xyz, r10.xyzx, r1.xyzx
mul r1.xyz, r0.wwww, r1.xyzx
mad o0.xyz, r1.xyzx, r1.wwww, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used