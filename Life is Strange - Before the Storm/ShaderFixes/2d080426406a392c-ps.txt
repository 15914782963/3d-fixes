// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2d080426406a392c-ps.txt
// 3DMigoto: 2d080426406a392c | Matched 8 variants of 1 shaders: Custom/S_WindLeaf
//
//        Unity headers extracted from Custom_S_WindLeaf
//        Shader "Custom/S_WindLeaf" {
//          Fallback "Transparent/Cutout/Diffuse"
//          SubShader 1/1 {
//            LOD 200
//            Tags { "QUEUE"="Geometry+1" "RenderType"="Opaque" }
//            Pass 2/5 {
//              Name "FORWARD"
//              Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Geometry+1" "RenderType"="Opaque" }
//              ZWrite Off
//              Program "fp" {
//                SubProgram "d3d11" {
//                }
//              }
//            }
//          }
//        }
//
//     Unity 5.3 headers extracted from Custom_S_WindLeaf:
//       API d3d11
//       Shader model ps_4_0
//       undeciphered1: 201608170 102 5 0
//       undeciphered1a: 6
//       Keywords { "SPOT" "FOG_LINEAR" }
//       undeciphered2: 1 5 4 5 0 0
//       undeciphered3: 0 0
//       ConstBuffer "$Globals" 240
//       Vector 32 [_LightColor0]
//       Float 136 [_BumpScale]
//       Vector 160 [_Color]
//       Float 224 [_Cutoff]
//       Matrix 64 [unity_WorldToLight]
//       ConstBuffer "UnityPerCamera" 144
//       Vector 64 [_WorldSpaceCameraPos] 3
//       Vector 80 [_ProjectionParams]
//       ConstBuffer "UnityLighting" 720
//       Vector 0 [_WorldSpaceLightPos0]
//       ConstBuffer "UnityFog" 32
//       Vector 16 [unity_FogParams]
//       SetTexture 0 [_MainTex] 2D 2
//       SetTexture 1 [_SpecGlossMap] 2D 3
//       SetTexture 2 [_BumpMap] 2D 4
//       SetTexture 3 [_LightTexture0] 2D 0
//       SetTexture 4 [_LightTextureB0] 2D 1
//       BindCB "$Globals" 0
//       BindCB "UnityPerCamera" 1
//       BindCB "UnityLighting" 2
//       BindCB "UnityFog" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 04:32:16 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 5     zw        1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// SV_IsFrontFace           0   x           6    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps_sgv v6.x, is_front_face
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2d080426406a392c-ps.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s2
mad r1.x, r0.w, cb0[10].w, -cb0[14].x
mul r0.xyzw, r0.xyzw, cb0[10].xyzw
lt r1.x, r1.x, l(0.000000)
discard_nz r1.x
mul r1.xyzw, v5.yyyy, cb0[5].xyzw
mad r1.xyzw, cb0[4].xyzw, v5.xxxx, r1.xyzw
mad r1.xyzw, cb0[6].xyzw, v5.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb0[7].xyzw
div r2.xy, r1.xyxx, r1.wwww
add r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample r2.xyzw, r2.xyxx, t3.xyzw, s0
lt r1.w, l(0.000000), r1.z
dp3 r1.x, r1.xyzx, r1.xyzx
sample r3.xyzw, r1.xxxx, t4.xyzw, s1
and r1.x, r1.w, l(0x3f800000)
mul r1.x, r2.w, r1.x
mul r1.x, r3.x, r1.x
mul r1.xyz, r1.xxxx, cb0[2].xyzx
sample r2.xyzw, v1.xyxx, t2.xyzw, s4
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, cb0[8].zzzz
dp2 r1.w, r2.xyxx, r2.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r2.z, r1.w
movc r1.w, v6.x, l(1.000000), l(-1.000000)
mul r2.xyz, r1.wwww, r2.xyzx
dp3 r3.x, v2.xyzx, r2.xyzx
dp3 r3.y, v3.xyzx, r2.xyzx
dp3 r3.z, v4.xyzx, r2.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r3.xyzx
add r3.xyz, -v5.xyzx, r7.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
add r4.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mad r5.xyz, r4.xyzx, r1.wwww, r3.xyzx
dp3 r2.w, r2.xyzx, r3.xyzx
mul r3.xyz, r1.wwww, r4.xyzx
dp3 r1.w, r5.xyzx, r5.xyzx
max r1.w, r1.w, l(0.001000)
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r5.xyzx
dp3_sat r1.w, r2.xyzx, r4.xyzx
dp3_sat r2.x, r2.xyzx, r3.xyzx
dp3_sat r2.y, r3.xyzx, r4.xyzx
sample r3.xyzw, v1.xyxx, t1.xyzw, s3
add r4.xyzw, -r3.wxyz, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r2.z, r4.x, r4.x
mul r3.w, r2.z, r2.z
mad r5.x, r1.w, r3.w, -r1.w
mad r1.w, r5.x, r1.w, l(1.000000)
mad r1.w, r1.w, r1.w, l(1.000000012E-007)
mul r3.w, r3.w, l(0.318309873)
div r1.w, r3.w, r1.w
mad r3.w, -r4.x, r4.x, l(1.000000)
mad r5.x, |r2.w|, r3.w, r2.z
mad r2.z, r2.x, r3.w, r2.z
mul r2.z, r2.z, |r2.w|
add r2.w, -|r2.w|, l(1.000000)
mad r2.z, r2.x, r5.x, r2.z
add r2.z, r2.z, l(0.000010)
div r2.z, l(0.500000), r2.z
mul r1.w, r1.w, r2.z
mul r1.w, r1.w, l(3.14159274)
mul r1.w, r2.x, r1.w
max r1.w, r1.w, l(0.000000)
dp3 r2.z, r3.xyzx, r3.xyzx
ne r2.z, r2.z, l(0.000000)
and r2.z, r2.z, l(0x3f800000)
mul r1.w, r1.w, r2.z
mul r5.xyz, r1.xyzx, r1.wwww
add r1.w, -r2.y, l(1.000000)
mul r2.y, r2.y, r2.y
dp2 r2.y, r2.yyyy, r4.xxxx
add r2.y, r2.y, l(-0.500000)
mul r2.z, r1.w, r1.w
mul r2.z, r2.z, r2.z
mul r1.w, r1.w, r2.z
mad r4.xyz, r4.yzwy, r1.wwww, r3.xyzx
mul r4.xyz, r4.xyzx, r5.xyzx
mul r1.w, r2.w, r2.w
mul r1.w, r1.w, r1.w
mul r1.w, r2.w, r1.w
mad r1.w, r2.y, r1.w, l(1.000000)
add r2.z, -r2.x, l(1.000000)
mul r2.w, r2.z, r2.z
mul r2.w, r2.w, r2.w
mul r2.z, r2.z, r2.w
mad r2.y, r2.y, r2.z, l(1.000000)
mul r1.w, r1.w, r2.y
mul r1.w, r2.x, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
max r1.w, r3.y, r3.x
max r1.w, r3.z, r1.w
add r1.w, -r1.w, l(1.000000)
mul r0.xyz, r0.xyzx, r1.wwww
mov o0.w, r0.w
mad r0.xyz, r0.xyzx, r1.xyzx, r4.xyzx
div r0.w, v2.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
mul o0.xyz, r0.xyzx, r0.wwww
ret 
// Approximately 0 instruction slots used