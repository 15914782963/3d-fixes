// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5c5e728798904e90-ps.txt
// 3DMigoto: 5c5e728798904e90 |    Unity headers extracted from Custom_StandardSpecSurface
//    Shader "Custom/StandardSpecSurface" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_StandardSpecSurface:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 137 5 4
//   undeciphered1a: 16
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" }
//   undeciphered2: 1 7 4 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 112
//   Vector 16 [unity_DynamicLightmap_HDR]
//   Vector 32 [_LightColor0]
//   Vector 80 [_Color]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 3
//   SetTexture 1 [_SpecGlossMap] 2D 4
//   SetTexture 2 [_BumpMap] 2D 5
//   SetTexture 3 [_ShadowMapTexture] 2D 2
//   SetTexture 4 [unity_DynamicLightmap] 2D 0
//   SetTexture 5 [unity_SpecCube0] CUBE 1
//   SetTexture 6 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:36:11 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xy w
// TEXCOORD                 7   xyzw        6     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyw
dcl_input_ps linear v6.zw
dcl_output o0.xyzw
dcl_temps 18
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r16.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5c5e728798904e90-ps.txt

mul r16.w, -r16.x, r16.y
mad r17.xyz, -r16.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r17.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
sample r3.xyzw, v1.xyxx, t0.xyzw, s3
mul r3.xyz, r3.xyzx, cb0[5].xyzx
sample r4.xyzw, v1.xyxx, t1.xyzw, s4
sample r5.xyzw, v1.xyxx, t2.xyzw, s5
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
div r6.xy, v5.xyxx, v5.wwww
sample r6.xyzw, r6.xyxx, t3.xyzw, s2
dp3 r7.x, v2.xyzx, r5.xyzx
dp3 r7.y, v3.xyzx, r5.xyzx
dp3 r7.z, v4.xyzx, r5.xyzx
add r5.xyzw, -r4.wxyz, l(1.000000, 1.000000, 1.000000, 1.000000)
dp3 r1.w, -r2.xyzx, r7.xyzx
add r1.w, r1.w, r1.w
mad r6.yzw, r7.xxyz, -r1.wwww, -r2.xxyz
mul r8.xyz, r6.xxxx, cb0[2].xyzx
sample r9.xyzw, v6.zwzz, t4.xyzw, s0
mul r1.w, r9.w, cb0[1].x
mul r9.xyz, r9.xyzx, r1.wwww
log r9.xyz, r9.xyzx
mul r9.xyz, r9.xyzx, cb0[1].yyyy
exp r9.xyz, r9.xyzx
lt r1.w, l(0.000000), cb3[2].w
if_nz r1.w
  dp3 r1.w, r6.yzwy, r6.yzwy
  rsq r1.w, r1.w
  mul r10.xyz, r1.wwww, r6.yzwy
  add r11.xyz, -r0.xyzx, cb3[0].xyzx
  div r11.xyz, r11.xyzx, r10.xyzx
  add r12.xyz, -r0.xyzx, cb3[1].xyzx
  div r12.xyz, r12.xyzx, r10.xyzx
  lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  min r1.w, r11.y, r11.x
  min r1.w, r11.z, r1.w
  add r11.xyz, r0.xyzx, -cb3[2].xyzx
  mad r10.xyz, r10.xyzx, r1.wwww, r11.xyzx
else 
  mov r10.xyz, r6.yzwy
endif 
mad r1.w, -r5.x, l(0.700000), l(1.700000)
mul r1.w, r1.w, r5.x
mul r1.w, r1.w, l(6.000000)
sample_l r10.xyzw, r10.xyzx, t5.xyzw, s1, r1.w
eq r2.w, cb3[3].w, l(1.000000)
log r3.w, r10.w
mul r3.w, r3.w, cb3[3].y
exp r3.w, r3.w
movc r2.w, r2.w, r3.w, l(1.000000)
mul r2.w, r2.w, cb3[3].x
mul r11.xyz, r10.xyzx, r2.wwww
lt r3.w, cb3[1].w, l(0.999990)
if_nz r3.w
  lt r3.w, l(0.000000), cb3[6].w
  if_nz r3.w
    dp3 r3.w, r6.yzwy, r6.yzwy
    rsq r3.w, r3.w
    mul r12.xyz, r3.wwww, r6.yzwy
    add r13.xyz, -r0.xyzx, cb3[4].xyzx
    div r13.xyz, r13.xyzx, r12.xyzx
    add r14.xyz, -r0.xyzx, cb3[5].xyzx
    div r14.xyz, r14.xyzx, r12.xyzx
    lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
    movc r13.xyz, r15.xyzx, r13.xyzx, r14.xyzx
    min r3.w, r13.y, r13.x
    min r3.w, r13.z, r3.w
    add r0.xyz, r0.xyzx, -cb3[6].xyzx
    mad r6.yzw, r12.xxyz, r3.wwww, r0.xxyz
  endif 
  sample_l r6.xyzw, r6.yzwy, t6.xyzw, s1, r1.w
  eq r0.x, cb3[7].w, l(1.000000)
  log r0.y, r6.w
  mul r0.y, r0.y, cb3[7].y
  exp r0.y, r0.y
  movc r0.x, r0.x, r0.y, l(1.000000)
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r6.xyzx, r0.xxxx
  mad r6.xyz, r2.wwww, r10.xyzx, -r0.xyzx
  mad r11.xyz, cb3[1].wwww, r6.xyzx, r0.xyzx
endif 
dp3 r0.x, r7.xyzx, r7.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r7.xyzx
max r1.w, r4.y, r4.x
max r1.w, r4.z, r1.w
add r1.w, -r1.w, l(1.000000)
mul r3.xyz, r1.wwww, r3.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r0.xyzx, r2.xyzx
dp3_sat r2.x, r0.xyzx, cb2[0].xyzx
dp3_sat r0.x, r0.xyzx, r1.xyzx
dp3_sat r0.y, cb2[0].xyzx, r1.xyzx
mul r0.z, r0.y, r0.y
dp2 r0.z, r0.zzzz, r5.xxxx
add r0.z, r0.z, l(-0.500000)
add r1.x, -r2.x, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r1.x, r0.z, r1.x, l(1.000000)
add r1.y, -|r0.w|, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
mad r0.z, r0.z, r1.y, l(1.000000)
mul r0.z, r0.z, r1.x
mul r1.x, r5.x, r5.x
mad r1.z, -r5.x, r5.x, l(1.000000)
mad r2.y, |r0.w|, r1.z, r1.x
mad r1.z, r2.x, r1.z, r1.x
mul r0.w, |r0.w|, r1.z
mad r0.w, r2.x, r2.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r1.z, r1.x, r1.x
mad r2.y, r0.x, r1.z, -r0.x
mad r0.x, r2.y, r0.x, l(1.000000)
mul r1.z, r1.z, l(0.318309873)
mad r0.x, r0.x, r0.x, l(1.000000012E-007)
div r0.x, r1.z, r0.x
mul r0.x, r0.x, r0.w
mul r0.x, r0.x, l(3.14159274)
mul r0.xz, r2.xxxx, r0.xxzx
max r0.x, r0.x, l(0.000000)
mad r0.w, r1.x, r1.x, l(1.000000)
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
dp3 r1.x, r4.xyzx, r4.xyzx
ne r1.x, r1.x, l(0.000000)
and r1.x, r1.x, l(0x3f800000)
mul r0.x, r0.x, r1.x
add r1.x, -r1.w, r4.w
add_sat r1.x, r1.x, l(1.000000)
mad r2.xyz, r8.xyzx, r0.zzzz, r9.xyzx
mul r6.xyz, r8.xyzx, r0.xxxx
add r0.x, -r0.y, l(1.000000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.x, r0.y
mad r0.xyz, r5.yzwy, r0.xxxx, r4.xyzx
mul r0.xyz, r0.xyzx, r6.xyzx
mad r0.xyz, r3.xyzx, r2.xyzx, r0.xyzx
mul r2.xyz, r11.xyzx, r0.wwww
add r1.xzw, -r4.xxyz, r1.xxxx
mad r1.xyz, r1.yyyy, r1.xzwx, r4.xyzx
mad o0.xyz, r2.xyzx, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used