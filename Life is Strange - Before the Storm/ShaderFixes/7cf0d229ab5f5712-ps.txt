// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7cf0d229ab5f5712-ps.txt
// 3DMigoto: 7cf0d229ab5f5712 |    Unity headers extracted from Dawn_VFX_FractalScreenSaver
//    Shader "Dawn/VFX/FractalScreenSaver" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Dawn_VFX_FractalScreenSaver:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 154 5 7
//   undeciphered1a: 16
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" }
//   undeciphered2: 1 7 4 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 96
//   Vector 16 [unity_DynamicLightmap_HDR]
//   Vector 32 [_LightColor0]
//   Float 64 [_HighlightMask]
//   Float 68 [_Emissive]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 3
//   SetTexture 1 [_Specular] 2D 5
//   SetTexture 2 [_ScanLines] 2D 4
//   SetTexture 3 [_ShadowMapTexture] 2D 2
//   SetTexture 4 [unity_DynamicLightmap] 2D 0
//   SetTexture 5 [unity_SpecCube0] CUBE 1
//   SetTexture 6 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 04:57:38 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 3     zw        1     NONE   float     zw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 5   xyzw        4     NONE   float   xy w
// TEXCOORD                 7   xyzw        5     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[5], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyw
dcl_input_ps linear v5.zw
dcl_output o0.xyzw
dcl_temps 18
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r16.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7cf0d229ab5f5712-ps.txt

mul r16.w, -r16.x, r16.y
mad r17.xyz, -r16.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, r17.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r1.w, r2.x, l(1.500000)
add r2.x, r2.y, r2.y
mov r3.x, r1.w
mov r3.y, r2.x
mov r2.y, l(0)
loop 
  ige r2.z, r2.y, l(16)
  breakc_nz r2.z
  mul r2.z, r3.y, r3.y
  mad r4.x, r3.x, r3.x, -r2.z
  dp2 r4.y, r3.yyyy, r3.xxxx
  add r3.xy, r4.xyxx, v1.zwzz
  dp2 r2.z, r3.xyxx, r3.xyxx
  lt r2.z, l(4.000000), r2.z
  if_nz r2.z
    break 
  endif 
  iadd r2.y, r2.y, l(1)
endloop 
itof r1.w, r2.y
mul r2.x, r1.w, l(0.062500)
mov r2.y, l(0.500000)
sample r2.xyzw, r2.xyxx, t0.xyzw, s3
sample r3.xyzw, v1.xyxx, t1.xyzw, s5
mul r4.xy, v1.xyxx, l(4.000000, 128.000000, 0.000000, 0.000000)
sample r4.xyzw, r4.xyxx, t2.xyzw, s4
dp3_sat r1.w, v2.xyzx, r1.xyzx
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mul r5.xyz, r2.xyzx, cb0[4].yyyy
mul r2.xyz, r4.xyzx, r2.xyzx
add r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
min r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r1.w, cb0[4].x, l(252.000000)
mul r1.w, r1.w, l(0.00392156886)
div r6.xy, v4.xyxx, v4.wwww
sample r6.xyzw, r6.xyxx, t3.xyzw, s2
add r7.xyzw, -r3.wxyz, l(1.000000, 1.000000, 1.000000, 1.000000)
dp3 r2.w, -r1.xyzx, v2.xyzx
add r2.w, r2.w, r2.w
mad r6.yzw, v2.xxyz, -r2.wwww, -r1.xxyz
mul r8.xyz, r6.xxxx, cb0[2].xyzx
sample r9.xyzw, v5.zwzz, t4.xyzw, s0
mul r2.w, r9.w, cb0[1].x
mul r9.xyz, r9.xyzx, r2.wwww
log r9.xyz, r9.xyzx
mul r9.xyz, r9.xyzx, cb0[1].yyyy
exp r9.xyz, r9.xyzx
lt r2.w, l(0.000000), cb3[2].w
if_nz r2.w
  dp3 r2.w, r6.yzwy, r6.yzwy
  rsq r2.w, r2.w
  mul r10.xyz, r2.wwww, r6.yzwy
  add r11.xyz, -v3.xyzx, cb3[0].xyzx
  div r11.xyz, r11.xyzx, r10.xyzx
  add r12.xyz, -v3.xyzx, cb3[1].xyzx
  div r12.xyz, r12.xyzx, r10.xyzx
  lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  min r2.w, r11.y, r11.x
  min r2.w, r11.z, r2.w
  add r11.xyz, v3.xyzx, -cb3[2].xyzx
  mad r10.xyz, r10.xyzx, r2.wwww, r11.xyzx
else 
  mov r10.xyz, r6.yzwy
endif 
mad r2.w, -r7.x, l(0.700000), l(1.700000)
mul r2.w, r2.w, r7.x
mul r2.w, r2.w, l(6.000000)
sample_l r10.xyzw, r10.xyzx, t5.xyzw, s1, r2.w
eq r4.w, cb3[3].w, l(1.000000)
log r5.w, r10.w
mul r5.w, r5.w, cb3[3].y
exp r5.w, r5.w
movc r4.w, r4.w, r5.w, l(1.000000)
mul r4.w, r4.w, cb3[3].x
mul r11.xyz, r10.xyzx, r4.wwww
lt r5.w, cb3[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb3[6].w
  if_nz r5.w
    dp3 r5.w, r6.yzwy, r6.yzwy
    rsq r5.w, r5.w
    mul r12.xyz, r5.wwww, r6.yzwy
    add r13.xyz, -v3.xyzx, cb3[4].xyzx
    div r13.xyz, r13.xyzx, r12.xyzx
    add r14.xyz, -v3.xyzx, cb3[5].xyzx
    div r14.xyz, r14.xyzx, r12.xyzx
    lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
    movc r13.xyz, r15.xyzx, r13.xyzx, r14.xyzx
    min r5.w, r13.y, r13.x
    min r5.w, r13.z, r5.w
    add r13.xyz, v3.xyzx, -cb3[6].xyzx
    mad r6.yzw, r12.xxyz, r5.wwww, r13.xxyz
  endif 
  sample_l r6.xyzw, r6.yzwy, t6.xyzw, s1, r2.w
  eq r2.w, cb3[7].w, l(1.000000)
  log r5.w, r6.w
  mul r5.w, r5.w, cb3[7].y
  exp r5.w, r5.w
  movc r2.w, r2.w, r5.w, l(1.000000)
  mul r2.w, r2.w, cb3[7].x
  mul r6.xyz, r6.xyzx, r2.wwww
  mad r10.xyz, r4.wwww, r10.xyzx, -r6.xyzx
  mad r11.xyz, cb3[1].wwww, r10.xyzx, r6.xyzx
endif 
mul r6.xyz, r1.wwww, r11.xyzx
dp3 r2.w, v2.xyzx, v2.xyzx
rsq r2.w, r2.w
mul r10.xyz, r2.wwww, v2.xyzx
max r2.w, r3.y, r3.x
max r2.w, r3.z, r2.w
add r2.w, -r2.w, l(1.000000)
mul r2.xyz, r2.wwww, r2.xyzx
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r10.xyzx, r1.xyzx
dp3_sat r1.x, r10.xyzx, cb2[0].xyzx
dp3_sat r1.y, r10.xyzx, r0.xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r7.xxxx
add r0.y, r0.y, l(-0.500000)
add r0.z, -r1.x, l(1.000000)
mul r1.z, r0.z, r0.z
mul r1.z, r1.z, r1.z
mul r0.z, r0.z, r1.z
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.z, -|r0.w|, l(1.000000)
mul r4.w, r1.z, r1.z
mul r4.w, r4.w, r4.w
mul r1.z, r1.z, r4.w
mad r0.y, r0.y, r1.z, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r7.x, r7.x
mad r4.w, -r7.x, r7.x, l(1.000000)
mad r5.w, |r0.w|, r4.w, r0.z
mad r4.w, r1.x, r4.w, r0.z
mul r0.w, |r0.w|, r4.w
mad r0.w, r1.x, r5.w, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r4.w, r0.z, r0.z
mad r5.w, r1.y, r4.w, -r1.y
mad r1.y, r5.w, r1.y, l(1.000000)
mul r4.w, r4.w, l(0.318309873)
mad r1.y, r1.y, r1.y, l(1.000000012E-007)
div r1.y, r4.w, r1.y
mul r0.w, r0.w, r1.y
mul r0.w, r0.w, l(3.14159274)
mul r0.yw, r1.xxxx, r0.yyyw
max r0.w, r0.w, l(0.000000)
mad r0.z, r0.z, r0.z, l(1.000000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
dp3 r1.x, r3.xyzx, r3.xyzx
ne r1.x, r1.x, l(0.000000)
and r1.x, r1.x, l(0x3f800000)
mul r0.w, r0.w, r1.x
add r1.x, -r2.w, r3.w
add_sat r1.x, r1.x, l(1.000000)
mul r10.xyz, r0.yyyy, r8.xyzx
mad r9.xyz, r9.xyzx, r1.wwww, r10.xyzx
mul r8.xyz, r8.xyzx, r0.wwww
add r0.x, -r0.x, l(1.000000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.x, r0.y
mad r0.xyw, r7.yzyw, r0.xxxx, r3.xyxz
mul r0.xyw, r0.xyxw, r8.xyxz
mad r0.xyw, r2.xyxz, r9.xyxz, r0.xyxw
mul r2.xyz, r6.xyzx, r0.zzzz
add r1.xyw, -r3.xyxz, r1.xxxx
mad r1.xyz, r1.zzzz, r1.xywx, r3.xyzx
mad r0.xyz, r2.xyzx, r1.xyzx, r0.xywx
mad o0.xyz, r5.xyzx, r4.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used