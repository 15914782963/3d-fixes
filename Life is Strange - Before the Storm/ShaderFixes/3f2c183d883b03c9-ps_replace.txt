// 3DMigoto: 3f2c183d883b03c9 | Matched 41 variants of 1 shaders: Hidden/StenciledEdgeDetectShader
//
//                 Unity headers extracted from Hidden_StenciledEdgeDetectShader
//                 Shader "Hidden/StenciledEdgeDetectShader" {
//                   SubShader 1/1 {
//                     Pass 2/6 {
//                       ZWrite Off
//                       Program "fp" {
//                         SubProgram "d3d11" {
//                         }
//                       }
//                     }
//                   }
//                 }
//
//              Unity 5.3 headers extracted from Hidden_StenciledEdgeDetectShader:
//                API d3d11
//                Shader model ps_4_0
//                undeciphered1: 201608170 36 8 0
//                undeciphered1a: 4
//                undeciphered2: 1 6 3 6 0 0
//                undeciphered3: 0 0
//                ConstBuffer "$Globals" 160
//                Vector 48 [_HashTexture_ST]
//                Matrix 96 [_InverseView]
//                ConstBuffer "UnityPerCamera" 144
//                Vector 0 [_Time]
//                Vector 112 [_ZBufferParams]
//                ConstBuffer "UnityPerCameraRare" 352
//                Matrix 96 [unity_CameraProjection]
//                SetTexture 0 [_MainTex] 2D 2
//                SetTexture 1 [_CameraGBufferTexture0] 2D 0
//                SetTexture 2 [_CameraGBufferTexture2] 2D 1
//                SetTexture 3 [_CameraDepthTexture] 2D 5
//                SetTexture 4 [_HashTexture] 2D 3
//                SetTexture 5 [_NoiseTexture] 2D 4
//                BindCB "$Globals" 0
//                BindCB "UnityPerCamera" 1
//                BindCB "UnityPerCameraRare" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

// ---- Created with 3Dmigoto v1.2.61 on Wed Jan 03 04:38:00 2018
Texture2D<float4> t5 : register(t5);

Texture2D<float4> t4 : register(t4);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s5_s : register(s5);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb2 : register(b2)
{
  float4 cb2[8];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[8];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[10];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : SV_POSITION0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  float2 v5 : TEXCOORD4,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = t3.Sample(s5_s, v3.xy).xyzw;
  r0.x = cb1[7].z * r0.x + cb1[7].w;
  r0.x = 1 / r0.x;
  r1.z = -1;
  r0.yz = v3.xy * float2(2,2) + float2(-1,-1);
  r1.x = r0.y / cb2[6].x;
  r1.y = r0.z / cb2[7].y;
  r0.xyz = r1.xyz * r0.xxx;
  r1.xyz = cb0[7].xyz * r0.yyy;
  r0.xyw = cb0[6].xyz * r0.xxx + r1.xyz;
  r0.xyz = cb0[8].xyz * r0.zzz + r0.xyw;
  r0.xyz = cb0[9].xyz + r0.xyz;
  r1.xyzw = float4(6,6,6,6) * r0.yzxz;
  r0.xyz = float3(3,3,3) * r0.xyz;
  r0.xy = r0.xy + r0.yz;
  r0.xy = cb0[3].xy * r0.xy;
  r0.xy = float2(0.529999971,0.529999971) * r0.xy;
  r0.xyzw = t5.Sample(s4_s, r0.xy).xyzw;
  r0.x = -0.300000012 + r0.x;
  r0.x = saturate(r0.x + r0.x);
  r0.yz = float2(2.4000001,1.80000007) * cb1[0].yy;
  r0.yz = floor(r0.yz);
  r2.xy = r0.yz * float2(0.25,0.25) + r1.zx;
  r1.xyzw = r0.yzyz * float4(0.25,0.25,0.25,0.25) + r1.xyzw;
  r1.xyzw = cb0[3].xyxy * r1.xyzw;
  r0.yz = cb0[3].xy * r2.xy;
  r2.xyzw = t4.Sample(s3_s, r0.yz).yzxw;
  r3.xyzw = t4.Sample(s3_s, r1.xy).xyzw;
  r1.xyzw = t4.Sample(s3_s, r1.zw).xyzw;
  r2.y = r1.x;
  r2.x = r3.x;
  r1.xyzw = t2.Sample(s1_s, v3.xy).xyzw;
  r0.yzw = r1.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r0.y = dot(r2.xyz, abs(r0.yzw));
  r0.y = -0.800000012 + r0.y;
  r0.y = saturate(100 * r0.y);
  r0.x = r0.y * r0.x;
  r1.xyzw = t1.Sample(s0_s, v3.xy).xyzw;
  r0.y = 63.75 * r1.w;
  r0.z = cmp(r0.y >= -r0.y);
  r0.y = frac(abs(r0.y));
  r0.y = r0.z ? r0.y : -r0.y;
  r0.y = cmp(r0.y >= 0.5);
  r0.y = r0.y ? 1.000000 : 0;
  r0.x = -r0.x * r0.y + 1;
  r1.xyzw = t0.Sample(s2_s, v3.xy).xyzw;
  r1.xyzw = float4(-1,-1,-1,-1) + r1.xyzw;
  o0.xyzw = r0.xxxx * r1.xyzw + float4(1,1,1,1);
  return;
}
