// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 18891b51177b2171-ps.txt
// 3DMigoto: 18891b51177b2171 |    Unity headers extracted from Instanced_NewInstancedSurfaceShader
//    Shader "Instanced/NewInstancedSurfaceShader" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 3/5 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Instanced_NewInstancedSurfaceShader:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 171 5 4
//   undeciphered1a: 16
//   Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_SEPARATE" }
//   undeciphered2: 1 5 4 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 128
//   Vector 0 [unity_Lightmap_HDR]
//   Float 64 [_Glossiness]
//   Float 68 [_Metallic]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "Props" 16
//   Vector 0 [_Color]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [unity_Lightmap] 2D 0
//   SetTexture 2 [unity_LightmapInd] 2D -1
//   SetTexture 3 [unity_SpecCube0] CUBE 1
//   SetTexture 4 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityReflectionProbes" 2
//   BindCB "Props" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:34:17 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[5], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v5.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 18
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r16.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 18891b51177b2171-ps.txt

mul r16.w, -r16.x, r16.y
mad r17.xyz, -r16.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, r17.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
sample r2.xyzw, v1.xyxx, t0.xyzw, s2
mul r3.xyz, r2.xyzx, cb3[0].xyzx
add r1.w, -cb0[4].x, l(1.000000)
dp3 r2.w, -r1.xyzx, v2.xyzx
add r2.w, r2.w, r2.w
mad r4.xyz, v2.xyzx, -r2.wwww, -r1.xyzx
sample r5.xyzw, v5.xyxx, t1.xyzw, s0
log r2.w, r5.w
mul r2.w, r2.w, cb0[0].y
exp r2.w, r2.w
mul r2.w, r2.w, cb0[0].x
mul r5.xyz, r5.xyzx, r2.wwww
sample r6.xyzw, v5.xyxx, t2.xyzw, s0
mad r6.xyz, r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r2.w, r6.xyzx, r6.xyzx
sqrt r2.w, r2.w
max r2.w, r2.w, l(0.001000)
div r6.xyz, r6.xyzx, r2.wwww
add r3.w, -r2.w, l(1.000000)
mul r7.xyz, r3.wwww, r5.xyzx
mul r5.xyz, r2.wwww, r5.xyzx
dp3_sat r2.w, v2.xyzx, r6.xyzx
add r8.xy, v5.xyxx, l(0.500000, 0.000000, 0.000000, 0.000000)
sample r9.xyzw, r8.xyxx, t1.xyzw, s0
log r3.w, r9.w
mul r3.w, r3.w, cb0[0].y
exp r3.w, r3.w
mul r3.w, r3.w, cb0[0].x
mul r9.xyz, r9.xyzx, r3.wwww
sample r8.xyzw, r8.xyxx, t2.xyzw, s0
mad r8.xyz, r8.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r3.w, r8.xyzx, r8.xyzx
sqrt r3.w, r3.w
max r3.w, r3.w, l(0.001000)
div r8.xyz, r8.xyzx, r3.wwww
add r4.w, -r3.w, l(1.000000)
mul r10.xyz, r4.wwww, r9.xyzx
mul r9.xyz, r3.wwww, r9.xyzx
dp3_sat r3.w, v2.xyzx, r8.xyzx
mul r10.xyz, r3.wwww, r10.xyzx
mad r7.xyz, r7.xyzx, r2.wwww, r10.xyzx
lt r4.w, l(0.000000), cb2[2].w
if_nz r4.w
  dp3 r4.w, r4.xyzx, r4.xyzx
  rsq r4.w, r4.w
  mul r10.xyz, r4.wwww, r4.xyzx
  add r11.xyz, -v3.xyzx, cb2[0].xyzx
  div r11.xyz, r11.xyzx, r10.xyzx
  add r12.xyz, -v3.xyzx, cb2[1].xyzx
  div r12.xyz, r12.xyzx, r10.xyzx
  lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  min r4.w, r11.y, r11.x
  min r4.w, r11.z, r4.w
  add r11.xyz, v3.xyzx, -cb2[2].xyzx
  mad r10.xyz, r10.xyzx, r4.wwww, r11.xyzx
else 
  mov r10.xyz, r4.xyzx
endif 
mad r4.w, -r1.w, l(0.700000), l(1.700000)
mul r4.w, r1.w, r4.w
mul r4.w, r4.w, l(6.000000)
sample_l r10.xyzw, r10.xyzx, t3.xyzw, s1, r4.w
eq r5.w, cb2[3].w, l(1.000000)
log r6.w, r10.w
mul r6.w, r6.w, cb2[3].y
exp r6.w, r6.w
movc r5.w, r5.w, r6.w, l(1.000000)
mul r5.w, r5.w, cb2[3].x
mul r11.xyz, r10.xyzx, r5.wwww
lt r6.w, cb2[1].w, l(0.999990)
if_nz r6.w
  lt r6.w, l(0.000000), cb2[6].w
  if_nz r6.w
    dp3 r6.w, r4.xyzx, r4.xyzx
    rsq r6.w, r6.w
    mul r12.xyz, r4.xyzx, r6.wwww
    add r13.xyz, -v3.xyzx, cb2[4].xyzx
    div r13.xyz, r13.xyzx, r12.xyzx
    add r14.xyz, -v3.xyzx, cb2[5].xyzx
    div r14.xyz, r14.xyzx, r12.xyzx
    lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
    movc r13.xyz, r15.xyzx, r13.xyzx, r14.xyzx
    min r6.w, r13.y, r13.x
    min r6.w, r13.z, r6.w
    add r13.xyz, v3.xyzx, -cb2[6].xyzx
    mad r4.xyz, r12.xyzx, r6.wwww, r13.xyzx
  endif 
  sample_l r4.xyzw, r4.xyzx, t4.xyzw, s1, r4.w
  eq r6.w, cb2[7].w, l(1.000000)
  log r4.w, r4.w
  mul r4.w, r4.w, cb2[7].y
  exp r4.w, r4.w
  movc r4.w, r6.w, r4.w, l(1.000000)
  mul r4.w, r4.w, cb2[7].x
  mul r4.xyz, r4.xyzx, r4.wwww
  mad r10.xyz, r5.wwww, r10.xyzx, -r4.xyzx
  mad r11.xyz, cb2[1].wwww, r10.xyzx, r4.xyzx
endif 
mad r2.xyz, r2.xyzx, cb3[0].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r2.xyz, cb0[4].yyyy, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r4.x, -cb0[4].y, l(0.960000), l(0.960000)
mul r3.xyz, r3.xyzx, r4.xxxx
mad r4.yzw, r0.xxyz, r0.wwww, r6.xxyz
dp3 r5.w, r4.yzwy, r4.yzwy
max r5.w, r5.w, l(0.001000)
rsq r5.w, r5.w
mul r4.yzw, r4.yyzw, r5.wwww
dp3 r1.x, v2.xyzx, r1.xyzx
dp3_sat r1.y, v2.xyzx, r4.yzwy
dp3_sat r1.z, r6.xyzx, r4.yzwy
mul r4.y, r1.z, r1.z
dp2 r4.y, r4.yyyy, r1.wwww
add r4.y, r4.y, l(-0.500000)
add r4.z, -r2.w, l(1.000000)
mul r4.w, r4.z, r4.z
mul r4.w, r4.w, r4.w
mul r4.z, r4.z, r4.w
mad r4.z, r4.y, r4.z, l(1.000000)
add r4.w, -|r1.x|, l(1.000000)
mul r5.w, r4.w, r4.w
mul r5.w, r5.w, r5.w
mul r4.w, r4.w, r5.w
mad r4.y, r4.y, r4.w, l(1.000000)
mul r4.y, r4.y, r4.z
mul r4.y, r2.w, r4.y
mul r4.z, r1.w, r1.w
mad r5.w, -r1.w, r1.w, l(1.000000)
mad r6.x, |r1.x|, r5.w, r4.z
mad r5.w, r2.w, r5.w, r4.z
mul r1.x, |r1.x|, r5.w
mad r1.x, r2.w, r6.x, r1.x
add r1.x, r1.x, l(0.000010)
div r1.x, l(0.500000), r1.x
mul r5.w, r4.z, r4.z
mad r6.x, r1.y, r5.w, -r1.y
mad r1.y, r6.x, r1.y, l(1.000000)
mul r6.x, r5.w, l(0.318309873)
mad r1.y, r1.y, r1.y, l(1.000000012E-007)
div r1.y, r6.x, r1.y
mul r1.x, r1.y, r1.x
mul r1.x, r1.x, l(3.14159274)
mul r1.x, r2.w, r1.x
max r1.x, r1.x, l(0.000000)
mad r6.xy, r4.zzzz, r4.zzzz, l(1.000000, -1.000000, 0.000000, 0.000000)
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r6.x
dp3 r2.w, r2.xyzx, r2.xyzx
ne r2.w, r2.w, l(0.000000)
and r2.w, r2.w, l(0x3f800000)
mul r1.x, r1.x, r2.w
add r2.w, -r4.x, cb0[4].x
add_sat r2.w, r2.w, l(1.000000)
mad r4.xyz, r5.xyzx, r4.yyyy, r7.xyzx
mul r5.xyz, r5.xyzx, r1.xxxx
add r1.x, -r1.z, l(1.000000)
mul r1.z, r1.x, r1.x
mul r1.z, r1.z, r1.z
mul r1.x, r1.x, r1.z
add r6.xzw, -r2.xxyz, l(1.000000, 0.000000, 1.000000, 1.000000)
mad r6.xzw, r6.xxzw, r1.xxxx, r2.xxyz
mul r5.xyz, r5.xyzx, r6.xzwx
mad r4.xyz, r3.xyzx, r4.xyzx, r5.xyzx
mul r1.xyz, r11.xyzx, r1.yyyy
add r5.xyz, -r2.xyzx, r2.wwww
mad r5.xyz, r4.wwww, r5.xyzx, r2.xyzx
mad r1.xyz, r1.xyzx, r5.xyzx, r4.xyzx
mad r0.xyz, r0.xyzx, r0.wwww, r8.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3_sat r0.w, v2.xyzx, r0.xyzx
dp3_sat r0.x, r8.xyzx, r0.xyzx
mul r0.xy, r0.xwxx, r0.xwxx
mad r0.y, r0.y, r6.y, l(1.000010)
max r0.x, r0.x, l(0.100000)
mad r0.z, r1.w, r1.w, l(0.500000)
mul r0.xy, r0.zyzz, r0.xyxx
mul r0.x, r0.y, r0.x
mul r0.x, r0.x, l(4.000000)
div r0.x, r5.w, r0.x
mad r0.xyz, r0.xxxx, r2.xyzx, r3.xyzx
mul r0.xyz, r9.xyzx, r0.xyzx
mad r0.xyz, r0.xyzx, r3.wwww, r1.xyzx
exp o3.xyz, -r0.xyzx
mov o0.xyz, r3.xyzx
mov o0.w, l(1.000000)
mov o1.w, cb0[4].x
mov o1.xyz, r2.xyzx
mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o2.w, l(1.000000)
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used