// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f168f7504aad1577-ps.txt
// 3DMigoto: f168f7504aad1577 |    Unity headers extracted from Custom_AnimateBreak
//    Shader "Custom/AnimateBreak" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="Geometry" }
//        Pass 3/4 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "QUEUE"="Geometry" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_AnimateBreak:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 100 5 4
//   undeciphered1a: 13
//   Keywords { "LIGHTMAP_ON" }
//   undeciphered2: 1 7 3 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 160
//   Vector 0 [unity_Lightmap_HDR]
//   Float 68 [_Indent]
//   Float 72 [_Parallax]
//   Vector 96 [_Color]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_ParallaxMap] 2D 5
//   SetTexture 1 [_MainTex] 2D 2
//   SetTexture 2 [_SpecGlossMap] 2D 3
//   SetTexture 3 [_BumpMap] 2D 4
//   SetTexture 4 [unity_Lightmap] 2D 0
//   SetTexture 5 [unity_SpecCube0] CUBE 1
//   SetTexture 6 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityReflectionProbes" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 05:35:41 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f168f7504aad1577-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r14.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, v5.xyzx, v5.xyzx
rsq r0.w, r0.w
mul r2.xy, r0.wwww, v5.xyxx
sample r3.xyzw, v1.xyxx, t0.xyzw, s5
mul r1.w, cb0[4].z, l(0.500000)
mad r1.w, r3.y, cb0[4].z, -r1.w
mad r0.w, v5.z, r0.w, l(0.420000)
div r2.xy, r2.xyxx, r0.wwww
mul r2.xy, r1.wwww, r2.xyxx
mad r2.xy, r2.xyxx, cb0[4].yyyy, v1.xyxx
sample r3.xyzw, r2.xyxx, t1.xyzw, s2
sample r4.xyzw, r2.xyxx, t2.xyzw, s3
sample r2.xyzw, r2.xyxx, t3.xyzw, s4
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r2.z, r0.w
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
mul r3.xyzw, r3.wxyz, cb0[6].wxyz
mov_sat r3.x, r3.x
mul r3.xyz, r3.xxxx, r3.yzwy
dp3 r5.x, v2.xyzx, r2.xyzx
dp3 r5.y, v3.xyzx, r2.xyzx
dp3 r5.z, v4.xyzx, r2.xyzx
add r0.w, -r4.w, l(1.000000)
dp3 r1.w, -r1.xyzx, r5.xyzx
add r1.w, r1.w, r1.w
mad r2.xyz, r5.xyzx, -r1.wwww, -r1.xyzx
sample r6.xyzw, v6.xyxx, t4.xyzw, s0
log r1.w, r6.w
mul r1.w, r1.w, cb0[0].y
exp r1.w, r1.w
mul r1.w, r1.w, cb0[0].x
mul r6.xyz, r6.xyzx, r1.wwww
lt r1.w, l(0.000000), cb2[2].w
if_nz r1.w
  dp3 r1.w, r2.xyzx, r2.xyzx
  rsq r1.w, r1.w
  mul r7.xyz, r1.wwww, r2.xyzx
  add r8.xyz, -r0.xyzx, cb2[0].xyzx
  div r8.xyz, r8.xyzx, r7.xyzx
  add r9.xyz, -r0.xyzx, cb2[1].xyzx
  div r9.xyz, r9.xyzx, r7.xyzx
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  min r1.w, r8.y, r8.x
  min r1.w, r8.z, r1.w
  add r8.xyz, r0.xyzx, -cb2[2].xyzx
  mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
else 
  mov r7.xyz, r2.xyzx
endif 
mad r1.w, -r0.w, l(0.700000), l(1.700000)
mul r1.w, r0.w, r1.w
mul r1.w, r1.w, l(6.000000)
sample_l r7.xyzw, r7.xyzx, t5.xyzw, s1, r1.w
eq r2.w, cb2[3].w, l(1.000000)
log r3.w, r7.w
mul r3.w, r3.w, cb2[3].y
exp r3.w, r3.w
movc r2.w, r2.w, r3.w, l(1.000000)
mul r2.w, r2.w, cb2[3].x
mul r8.xyz, r7.xyzx, r2.wwww
lt r3.w, cb2[1].w, l(0.999990)
if_nz r3.w
  lt r3.w, l(0.000000), cb2[6].w
  if_nz r3.w
    dp3 r3.w, r2.xyzx, r2.xyzx
    rsq r3.w, r3.w
    mul r9.xyz, r2.xyzx, r3.wwww
    add r10.xyz, -r0.xyzx, cb2[4].xyzx
    div r10.xyz, r10.xyzx, r9.xyzx
    add r11.xyz, -r0.xyzx, cb2[5].xyzx
    div r11.xyz, r11.xyzx, r9.xyzx
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
    min r3.w, r10.y, r10.x
    min r3.w, r10.z, r3.w
    add r0.xyz, r0.xyzx, -cb2[6].xyzx
    mad r2.xyz, r9.xyzx, r3.wwww, r0.xyzx
  endif 
  sample_l r9.xyzw, r2.xyzx, t6.xyzw, s1, r1.w
  eq r0.x, cb2[7].w, l(1.000000)
  log r0.y, r9.w
  mul r0.y, r0.y, cb2[7].y
  exp r0.y, r0.y
  movc r0.x, r0.x, r0.y, l(1.000000)
  mul r0.x, r0.x, cb2[7].x
  mul r0.xyz, r9.xyzx, r0.xxxx
  mad r2.xyz, r2.wwww, r7.xyzx, -r0.xyzx
  mad r8.xyz, cb2[1].wwww, r2.xyzx, r0.xyzx
endif 
max r0.x, r4.y, r4.x
max r0.x, r4.z, r0.x
add r0.x, -r0.x, l(1.000000)
mul r2.xyz, r0.xxxx, r3.xyzx
dp3 r0.y, r5.xyzx, r1.xyzx
mul r0.z, r0.w, r0.w
mad r0.z, r0.z, r0.z, l(1.000000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
add r0.x, -r0.x, r4.w
add_sat r0.x, r0.x, l(1.000000)
mul r1.xyz, r8.xyzx, r0.zzzz
add r0.y, -|r0.y|, l(1.000000)
mul r0.z, r0.y, r0.y
mul r0.z, r0.z, r0.z
mul r0.y, r0.y, r0.z
add r0.xzw, -r4.xxyz, r0.xxxx
mad r0.xyz, r0.yyyy, r0.xzwx, r4.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mad r0.xyz, r2.xyzx, r6.xyzx, r0.xyzx
mad o2.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
exp o3.xyz, -r0.xyzx
mov o0.xyz, r2.xyzx
mov o0.w, l(1.000000)
mov o1.xyzw, r4.xyzw
mov o2.w, l(1.000000)
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used