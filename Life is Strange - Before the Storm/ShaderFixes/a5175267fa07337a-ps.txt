// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a5175267fa07337a-ps.txt
// 3DMigoto: a5175267fa07337a | Matched 6 variants of 1 shaders: Dawn/VFX/FractalScreenSaver
//
//        Unity headers extracted from Dawn_VFX_FractalScreenSaver
//        Shader "Dawn/VFX/FractalScreenSaver" {
//          Fallback "Diffuse"
//          SubShader 1/1 {
//            LOD 200
//            Tags { "RenderType"="Opaque" }
//            Pass 2/4 {
//              Name "FORWARD"
//              Tags { "LIGHTMODE"="ForwardAdd" "RenderType"="Opaque" }
//              ZWrite Off
//              Program "fp" {
//                SubProgram "d3d11" {
//                }
//              }
//            }
//          }
//        }
//
//     Unity 5.3 headers extracted from Dawn_VFX_FractalScreenSaver:
//       API d3d11
//       Shader model ps_4_0
//       undeciphered1: 201608170 95 5 3
//       undeciphered1a: 8
//       Keywords { "POINT_COOKIE" }
//       undeciphered2: 1 5 3 5 0 0
//       undeciphered3: 0 0
//       ConstBuffer "$Globals" 160
//       Vector 32 [_LightColor0]
//       Matrix 64 [unity_WorldToLight]
//       ConstBuffer "UnityPerCamera" 144
//       Vector 64 [_WorldSpaceCameraPos] 3
//       ConstBuffer "UnityLighting" 720
//       Vector 0 [_WorldSpaceLightPos0]
//       SetTexture 0 [_MainTex] 2D 2
//       SetTexture 1 [_Specular] 2D 4
//       SetTexture 2 [_ScanLines] 2D 3
//       SetTexture 3 [_LightTextureB0] 2D 1
//       SetTexture 4 [_LightTexture0] CUBE 0
//       BindCB "$Globals" 0
//       BindCB "UnityPerCamera" 1
//       BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 05:10:24 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 3     zw        1     NONE   float     zw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a5175267fa07337a-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v3.xyzx, r9.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
add r3.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r1.w, r3.x, l(1.500000)
add r2.w, r3.y, r3.y
mov r3.x, r1.w
mov r3.y, r2.w
mov r3.z, l(0)
loop 
  ige r3.w, r3.z, l(16)
  breakc_nz r3.w
  mul r3.w, r3.y, r3.y
  mad r4.x, r3.x, r3.x, -r3.w
  dp2 r4.y, r3.yyyy, r3.xxxx
  add r3.xy, r4.xyxx, v1.zwzz
  dp2 r3.w, r3.xyxx, r3.xyxx
  lt r3.w, l(4.000000), r3.w
  if_nz r3.w
    break 
  endif 
  iadd r3.z, r3.z, l(1)
endloop 
itof r1.w, r3.z
mul r3.x, r1.w, l(0.062500)
mov r3.y, l(0.500000)
sample r3.xyzw, r3.xyxx, t0.xyzw, s2
sample r4.xyzw, v1.xyxx, t1.xyzw, s4
mul r5.xy, v1.xyxx, l(4.000000, 128.000000, 0.000000, 0.000000)
sample r5.xyzw, r5.xyxx, t2.xyzw, s3
dp3_sat r1.w, v2.xyzx, r2.xyzx
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
mul r3.xyz, r5.xyzx, r3.xyzx
mul r5.xyz, v3.yyyy, cb0[5].xyzx
mad r5.xyz, cb0[4].xyzx, v3.xxxx, r5.xyzx
mad r5.xyz, cb0[6].xyzx, v3.zzzz, r5.xyzx
add r5.xyz, r5.xyzx, cb0[7].xyzx
dp3 r1.w, r5.xyzx, r5.xyzx
sample r6.xyzw, r1.wwww, t3.xyzw, s1
sample r5.xyzw, r5.xyzx, t4.xyzw, s0
mul r1.w, r5.w, r6.x
mul r5.xyz, r1.wwww, cb0[2].xyzx
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r6.xyz, r1.wwww, v2.xyzx
max r1.w, r4.y, r4.x
max r1.w, r4.z, r1.w
add r1.w, -r1.w, l(1.000000)
mul r3.xyz, r1.wwww, r3.xyzx
add r7.xyzw, -r4.wxyz, l(1.000000, 1.000000, 1.000000, 1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r6.xyzx, r2.xyzx
dp3_sat r1.w, r6.xyzx, r1.xyzx
dp3_sat r2.x, r6.xyzx, r0.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r7.xxxx
add r0.y, r0.y, l(-0.500000)
add r0.z, -r1.w, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r7.x, r7.x
mad r1.x, -r7.x, r7.x, l(1.000000)
mad r1.y, |r0.w|, r1.x, r0.z
mad r1.x, r1.w, r1.x, r0.z
mul r0.w, |r0.w|, r1.x
mad r0.w, r1.w, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r2.x, r0.z, -r2.x
mad r1.x, r1.x, r2.x, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r1.wwww, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r4.xyzx, r4.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r5.xyzx
mul r0.yzw, r5.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
mad r2.xyz, r7.yzwy, r0.xxxx, r4.xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used