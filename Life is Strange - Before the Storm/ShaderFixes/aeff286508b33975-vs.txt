// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed aeff286508b33975-vs.txt
// 3DMigoto: aeff286508b33975 | Matched 6 variants of 3 shaders: Custom/EnvBlend, Custom/EnvBlendLate, Standard
//
// 10:    Unity headers extracted from Custom_EnvBlend
// 20:    Unity headers extracted from Custom_EnvBlendLate
// 0f:    Unity headers extracted from Standard
// 10:    Shader "Custom/EnvBlend" {
// 20:    Shader "Custom/EnvBlendLate" {
// 0f:    Shader "Standard" {
// 30:      CustomEditor "EnvBlendShaderGUI"
// 0f:      CustomEditor "StandardShaderGUI"
//          Fallback "VertexLit"
//          SubShader 2/2 {
//            LOD 150
//            Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//            Pass 1/4 {
//              Name "FORWARD"
//              Tags { "LIGHTMODE"="ForwardBase" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//              ZWrite [_ZWrite]
//              Program "vp" {
//                SubProgram "d3d11" {
//                }
//              }
//            }
//          }
//        }
//
// 10: Unity 5.3 headers extracted from Custom_EnvBlend:
// 20: Unity 5.3 headers extracted from Custom_EnvBlendLate:
// 0f: Unity 5.3 headers extracted from Standard:
//       API d3d11
//       Shader model vs_4_0
//       undeciphered1: 201608170 57 0 0
//       undeciphered1a: 7
// 02:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_SPECULARHIGHLIGHTS_OFF" }
// 31:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
// 08:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "VERTEXLIGHT_ON" "_SPECULARHIGHLIGHTS_OFF" }
// 04:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_EMISSION" "VERTEXLIGHT_ON" }
//       undeciphered2: 1 0 4 0 0 0
//       undeciphered3: 27 4 0 0 1 2 3 4 4 5
//       ConstBuffer "$Globals" 176
//       Vector 96 [_MainTex_ST]
//       Vector 112 [_DetailAlbedoMap_ST]
//       Float 156 [_UVSec]
//       ConstBuffer "UnityPerCamera" 144
//       Vector 64 [_WorldSpaceCameraPos] 3
//       Vector 80 [_ProjectionParams]
//       ConstBuffer "UnityLighting" 720
//       Vector 32 [unity_4LightPosX0]
//       Vector 48 [unity_4LightPosY0]
//       Vector 64 [unity_4LightPosZ0]
//       Vector 80 [unity_4LightAtten0]
//       Vector 96 [unity_LightColor0]
//       Vector 112 [unity_LightColor1]
//       Vector 128 [unity_LightColor2]
//       Vector 144 [unity_LightColor3]
//       Vector 160 [unity_LightColor4]
//       Vector 176 [unity_LightColor5]
//       Vector 192 [unity_LightColor6]
//       Vector 208 [unity_LightColor7]
//       Vector 608 [unity_SHAr]
//       Vector 624 [unity_SHAg]
//       Vector 640 [unity_SHAb]
//       Vector 656 [unity_SHBr]
//       Vector 672 [unity_SHBg]
//       Vector 688 [unity_SHBb]
//       Vector 704 [unity_SHC]
//       ConstBuffer "UnityPerDraw" 352
//       Matrix 0 [glstate_matrix_mvp]
//       Matrix 192 [unity_ObjectToWorld]
//       Matrix 256 [unity_WorldToObject]
//       BindCB "$Globals" 0
//       BindCB "UnityPerCamera" 1
//       BindCB "UnityLighting" 2
//       BindCB "UnityPerDraw" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:38:31 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[22], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xyz
dcl_temps 9

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125
dcl_constantbuffer cb10[4], immediateIndexed

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed aeff286508b33975-vs.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

mul r0.xyzw, v0.yyyy, cb3[1].xyzw
mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb3[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed aeff286508b33975-vs.txt
ne r7.w, r0.w, l(1.0)
if_nz r7.w
  add r7.w, r0.w, -r7.y
  mad r0.x, r7.w, r7.x, r0.x
endif

eq r1.x, cb0[9].w, l(0.000000)
movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
mul r1.xyz, v0.yyyy, cb3[13].xyzx
mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
add r2.xyz, r1.xyzx, -r8.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul o2.xyz, r1.wwww, r2.xyzx
mov o3.xyzw, l(0,0,0,0)
mov o4.xyzw, l(0,0,0,0)
mov o5.w, l(0)
dp3 r2.x, v1.xyzx, cb3[16].xyzx
dp3 r2.y, v1.xyzx, cb3[17].xyzx
dp3 r2.z, v1.xyzx, cb3[18].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mov o5.xyz, r2.xyzx
mul r1.w, r2.y, r2.y
mad r1.w, r2.x, r2.x, -r1.w
mul r3.xyzw, r2.yzzx, r2.xyzz
dp4 r4.x, cb2[41].xyzw, r3.xyzw
dp4 r4.y, cb2[42].xyzw, r3.xyzw
dp4 r4.z, cb2[43].xyzw, r3.xyzw
mad r3.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
mov r2.w, l(1.000000)
dp4 r4.x, cb2[38].xyzw, r2.xyzw
dp4 r4.y, cb2[39].xyzw, r2.xyzw
dp4 r4.z, cb2[40].xyzw, r2.xyzw
add r3.xyz, r3.xyzx, r4.xyzx
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r4.xyzw, -r1.yyyy, cb2[3].xyzw
mul r5.xyzw, r2.yyyy, r4.xyzw
mul r4.xyzw, r4.xyzw, r4.xyzw
add r6.xyzw, -r1.xxxx, cb2[2].xyzw
mad r5.xyzw, r6.xyzw, r2.xxxx, r5.xyzw
mad r4.xyzw, r6.xyzw, r6.xyzw, r4.xyzw
add r6.xyzw, -r1.zzzz, cb2[4].xyzw
mov o8.xyz, r1.xyzx
mad r1.xyzw, r6.xyzw, r2.zzzz, r5.xyzw
mad r2.xyzw, r6.xyzw, r6.xyzw, r4.xyzw
max r2.xyzw, r2.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
rsq r4.xyzw, r2.xyzw
mad r2.xyzw, r2.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
mul r1.xyzw, r1.xyzw, r4.xyzw
max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.xyzw, r2.xyzw, r1.xyzw
mul r2.xyz, r1.yyyy, cb2[7].xyzx
mad r2.xyz, cb2[6].xyzx, r1.xxxx, r2.xyzx
mad r1.xyz, cb2[8].xyzx, r1.zzzz, r2.xyzx
mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
add o6.xyz, r3.xyzx, r1.xyzx
mov o6.w, l(0)
mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o7.zw, r0.zzzw
add o7.xy, r1.zzzz, r1.xwxx
ret 
// Approximately 0 instruction slots used