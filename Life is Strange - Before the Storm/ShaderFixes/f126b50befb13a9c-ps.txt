// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f126b50befb13a9c-ps.txt
// 3DMigoto: f126b50befb13a9c |    Unity headers extracted from Dawn_FX_S_BurningPhoto
//    Shader "Dawn/FX/S_BurningPhoto" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 3/4 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Dawn_FX_S_BurningPhoto:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 100 7 4
//   undeciphered1a: 14
//   Keywords { "LIGHTMAP_ON" "UNITY_HDR_ON" }
//   undeciphered2: 1 9 3 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 160
//   Vector 0 [unity_Lightmap_HDR]
//   Float 64 [_Smooth]
//   Float 68 [_Spec]
//   Float 72 [_SmoothB]
//   Float 76 [_SpecB]
//   Vector 80 [_Params]
//   Float 144 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_BurningTex] 2D 4
//   SetTexture 2 [_BurntTex] 2D 3
//   SetTexture 3 [_BurnPattern] 2D 7
//   SetTexture 4 [_BumpMap] 2D 5
//   SetTexture 5 [_BurntBumpMap] 2D 6
//   SetTexture 6 [unity_Lightmap] 2D 0
//   SetTexture 7 [unity_SpecCube0] CUBE 1
//   SetTexture 8 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityReflectionProbes" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 05:35:35 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xy  
// TEXCOORD                 6   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f126b50befb13a9c-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r15.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
sample r2.xyzw, v1.xyxx, t0.xyzw, s2
sample r3.xyzw, v1.xyxx, t1.xyzw, s4
sample r4.xyzw, v1.xyxx, t2.xyzw, s3
sample r5.xyzw, v1.xyxx, t3.xyzw, s7
add_sat r5.xy, -r5.xxxx, cb0[5].xyxx
log r5.xy, r5.xyxx
mul r5.xy, r5.xyxx, l(14.000000, 14.000000, 0.000000, 0.000000)
exp r5.xy, r5.xyxx
add r3.xyz, -r2.xyzx, r3.xyzx
mad r2.xyz, r5.yyyy, r3.xyzx, r2.xyzx
add r3.xyz, -r2.xyzx, r4.xyzx
mad r2.xyz, r5.xxxx, r3.xyzx, r2.xyzx
add r0.w, -r2.w, r4.w
mad r0.w, r5.x, r0.w, r2.w
sample r3.xyzw, v1.xyxx, t4.xyzw, s5
sample r4.xyzw, v1.xyxx, t5.xyzw, s6
add r3.xz, -r3.wwyw, r4.wwyw
mad r3.xy, r5.yyyy, r3.xzxx, r3.wyww
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r3.xyxx, r3.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r3.z, r1.w
add r4.xyzw, -cb0[4].yyyx, cb0[4].wwwz
mad r4.xyzw, r5.xxxx, r4.xyzw, cb0[4].yyyx
add r0.w, r0.w, -cb0[9].x
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
dp3 r5.x, v2.xyzx, r3.xyzx
dp3 r5.y, v3.xyzx, r3.xyzx
dp3 r5.z, v4.xyzx, r3.xyzx
add r3.xy, -r4.wzww, l(1.000000, 1.000000, 0.000000, 0.000000)
dp3 r0.w, -r1.xyzx, r5.xyzx
add r0.w, r0.w, r0.w
mad r6.xyz, r5.xyzx, -r0.wwww, -r1.xyzx
sample r7.xyzw, v5.xyxx, t6.xyzw, s0
log r0.w, r7.w
mul r0.w, r0.w, cb0[0].y
exp r0.w, r0.w
mul r0.w, r0.w, cb0[0].x
mul r7.xyz, r7.xyzx, r0.wwww
mul r7.xyz, r7.xyzx, l(0.988235295, 0.988235295, 0.988235295, 0.000000)
lt r0.w, l(0.000000), cb2[2].w
if_nz r0.w
  dp3 r0.w, r6.xyzx, r6.xyzx
  rsq r0.w, r0.w
  mul r8.xyz, r0.wwww, r6.xyzx
  add r9.xyz, -r0.xyzx, cb2[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r0.xyzx, cb2[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r0.w, r9.y, r9.x
  min r0.w, r9.z, r0.w
  add r9.xyz, r0.xyzx, -cb2[2].xyzx
  mad r8.xyz, r8.xyzx, r0.wwww, r9.xyzx
else 
  mov r8.xyz, r6.xyzx
endif 
mad r0.w, -r3.x, l(0.700000), l(1.700000)
mul r0.w, r0.w, r3.x
mul r0.w, r0.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t7.xyzw, s1, r0.w
eq r1.w, cb2[3].w, l(1.000000)
log r2.w, r8.w
mul r2.w, r2.w, cb2[3].y
exp r2.w, r2.w
movc r1.w, r1.w, r2.w, l(1.000000)
mul r1.w, r1.w, cb2[3].x
mul r9.xyz, r8.xyzx, r1.wwww
lt r2.w, cb2[1].w, l(0.999990)
if_nz r2.w
  lt r2.w, l(0.000000), cb2[6].w
  if_nz r2.w
    dp3 r2.w, r6.xyzx, r6.xyzx
    rsq r2.w, r2.w
    mul r10.xyz, r2.wwww, r6.xyzx
    add r11.xyz, -r0.xyzx, cb2[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r0.xyzx, cb2[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r2.w, r11.y, r11.x
    min r2.w, r11.z, r2.w
    add r0.xyz, r0.xyzx, -cb2[6].xyzx
    mad r6.xyz, r10.xyzx, r2.wwww, r0.xyzx
  endif 
  sample_l r0.xyzw, r6.xyzx, t8.xyzw, s1, r0.w
  eq r2.w, cb2[7].w, l(1.000000)
  log r0.w, r0.w
  mul r0.w, r0.w, cb2[7].y
  exp r0.w, r0.w
  movc r0.w, r2.w, r0.w, l(1.000000)
  mul r0.w, r0.w, cb2[7].x
  mul r0.xyz, r0.xyzx, r0.wwww
  mad r6.xyz, r1.wwww, r8.xyzx, -r0.xyzx
  mad r9.xyz, cb2[1].wwww, r6.xyzx, r0.xyzx
endif 
mul r0.xyz, r9.xyzx, l(0.988235295, 0.988235295, 0.988235295, 0.000000)
mul r2.xyz, r2.xyzx, r3.yyyy
dp3 r0.w, r5.xyzx, r1.xyzx
mul r1.x, r3.x, r3.x
mad r1.x, r1.x, r1.x, l(1.000000)
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
add r1.y, -r3.y, r4.w
add_sat r1.y, r1.y, l(1.000000)
mul r0.xyz, r0.xyzx, r1.xxxx
add r0.w, -|r0.w|, l(1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.w, r0.w, r1.x
add r1.x, -r4.z, r1.y
mad r0.w, r0.w, r1.x, r4.z
mul r0.xyz, r0.wwww, r0.xyzx
mad o3.xyz, r2.xyzx, r7.xyzx, r0.xyzx
mad o2.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o0.xyz, r2.xyzx
mov o0.w, l(0.988235295)
mov o1.xyzw, r4.xyzw
mov o2.w, l(1.000000)
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used