// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a81b2f9911e25b9f-ps.txt
// 3DMigoto: a81b2f9911e25b9f |    Unity headers extracted from Custom_RedEyeShader
//    Shader "Custom/RedEyeShader" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 4/4 {
//          Name "META"
//          Tags { "LIGHTMODE"="Meta" "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_RedEyeShader:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 27 3 0
//   undeciphered1a: 3
//   undeciphered2: 1 3 3 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 144
//   Float 64 [_Parallax]
//   Vector 72 [_RedStrength] 2
//   Vector 96 [_Color]
//   Float 116 [unity_OneOverOutputBoost]
//   Float 120 [unity_MaxOutputValue]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityMetaPass" 32
//   VectorBool 16 [unity_MetaFragmentControl] 4
//   SetTexture 0 [_ParallaxMap] 2D 2
//   SetTexture 1 [_MainTex] 2D 0
//   SetTexture 2 [_RedTex] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityMetaPass" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:38:19 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 5
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a81b2f9911e25b9f-ps.txt

mul r3.w, -r3.x, r3.y
mad r4.xyz, -r3.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r0.xyz, -r0.xyzx, r4.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyz, r0.yyyy, v3.xyzx
mad r0.xyw, v2.xyxz, r0.xxxx, r1.xyxz
mad r0.xyz, v4.xyzx, r0.zzzz, r0.xywx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xy, r0.wwww, r0.xyxx
mad r0.z, r0.z, r0.w, l(0.420000)
div r0.xy, r0.xyxx, r0.zzzz
sample r1.xyzw, v1.xyxx, t0.xyzw, s2
mul r0.z, r1.y, cb0[4].z
mul r0.w, r0.z, l(0.250000)
mad r0.z, r0.z, l(0.275000), l(1.000000)
mad r0.w, r1.x, l(0.200000), -r0.w
mul r1.x, cb0[4].x, l(0.500000)
mad r0.w, r0.w, cb0[4].x, -r1.x
mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
sample r1.xyzw, r0.xyxx, t2.xyzw, s1
sample r2.xyzw, r0.xyxx, t1.xyzw, s0
add r0.xyw, r1.xyxz, -r2.xyxz
mad r0.xyw, cb0[4].wwww, r0.xyxw, r2.xyxz
mul r0.xyw, r0.xyxw, cb0[6].xyxz
mul r0.xyz, r0.zzzz, r0.xywx
log r0.xyz, r0.xyzx
mov_sat r0.w, cb0[7].y
mul r0.xyz, r0.xyzx, r0.wwww
exp r0.xyz, r0.xyzx
min r0.xyz, r0.xyzx, cb0[7].zzzz
mov r0.w, l(1.000000)
movc r0.xyzw, cb2[1].xxxx, r0.xyzw, l(0,0,0,0)
movc o0.xyzw, cb2[1].yyyy, l(0,0,0,0.0235294122), r0.xyzw
ret 
// Approximately 0 instruction slots used