// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 40ed744edb4a620a-ps.txt
// 3DMigoto: 40ed744edb4a620a | Matched 2 variants of 2 shaders: Unlit/UISelect, Unlit/UISelectNoOutline
//
// 1:    Unity headers extracted from Unlit_UISelect
// 2:    Unity headers extracted from Unlit_UISelectNoOutline
// 1:    Shader "Unlit/UISelect" {
// 2:    Shader "Unlit/UISelectNoOutline" {
//         SubShader 1/1 {
// 2:        Pass 1/1 {
// 1:        Pass 2/2 {
//             Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
// 1: Unity 5.3 headers extracted from Unlit_UISelect:
// 2: Unity 5.3 headers extracted from Unlit_UISelectNoOutline:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201608170 46 10 4
//      undeciphered1a: 6
//      undeciphered2: 1 6 1 6 0 0
//      undeciphered3: 0 0
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      SetTexture 0 [_Hatch0] 2D 0
//      SetTexture 1 [_Hatch0a] 2D 3
//      SetTexture 2 [_Hatch1] 2D 1
//      SetTexture 3 [_Hatch1a] 2D 4
//      SetTexture 4 [_Hatch2] 2D 2
//      SetTexture 5 [_Hatch2a] 2D 5
//      BindCB "UnityPerCamera" 0
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 04:38:37 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float     z 
// TEXCOORD                 2   xyz         3     NONE   float     z 
// TEXCOORD                 3   xyz         4     NONE   float     z 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.z
dcl_input_ps linear v3.z
dcl_input_ps linear v4.z
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 40ed744edb4a620a-ps.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb0[4].xyzw

add r0.xyz, -v5.xyzx, r7.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r0.w, cb0[0].y, l(2.250000)
round_ni r0.w, r0.w
mad r0.w, r0.w, l(0.333333343), v1.x
add r1.x, r0.w, v1.y
mul r1.x, r1.x, l(4.000000)
sincos r1.x, null, r1.x
add r0.w, r0.w, -v1.y
mul r0.w, r0.w, l(3.400000)
sincos null, r0.w, r0.w
mad r1.x, r1.x, l(0.040000), v1.x
mad r1.y, r0.w, l(0.010000), v1.y
mov r2.x, v2.z
mov r2.y, v3.z
mov r2.z, v4.z
dp3 r0.x, r2.xyzx, r0.xyzx
add r0.x, r0.x, l(1.000000)
mad r0.x, -r0.x, l(0.500000), l(1.000000)
mul r0.x, r0.x, l(4.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.x
min r0.x, r0.x, l(1.000000)
ge r0.yz, l(0.000000, 0.333333343, 0.666666687, 0.000000), r0.xxxx
if_nz r0.y
  sample r2.xyzw, r1.xyxx, t0.xyzw, s0
  sample r3.xyzw, r1.xyxx, t1.xyzw, s3
else 
  mov r2.xyzw, l(0,0,0,0)
  mov r3.xyzw, l(0,0,0,0)
endif 
lt r0.yw, l(0.000000, 0.333333343, 0.000000, 0.666666687), r0.xxxx
and r0.y, r0.z, r0.y
if_nz r0.y
  add r0.y, r0.x, l(-0.333333343)
  mul r0.y, r0.y, l(3.000000)
  sample r4.xyzw, r1.xyxx, t0.xyzw, s0
  sample r5.xyzw, r1.xyxx, t2.xyzw, s1
  add r5.xyzw, -r4.xyzw, r5.xyzw
  mad r2.xyzw, r0.yyyy, r5.xyzw, r4.xyzw
  sample r4.xyzw, r1.xyxx, t1.xyzw, s3
  sample r5.xyzw, r1.xyxx, t3.xyzw, s4
  add r5.xyzw, -r4.xyzw, r5.xyzw
  mad r3.xyzw, r0.yyyy, r5.xyzw, r4.xyzw
endif 
if_nz r0.w
  add r0.x, r0.x, l(-0.666666687)
  mul r0.x, r0.x, l(3.000000)
  sample r4.xyzw, r1.xyxx, t2.xyzw, s1
  sample r5.xyzw, r1.xyxx, t4.xyzw, s2
  add r5.xyzw, -r4.xyzw, r5.xyzw
  mad r2.xyzw, r0.xxxx, r5.xyzw, r4.xyzw
  sample r4.xyzw, r1.xyxx, t3.xyzw, s4
  sample r5.xyzw, r1.xyxx, t5.xyzw, s5
  add r5.xyzw, -r4.xyzw, r5.xyzw
  mad r3.xyzw, r0.xxxx, r5.xyzw, r4.xyzw
endif 
add r0.x, r1.x, cb0[0].z
mul r0.x, r0.x, l(12.000000)
sincos r0.x, null, r0.x
add r0.x, r0.x, l(1.000000)
mul r0.x, r0.x, l(0.500000)
add r1.xyzw, -r2.xyzw, r3.xyzw
mad r0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw
add o0.xyzw, -r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
ret 
// Approximately 0 instruction slots used