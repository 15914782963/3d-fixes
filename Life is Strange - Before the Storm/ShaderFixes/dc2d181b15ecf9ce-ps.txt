// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed dc2d181b15ecf9ce-ps.txt
// 3DMigoto: dc2d181b15ecf9ce |    Unity headers extracted from Dawn_LISEyeShaderForward
//    Shader "Dawn/LISEyeShaderForward" {
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry" "RenderType"="Opaque" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Geometry" "RenderType"="Opaque" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Dawn_LISEyeShaderForward:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 139 9 0
//   undeciphered1a: 9
//   Keywords { "DIRECTIONAL_COOKIE" }
//   undeciphered2: 1 5 3 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 32 [_LightColor0]
//   Float 128 [_irisSize]
//   Float 132 [_pupilSize]
//   Float 136 [_limbus]
//   Float 140 [_parallax]
//   Float 144 [_smoothness]
//   Float 148 [_specularTerm]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_CorneaBump] 2D 4
//   SetTexture 1 [_MainTex] 2D 3
//   SetTexture 2 [_IrisTex] 2D 2
//   SetTexture 3 [_IrisColorTex] 2D 1
//   SetTexture 4 [_LightTexture0] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:39:51 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed dc2d181b15ecf9ce-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

mad r0.xyz, cb0[8].xxxx, l(0.600000, -0.0360000022, -0.0540000089, 0.000000), l(-1.000000, 0.500000, 1.200000, 0.000000)
add r0.z, -r0.y, r0.z
mad r0.y, cb0[8].y, r0.z, r0.y
add r0.z, r0.y, l(-1.000000)
mul r0.xz, r0.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
mad r0.zw, v1.xxxy, r0.yyyy, -r0.zzzz
mad r1.xy, v1.xyxx, l(0.750000, 0.750000, 0.000000, 0.000000), l(0.125000, 0.125000, 0.000000, 0.000000)
add r0.zw, r0.zzzw, -r1.xxxy
mad r0.zw, v1.xxxy, r0.zzzw, r1.xxxy
sample r1.xyzw, r0.zwzz, t2.xyzw, s2
add r0.z, cb0[8].w, cb0[8].w
mul r1.xy, cb0[8].xzxx, l(0.600000, 20.000000, 0.000000, 0.000000)
mad r0.xw, v1.xxxy, r1.xxxx, -r0.xxxx
sample r2.xyzw, r0.xwxx, t2.xyzw, s2
mul r0.z, r0.z, r2.y
mul r1.x, r0.z, l(0.500000)
mad r0.z, r1.z, r0.z, -r1.x
add r2.xzw, -v5.xxyz, r10.xxyz
dp3 r1.x, r2.xzwx, r2.xzwx
rsq r1.x, r1.x
mul r3.xyz, r1.xxxx, r2.xzwx
mad r2.xzw, r2.xxzw, r1.xxxx, cb2[0].xxyz
mul r4.xyz, r3.yyyy, v3.xyzx
mad r4.xyz, v2.xyzx, r3.xxxx, r4.xyzx
mad r4.xyz, v4.xyzx, r3.zzzz, r4.xyzx
mov r4.y, -r4.y
max r1.xw, -r4.xxxz, l(-0.750000, 0.000000, 0.000000, -0.750000)
max r3.w, r4.z, l(0.000000)
mad_sat r3.w, r3.w, l(0.450000), l(-0.200000)
min r4.xz, r1.xxwx, l(0.750000, 0.000000, 0.750000, 0.000000)
dp3 r1.x, r4.xyzx, r4.xyzx
rsq r1.x, r1.x
mul r4.xy, r1.xxxx, r4.xyxx
mad r1.x, r4.z, r1.x, l(0.420000)
div r1.xw, r4.xxxy, r1.xxxx
mul r4.xy, r0.zzzz, r1.xwxx
mul r4.xy, r2.yyyy, r4.xyxx
max r4.xy, r4.xyxx, l(-0.100000, -0.100000, 0.000000, 0.000000)
min r4.xy, r4.xyxx, l(0.100000, 0.100000, 0.000000, 0.000000)
sample r5.xyzw, v1.xyxx, t2.xyzw, s2
add r0.z, -r5.z, l(1.000000)
mul r2.y, r0.y, r0.z
mad r0.y, r0.z, r0.y, l(-1.000000)
mul r0.z, r2.y, l(0.500000)
mad r0.xy, r0.xwxx, r0.yyyy, -r0.zzzz
add r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
add r0.zw, -r4.xxxy, r0.xxxy
sample r4.xyzw, r0.zwzz, t3.xyzw, s1
sample r6.xyzw, v1.xyxx, t1.xyzw, s3
add r4.xyz, r4.xyzx, -r6.xyzx
add r0.z, cb0[8].x, l(-1.000000)
mul r0.z, r0.z, l(0.500000)
mad r0.zw, v1.xxxy, cb0[8].xxxx, -r0.zzzz
sample r7.xyzw, r0.zwzz, t1.xyzw, s3
sample r8.xyzw, r0.zwzz, t0.xyzw, s4
mad r4.xyz, r7.wwww, r4.xyzx, r6.xyzx
mad r5.yzw, r4.xxyz, -r1.yyyy, -r4.xxyz
mul r0.z, r1.z, r3.w
mul r0.w, r3.w, l(0.250000)
mad r0.z, r0.z, l(0.500000), -r0.w
mad r0.xy, -r0.zzzz, r1.xwxx, r0.xyxx
sample r0.xyzw, r0.xyxx, t3.xyzw, s1
add r0.x, -r7.w, l(2.000000)
mul r0.x, r0.x, r0.w
mul r0.x, r7.w, r0.x
mul_sat r0.x, r3.w, r0.x
mad r0.xyz, r0.xxxx, r5.yzwy, r4.xyzx
max r0.w, r5.x, r7.w
mul r1.x, r0.w, cb0[9].y
mad r0.w, -r0.w, cb0[9].y, l(1.000000)
max r1.y, r1.x, r1.x
max r1.y, r1.x, r1.y
add r1.y, -r1.y, l(1.000000)
mul r0.xyz, r0.xyzx, r1.yyyy
dp3 r1.y, r2.xzwx, r2.xzwx
max r1.y, r1.y, l(0.001000)
rsq r1.y, r1.y
mul r1.yzw, r1.yyyy, r2.xxzw
mad r2.xy, r8.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
add r4.xy, r8.wyww, r8.wyww
dp2 r2.x, r2.xyxx, r2.xyxx
min r2.x, r2.x, l(1.000000)
add r2.x, -r2.x, l(1.000000)
sqrt r4.z, r2.x
add r2.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r2.xyz, r7.wwww, r2.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mad r2.w, -cb0[9].x, r7.w, l(1.000000)
dp3 r4.x, v2.xyzx, r2.xyzx
dp3 r4.y, v3.xyzx, r2.xyzx
dp3 r4.z, v4.xyzx, r2.xyzx
dp3 r2.x, r4.xyzx, r4.xyzx
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, r4.xyzx
dp3_sat r3.w, r2.xyzx, r1.yzwy
dp3_sat r1.y, cb2[0].xyzx, r1.yzwy
mul r1.z, r2.w, r2.w
mul r1.w, r1.z, r1.z
mad r4.x, r3.w, r1.w, -r3.w
mad r3.w, r4.x, r3.w, l(1.000000)
mad r3.w, r3.w, r3.w, l(1.000000012E-007)
mul r1.w, r1.w, l(0.318309873)
div r1.w, r1.w, r3.w
dp3 r3.x, r2.xyzx, r3.xyzx
dp3_sat r2.x, r2.xyzx, cb2[0].xyzx
mad r2.y, -r2.w, r2.w, l(1.000000)
mad r2.z, |r3.x|, r2.y, r1.z
mad r1.z, r2.x, r2.y, r1.z
mul r1.z, r1.z, |r3.x|
add r2.y, -|r3.x|, l(1.000000)
mad r1.z, r2.x, r2.z, r1.z
add r1.z, r1.z, l(0.000010)
div r1.z, l(0.500000), r1.z
mul r1.z, r1.w, r1.z
mul r1.z, r1.z, l(3.14159274)
mul r1.z, r2.x, r1.z
max r1.z, r1.z, l(0.000000)
dp3 r1.w, r1.xxxx, r1.xxxx
ne r1.w, r1.w, l(0.000000)
and r1.w, r1.w, l(0x3f800000)
mul r1.z, r1.w, r1.z
mul r3.xy, v5.yyyy, cb0[5].xyxx
mad r3.xy, cb0[4].xyxx, v5.xxxx, r3.xyxx
mad r3.xy, cb0[6].xyxx, v5.zzzz, r3.xyxx
add r3.xy, r3.xyxx, cb0[7].xyxx
sample r3.xyzw, r3.xyxx, t4.xyzw, s0
mul r3.xyz, r3.wwww, cb0[2].xyzx
mul r4.xyz, r1.zzzz, r3.xyzx
add r1.z, -r1.y, l(1.000000)
mul r1.w, r1.z, r1.z
mul r1.w, r1.w, r1.w
mul r1.z, r1.z, r1.w
mad r0.w, r0.w, r1.z, r1.x
mul r1.xzw, r0.wwww, r4.xxyz
add r0.w, r1.y, r1.y
mul r0.w, r1.y, r0.w
mad r0.w, r0.w, r2.w, l(-0.500000)
mul r1.y, r2.y, r2.y
mul r1.y, r1.y, r1.y
mul r1.y, r2.y, r1.y
mad r1.y, r0.w, r1.y, l(1.000000)
add r2.y, -r2.x, l(1.000000)
mul r2.z, r2.y, r2.y
mul r2.z, r2.z, r2.z
mul r2.y, r2.y, r2.z
mad r0.w, r0.w, r2.y, l(1.000000)
mul r0.w, r1.y, r0.w
mul r0.w, r2.x, r0.w
mul r2.xyz, r0.wwww, r3.xyzx
mad o0.xyz, r0.xyzx, r2.xyzx, r1.xzwx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used