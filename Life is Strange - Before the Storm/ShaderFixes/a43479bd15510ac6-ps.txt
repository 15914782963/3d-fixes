// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a43479bd15510ac6-ps.txt
// 3DMigoto: a43479bd15510ac6 |    Unity headers extracted from Custom_S_WindBillboard
//    Shader "Custom/S_WindBillboard" {
//      Fallback "Transparent/Cutout/Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "RenderType"="Opaque" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_S_WindBillboard:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 60 4 0
//   undeciphered1a: 4
//   Keywords { "SPOT" }
//   undeciphered2: 1 4 3 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 240
//   Vector 32 [_LightColor0]
//   Float 136 [_BumpScale]
//   Vector 160 [_Color]
//   Float 224 [_Cutoff]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_BumpMap] 2D 3
//   SetTexture 2 [_LightTexture0] 2D 0
//   SetTexture 3 [_LightTextureB0] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:38:12 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 5     zw        1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// SV_IsFrontFace           0   x           6    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps_sgv v6.x, is_front_face
dcl_output o0.xyzw
dcl_temps 6
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a43479bd15510ac6-ps.txt

mul r4.w, -r4.x, r4.y
mad r5.xyz, -r4.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s2
mad r1.x, r0.w, cb0[10].w, -cb0[14].x
mul r0.xyzw, r0.xyzw, cb0[10].xyzw
lt r1.x, r1.x, l(0.000000)
discard_nz r1.x
sample r1.xyzw, v1.xyxx, t1.xyzw, s3
mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.xy, r1.xyxx, cb0[8].zzzz
dp2 r1.w, r1.xyxx, r1.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r1.z, r1.w
movc r1.w, v6.x, l(1.000000), l(-1.000000)
mul r1.xyz, r1.wwww, r1.xyzx
dp3 r2.x, v2.xyzx, r1.xyzx
dp3 r2.y, v3.xyzx, r1.xyzx
dp3 r2.z, v4.xyzx, r1.xyzx
dp3 r1.x, r2.xyzx, r2.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, r2.xyzx
add r2.xyz, -v5.xyzx, r5.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
dp3 r1.w, r1.xyzx, r2.xyzx
add r1.w, -|r1.w|, l(1.000000)
mul r2.w, r1.w, r1.w
mul r2.w, r2.w, r2.w
mul r1.w, r1.w, r2.w
add r3.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx
mul r3.xyz, r2.wwww, r3.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
max r2.w, r2.w, l(0.001000)
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
dp3_sat r2.x, r3.xyzx, r2.xyzx
dp3_sat r1.x, r1.xyzx, r3.xyzx
dp2 r1.y, r2.xxxx, r2.xxxx
add r1.y, r1.y, l(-0.500000)
mad r1.z, r1.y, r1.w, l(1.000000)
add r1.w, -r1.x, l(1.000000)
mul r2.x, r1.w, r1.w
mul r2.x, r2.x, r2.x
mul r1.w, r1.w, r2.x
mad r1.y, r1.y, r1.w, l(1.000000)
mul r1.y, r1.z, r1.y
mul r1.x, r1.x, r1.y
mul r2.xyzw, v5.yyyy, cb0[5].xyzw
mad r2.xyzw, cb0[4].xyzw, v5.xxxx, r2.xyzw
mad r2.xyzw, cb0[6].xyzw, v5.zzzz, r2.xyzw
add r2.xyzw, r2.xyzw, cb0[7].xyzw
div r1.yz, r2.xxyx, r2.wwww
add r1.yz, r1.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
sample r3.xyzw, r1.yzyy, t2.xyzw, s0
lt r1.y, l(0.000000), r2.z
dp3 r1.z, r2.xyzx, r2.xyzx
sample r2.xyzw, r1.zzzz, t3.xyzw, s1
and r1.y, r1.y, l(0x3f800000)
mul r1.y, r3.w, r1.y
mul r1.y, r2.x, r1.y
mul r1.yzw, r1.yyyy, cb0[2].xxyz
mul r1.xyz, r1.xxxx, r1.yzwy
mul o0.xyz, r0.xyzx, r1.xyzx
mov o0.w, r0.w
ret 
// Approximately 0 instruction slots used