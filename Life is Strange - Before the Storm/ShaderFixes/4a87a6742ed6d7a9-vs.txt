// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 4a87a6742ed6d7a9-vs.txt
// 3DMigoto: 4a87a6742ed6d7a9 | Matched 66 variants of 3 shaders: Hidden/Internal-PrePassLighting, Hidden/LISDeferredReflections, Hidden/LISDeferredShading
//
// 0000000fff8000000:    Unity headers extracted from Hidden_Internal-PrePassLighting
// 00000000004000000:    Unity headers extracted from Hidden_LISDeferredReflections
// 3ffffff0003ffffff:    Unity headers extracted from Hidden_LISDeferredShading
// 0000000fff8000000:    Shader "Hidden/Internal-PrePassLighting" {
// 00000000004000000:    Shader "Hidden/LISDeferredReflections" {
// 3ffffff0003ffffff:    Shader "Hidden/LISDeferredShading" {
//                         SubShader 1/1 {
// 3ffffff0007ffffff:        Pass 1/2 {
// 0000000fff8000000: 1:     Pass 1/2 {
// 0000000fff8000000: 2:     Pass 2/2 {
// 3fffffffffbffffff:          Tags { "SHADOWSUPPORT"="true" }
//                             ZWrite Off
//                             Program "vp" {
//                               SubProgram "d3d11" {
//                               }
//                             }
//                           }
//                         }
//                       }
//
// 0000000fff8000000: Unity 5.3 headers extracted from Hidden_Internal-PrePassLighting:
// 00000000004000000: Unity 5.3 headers extracted from Hidden_LISDeferredReflections:
// 3ffffff0003ffffff: Unity 5.3 headers extracted from Hidden_LISDeferredShading:
//                      API d3d11
//                      Shader model vs_4_0
//                      undeciphered1: 201608170 14 0 0
//                      undeciphered1a: 2
// 00800000000080000:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "UNITY_HDR_ON" }
// 00000400200000040:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
// 00040000000004000:   Keywords { "DIRECTIONAL" "UNITY_HDR_ON" }
// 00000020010000002:   Keywords { "DIRECTIONAL" }
// 01000000000100000:   Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_HDR_ON" }
// 00000800400000080:   Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
// 00200000000020000:   Keywords { "DIRECTIONAL_COOKIE" "UNITY_HDR_ON" }
// 00000100080000010:   Keywords { "DIRECTIONAL_COOKIE" }
// 10000000001000000:   Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_HDR_ON" }
// 00008004000000800:   Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
// 02000000000200000:   Keywords { "POINT" "SHADOWS_CUBE" "UNITY_HDR_ON" }
// 00001000800000100:   Keywords { "POINT" "SHADOWS_CUBE" }
// 00020000000002000:   Keywords { "POINT" "UNITY_HDR_ON" }
// 00000010008000001:   Keywords { "POINT" }
// 20000000002000000:   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "UNITY_HDR_ON" }
// 00010008000001000:   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
// 04000000000400000:   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "UNITY_HDR_ON" }
// 00002001000000200:   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
// 00100000000010000:   Keywords { "POINT_COOKIE" "UNITY_HDR_ON" }
// 00000080040000008:   Keywords { "POINT_COOKIE" }
// 08000000000800000:   Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "UNITY_HDR_ON" }
// 00004002000000400:   Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
// 00400000000040000:   Keywords { "SPOT" "SHADOWS_DEPTH" "UNITY_HDR_ON" }
// 00000200100000020:   Keywords { "SPOT" "SHADOWS_DEPTH" }
// 00080000000008000:   Keywords { "SPOT" "UNITY_HDR_ON" }
// 00000040020000004:   Keywords { "SPOT" }
//                      undeciphered2: 1 0 3 0 0 0
//                      undeciphered3: 3 2 0 0 1 2
// 0000000dff8000000:   ConstBuffer "$Globals" 192
// 00000002000000000:   ConstBuffer "$Globals" 256
// 37ffbff00077ffbff:   ConstBuffer "$Globals" 272
// 08004000000800400:   ConstBuffer "$Globals" 336
//                      Float 32 [_LightAsQuad]
//                      ConstBuffer "UnityPerCamera" 144
//                      Vector 80 [_ProjectionParams]
//                      ConstBuffer "UnityPerDraw" 352
//                      Matrix 0 [glstate_matrix_mvp]
//                      Matrix 64 [glstate_matrix_modelview0]
//                      BindCB "$Globals" 0
//                      BindCB "UnityPerCamera" 1
//                      BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:35:37 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[3], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_temps 3

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r2.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb2[3].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 4a87a6742ed6d7a9-vs.txt
ne r2.w, r0.w, l(1.0)
if_nz r2.w
  add r2.w, r0.w, -r2.y
  mad r0.x, r2.w, r2.x, r0.x
endif

mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o1.zw, r0.zzzw
add o1.xy, r1.zzzz, r1.xwxx
mul r0.xyz, v0.yyyy, cb2[5].xyzx
mad r0.xyz, cb2[4].xyzx, v0.xxxx, r0.xyzx
mad r0.xyz, cb2[6].xyzx, v0.zzzz, r0.xyzx
add r0.xyz, r0.xyzx, cb2[7].xyzx
mul r1.xyz, r0.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000)
mad r0.xyz, -r0.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000), v1.xyzx
mad o2.xyz, cb0[2].xxxx, r0.xyzx, r1.xyzx
ret 
// Approximately 0 instruction slots used