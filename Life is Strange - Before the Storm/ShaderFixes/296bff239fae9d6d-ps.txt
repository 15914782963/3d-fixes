// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 296bff239fae9d6d-ps.txt
// 3DMigoto: 296bff239fae9d6d |    Unity headers extracted from Custom_AnimateBreak
//    Shader "Custom/AnimateBreak" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="Geometry" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Geometry" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_AnimateBreak:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 92 4 0
//   undeciphered1a: 6
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 4 3 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 128
//   Vector 32 [_LightColor0]
//   Float 68 [_Indent]
//   Float 72 [_Parallax]
//   Vector 96 [_Color]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_ParallaxMap] 2D 3
//   SetTexture 1 [_MainTex] 2D 0
//   SetTexture 2 [_SpecGlossMap] 2D 1
//   SetTexture 3 [_BumpMap] 2D 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:34:43 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 296bff239fae9d6d-ps.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s3
mul r0.x, cb0[4].z, l(0.500000)
mad r0.x, r0.y, cb0[4].z, -r0.x
add r0.yzw, -v5.xxyz, r7.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r1.yzw, r0.yyzw, r1.xxxx
mad r0.yzw, r0.yyzw, r1.xxxx, cb2[0].xxyz
mul r2.xyz, r1.zzzz, v3.xyzx
mad r2.xyz, v2.xyzx, r1.yyyy, r2.xyzx
mad r2.xyz, v4.xyzx, r1.wwww, r2.xyzx
dp3 r1.x, r2.xyzx, r2.xyzx
rsq r1.x, r1.x
mul r2.xy, r1.xxxx, r2.xyxx
mad r1.x, r2.z, r1.x, l(0.420000)
div r2.xy, r2.xyxx, r1.xxxx
mul r2.xy, r0.xxxx, r2.xyxx
mad r2.xy, r2.xyxx, cb0[4].yyyy, v1.xyxx
sample r3.xyzw, r2.xyxx, t3.xyzw, s2
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.x, r3.xyxx, r3.xyxx
min r0.x, r0.x, l(1.000000)
add r0.x, -r0.x, l(1.000000)
sqrt r3.z, r0.x
dp3 r0.x, r3.xyzx, r3.xyzx
rsq r0.x, r0.x
mul r3.xyz, r0.xxxx, r3.xyzx
dp3 r4.x, v2.xyzx, r3.xyzx
dp3 r4.y, v3.xyzx, r3.xyzx
dp3 r4.z, v4.xyzx, r3.xyzx
dp3 r0.x, r4.xyzx, r4.xyzx
rsq r0.x, r0.x
mul r3.xyz, r0.xxxx, r4.xyzx
dp3 r0.x, r0.yzwy, r0.yzwy
max r0.x, r0.x, l(0.001000)
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r0.yzwy
dp3_sat r0.w, r3.xyzx, r0.xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
sample r4.xyzw, r2.xyxx, t2.xyzw, s1
sample r2.xyzw, r2.xyxx, t1.xyzw, s0
mul r2.xyzw, r2.wxyz, cb0[6].wxyz
add r5.xyzw, -r4.wxyz, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r0.y, r5.x, r5.x
mul r0.z, r0.y, r0.y
mad r1.x, r0.w, r0.z, -r0.w
mad r0.w, r1.x, r0.w, l(1.000000)
mad r0.w, r0.w, r0.w, l(1.000000012E-007)
mul r0.z, r0.z, l(0.318309873)
div r0.z, r0.z, r0.w
dp3_sat r0.w, r3.xyzx, cb2[0].xyzx
dp3 r1.x, r3.xyzx, r1.yzwy
mad r1.y, -r5.x, r5.x, l(1.000000)
mad r1.z, |r1.x|, r1.y, r0.y
mad r0.y, r0.w, r1.y, r0.y
mul r0.y, r0.y, |r1.x|
add r1.x, -|r1.x|, l(1.000000)
mad r0.y, r0.w, r1.z, r0.y
add r0.y, r0.y, l(0.000010)
div r0.y, l(0.500000), r0.y
mul r0.y, r0.z, r0.y
mul r0.y, r0.y, l(3.14159274)
mul r0.y, r0.w, r0.y
max r0.y, r0.y, l(0.000000)
dp3 r0.z, r4.xyzx, r4.xyzx
ne r0.z, r0.z, l(0.000000)
and r0.z, r0.z, l(0x3f800000)
mul r0.y, r0.z, r0.y
mul r1.yzw, r0.yyyy, cb0[2].xxyz
add r0.y, -r0.x, l(1.000000)
mul r0.x, r0.x, r0.x
dp2 r0.x, r0.xxxx, r5.xxxx
add r0.x, r0.x, l(-0.500000)
mul r0.z, r0.y, r0.y
mul r0.z, r0.z, r0.z
mul r0.y, r0.y, r0.z
mad r3.xyz, r5.yzwy, r0.yyyy, r4.xyzx
mul r1.yzw, r1.yyzw, r3.xxyz
mul r0.y, r1.x, r1.x
mul r0.y, r0.y, r0.y
mul r0.y, r1.x, r0.y
mad r0.y, r0.x, r0.y, l(1.000000)
add r0.z, -r0.w, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.x, r0.x, r0.z, l(1.000000)
mul r0.x, r0.y, r0.x
mul r0.x, r0.w, r0.x
mul r0.xyz, r0.xxxx, cb0[2].xyzx
mov_sat r2.x, r2.x
mul r2.xyz, r2.xxxx, r2.yzwy
max r0.w, r4.y, r4.x
max r0.w, r4.z, r0.w
add r0.w, -r0.w, l(1.000000)
mul r2.xyz, r0.wwww, r2.xyzx
mad o0.xyz, r2.xyzx, r0.xyzx, r1.yzwy
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used