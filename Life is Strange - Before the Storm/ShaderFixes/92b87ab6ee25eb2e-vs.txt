// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 92b87ab6ee25eb2e-vs.txt
// 3DMigoto: 92b87ab6ee25eb2e | Matched 2 variants of 1 shaders: Custom/EnvBlend
//
//       Unity headers extracted from Custom_EnvBlend
//       Shader "Custom/EnvBlend" {
//         CustomEditor "EnvBlendShaderGUI"
//         Fallback "VertexLit"
//         SubShader 2/2 {
//           LOD 150
//           Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//           Pass 1/4 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="ForwardBase" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             ZWrite [_ZWrite]
//             Program "vp" {
//               SubProgram "d3d11_9x" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Custom_EnvBlend:
//      API d3d11_9x
//      Shader model vs_4_0_level_9_1
//      undeciphered1: 201608170 72 0 0
//      undeciphered1a: 6
// 1:   Keywords { "DIRECTIONAL" "FOG_EXP2" "VERTEXLIGHT_ON" "_NORMALMAP" "_SPECGLOSSMAP" }
// 2:   Keywords { "DIRECTIONAL" "FOG_EXP2" "_EMISSION" "VERTEXLIGHT_ON" "_NORMALMAP" "_SPECGLOSSMAP" }
//      undeciphered2: 1 0 5 0 0 0
//      undeciphered3: 155 5 0 0 1 2 3 4 4 5 7 8
//      ConstBuffer "$Globals" 176
//      Vector 96 [_MainTex_ST]
//      Vector 112 [_DetailAlbedoMap_ST]
//      Float 156 [_UVSec]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 720
//      Vector 32 [unity_4LightPosX0]
//      Vector 48 [unity_4LightPosY0]
//      Vector 64 [unity_4LightPosZ0]
//      Vector 80 [unity_4LightAtten0]
//      Vector 96 [unity_LightColor0]
//      Vector 112 [unity_LightColor1]
//      Vector 128 [unity_LightColor2]
//      Vector 144 [unity_LightColor3]
//      Vector 160 [unity_LightColor4]
//      Vector 176 [unity_LightColor5]
//      Vector 192 [unity_LightColor6]
//      Vector 208 [unity_LightColor7]
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      Vector 656 [unity_SHBr]
//      Vector 672 [unity_SHBg]
//      Vector 688 [unity_SHBb]
//      Vector 704 [unity_SHC]
//      ConstBuffer "UnityPerDraw" 352
//      Vector 336 [unity_WorldTransformParams]
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      ConstBuffer "UnityFog" 32
//      Vector 16 [unity_FogParams]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityPerDraw" 3
//      BindCB "UnityFog" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 05:04:34 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             6         2  ( FLT, FLT, FLT, FLT)
// c3         cb0             9         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c5         cb2             2         8  ( FLT, FLT, FLT, FLT)
// c13        cb2            38         7  ( FLT, FLT, FLT, FLT)
// c20        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c24        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c31        cb3            21         1  ( FLT, FLT, FLT, FLT)
// c32        cb4             1         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
    def c33, 9.99999997e-007, 0, 1, 0.416666657
    def c34, 1.05499995, -0.0549999997, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4 v4
    mad oT0.xy, v2, c1, c1.zwzw
    mul r0.x, c3.w, c3.w
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c2.xyxy, c2
    mul r0.xyz, v0.y, c25
    mad r0.xyz, c24, v0.x, r0
    mad r0.xyz, c26, v0.z, r0
    mad r0.xyz, c27, v0.w, r0
    add r1.xyz, r0, -c4
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r0.w, v4.w, c31.w
    mul r1.xyz, v4.y, c25
    mad r1.xyz, c24, v4.x, r1
    mad r1.xyz, c26, v4.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, v1, c28
    dp3 r1.y, v1, c29
    dp3 r1.z, v1, c30
    nrm r3.xyz, r1
    mul r1.xyz, r2.yzxw, r3.zxyw
    mad r1.xyz, r3.yzxw, r2.zxyw, -r1
    mov oT2.xyz, r2
    mul oT3.xyz, r0.w, r1
    mul r0.w, r3.y, r3.y
    mad r0.w, r3.x, r3.x, -r0.w
    mul r1, r3.yzzx, r3.xyzz
    dp4 r2.x, c16, r1
    dp4 r2.y, c17, r1
    dp4 r2.z, c18, r1
    mad r1.xyz, c19, r0.w, r2
    mov r3.w, c33.z
    dp4 r2.x, c13, r3
    dp4 r2.y, c14, r3
    dp4 r2.z, c15, r3
    add r1.xyz, r1, r2
    max r1.xyz, r1, c33.y
    mov r1.w, c33.w
    lit r2, r1.xxww
    mov r2.x, r2.z
    lit r4, r1.yyww
    lit r1, r1.zzww
    mov r2.z, r1.z
    mov r2.y, r4.z
    mad r1.xyz, r2, c34.x, c34.y
    max r1.xyz, r1, c33.y
    add r2, -r0.y, c6
    mul r4, r3.y, r2
    mul r2, r2, r2
    add r5, -r0.x, c5
    add r0, -r0.z, c7
    mad r4, r5, r3.x, r4
    mad r2, r5, r5, r2
    mad r2, r0, r0, r2
    mad r0, r0, r3.z, r4
    mov oT4.xyz, r3
    max r2, r2, c33.x
    rsq r3.x, r2.x
    rsq r3.y, r2.y
    rsq r3.z, r2.z
    rsq r3.w, r2.w
    mov r4.z, c33.z
    mad r2, r2, c8, r4.z
    mul r0, r0, r3
    max r0, r0, c33.y
    rcp r3.x, r2.x
    rcp r3.y, r2.y
    rcp r3.z, r2.z
    rcp r3.w, r2.w
    mul r0, r0, r3
    mul r2.xyz, r0.y, c10
    mad r2.xyz, c9, r0.x, r2
    mad r0.xyz, c11, r0.z, r2
    mad r0.xyz, c12, r0.w, r0
    add oT5.xyz, r1, r0
    mul r0, v0.y, c21
    mad r0, c20, v0.x, r0
    mad r0, c22, v0.z, r0
    add r0, r0, c23
    mul r1.x, r0.z, c32.x
    mul r1.x, r1.x, -r1.x
    exp oT1.w, r1.x
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT2.w, c33.y
    mov oT3.w, c33.y
    mov oT4.w, c33.y
    mov oT5.w, c33.y

// approximately 95 instruction slots used
vs_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[22], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xy
dcl_input v4.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o2.w
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 92b87ab6ee25eb2e-vs.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

mul r0.xyzw, v0.yyyy, cb3[1].xyzw
mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb3[3].xyzw
mov o0.xyzw, r0.xyzw
mul r0.x, r0.z, cb4[1].x
mul r0.x, r0.x, -r0.x
exp o2.w, r0.x
eq r0.x, cb0[9].w, l(0.000000)
movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
mul r0.xyz, v0.yyyy, cb3[13].xyzx
mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
add r1.xyz, r0.xyzx, -r7.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul o2.xyz, r0.wwww, r1.xyzx
mul r1.xyz, v4.yyyy, cb3[13].xyzx
mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mov o3.xyz, r1.xyzx
mov o3.w, l(0)
mov o4.w, l(0)
mul r0.w, v4.w, cb3[21].w
dp3 r2.x, v1.xyzx, cb3[16].xyzx
dp3 r2.y, v1.xyzx, cb3[17].xyzx
dp3 r2.z, v1.xyzx, cb3[18].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mul r3.xyz, r1.yzxy, r2.zxyz
mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
mul o4.xyz, r0.wwww, r1.xyzx
mov o5.w, l(0)
mov o5.xyz, r2.xyzx
mul r0.w, r2.y, r2.y
mad r0.w, r2.x, r2.x, -r0.w
mul r1.xyzw, r2.yzzx, r2.xyzz
dp4 r3.x, cb2[41].xyzw, r1.xyzw
dp4 r3.y, cb2[42].xyzw, r1.xyzw
dp4 r3.z, cb2[43].xyzw, r1.xyzw
mad r1.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
mov r2.w, l(1.000000)
dp4 r3.x, cb2[38].xyzw, r2.xyzw
dp4 r3.y, cb2[39].xyzw, r2.xyzw
dp4 r3.z, cb2[40].xyzw, r2.xyzw
add r1.xyz, r1.xyzx, r3.xyzx
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r1.xyz, r1.xyzx
mul r1.xyz, r1.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r1.xyz, r1.xyzx
mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r3.xyzw, -r0.yyyy, cb2[3].xyzw
mul r4.xyzw, r2.yyyy, r3.xyzw
mul r3.xyzw, r3.xyzw, r3.xyzw
add r5.xyzw, -r0.xxxx, cb2[2].xyzw
add r0.xyzw, -r0.zzzz, cb2[4].xyzw
mad r4.xyzw, r5.xyzw, r2.xxxx, r4.xyzw
mad r2.xyzw, r0.xyzw, r2.zzzz, r4.xyzw
mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
rsq r3.xyzw, r0.xyzw
mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
mul r2.xyzw, r2.xyzw, r3.xyzw
max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.xyzw, r0.xyzw, r2.xyzw
mul r2.xyz, r0.yyyy, cb2[7].xyzx
mad r2.xyz, cb2[6].xyzx, r0.xxxx, r2.xyzx
mad r0.xyz, cb2[8].xyzx, r0.zzzz, r2.xyzx
mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
add o6.xyz, r1.xyzx, r0.xyzx
mov o6.w, l(0)
ret 
// Approximately 0 instruction slots used