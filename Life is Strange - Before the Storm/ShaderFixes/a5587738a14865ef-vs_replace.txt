// hlsltool.py -I ../.. --fix-unity-sun-shafts --only-autofixed --fxc /home/dss/fxc.exe a5587738a14865ef-vs_replace.txt
// 3DMigoto: a5587738a14865ef |    Unity headers extracted from Hidden_SunShaftsComposite
//    Shader "Hidden/SunShaftsComposite" {
//      SubShader 1/1 {
//        Pass 2/5 {
//          ZWrite Off
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hidden_SunShaftsComposite:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201608170 6 0 0
//   undeciphered1a: 1
//   undeciphered2: 1 0 2 0 0 0
//   undeciphered3: 9 2 0 0 3 4
//   ConstBuffer "$Globals" 144
//   Vector 64 [_BlurRadius4]
//   Vector 80 [_SunPosition]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   BindCB "$Globals" 0
//   BindCB "UnityPerDraw" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

// ---- Created with 3Dmigoto v1.2.68 on Sat Dec 30 11:38:14 2017
cbuffer cb1 : register(b1)
{
  float4 cb1[4];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[9];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : POSITION0,
  float2 v1 : TEXCOORD0,
  out float4 o0 : SV_POSITION0,
  out float2 o1 : TEXCOORD0,
  out float2 p1 : TEXCOORD1)
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
float separation = stereo.x, convergence = stereo.y, eye = stereo.z;

// Unity sun position fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --fix-unity-sun-shafts --only-autofixed --fxc /home/dss/fxc.exe a5587738a14865ef-vs_replace.txt
float4 _SunPosition = cb0[5];
_SunPosition.x += separation / 2;

  r0.xyzw = cb1[1].xyzw * v0.yyyy;
  r0.xyzw = cb1[0].xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = cb1[2].xyzw * v0.zzzz + r0.xyzw;
  o0.xyzw = cb1[3].xyzw * v0.wwww + r0.xyzw;
  r0.xy = _SunPosition.xy + -v1.xy;
  p1.xy = cb0[4].xy * r0.xy;
  o1.xy = v1.xy;
  return;
}
