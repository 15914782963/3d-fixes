// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d477efe6759639c5-ps.txt
// 3DMigoto: d477efe6759639c5 | Matched 24 variants of 1 shaders: Dawn/Glows/LightShaft
//
//            Unity headers extracted from Dawn_Glows_LightShaft
//            Shader "Dawn/Glows/LightShaft" {
//              SubShader 1/1 {
//                LOD 100
//                Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//                Pass 1/1 {
//                  Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//                  ZWrite Off
//                  Program "fp" {
//                    SubProgram "d3d11_9x" {
//                    }
//                  }
//                }
//              }
//            }
//
//         Unity 5.3 headers extracted from Dawn_Glows_LightShaft:
//           API d3d11_9x
//           Shader model ps_4_0_level_9_1
//           undeciphered1: 201608170 22 4 0
//           undeciphered1a: 4
//           undeciphered2: 1 4 2 4 0 0
//           undeciphered3: 0 0
//           ConstBuffer "$Globals" 80
//           Vector 48 [_LightColor]
//           Float 64 [_InvFade]
//           Vector 68 [_FadeDistance] 2
//           ConstBuffer "UnityPerCamera" 144
//           Vector 64 [_WorldSpaceCameraPos] 3
//           Vector 112 [_ZBufferParams]
//           SetTexture 0 [_MainTex] 2D 0
//           SetTexture 1 [_FadeTex] 2D 1
//           SetTexture 2 [_CameraDepthTexture] 2D 3
//           SetTexture 3 [_EdgeTex] 2D 2
//           BindCB "$Globals" 0
//           BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 05:25:52 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
// TEXCOORD                 3   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             3         2  ( FLT, FLT, FLT, FLT)
// c2         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c3         cb1             7         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t0               
// s1             s1              t1               
// s2             s2              t3               
// s3             s3              t2               
//
//
// Level9 shader bytecode:
//
    ps_2_x
    def c4, 0.5, 0, 0, 0
    dcl t0
    dcl t1
    dcl t2.xyz
    dcl t3
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    rcp r0.w, t3.w
    mul r0.xy, r0.w, t3
    add r1.xyz, -t1, c2
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul r1.xyz, r1.w, r1
    nrm r2.xyz, t2
    dp3 r0.z, r1, r2
    abs_pp r1.x, r0.z
    mov_pp r1.y, c4.x
    texld r0, r0, s3
    texld_pp r2, r1, s2
    mad r2.w, c3.z, r0.x, c3.w
    rcp r2.w, r2.w
    add r2.w, r2.w, -t3.z
    mul_sat r2.w, r2.w, c1.x
    add r0.x, -c1.y, c1.z
    rcp r0.x, r0.x
    rcp r0.y, r1.w
    add r0.y, r0.y, -c1.y
    mul_sat r0.x, r0.x, r0.y
    mul r2.w, r0.x, r2.w
    mov r0.xy, t0.wzzw
    texld_pp r1, t0, s0
    texld_pp r0, r0, s1
    mul_pp r0, r1.x, r0
    mul_pp r0, r0, c0
    mul_pp r0.xyz, r2, r0
    mul_pp r0, r2.w, r0
    mov_pp oC0, r0

// approximately 32 instruction slots used (4 texture, 28 arithmetic)
ps_4_0
dcl_constantbuffer cb0[5], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 6
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d477efe6759639c5-ps.txt

mul r4.w, -r4.x, r4.y
mad r5.xyz, -r4.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v3.xyzx, v3.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v3.xyzx
add r1.xyz, -v2.xyzx, r5.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r1.w, r0.w
sqrt r0.w, r0.w
add r0.w, r0.w, -cb0[4].y
mul r1.xyz, r1.wwww, r1.xyzx
dp3 r0.x, r1.xyzx, r0.xyzx
mov r0.x, |r0.x|
mov r0.y, l(0.500000)
sample r1.xyzw, r0.xyxx, t3.xyzw, s2
sample r2.xyzw, v1.xyxx, t0.xyzw, s0
sample r3.xyzw, v1.zwzz, t1.xyzw, s1
mul r2.xyzw, r2.xxxx, r3.xyzw
mul r2.xyzw, r2.xyzw, cb0[3].xyzw
mul r2.xyz, r1.xyzx, r2.xyzx
add r0.x, -cb0[4].y, cb0[4].z
div_sat r0.x, r0.w, r0.x
div r0.yz, v4.xxyx, v4.wwww
sample r1.xyzw, r0.yzyy, t2.xyzw, s3
mad r0.y, cb1[7].z, r1.x, cb1[7].w
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
add r0.y, r0.y, -v4.z
mul_sat r0.y, r0.y, cb0[4].x
mul r0.x, r0.x, r0.y
mul o0.xyzw, r0.xxxx, r2.xyzw
ret 
// Approximately 0 instruction slots used