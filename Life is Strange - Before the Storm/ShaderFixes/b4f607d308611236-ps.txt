// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b4f607d308611236-ps.txt
// 3DMigoto: b4f607d308611236 |    Unity headers extracted from Custom_RedEyeShader
//    Shader "Custom/RedEyeShader" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 3/4 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_RedEyeShader:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 153 8 4
//   undeciphered1a: 16
//   Keywords { "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
//   undeciphered2: 1 10 3 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 160
//   Vector 16 [unity_DynamicLightmap_HDR]
//   Float 64 [_Parallax]
//   Float 68 [_Smoothness]
//   Vector 72 [_RedStrength] 2
//   Vector 80 [_Specular]
//   Vector 96 [_Color]
//   Float 112 [_HighlightMask]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_ParallaxMap] 2D 4
//   SetTexture 1 [_BumpMap] 2D 5
//   SetTexture 2 [_WellBumpMap] 2D 6
//   SetTexture 3 [_MainTex] 2D 2
//   SetTexture 4 [_RedTex] 2D 3
//   SetTexture 5 [unity_DynamicLightmap] 2D 0
//   SetTexture 6 [unity_DynamicDirectionality] 2D -1
//   SetTexture 7 [unity_DynamicNormal] 2D -1
//   SetTexture 8 [unity_SpecCube0] CUBE 1
//   SetTexture 9 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityReflectionProbes" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 05:15:48 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_resource_texturecube (float,float,float,float) t9
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.zw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 18
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r16.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b4f607d308611236-ps.txt

mul r16.w, -r16.x, r16.y
mad r17.xyz, -r16.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r17.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
dp3 r1.w, v5.xyzx, v5.xyzx
rsq r1.w, r1.w
mul r3.xy, r1.wwww, v5.xyxx
sample r4.xyzw, v1.xyxx, t0.xyzw, s4
mul r2.w, r4.y, cb0[4].z
mul r3.z, r2.w, l(0.250000)
mad r3.z, r4.x, l(0.200000), -r3.z
sample r5.xyzw, v1.xyxx, t1.xyzw, s5
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r3.w, r5.xyxx, r5.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r5.z, r3.w
sample r6.xyzw, v1.xyxx, t2.xyzw, s6
mad r6.xy, r6.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r3.w, r6.xyxx, r6.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r6.z, r3.w
add r4.xzw, -r5.xxyz, r6.xxyz
mad r4.xzw, cb0[4].zzzz, r4.xxzw, r5.xxyz
mul r3.w, cb0[4].x, l(0.500000)
mad r3.z, r3.z, cb0[4].x, -r3.w
mad r1.w, v5.z, r1.w, l(0.420000)
div r3.xy, r3.xyxx, r1.wwww
mad r3.xy, r3.zzzz, r3.xyxx, v1.xyxx
sample r5.xyzw, r3.xyxx, t3.xyzw, s2
sample r3.xyzw, r3.xyxx, t4.xyzw, s3
add r3.xyz, -r5.xyzx, r3.xyzx
mad r3.xyz, cb0[4].wwww, r3.xyzx, r5.xyzx
mul r3.xyz, r3.xyzx, cb0[6].xyzx
mad r1.w, r2.w, l(0.275000), l(1.000000)
mul r3.xyz, r1.wwww, r3.xyzx
mad r1.w, r4.y, cb0[4].z, cb0[4].y
min r5.w, r1.w, l(1.000000)
mad r6.xyz, r2.wwww, l(0.050000, 0.050000, 0.050000, 0.000000), cb0[5].xyzx
min r5.xyz, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r1.w, cb0[7].x, l(252.000000)
mul r1.w, r1.w, l(0.00392156886)
dp3 r6.x, v2.xyzx, r4.xzwx
dp3 r6.y, v3.xyzx, r4.xzwx
dp3 r6.z, v4.xyzx, r4.xzwx
add r2.w, -r5.w, l(1.000000)
dp3 r3.w, -r2.xyzx, r6.xyzx
add r3.w, r3.w, r3.w
mad r4.xyz, r6.xyzx, -r3.wwww, -r2.xyzx
sample r7.xyzw, v6.zwzz, t5.xyzw, s0
mul r3.w, r7.w, cb0[1].x
mul r7.xyz, r7.xyzx, r3.wwww
log r7.xyz, r7.xyzx
mul r7.xyz, r7.xyzx, cb0[1].yyyy
exp r7.xyz, r7.xyzx
sample r8.xyzw, v6.zwzz, t6.xyzw, s0
sample r9.xyzw, v6.zwzz, t7.xyzw, s0
mad r8.xyz, r8.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r3.w, r8.xyzx, r8.xyzx
sqrt r3.w, r3.w
max r3.w, r3.w, l(0.001000)
div r8.xyz, r8.xyzx, r3.wwww
mad r9.xyz, r9.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r4.w, r9.xyzx, r8.xyzx
max r4.w, r4.w, l(0.125000)
div r7.xyz, r7.xyzx, r4.wwww
add r4.w, -r3.w, l(1.000000)
mul r9.xyz, r4.wwww, r7.xyzx
mul r7.xyz, r3.wwww, r7.xyzx
dp3_sat r3.w, r6.xyzx, r8.xyzx
mul r9.xyz, r3.wwww, r9.xyzx
mul r9.xyz, r1.wwww, r9.xyzx
lt r4.w, l(0.000000), cb2[2].w
if_nz r4.w
  dp3 r4.w, r4.xyzx, r4.xyzx
  rsq r4.w, r4.w
  mul r10.xyz, r4.wwww, r4.xyzx
  add r11.xyz, -r0.xyzx, cb2[0].xyzx
  div r11.xyz, r11.xyzx, r10.xyzx
  add r12.xyz, -r0.xyzx, cb2[1].xyzx
  div r12.xyz, r12.xyzx, r10.xyzx
  lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  min r4.w, r11.y, r11.x
  min r4.w, r11.z, r4.w
  add r11.xyz, r0.xyzx, -cb2[2].xyzx
  mad r10.xyz, r10.xyzx, r4.wwww, r11.xyzx
else 
  mov r10.xyz, r4.xyzx
endif 
mad r4.w, -r2.w, l(0.700000), l(1.700000)
mul r4.w, r2.w, r4.w
mul r4.w, r4.w, l(6.000000)
sample_l r10.xyzw, r10.xyzx, t8.xyzw, s1, r4.w
eq r6.w, cb2[3].w, l(1.000000)
log r7.w, r10.w
mul r7.w, r7.w, cb2[3].y
exp r7.w, r7.w
movc r6.w, r6.w, r7.w, l(1.000000)
mul r6.w, r6.w, cb2[3].x
mul r11.xyz, r10.xyzx, r6.wwww
lt r7.w, cb2[1].w, l(0.999990)
if_nz r7.w
  lt r7.w, l(0.000000), cb2[6].w
  if_nz r7.w
    dp3 r7.w, r4.xyzx, r4.xyzx
    rsq r7.w, r7.w
    mul r12.xyz, r4.xyzx, r7.wwww
    add r13.xyz, -r0.xyzx, cb2[4].xyzx
    div r13.xyz, r13.xyzx, r12.xyzx
    add r14.xyz, -r0.xyzx, cb2[5].xyzx
    div r14.xyz, r14.xyzx, r12.xyzx
    lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
    movc r13.xyz, r15.xyzx, r13.xyzx, r14.xyzx
    min r7.w, r13.y, r13.x
    min r7.w, r13.z, r7.w
    add r0.xyz, r0.xyzx, -cb2[6].xyzx
    mad r4.xyz, r12.xyzx, r7.wwww, r0.xyzx
  endif 
  sample_l r4.xyzw, r4.xyzx, t9.xyzw, s1, r4.w
  eq r0.x, cb2[7].w, l(1.000000)
  log r0.y, r4.w
  mul r0.y, r0.y, cb2[7].y
  exp r0.y, r0.y
  movc r0.x, r0.x, r0.y, l(1.000000)
  mul r0.x, r0.x, cb2[7].x
  mul r0.xyz, r4.xyzx, r0.xxxx
  mad r4.xyz, r6.wwww, r10.xyzx, -r0.xyzx
  mad r11.xyz, cb2[1].wwww, r4.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.wwww, r11.xyzx
max r4.x, r5.y, r5.x
max r4.x, r5.z, r4.x
add r4.x, -r4.x, l(1.000000)
mul r3.xyz, r3.xyzx, r4.xxxx
dp3 r2.x, r6.xyzx, r2.xyzx
mul r2.y, r2.w, r2.w
mul r2.z, r2.y, r2.y
mad r4.yz, r2.yyyy, r2.yyyy, l(0.000000, 1.000000, -1.000000, 0.000000)
div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), r4.y
add r4.x, -r4.x, r5.w
add_sat r4.x, r4.x, l(1.000000)
mul r0.xyz, r0.xyzx, r2.yyyy
add r2.x, -|r2.x|, l(1.000000)
mul r2.y, r2.x, r2.x
mul r2.y, r2.y, r2.y
mul r2.x, r2.x, r2.y
add r4.xyw, -r5.xyxz, r4.xxxx
mad r4.xyw, r2.xxxx, r4.xyxw, r5.xyxz
mul r0.xyz, r0.xyzx, r4.xywx
mad r0.xyz, r3.xyzx, r9.xyzx, r0.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, r8.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3_sat r0.w, r6.xyzx, r1.xyzx
dp3_sat r1.x, r8.xyzx, r1.xyzx
mul r0.w, r0.w, r0.w
mad r0.w, r0.w, r4.z, l(1.000010)
mul r1.x, r1.x, r1.x
max r1.x, r1.x, l(0.100000)
mad r1.y, r2.w, r2.w, l(0.500000)
mul r1.x, r1.y, r1.x
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.x
mul r0.w, r0.w, l(4.000000)
div r0.w, r2.z, r0.w
mad r1.xyz, r0.wwww, r5.xyzx, r3.xyzx
mul r1.xyz, r7.xyzx, r1.xyzx
mul r1.xyz, r3.wwww, r1.xyzx
mad o3.xyz, r1.xyzx, r1.wwww, r0.xyzx
mad o2.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mad o0.w, cb0[7].x, l(0.00392156886), l(0.988235354)
mov o0.xyz, r3.xyzx
mov o1.xyzw, r5.xyzw
mov o2.w, l(1.000000)
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used