// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6fa5c6ae37548eab-ps.txt
// 3DMigoto: 6fa5c6ae37548eab |    Unity headers extracted from Dawn_BurningLeaves
//    Shader "Dawn/BurningLeaves" {
//      Fallback "Transparent/Cutout/Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 3/5 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Dawn_BurningLeaves:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 102 7 4
//   undeciphered1a: 14
//   Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
//   undeciphered2: 1 9 3 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 160
//   Vector 16 [unity_DynamicLightmap_HDR]
//   Float 72 [_BumpScale]
//   Vector 80 [_Color]
//   Float 96 [_BurnVal]
//   Float 144 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_SpecGlossMap] 2D 3
//   SetTexture 2 [_BurnTex] 2D 5
//   SetTexture 3 [_SpecGlossBurn] 2D 6
//   SetTexture 4 [_EmissionMap] 2D 7
//   SetTexture 5 [_BumpMap] 2D 4
//   SetTexture 6 [unity_DynamicLightmap] 2D 0
//   SetTexture 7 [unity_SpecCube0] CUBE 1
//   SetTexture 8 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityReflectionProbes" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:36:45 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float     zw
// SV_IsFrontFace           0   x           6    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.zw
dcl_input_ps_sgv v6.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6fa5c6ae37548eab-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r15.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
sample r2.xyzw, v1.xyxx, t0.xyzw, s2
mul r2.xyzw, r2.xyzw, cb0[5].xyzw
sample r3.xyzw, v1.xyxx, t1.xyzw, s3
sample r4.xyzw, v1.xyxx, t2.xyzw, s5
sample r5.xyzw, v1.xyxx, t3.xyzw, s6
mad r4.xyzw, r4.xyzw, cb0[5].xyzw, -r2.xyzw
mad r2.xyzw, cb0[6].xxxx, r4.xyzw, r2.xyzw
add r4.xyzw, -r3.xyzw, r5.xyzw
mad r3.xyzw, cb0[6].xxxx, r4.xyzw, r3.xyzw
add r0.w, v2.w, v2.w
mad r0.w, v1.y, l(14.000000), r0.w
mad r0.w, cb1[0].y, l(2.000000), r0.w
sincos r0.w, null, r0.w
add r0.w, r0.w, l(1.000000)
add r0.w, r0.w, r0.w
mul r0.w, r0.w, cb0[6].x
sample r4.xyzw, v1.xyxx, t4.xyzw, s7
sample r5.xyzw, v1.xyxx, t5.xyzw, s4
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r5.xy, r5.xyxx, cb0[4].zzzz
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
movc r1.w, v6.x, l(1.000000), l(-1.000000)
mul r5.xyz, r1.wwww, r5.xyzx
add r1.w, r2.w, -cb0[9].x
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
dp3 r6.x, v2.xyzx, r5.xyzx
dp3 r6.y, v3.xyzx, r5.xyzx
dp3 r6.z, v4.xyzx, r5.xyzx
add r1.w, -r3.w, l(1.000000)
dp3 r2.w, -r1.xyzx, r6.xyzx
add r2.w, r2.w, r2.w
mad r5.xyz, r6.xyzx, -r2.wwww, -r1.xyzx
sample r7.xyzw, v5.zwzz, t6.xyzw, s0
mul r2.w, r7.w, cb0[1].x
mul r7.xyz, r7.xyzx, r2.wwww
log r7.xyz, r7.xyzx
mul r7.xyz, r7.xyzx, cb0[1].yyyy
exp r7.xyz, r7.xyzx
lt r2.w, l(0.000000), cb2[2].w
if_nz r2.w
  dp3 r2.w, r5.xyzx, r5.xyzx
  rsq r2.w, r2.w
  mul r8.xyz, r2.wwww, r5.xyzx
  add r9.xyz, -r0.xyzx, cb2[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r0.xyzx, cb2[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r2.w, r9.y, r9.x
  min r2.w, r9.z, r2.w
  add r9.xyz, r0.xyzx, -cb2[2].xyzx
  mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
else 
  mov r8.xyz, r5.xyzx
endif 
mad r2.w, -r1.w, l(0.700000), l(1.700000)
mul r2.w, r1.w, r2.w
mul r2.w, r2.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t7.xyzw, s1, r2.w
eq r4.w, cb2[3].w, l(1.000000)
log r5.w, r8.w
mul r5.w, r5.w, cb2[3].y
exp r5.w, r5.w
movc r4.w, r4.w, r5.w, l(1.000000)
mul r4.w, r4.w, cb2[3].x
mul r9.xyz, r8.xyzx, r4.wwww
lt r5.w, cb2[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb2[6].w
  if_nz r5.w
    dp3 r5.w, r5.xyzx, r5.xyzx
    rsq r5.w, r5.w
    mul r10.xyz, r5.wwww, r5.xyzx
    add r11.xyz, -r0.xyzx, cb2[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r0.xyzx, cb2[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r5.w, r11.y, r11.x
    min r5.w, r11.z, r5.w
    add r0.xyz, r0.xyzx, -cb2[6].xyzx
    mad r5.xyz, r10.xyzx, r5.wwww, r0.xyzx
  endif 
  sample_l r5.xyzw, r5.xyzx, t8.xyzw, s1, r2.w
  eq r0.x, cb2[7].w, l(1.000000)
  log r0.y, r5.w
  mul r0.y, r0.y, cb2[7].y
  exp r0.y, r0.y
  movc r0.x, r0.x, r0.y, l(1.000000)
  mul r0.x, r0.x, cb2[7].x
  mul r0.xyz, r5.xyzx, r0.xxxx
  mad r5.xyz, r4.wwww, r8.xyzx, -r0.xyzx
  mad r9.xyz, cb2[1].wwww, r5.xyzx, r0.xyzx
endif 
max r0.x, r3.y, r3.x
max r0.x, r3.z, r0.x
add r0.x, -r0.x, l(1.000000)
mul r2.xyz, r0.xxxx, r2.xyzx
dp3 r0.y, r6.xyzx, r1.xyzx
mul r0.z, r1.w, r1.w
mad r0.z, r0.z, r0.z, l(1.000000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
add r0.x, -r0.x, r3.w
add_sat r0.x, r0.x, l(1.000000)
mul r1.xyz, r9.xyzx, r0.zzzz
add r0.y, -|r0.y|, l(1.000000)
mul r0.z, r0.y, r0.y
mul r0.z, r0.z, r0.z
mul r0.y, r0.y, r0.z
add r5.xyz, -r3.xyzx, r0.xxxx
mad r0.xyz, r0.yyyy, r5.xyzx, r3.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mad r0.xyz, r2.xyzx, r7.xyzx, r0.xyzx
mad o2.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mad o3.xyz, r4.xyzx, r0.wwww, r0.xyzx
mov o0.xyz, r2.xyzx
mov o0.w, l(1.000000)
mov o1.xyzw, r3.xyzw
mov o2.w, l(1.000000)
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used