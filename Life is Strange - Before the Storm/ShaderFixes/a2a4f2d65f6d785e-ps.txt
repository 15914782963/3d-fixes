// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a2a4f2d65f6d785e-ps.txt
// 3DMigoto: a2a4f2d65f6d785e |    Unity headers extracted from Custom_S_FountainWater
//    Shader "Custom/S_FountainWater" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_S_FountainWater:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 124 4 0
//   undeciphered1a: 5
//   Keywords { "DIRECTIONAL" "FOG_EXP2" }
//   undeciphered2: 1 3 4 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 160
//   Vector 32 [_LightColor0]
//   Float 64 [_InvFade]
//   Vector 80 [_Specular]
//   Vector 96 [_Color]
//   Float 112 [_WorldTiling]
//   Float 116 [_WaterSpeed]
//   Float 120 [_WaveletTiling]
//   Float 128 [_WaveletMin]
//   Float 132 [_WaveletMax]
//   Float 144 [_CutoffSteps]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_BumpMap] 2D 0
//   SetTexture 1 [_WaveletBlend] 2D 1
//   SetTexture 2 [_CameraDepthTexture] 2D 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 05:09:42 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 5      w        1     NONE   float      w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyzw
dcl_output o0.xyzw
dcl_temps 7
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a2a4f2d65f6d785e-ps.txt

mul r5.w, -r5.x, r5.y
mad r6.xyz, -r5.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.xy, v4.xzxx, cb0[7].xxxx
mad r0.zw, cb0[7].yyyy, cb1[0].xxxx, r0.xxxy
sample r1.xyzw, r0.zwzz, t0.xyzw, s0
mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.z, r1.xyxx, r1.xyxx
min r0.z, r0.z, l(1.000000)
add r0.z, -r0.z, l(1.000000)
sqrt r1.z, r0.z
mul r0.z, cb0[7].y, cb1[0].x
mul r2.xyz, r0.zzzz, l(1.418000, 2.980000, 2.198000, 0.000000)
mad r0.zw, r0.xxxy, l(0.000000, 0.000000, 1.418000, 1.418000), -r2.xxxx
mad r0.xy, r0.xyxx, cb0[7].zzzz, r2.yzyy
sample r2.xyzw, r0.xyxx, t1.xyzw, s1
sample r0.xyzw, r0.zwzz, t0.xyzw, s0
mad r0.xy, r0.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r0.xyxx, r0.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r0.z, r0.w
add r0.xyz, r0.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r0.xyz, r0.xyzx, cb0[9].xxxx
round_ni r0.xyz, r0.xyzx
div r0.xyz, r0.xyzx, cb0[9].xxxx
add r0.xyz, r0.xyzx, l(0.000000, 0.000000, -0.990000, 0.000000)
add r0.w, -cb0[8].x, cb0[8].y
mad r0.w, r2.x, r0.w, cb0[8].x
mad r0.xyz, r0.wwww, r0.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r1.x, v1.xyzx, r0.xyzx
dp3 r1.y, v2.xyzx, r0.xyzx
dp3 r1.z, v3.xyzx, r0.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r0.xzw, r0.xxxx, r1.xxyz
add r1.xyz, -v4.xyzx, r6.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mad r2.xyz, r1.xyzx, r1.wwww, cb2[0].xyzx
mul r1.xyz, r1.wwww, r1.xyzx
dp3 r1.x, r0.xzwx, r1.xyzx
dp3 r1.y, r2.xyzx, r2.xyzx
max r1.y, r1.y, l(0.001000)
rsq r1.y, r1.y
mul r1.yzw, r1.yyyy, r2.xxyz
dp3_sat r2.x, r0.xzwx, r1.yzwy
dp3_sat r0.x, r0.xzwx, cb2[0].xyzx
dp3_sat r0.z, cb2[0].xyzx, r1.yzwy
div r1.yzw, v5.xxyz, v5.wwww
sample r3.xyzw, r1.yzyy, t2.xyzw, s2
mad r0.w, cb1[7].z, r1.w, cb1[7].w
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mad r1.y, cb1[7].z, r3.x, cb1[7].w
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
add r0.w, -r0.w, r1.y
mul_sat r0.w, r0.w, cb0[4].x
log r0.w, r0.w
mul r0.y, r0.w, |r0.y|
exp r0.y, r0.y
add r3.xyzw, cb0[5].wxyz, l(5.000000, 5.000000, 5.000000, 5.000000)
mad_sat r3.xyzw, r0.yyyy, r3.xyzw, l(-5.000000, -5.000000, -5.000000, -5.000000)
add r4.xyzw, -r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r0.w, r4.x, r4.x
mul r1.y, r0.w, r0.w
mad r1.z, r2.x, r1.y, -r2.x
mad r1.z, r1.z, r2.x, l(1.000000)
mad r1.z, r1.z, r1.z, l(1.000000012E-007)
mul r1.y, r1.y, l(0.318309873)
div r1.y, r1.y, r1.z
mad r1.z, -r4.x, r4.x, l(1.000000)
mad r1.w, |r1.x|, r1.z, r0.w
mad r0.w, r0.x, r1.z, r0.w
mul r0.w, r0.w, |r1.x|
add r1.x, -|r1.x|, l(1.000000)
mad r0.w, r0.x, r1.w, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.w, r1.y, r0.w
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r0.x, r0.w
dp3 r1.y, r3.yzwy, r3.yzwy
ne r1.y, r1.y, l(0.000000)
and r1.y, r1.y, l(0x3f800000)
mul r0.w, r0.w, r1.y
mul r1.yzw, r0.wwww, cb0[2].xxyz
add r0.w, -r0.z, l(1.000000)
mul r0.z, r0.z, r0.z
dp2 r0.z, r0.zzzz, r4.xxxx
add r0.z, r0.z, l(-0.500000)
mul r2.x, r0.w, r0.w
mul r2.x, r2.x, r2.x
mul r0.w, r0.w, r2.x
mad r2.xyz, r4.yzwy, r0.wwww, r3.yzwy
mul r1.yzw, r1.yyzw, r2.xxyz
mul r2.xyzw, r0.yyyy, cb0[6].xyzw
mul r2.xyz, r0.yyyy, r2.xyzx
max r0.y, r3.z, r3.y
max r0.y, r3.w, r0.y
add r0.y, -r0.y, l(1.000000)
mul r2.xyz, r0.yyyy, r2.xyzx
mul r2.xyz, r2.wwww, r2.xyzx
mul r0.w, r1.x, r1.x
mul r0.w, r0.w, r0.w
mul r0.w, r1.x, r0.w
mad r0.w, r0.z, r0.w, l(1.000000)
add r1.x, -r0.x, l(1.000000)
mul r3.x, r1.x, r1.x
mul r3.x, r3.x, r3.x
mul r1.x, r1.x, r3.x
mad r0.z, r0.z, r1.x, l(1.000000)
mul r0.z, r0.w, r0.z
mul r0.x, r0.x, r0.z
mul r0.xzw, r0.xxxx, cb0[2].xxyz
mad r0.xzw, r2.xxyz, r0.xxzw, r1.yyzw
div r1.x, v1.w, cb1[5].y
add r1.x, -r1.x, l(1.000000)
mul r1.x, r1.x, cb1[5].z
max r1.x, r1.x, l(0.000000)
mul r1.x, r1.x, cb3[1].x
mul r1.x, r1.x, -r1.x
exp r1.x, r1.x
mul o0.xyz, r0.xzwx, r1.xxxx
add r0.x, -r0.y, l(1.000000)
mad o0.w, r2.w, r0.y, r0.x
ret 
// Approximately 0 instruction slots used