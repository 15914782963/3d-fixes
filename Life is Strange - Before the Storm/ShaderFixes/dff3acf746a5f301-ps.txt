// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed dff3acf746a5f301-ps.txt
// 3DMigoto: dff3acf746a5f301 |    Unity headers extracted from Dawn_BurningLeaves
//    Shader "Dawn/BurningLeaves" {
//      Fallback "Transparent/Cutout/Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Dawn_BurningLeaves:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 178 10 6
//   undeciphered1a: 17
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
//   undeciphered2: 1 10 6 9 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 144
//   Vector 32 [_LightColor0]
//   Float 72 [_BumpScale]
//   Vector 80 [_Color]
//   Float 96 [_BurnVal]
//   Float 128 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 3
//   SetTexture 1 [_SpecGlossMap] 2D 4
//   SetTexture 2 [_BurnTex] 2D 6
//   SetTexture 3 [_SpecGlossBurn] 2D 7
//   SetTexture 4 [_EmissionMap] 2D 8
//   SetTexture 5 [_BumpMap] 2D 5
//   SetTexture 6 [_ShadowMapTexture] 2D 2
//   SetTexture 7 [unity_SpecCube0] CUBE 0
//   SetTexture 8 [unity_SpecCube1] CUBE -1
//   SetTexture 9 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityReflectionProbes" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 05:29:35 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 6     z         1     NONE   float     z 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 7   xyzw        7     NONE   float       
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyw
dcl_input_ps_sgv v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 19
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r17.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed dff3acf746a5f301-ps.txt

mul r17.w, -r17.x, r17.y
mad r18.xyz, -r17.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r18.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
sample r3.xyzw, v1.xyxx, t0.xyzw, s3
mul r3.xyzw, r3.xyzw, cb0[5].xyzw
sample r4.xyzw, v1.xyxx, t1.xyzw, s4
sample r5.xyzw, v1.xyxx, t2.xyzw, s6
sample r6.xyzw, v1.xyxx, t3.xyzw, s7
mad r5.xyzw, r5.xyzw, cb0[5].xyzw, -r3.xyzw
mad r3.xyzw, cb0[6].xxxx, r5.xyzw, r3.xyzw
add r5.xyzw, -r4.wxyz, r6.wxyz
mad r4.xyzw, cb0[6].xxxx, r5.xyzw, r4.wxyz
add r1.w, v2.w, v2.w
mad r1.w, v1.y, l(14.000000), r1.w
mad r1.w, cb1[0].y, l(2.000000), r1.w
sincos r1.w, null, r1.w
add r1.w, r1.w, l(1.000000)
add r1.w, r1.w, r1.w
mul r1.w, r1.w, cb0[6].x
sample r5.xyzw, v1.xyxx, t4.xyzw, s8
sample r6.xyzw, v1.xyxx, t5.xyzw, s5
mad r6.xy, r6.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r6.xy, r6.xyxx, cb0[4].zzzz
dp2 r2.w, r6.xyxx, r6.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r6.z, r2.w
movc r2.w, v8.x, l(1.000000), l(-1.000000)
mul r6.xyz, r2.wwww, r6.xyzx
add r2.w, r3.w, -cb0[8].x
lt r2.w, r2.w, l(0.000000)
discard_nz r2.w
div r7.xy, v6.xyxx, v6.wwww
sample r7.xyzw, r7.xyxx, t6.xyzw, s2
dp3 r8.x, v2.xyzx, r6.xyzx
dp3 r8.y, v3.xyzx, r6.xyzx
dp3 r8.z, v4.xyzx, r6.xyzx
add r6.xyzw, -r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
dp3 r2.w, -r2.xyzx, r8.xyzx
add r2.w, r2.w, r2.w
mad r7.yzw, r8.xxyz, -r2.wwww, -r2.xxyz
mul r9.xyz, r7.xxxx, cb0[2].xyzx
eq r2.w, cb5[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb5[0].y, l(1.000000)
  mul r10.xyz, v3.wwww, cb5[2].xyzx
  mad r10.xyz, cb5[1].xyzx, v2.wwww, r10.xyzx
  mad r10.xyz, cb5[3].xyzx, v4.wwww, r10.xyzx
  add r10.xyz, r10.xyzx, cb5[4].xyzx
  movc r10.xyz, r2.wwww, r10.xyzx, r0.xyzx
  add r10.xyz, r10.xyzx, -cb5[6].xyzx
  mul r10.yzw, r10.xxyz, cb5[5].xxyz
  mul r2.w, r10.y, l(0.250000)
  mul r5.w, cb5[0].z, l(0.500000)
  mad r7.x, -cb5[0].z, l(0.500000), l(0.250000)
  max r2.w, r2.w, r5.w
  min r10.x, r7.x, r2.w
  sample r11.xyzw, r10.xzwx, t9.xyzw, s1
  add r12.xyz, r10.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r12.xyzw, r12.xyzx, t9.xyzw, s1
  add r10.xyz, r10.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r10.xyzw, r10.xyzx, t9.xyzw, s1
  mov r8.w, l(1.000000)
  dp4 r11.x, r11.xyzw, r8.xyzw
  dp4 r11.y, r12.xyzw, r8.xyzw
  dp4 r11.z, r10.xyzw, r8.xyzw
else 
  mov r8.w, l(1.000000)
  dp4 r11.x, cb2[38].xyzw, r8.xyzw
  dp4 r11.y, cb2[39].xyzw, r8.xyzw
  dp4 r11.z, cb2[40].xyzw, r8.xyzw
endif 
add r10.xyz, r11.xyzx, v5.xyzx
max r10.xyz, r10.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.w, l(0.000000), cb4[2].w
if_nz r2.w
  dp3 r2.w, r7.yzwy, r7.yzwy
  rsq r2.w, r2.w
  mul r11.xyz, r2.wwww, r7.yzwy
  add r12.xyz, -r0.xyzx, cb4[0].xyzx
  div r12.xyz, r12.xyzx, r11.xyzx
  add r13.xyz, -r0.xyzx, cb4[1].xyzx
  div r13.xyz, r13.xyzx, r11.xyzx
  lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
  movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
  min r2.w, r12.y, r12.x
  min r2.w, r12.z, r2.w
  add r12.xyz, r0.xyzx, -cb4[2].xyzx
  mad r11.xyz, r11.xyzx, r2.wwww, r12.xyzx
else 
  mov r11.xyz, r7.yzwy
endif 
mad r2.w, -r6.x, l(0.700000), l(1.700000)
mul r2.w, r2.w, r6.x
mul r2.w, r2.w, l(6.000000)
sample_l r11.xyzw, r11.xyzx, t7.xyzw, s0, r2.w
eq r5.w, cb4[3].w, l(1.000000)
log r7.x, r11.w
mul r7.x, r7.x, cb4[3].y
exp r7.x, r7.x
movc r5.w, r5.w, r7.x, l(1.000000)
mul r5.w, r5.w, cb4[3].x
mul r12.xyz, r11.xyzx, r5.wwww
lt r7.x, cb4[1].w, l(0.999990)
if_nz r7.x
  lt r7.x, l(0.000000), cb4[6].w
  if_nz r7.x
    dp3 r7.x, r7.yzwy, r7.yzwy
    rsq r7.x, r7.x
    mul r13.xyz, r7.xxxx, r7.yzwy
    add r14.xyz, -r0.xyzx, cb4[4].xyzx
    div r14.xyz, r14.xyzx, r13.xyzx
    add r15.xyz, -r0.xyzx, cb4[5].xyzx
    div r15.xyz, r15.xyzx, r13.xyzx
    lt r16.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r13.xyzx
    movc r14.xyz, r16.xyzx, r14.xyzx, r15.xyzx
    min r7.x, r14.y, r14.x
    min r7.x, r14.z, r7.x
    add r0.xyz, r0.xyzx, -cb4[6].xyzx
    mad r7.yzw, r13.xxyz, r7.xxxx, r0.xxyz
  endif 
  sample_l r7.xyzw, r7.yzwy, t8.xyzw, s0, r2.w
  eq r0.x, cb4[7].w, l(1.000000)
  log r0.y, r7.w
  mul r0.y, r0.y, cb4[7].y
  exp r0.y, r0.y
  movc r0.x, r0.x, r0.y, l(1.000000)
  mul r0.x, r0.x, cb4[7].x
  mul r0.xyz, r7.xyzx, r0.xxxx
  mad r7.xyz, r5.wwww, r11.xyzx, -r0.xyzx
  mad r12.xyz, cb4[1].wwww, r7.xyzx, r0.xyzx
endif 
dp3 r0.x, r8.xyzx, r8.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r8.xyzx
max r2.w, r4.z, r4.y
max r2.w, r4.w, r2.w
add r2.w, -r2.w, l(1.000000)
mul r3.xyz, r2.wwww, r3.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r0.xyzx, r2.xyzx
dp3_sat r2.x, r0.xyzx, cb2[0].xyzx
dp3_sat r0.x, r0.xyzx, r1.xyzx
dp3_sat r0.y, cb2[0].xyzx, r1.xyzx
mul r0.z, r0.y, r0.y
dp2 r0.z, r0.zzzz, r6.xxxx
add r0.z, r0.z, l(-0.500000)
add r1.x, -r2.x, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r1.x, r0.z, r1.x, l(1.000000)
add r1.y, -|r0.w|, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
mad r0.z, r0.z, r1.y, l(1.000000)
mul r0.z, r0.z, r1.x
mul r1.x, r6.x, r6.x
mad r1.z, -r6.x, r6.x, l(1.000000)
mad r2.y, |r0.w|, r1.z, r1.x
mad r1.z, r2.x, r1.z, r1.x
mul r0.w, |r0.w|, r1.z
mad r0.w, r2.x, r2.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r1.z, r1.x, r1.x
mad r2.y, r0.x, r1.z, -r0.x
mad r0.x, r2.y, r0.x, l(1.000000)
mul r1.z, r1.z, l(0.318309873)
mad r0.x, r0.x, r0.x, l(1.000000012E-007)
div r0.x, r1.z, r0.x
mul r0.x, r0.x, r0.w
mul r0.x, r0.x, l(3.14159274)
mul r0.xz, r2.xxxx, r0.xxzx
max r0.x, r0.x, l(0.000000)
mad r0.w, r1.x, r1.x, l(1.000000)
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
dp3 r1.x, r4.yzwy, r4.yzwy
ne r1.x, r1.x, l(0.000000)
and r1.x, r1.x, l(0x3f800000)
mul r0.x, r0.x, r1.x
add r1.x, -r2.w, r4.x
add_sat r1.x, r1.x, l(1.000000)
mad r2.xyz, r9.xyzx, r0.zzzz, r10.xyzx
mul r7.xyz, r9.xyzx, r0.xxxx
add r0.x, -r0.y, l(1.000000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.x, r0.y
mad r0.xyz, r6.yzwy, r0.xxxx, r4.yzwy
mul r0.xyz, r0.xyzx, r7.xyzx
mad r0.xyz, r3.xyzx, r2.xyzx, r0.xyzx
mul r2.xyz, r12.xyzx, r0.wwww
add r3.xyz, -r4.yzwy, r1.xxxx
mad r1.xyz, r1.yyyy, r3.xyzx, r4.yzwy
mad r0.xyz, r2.xyzx, r1.xyzx, r0.xyzx
mad r0.xyz, r5.xyzx, r1.wwww, r0.xyzx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
mov o0.w, r3.w
ret 
// Approximately 0 instruction slots used