// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0283e10ff8c451df-ps.txt
// 3DMigoto: 0283e10ff8c451df |    Unity headers extracted from Custom_RedEyeShader
//    Shader "Custom/RedEyeShader" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 3/4 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_RedEyeShader:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 136 9 4
//   undeciphered1a: 13
//   Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
//   undeciphered2: 1 11 3 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 176
//   Vector 0 [unity_Lightmap_HDR]
//   Vector 16 [unity_DynamicLightmap_HDR]
//   Float 64 [_Parallax]
//   Float 68 [_Smoothness]
//   Vector 72 [_RedStrength] 2
//   Vector 80 [_Specular]
//   Vector 96 [_Color]
//   Float 112 [_HighlightMask]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_ParallaxMap] 2D 5
//   SetTexture 1 [_BumpMap] 2D 6
//   SetTexture 2 [_WellBumpMap] 2D 7
//   SetTexture 3 [_MainTex] 2D 3
//   SetTexture 4 [_RedTex] 2D 4
//   SetTexture 5 [unity_Lightmap] 2D 0
//   SetTexture 6 [unity_LightmapInd] 2D -1
//   SetTexture 7 [unity_DynamicLightmap] 2D 1
//   SetTexture 8 [unity_DynamicDirectionality] 2D -1
//   SetTexture 9 [unity_SpecCube0] CUBE 2
//   SetTexture 10 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityReflectionProbes" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:33:44 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texturecube (float,float,float,float) t9
dcl_resource_texturecube (float,float,float,float) t10
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0283e10ff8c451df-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r14.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, v5.xyzx, v5.xyzx
rsq r0.w, r0.w
mul r2.xy, r0.wwww, v5.xyxx
sample r3.xyzw, v1.xyxx, t0.xyzw, s5
mul r1.w, r3.y, cb0[4].z
mul r2.z, r1.w, l(0.250000)
mad r2.z, r3.x, l(0.200000), -r2.z
sample r4.xyzw, v1.xyxx, t1.xyzw, s6
mad r4.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r4.xyxx, r4.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r4.z, r2.w
sample r5.xyzw, v1.xyxx, t2.xyzw, s7
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r5.xyxx, r5.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r5.z, r2.w
add r3.xzw, -r4.xxyz, r5.xxyz
mad r3.xzw, cb0[4].zzzz, r3.xxzw, r4.xxyz
mul r2.w, cb0[4].x, l(0.500000)
mad r2.z, r2.z, cb0[4].x, -r2.w
mad r0.w, v5.z, r0.w, l(0.420000)
div r2.xy, r2.xyxx, r0.wwww
mad r2.xy, r2.zzzz, r2.xyxx, v1.xyxx
sample r4.xyzw, r2.xyxx, t3.xyzw, s3
sample r2.xyzw, r2.xyxx, t4.xyzw, s4
add r2.xyz, -r4.xyzx, r2.xyzx
mad r2.xyz, cb0[4].wwww, r2.xyzx, r4.xyzx
mul r2.xyz, r2.xyzx, cb0[6].xyzx
mad r0.w, r1.w, l(0.275000), l(1.000000)
mul r2.xyz, r0.wwww, r2.xyzx
mad r0.w, r3.y, cb0[4].z, cb0[4].y
min r4.w, r0.w, l(1.000000)
mad r5.xyz, r1.wwww, l(0.050000, 0.050000, 0.050000, 0.000000), cb0[5].xyzx
min r4.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.w, cb0[7].x, l(252.000000)
mul r0.w, r0.w, l(0.00392156886)
dp3 r5.x, v2.xyzx, r3.xzwx
dp3 r5.y, v3.xyzx, r3.xzwx
dp3 r5.z, v4.xyzx, r3.xzwx
add r1.w, -r4.w, l(1.000000)
dp3 r2.w, -r1.xyzx, r5.xyzx
add r2.w, r2.w, r2.w
mad r3.xyz, r5.xyzx, -r2.wwww, -r1.xyzx
sample r6.xyzw, v6.xyxx, t5.xyzw, s0
log r2.w, r6.w
mul r2.w, r2.w, cb0[0].y
exp r2.w, r2.w
mul r2.w, r2.w, cb0[0].x
mul r6.xyz, r6.xyzx, r2.wwww
sample r7.xyzw, v6.xyxx, t6.xyzw, s0
add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r2.w, r5.xyzx, r7.xyzx
add r2.w, r2.w, l(0.500000)
mul r6.xyz, r2.wwww, r6.xyzx
max r2.w, r7.w, l(0.000100)
div r6.xyz, r6.xyzx, r2.wwww
sample r7.xyzw, v6.zwzz, t7.xyzw, s1
mul r2.w, r7.w, cb0[1].x
mul r7.xyz, r7.xyzx, r2.wwww
log r7.xyz, r7.xyzx
mul r7.xyz, r7.xyzx, cb0[1].yyyy
exp r7.xyz, r7.xyzx
sample r8.xyzw, v6.zwzz, t8.xyzw, s1
add r8.xyz, r8.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r2.w, r5.xyzx, r8.xyzx
add r2.w, r2.w, l(0.500000)
mul r7.xyz, r2.wwww, r7.xyzx
max r2.w, r8.w, l(0.000100)
div r7.xyz, r7.xyzx, r2.wwww
add r6.xyz, r6.xyzx, r7.xyzx
mul r6.xyz, r0.wwww, r6.xyzx
lt r2.w, l(0.000000), cb2[2].w
if_nz r2.w
  dp3 r2.w, r3.xyzx, r3.xyzx
  rsq r2.w, r2.w
  mul r7.xyz, r2.wwww, r3.xyzx
  add r8.xyz, -r0.xyzx, cb2[0].xyzx
  div r8.xyz, r8.xyzx, r7.xyzx
  add r9.xyz, -r0.xyzx, cb2[1].xyzx
  div r9.xyz, r9.xyzx, r7.xyzx
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  min r2.w, r8.y, r8.x
  min r2.w, r8.z, r2.w
  add r8.xyz, r0.xyzx, -cb2[2].xyzx
  mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
else 
  mov r7.xyz, r3.xyzx
endif 
mad r2.w, -r1.w, l(0.700000), l(1.700000)
mul r2.w, r1.w, r2.w
mul r2.w, r2.w, l(6.000000)
sample_l r7.xyzw, r7.xyzx, t9.xyzw, s2, r2.w
eq r3.w, cb2[3].w, l(1.000000)
log r5.w, r7.w
mul r5.w, r5.w, cb2[3].y
exp r5.w, r5.w
movc r3.w, r3.w, r5.w, l(1.000000)
mul r3.w, r3.w, cb2[3].x
mul r8.xyz, r7.xyzx, r3.wwww
lt r5.w, cb2[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb2[6].w
  if_nz r5.w
    dp3 r5.w, r3.xyzx, r3.xyzx
    rsq r5.w, r5.w
    mul r9.xyz, r3.xyzx, r5.wwww
    add r10.xyz, -r0.xyzx, cb2[4].xyzx
    div r10.xyz, r10.xyzx, r9.xyzx
    add r11.xyz, -r0.xyzx, cb2[5].xyzx
    div r11.xyz, r11.xyzx, r9.xyzx
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
    min r5.w, r10.y, r10.x
    min r5.w, r10.z, r5.w
    add r0.xyz, r0.xyzx, -cb2[6].xyzx
    mad r3.xyz, r9.xyzx, r5.wwww, r0.xyzx
  endif 
  sample_l r9.xyzw, r3.xyzx, t10.xyzw, s2, r2.w
  eq r0.x, cb2[7].w, l(1.000000)
  log r0.y, r9.w
  mul r0.y, r0.y, cb2[7].y
  exp r0.y, r0.y
  movc r0.x, r0.x, r0.y, l(1.000000)
  mul r0.x, r0.x, cb2[7].x
  mul r0.xyz, r9.xyzx, r0.xxxx
  mad r3.xyz, r3.wwww, r7.xyzx, -r0.xyzx
  mad r8.xyz, cb2[1].wwww, r3.xyzx, r0.xyzx
endif 
mul r0.xyz, r0.wwww, r8.xyzx
max r0.w, r4.y, r4.x
max r0.w, r4.z, r0.w
add r0.w, -r0.w, l(1.000000)
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r1.x, r5.xyzx, r1.xyzx
mul r1.y, r1.w, r1.w
mad r1.y, r1.y, r1.y, l(1.000000)
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
add r0.w, -r0.w, r4.w
add_sat r0.w, r0.w, l(1.000000)
mul r0.xyz, r0.xyzx, r1.yyyy
add r1.x, -|r1.x|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
add r1.yzw, -r4.xxyz, r0.wwww
mad r1.xyz, r1.xxxx, r1.yzwy, r4.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mad r0.xyz, r2.xyzx, r6.xyzx, r0.xyzx
mad o2.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
exp o3.xyz, -r0.xyzx
mad o0.w, cb0[7].x, l(0.00392156886), l(0.988235354)
mov o0.xyz, r2.xyzx
mov o1.xyzw, r4.xyzw
mov o2.w, l(1.000000)
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used