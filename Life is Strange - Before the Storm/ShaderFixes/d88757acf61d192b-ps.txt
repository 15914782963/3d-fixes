// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d88757acf61d192b-ps.txt
// 3DMigoto: d88757acf61d192b | Matched 6 variants of 1 shaders: Dawn/VFX/FractalScreenSaver
//
//        Unity headers extracted from Dawn_VFX_FractalScreenSaver
//        Shader "Dawn/VFX/FractalScreenSaver" {
//          Fallback "Diffuse"
//          SubShader 1/1 {
//            LOD 200
//            Tags { "RenderType"="Opaque" }
//            Pass 4/4 {
//              Name "META"
//              Tags { "LIGHTMODE"="Meta" "RenderType"="Opaque" }
//              Program "fp" {
//                SubProgram "d3d11" {
//                }
//              }
//            }
//          }
//        }
//
//     Unity 5.3 headers extracted from Dawn_VFX_FractalScreenSaver:
//       API d3d11
//       Shader model ps_4_0
//       undeciphered1: 201608170 41 2 3
//       undeciphered1a: 4
//       undeciphered2: 1 2 3 2 0 0
//       undeciphered3: 0 0
//       ConstBuffer "$Globals" 112
//       Float 68 [_Emissive]
//       Float 72 [unity_OneOverOutputBoost]
//       Float 76 [unity_MaxOutputValue]
//       Float 80 [unity_UseLinearSpace]
//       ConstBuffer "UnityPerCamera" 144
//       Vector 64 [_WorldSpaceCameraPos] 3
//       ConstBuffer "UnityMetaPass" 32
//       VectorBool 16 [unity_MetaFragmentControl] 4
//       SetTexture 0 [_MainTex] 2D 0
//       SetTexture 1 [_ScanLines] 2D 1
//       BindCB "$Globals" 0
//       BindCB "UnityPerCamera" 1
//       BindCB "UnityMetaPass" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 05:27:06 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 3     zw        1     NONE   float     zw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 6
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d88757acf61d192b-ps.txt

mul r4.w, -r4.x, r4.y
mad r5.xyz, -r4.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, r5.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r1.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r0.w, r1.x, l(1.500000)
add r1.x, r1.y, r1.y
mov r2.x, r0.w
mov r2.y, r1.x
mov r1.y, l(0)
loop 
  ige r1.z, r1.y, l(16)
  breakc_nz r1.z
  mul r1.z, r2.y, r2.y
  mad r3.x, r2.x, r2.x, -r1.z
  dp2 r3.y, r2.yyyy, r2.xxxx
  add r2.xy, r3.xyxx, v1.zwzz
  dp2 r1.z, r2.xyxx, r2.xyxx
  lt r1.z, l(4.000000), r1.z
  if_nz r1.z
    break 
  endif 
  iadd r1.y, r1.y, l(1)
endloop 
itof r0.w, r1.y
mul r1.x, r0.w, l(0.062500)
mov r1.y, l(0.500000)
sample r1.xyzw, r1.xyxx, t0.xyzw, s0
mul r2.xy, v1.xyxx, l(4.000000, 128.000000, 0.000000, 0.000000)
sample r2.xyzw, r2.xyxx, t1.xyzw, s1
dp3_sat r0.x, v2.xyzx, r0.xyzx
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.x
mul r0.xyz, r0.xxxx, r1.xyzx
mul r1.xyz, r0.xyzx, cb0[4].yyyy
mul r0.xyz, r2.xyzx, r0.xyzx
add r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
min r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xyz, r1.xyzx, r2.xyzx
mov_sat r0.w, cb0[4].z
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, r0.wwww
exp r0.xyz, r0.xyzx
min r0.xyz, r0.xyzx, cb0[4].wwww
mov r0.w, l(1.000000)
movc r0.xyzw, cb2[1].xxxx, r0.xyzw, l(0,0,0,0)
ne r1.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[5].x
mad r2.xyz, r1.xyzx, l(0.305306017, 0.305306017, 0.305306017, 0.000000), l(0.682171106, 0.682171106, 0.682171106, 0.000000)
mad r2.xyz, r1.xyzx, r2.xyzx, l(0.0125228781, 0.0125228781, 0.0125228781, 0.000000)
mul r2.xyz, r1.xyzx, r2.xyzx
movc r1.xyz, r1.wwww, r1.xyzx, r2.xyzx
mul r1.xyz, r1.xyzx, l(0.0103092780, 0.0103092780, 0.0103092780, 0.000000)
max r1.w, r1.y, r1.x
max r2.x, r1.z, l(0.020000)
max r1.w, r1.w, r2.x
mul r1.w, r1.w, l(255.000000)
round_pi r1.w, r1.w
mul r2.w, r1.w, l(0.00392156886)
div r2.xyz, r1.xyzx, r2.wwww
movc o0.xyzw, cb2[1].yyyy, r2.xyzw, r0.xyzw
ret 
// Approximately 0 instruction slots used