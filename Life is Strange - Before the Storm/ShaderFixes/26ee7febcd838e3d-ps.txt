// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 26ee7febcd838e3d-ps.txt
// 3DMigoto: 26ee7febcd838e3d |    Unity headers extracted from Glass Reflective
//    Shader "Glass Reflective" {
//      Fallback "Transparent/VertexLit"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="ForwardAdd" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11_9x" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Glass Reflective:
//   API d3d11_9x
//   Shader model ps_4_0_level_9_1
//   undeciphered1: 201608170 20 1 0
//   undeciphered1a: 2
//   Keywords { "DIRECTIONAL_COOKIE" }
//   undeciphered2: 1 1 3 1 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 160
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Float 144 [_Shininess]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_LightTexture0] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 04:30:26 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         6  ( FLT, FLT, FLT, FLT)
// c6         cb0             9         1  ( FLT, FLT, FLT, FLT)
// c7         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c8         cb2             0         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t0               
//
//
// Level9 shader bytecode:
//
    ps_2_x
    def c9, 0, 128, 1, 0
    dcl_pp t0.xyz
    dcl t1.xyz
    dcl_2d s0
    add r0.xyz, -t1, c7
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mad_pp r0.xyz, r0, r0.w, c8
    nrm_pp r1.xyz, r0
    dp3_pp r0.x, t0, r1
    max r1.x, r0.x, c9.x
    mov r0.y, c9.y
    mul r0.x, r0.y, c6.x
    pow r2.w, r1.x, r0.x
    mul r0.xy, t1.y, c3
    mad r0.xy, c2, t1.x, r0
    mad r0.xy, c4, t1.z, r0
    add r0.xy, r0, c5
    texld_pp r0, r0, s0
    mul_pp r0.xyz, r0.w, c0
    mul r0.xyz, r0, c1
    mul_pp r0.xyz, r2.w, r0
    mov_pp r0.w, c9.z
    mov_pp oC0, r0

// approximately 24 instruction slots used (1 texture, 23 arithmetic)
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 4
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r2.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 26ee7febcd838e3d-ps.txt

mul r2.w, -r2.x, r2.y
mad r3.xyz, -r2.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v2.xyzx, r3.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.x, v1.xyzx, r0.xyzx
max r0.x, r0.x, l(0.000000)
log r0.x, r0.x
mul r0.y, cb0[9].x, l(128.000000)
mul r0.x, r0.x, r0.y
exp r0.x, r0.x
mul r0.yz, v2.yyyy, cb0[5].xxyx
mad r0.yz, cb0[4].xxyx, v2.xxxx, r0.yyzy
mad r0.yz, cb0[6].xxyx, v2.zzzz, r0.yyzy
add r0.yz, r0.yyzy, cb0[7].xxyx
sample r1.xyzw, r0.yzyy, t0.xyzw, s0
mul r0.yzw, r1.wwww, cb0[2].xxyz
mul r0.yzw, r0.yyzw, cb0[3].xxyz
mul o0.xyz, r0.xxxx, r0.yzwy
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used