// asmtool.py -I ../.. --fix-unity-lighting-ps=TEXCOORD4 --only-autofixed 7473af6bde0245e4-ps.txt
// 3DMigoto: 7473af6bde0245e4 |    Unity headers extracted from Hidden_Internal-ScreenSpaceShadows
//    Shader "Hidden/Internal-ScreenSpaceShadows" {
//      SubShader 3/4 {
//        Tags { "ShadowmapFilter"="PCF_5x5" }
//        Pass 1/1 {
//          Tags { "ShadowmapFilter"="PCF_5x5" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hidden_Internal-ScreenSpaceShadows:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 91 1 0
//   undeciphered1a: 8
//   Keywords { "SHADOWS_SPLIT_SPHERES" }
//   undeciphered2: 1 2 4 2 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 64
//   Vector 48 [_ShadowMapTexture_TexelSize]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 112 [_ZBufferParams]
//   Vector 128 [unity_OrthoParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   ConstBuffer "UnityShadows" 416
//   Vector 0 [unity_ShadowSplitSpheres0]
//   Vector 16 [unity_ShadowSplitSpheres1]
//   Vector 32 [unity_ShadowSplitSpheres2]
//   Vector 48 [unity_ShadowSplitSpheres3]
//   Vector 64 [unity_ShadowSplitSqRadii]
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   Matrix 128 [unity_WorldToShadow0]
//   Matrix 192 [unity_WorldToShadow1]
//   Matrix 256 [unity_WorldToShadow2]
//   Matrix 320 [unity_WorldToShadow3]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_ShadowMapTexture] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//   BindCB "UnityShadows" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:36:53 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xy  
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyz         3     NONE   float   xyz 
// TEXCOORD                 4      w        3     NONE   float      w
// SV_POSITION              0   xyzw        4      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 11

// New input from vertex shader with unity_CameraInvProjection[0].x:
dcl_input_ps linear v3.w
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw

sample r0.xyzw, v0.xyxx, t0.xyzw, s0
mad r0.y, cb1[7].x, r0.x, cb1[7].y
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
add r0.z, -r0.y, r0.x
mad r0.y, cb1[8].w, r0.z, r0.y
add r0.x, -r0.x, l(1.000000)
add r1.xyz, -v2.xyzx, v3.xyzx
mad r0.xzw, r0.xxxx, r1.xxyz, v2.xxyz
mad r0.xzw, -v1.xxyz, r0.yyyy, r0.xxzw
mul r1.xyz, r0.yyyy, v1.xyzx
mad r0.xyz, cb1[8].wwww, r0.xzwx, r1.xyzx

// copy depth from r0.z to r9.x:
mov r9.x, r0.z


// Unity light/shadow fix (pixel shader stage) inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps=TEXCOORD4 --only-autofixed 7473af6bde0245e4-ps.txt

add r10.x, r9.x, -r8.y
mul r10.x, r8.x, r10.x
ne r8.w, l(0.0, 0.0, 0.0, 0.0), v3.w
if_nz r8.w
  mad r0.x, -r10.x, v3.w, r0.x
endif

mul r1.xyzw, r0.yyyy, cb2[19].xyzw
mad r1.xyzw, cb2[18].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb2[20].xyzw, r0.zzzz, r1.xyzw
add r0.xyzw, r0.xyzw, cb2[21].xyzw

if_z r8.w
  mad r0.xyz, -r10.xxxx, cb10[0].xyzx, r0.xyzw
endif

add r1.xyz, r0.xyzx, -cb3[0].xyzx
dp3 r1.x, r1.xyzx, r1.xyzx
add r2.xyz, r0.xyzx, -cb3[1].xyzx
dp3 r1.y, r2.xyzx, r2.xyzx
add r2.xyz, r0.xyzx, -cb3[2].xyzx
dp3 r1.z, r2.xyzx, r2.xyzx
add r2.xyz, r0.xyzx, -cb3[3].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
lt r1.xyzw, r1.xyzw, cb3[4].xyzw
movc r2.xyz, r1.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
and r1.xyzw, r1.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
add r2.xyz, r2.xyzx, r1.yzwy
max r1.yzw, r2.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.xyz, r0.yyyy, cb3[13].xyzx
mad r2.xyz, cb3[12].xyzx, r0.xxxx, r2.xyzx
mad r2.xyz, cb3[14].xyzx, r0.zzzz, r2.xyzx
mad r2.xyz, cb3[15].xyzx, r0.wwww, r2.xyzx
mul r2.xyz, r1.yyyy, r2.xyzx
mul r3.xyz, r0.yyyy, cb3[9].xyzx
mad r3.xyz, cb3[8].xyzx, r0.xxxx, r3.xyzx
mad r3.xyz, cb3[10].xyzx, r0.zzzz, r3.xyzx
mad r3.xyz, cb3[11].xyzx, r0.wwww, r3.xyzx
mad r2.xyz, r3.xyzx, r1.xxxx, r2.xyzx
dp4 r1.x, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r3.xyz, r0.yyyy, cb3[17].xyzx
mad r3.xyz, cb3[16].xyzx, r0.xxxx, r3.xyzx
mad r3.xyz, cb3[18].xyzx, r0.zzzz, r3.xyzx
mad r3.xyz, cb3[19].xyzx, r0.wwww, r3.xyzx
mad r2.xyz, r3.xyzx, r1.zzzz, r2.xyzx
mul r3.xyz, r0.yyyy, cb3[21].xyzx
mad r3.xyz, cb3[20].xyzx, r0.xxxx, r3.xyzx
mad r3.xyz, cb3[22].xyzx, r0.zzzz, r3.xyzx
mad r3.xyz, cb3[23].xyzx, r0.wwww, r3.xyzx
add r0.xyz, r0.xyzx, -cb3[25].xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
mad r0.yzw, r3.xxyz, r1.wwww, r2.xxyz
mad r0.yz, r0.yyzy, cb0[3].zzwz, l(0.000000, 0.500000, 0.500000, 0.000000)
add r0.w, -r1.x, r0.w
add r0.w, r0.w, l(1.000000)
frc r1.xy, r0.yzyy
round_ni r0.yz, r0.yyzy
add r0.yz, r0.yyzy, l(0.000000, -0.500000, -0.500000, 0.000000)
mad r1.zw, -r1.xxxy, l(0.000000, 0.000000, 3.000000, 3.000000), l(0.000000, 0.000000, 4.000000, 4.000000)
mul r2.x, r1.x, l(3.000000)
mad r2.xz, r2.xxxx, l(-1.000000, 0.000000, 1.000000, 0.000000), l(4.000000, 0.000000, 1.000000, 0.000000)
mov r2.y, l(7.000000)
mul r3.xyz, r1.wwww, r2.xyzx
mad r4.xy, -r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
div r1.zw, r4.xxxy, r1.zzzw
add r4.xy, r1.zwzz, l(-2.000000, -2.000000, 0.000000, 0.000000)
mov r5.z, r4.y
mad r1.zw, r1.xxxy, l(0.000000, 0.000000, 3.000000, 3.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
div r6.xy, r1.xyxx, r1.zwzz
mul r7.xyz, r1.wwww, r2.xyzx
mul r1.zw, r2.xxxz, l(0.000000, 0.000000, 7.000000, 7.000000)
add r1.xy, r1.xyxx, l(3.000000, 3.000000, 0.000000, 0.000000)
mul r5.xy, r1.xyxx, cb0[3].xyxx
add r1.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
mov r5.w, r1.y
mov r4.w, r1.x
mov r2.xz, cb0[3].yyyy
mov r2.y, l(0.142857149)
mul r2.xyz, r2.xyzx, r5.zywz
mov r4.z, r5.x
mov r5.w, r2.x
mov r6.xz, cb0[3].xxxx
mov r6.y, l(0.142857149)
mul r5.xyz, r4.zxwz, r6.yxzy
mad r4.xyzw, r0.yzyz, cb0[3].xyxy, r5.ywxw
mad r1.xy, r0.yzyy, cb0[3].xyxx, r5.zwzz
sample_c_lz r1.x, r1.xyxx, t1.xxxx, s1, r0.w
sample_c_lz r1.y, r4.xyxx, t1.xxxx, s1, r0.w
sample_c_lz r2.x, r4.zwzz, t1.xxxx, s1, r0.w
mul r2.x, r2.x, r3.y
mad r1.y, r3.x, r1.y, r2.x
mad r1.x, r3.z, r1.x, r1.y
mov r2.w, r5.y
mad r3.xyzw, r0.yzyz, cb0[3].xyxy, r2.wywz
mov r5.yw, r2.yyyz
sample_c_lz r1.y, r3.xyxx, t1.xxxx, s1, r0.w
sample_c_lz r2.x, r3.zwzz, t1.xxxx, s1, r0.w
mad r1.x, r1.z, r1.y, r1.x
mad r3.xyzw, r0.yzyz, cb0[3].xyxy, r5.xyzy
mad r4.xyzw, r0.yzyz, cb0[3].xyxy, r5.xwzw
sample_c_lz r0.y, r3.xyxx, t1.xxxx, s1, r0.w
sample_c_lz r0.z, r3.zwzz, t1.xxxx, s1, r0.w
mad r0.y, r0.y, l(49.000000), r1.x
mad r0.y, r1.w, r0.z, r0.y
mad r0.y, r7.x, r2.x, r0.y
sample_c_lz r0.z, r4.xyxx, t1.xxxx, s1, r0.w
sample_c_lz r0.w, r4.zwzz, t1.xxxx, s1, r0.w
mad r0.y, r7.y, r0.z, r0.y
mad r0.y, r7.z, r0.w, r0.y
mul r0.y, r0.y, l(0.00694444450)
add r0.z, -cb3[24].x, l(1.000000)
mad r0.y, r0.y, r0.z, cb3[24].x
add o0.xyzw, r0.xxxx, r0.yyyy
ret 
// Approximately 0 instruction slots used