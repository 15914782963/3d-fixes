// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0eb8c4c8b8c2c589-ps.txt
// 3DMigoto: 0eb8c4c8b8c2c589 |    Unity headers extracted from Dawn_LISRedEyeShaderForward
//    Shader "Dawn/LISRedEyeShaderForward" {
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry" "RenderType"="Opaque" }
//        Pass 4/4 {
//          Name "META"
//          Tags { "LIGHTMODE"="Meta" "QUEUE"="Geometry" "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Dawn_LISRedEyeShaderForward:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 62 8 0
//   undeciphered1a: 6
//   undeciphered2: 1 4 3 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 160
//   Float 64 [_irisSize]
//   Float 68 [_pupilSize]
//   Float 72 [_limbus]
//   Float 76 [_parallax]
//   Vector 88 [_RedStrength] 2
//   Float 128 [unity_OneOverOutputBoost]
//   Float 132 [unity_MaxOutputValue]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityMetaPass" 32
//   VectorBool 16 [unity_MetaFragmentControl] 4
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_RedTex] 2D 3
//   SetTexture 2 [_IrisTex] 2D 1
//   SetTexture 3 [_IrisColorTex] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityMetaPass" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:34:04 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0eb8c4c8b8c2c589-ps.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r0.xyz, -r0.xyzx, r7.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyz, r0.yyyy, v3.xyzx
mad r0.xyw, v2.xyxz, r0.xxxx, r1.xyxz
mad r0.xyz, v4.xyzx, r0.zzzz, r0.xywx
mov r0.y, -r0.y
max r1.xy, -r0.xzxx, l(-0.750000, -0.750000, 0.000000, 0.000000)
max r0.w, r0.z, l(0.000000)
mad_sat r0.w, r0.w, l(0.450000), l(-0.200000)
min r0.xz, r1.xxyx, l(0.750000, 0.000000, 0.750000, 0.000000)
dp3 r1.x, r0.xyzx, r0.xyzx
rsq r1.x, r1.x
mul r0.xy, r0.xyxx, r1.xxxx
mad r0.z, r0.z, r1.x, l(0.420000)
div r0.xy, r0.xyxx, r0.zzzz
mad r1.xyz, cb0[4].xxxx, l(0.600000, -0.0360000022, -0.0540000089, 0.000000), l(-1.000000, 0.500000, 1.200000, 0.000000)
add r0.z, -r1.y, r1.z
mad r0.z, cb0[4].y, r0.z, r1.y
add r1.y, r0.z, l(-1.000000)
mul r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r1.yz, v1.xxyx, r0.zzzz, -r1.yyyy
mad r2.xy, v1.xyxx, l(0.750000, 0.750000, 0.000000, 0.000000), l(0.125000, 0.125000, 0.000000, 0.000000)
add r1.yz, r1.yyzy, -r2.xxyx
mad r1.yz, v1.xxyx, r1.yyzy, r2.xxyx
sample r2.xyzw, r1.yzyy, t2.xyzw, s1
add r1.y, cb0[4].w, cb0[4].w
mul r1.zw, cb0[4].xxxz, l(0.000000, 0.000000, 0.600000, 20.000000)
mad r1.xz, v1.xxyx, r1.zzzz, -r1.xxxx
sample r3.xyzw, r1.xzxx, t2.xyzw, s1
mul r1.y, r1.y, r3.y
mul r2.x, r1.y, l(0.500000)
mad r1.y, r2.z, r1.y, -r2.x
mul r2.xy, r0.xyxx, r1.yyyy
mul r2.xy, r3.yyyy, r2.xyxx
max r2.xy, r2.xyxx, l(-0.100000, -0.100000, 0.000000, 0.000000)
min r2.xy, r2.xyxx, l(0.100000, 0.100000, 0.000000, 0.000000)
sample r3.xyzw, v1.xyxx, t2.xyzw, s1
add r1.y, -r3.z, l(1.000000)
mul r2.w, r0.z, r1.y
mad r0.z, r1.y, r0.z, l(-1.000000)
mul r1.y, r2.w, l(0.500000)
mad r1.xy, r1.xzxx, r0.zzzz, -r1.yyyy
add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
add r2.xy, -r2.xyxx, r1.xyxx
sample r3.xyzw, r2.xyxx, t3.xyzw, s0
sample r4.xyzw, v1.xyxx, t1.xyzw, s3
sample r5.xyzw, v1.xyxx, t0.xyzw, s2
add r2.xyw, r4.xyxz, -r5.xyxz
mad r2.xyw, cb0[5].wwww, r2.xyxw, r5.xyxz
add r3.xyz, -r2.xywx, r3.xyzx
add r0.z, cb0[4].x, l(-1.000000)
mul r0.z, r0.z, l(0.500000)
mad r4.xy, v1.xyxx, cb0[4].xxxx, -r0.zzzz
sample r4.xyzw, r4.xyxx, t0.xyzw, s2
mad r2.xyw, r4.wwww, r3.xyxz, r2.xyxw
mad r3.xyz, r2.xywx, -r1.wwww, -r2.xywx
mul r1.zw, r0.wwww, l(0.000000, 0.000000, 0.500000, 0.250000)
mad r0.z, r2.z, r1.z, -r1.w
mad r0.xy, -r0.zzzz, r0.xyxx, r1.xyxx
sample r1.xyzw, r0.xyxx, t3.xyzw, s0
add r0.x, -r4.w, l(2.000000)
mul r0.x, r0.x, r1.w
mul r0.x, r4.w, r0.x
mul_sat r0.x, r0.w, r0.x
mad r0.xyz, r0.xxxx, r3.xyzx, r2.xywx
log r0.xyz, r0.xyzx
mov_sat r0.w, cb0[8].x
mul r0.xyz, r0.xyzx, r0.wwww
exp r0.xyz, r0.xyzx
min r0.xyz, r0.xyzx, cb0[8].yyyy
mov r0.w, l(1.000000)
movc r0.xyzw, cb2[1].xxxx, r0.xyzw, l(0,0,0,0)
movc o0.xyzw, cb2[1].yyyy, l(0,0,0,0.0235294122), r0.xyzw
ret 
// Approximately 0 instruction slots used