// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed ceb9193d491d340a-ps.txt
// 3DMigoto: ceb9193d491d340a |    Unity headers extracted from Dawn_VFX_FractalScreenSaver
//    Shader "Dawn/VFX/FractalScreenSaver" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Dawn_VFX_FractalScreenSaver:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 121 6 7
//   undeciphered1a: 13
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DYNAMICLIGHTMAP_ON" }
//   undeciphered2: 1 8 5 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 96
//   Vector 0 [unity_Lightmap_HDR]
//   Vector 16 [unity_DynamicLightmap_HDR]
//   Vector 32 [_LightColor0]
//   Float 64 [_HighlightMask]
//   Float 68 [_Emissive]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 4
//   SetTexture 1 [_Specular] 2D 6
//   SetTexture 2 [_ScanLines] 2D 5
//   SetTexture 3 [_ShadowMapTexture] 2D 3
//   SetTexture 4 [unity_Lightmap] 2D 0
//   SetTexture 5 [unity_DynamicLightmap] 2D 1
//   SetTexture 6 [unity_SpecCube0] CUBE 2
//   SetTexture 7 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityReflectionProbes" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 05:24:05 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 3     zw        1     NONE   float     zw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[5], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyw
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed ceb9193d491d340a-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, r14.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r1.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r0.w, r1.x, l(1.500000)
add r1.x, r1.y, r1.y
mov r2.x, r0.w
mov r2.y, r1.x
mov r1.y, l(0)
loop 
  ige r1.z, r1.y, l(16)
  breakc_nz r1.z
  mul r1.z, r2.y, r2.y
  mad r3.x, r2.x, r2.x, -r1.z
  dp2 r3.y, r2.yyyy, r2.xxxx
  add r2.xy, r3.xyxx, v1.zwzz
  dp2 r1.z, r2.xyxx, r2.xyxx
  lt r1.z, l(4.000000), r1.z
  if_nz r1.z
    break 
  endif 
  iadd r1.y, r1.y, l(1)
endloop 
itof r0.w, r1.y
mul r1.x, r0.w, l(0.062500)
mov r1.y, l(0.500000)
sample r1.xyzw, r1.xyxx, t0.xyzw, s4
sample r2.xyzw, v1.xyxx, t1.xyzw, s6
mul r3.xy, v1.xyxx, l(4.000000, 128.000000, 0.000000, 0.000000)
sample r3.xyzw, r3.xyxx, t2.xyzw, s5
dp3_sat r0.w, v2.xyzx, r0.xyzx
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r4.xyz, r1.xyzx, cb0[4].yyyy
mul r1.xyz, r3.xyzx, r1.xyzx
add r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
min r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.w, cb0[4].x, l(252.000000)
mul r0.w, r0.w, l(0.00392156886)
div r5.xy, v5.xyxx, v5.wwww
sample r5.xyzw, r5.xyxx, t3.xyzw, s3
add r1.w, -r2.w, l(1.000000)
dp3 r3.w, -r0.xyzx, v2.xyzx
add r3.w, r3.w, r3.w
mad r5.yzw, v2.xxyz, -r3.wwww, -r0.xxyz
sample r6.xyzw, v4.xyxx, t4.xyzw, s0
log r3.w, r6.w
mul r3.w, r3.w, cb0[0].y
exp r3.w, r3.w
mul r3.w, r3.w, cb0[0].x
mul r7.xyz, r6.xyzx, r3.wwww
dp3_sat r4.w, v2.xyzx, cb2[0].xyzx
add r6.w, -r5.x, l(1.000000)
mul r4.w, r4.w, r6.w
mad r8.xyz, -r4.wwww, cb0[2].xyzx, r7.xyzx
mul r9.xyz, r5.xxxx, r6.xyzx
max r8.xyz, r8.xyzx, r9.xyzx
mad r6.xyz, r3.wwww, r6.xyzx, -r8.xyzx
mad r6.xyz, cb3[24].xxxx, r6.xyzx, r8.xyzx
min r6.xyz, r6.xyzx, r7.xyzx
sample r7.xyzw, v4.zwzz, t5.xyzw, s1
mul r3.w, r7.w, cb0[1].x
mul r7.xyz, r7.xyzx, r3.wwww
log r7.xyz, r7.xyzx
mul r7.xyz, r7.xyzx, cb0[1].yyyy
exp r7.xyz, r7.xyzx
add r6.xyz, r6.xyzx, r7.xyzx
mul r6.xyz, r0.wwww, r6.xyzx
lt r3.w, l(0.000000), cb4[2].w
if_nz r3.w
  dp3 r3.w, r5.yzwy, r5.yzwy
  rsq r3.w, r3.w
  mul r7.xyz, r3.wwww, r5.yzwy
  add r8.xyz, -v3.xyzx, cb4[0].xyzx
  div r8.xyz, r8.xyzx, r7.xyzx
  add r9.xyz, -v3.xyzx, cb4[1].xyzx
  div r9.xyz, r9.xyzx, r7.xyzx
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  min r3.w, r8.y, r8.x
  min r3.w, r8.z, r3.w
  add r8.xyz, v3.xyzx, -cb4[2].xyzx
  mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
else 
  mov r7.xyz, r5.yzwy
endif 
mad r3.w, -r1.w, l(0.700000), l(1.700000)
mul r3.w, r1.w, r3.w
mul r3.w, r3.w, l(6.000000)
sample_l r7.xyzw, r7.xyzx, t6.xyzw, s2, r3.w
eq r4.w, cb4[3].w, l(1.000000)
log r5.x, r7.w
mul r5.x, r5.x, cb4[3].y
exp r5.x, r5.x
movc r4.w, r4.w, r5.x, l(1.000000)
mul r4.w, r4.w, cb4[3].x
mul r8.xyz, r7.xyzx, r4.wwww
lt r5.x, cb4[1].w, l(0.999990)
if_nz r5.x
  lt r5.x, l(0.000000), cb4[6].w
  if_nz r5.x
    dp3 r5.x, r5.yzwy, r5.yzwy
    rsq r5.x, r5.x
    mul r9.xyz, r5.xxxx, r5.yzwy
    add r10.xyz, -v3.xyzx, cb4[4].xyzx
    div r10.xyz, r10.xyzx, r9.xyzx
    add r11.xyz, -v3.xyzx, cb4[5].xyzx
    div r11.xyz, r11.xyzx, r9.xyzx
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
    min r5.x, r10.y, r10.x
    min r5.x, r10.z, r5.x
    add r10.xyz, v3.xyzx, -cb4[6].xyzx
    mad r5.yzw, r9.xxyz, r5.xxxx, r10.xxyz
  endif 
  sample_l r5.xyzw, r5.yzwy, t7.xyzw, s2, r3.w
  eq r3.w, cb4[7].w, l(1.000000)
  log r5.w, r5.w
  mul r5.w, r5.w, cb4[7].y
  exp r5.w, r5.w
  movc r3.w, r3.w, r5.w, l(1.000000)
  mul r3.w, r3.w, cb4[7].x
  mul r5.xyz, r5.xyzx, r3.wwww
  mad r7.xyz, r4.wwww, r7.xyzx, -r5.xyzx
  mad r8.xyz, cb4[1].wwww, r7.xyzx, r5.xyzx
endif 
mul r5.xyz, r0.wwww, r8.xyzx
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r7.xyz, r0.wwww, v2.xyzx
max r0.w, r2.y, r2.x
max r0.w, r2.z, r0.w
add r0.w, -r0.w, l(1.000000)
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.x, r7.xyzx, r0.xyzx
mul r0.y, r1.w, r1.w
mad r0.y, r0.y, r0.y, l(1.000000)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
add r0.z, -r0.w, r2.w
add_sat r0.z, r0.z, l(1.000000)
mul r5.xyz, r5.xyzx, r0.yyyy
add r0.x, -|r0.x|, l(1.000000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.x, r0.y
add r0.yzw, -r2.xxyz, r0.zzzz
mad r0.xyz, r0.xxxx, r0.yzwy, r2.xyzx
mul r0.xyz, r0.xyzx, r5.xyzx
mad r0.xyz, r1.xyzx, r6.xyzx, r0.xyzx
mad o0.xyz, r4.xyzx, r3.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used