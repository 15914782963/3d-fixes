// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e61b3451f3c1a6aa-ps.txt
// 3DMigoto: e61b3451f3c1a6aa |    Unity headers extracted from Dawn_LISRedEyeShaderForward
//    Shader "Dawn/LISRedEyeShaderForward" {
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry" "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Dawn_LISRedEyeShaderForward:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 212 11 4
//   undeciphered1a: 13
//   Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" }
//   undeciphered2: 1 9 4 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 144
//   Vector 16 [unity_DynamicLightmap_HDR]
//   Vector 32 [_LightColor0]
//   Float 64 [_irisSize]
//   Float 68 [_pupilSize]
//   Float 72 [_limbus]
//   Float 76 [_parallax]
//   Float 80 [_smoothness]
//   Float 84 [_specularTerm]
//   Vector 88 [_RedStrength] 2
//   Float 96 [_HighlightMask]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_CorneaBump] 2D 7
//   SetTexture 1 [_MainTex] 2D 4
//   SetTexture 2 [_RedTex] 2D 5
//   SetTexture 3 [_WellBumpMap] 2D 6
//   SetTexture 4 [_IrisTex] 2D 3
//   SetTexture 5 [_IrisColorTex] 2D 2
//   SetTexture 6 [unity_DynamicLightmap] 2D 0
//   SetTexture 7 [unity_SpecCube0] CUBE 1
//   SetTexture 8 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.68 on Sat Dec 30 11:40:12 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float       
// TEXCOORD                 8   xyzw        6     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v6.zw
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e61b3451f3c1a6aa-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r14.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mul r3.xyz, r2.yyyy, v3.xyzx
mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
add r1.w, cb0[4].x, l(-1.000000)
mul r1.w, r1.w, l(0.500000)
mad r4.xy, v1.xyxx, cb0[4].xxxx, -r1.wwww
sample r5.xyzw, r4.xyxx, t0.xyzw, s7
add r6.xy, r5.wyww, r5.wyww
mad r4.zw, r5.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r1.w, r4.zwzz, r4.zwzz
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r6.z, r1.w
sample r5.xyzw, v1.xyxx, t1.xyzw, s4
sample r7.xyzw, v1.xyxx, t2.xyzw, s5
add r7.xyz, -r5.xyzx, r7.xyzx
mad r5.xyz, cb0[5].wwww, r7.xyzx, r5.xyzx
sample r7.xyzw, v1.xyxx, t3.xyzw, s6
add r8.xy, r7.wyww, r7.wyww
mad r4.zw, r7.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r1.w, r4.zwzz, r4.zwzz
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r8.z, r1.w
add r7.xyz, r8.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r7.xyz, cb0[5].zzzz, r7.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
sample r4.xyzw, r4.xyxx, t1.xyzw, s4
add r4.xyz, r6.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r4.xyz, r4.wwww, r4.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
add r4.xyz, r7.xyzx, r4.xyzx
mul r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
sample r6.xyzw, v1.xyxx, t4.xyzw, s3
mul r1.w, r6.w, cb0[5].z
add r2.w, -r6.z, l(1.000000)
mul r6.yz, cb0[4].xxzx, l(0.000000, 0.600000, 20.000000, 0.000000)
mad r7.xyz, cb0[4].xxxx, l(0.600000, -0.0360000022, -0.0540000089, 0.000000), l(-1.000000, 0.500000, 1.200000, 0.000000)
mul r3.w, r7.x, l(0.500000)
mad r6.yw, v1.xxxy, r6.yyyy, -r3.wwww
add r3.w, -r7.y, r7.z
mad r3.w, cb0[4].y, r3.w, r7.y
mul r5.w, r2.w, r3.w
mad r2.w, r2.w, r3.w, l(-1.000000)
mul r5.w, r5.w, l(0.500000)
mad r7.xy, r6.ywyy, r2.wwww, -r5.wwww
add r2.w, cb0[4].w, cb0[4].w
sample r8.xyzw, r6.ywyy, t4.xyzw, s3
mul r2.w, r2.w, r8.y
mad r6.yw, v1.xxxy, l(0.000000, 0.750000, 0.000000, 0.750000), l(0.000000, 0.125000, 0.000000, 0.125000)
add r5.w, r3.w, l(-1.000000)
mul r5.w, r5.w, l(0.500000)
mad r7.zw, v1.xxxy, r3.wwww, -r5.wwww
add r7.zw, -r6.yyyw, r7.zzzw
mad r6.yw, v1.xxxy, r7.zzzw, r6.yyyw
max r3.xw, -r3.xxxz, l(-0.750000, 0.000000, 0.000000, -0.750000)
min r9.xz, r3.xxwx, l(0.750000, 0.000000, 0.750000, 0.000000)
sample r10.xyzw, r6.ywyy, t4.xyzw, s3
mul r3.x, r2.w, l(0.500000)
mad r2.w, r10.z, r2.w, -r3.x
mov r9.y, -r3.y
dp3 r3.x, r9.xyzx, r9.xyzx
rsq r3.x, r3.x
mul r3.yw, r3.xxxx, r9.xxxy
mad r3.x, r9.z, r3.x, l(0.420000)
div r3.xy, r3.ywyy, r3.xxxx
mul r6.yw, r2.wwww, r3.xxxy
mul r6.yw, r8.yyyy, r6.yyyw
max r6.yw, r6.yyyw, l(0.000000, -0.100000, 0.000000, -0.100000)
min r6.yw, r6.yyyw, l(0.000000, 0.100000, 0.000000, 0.100000)
add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
add r6.yw, -r6.yyyw, r7.xxxy
sample r8.xyzw, r6.ywyy, t5.xyzw, s2
max r2.w, r3.z, l(0.000000)
mad_sat r2.w, r2.w, l(0.450000), l(-0.200000)
mul r3.z, r10.z, r2.w
mul r3.w, r2.w, l(0.250000)
mad r3.z, r3.z, l(0.500000), -r3.w
mad r3.xy, -r3.zzzz, r3.xyxx, r7.xyxx
sample r3.xyzw, r3.xyxx, t5.xyzw, s2
add r3.xyz, -r5.xyzx, r8.xyzx
mad r3.xyz, r4.wwww, r3.xyzx, r5.xyzx
max r5.x, r4.w, r6.x
mul r5.yz, r1.wwww, l(0.000000, 0.500000, 0.050000, 0.000000)
mad r1.w, cb0[5].x, r4.w, r5.y
min r1.w, r1.w, l(1.000000)
mad r5.x, r5.x, cb0[5].y, r5.z
min r5.x, r5.x, l(1.000000)
add r5.y, -r4.w, l(2.000000)
mul r3.w, r3.w, r5.y
mul r3.w, r4.w, r3.w
mul_sat r2.w, r2.w, r3.w
mad r5.yzw, r3.xxyz, -r6.zzzz, -r3.xxyz
mad r3.xyz, r2.wwww, r5.yzwy, r3.xyzx
add r2.w, cb0[6].x, l(252.000000)
mul r2.w, r2.w, l(0.00392156886)
dp3 r6.x, v2.xyzx, r4.xyzx
dp3 r6.y, v3.xyzx, r4.xyzx
dp3 r6.z, v4.xyzx, r4.xyzx
add r3.w, -r1.w, l(1.000000)
dp3 r4.x, -r2.xyzx, r6.xyzx
add r4.x, r4.x, r4.x
mad r4.xyz, r6.xyzx, -r4.xxxx, -r2.xyzx
sample r7.xyzw, v6.zwzz, t6.xyzw, s0
mul r4.w, r7.w, cb0[1].x
mul r5.yzw, r7.xxyz, r4.wwww
log r5.yzw, r5.yyzw
mul r5.yzw, r5.yyzw, cb0[1].yyyy
exp r5.yzw, r5.yyzw
lt r4.w, l(0.000000), cb3[2].w
if_nz r4.w
  dp3 r4.w, r4.xyzx, r4.xyzx
  rsq r4.w, r4.w
  mul r7.xyz, r4.wwww, r4.xyzx
  add r8.xyz, -r0.xyzx, cb3[0].xyzx
  div r8.xyz, r8.xyzx, r7.xyzx
  add r9.xyz, -r0.xyzx, cb3[1].xyzx
  div r9.xyz, r9.xyzx, r7.xyzx
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  min r4.w, r8.y, r8.x
  min r4.w, r8.z, r4.w
  add r8.xyz, r0.xyzx, -cb3[2].xyzx
  mad r7.xyz, r7.xyzx, r4.wwww, r8.xyzx
else 
  mov r7.xyz, r4.xyzx
endif 
mad r4.w, -r3.w, l(0.700000), l(1.700000)
mul r4.w, r3.w, r4.w
mul r4.w, r4.w, l(6.000000)
sample_l r7.xyzw, r7.xyzx, t7.xyzw, s1, r4.w
eq r6.w, cb3[3].w, l(1.000000)
log r7.w, r7.w
mul r7.w, r7.w, cb3[3].y
exp r7.w, r7.w
movc r6.w, r6.w, r7.w, l(1.000000)
mul r6.w, r6.w, cb3[3].x
mul r8.xyz, r7.xyzx, r6.wwww
lt r7.w, cb3[1].w, l(0.999990)
if_nz r7.w
  lt r7.w, l(0.000000), cb3[6].w
  if_nz r7.w
    dp3 r7.w, r4.xyzx, r4.xyzx
    rsq r7.w, r7.w
    mul r9.xyz, r4.xyzx, r7.wwww
    add r10.xyz, -r0.xyzx, cb3[4].xyzx
    div r10.xyz, r10.xyzx, r9.xyzx
    add r11.xyz, -r0.xyzx, cb3[5].xyzx
    div r11.xyz, r11.xyzx, r9.xyzx
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
    min r7.w, r10.y, r10.x
    min r7.w, r10.z, r7.w
    add r0.xyz, r0.xyzx, -cb3[6].xyzx
    mad r4.xyz, r9.xyzx, r7.wwww, r0.xyzx
  endif 
  sample_l r4.xyzw, r4.xyzx, t8.xyzw, s1, r4.w
  eq r0.x, cb3[7].w, l(1.000000)
  log r0.y, r4.w
  mul r0.y, r0.y, cb3[7].y
  exp r0.y, r0.y
  movc r0.x, r0.x, r0.y, l(1.000000)
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r4.xyzx, r0.xxxx
  mad r4.xyz, r6.wwww, r7.xyzx, -r0.xyzx
  mad r8.xyz, cb3[1].wwww, r4.xyzx, r0.xyzx
endif 
mul r0.xyz, r2.wwww, r8.xyzx
dp3 r4.x, r6.xyzx, r6.xyzx
rsq r4.x, r4.x
mul r4.xyz, r4.xxxx, r6.xyzx
add r4.w, -r5.x, l(1.000000)
mul r3.xyz, r3.xyzx, r4.wwww
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r4.xyzx, r2.xyzx
dp3_sat r2.x, r4.xyzx, cb2[0].xyzx
dp3_sat r2.y, r4.xyzx, r1.xyzx
dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
mul r1.y, r1.x, r1.x
dp2 r1.y, r1.yyyy, r3.wwww
add r1.y, r1.y, l(-0.500000)
add r1.z, -r2.x, l(1.000000)
mul r2.z, r1.z, r1.z
mul r2.z, r2.z, r2.z
mul r1.z, r1.z, r2.z
mad r1.z, r1.y, r1.z, l(1.000000)
add r2.z, -|r0.w|, l(1.000000)
mul r4.x, r2.z, r2.z
mul r4.x, r4.x, r4.x
mul r2.z, r2.z, r4.x
mad r1.y, r1.y, r2.z, l(1.000000)
mul r1.y, r1.y, r1.z
mul r1.y, r2.x, r1.y
mul r1.z, r3.w, r3.w
mad r3.w, -r3.w, r3.w, l(1.000000)
mad r4.x, |r0.w|, r3.w, r1.z
mad r3.w, r2.x, r3.w, r1.z
mul r0.w, |r0.w|, r3.w
mad r0.w, r2.x, r4.x, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r3.w, r1.z, r1.z
mad r4.x, r2.y, r3.w, -r2.y
mad r2.y, r4.x, r2.y, l(1.000000)
mul r3.w, r3.w, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r3.w, r2.y
mul r0.w, r0.w, r2.y
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.x, r0.w
max r0.w, r0.w, l(0.000000)
mad r1.z, r1.z, r1.z, l(1.000000)
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
dp3 r2.x, r5.xxxx, r5.xxxx
ne r2.x, r2.x, l(0.000000)
and r2.x, r2.x, l(0x3f800000)
mul r0.w, r0.w, r2.x
add r1.w, r1.w, -r4.w
add_sat r1.w, r1.w, l(1.000000)
mul r4.xyz, r1.yyyy, cb0[2].xyzx
mad r2.xyw, r5.yzyw, r2.wwww, r4.xyxz
mul r4.xyz, r0.wwww, cb0[2].xyzx
add r0.w, -r1.x, l(1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.xyzw, r0.xyzw, r1.zzzx
mad r0.w, r4.w, r0.w, r5.x
mul r4.xyz, r0.wwww, r4.xyzx
mad r2.xyw, r3.xyxz, r2.xyxw, r4.xyxz
add r0.w, -r5.x, r1.w
mad r0.w, r2.z, r0.w, r5.x
mad o0.xyz, r0.xyzx, r0.wwww, r2.xywx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used