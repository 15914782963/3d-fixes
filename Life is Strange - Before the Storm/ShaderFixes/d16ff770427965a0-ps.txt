// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d16ff770427965a0-ps.txt
// 3DMigoto: d16ff770427965a0 |    Unity headers extracted from Custom_S_Water
//    Shader "Custom/S_Water" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_S_Water:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201608170 141 8 4
//   undeciphered1a: 13
//   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
//   undeciphered2: 1 9 3 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 160
//   Vector 0 [unity_Lightmap_HDR]
//   Vector 16 [unity_DynamicLightmap_HDR]
//   Vector 64 [_Specular]
//   Vector 80 [_Color]
//   Float 96 [_WorldTiling]
//   Float 100 [_WaterSpeed]
//   Float 104 [_WaveletTiling]
//   Float 112 [_WaveletMin]
//   Float 116 [_WaveletMax]
//   Float 128 [_CutoffSteps]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 3
//   SetTexture 1 [_BumpMap] 2D 4
//   SetTexture 2 [_WaveletBlend] 2D 5
//   SetTexture 3 [unity_Lightmap] 2D 0
//   SetTexture 4 [unity_LightmapInd] 2D -1
//   SetTexture 5 [unity_DynamicLightmap] 2D 1
//   SetTexture 6 [unity_DynamicDirectionality] 2D -1
//   SetTexture 7 [unity_SpecCube0] CUBE 2
//   SetTexture 8 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityReflectionProbes" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.61 on Wed Jan 03 05:24:54 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d16ff770427965a0-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r14.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
sample r2.xyzw, v1.xyxx, t0.xyzw, s3
div r2.yz, r0.xxzx, cb0[6].xxxx
mul r0.w, cb0[6].y, cb1[0].x
mad r3.xy, cb0[6].yyyy, cb1[0].xxxx, r2.yzyy
mul r4.xyz, r0.wwww, l(1.418000, 2.980000, 2.198000, 0.000000)
mad r3.zw, r2.yyyz, l(0.000000, 0.000000, 1.418000, 1.418000), -r4.xxxx
sample r5.xyzw, r3.xyxx, t1.xyzw, s4
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r5.xyxx, r5.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r5.z, r0.w
sample r3.xyzw, r3.zwzz, t1.xyzw, s4
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r3.xyxx, r3.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r3.z, r0.w
add r3.xyz, r3.xyzx, r5.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
mul r3.xyz, r3.xyzx, cb0[8].xxxx
round_ni r3.xyz, r3.xyzx
div r3.xyz, r3.xyzx, cb0[8].xxxx
mad r2.yz, r2.yyzy, cb0[6].zzzz, r4.yyzy
sample r4.xyzw, r2.yzyy, t2.xyzw, s5
add r0.w, -cb0[7].x, cb0[7].y
mad r0.w, r4.x, r0.w, cb0[7].x
add r2.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, -0.990000)
mad r2.yzw, r0.wwww, r2.yyzw, l(0.000000, 0.000000, 0.000000, 1.000000)
dp3 r0.w, r2.yzwy, r2.yzwy
rsq r0.w, r0.w
mul r2.yzw, r0.wwww, r2.yyzw
mul r3.xyz, r2.xxxx, cb0[4].xyzx
lt r0.w, l(0.800000), r2.x
and r0.w, r0.w, l(0x3f800000)
mul r1.w, r2.x, r2.x
mul r1.w, r1.w, r1.w
mul r0.w, r0.w, r1.w
mul r4.xyzw, r0.wwww, cb0[5].xyzw
dp3 r5.x, v2.xyzx, r2.yzwy
dp3 r5.y, v3.xyzx, r2.yzwy
dp3 r5.z, v4.xyzx, r2.yzwy
mad r0.w, -cb0[4].w, r2.x, l(1.000000)
dp3 r1.w, -r1.xyzx, r5.xyzx
add r1.w, r1.w, r1.w
mad r2.yzw, r5.xxyz, -r1.wwww, -r1.xxyz
sample r6.xyzw, v5.xyxx, t3.xyzw, s0
log r1.w, r6.w
mul r1.w, r1.w, cb0[0].y
exp r1.w, r1.w
mul r1.w, r1.w, cb0[0].x
mul r6.xyz, r6.xyzx, r1.wwww
sample r7.xyzw, v5.xyxx, t4.xyzw, s0
add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r1.w, r5.xyzx, r7.xyzx
add r1.w, r1.w, l(0.500000)
mul r6.xyz, r1.wwww, r6.xyzx
max r1.w, r7.w, l(0.000100)
div r6.xyz, r6.xyzx, r1.wwww
sample r7.xyzw, v5.zwzz, t5.xyzw, s1
mul r1.w, r7.w, cb0[1].x
mul r7.xyz, r7.xyzx, r1.wwww
log r7.xyz, r7.xyzx
mul r7.xyz, r7.xyzx, cb0[1].yyyy
exp r7.xyz, r7.xyzx
sample r8.xyzw, v5.zwzz, t6.xyzw, s1
add r8.xyz, r8.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r1.w, r5.xyzx, r8.xyzx
add r1.w, r1.w, l(0.500000)
mul r7.xyz, r1.wwww, r7.xyzx
max r1.w, r8.w, l(0.000100)
div r7.xyz, r7.xyzx, r1.wwww
add r6.xyz, r6.xyzx, r7.xyzx
mul r6.xyz, r6.xyzx, l(0.988235295, 0.988235295, 0.988235295, 0.000000)
lt r1.w, l(0.000000), cb2[2].w
if_nz r1.w
  dp3 r1.w, r2.yzwy, r2.yzwy
  rsq r1.w, r1.w
  mul r7.xyz, r1.wwww, r2.yzwy
  add r8.xyz, -r0.xyzx, cb2[0].xyzx
  div r8.xyz, r8.xyzx, r7.xyzx
  add r9.xyz, -r0.xyzx, cb2[1].xyzx
  div r9.xyz, r9.xyzx, r7.xyzx
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  min r1.w, r8.y, r8.x
  min r1.w, r8.z, r1.w
  add r8.xyz, r0.xyzx, -cb2[2].xyzx
  mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
else 
  mov r7.xyz, r2.yzwy
endif 
mad r1.w, -r0.w, l(0.700000), l(1.700000)
mul r1.w, r0.w, r1.w
mul r1.w, r1.w, l(6.000000)
sample_l r7.xyzw, r7.xyzx, t7.xyzw, s2, r1.w
eq r3.w, cb2[3].w, l(1.000000)
log r5.w, r7.w
mul r5.w, r5.w, cb2[3].y
exp r5.w, r5.w
movc r3.w, r3.w, r5.w, l(1.000000)
mul r3.w, r3.w, cb2[3].x
mul r8.xyz, r7.xyzx, r3.wwww
lt r5.w, cb2[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb2[6].w
  if_nz r5.w
    dp3 r5.w, r2.yzwy, r2.yzwy
    rsq r5.w, r5.w
    mul r9.xyz, r2.yzwy, r5.wwww
    add r10.xyz, -r0.xyzx, cb2[4].xyzx
    div r10.xyz, r10.xyzx, r9.xyzx
    add r11.xyz, -r0.xyzx, cb2[5].xyzx
    div r11.xyz, r11.xyzx, r9.xyzx
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
    min r5.w, r10.y, r10.x
    min r5.w, r10.z, r5.w
    add r0.xyz, r0.xyzx, -cb2[6].xyzx
    mad r2.yzw, r9.xxyz, r5.wwww, r0.xxyz
  endif 
  sample_l r9.xyzw, r2.yzwy, t8.xyzw, s2, r1.w
  eq r0.x, cb2[7].w, l(1.000000)
  log r0.y, r9.w
  mul r0.y, r0.y, cb2[7].y
  exp r0.y, r0.y
  movc r0.x, r0.x, r0.y, l(1.000000)
  mul r0.x, r0.x, cb2[7].x
  mul r0.xyz, r9.xyzx, r0.xxxx
  mad r2.yzw, r3.wwww, r7.xxyz, -r0.xxyz
  mad r8.xyz, cb2[1].wwww, r2.yzwy, r0.xyzx
endif 
mul r0.xyz, r8.xyzx, l(0.988235295, 0.988235295, 0.988235295, 0.000000)
dp3 r1.w, r5.xyzx, r5.xyzx
rsq r1.w, r1.w
mul r2.yzw, r1.wwww, r5.xxyz
max r1.w, r3.y, r3.x
max r1.w, r3.z, r1.w
add r1.w, -r1.w, l(1.000000)
mul r4.xyz, r1.wwww, r4.xyzx
mul r4.xyz, r4.wwww, r4.xyzx
add r3.w, -r1.w, l(1.000000)
mad o0.w, r4.w, r1.w, r3.w
dp3 r1.x, r2.yzwy, r1.xyzx
mul r0.w, r0.w, r0.w
mad r0.w, r0.w, r0.w, l(1.000000)
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mad_sat r1.y, cb0[4].w, r2.x, r3.w
mul r0.xyz, r0.xyzx, r0.wwww
add r0.w, -|r1.x|, l(1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.w, r0.w, r1.x
mad r1.xyz, -cb0[4].xyzx, r2.xxxx, r1.yyyy
mad r1.xyz, r0.wwww, r1.xyzx, r3.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mad o0.xyz, r4.xyzx, r6.xyzx, r0.xyzx
ret 
// Approximately 0 instruction slots used