cbuffer cb1 : register(b1)
{
  float4 cb1[16];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[6];
}


Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : POSITION0,
  float3 v1 : NORMAL0,
  float2 v2 : TEXCOORD0,
  float4 v3 : COLOR0,
  out float4 o0 : SV_POSITION0,
  out float2 o1 : TEXCOORD0,
  out float p1 : TEXCOORD4,
  out float4 o2 : TEXCOORD1,
  out float3 o3 : TEXCOORD2,
  out float4 o4 : COLOR0,
  out float4 o5 : TEXCOORD3,
  out float3 o6 : TEXCOORD5)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = cb1[1].xyzw * v0.yyyy;
  r0.xyzw = cb1[0].xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = cb1[2].xyzw * v0.zzzz + r0.xyzw;
  r0.xyzw = cb1[3].xyzw * v0.wwww + r0.xyzw;
  o0.xyzw = r0.xyzw;

float4 stereo = StereoParams.Load(0);
r0.x += stereo.x * (r0.w - stereo.y);

  o1.xy = v2.xy;
  p1.x = r0.z;
  r1.xyzw = cb1[13].xyzw * v0.yyyy;
  r1.xyzw = cb1[12].xyzw * v0.xxxx + r1.xyzw;
  r1.xyzw = cb1[14].xyzw * v0.zzzz + r1.xyzw;
  o2.xyzw = cb1[15].xyzw * v0.wwww + r1.xyzw;
  r1.xyz = cb1[13].xyz * v1.yyy;
  r1.xyz = cb1[12].xyz * v1.xxx + r1.xyz;
  o3.xyz = cb1[14].xyz * v1.zzz + r1.xyz;
  o4.xyzw = v3.xyzw;
  r0.y = cb0[5].x * r0.y;
  r1.xzw = float3(0.5,0.5,0.5) * r0.xwy;
  o5.w = r0.w;
  o5.xy = r1.xw + r1.zz;
  r0.x = cb1[5].z * v0.y;
  r0.x = cb1[4].z * v0.x + r0.x;
  r0.x = cb1[6].z * v0.z + r0.x;
  r0.x = cb1[7].z * v0.w + r0.x;
  o5.z = -r0.x;
  o6.xyz = float3(0,0,0);
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.1 on Sun Aug 23 23:56:04 2015
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 4     z         1     NONE   float     z 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// COLOR                    0   xyzw        4     NONE   float   xyzw
// TEXCOORD                 3   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb1[16], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_output o2.xyzw
dcl_output o3.xyz
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyz
dcl_temps 2
mul r0.xyzw, v0.yyyy, cb1[1].xyzw
mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
mov o0.xyzw, r0.xyzw
mov o1.xy, v2.xyxx
mov o1.z, r0.z
mul r1.xyzw, v0.yyyy, cb1[13].xyzw
mad r1.xyzw, cb1[12].xyzw, v0.xxxx, r1.xyzw
mad r1.xyzw, cb1[14].xyzw, v0.zzzz, r1.xyzw
mad o2.xyzw, cb1[15].xyzw, v0.wwww, r1.xyzw
mul r1.xyz, v1.yyyy, cb1[13].xyzx
mad r1.xyz, cb1[12].xyzx, v1.xxxx, r1.xyzx
mad o3.xyz, cb1[14].xyzx, v1.zzzz, r1.xyzx
mov o4.xyzw, v3.xyzw
mul r0.y, r0.y, cb0[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o5.w, r0.w
add o5.xy, r1.zzzz, r1.xwxx
mul r0.x, v0.y, cb1[5].z
mad r0.x, cb1[4].z, v0.x, r0.x
mad r0.x, cb1[6].z, v0.z, r0.x
mad r0.x, cb1[7].z, v0.w, r0.x
mov o5.z, -r0.x
mov o6.xyz, l(0,0,0,0)
ret 
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
