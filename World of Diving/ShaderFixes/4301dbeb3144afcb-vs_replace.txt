// 3DMigoto: 4301dbeb3144afcb | Matched 9 variants of 1 shaders: Custom/Water/Water_Bubbles
// 
//      Unity headers extracted from Water_Bubbles.shader
//      Shader "Custom/Water/Water_Bubbles" {
//        Properties {
//         _Cube ("Cube", CUBE) = "_Skybox" { }
//         _Cube_Blur ("Cube_Blur", Range(0,10)) = 0
//         _Noise ("Noise", 2D) = "white" { }
//        [HideInInspector]  _Cutoff ("Alpha cutoff", Range(0,1)) = 0.5
//        }
//        Fallback "Transparent/Diffuse"
//        SubShader 1/1 {
//          Tags { "QUEUE"="Overlay+1" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//          GrabPass {
//           }
// 0ff:     Pass 1/4 {
// 100:     Pass 2/4 {
// 100:       Name "FORWARDADD"
// 0ff:       Name "FORWARDBASE"
// 100:       Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Overlay+1" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
// 0ff:       Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "QUEUE"="Overlay+1" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//            ZWrite Off
// 0ff:       Blend SrcAlpha OneMinusSrcAlpha
// 100:       Fog {
// 100:          Color (0,0,0,0)
// 0ff:       GpuProgramID 48312
// 100:         }
// 0ff:       Program "vp" {
// 100:       Blend One One
// 100:       GpuProgramID 103769
// 100:       Program "vp" {
//              SubProgram "d3d11 " {
// 010:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
// 001:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_OFF" }
// 040:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
// 004:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" }
// 020:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "LIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
// 002:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "LIGHTMAP_OFF" "SHADOWS_OFF" }
// 080:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
// 008:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "LIGHTMAP_OFF" "SHADOWS_SCREEN" }
// 100:           Keywords { "DIRECTIONAL" }
//                Bind "vertex" Vertex
//                Bind "color" Color
//                Bind "normal" Normal
//                Bind "texcoord" TexCoord0
//                SetTexture 0 [_Noise] 2D 0
//                ConstBuffer "$Globals" 160
//                Vector 112 [_TimeEditor]
//                Vector 144 [_Noise_ST]
//                ConstBuffer "UnityPerCamera" 144
//                Vector 0 [_Time]
//                ConstBuffer "UnityPerDraw" 336
//                Matrix 0 [glstate_matrix_mvp]
//                Matrix 192 [_Object2World]
//                Matrix 256 [_World2Object]
//                BindCB "$Globals" 0
//                BindCB "UnityPerCamera" 1
//                BindCB "UnityPerDraw" 2
//              }
//            }
//          }
//        }
//      }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py
//
// Shader model vs_4_0

Texture2D<float4> t0 : register(t0);

SamplerState s0_s : register(s0);

cbuffer cb2 : register(b2)
{
  float4 cb2[19];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[1];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[10];
}


Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float4 v0 : POSITION0,
  float3 v1 : NORMAL0,
  float2 v2 : TEXCOORD0,
  float4 v3 : COLOR0,
  out float4 o0 : SV_POSITION0,
  out float2 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float3 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3,
  out float4 o5 : COLOR0)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = cb1[0].y + cb0[7].y;
  r0.xy = r0.xx * float2(1.000000e-001,1.000000e-002) + v2.xy;
  r0.xy = r0.xy * cb0[9].xy + cb0[9].zw;
  r0.xyzw = t0.SampleLevel(s0_s, r0.xy, 0.000000000e+000).xyzw;
  r0.xyz = v3.xyz * r0.xyz;
  r0.xyz = r0.xyz * float3(5.000000e-003,5.000000e-003,5.000000e-003) + v0.xyz;
  r1.xyzw = cb2[1].xyzw * r0.yyyy;
  r1.xyzw = cb2[0].xyzw * r0.xxxx + r1.xyzw;
  r1.xyzw = cb2[2].xyzw * r0.zzzz + r1.xyzw;
  r1.xyzw = cb2[3].xyzw * v0.wwww + r1.xyzw;
  o0.xyzw = r1.xyzw;

float4 stereo = StereoParams.Load(0);
r1.x += stereo.x * (r1.w - stereo.y);

  o4.xyzw = r1.xyzw;
  o1.xy = v2.xy;
  r1.xyzw = cb2[13].xyzw * r0.yyyy;
  r1.xyzw = cb2[12].xyzw * r0.xxxx + r1.xyzw;
  r0.xyzw = cb2[14].xyzw * r0.zzzz + r1.xyzw;
  o2.xyzw = cb2[15].xyzw * v0.wwww + r0.xyzw;
  o3.x = dot(v1.xyz, cb2[16].xyz);
  o3.y = dot(v1.xyz, cb2[17].xyz);
  o3.z = dot(v1.xyz, cb2[18].xyz);
  o5.xyzw = v3.xyzw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_constantbuffer cb2[19], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_output o3.xyz
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_temps 2
add r0.x, cb0[7].y, cb1[0].y
mad r0.xy, r0.xxxx, l(0.100000, 0.010000, 0.000000, 0.000000), v2.xyxx
mad r0.xy, r0.xyxx, cb0[9].xyxx, cb0[9].zwzz
sample_l r0.xyzw, r0.xyxx, t0.xyzw, s0, l(0.000000)
mul r0.xyz, r0.xyzx, v3.xyzx
mad r0.xyz, r0.xyzx, l(0.005000, 0.005000, 0.005000, 0.000000), v0.xyzx
mul r1.xyzw, r0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
mov o0.xyzw, r1.xyzw
mov o4.xyzw, r1.xyzw
mov o1.xy, v2.xyxx
mul r1.xyzw, r0.yyyy, cb2[13].xyzw
mad r1.xyzw, cb2[12].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb2[14].xyzw, r0.zzzz, r1.xyzw
mad o2.xyzw, cb2[15].xyzw, v0.wwww, r0.xyzw
dp3 o3.x, v1.xyzx, cb2[16].xyzx
dp3 o3.y, v1.xyzx, cb2[17].xyzx
dp3 o3.z, v1.xyzx, cb2[18].xyzx
mov o5.xyzw, v3.xyzw
ret 
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
