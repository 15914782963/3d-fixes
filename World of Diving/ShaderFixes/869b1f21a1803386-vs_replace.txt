cbuffer cb1 : register(b1)
{
  float4 cb1[20];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[6];
}


Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float4 v0 : POSITION0,
  float4 v1 : TANGENT0,
  float3 v2 : NORMAL0,
  float4 v3 : TEXCOORD0,
  float4 v4 : TEXCOORD1,
  float4 v5 : TEXCOORD2,
  float4 v6 : TEXCOORD3,
  float4 v7 : COLOR0,
  out float4 o0 : SV_POSITION0,
  out float3 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float3 o3 : TEXCOORD2,
  out float3 o4 : TEXCOORD3,
  out float3 o5 : TEXCOORD4)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = cb1[1].xyzw * v0.yyyy;
  r0.xyzw = cb1[0].xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = cb1[2].xyzw * v0.zzzz + r0.xyzw;
  r0.xyzw = cb1[3].xyzw * v0.wwww + r0.xyzw;
  o0.xyzw = r0.xyzw;
  r1.xyz = cb1[13].xyz * v0.yyy;
  r1.xyz = cb1[12].xyz * v0.xxx + r1.xyz;
  r1.xyz = cb1[14].xyz * v0.zzz + r1.xyz;
  o1.xyz = cb1[15].xyz + r1.xyz;
  r0.y = cb0[5].x * r0.y;
  r1.xzw = float3(5.000000e-001,5.000000e-001,5.000000e-001) * r0.xwy;
  o2.zw = r0.zw;
  o2.xy = r1.xw + r1.zz;
  o3.xyz = v0.xyz;
  r0.xyz = cb1[5].xyz * v0.yyy;
  r0.xyz = cb1[4].xyz * v0.xxx + r0.xyz;
  r0.xyz = cb1[6].xyz * v0.zzz + r0.xyz;
  o4.xyz = cb1[7].xyz + r0.xyz;
  r0.xyz = cb1[17].xyz * cb0[4].yyy;
  r0.xyz = cb1[16].xyz * cb0[4].xxx + r0.xyz;
  r0.xyz = cb1[18].xyz * cb0[4].zzz + r0.xyz;
  o5.xyz = cb1[19].xyz + r0.xyz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb1[20], immediateIndexed
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_temps 2
mul r0.xyzw, v0.yyyy, cb1[1].xyzw
mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
mov o0.xyzw, r0.xyzw
mul r1.xyz, v0.yyyy, cb1[13].xyzx
mad r1.xyz, cb1[12].xyzx, v0.xxxx, r1.xyzx
mad r1.xyz, cb1[14].xyzx, v0.zzzz, r1.xyzx
add o1.xyz, r1.xyzx, cb1[15].xyzx
mul r0.y, r0.y, cb0[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o2.zw, r0.zzzw
add o2.xy, r1.zzzz, r1.xwxx
mov o3.xyz, v0.xyzx
mul r0.xyz, v0.yyyy, cb1[5].xyzx
mad r0.xyz, cb1[4].xyzx, v0.xxxx, r0.xyzx
mad r0.xyz, cb1[6].xyzx, v0.zzzz, r0.xyzx
add o4.xyz, r0.xyzx, cb1[7].xyzx
mul r0.xyz, cb0[4].yyyy, cb1[17].xyzx
mad r0.xyz, cb1[16].xyzx, cb0[4].xxxx, r0.xyzx
mad r0.xyz, cb1[18].xyzx, cb0[4].zzzz, r0.xyzx
add o5.xyz, r0.xyzx, cb1[19].xyzx
ret 
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
