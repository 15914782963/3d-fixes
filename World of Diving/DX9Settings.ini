[General]

// UseRenderedShaders=true is nearly always useful, because it trims the
// list of shaders seen while hunting down to just those active in the
// current scene.  Disable this only if you get crashes during hunting.
UseRenderedShaders=true

// DumpAll will generate ASM text files for every shader seen by the game.
// This is usually worth doing once, but not useful for every run.
DumpAll=true

// Constant registers that will arrive in Vertex and Pixel Shaders, as
// c200.  The constants below will be assigned, based on the key preset.
DefVSConst1 = 200
DefPSConst1 = 200

// The PresetKeysList specifies which KEYs will be used.
// Multiple keys lists are supported.
// Note that the KEY sections are in hexadecimal
PresetsKeysList = 0;1;2;3;4;5;6;7;8;9;A;B;

// Allows textures to be cycled with Up/Down - use to hunt menu text CRC32
bCalcTexCRCatStart = true

// Makes it crash less when reloading shaders:
OverrideMethod = 2

// Game is borderless window, use a profile that supports 3D in a window. Use
// "3D-Hub Player" which is pretty minimal:
GameProfile = fxdplayer

// Mouse stopped working in game with Helix mod (works in menus)
InitMouse = false

// Force square surfaces (shadow maps) to be mono:
DefSquareSurfaceMode = 2

// Fix clipping on flashlight:
SkipSetScissorRect = true

[KEY0]
// [ Selects a conservative convergence value of 0.03 so everything is behind
// the mask
Key = 219
Presets = 100;
Type = 1
[PRES100]
UseSepSettings = true
SaveSepSettings = true
Convergence = 0x3cf5c28f
[KEY1]
// ] selects a slightly higher convergence value of 0.1 for greater 3D effect
// with body only just outside of mask, but sometimes bubbles may come inside
// the mask.
Key = 221
Presets = 101;
Type = 1
[PRES101]
UseSepSettings = true
SaveSepSettings = false
Convergence = 0x3dcccccd
UseByDef = true

// Number row on keyboard sets UI depth to various values between screen depth
// and separation. 1-5 are used by the game, so are not used here.
// 5: Screen depth
// 6: 25% separation
// 7: 50% separation
// 8: 75% separation
// 9: 90% separation
// 0: 95% separation
[KEY2]
Key = 53
Presets = 6;
Type = 1
[PRES6]
Const3 = 0x00000000
[KEY3]
Key = 54
Presets = 7;
Type = 1
[PRES7]
Const3 = 0x3e800000
[KEY4]
Key = 55
Presets = 8;
Type = 1
[PRES8]
Const3 = 0x3f000000
[KEY5]
Key = 56
Presets = 9;
Type = 1
[PRES9]
Const3 = 0x3f400000
[KEY6]
Key = 57
Presets = A;
Type = 1
[PRESA]
Const3 = 0x3f666666
UseByDef = true
[KEY7]
Key = 48
Presets = B;
Type = 1
[PRESB]
Const3 = 0x3f733333

// U toggles Const1
[KEY8]
Key = 85
Presets = C;D;
Type = 1
[PRESC]
Const1 = 0x00000000
[PRESD]
Const1 = 0x3f800000

// I toggles Const2
[KEY9]
Key = 73
Presets = E;F;
Type = 1
[PRESE]
Const2 = 0x3f800000
[PRESF]
Const2 = 0x00000000

// O toggles Const3
[KEYA]
Key = 79
Presets = 10;11;
Type = 1
[PRES10]
Const3 = 0x3f800000
[PRES11]
Const3 = 0x00000000

// P toggles Const4
[KEYB]
Key = 80
Presets = 12;13;
Type = 1
[PRES12]
Const4 = 0x3f800000
[PRES13]
Const4 = 0x00000000



// Copy the MVP and inverted MV matrices to all lighting shaders to allow us to
// calculate the projection matrix and find the horizontal FOV. This technique
// was first used to fix Dreamfall Chapters - take a look at the forum thread
// for that game and it's fix for more details on how this works.


// Get matrices from different shader since the prepass lighting shader is
// sometimes used to draw screen shadows and as such may not always use the
// desired projection matrix.
[VS61CAF50F]
UseMatrix = true
GetMatrixFromReg = 0
InverseMatrix = true
GetConst1FromReg = 4

// Unity Hidden/Internal-PrePassLighting.shader - ***VERTEX SHADER FOR ALL VARIANTS***
// MV is in c0-c3. Invert this and place it back in c180
// MVP is in c4-c7. We only need the first column so only bother with c4
[VSDF7A050C]
UseMatrix = true
GetMatrixFromReg = 0
InverseMatrix = true
MatrixReg = 180
GetConst1FromReg = 4
SetConst1ToReg = 190



// Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL SHADOWS_OFF
[PS0020AFE0]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_OFF SPOT
[PS04ED7E6B]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL SHADOWS_SCREEN
[PS0D1EC394]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL SHADOWS_SCREEN
[PS21FE5699]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_CUBE
[PS284DA432]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL_COOKIE SHADOWS_OFF
[PS30543CCC]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL SHADOWS_SCREEN
[PS356BC878]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_CUBE
[PS3CD83AD3]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_OFF
[PS40045626]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_NATIVE SHADOWS_SOFT SPOT
[PS4369D874]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL_COOKIE SHADOWS_SCREEN
[PS49C3F4B4]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_SOFT SPOT
[PS4FD8532C]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT
[PS547CD7A9]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_NATIVE SHADOWS_SOFT SPOT
[PS57FC4695]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_NATIVE SPOT
[PS5B0A6D77]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL_COOKIE SHADOWS_SCREEN
[PS62F2B6BF]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_NATIVE SHADOWS_SOFT SPOT
[PS736137F7]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL_COOKIE SHADOWS_SCREEN
[PS7667285E]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SPOT
[PS7A9BF7A7]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_CUBE
[PS81ED1203]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT
[PS893B94C1]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_CUBE SHADOWS_SOFT
[PS921CDD6F]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_CUBE
[PS95788CE2]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT
[PS9DAE0A20]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_NATIVE SPOT
[PSA1F71696]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_CUBE
[PSA43F3389]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_OFF
[PSB29F30D0]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_NATIVE SPOT
[PSB5628877]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_OFF
[PSC5B3DACA]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL SHADOWS_OFF
[PSC8C82836]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_CUBE
[PSCA11D98D]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SPOT
[PSCD7F5093]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_CUBE SHADOWS_SOFT
[PSCDD3D9C8]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_OFF
[PSD126442B]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_CUBE SHADOWS_SOFT
[PSD9464729]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SPOT
[PSD9EACE72]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL SHADOWS_OFF
[PSDC5DB6D7]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_OFF SPOT
[PSE051955A]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL_COOKIE SHADOWS_OFF
[PSE0BDEC4E]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_OFF
[PSEA0E4115]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_SOFT SPOT
[PSEE9B36D7]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL_COOKIE SHADOWS_OFF
[PSF42872AF]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_OFF SPOT
[PSF4C40BBB]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_SOFT SPOT
[PSFA0EA836]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_OFF
[PSFE9BDFF4]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190


// Unity Hidden/Internal-PrePassCollectShadows.shader - ***VERTEX SHADER FOR ALL VARIANTS***
// Note: This shader has an MVP matrix, but not the matching MV matrix.
[VSBAEDDED5]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassCollectShadows.shader - SHADOWS_NONATIVE SHADOWS_SPLIT_SPHERES
[PS871F16C5]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassCollectShadows.shader - SHADOWS_NONATIVE
[PSAFC69A8C]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassCollectShadows.shader - SHADOWS_NATIVE SHADOWS_SPLIT_SPHERES
[PSC24D6005]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

// Unity Hidden/Internal-PrePassCollectShadows.shader - SHADOWS_NATIVE
[PSDF3A8F27]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190



// Blacklist UI depth adjustment for textures on diving computer
// 3CC5D9BA - compass + rectangle around depth
// 89659645 - rectangle around target
// D70DB34A - text ?
// 8CA5540F - text ?
// 0DE48DEA - text ?
// 678158B5 - waypoint triangle
[VS364BA958]
CheckTexCRC = true
ValNotDefined = 0
ValForDefined = 1
TexCounterReg = 251
UseDefinedOnly = false
DefinedTexturesVS = 3CC5D9BA;89659645;D70DB34A;8CA5540F;0DE48DEA;678158B5;
[VSA8D32517]
CheckTexCRC = true
ValNotDefined = 0
ValForDefined = 1
TexCounterReg = 251
UseDefinedOnly = false
DefinedTexturesVS = 3CC5D9BA;89659645;D70DB34A;8CA5540F;0DE48DEA;678158B5;
