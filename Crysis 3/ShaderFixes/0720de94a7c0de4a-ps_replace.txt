
cbuffer PER_BATCH : register(b0)
{
  float4 g_RainVolumeParams : packoffset(c0);
  float4 g_RainColorMultipliers : packoffset(c1);
  float4 g_WorldViewPos : packoffset(c2);
  float4 g_RainPuddleParams0 : packoffset(c3);
  float4 g_RainPuddleParams1 : packoffset(c4);
  float4 g_RainMistParams : packoffset(c5);
  float4 g_RainAnimParams : packoffset(c6);
  float4 g_RainOcc_WindOffs : packoffset(c7);
  row_major float4x4 g_RainOcc_TransMat : packoffset(c8);
  float4 PS_NearFarClipDist : packoffset(c12);
  float4 PS_HPosScale : packoffset(c13);
}
SamplerState mistMap_s : register(s0);
SamplerState sceneDepthMapSampler_s : register(s1);
SamplerState sceneSampler_s : register(s2);
SamplerState reflTargetSampler_s : register(s3);
SamplerState rainOccMap_s : register(s4);
SamplerState rainRipplesMap_s : register(s5);
SamplerState rainSpatterMap_s : register(s6);
SamplerState puddleMaskMap_s : register(s7);
SamplerState sceneSpecularAccSampler_s : register(s10);
SamplerState sceneNormalsSampler_s : register(s12);
Texture2D<float4> mistMap : register(t0);
Texture2D<float4> sceneDepthMapSampler : register(t1);
Texture2D<float4> sceneSampler : register(t2);
Texture2D<float4> reflTargetSampler : register(t3);
Texture2D<float4> rainOccMap : register(t4);
Texture2D<float4> rainRipplesMap : register(t5);
Texture2D<float4> rainSpatterMap : register(t6);
Texture2D<float4> puddleMaskMap : register(t7);
Texture2D<float4> sceneSpecularAccSampler : register(t10);
Texture2D<float4> sceneNormalsSampler : register(t12);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = sceneDepthMapSampler.Sample(sceneDepthMapSampler_s, v1.xy).x;
  r1.xyz = r0.xxx * v2.xyz + g_WorldViewPos.xyz;
  r0.x = saturate(g_RainColorMultipliers.w * r0.x + 10);
  r0.yz = float2(0.300000012,0.300000012) * r1.xy;
  r0.y = rainSpatterMap.Sample(rainSpatterMap_s, r0.yz).x;
  r2.xyzw = float4(0.100000001,0.100000001,0.699999988,0.699999988) * r1.xyxy;
  r0.z = rainSpatterMap.Sample(rainSpatterMap_s, r2.zw).x;
  r0.y = r0.z + r0.y;
  r0.z = r0.z >= 0.449999988;
  r0.z = r0.z ? 1.000000 : 0;
  r0.w = r0.y * 0.0078125 + -0.00390625;
  r1.w = 1;
  r2.z = dot(g_RainOcc_TransMat._m10_m11_m12_m13, r1.xyzw);
  r3.y = 1 + -r2.z;
  r3.x = dot(g_RainOcc_TransMat._m00_m01_m02_m03, r1.xyzw);
  r1.w = dot(g_RainOcc_TransMat._m20_m21_m22_m23, r1.xyzw);
  r2.zw = r3.xy + r0.ww;
  r3.xy = g_RainOcc_WindOffs.xy + r2.zw;
  r2.z = rainOccMap.Sample(rainOccMap_s, r2.zw).x;
  r2.w = rainOccMap.Sample(rainOccMap_s, r3.xy).x;
  r2.zw = float2(0.9921875,0.9921875) + -r2.zw;
  r2.zw = r2.zw < r1.ww;
  r0.w = r2.z ? -1 : -0;
  r2.zw = r2.zw ? float2(1.06535322e+009,1.06535322e+009) : 0;
  r0.w = r2.w + r0.w;
  r0.w = r0.w * 0.5 + r2.z;
  r3.xyz = g_RainVolumeParams.xyz + -r1.xyz;
  r3.xyz = g_RainVolumeParams.www * r3.xyz;
  r1.w = dot(r3.xyz, -r3.xyz);
  r1.w = saturate(1 + r1.w);
  r0.x = r1.w * r0.x;
  r0.x = r0.x * r0.w;
  r0.w = puddleMaskMap.Sample(puddleMaskMap_s, r2.xy).x;
  r0.w = max(g_RainPuddleParams1.x, r0.w);
  r2.zw = r0.ww * float2(16,0.5) + float2(-4,0.5);
  r2.z = saturate(r2.z);
  r0.w = r2.z * r0.x;
  r3.xyz = sceneNormalsSampler.Sample(sceneNormalsSampler_s, v1.xy).xyz;
  r3.yzw = r3.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r1.w = dot(r3.yz, r3.yz);
  r1.w = min(1, r1.w);
  r1.w = 1 + r1.w;
  r1.w = 2 / r1.w;
  r3.x = -1 + r1.w;
  r3.yz = r3.yz * r1.ww;
  r1.w = 0 < r3.w;
  r4.zw = r1.ww ? r3.xw : -r3.xw;
  r1.w = r4.z * 4 + -3;
  r1.w = max(0, r1.w);
  r1.w = g_RainPuddleParams0.z * r1.w;
  r2.z = r1.w * r0.w;
  r3.xw = g_RainPuddleParams0.xy * r0.ww;
  r2.xy = r3.xw * float2(0.100000001,0.100000001) + r2.xy;
  r0.w = rainSpatterMap.Sample(rainSpatterMap_s, r2.xy).x;
  r0.w = r0.y + r0.w;
  r0.y = 0.5 * r0.y;
  r0.w = g_RainAnimParams.y + r0.w;
  r0.w = frac(r0.w);
  r1.w = r1.w * r2.w;
  r2.xy = g_RainPuddleParams0.xy + r1.xy;
  r1.xyz = g_WorldViewPos.xyz + -r1.xyz;
  r2.xy = rainRipplesMap.Sample(rainRipplesMap_s, r2.xy).xy;
  r2.xy = r2.yx * float2(2,2) + float2(-1,-1);
  r2.xy = r2.xy * g_RainPuddleParams1.yy + -r3.yz;
  r4.xy = r2.zz * r2.xy + r3.yz;
  r2.x = saturate(-r2.z * 0.5 + 1);
  r2.y = max(r4.x, r4.y);
  r2.z = dot(r1.xyz, r1.xyz);
  r2.z = sqrt(r2.z);
  r1.xyz = r1.xyz / r2.zzz;
  r1.x = dot(r4.xyz, r1.xyz);
  r1.y = saturate(1 + -r4.w);
  r1.x = saturate(1 + -r1.x);
  r1.z = r1.x * r1.x;
  r1.z = r1.z * r1.z;
  r3.x = -r1.x * r1.z + 1;
  r1.x = r1.x * r1.z;
  r1.z = r3.x * abs(r2.y);
  r1.z = -r1.z * 0.900000036 + 0.600000024;
  r1.z = max(0, r1.z);
  r2.y = -r2.z * 0.0199999996 + 1;
  r2.y = max(0, r2.y);
  r2.x = -r2.y * r2.x + r2.y;
  r2.y = 0.5 * r1.w;
  r2.y = r2.x * 0.400000006 + r2.y;
  r2.x = r2.x * r2.x;
  r2.x = r2.x * r3.x;
  r2.x = 0.0199999996 * r2.x;
  r3.xy = r4.xy * r2.xx;
  r3.xy = r3.xy * PS_HPosScale.xy + v1.xy;
  r3.xyz = sceneSampler.Sample(sceneSampler_s, r3.xy).xyz;
  r1.z = saturate(r2.y * r1.z);
  r1.z = -r1.z * r0.x + 1;
  r5.xyz = g_RainColorMultipliers.xyz * r0.xxx;
  r5.xyz = r5.xyz * r1.www;
  r0.x = max(r1.w, r0.y);
  r0.y = mistMap.Sample(mistMap_s, v1.zw).x;
  r6.xyz = g_RainColorMultipliers.xyz * r0.yyy;
  r6.xyz = g_RainMistParams.xxx * r6.xyz;
  r3.xyz = r3.xyz * r1.zzz + r6.xyz;
  r0.y = r0.w * r0.z;
  r0.y = r0.y >= 0.949999988;
  r0.y = r0.y ? 1.000000 : 0;
  r6.xyz = float3(0.00999999978,0.0850000009,0.150000006) * r2.zzz;
  r0.z = -r2.z * 0.0299999993 + 1;
  r0.z = max(0, r0.z);
  r0.z = g_RainPuddleParams0.w * r0.z;
  r0.z = r0.z * r1.y;
  r1.yzw = min(float3(1,1,1), r6.xyz);
  r1.y = -r1.y * r1.z + r1.y;
  r1.z = 1 + -r1.w;
  r1.y = r1.y * r2.w;
  r0.y = r1.y * r0.y;
  r0.y = g_RainMistParams.w * r0.y;
  r2.xyz = r0.yyy * r5.xyz + r3.xyz;
  r0.y = r5.x * r1.x;
  r0.x = r0.y * r0.x;
  r0.y = r0.w >= 0.920000017;
  r0.w = r0.w * g_RainMistParams.w + -g_RainMistParams.w;
  r0.y = r0.y ? 1.000000 : 0;
  r0.y = r0.y * r1.z;
  r0.w = r0.w * r0.y;
  r0.y = g_RainMistParams.w * r0.y + g_RainMistParams.z;
  r0.y = 0.5 * r0.y;
  r1.xy = r0.ww * float2(5,5) + r4.xy;
  r1.xy = r1.xy * float2(0.100000001,0.100000001) + v1.zw;
  r1.xyz = reflTargetSampler.Sample(reflTargetSampler_s, r1.xy).xyz;
  r3.xyz = sceneSpecularAccSampler.Sample(sceneSpecularAccSampler_s, v1.xy).xyz;
  r3.xyz = saturate(r3.xyz);
  r0.w = dot(r3.xyz, float3(0.212599993,0.715200007,0.0722000003));
  r0.z = r0.w * r0.z;
  r0.yzw = r1.xyz * r0.yyy + r0.zzz;
  o0.xyz = r0.yzw * r0.xxx + r2.xyz;
  o0.w = 0;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.960.8229
//
//
// Buffer Definitions: 
//
// cbuffer PER_BATCH
// {
//
//   float4 g_RainVolumeParams;         // Offset:    0 Size:    16
//   float4 g_RainColorMultipliers;     // Offset:   16 Size:    16
//   float4 g_WorldViewPos;             // Offset:   32 Size:    16
//   float4 g_RainPuddleParams0;        // Offset:   48 Size:    16
//   float4 g_RainPuddleParams1;        // Offset:   64 Size:    16
//   float4 g_RainMistParams;           // Offset:   80 Size:    16
//   float4 g_RainAnimParams;           // Offset:   96 Size:    16
//   float4 g_RainOcc_WindOffs;         // Offset:  112 Size:    16
//   row_major float4x4 g_RainOcc_TransMat;// Offset:  128 Size:    64
//   float4 PS_NearFarClipDist;         // Offset:  192 Size:    16 [unused]
//   float4 PS_HPosScale;               // Offset:  208 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// mistMap                           sampler      NA          NA    0        1
// sceneDepthMapSampler              sampler      NA          NA    1        1
// sceneSampler                      sampler      NA          NA    2        1
// reflTargetSampler                 sampler      NA          NA    3        1
// rainOccMap                        sampler      NA          NA    4        1
// rainRipplesMap                    sampler      NA          NA    5        1
// rainSpatterMap                    sampler      NA          NA    6        1
// puddleMaskMap                     sampler      NA          NA    7        1
// sceneSpecularAccSampler           sampler      NA          NA   10        1
// sceneNormalsSampler               sampler      NA          NA   12        1
// mistMap                           texture  float4          2d    0        1
// sceneDepthMapSampler              texture  float4          2d    1        1
// sceneSampler                      texture  float4          2d    2        1
// reflTargetSampler                 texture  float4          2d    3        1
// rainOccMap                        texture  float4          2d    4        1
// rainRipplesMap                    texture  float4          2d    5        1
// rainSpatterMap                    texture  float4          2d    6        1
// puddleMaskMap                     texture  float4          2d    7        1
// sceneSpecularAccSampler           texture  float4          2d   10        1
// sceneNormalsSampler               texture  float4          2d   12        1
// PER_BATCH                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[14], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s10, mode_default
dcl_sampler s12, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t12
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 7
sample_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t1.xyzw, s1
mad r1.xyz, r0.xxxx, v2.xyzx, cb0[2].xyzx
mad_sat r0.x, cb0[1].w, r0.x, l(10.000000)
mul r0.yz, r1.xxyx, l(0.000000, 0.300000, 0.300000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t6.yxzw, s6
mul r2.xyzw, r1.xyxy, l(0.100000, 0.100000, 0.700000, 0.700000)
sample_indexable(texture2d)(float,float,float,float) r0.z, r2.zwzz, t6.yzxw, s6
add r0.y, r0.y, r0.z
ge r0.z, r0.z, l(0.450000)
and r0.z, r0.z, l(0x3f800000)
mad r0.w, r0.y, l(0.007813), l(-0.003906)
mov r1.w, l(1.000000)
dp4 r2.z, cb0[9].xyzw, r1.xyzw
add r3.y, -r2.z, l(1.000000)
dp4 r3.x, cb0[8].xyzw, r1.xyzw
dp4 r1.w, cb0[10].xyzw, r1.xyzw
add r2.zw, r0.wwww, r3.xxxy
add r3.xy, r2.zwzz, cb0[7].xyxx
sample_indexable(texture2d)(float,float,float,float) r2.z, r2.zwzz, t4.zwxy, s4
sample_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t4.zwyx, s4
add r2.zw, -r2.zzzw, l(0.000000, 0.000000, 0.992188, 0.992188)
lt r2.zw, r2.zzzw, r1.wwww
movc r0.w, r2.z, l(-1.000000), l(-0.000000)
and r2.zw, r2.zzzw, l(0, 0, 0x3f800000, 0x3f800000)
add r0.w, r0.w, r2.w
mad r0.w, r0.w, l(0.500000), r2.z
add r3.xyz, -r1.xyzx, cb0[0].xyzx
mul r3.xyz, r3.xyzx, cb0[0].wwww
dp3 r1.w, r3.xyzx, -r3.xyzx
add_sat r1.w, r1.w, l(1.000000)
mul r0.x, r0.x, r1.w
mul r0.x, r0.w, r0.x
sample_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t7.yzwx, s7
max r0.w, r0.w, cb0[4].x
mad r2.zw, r0.wwww, l(0.000000, 0.000000, 16.000000, 0.500000), l(0.000000, 0.000000, -4.000000, 0.500000)
mov_sat r2.z, r2.z
mul r0.w, r0.x, r2.z
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.xyxx, t12.xyzw, s12
mad r3.yzw, r3.xxyz, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
dp2 r1.w, r3.yzyy, r3.yzyy
min r1.w, r1.w, l(1.000000)
add r1.w, r1.w, l(1.000000)
div r1.w, l(2.000000), r1.w
add r3.x, r1.w, l(-1.000000)
mul r3.yz, r1.wwww, r3.yyzy
lt r1.w, l(0.000000), r3.w
movc r4.zw, r1.wwww, r3.xxxw, -r3.xxxw
mad r1.w, r4.z, l(4.000000), l(-3.000000)
max r1.w, r1.w, l(0.000000)
mul r1.w, r1.w, cb0[3].z
mul r2.z, r0.w, r1.w
mul r3.xw, r0.wwww, cb0[3].xxxy
mad r2.xy, r3.xwxx, l(0.100000, 0.100000, 0.000000, 0.000000), r2.xyxx
sample_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t6.yzwx, s6
add r0.w, r0.w, r0.y
mul r0.y, r0.y, l(0.500000)
add r0.w, r0.w, cb0[6].y
frc r0.w, r0.w
mul r1.w, r2.w, r1.w
add r2.xy, r1.xyxx, cb0[3].xyxx
add r1.xyz, -r1.xyzx, cb0[2].xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t5.xyzw, s5
mad r2.xy, r2.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r2.xy, r2.xyxx, cb0[4].yyyy, -r3.yzyy
mad r4.xy, r2.zzzz, r2.xyxx, r3.yzyy
mad_sat r2.x, -r2.z, l(0.500000), l(1.000000)
max r2.y, r4.y, r4.x
dp3 r2.z, r1.xyzx, r1.xyzx
sqrt r2.z, r2.z
div r1.xyz, r1.xyzx, r2.zzzz
dp3 r1.x, r4.xyzx, r1.xyzx
add_sat r1.y, -r4.w, l(1.000000)
add_sat r1.x, -r1.x, l(1.000000)
mul r1.z, r1.x, r1.x
mul r1.z, r1.z, r1.z
mad r3.x, -r1.x, r1.z, l(1.000000)
mul r1.x, r1.z, r1.x
mul r1.z, |r2.y|, r3.x
mad r1.z, -r1.z, l(0.900000), l(0.600000)
max r1.z, r1.z, l(0.000000)
mad r2.y, -r2.z, l(0.020000), l(1.000000)
max r2.y, r2.y, l(0.000000)
mad r2.x, -r2.y, r2.x, r2.y
mul r2.y, r1.w, l(0.500000)
mad r2.y, r2.x, l(0.400000), r2.y
mul r2.x, r2.x, r2.x
mul r2.x, r3.x, r2.x
mul r2.x, r2.x, l(0.020000)
mul r3.xy, r2.xxxx, r4.xyxx
mad r3.xy, r3.xyxx, cb0[13].xyxx, v1.xyxx
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t2.xyzw, s2
mul_sat r1.z, r1.z, r2.y
mad r1.z, -r1.z, r0.x, l(1.000000)
mul r5.xyz, r0.xxxx, cb0[1].xyzx
mul r5.xyz, r1.wwww, r5.xyzx
max r0.x, r0.y, r1.w
sample_indexable(texture2d)(float,float,float,float) r0.y, v1.zwzz, t0.yxzw, s0
mul r6.xyz, r0.yyyy, cb0[1].xyzx
mul r6.xyz, r6.xyzx, cb0[5].xxxx
mad r3.xyz, r3.xyzx, r1.zzzz, r6.xyzx
mul r0.y, r0.z, r0.w
ge r0.y, r0.y, l(0.950000)
and r0.y, r0.y, l(0x3f800000)
mul r6.xyz, r2.zzzz, l(0.010000, 0.085000, 0.150000, 0.000000)
mad r0.z, -r2.z, l(0.030000), l(1.000000)
max r0.z, r0.z, l(0.000000)
mul r0.z, r0.z, cb0[3].w
mul r0.z, r1.y, r0.z
min r1.yzw, r6.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
mad r1.y, -r1.y, r1.z, r1.y
add r1.z, -r1.w, l(1.000000)
mul r1.y, r2.w, r1.y
mul r0.y, r0.y, r1.y
mul r0.y, r0.y, cb0[5].w
mad r2.xyz, r0.yyyy, r5.xyzx, r3.xyzx
mul r0.y, r1.x, r5.x
mul r0.x, r0.x, r0.y
ge r0.y, r0.w, l(0.920000)
mad r0.w, r0.w, cb0[5].w, -cb0[5].w
and r0.y, r0.y, l(0x3f800000)
mul r0.y, r1.z, r0.y
mul r0.w, r0.y, r0.w
mad r0.y, cb0[5].w, r0.y, cb0[5].z
mul r0.y, r0.y, l(0.500000)
mad r1.xy, r0.wwww, l(5.000000, 5.000000, 0.000000, 0.000000), r4.xyxx
mad r1.xy, r1.xyxx, l(0.100000, 0.100000, 0.000000, 0.000000), v1.zwzz
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t3.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.xyxx, t10.xyzw, s10
mov_sat r3.xyz, r3.xyzx
dp3 r0.w, r3.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
mul r0.z, r0.z, r0.w
mad r0.yzw, r1.xxyz, r0.yyyy, r0.zzzz
mad o0.xyz, r0.yzwy, r0.xxxx, r2.xyzx
mov o0.w, l(0)
ret 
// Approximately 135 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
