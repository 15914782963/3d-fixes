//HUD Big map
cbuffer cbInstanceConsts : register(b1)
{
  float4 InstanceConsts[9] : packoffset(c0);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : POSITION0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = InstanceConsts[6].xy * v0.xy;
  r1.xy = r0.xy * InstanceConsts[7].xx + InstanceConsts[7].yy;
  r2.xyzw = InstanceConsts[1].xyzw * r1.yyyy;
  r1.xyzw = r1.xxxx * InstanceConsts[0].xyzw + r2.xyzw;
  o0.xyzw = InstanceConsts[3].xyzw + r1.xyzw;
  r0.z = -v0.y * InstanceConsts[6].y + 1;
  o1.xy = r0.xz * InstanceConsts[5].xy + InstanceConsts[5].zw;
  o1.zw = r0.xz * InstanceConsts[4].xy + InstanceConsts[4].zw;
  r0.xy = r0.xy * InstanceConsts[8].xy + -InstanceConsts[8].zw;
  o2.zw = r0.xy * float2(1,-1) + float2(0,1);
  o2.xy = v0.xy;
  
  float4 stereo = StereoParams.Load(0);
  float4 iniParams = IniParams.Load(0);
  if (o0.w != 1)
  {
  o0.x -= stereo.x * (o0.w - stereo.y) * (1-iniParams.y);
  }
  else
  o0.x += stereo.x * iniParams.x;
  
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//   using 3Dmigoto v1.2.1 on Fri Oct 02 14:58:58 2015
//
//
// Buffer Definitions: 
//
// cbuffer cbInstanceConsts
// {
//
//   float4 InstanceConsts[9];          // Offset:    0 Size:   144
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cbInstanceConsts                  cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_input v0.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 3
mul r0.xy, v0.xyxx, cb1[6].xyxx
mad r1.xy, r0.xyxx, cb1[7].xxxx, cb1[7].yyyy
mul r2.xyzw, r1.yyyy, cb1[1].xyzw
mad r1.xyzw, r1.xxxx, cb1[0].xyzw, r2.xyzw
add o0.xyzw, r1.xyzw, cb1[3].xyzw
mad r0.z, -v0.y, cb1[6].y, l(1.000000)
mad o1.xy, r0.xzxx, cb1[5].xyxx, cb1[5].zwzz
mad o1.zw, r0.xxxz, cb1[4].xxxy, cb1[4].zzzw
mad r0.xy, r0.xyxx, cb1[8].xyxx, -cb1[8].zwzz
mad o2.zw, r0.xxxy, l(0.000000, 0.000000, 1.000000, -1.000000), l(0.000000, 0.000000, 0.000000, 1.000000)
mov o2.xy, v0.xyxx
ret 
// Approximately 12 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
 