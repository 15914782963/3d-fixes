
cbuffer cbInstanceConsts : register(b1)
{
  float4 InstanceConsts[5] : packoffset(c0);
}

cbuffer cbTypeConsts : register(b2)
{
  float4 TypeConsts[5] : packoffset(c0);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float3 v0 : POSITION0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float3 o2 : TEXCOORD1)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = v0.x * 6.28318548 + -3.14159274;
  sincos(r0.x, r0.x, r1.x);
  r1.y = r0.x;
  r0.xy = v0.zz * r1.xy;
  r0.z = InstanceConsts[4].x * v0.y;
  sincos(r0.z, r1.x, r2.x);
  r0.xy = r1.xx * r0.xy;
  r0.z = v0.z * r2.x;
  r1.xyzw = InstanceConsts[1].xyzw * r0.yyyy;
  r1.xyzw = r0.xxxx * InstanceConsts[0].xyzw + r1.xyzw;
  r0.xyzw = r0.zzzz * InstanceConsts[2].xyzw + r1.xyzw;
  r0.xyzw = InstanceConsts[3].xyzw + r0.xyzw;
  o0.xyzw = r0.xyzw;
  r1.xy = r0.xy / r0.ww;
  o1.xy = r1.xy * float2(0.5,-0.5) + float2(0.5,0.5);
  r1.xyzw = TypeConsts[2].xyzw * r0.yyyy;
  r1.xyzw = r0.xxxx * TypeConsts[1].xyzw + r1.xyzw;
  r0.xyzw = r0.wwww * TypeConsts[4].xyzw + r1.xyzw;
  r0.xyz = r0.xyz / r0.www;
  o2.xyz = TypeConsts[0].xxx * r0.xyz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer cbInstanceConsts
// {
//
//   float4 InstanceConsts[5];          // Offset:    0 Size:    80
//
// }
//
// cbuffer cbTypeConsts
// {
//
//   float4 TypeConsts[5];              // Offset:    0 Size:    80
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cbInstanceConsts                  cbuffer      NA          NA    1        1
// cbTypeConsts                      cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[5], immediateIndexed
dcl_constantbuffer cb2[5], immediateIndexed
dcl_input v0.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyz
dcl_temps 3
mad r0.x, v0.x, l(6.283185), l(-3.141593)
sincos r0.x, r1.x, r0.x
mov r1.y, r0.x
mul r0.xy, r1.xyxx, v0.zzzz
mul r0.z, v0.y, cb1[4].x
sincos r1.x, r2.x, r0.z
mul r0.xy, r0.xyxx, r1.xxxx
mul r0.z, r2.x, v0.z
mul r1.xyzw, r0.yyyy, cb1[1].xyzw
mad r1.xyzw, r0.xxxx, cb1[0].xyzw, r1.xyzw
mad r0.xyzw, r0.zzzz, cb1[2].xyzw, r1.xyzw
add r0.xyzw, r0.xyzw, cb1[3].xyzw
mov o0.xyzw, r0.xyzw
div r1.xy, r0.xyxx, r0.wwww
mad o1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mul r1.xyzw, r0.yyyy, cb2[2].xyzw
mad r1.xyzw, r0.xxxx, cb2[1].xyzw, r1.xyzw
mad r0.xyzw, r0.wwww, cb2[4].xyzw, r1.xyzw
div r0.xyz, r0.xyzx, r0.wwww
mul o2.xyz, r0.xyzx, cb2[0].xxxx
ret 
// Approximately 21 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ HLSL errors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Steam\steamapps\common\Mad Max\wrapper1349(18,14-15): warning X3578: Output value 'o1' is not completely initialized
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
