
cbuffer cbConstants : register(b1)
{
  float4 Constants[5] : packoffset(c0);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float2 v0 : POSITION0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float3 o2 : TEXCOORD1)
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;

  o0.xy = v0.xy;
  o0.zw = float2(1,1);
  o1.xyzw = v0.xyxy * float4(0.5,-0.5,0.0500000007,-0.0500000007) + float4(0.5,0.5,0.0500000007,0.0500000007);
  r0.xyzw = Constants[2].xyzw * v0.yyyy;
  r0.xyzw = v0.xxxx * Constants[1].xyzw + r0.xyzw;
  r0.xyzw = Constants[4].xyzw + r0.xyzw;
  r0.xyz = r0.xyz / r0.www;
  o2.xyz = Constants[0].xxx * r0.xyz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer cbConstants
// {
//
//   float4 Constants[5];               // Offset:    0 Size:    80
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cbConstants                       cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xy          0     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[5], immediateIndexed
dcl_input v0.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_temps 1
mov o0.xy, v0.xyxx
mov o0.zw, l(0,0,1.000000,1.000000)
mad o1.xyzw, v0.xyxy, l(0.500000, -0.500000, 0.050000, -0.050000), l(0.500000, 0.500000, 0.050000, 0.050000)
mul r0.xyzw, v0.yyyy, cb1[2].xyzw
mad r0.xyzw, v0.xxxx, cb1[1].xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, cb1[4].xyzw
div r0.xyz, r0.xyzx, r0.wwww
mul o2.xyz, r0.xyzx, cb1[0].xxxx
ret 
// Approximately 9 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
