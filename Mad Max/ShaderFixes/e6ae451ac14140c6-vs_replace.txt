
cbuffer cbInstanceConsts : register(b1)
{
  float4 InstanceConsts[9] : packoffset(c0);
}

cbuffer cbTypeConsts : register(b2)
{
  float4 TypeConsts[5] : packoffset(c0);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float3 v0 : POSITION0,
  float2 v1 : TEXCOORD0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float3 o2 : TEXCOORD1)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = InstanceConsts[1].xyzw * v0.yyyy;
  r0.xyzw = v0.xxxx * InstanceConsts[0].xyzw + r0.xyzw;
  r0.xyzw = v0.zzzz * InstanceConsts[2].xyzw + r0.xyzw;
  r0.xyzw = InstanceConsts[3].xyzw + r0.xyzw;
  o0.xyzw = r0.xyzw;
  r1.xyz = float3(0.5,-0.5,0.5) * r0.xyw;
  r1.xy = r1.xy + r1.zz;
  o1.xy = InstanceConsts[8].xy * r1.xy;
  o1.zw = r0.zw;
  r1.xyzw = TypeConsts[1].xyzw * r0.yyyy;
  r1.xyzw = r0.xxxx * TypeConsts[0].xyzw + r1.xyzw;
  r0.xyzw = r0.wwww * TypeConsts[3].xyzw + r1.xyzw;
  r0.xyz = r0.xyz / r0.www;
  o2.xyz = TypeConsts[4].xxx * r0.xyz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer cbInstanceConsts
// {
//
//   float4 InstanceConsts[9];          // Offset:    0 Size:   144
//
// }
//
// cbuffer cbTypeConsts
// {
//
//   float4 TypeConsts[5];              // Offset:    0 Size:    80
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cbInstanceConsts                  cbuffer      NA          NA    1        1
// cbTypeConsts                      cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[5], immediateIndexed
dcl_input v0.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_temps 2
mul r0.xyzw, v0.yyyy, cb1[1].xyzw
mad r0.xyzw, v0.xxxx, cb1[0].xyzw, r0.xyzw
mad r0.xyzw, v0.zzzz, cb1[2].xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, cb1[3].xyzw
mov o0.xyzw, r0.xyzw
mul r1.xyz, r0.xywx, l(0.500000, -0.500000, 0.500000, 0.000000)
add r1.xy, r1.zzzz, r1.xyxx
mul o1.xy, r1.xyxx, cb1[8].xyxx
mov o1.zw, r0.zzzw
mul r1.xyzw, r0.yyyy, cb2[1].xyzw
mad r1.xyzw, r0.xxxx, cb2[0].xyzw, r1.xyzw
mad r0.xyzw, r0.wwww, cb2[3].xyzw, r1.xyzw
div r0.xyz, r0.xyzx, r0.wwww
mul o2.xyz, r0.xyzx, cb2[4].xxxx
ret 
// Approximately 15 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
