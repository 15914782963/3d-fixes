// Halo around Max
//Shadows VS 2
cbuffer GlobalConstants : register(b0)
{
  float4 Globals[20] : packoffset(c0);
  row_major float4x4 ShadowTransform[3] : packoffset(c20);
}

cbuffer cbInstanceConsts : register(b1)
{
  float4 InstanceConsts[6] : packoffset(c0);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float3 v0 : POSITION0,
  out float4 o0 : SV_Position0,
  out float3 o1 : TEXCOORD0)

  
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = InstanceConsts[4].xyz * v0.xyz;
  r1.xyz = InstanceConsts[1].xyz * r0.yyy;
  r0.xyw = r0.xxx * InstanceConsts[0].xyz + r1.xyz;
  r0.xyz = r0.zzz * InstanceConsts[2].xyz + r0.xyw;
  r0.xyz = InstanceConsts[3].xyz + r0.xyz;
  r1.xyzw = Globals[1].xyzw * r0.yyyy;
  r1.xyzw = r0.xxxx * Globals[0].xyzw + r1.xyzw;
  r0.xyzw = r0.zzzz * Globals[2].xyzw + r1.xyzw;
  r0.xyzw = Globals[3].xyzw + r0.xyzw;
  o0.xyzw = r0.xyzw;

float4 stereo = StereoParams.Load(0);
r0.x += stereo.x * (r0.w - stereo.y);

  r0.xyz = float3(0.5,-0.5,0.5) * r0.xyw;
  o1.z = r0.w;
  r0.xy = r0.xy + r0.zz;
  o1.xy = InstanceConsts[5].xy * r0.xy;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer GlobalConstants
// {
//
//   float4 Globals[20];                // Offset:    0 Size:   320
//   row_major float4x4 ShadowTransform[3];// Offset:  320 Size:   192 [unused]
//
// }
//
// cbuffer cbInstanceConsts
// {
//
//   float4 InstanceConsts[6];          // Offset:    0 Size:    96
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// GlobalConstants                   cbuffer      NA          NA    0        1
// cbInstanceConsts                  cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_input v0.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_temps 2
mul r0.xyz, v0.xyzx, cb1[4].xyzx
mul r1.xyz, r0.yyyy, cb1[1].xyzx
mad r0.xyw, r0.xxxx, cb1[0].xyxz, r1.xyxz
mad r0.xyz, r0.zzzz, cb1[2].xyzx, r0.xywx
add r0.xyz, r0.xyzx, cb1[3].xyzx
mul r1.xyzw, r0.yyyy, cb0[1].xyzw
mad r1.xyzw, r0.xxxx, cb0[0].xyzw, r1.xyzw
mad r0.xyzw, r0.zzzz, cb0[2].xyzw, r1.xyzw
add r0.xyzw, r0.xyzw, cb0[3].xyzw
mov o0.xyzw, r0.xyzw
mul r0.xyz, r0.xywx, l(0.500000, -0.500000, 0.500000, 0.000000)
mov o1.z, r0.w
add r0.xy, r0.zzzz, r0.xyxx
mul o1.xy, r0.xyxx, cb1[5].xyxx
ret 
// Approximately 15 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
