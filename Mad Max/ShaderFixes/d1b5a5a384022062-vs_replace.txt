
cbuffer GlobalConstants : register(b0)
{
  float4 Globals[20] : packoffset(c0);
  row_major float4x4 ShadowTransform[3] : packoffset(c20);
}

cbuffer InstanceConsts : register(b1)
{
  row_major float4x4 WorldViewProjMatrix : packoffset(c0);
  float4 PointLights[12] : packoffset(c4);
  float FaceNormal : packoffset(c16);
  float DynamicLightMultiplier : packoffset(c16.y);
  float LightSaturation : packoffset(c16.z);
  float AmbientLightMultiplier : packoffset(c16.w);
  float4 ColourMultiplier : packoffset(c17);
  row_major float4x4 SkyMaskProjMatrix : packoffset(c18);
  float2 ScaledUVs : packoffset(c22);
  float2 AngleFade : packoffset(c22.z);
}

cbuffer cbLightingConsts : register(b2)
{
  float4 LightingConsts[4] : packoffset(c0);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float3 v0 : POSITION0,
  float4 v1 : COLOR0,
  float4 v2 : COLOR1,
  float4 v3 : TEXCOORD0,
  float4 v4 : TEXCOORD1,
  float4 v5 : TEXCOORD3,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD4,
  out float4 o5 : TEXCOORD5,
  out float3 o6 : TEXCOORD6)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  o0.z = 0;
  r0.x = v1.w;
  r0.x = ColourMultiplier.w * r0.x;
  r0.y = r0.x < 0.00999999978;
  r1.xyz = LightingConsts[3].xyz + v0.xyz;
  r2.xyzw = WorldViewProjMatrix._m10_m11_m12_m13 * r1.yyyy;
  r2.xyzw = r1.xxxx * WorldViewProjMatrix._m00_m01_m02_m03 + r2.xyzw;
  r2.xyzw = r1.zzzz * WorldViewProjMatrix._m20_m21_m22_m23 + r2.xyzw;
  r2.xyzw = WorldViewProjMatrix._m30_m31_m32_m33 + r2.xyzw;
  o0.xyw = r0.yyy ? float3(-1,-1,1) : r2.xyw;
  r0.y = r2.w + -r2.z;
  r0.z = r1.y * Globals[13].z + -Globals[13].x;
  r0.z = min(Globals[13].y, r0.z);
  r0.z = 1 + -r0.z;
  r0.w = saturate(Globals[13].w * r0.y);
  r0.z = r0.w * r0.z + -Globals[12].x;
  o1.z = saturate(r0.y * Globals[12].z + r0.z);
  o1.xy = float2(1.99993896,1.99993896) * v4.xy;
  r0.yzw = ColourMultiplier.xyz * v1.xyz;
  o2.xyz = float3(4,4,4) * r0.yzw;
  r0.y = 0 < AngleFade.y;
  r2.xyz = -Globals[9].xyz + r1.xyz;
  o4.xyz = r1.xyz;
  r0.z = dot(r2.xyz, r2.xyz);
  r0.z = rsqrt(r0.z);
  r1.xyz = r2.xyz * r0.zzz;
  r3.xyz = v2.xyz * float3(2.00787401,2.00787401,2.00787401) + float3(-1,-1,-1);
  r0.z = dot(r3.xyz, r3.xyz);
  r0.w = rsqrt(r0.z);
  r0.z = sqrt(r0.z);
  r0.z = -0.5 + r0.z;
  r0.z = saturate(-r0.z * 2 + 1);
  r3.xzw = r3.xyz * r0.www;
  r0.w = -r3.y * r0.w + 0.100000001;
  r0.w = r0.w + r0.w;
  r1.x = dot(r1.xyz, r3.xzw);
  r1.x = -AngleFade.x + abs(r1.x);
  r1.x = saturate(AngleFade.y * r1.x);
  r0.y = r0.y ? r1.x : 1;
  o2.w = r0.x * r0.y;
  r1.xyz = SkyMaskProjMatrix._m10_m11_m12 * r2.yyy;
  r1.xyz = r2.xxx * SkyMaskProjMatrix._m00_m01_m02 + r1.xyz;
  r1.xyz = r2.zzz * SkyMaskProjMatrix._m20_m21_m22 + r1.xyz;
  r1.xyz = SkyMaskProjMatrix._m30_m31_m32 + r1.xyz;
  o3.xyz = float3(-1,1,1) * r1.xyz;
  r0.x = 0 < FaceNormal;
  r0.y = FaceNormal < 0;
  r0.x = ((int)r0.y ? -1 : 0) + ((int)r0.x ? 1 : 0);
  r0.x = (int)r0.x;
  r0.y = FaceNormal == 0.000000;
  r0.x = r0.y ? 1 : r0.x;
  r1.xyz = Globals[5].xyz * r0.xxx + -r3.xzw;
  r0.x = -abs(FaceNormal) + 1;
  r0.x = max(0, r0.x);
  r0.y = dot(Globals[5].xyz, -Globals[8].xyz);
  r1.w = abs(r0.y) * r0.x;
  r1.xyz = r1.www * r1.xyz + r3.xzw;
  r1.w = dot(r1.xyz, r1.xyz);
  r1.w = rsqrt(r1.w);
  r1.xyz = r1.xyz * r1.www;
  r1.x = dot(r1.xyz, -Globals[8].xyz);
  r0.x = saturate(abs(r0.y) * r0.x + r1.x);
  r0.x = max(r0.x, r0.z);
  r0.y = 1 + r0.z;
  r0.z = 1 + -r0.z;
  r0.z = saturate(r0.w * r0.z);
  r0.y = 1 / r0.y;
  r0.x = r0.x * r0.y;
  r0.xyw = LightingConsts[2].xyz * r0.xxx;
  r1.x = 8 * v3.x;
  r1.yzw = r1.xxx * r0.xyw;
  r1.y = dot(r1.yzw, float3(0.212500006,0.715399981,0.0720999986));
  r0.xyw = r0.xyw * r1.xxx + -r1.yyy;
  o5.xyz = LightSaturation * r0.xyw + r1.yyy;
  r0.xyw = -LightingConsts[1].xyz + LightingConsts[0].xyz;
  r0.xyz = r0.zzz * r0.xyw + LightingConsts[1].xyz;
  r0.w = 32 * v2.w;
  r0.xyz = r0.xyz * AmbientLightMultiplier + r0.www;
  r0.w = dot(r0.xyz, float3(0.212500006,0.715399981,0.0720999986));
  r0.xyz = r0.xyz + -r0.www;
  o6.xyz = LightSaturation * r0.xyz + r0.www;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer GlobalConstants
// {
//
//   float4 Globals[20];                // Offset:    0 Size:   320
//   row_major float4x4 ShadowTransform[3];// Offset:  320 Size:   192 [unused]
//
// }
//
// cbuffer InstanceConsts
// {
//
//   row_major float4x4 WorldViewProjMatrix;// Offset:    0 Size:    64
//   float4 PointLights[12];            // Offset:   64 Size:   192 [unused]
//   float FaceNormal;                  // Offset:  256 Size:     4
//   float DynamicLightMultiplier;      // Offset:  260 Size:     4 [unused]
//   float LightSaturation;             // Offset:  264 Size:     4
//   float AmbientLightMultiplier;      // Offset:  268 Size:     4
//   float4 ColourMultiplier;           // Offset:  272 Size:    16
//   row_major float4x4 SkyMaskProjMatrix;// Offset:  288 Size:    64
//   float2 ScaledUVs;                  // Offset:  352 Size:     8 [unused]
//   float2 AngleFade;                  // Offset:  360 Size:     8
//
// }
//
// cbuffer cbLightingConsts
// {
//
//   float4 LightingConsts[4];          // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// GlobalConstants                   cbuffer      NA          NA    0        1
// InstanceConsts                    cbuffer      NA          NA    1        1
// cbLightingConsts                  cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// COLOR                    0   xyzw        1     NONE   float   xyzw
// COLOR                    1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   x   
// TEXCOORD                 1   xy          4     NONE   float   xy  
// TEXCOORD                 3   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[23], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input v3.x
dcl_input v4.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyz
dcl_temps 4
mov o0.z, l(0)
mov r0.x, v1.w
mul r0.x, r0.x, cb1[17].w
lt r0.y, r0.x, l(0.010000)
add r1.xyz, v0.xyzx, cb2[3].xyzx
mul r2.xyzw, r1.yyyy, cb1[1].xyzw
mad r2.xyzw, r1.xxxx, cb1[0].xyzw, r2.xyzw
mad r2.xyzw, r1.zzzz, cb1[2].xyzw, r2.xyzw
add r2.xyzw, r2.xyzw, cb1[3].xyzw
movc o0.xyw, r0.yyyy, l(-1.000000,-1.000000,0,1.000000), r2.xyxw
add r0.y, -r2.z, r2.w
mad r0.z, r1.y, cb0[13].z, -cb0[13].x
min r0.z, r0.z, cb0[13].y
add r0.z, -r0.z, l(1.000000)
mul_sat r0.w, r0.y, cb0[13].w
mad r0.z, r0.w, r0.z, -cb0[12].x
mad_sat o1.z, r0.y, cb0[12].z, r0.z
mul o1.xy, v4.xyxx, l(1.999939, 1.999939, 0.000000, 0.000000)
mul r0.yzw, v1.xxyz, cb1[17].xxyz
mul o2.xyz, r0.yzwy, l(4.000000, 4.000000, 4.000000, 0.000000)
lt r0.y, l(0.000000), cb1[22].w
add r2.xyz, r1.xyzx, -cb0[9].xyzx
mov o4.xyz, r1.xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r1.xyz, r0.zzzz, r2.xyzx
mad r3.xyz, v2.xyzx, l(2.007874, 2.007874, 2.007874, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.z, r3.xyzx, r3.xyzx
rsq r0.w, r0.z
sqrt r0.z, r0.z
add r0.z, r0.z, l(-0.500000)
mad_sat r0.z, -r0.z, l(2.000000), l(1.000000)
mul r3.xzw, r0.wwww, r3.xxyz
mad r0.w, -r3.y, r0.w, l(0.100000)
add r0.w, r0.w, r0.w
dp3 r1.x, r1.xyzx, r3.xzwx
add r1.x, |r1.x|, -cb1[22].z
mul_sat r1.x, r1.x, cb1[22].w
movc r0.y, r0.y, r1.x, l(1.000000)
mul o2.w, r0.y, r0.x
mul r1.xyz, r2.yyyy, cb1[19].xyzx
mad r1.xyz, r2.xxxx, cb1[18].xyzx, r1.xyzx
mad r1.xyz, r2.zzzz, cb1[20].xyzx, r1.xyzx
add r1.xyz, r1.xyzx, cb1[21].xyzx
mul o3.xyz, r1.xyzx, l(-1.000000, 1.000000, 1.000000, 0.000000)
lt r0.x, l(0.000000), cb1[16].x
lt r0.y, cb1[16].x, l(0.000000)
iadd r0.x, r0.y, -r0.x
itof r0.x, r0.x
eq r0.y, cb1[16].x, l(0.000000)
movc r0.x, r0.y, l(1.000000), r0.x
mad r1.xyz, cb0[5].xyzx, r0.xxxx, -r3.xzwx
add r0.x, l(1.000000), -|cb1[16].x|
max r0.x, r0.x, l(0.000000)
dp3 r0.y, cb0[5].xyzx, -cb0[8].xyzx
mul r1.w, r0.x, |r0.y|
mad r1.xyz, r1.wwww, r1.xyzx, r3.xzwx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
dp3 r1.x, r1.xyzx, -cb0[8].xyzx
mad_sat r0.x, |r0.y|, r0.x, r1.x
max r0.x, r0.z, r0.x
add r0.y, r0.z, l(1.000000)
add r0.z, -r0.z, l(1.000000)
mul_sat r0.z, r0.z, r0.w
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
mul r0.x, r0.y, r0.x
mul r0.xyw, r0.xxxx, cb2[2].xyxz
mul r1.x, v3.x, l(8.000000)
mul r1.yzw, r0.xxyw, r1.xxxx
dp3 r1.y, r1.yzwy, l(0.212500, 0.715400, 0.072100, 0.000000)
mad r0.xyw, r0.xyxw, r1.xxxx, -r1.yyyy
mad o5.xyz, cb1[16].zzzz, r0.xywx, r1.yyyy
add r0.xyw, cb2[0].xyxz, -cb2[1].xyxz
mad r0.xyz, r0.zzzz, r0.xywx, cb2[1].xyzx
mul r0.w, v2.w, l(32.000000)
mad r0.xyz, r0.xyzx, cb1[16].wwww, r0.wwww
dp3 r0.w, r0.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
add r0.xyz, -r0.wwww, r0.xyzx
mad o6.xyz, cb1[16].zzzz, r0.xyzx, r0.wwww
ret 
// Approximately 82 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ HLSL errors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Steam\steamapps\common\Mad Max\wrapper1349(38,14-15): warning X3578: Output value 'o1' is not completely initialized
C:\Steam\steamapps\common\Mad Max\wrapper1349(40,14-15): warning X3578: Output value 'o3' is not completely initialized
C:\Steam\steamapps\common\Mad Max\wrapper1349(41,14-15): warning X3578: Output value 'o4' is not completely initialized
C:\Steam\steamapps\common\Mad Max\wrapper1349(42,14-15): warning X3578: Output value 'o5' is not completely initialized
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
