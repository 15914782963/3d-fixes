// Water shader

//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 ActorWorldPos;
//   float4 CameraPositionVS;
//   float4 FogInScattering[4];
//   float4 FogMaxHeight;
//   float4 GridSize;
//   float4 LightmapCoordinateScaleBias;
//   float4x4 LocalToWorld;
//   float4 PreViewTranslation;
//   float4 SharedFogParameter0;
//   float4 SharedFogParameter1;
//   float4 SharedFogParameter2;
//   float4 SharedFogParameter3;
//   float3 TemporalAAParameters;
//   float4 UniformVertexScalars_0;
//   float4 UniformVertexScalars_1;
//   float4 UniformVertexScalars_2;
//   float4 UniformVertexScalars_3;
//   float4 UniformVertexVector_0;
//   float4 UniformVertexVector_1;
//   float4 UniformVertexVector_2;
//   float4x4 ViewProjectionMatrix;
//   float3x3 WorldToLocal;
//   float bUseExponentialHeightFog;
//
//
// Registers:
//
//   Name                        Reg   Size
//   --------------------------- ----- ----
//   ViewProjectionMatrix        c0       4
//   CameraPositionVS            c4       1
//   PreViewTranslation          c5       1
//   LocalToWorld                c6       4
//   FogInScattering             c10      4
//   WorldToLocal                c14      3
//   ActorWorldPos               c17      1
//   UniformVertexVector_0       c18      1
//   UniformVertexVector_1       c19      1
//   UniformVertexVector_2       c20      1
//   UniformVertexScalars_0      c21      1
//   UniformVertexScalars_1      c22      1
//   UniformVertexScalars_2      c23      1
//   UniformVertexScalars_3      c24      1
//   TemporalAAParameters        c25      1
//   GridSize                    c26      1
//   LightmapCoordinateScaleBias c27      1
//   SharedFogParameter0         c28      1
//   SharedFogParameter1         c29      1
//   SharedFogParameter2         c30      1
//   SharedFogParameter3         c31      1
//   bUseExponentialHeightFog    c32      1
//   FogMaxHeight                c33      1
//

    vs_3_0
    def c34, -0.5, 6, 0, 36
    def c35, 0.499000013, 0.5, 0, 0
    def c36, 6.28318548, -3.14159274, 1, 0.333333343
    def c37, 2, 0.00999999978, -0.00999999978, 0.00100000005
def c220, 0, 0, 0.0625, 0
    dcl_position v0
    dcl_texcoord v1
    dcl_tangent v2
    dcl_texcoord o0
    dcl_texcoord4 o1
    dcl_texcoord6 o2
    dcl_texcoord7 o3.xyz
    dcl_texcoord5 o4
    dcl_position o5
dcl_2d s0

    add r0.xy, c34.x, v1
    mul r0.xy, r0, c26
    mul r1, r0.y, c7
    mad r0, c6, r0.x, r1
    mad r0, c8, v0.x, r0
    add r0, r0, c9
    mul r1.xy, c26.z, v2
    mul r2.xy, r1, c34.y
    mov r2.z, c34.z
    add r2.xyz, -r2, c34.zzww
    mov r1.zw, c34.xyyz
    nrm r3.xyz, r1.zwxw
    nrm r1.xyz, r2
    mul r2.xyz, r3.yzxw, r1.zxyw
    mad r2.xyz, r1.yzxw, r3.zxyw, -r2
    add r4, r0.zxyz, -c5.zxyz
    add r1.w, -r4.x, c21.x
    add r5.xyz, -r4.yzww, c17
    dp3 r2.w, r5, r5
    rsq r2.w, r2.w
    rcp r2.w, r2.w
    add r2.w, r2.w, -c21.y
    rcp r3.w, c21.z
    mul_sat r2.w, r2.w, r3.w
    add r4.xw, -r4.yyzz, c18.xyzy
    mul r4.xw, r4, r4
    add r3.w, r4.w, r4.x
    rsq r3.w, r3.w
    rcp r3.w, r3.w
    rcp r4.x, c22.y
    mad r3.w, r3.w, r4.x, c22.z
    add r3.w, r3.w, -c34.x
    frc r3.w, r3.w
    mad r3.w, r3.w, c36.x, c36.y
    sincos r5.y, r3.w
    add r4.xw, -r4.yyzz, c19.xyzy
    mul r4.xw, r4, r4
    add r3.w, r4.w, r4.x
    rsq r3.w, r3.w
    rcp r3.w, r3.w
    rcp r4.x, c23.x
    mad r3.w, r3.w, r4.x, c23.y
    add r3.w, r3.w, -c34.x
    frc r3.w, r3.w
    mad r3.w, r3.w, c36.x, c36.y
    sincos r6.y, r3.w
    add r3.w, r6.y, c36.z
    mad r3.w, r3.w, -c34.x, r5.y
    add r4.xy, -r4.yzzw, c20
    mul r4.xy, r4, r4
    add r4.x, r4.y, r4.x
    rsq r4.x, r4.x
    rcp r4.x, r4.x
    rcp r4.y, c23.w
    mad r4.x, r4.x, r4.y, c24.x
    add r4.x, r4.x, -c34.x
    frc r4.x, r4.x
    mad r4.x, r4.x, c36.x, c36.y
    sincos r5.y, r4.x
    add r4.x, r5.y, c36.z
    mad r3.w, r4.x, -c34.x, r3.w
    mad r3.w, r3.w, c36.w, c36.z
    mul r3.w, r3.w, -c34.x
    pow r4.x, r3.w, c24.y
    mov r5.x, c37.x
    lrp r3.w, r2.w, r5.x, c24.z
    mul r4.z, r3.w, r4.x
    mov r4.xy, c34.z
    mad r4.xyz, r2.w, r1.w, r4
    add r0.xyz, r0, r4

// World view projection:
    mul r4, r0.y, c1
    mad r4, c0, r0.x, r4
    mad r4, c2, r0.z, r4
    mad r4, c3, r0.w, r4
    mul r1.w, r4.w, c25.z
// o5 has the output coord - driver will stereoize this:
    mad o5.xy, r1.w, c25, r4

    mad o0.zw, v1.xyxy, c27.xyxy, c27.xywz
    mad r5.xyz, r0, -c4.w, c4
    mul r6.xyz, r5.y, c15
    mad r5.xyw, c14.xyzz, r5.x, r6.xyzz
    mad r5.xyz, c16, r5.z, r5.xyww
    dp3 o2.x, r3, r5
    dp3 o2.y, r2, r5
    dp3 o2.z, r1, r5
    dp3 o3.x, r3, c16
    dp3 o3.y, r2, c16
    dp3 o3.z, r1, c16
    abs r1.x, c32.x
    if_lt -r1.x, r1.x
      add r1.xyz, r0, -c4
      dp3 r1.w, r1, r1
      rsq r1.w, r1.w
      rcp r2.x, r1.w
      add r2.x, r2.x, -c28.w
      max r2.x, r2.x, c34.z
      slt r2.y, c37.y, r1_abs.z
      add r2.z, r1.z, c37.z
      mad r2.y, r2.y, r2.z, c37.y
      mul r2.z, r2.y, -c28.y
      exp r2.z, r2.z
      add r2.z, -r2.z, c36.z
      mul r2.xy, r2, c28
      rcp r2.y, r2.y
      mul r2.y, r2.y, r2.z
      mul r2.x, r2.y, r2.x
      mul r1.xyz, r1.w, r1
      dp3 r1.x, c31, r1
      mad r1.x, r1.x, -c35.x, c35.y
      pow r2.y, r1.x, c28.z
      mov r1.xyz, c30
      add r1.xyz, -r1, c29
      mad r1.xyz, r2.y, r1, c30
      exp r1.w, -r2.x
      min r1.w, r1.w, c36.z
      max r1.w, r1.w, c29.w
      add r2.x, -r1.w, c36.z
      mul o1.xyz, r1, r2.x
      mov o1.w, r1.w
    else
      add r1.xyz, r0, -c4
      dp3 r1.x, r1, r1
      rsq r1.x, r1.x
      rcp r1.x, r1.x
      mov r2.z, c4.z
      add r3, -r2.z, c31
      sge r1.y, c37.w, r1_abs.z
      lrp r2.x, r1.y, c37.w, r1.z
      rcp r1.y, r2.x
      mul_sat r3, r1.y, r3
      add r2, -r2.z, c33
      mul_sat r2, r1.y, r2
      add r1, r1.x, -c30
      max r1, r1, c34.z
      add r2, -r3, r2
      mul r1, r1, r2_abs
      slt r2, r1, c29
      mul r1, r1, c28
      exp r3.x, r1.x
      exp r3.y, r1.y
      exp r3.z, r1.z
      exp r3.w, r1.w
      mul r1, r2, r3
      mad r2, r2, r3, -c36.z
      mul r3.xyz, r2.x, c10
      mov r3.w, r1.x
      mul r3, r1.y, r3
      mad r3.xyz, r2.y, c11, r3
      mul r3, r1.z, r3
      mad r3.xyz, r2.z, c12, r3
      mul r1, r1.w, r3
      mad o1.xyz, r2.w, c13, r1
      mov o1.w, r1.w
    endif
    mov o0.xy, v1
    mov o2.w, c36.z
    mov o4, r0
    mov o5.zw, r4


//mov o0.xyzw, c35.wwww // Ripple distortion gone, double image remains

mov r1.x, c200.y
if_eq r1.x, c35.w

texldl r1, c220.z, s0		// r1.x = separation, r1.y = convergence
add r1.y, r4.w, -r1.y		// r1.y = depth - convergence
mul r1.x, r1.x, r1.y		// r1.x = separation * (depth - convergence)
add r0.x, r0.x, -r1.x		// X += separation * (depth - convergence)
mov o4, r0

    // mov o1.xyzw, c35.wwww // Makes distant water opaque (and darker)
    // mov o2.xyzw, c35.wwww // Dunno
    // mov o3.xyzw, c35.wwww // Makes water nearly invisible, same appearance as o5
    // mov o4.xyzw, c35.wwww // Makes water opaque
    // mov o5.xyzw, c35.wwww // Removes vertex & makes water nearly invisible
endif
