//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 SampleOffsets[8];
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4x4 ScreenToShadowMatrix;
//   sampler2D ShadowDepthTexture;
//   float4 ShadowModulateColor;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   ShadowModulateColor     c0       1
//   ScreenPositionScaleBias c1       1
//   MinZ_MaxZRatio          c2       1
//   NvStereoEnabled         c3       1
//   SampleOffsets           c8       8
//   ScreenToShadowMatrix    c16      4
//   SceneColorTexture       s0       1
//   NvStereoFixTexture      s1       1
//   ShadowDepthTexture      s2       1
//

    ps_3_0
    def c4, 0.0625, 0, 1, 0.999000013
    dcl_texcoord v0.xyw
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    abs r0.x, c3.x
    if_ne c3.x, -c3.x
      texld r1, c4, s1
      add r0.y, -r1.y, v0.w
      mad r1.x, r1.x, r0.y, v0.x
      mov r1.yz, v0.xyww
    else
      mov_pp r1.xyz, c4.y
    endif
    cmp r0.xyz, -r0.x, v0.xyww, r1
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.y
    texldl r0, r0, s0
    mov r0.z, c4.z
    add r0.x, r0.z, -c2.y
    add r0.x, -r0.x, r0.w
    rcp r0.x, r0.x
    mul r0.x, r0.x, -c2.x
    rcp r0.y, v0.w
    mul r0.yw, r0.y, v0.xxzy
    mul r0.yw, r0.x, r0
    mul r1, r0.w, c17
    mad r1, c16, r0.y, r1
    mad r1, c18, r0.x, r1
    add r1, r1, c19
    rcp r0.x, r1.w
    min r2.z, r1.z, c4.w
    mad_pp r3, r1.xyxy, r0.x, c8
    mad r2.xyw, r3.xyzx, c4.zzzy, c4.yyzz
    texldp_pp r4, r2, s2
    mad r2.xyw, r3.zwzx, c4.zzzy, c4.yyzz
    texldp r3, r2, s2
    add_pp r0.y, r3.x, r4.x
    mad_pp r3, r1.xyxy, r0.x, c9
    mov_pp r2.xy, r3
    texldp r4, r2, s2
    add_pp r0.y, r0.y, r4.x
    mov_pp r2.xy, r3.zwzw
    texldp r3, r2, s2
    add_pp r0.y, r0.y, r3.x
    mad_pp r3, r1.xyxy, r0.x, c10
    mov_pp r2.xy, r3
    texldp r4, r2, s2
    add_pp r0.y, r0.y, r4.x
    mov_pp r2.xy, r3.zwzw
    texldp r3, r2, s2
    add_pp r0.y, r0.y, r3.x
    mad_pp r3, r1.xyxy, r0.x, c11
    mov_pp r2.xy, r3
    texldp r4, r2, s2
    add_pp r0.y, r0.y, r4.x
    mov_pp r2.xy, r3.zwzw
    texldp r3, r2, s2
    add_pp r0.y, r0.y, r3.x
    mad_pp r3, r1.xyxy, r0.x, c12
    mov_pp r2.xy, r3
    texldp r4, r2, s2
    add_pp r0.y, r0.y, r4.x
    mov_pp r2.xy, r3.zwzw
    texldp r3, r2, s2
    add_pp r0.y, r0.y, r3.x
    mad_pp r3, r1.xyxy, r0.x, c13
    mov_pp r2.xy, r3
    texldp r4, r2, s2
    add_pp r0.y, r0.y, r4.x
    mov_pp r2.xy, r3.zwzw
    texldp r3, r2, s2
    add_pp r0.y, r0.y, r3.x
    mad_pp r3, r1.xyxy, r0.x, c14
    mov_pp r2.xy, r3
    texldp r4, r2, s2
    add_pp r0.y, r0.y, r4.x
    mov_pp r2.xy, r3.zwzw
    texldp r3, r2, s2
    add_pp r0.y, r0.y, r3.x
    mad_pp r1, r1.xyxy, r0.x, c15
    mov_pp r2.xy, r1
    texldp r3, r2, s2
    add_pp r0.x, r0.y, r3.x
    mov_pp r2.xy, r1.zwzw
    texldp r1, r2, s2
    add_pp r0.x, r0.x, r1.x
    mul_pp r0.x, r0.x, c4.x
    mul r0.x, r0.x, r0.x
    add r1, r0.z, -c0
    mad oC0, r0.x, r1, c0

// approximately 91 instruction slots used (19 texture, 72 arithmetic)
