//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 FalloffParameters;
//   float4 LightPosition;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4x4 ScreenToShadowMatrix;
//   float4x4 ScreenToWorld;
//   float3 ShadowBufferSizeAndSoftTransitionScale;
//   sampler2D ShadowDepthTexture;
//   float4 ShadowModulateColor;
//   float2 ShadowTexelSize;
//   float2 SpotAngles;
//   float3 SpotDirection;
//
//
// Registers:
//
//   Name                                   Reg   Size
//   -------------------------------------- ----- ----
//   ShadowModulateColor                    c0       1
//   ScreenPositionScaleBias                c1       1
//   MinZ_MaxZRatio                         c2       1
//   NvStereoEnabled                        c3       1
//   ScreenToWorld                          c8       4
//   ScreenToShadowMatrix                   c12      4
//   LightPosition                          c16      1
//   FalloffParameters                      c17      1
//   SpotDirection                          c18      1
//   SpotAngles                             c19      1
//   ShadowBufferSizeAndSoftTransitionScale c20      1
//   ShadowTexelSize                        c21      1
//   SceneColorTexture                      s0       1
//   NvStereoFixTexture                     s1       1
//   ShadowDepthTexture                     s2       1
//

    ps_3_0
    def c4, 0.0625, 0, 1, -1
    def c5, -0.999000013, 1, 0, 2
    def c6, 3, 0, 1, 2
    def c7, 0.111110002, 0, 0, 0
  def c200, 0.5, 0, 0.0625, 0
  dcl_2d s13
    dcl_texcoord v0.xyw
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    abs r0.x, c3.x
    if_ne c3.x, -c3.x
      texld r1, c4, s1
      add r0.y, -r1.y, v0.w
      mad r1.x, r1.x, r0.y, v0.x
      mov r1.yz, v0.xyww
    else
      mov r1.xyz, c4.y
        endif
		   mov r16.xyw, v0
    texldl r11, c200.z, s13
    add r11.y, r16.w, -r11.y
    mul r11.x, r11.x, r11.y
    add r16.x, r16.x, r11.x
    cmp r0.xyz, -r0.x, r16.xyww, r1
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.y
    texldl r0, r0, s0
    mov r1.zw, c4
    add r0.x, r1.z, -c2.y
    add r0.x, -r0.x, r0.w
    rcp r0.x, r0.x
    mul r0.x, r0.x, -c2.x
    rcp r0.y, r16.w
    mul r0.yz, r0.y, r16.xxyw
    mul r0.yz, r0.x, r0
    mul r2, r0.z, c13
  texldl r16, c200.z, s13
  add r16.y, r0.x, -r16.y
  mul r16.x, r16.x, r16.y
  add r0.y, r0.y, -r16.x
    mad r2, c12, r0.y, r2
    mad r2, c14, r0.x, r2
    add r2, r2, c15
    rcp r0.w, r2.w
    mul r1.xy, r0.w, r2
    mul r2.xy, r1, c20
    frc r2.xy, r2
    mad r1.xy, r1, c20, r1.w
    add r1.xy, -r2, r1
    mul r3.xy, r1, c21
    mov r3.zw, c4.y
    texldl r3, r3, s2
    max r0.w, c5.x, -r2.z
    add r2.z, r0.w, r3.x
    mad_sat r3.x, r2.z, c20.z, r1.z
    add r4, r1.xyxy, c5.yzwz
    mul r4, r4, c21.xyxy
    mul r5, r4.xyxx, c4.zzyy
    texldl r5, r5, s2
    add r2.z, r0.w, r5.x
    mad_sat r5.x, r2.z, c20.z, r1.z
    mul r4, r4.zwxx, c4.zzyy
    texldl r4, r4, s2
    add r2.z, r0.w, r4.x
    mad_sat r4.x, r2.z, c20.z, r1.z
    add r6, r1.xyxy, c6.xyyz
    mul r6, r6, c21.xyxy
    mul r7, r6.xyxx, c4.zzyy
    texldl r7, r7, s2
    add r2.z, r0.w, r7.x
    mad_sat r7.x, r2.z, c20.z, r1.z
    mul r6, r6.zwxx, c4.zzyy
    texldl r6, r6, s2
    add r2.z, r0.w, r6.x
    mad_sat r3.y, r2.z, c20.z, r1.z
    add r6, r1.xyxy, c5.yywy
    mul r6, r6, c21.xyxy
    mul r8, r6.xyxx, c4.zzyy
    texldl r8, r8, s2
    add r2.z, r0.w, r8.x
    mad_sat r5.y, r2.z, c20.z, r1.z
    mul r6, r6.zwxx, c4.zzyy
    texldl r6, r6, s2
    add r2.z, r0.w, r6.x
    mad_sat r4.y, r2.z, c20.z, r1.z
    add r6, r1.xyxy, c6.xzyw
    mul r6, r6, c21.xyxy
    mul r8, r6.xyxx, c4.zzyy
    texldl r8, r8, s2
    add r2.z, r0.w, r8.x
    mad_sat r7.y, r2.z, c20.z, r1.z
    mul r6, r6.zwxx, c4.zzyy
    texldl r6, r6, s2
    add r2.z, r0.w, r6.x
    mad_sat r3.z, r2.z, c20.z, r1.z
    add r6, r1.xyxy, c5.ywww
    mul r6, r6, c21.xyxy
    mul r8, r6.xyxx, c4.zzyy
    texldl r8, r8, s2
    add r2.z, r0.w, r8.x
    mad_sat r5.z, r2.z, c20.z, r1.z
    mul r6, r6.zwxx, c4.zzyy
    texldl r6, r6, s2
    add r2.z, r0.w, r6.x
    mad_sat r4.z, r2.z, c20.z, r1.z
    add r6, r1.xyxy, c6.xwyx
    mul r6, r6, c21.xyxy
    mul r8, r6.xyxx, c4.zzyy
    texldl r8, r8, s2
    add r2.z, r0.w, r8.x
    mad_sat r7.z, r2.z, c20.z, r1.z
    mul r6, r6.zwxx, c4.zzyy
    texldl r6, r6, s2
    add r2.z, r0.w, r6.x
    mad_sat r3.w, r2.z, c20.z, r1.z
    add r6, r1.xyxy, c6.zxwx
    mul r6, r6, c21.xyxy
    mul r8, r6.xyxx, c4.zzyy
    texldl r8, r8, s2
    add r2.z, r0.w, r8.x
    mad_sat r5.w, r2.z, c20.z, r1.z
    mul r6, r6.zwxx, c4.zzyy
    texldl r6, r6, s2
    add r2.z, r0.w, r6.x
    mad_sat r4.w, r2.z, c20.z, r1.z
    add r1.xy, r1, c6.x
    mul r6.xy, r1, c21
    mov r6.zw, c4.y
    texldl r6, r6, s2
    add r0.w, r0.w, r6.x
    mad_sat r7.w, r0.w, c20.z, r1.z
    lrp r6, r2.x, r5.xyyz, r3.xyyz
    lrp r8, r2.x, r4.xyyz, r5.xyyz
    lrp r9, r2.x, r7.xyyz, r4.xyyz
    lrp r1.xy, r2.y, r6.ywzw, r6.xzzw
    lrp r3.xy, r2.y, r8.ywzw, r8.xzzw
    lrp r4.xy, r2.y, r9.ywzw, r9.xzzw
    lrp r6.xy, r2.x, r5.zwzw, r3.zwzw
    lrp r0.w, r2.y, r6.y, r6.x
    lrp r3.zw, r2.x, r4, r5
    lrp r1.z, r2.y, r3.w, r3.z
    lrp r3.zw, r2.x, r7, r4
    lrp r4.z, r2.y, r3.w, r3.z
    add r1.x, r1.x, r3.x
    add r1.x, r4.x, r1.x
    add r1.x, r1.y, r1.x
    add r1.x, r3.y, r1.x
    add r1.x, r4.y, r1.x
    add r0.w, r0.w, r1.x
    add r0.w, r1.z, r0.w
    add r0.w, r4.z, r0.w
    mul_sat_pp r0.w, r0.w, c7.x
    mul r1.xyz, r0.z, c9
    mad r1.xyz, c8, r0.y, r1
    mad r0.xyz, c10, r0.x, r1
    add r0.xyz, r0, c11
    add r0.xyz, -r0, c16
    mul r0.xyz, r0, c16.w
    dp3 r1.x, r0, r0
    rsq r1.x, r1.x
    rcp r1.y, r1.x
    mad r1.y, r1.y, c17.y, c17.z
    max r2.x, r1.y, c4.y
    mad r1.y, r2.x, -r2.x, c4.z
    max r2.x, r1.y, c4.y
    pow_pp r1.y, r2.x, c17.x
    mul r0.xyz, r0, r1.x
    dp3 r0.x, r0, -c18
    add r0.x, r0.x, -c19.x
    mul_sat r0.x, r0.x, c19.y
    mul r0.x, r0.x, r0.x
    mul_pp r0.x, r0.x, r1.y
    add r1, r1.w, c0
    mad r1, r0.x, r1, c4.z
    mul r0.x, r0.w, r0.w
    add r2, -r1, c4.z
    mad oC0, r0.x, r2, r1

// approximately 182 instruction slots used (35 texture, 147 arithmetic)


