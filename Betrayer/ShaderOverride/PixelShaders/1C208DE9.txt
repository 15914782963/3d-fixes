// Lake water pixel shader 2/2 - reflections

//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 AmbientColorAndSkyFactor;
//   float3 CameraWorldPos;
//   float4 DiffuseOverrideParameter;
//   float4 LightMapScale[2];
//   sampler2D LightMapTextures[2];
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   sampler2D PixelTexture2D_4;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_2;
//   float4 UniformPixelScalars_3;
//   float4 UniformPixelScalars_4;
//   float4 UniformPixelScalars_5;
//   float4 UniformPixelScalars_6;
//   float4 UniformPixelScalars_7;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_3;
//   float4 UniformPixelVector_4;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_7;
//   float4 UniformPixelVector_8;
//   float4x4 ViewProjectionMatrix;
//   float4 WindDirectionAndSpeed;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   CameraWorldPos           c0       1
//   ScreenPositionScaleBias  c1       1
//   DiffuseOverrideParameter c4       1
//   ViewProjectionMatrix     c8       4
//   LightMapScale            c12      2
//   WindDirectionAndSpeed    c14      1
//   UniformPixelVector_0     c15      1
//   UniformPixelVector_1     c16      1
//   UniformPixelVector_3     c17      1
//   UniformPixelVector_4     c18      1
//   UniformPixelVector_5     c19      1
//   UniformPixelVector_7     c20      1
//   UniformPixelVector_8     c21      1
//   UniformPixelScalars_1    c22      1
//   UniformPixelScalars_2    c23      1
//   UniformPixelScalars_3    c24      1
//   UniformPixelScalars_4    c25      1
//   UniformPixelScalars_5    c26      1
//   UniformPixelScalars_6    c27      1
//   UniformPixelScalars_7    c28      1
//   AmbientColorAndSkyFactor c29      1
//   LightMapTextures         s0       2
//   SceneColorTexture        s2       1
//   PixelTexture2D_0         s3       1
//   PixelTexture2D_1         s4       1
//   PixelTexture2D_2         s5       1
//   PixelTexture2D_3         s6       1
//   PixelTexture2D_4         s7       1
//

    ps_3_0
    def c2, 0.0208350997, -0.0851330012, 0.180141002, -0.330299497
    def c3, 0.999866009, 0, 1, 3.14159274
    def c5, -2, 1.57079637, -44, -0.5
    def c6, 1, -1, 2, 5
    def c7, 0.159154937, 0.5, 6.28318548, -3.14159274
    def c30, -9.99999997e-007, 0.800000012, 9.99999997e-007, 0
    def c31, 0.816496611, 0.577350259, 0, 0
    def c32, -0.707106769, -0.408248305, 0.577350259, 0.707106769
def c220, 0, 1, 0.0625, 0
    dcl_texcoord v0
    dcl_texcoord1 v1.xyz
    dcl_color v2.xyz
    dcl_color1 v3.xyz
    dcl_texcoord4 v4
    dcl_texcoord5 v5	// Suspect passed from vertex shader - projected in this shader
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
dcl_2d s13

    abs r0.xy, c14
    add r0.zw, -r0.xyxy, r0.xyyx
    cmp r0.xy, r0.z, r0, r0.yxzw
    cmp r0.z, r0.w, c3.y, c3.z
    rcp r0.y, r0.y
    mul r0.x, r0.y, r0.x
    mul r0.y, r0.x, r0.x
    mad r0.w, r0.y, c2.x, c2.y
    mad r0.w, r0.y, r0.w, c2.z
    mad r0.w, r0.y, r0.w, c2.w
    mad r0.y, r0.y, r0.w, c3.x
    mul r0.x, r0.y, r0.x
    mad r0.y, r0.x, c5.x, c5.y
    mad r0.x, r0.y, r0.z, r0.x
    mov r0.yzw, c3
    cmp r0.w, c14.x, -r0.y, -r0.w
    add r0.x, r0.w, r0.x
    add r0.w, r0.x, r0.x
    add r1.x, -c14.x, c14.y
    cmp r1.xy, r1.x, c14, c14.yxzw
    cmp r1.y, r1.y, c3.z, c3.y
    cmp r1.x, r1.x, c3.y, r1.y
    mad r0.x, r1.x, -r0.w, r0.x
    add r0.x, -r0.x, c5.z
    mad r0.x, r0.x, c7.x, c7.y
    frc r0.x, r0.x
    mad r0.x, r0.x, c7.z, c7.w
    sincos r1.xy, r0.x
    mul r0.xw, r1.xyzy, c6.xyzy

// Camera world pos
    add r2.xyz, c0, v5

    rcp r1.z, c22.x
    mul r2.xyz, r1.z, r2
    dp3 r3.x, r2, v1
    dp3 r3.y, r2, v2
    add r1.zw, r3.xyxy, c5.w
    dp2add r2.x, r0.xwzw, r1.zwzw, c3.y
    dp2add r2.y, r1.yxzw, r1.zwzw, c3.y
    add r0.xw, r2.xyzy, c16.xyzy
    add r0.xw, r0, -c5.w
    texld r1, v0, s3
    mad r1.xy, r1, c6.z, c6.y
    mad r1.zw, c22.w, r1.xyxy, r0.xyxw
    mad r0.xw, c23.y, r1.xyzy, r0
    texld r2, r0.xwzw, s4
    texld r3, r1.zwzw, s4
    lrp r0.xw, c24.x, r2.xyzy, r3.xyzy
    dp3 r1.z, c14, c14
    rsq r1.z, r1.z
    rcp r1.z, r1.z
    add r1.z, r1.z, -c24.y
    max r2.x, r1.z, c3.y
    min r1.z, r2.x, c6.w
    mul r1.z, r1.z, c24.z
    mul r2.xy, r0.xwzw, r1.z
    rcp r0.x, c24.w
    mul r0.xw, r0.x, v0.xyzy
    mad r1.zw, c25.z, r1.xyxy, r0.xyxw
    mad r0.xw, c26.x, r1.xyzy, r0
    add r1.x, r1_abs.y, r1_abs.x
    texld r3, r0.xwzw, s5
    texld r4, r1.zwzw, s5
    dp2add r0.x, r4, -r4, c3.z
    rsq r0.x, r0.x
    rcp r4.z, r0.x
    dp2add r0.x, r3, -r3, c3.z
    rsq r0.x, r0.x
    rcp r3.z, r0.x
    lrp r1.yzw, c26.w, r3.xxyz, r4.xxyz
    mad r0.xyw, r1.yzzw, c17.xyzz, -r0.yyzz
    add r1.y, r1.x, c30.x
    pow_sat r2.w, r1.x, c27.y
    cmp r1.x, r1.y, r2.w, c3.y
    mad r0.xyw, r1.x, r0, c3.yyzz
    add r1.xy, -c18, v0
    mul r1.xy, r1, c19
    texld r1, r1, s6
    dp2add r1.w, r1, -r1, c3.z
    rsq r1.w, r1.w
    rcp r1.z, r1.w
    mad r0.xyw, r1.xyzz, c20.xyzz, r0
    mov r2.z, c3.y
    add r0.xyw, r0, r2.xyzz
    nrm_pp r1.xyz, r0.xyww
    dp2add_sat_pp r2.x, r1.yzzw, c31, c31.z
    dp3_sat_pp r2.y, r1, c32
    dp3_sat_pp r2.z, r1.yzxw, c32.yzww
    mul_pp r0.xyw, r2.xyzz, r2.xyzz
    texld r2, v0.zwzw, s1
    mul_pp r2.xyz, r2, c13
    dp3_pp r0.x, r2, r0.xyww
    texld r2, v0.zwzw, s0
    mul_pp r2.xyz, r2, c12
    mul_pp r0.xyw, r0.x, r2.xyzz

// View projection matrix
    mul r2.xyz, c9.xyww, v5.y
    mad r2.xyz, c8.xyww, v5.x, r2
    mad r2.xyz, c10.xyww, v5.z, r2
    mad r2.xyz, c11.xyww, v5.w, r2

// Little bit tricky - I had to use r2.z as the depth here to get the correct
// adjustment. I noticed it was used below in the rcp and figured it might have
// something to do with the reflection. Paydirt - the reflections are perfect!

texldl r10, c220.z, s13		// r10.x = separation, r10.y = convergence
add r10.y, r2.z, -r10.y		// r10.y = depth - convergence
mul r10.x, r10.x, r10.y		// r10.x = separation * (depth - convergence)
add r2.x, r2.x, r10.x		// X = X + separation * (depth - convergence)

    rcp r1.w, r2.z
    mul r2.xy, r1.w, r2
    mad r2.xy, r2, c1, c1.wzzw
    mad r2.xy, c27.w, r1, r2
    texld r3, r2, s7
    texld r2, r2, s2
    mul r2.xyz, r2, c21
    mul r3.xyz, r3, c28.x
    nrm r4.xyz, -v5
    dp3 r5.x, r4, v1
    dp3 r5.y, r4, v2
    dp3 r5.z, r4, v3
    dp3 r1.x, r1, r5
    add r1.y, -r1.x, c3.z
    cmp r1.x, r1.x, r1_abs.y, c3.z
    pow r2.w, r1.x, c30.y
    add r1.x, r1.x, c30.x
    mul r1.yzw, r3.xxyz, r2.w
    cmp r1.xyz, r1.x, r1_abs.yzww, c3.y
    max r3.xyz, r1, c30.z
    log r1.x, r3.x
    log r1.y, r3.y
    log r1.z, r3.z
    mul r1.xyz, r1, c28.y
    exp r3.x, r1.x
    exp r3.y, r1.y
    exp r3.z, r1.z
    add_pp r1.xyz, r3, c15
    add r3.xyz, r0.z, -c15
    mul_pp r2.xyz, r2, r3
    mad_pp r2.xyz, r2, c4.w, c4
    mad_pp r0.xyz, r2, r0.xyww, r1
    mad_pp r0.xyz, r2, c29, r0
    mad_pp oC0.xyz, r0, v4.w, v4
    mov oC0.w, c3.y

// approximately 153 instruction slots used (10 texture, 143 arithmetic)
