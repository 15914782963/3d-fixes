// asmtool.py -i --fix-fcprimal-reflection --only-autofixed -fq 40be17666bb0679e-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//   using 3Dmigoto v1.2.31 on Wed Mar 02 08:06:39 2016
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4x4 InvProjectionMatrix;      // Offset:    0 Size:    64
//   float4x4 InvViewMatrix;            // Offset:   64 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  128 Size:    64 [unused]
//   float4x4 ViewMatrix;               // Offset:  192 Size:    64 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  256 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  320 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix_Previous;// Offset:  384 Size:    64 [unused]
//   float4 AmbientSHR;                 // Offset:  448 Size:    16 [unused]
//   float4 AmbientSHG;                 // Offset:  464 Size:    16 [unused]
//   float4 AmbientSHB;                 // Offset:  480 Size:    16 [unused]
//   float4 CameraDistances;            // Offset:  496 Size:    16 [unused]
//   float4 CameraNearPlaneSize;        // Offset:  512 Size:    16 [unused]
//   float4 DepthScale;                 // Offset:  528 Size:    16 [unused]
//   float4 DepthTextureScaleOffset;    // Offset:  544 Size:    16 [unused]
//   float4 FogParams;                  // Offset:  560 Size:    16
//   float4 FogSHB;                     // Offset:  576 Size:    16 [unused]
//   float4 FogSHG;                     // Offset:  592 Size:    16 [unused]
//   float4 FogSHR;                     // Offset:  608 Size:    16 [unused]
//   float4 HeightFogParams;            // Offset:  624 Size:    16
//   float4 ViewportSize;               // Offset:  640 Size:    16
//   float3 ViewPoint;                  // Offset:  656 Size:    12 [unused]
//   float3 CameraPosition;             // Offset:  672 Size:    12
//   float3 CameraPosition_Previous;    // Offset:  688 Size:    12 [unused]
//   float3 CameraPositionFractions;    // Offset:  704 Size:    12 [unused]
//   float3 CameraPositionFractions_Previous;// Offset:  720 Size:    12 [unused]
//   float3 CameraRight;                // Offset:  736 Size:    12 [unused]
//   float3 CameraUp;                   // Offset:  752 Size:    12 [unused]
//   float3 CameraDirection;            // Offset:  768 Size:    12
//   float3 EnvironmentMapColorOffset;  // Offset:  784 Size:    12 [unused]
//   float3 EnvironmentMapColorScale;   // Offset:  800 Size:    12 [unused]
//   float3 AmbientOcclusionRanges;     // Offset:  816 Size:    12 [unused]
//   float3 DepthTextureRcpSize;        // Offset:  832 Size:    12 [unused]
//   float2 MotionVectorOffsets;        // Offset:  848 Size:     8 [unused]
//   float2 DepthRangeCompression;      // Offset:  856 Size:     8 [unused]
//   float ShadowProjDepthMinValue;     // Offset:  864 Size:     4 [unused]
//   float DistanceScale;               // Offset:  868 Size:     4 [unused]
//   float WorldSpaceZOffset;           // Offset:  872 Size:     4 [unused]
//   float WorldSpaceZOffset_Previous;  // Offset:  876 Size:     4 [unused]
//   float CameraFOVDeg;                // Offset:  880 Size:     4 [unused]
//   float EffectsEmissiveEVBias;       // Offset:  884 Size:     4 [unused]
//   float ShadowCSMLastSliceIndex;     // Offset:  888 Size:     4 [unused]
//   float UseNormalization;            // Offset:  892 Size:     4
//   float FogUndergroundColorScale;    // Offset:  896 Size:     4 [unused]
//
// }
//
// cbuffer CWaterReflectionParameterProvider
// {
//
//   float4x4 WaterReflectionTransform; // Offset:    0 Size:    64
//   float4 WaterReflectionPlane;       // Offset:   64 Size:    16 [unused]
//   float4 WaterReflectionTexCoordRange;// Offset:   80 Size:    16 [unused]
//   float WaterLevelAdjustment;        // Offset:   96 Size:     4 [unused]
//
// }
//
// cbuffer CSceneTerrainSkyOcclusionAtlasPrivateData
// {
//
//   float4 SectorOcclusion_OffsetScale;// Offset:    0 Size:    16
//   float3 SectorOcclusion_DistanceFade;// Offset:   16 Size:    12
//   float2 SectorOcclusion_HeightOffsetScale;// Offset:   32 Size:     8
//
// }
//
// cbuffer CAmbientProvider
// {
//
//   float4 CascadeDistanceScales[5];   // Offset:    0 Size:    80 [unused]
//   float4 CascadeNearFarSnappedOffsetCamera[5];// Offset:   80 Size:    80 [unused]
//   float4 CascadeNearFarRcpUVSize[5]; // Offset:  160 Size:    80 [unused]
//   float4 UndergroundSHR;             // Offset:  240 Size:    16
//   float4 UndergroundSHG;             // Offset:  256 Size:    16
//   float4 UndergroundSHB;             // Offset:  272 Size:    16
//   float InvUndergroundBlendEndHeight;// Offset:  288 Size:     4
//   float IndirectLightingScale;       // Offset:  292 Size:     4 [unused]
//
// }
//
// cbuffer CWaterParameterProvider
// {
//
//   float4 BorderAlphaMask;            // Offset:    0 Size:    16 [unused]
//   float ReflectionInvSquareFadeDistance;// Offset:   16 Size:     4
//   float ReflectionSquareFadeDistance;// Offset:   20 Size:     4
//   float SunLightScale;               // Offset:   24 Size:     4
//
// }
//
// cbuffer CWaterWaveParameterProvider
// {
//
//   float4 WaterWave_CameraCenter_FrontVector;// Offset:    0 Size:    16
//   float4 WaterWave_CameraRightVector_;// Offset:   16 Size:    16
//   float4 WaterWave_CameraTanFOVx_2_Near_Far;// Offset:   32 Size:    16
//
// }
//
// cbuffer Water
// {
//
//   float4 Extinctions;                // Offset:    0 Size:    16
//   float4 MaterialPickingID;          // Offset:   16 Size:    16 [unused]
//   float4 RefractionWaveInfo;         // Offset:   32 Size:    16 [unused]
//   float4 Specular;                   // Offset:   48 Size:    16
//   float4 WaterColor;                 // Offset:   64 Size:    16
//   float4 WaterColorModulation;       // Offset:   80 Size:    16
//   float2 BaseTiling;                 // Offset:   96 Size:     8 [unused]
//   float2 DiffuseTiling;              // Offset:  104 Size:     8 [unused]
//   float2 Dir1;                       // Offset:  112 Size:     8 [unused]
//   float2 Dir2;                       // Offset:  120 Size:     8 [unused]
//   float2 Dir3;                       // Offset:  128 Size:     8 [unused]
//   float2 Tiling1;                    // Offset:  136 Size:     8 [unused]
//   float2 Tiling2;                    // Offset:  144 Size:     8 [unused]
//   float2 Tiling3;                    // Offset:  152 Size:     8 [unused]
//   float CausticsIntensity;           // Offset:  160 Size:     4
//   float CausticsScale;               // Offset:  164 Size:     4
//   float DiffuseSpeedFactor;          // Offset:  168 Size:     4 [unused]
//   float NormalModifier;              // Offset:  172 Size:     4
//   float NormalOffsetScale;           // Offset:  176 Size:     4
//   float NormalTexture3Blend;         // Offset:  180 Size:     4
//   float ReflectionAnisotropicDistanceOffset;// Offset:  184 Size:     4 [unused]
//   float ReflectionAnisotropicDistanceScale;// Offset:  188 Size:     4 [unused]
//   float ReflectionColorOffset;       // Offset:  192 Size:     4
//   float ReflectionColorScale;        // Offset:  196 Size:     4
//   float ReflectionNormalOffsetScale; // Offset:  200 Size:     4
//
// }
//
// cbuffer CVolumetricFogBlendedProvider
// {
//
//   float4 VFDepthDistribution;        // Offset:    0 Size:    16
//   float4 VFDepthParams;              // Offset:   16 Size:    16 [unused]
//   int4 VFCellParams;                 // Offset:   32 Size:    16
//
// }
//
// cbuffer CTileLightingBlendedParameterProvider
// {
//
//   float4 CSMSlice0_0;                // Offset:    0 Size:    16 [unused]
//   float4 CSMSlice0_1;                // Offset:   16 Size:    16 [unused]
//   float4 CSMSlice0_2;                // Offset:   32 Size:    16 [unused]
//   float4 CSMSlice1_0;                // Offset:   48 Size:    16 [unused]
//   float4 CSMSlice1_1;                // Offset:   64 Size:    16 [unused]
//   float4 CSMSlice1_2;                // Offset:   80 Size:    16 [unused]
//   float4 CSMSlice2_0;                // Offset:   96 Size:    16 [unused]
//   float4 CSMSlice2_1;                // Offset:  112 Size:    16 [unused]
//   float4 CSMSlice2_2;                // Offset:  128 Size:    16 [unused]
//   float4 CSMSliceFade;               // Offset:  144 Size:    16 [unused]
//   float4 ShadowMapSize;              // Offset:  160 Size:    16 [unused]
//   float4 SunColor;                   // Offset:  176 Size:    16
//   float4 SunDirection;               // Offset:  192 Size:    16
//   int2 NumTiles;                     // Offset:  208 Size:     8 [unused]
//   int LightCount;                    // Offset:  216 Size:     4 [unused]
//   int ParticlesSmallBufferFactor;    // Offset:  220 Size:     4 [unused]
//
// }
//
// Resource bind info for ExposureBuffer
// {
//
//   float4 $Element;                   // Offset:    0 Size:    16
//
// }
//
// Resource bind info for SHOccGlobalProbe
// {
//
//   float4 $Element;                   // Offset:    0 Size:    16
//
// }
//
// Resource bind info for SkyParamBuffer
// {
//
//   struct ComputedSkyParameters
//   {
//       
//       float r[9];                    // Offset:    0
//       float g[9];                    // Offset:   36
//       float b[9];                    // Offset:   72
//       float3 sunColor;               // Offset:  108
//       float3 moonColor;              // Offset:  120
//
//   } $Element;                        // Offset:    0 Size:   132
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// DepthVPSampler__SampObj__         sampler      NA          NA    0        1
// EnvironmentMapTexture__SampObj__    sampler      NA          NA    1        1
// EnvironmentMapBRDFTexture__SampObj__    sampler      NA          NA    2        1
// SectorHemiMapSamplerStateLinear    sampler      NA          NA    3        1
// WaterWaveTexture__SampObj__       sampler      NA          NA    4        1
// NormalTexture__SampObj__          sampler      NA          NA    5        1
// NormalTexture3__SampObj__         sampler      NA          NA    6        1
// CausticsTexture__SampObj__        sampler      NA          NA    7        1
// DiffuseTexture__SampObj__         sampler      NA          NA    8        1
// ColorClamp3D                      sampler      NA          NA    9        1
// ReflectionRealTexture__SampObj__    sampler      NA          NA   10        1
// DepthVPSampler__TexObj__          texture  float4          2d    0        1
// EnvironmentMapTexture__TexObj__    texture  float4        cube    1        1
// EnvironmentMapBRDFTexture__TexObj__    texture  float4          2d    2        1
// ExposureBuffer                    texture  struct         r/o    3        1
// SHOccGlobalProbe                  texture  struct         r/o    4        1
// SkyParamBuffer                    texture  struct         r/o    5        1
// SectorOcclusion_HeightTexture__TexObj__    texture  float4          2d    6        1
// WaterWaveTexture__TexObj__        texture  float4          2d    7        1
// NormalTexture__TexObj__           texture  float4          2d    8        1
// NormalTexture3__TexObj__          texture  float4          2d    9        1
// CausticsTexture__TexObj__         texture  float4          2d   10        1
// DiffuseTexture__TexObj__          texture  float4          2d   11        1
// VFVolumeTextureRGB                texture  float4          3d   12        1
// VFVolumeTextureAlpha              texture  float4          3d   13        1
// ReflectionRealTexture__TexObj__    texture  float4          2d   14        1
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CWaterReflectionParameterProvider    cbuffer      NA          NA    1        1
// CSceneTerrainSkyOcclusionAtlasPrivateData    cbuffer      NA          NA    2        1
// CAmbientProvider                  cbuffer      NA          NA    3        1
// CWaterParameterProvider           cbuffer      NA          NA    4        1
// CWaterWaveParameterProvider       cbuffer      NA          NA    5        1
// Water                             cbuffer      NA          NA    6        1
// CVolumetricFogBlendedProvider     cbuffer      NA          NA    7        1
// CTileLightingBlendedParameterProvider    cbuffer      NA          NA    8        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_IsFrontFace           0   x           8    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[56], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[19], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[3], immediateIndexed
dcl_constantbuffer cb6[13], immediateIndexed
dcl_constantbuffer cb7[3], immediateIndexed
dcl_constantbuffer cb8[13], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_structured t3, 16 
dcl_resource_structured t4, 16 
dcl_resource_structured t5, 132 
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture3d (float,float,float,float) t12
dcl_resource_texture3d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_input_ps_siv linear noperspective centroid v0.xy, position
dcl_input_ps linear v1.xyzw
dcl_input_ps linear centroid v2.xyzw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyzw
dcl_output o0.xyzw
dcl_temps 17

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125
// stereo2mono copy of t14:
dcl_resource_texture2d (float,float,float,float) t100

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw

dp3 r0.x, v3.xyzx, v3.xyzx
sqrt r0.x, r0.x
add r0.yzw, -v4.xxzy, cb0[42].xxzy
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r1.yzw, r0.yyzw, r1.xxxx
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.yxyy, t8.xywz, s5
mad r2.yz, r2.zzyz, l(0.000000, 2.007874, 2.007874, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
mul r2.yw, r2.yyyz, cb6[10].wwww
dp2 r3.x, r2.ywyy, r2.ywyy
min r3.x, r3.x, l(1.000000)
mad r3.x, -r3.x, l(0.999000), l(1.000000)
sqrt r2.z, r3.x
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.wzww, t8.xywz, s5
mul r3.x, r3.x, l(0.500000)
mad r3.yz, r3.zzyz, l(0.000000, 2.007874, 2.007874, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
mul r3.yw, r3.yyyz, cb6[10].wwww
dp2 r4.x, r3.ywyy, r3.ywyy
min r4.x, r4.x, l(1.000000)
mad r4.x, -r4.x, l(0.999000), l(1.000000)
sqrt r3.z, r4.x
sample_indexable(texture2d)(float,float,float,float) r4.xyz, v7.yxyy, t9.xywz, s6
mad r4.yz, r4.zzyz, l(0.000000, 2.007874, 2.007874, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
mul r4.yw, r4.yyyz, cb6[10].wwww
dp2 r5.x, r4.ywyy, r4.ywyy
min r5.x, r5.x, l(1.000000)
mad r5.x, -r5.x, l(0.999000), l(1.000000)
sqrt r4.z, r5.x
add r2.yzw, r2.yyzw, r3.yyzw
add r3.yzw, -r2.yyzw, r4.yyzw
mad r2.yzw, cb6[11].yyyy, r3.yyzw, r2.yyzw
dp3 r3.y, r2.yzwy, r2.yzwy
rsq r3.y, r3.y
mad r2.x, r2.x, l(0.500000), r3.x
add r3.x, -r2.x, r4.x
mad r2.x, cb6[11].y, r3.x, r2.x
mov_sat r3.x, cb6[10].w
add r2.x, r2.x, l(-1.000000)
mad r2.x, r3.x, r2.x, l(1.000000)
mul r2.x, r2.x, cb6[3].x
mul r4.x, r0.x, l(0.010000)
add r3.xz, v4.xxyx, -cb5[0].xxyx
dp2 r3.x, cb5[0].zwzz, r3.xzxx
mul r3.z, cb5[2].z, cb5[2].y
div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.x
mad r3.x, r3.z, r3.x, -cb5[2].z
add r3.w, -cb5[2].z, cb5[2].y
div r3.x, r3.x, r3.w
mov r5.x, -r4.x
mov r5.y, l(0)
add r5.xy, r5.xyxx, v4.xyxx
add r5.xy, r5.xyxx, -cb5[0].xyxx
dp2 r4.w, cb5[0].zwzz, r5.xyxx
dp2 r5.x, cb5[1].xyxx, r5.xyxx
div r5.y, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
mad r5.y, r3.z, r5.y, -cb5[2].z
div r6.y, r5.y, r3.w
mul r4.w, r4.w, cb5[2].x
div r4.w, r5.x, r4.w
mad r6.x, r4.w, l(0.500000), l(0.500000)
mov r4.y, l(0)
add r5.xyzw, r4.xyyx, v4.xyxy
add r5.xyzw, r5.xyzw, -cb5[0].xyxy
dp2 r4.w, cb5[0].zwzz, r5.xyxx
dp2 r5.x, cb5[1].xyxx, r5.xyxx
div r5.y, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
mad r5.y, r3.z, r5.y, -cb5[2].z
div r7.y, r5.y, r3.w
mul r4.w, r4.w, cb5[2].x
div r4.w, r5.x, r4.w
mad r7.x, r4.w, l(0.500000), l(0.500000)
mov r4.z, -r4.x
add r4.yz, r4.yyzy, v4.xxyx
add r4.yz, r4.yyzy, -cb5[0].xxyx
dp2 r4.w, cb5[0].zwzz, r4.yzyy
dp2 r4.y, cb5[1].xyxx, r4.yzyy
div r4.z, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
mad r4.z, r3.z, r4.z, -cb5[2].z
div r5.y, r4.z, r3.w
mul r4.z, r4.w, cb5[2].x
div r4.y, r4.y, r4.z
mad r5.x, r4.y, l(0.500000), l(0.500000)
dp2 r4.y, cb5[0].zwzz, r5.zwzz
dp2 r4.z, cb5[1].xyxx, r5.zwzz
div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.y
mad r3.z, r3.z, r4.w, -cb5[2].z
div r8.y, r3.z, r3.w
mul r3.z, r4.y, cb5[2].x
div r3.z, r4.z, r3.z
mad r8.x, r3.z, l(0.500000), l(0.500000)
sample_indexable(texture2d)(float,float,float,float) r3.z, r6.xyxx, t7.yzxw, s4
sample_indexable(texture2d)(float,float,float,float) r3.w, r7.xyxx, t7.yzwx, s4
sample_indexable(texture2d)(float,float,float,float) r4.y, r5.xyxx, t7.yxzw, s4
sample_indexable(texture2d)(float,float,float,float) r4.z, r8.xyxx, t7.yzxw, s4
add r5.w, -r3.z, r3.w
add r5.y, -r4.y, r4.z
div r3.zw, r5.yyyw, r4.xxxx
add r3.x, r3.x, l(-0.900000)
mul_sat r3.x, r3.x, l(10.000000)
mad r3.x, r3.x, l(-0.050000), l(0.050000)
mul r4.yw, r3.xxxx, r3.zzzw
mov r4.z, l(0)
mad r2.yzw, r2.yyzw, r3.yyyy, r4.yyzw
dp3 r3.x, r2.yzwy, r2.yzwy
rsq r3.x, r3.x
mul r3.yzw, r2.yyzw, r3.xxxx
mad r2.yz, r3.wwyw, cb6[11].xxxx, v7.zzwz
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.yzyy, t11.xyzw, s8
mul r2.y, |cb0[48].z|, l(0.100000)
dp3 r2.z, r3.wzyw, r1.yzwy
mov_sat r2.w, r2.z
mad r5.x, r2.w, l(0.968750), l(0.015625)
mad r5.y, r2.x, l(0.968750), l(0.015625)
sample_l_indexable(texture2d)(float,float,float,float) r5.xy, r5.xyxx, t2.xyzw, s2, l(0.000000)
mad_sat r2.y, r2.y, r5.y, r5.x
mov r3.x, l(1.000000)
mul r5.xyzw, r3.xyzw, l(0.282094806, 0.488602519, 0.488602519, 0.488602519)
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r6.xyzw, l(0), l(0), t4.xyzw
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r7.xyzw, l(1), l(0), t4.xyzw
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r8.xyzw, l(2), l(0), t4.xyzw
dp4 r6.x, r6.xyzw, r5.xyzw
dp4 r6.y, r7.xyzw, r5.xyzw
dp4 r6.z, r8.xyzw, r5.xyzw
max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r7.xyzw, l(0), l(108), t5.yzxw
dp3 r3.x, r7.zxyz, l(0.212600, 0.715200, 0.072200, 0.000000)
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r7.xyz, l(0), l(120), t5.yzxx
dp3 r6.w, r7.wxyw, l(0.212600, 0.715200, 0.072200, 0.000000)
max r3.x, r3.x, r6.w
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r6.w, l(0), l(0), t5.xxxx
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r7.w, l(0), l(36), t5.xxxx
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r8.x, l(0), l(72), t5.xxxx
max r7.w, r7.w, r8.x
max r6.w, r6.w, r7.w
add r3.x, r3.x, r6.w
mul r8.xyz, r3.xxxx, r6.xyzx
dp4 r9.x, cb3[15].xyzw, r5.xyzw
dp4 r9.y, cb3[16].xyzw, r5.xyzw
dp4 r9.z, cb3[17].xyzw, r5.xyzw
max r5.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r9.xy, v4.yxyy, cb2[0].yxyy, cb2[0].wzww
sample_l_indexable(texture2d)(float,float,float,float) r5.w, r9.xyxx, t6.xzwy, s3, l(0.000000)
mad r5.w, r5.w, cb2[2].x, cb2[2].y
add r5.w, -r5.w, v4.z
mul_sat r5.w, -r5.w, cb3[18].x
sqrt r5.w, r5.w
add r9.xy, v4.xyxx, -cb0[42].xyxx
dp2 r7.w, r9.xyxx, r9.xyxx
mad r8.w, cb2[1].x, r7.w, cb2[1].y
mul_sat r8.w, r8.w, l(3.000000)
mul r5.w, r5.w, r8.w
mad r5.xyz, -r6.xyzx, r3.xxxx, r5.xyzx
mad r5.xyz, r5.wwww, r5.xyzx, r8.xyzx
div r8.xy, v6.xyxx, v6.zzzz
sample_l_indexable(texture2d)(float,float,float,float) r8.z, r8.xyxx, t0.yzxw, s0, l(0.000000)
mov r8.w, l(1.000000)
dp4 r3.x, r8.xyzw, cb0[2].xyzw
dp4 r5.w, r8.xyzw, cb0[3].xyzw
div r3.x, -r3.x, r5.w
mul r3.x, r0.x, -r3.x
div r3.x, r3.x, v3.z
mad r6.xyz, -r2.xxxx, l(0.990000, 5.000000, 6.000000, 0.000000), l(1.000000, 5.000000, 6.000000, 0.000000)
mul r2.x, r6.x, r6.x
max r2.x, r2.x, l(0.001000)
mul r8.xyz, cb4[1].zzzz, cb8[11].xyzx
mad r0.yzw, r0.yywz, r1.xxxx, -cb8[12].xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
dp3 r1.x, r0.ywzy, r1.yzwy
add r1.x, -r1.x, l(1.000000)
mul r5.w, r1.x, r1.x
mul r5.w, r5.w, r5.w
mul r1.x, r1.x, r5.w
mad r1.x, r1.x, l(0.980000), l(0.020000)
dp3_sat r5.w, -cb8[12].yzxy, r3.yzwy
mul r6.x, r2.w, r2.w
mul r8.w, r2.x, r2.x
mad r9.x, -r2.x, r2.x, l(1.000000)
mad r6.x, r6.x, r9.x, r8.w
sqrt r6.x, r6.x
mul r9.y, r5.w, r5.w
mad r8.w, r9.y, r9.x, r8.w
sqrt r8.w, r8.w
mul r2.w, r2.w, r8.w
mad r2.w, r5.w, r6.x, r2.w
add r2.zw, r2.zzzw, r2.zzzw
max r2.w, r2.w, l(0.000100)
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
dp3_sat r0.y, r0.zwyz, r3.yzwy
mad r0.z, r2.x, r2.x, l(-1.000000)
mul r0.y, r0.y, r0.y
mad r0.y, r0.y, r0.z, l(1.000000)
div r0.y, r2.x, r0.y
mul r0.y, r0.y, r0.y
mul r0.yzw, r0.yyyy, r8.xxyz
mul r0.yzw, r5.wwww, r0.yyzw
mul r0.yzw, r2.wwww, r0.yyzw
mul r0.yzw, r1.xxxx, r0.yyzw
mad r9.xyz, -r1.ywzy, r3.xxxx, cb0[42].xyzx
mul_sat r10.xyz, cb8[11].xyzx, -cb8[12].zzzz
add r1.x, -r9.z, v4.z
max r1.x, r1.x, l(0.000000)
mul r2.xw, r1.xxxx, r3.wwwy
mad r9.xy, r2.xwxx, l(0.500000, 0.500000, 0.000000, 0.000000), r9.xyxx
add r11.xyz, |r3.wyzw|, l(-0.200000, -0.200000, -0.200000, 0.000000)
mul r11.xyz, r11.xyzx, l(7.000000, 7.000000, 7.000000, 0.000000)
max r11.xyz, r11.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r2.x, r11.y, r11.x
add r2.x, r11.z, r2.x
div r11.xyz, r11.xyzx, r2.xxxx
mul r12.xyzw, r9.yzzx, cb6[10].yyyy
sample_indexable(texture2d)(float,float,float,float) r13.xyz, r12.xyxx, t10.xyzw, s7
sample_indexable(texture2d)(float,float,float,float) r12.xyz, r12.zwzz, t10.xyzw, s7
mul r2.xw, r9.xxxy, cb6[10].yyyy
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r2.xwxx, t10.xyzw, s7
mul r12.xyz, r11.yyyy, r12.xyzx
mad r11.xyw, r13.xyxz, r11.xxxx, r12.xyxz
mad r9.xyz, r9.xyzx, r11.zzzz, r11.xywx
mul r9.xyz, r10.xyzx, r9.xyzx
mul r1.x, r1.x, -cb6[0].y
exp r1.x, r1.x
mul r9.xyz, r1.xxxx, r9.xyzx
dp3 r1.x, r5.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
add_sat r10.xyz, cb6[5].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r11.xy, v0.xyxx, cb0[40].zwzz
mad r2.xw, r11.xxxy, l(2.000000, 0.000000, 0.000000, 2.000000), l(-1.000000, 0.000000, 0.000000, -1.000000)
mad r2.xw, -|r2.xxxw|, |r2.xxxw|, l(1.000000, 0.000000, 0.000000, 1.000000)
mul r12.xy, r3.wyww, cb6[12].zzzz
mad r12.xy, r12.xyxx, r0.xxxx, v5.xyxx
mov r12.z, v5.z
mov r12.w, l(1.000000)

// Far Cry Primal Reflection Fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -i --fix-fcprimal-reflection --only-autofixed -fq 40be17666bb0679e-ps.txt

// ViewProjectionMatrix:
dp4 r14.w, r12.xyzw, cb0[19].xyzw
// Stereo Correction:
add r14.w, r14.w, -r14.y
mul r15.x, r14.w, r14.x
mov r15.yzw, l(0.0)
// InvProjectionMatrix:
dp4 r16.x, r15.xyzw, cb0[0].xyzw
dp4 r16.y, r15.xyzw, cb0[1].xyzw
dp4 r16.z, r15.xyzw, cb0[2].xyzw
dp4 r16.w, r15.xyzw, cb0[3].xyzw
// InvViewMatrix:
dp4 r15.x, r16.xyzw, cb0[4].xyzw
dp4 r15.y, r16.xyzw, cb0[5].xyzw
// Negate Z to fix alignment when camera is tilted:
dp4 r15.z, -r16.xyzw, cb0[6].xyzw
// Adjust Coord:
add r12.xyz, r12.xyz, r15.xyzw

dp4 r13.x, r12.xyzw, cb1[0].xyzw
dp4 r13.y, r12.xyzw, cb1[1].xyzw
dp4 r6.x, r12.xyzw, cb1[3].xyzw
div r12.xy, r13.xyxx, r6.xxxx
mad r11.zw, -v0.xxxx, cb0[40].zzzz, l(0.000000, 0.000000, 1.000000, 1.000000)
add r11.xz, -r11.zzyz, r12.xxyx
mad_sat r2.xw, r11.xxxz, r2.xxxw, r11.wwwy

// Swap reflection eyes from stereo2mono reflection copy.
// Mip-maps disabled as the reverse stereo blit only copies them in one eye
mov r15.xyzw, r2.xyzw
mul r15.x, r15.x, l(0.5)
eq r14.w, r14.z, l(-1.0)
if_nz r14.w
  add r15.x, r15.x, l(0.5)
endif

// sample_l_indexable(texture2d)(float,float,float,float) r11.xyz, r2.xwxx, t14.xyzw, s10, r6.y
sample_l_indexable(texture2d)(float,float,float,float) r11.xyz, r15.xwxx, t100.xyzw, s10, l(0.0)

min r11.xyz, r11.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000)
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r2.x, l(0), l(12), t3.xxxx
mul r11.xyz, r2.xxxx, r11.xyzx
mad_sat r2.w, r7.w, cb4[1].x, cb4[1].y
mul r12.xyz, r5.xyzx, r10.xyzx
mad r1.yzw, r3.wwzy, -r2.zzzz, r1.yyzw
mov r1.yzw, -r1.yyzw
sample_l_indexable(texturecube)(float,float,float,float) r1.yzw, r1.yzwy, t1.wxyz, s1, r6.z
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r3.yzw, l(0), l(108), t5.xxyz
dp3 r2.z, r3.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r7.xy, l(0), l(124), t5.xyxx
dp3 r3.y, r7.zxyz, l(0.212600, 0.715200, 0.072200, 0.000000)
max r2.z, r2.z, r3.y
add r2.z, r6.w, r2.z
add r2.z, r2.z, l(-1.000000)
mad r2.z, cb0[55].w, r2.z, l(1.000000)
mul r1.yzw, r1.yyzw, r2.zzzz
mad r1.yzw, r1.yyzw, cb6[12].yyyy, cb6[12].xxxx
mad r1.yzw, r12.xxyz, r1.yyzw, -r11.xxyz
mad r1.yzw, r2.wwww, r1.yyzw, r11.xxyz
add r0.x, -r0.x, r3.x
mul r0.x, r0.x, -cb6[0].x
exp r0.x, r0.x
add r0.x, -r0.x, l(1.000000)
max r0.x, r0.x, l(0.000000)
mad r3.xyz, r5.wwww, r8.xyzx, r5.xyzx
mul r3.xyz, r3.xyzx, l(0.980000, 0.980000, 0.980000, 0.000000)
mad r0.yzw, r1.yyzw, r2.yyyy, r0.yyzw
add r1.yzw, r4.xxyz, -cb6[4].xxyz
mad r1.yzw, r4.wwww, r1.yyzw, cb6[4].xxyz
mul r1.yzw, r10.xxyz, r1.yyzw
mul r1.x, r1.x, cb6[10].x
mul r1.x, r1.x, l(100.000000)
mul r2.yzw, r1.xxxx, r9.xxyz
mul r0.yzw, r0.xxxx, r0.yyzw
mad r0.yzw, r3.xxyz, r1.yyzw, r0.yyzw
mov r1.w, -r0.x
add r3.x, r1.w, l(1.000000)
mad r0.yzw, r2.yyzw, r3.xxxx, r0.yyzw
lt r2.yz, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[39].zzwz
and r2.y, r2.z, r2.y
if_nz r2.y
  ftou r2.yz, v0.xxyx
  add r3.xyz, v4.xyzx, -cb0[42].xyzx
  dp3 r2.w, r3.xyzx, r3.xyzx
  sqrt r2.w, r2.w
  utof r2.yz, r2.yyzy
  mul r3.xy, r2.yzyy, cb0[40].zwzz
  add r2.y, r2.w, -cb7[0].w
  div r2.y, r2.y, cb7[0].z
  log r2.y, r2.y
  mul r2.y, r2.y, l(0.250000)
  ushr r2.z, cb7[2].z, l(1)
  utof r2.z, r2.z
  mul r2.y, r2.z, r2.y
  iadd r2.z, cb7[2].z, l(-1)
  itof r2.z, r2.z
  div r3.z, r2.y, r2.z
  sample_l_indexable(texture3d)(float,float,float,float) r2.yzw, r3.xyzx, t12.wxyz, s9, l(0.000000)
  sample_l_indexable(texture3d)(float,float,float,float) r3.x, r3.xyzx, t13.xyzw, s9, l(0.000000)
  mul r2.xyz, r2.xxxx, r2.yzwy
else 
  add r3.yzw, v4.xxyz, -cb0[42].xxyz
  dp3 r2.w, r3.yzwy, r3.yzwy
  sqrt r2.w, r2.w
  mad_sat r2.w, r2.w, cb0[35].y, cb0[35].x
  mul r3.y, r3.w, cb0[39].y
  max r3.y, r3.y, l(-125.000000)
  lt r3.z, l(0.000001), |r3.y|
  exp r3.w, -r3.y
  add r3.w, -r3.w, l(1.000000)
  div r3.y, r3.w, r3.y
  movc r3.y, r3.z, r3.y, l(1.000000)
  mad r3.y, r3.y, cb0[39].x, cb0[35].w
  mul r2.w, r2.w, r3.y
  mul r2.w, r2.w, -cb0[35].z
  exp r3.x, r2.w
  mad r2.xyz, -v2.xyzx, r3.xxxx, v2.xyzx
endif 
mad r0.yzw, r0.yyzw, r3.xxxx, r2.xxyz
mul r1.xyz, r0.xxxx, r0.yzwy
mad r0.xyzw, v2.wwww, r1.xyzw, l(0.000000, 0.000000, 0.000000, 1.000000)
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r1.x, l(0), l(0), t3.xxxx
mul r0.xyz, r0.xyzx, r1.xxxx
max r0.xyz, r0.xyzx, l(0.0000610351999, 0.0000610351999, 0.0000610351999, 0.000000)
min o0.xyz, r0.xyzx, l(8192.000000, 8192.000000, 8192.000000, 0.000000)
mov o0.w, r0.w
ret 
// Approximately 328 instruction slots used