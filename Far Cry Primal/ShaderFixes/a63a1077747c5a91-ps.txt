// asmtool.py -i --fix-fcprimal-camera-pos a63a1077747c5a91-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//   using 3Dmigoto v1.2.31 on Wed Mar 02 08:07:07 2016
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4x4 InvProjectionMatrix;      // Offset:    0 Size:    64
//   float4x4 InvViewMatrix;            // Offset:   64 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  128 Size:    64 [unused]
//   float4x4 ViewMatrix;               // Offset:  192 Size:    64 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  256 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  320 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix_Previous;// Offset:  384 Size:    64 [unused]
//   float4 AmbientSHR;                 // Offset:  448 Size:    16 [unused]
//   float4 AmbientSHG;                 // Offset:  464 Size:    16 [unused]
//   float4 AmbientSHB;                 // Offset:  480 Size:    16 [unused]
//   float4 CameraDistances;            // Offset:  496 Size:    16 [unused]
//   float4 CameraNearPlaneSize;        // Offset:  512 Size:    16 [unused]
//   float4 DepthScale;                 // Offset:  528 Size:    16 [unused]
//   float4 DepthTextureScaleOffset;    // Offset:  544 Size:    16 [unused]
//   float4 FogParams;                  // Offset:  560 Size:    16
//   float4 FogSHB;                     // Offset:  576 Size:    16 [unused]
//   float4 FogSHG;                     // Offset:  592 Size:    16 [unused]
//   float4 FogSHR;                     // Offset:  608 Size:    16 [unused]
//   float4 HeightFogParams;            // Offset:  624 Size:    16
//   float4 ViewportSize;               // Offset:  640 Size:    16
//   float3 ViewPoint;                  // Offset:  656 Size:    12 [unused]
//   float3 CameraPosition;             // Offset:  672 Size:    12
//   float3 CameraPosition_Previous;    // Offset:  688 Size:    12 [unused]
//   float3 CameraPositionFractions;    // Offset:  704 Size:    12 [unused]
//   float3 CameraPositionFractions_Previous;// Offset:  720 Size:    12 [unused]
//   float3 CameraRight;                // Offset:  736 Size:    12 [unused]
//   float3 CameraUp;                   // Offset:  752 Size:    12 [unused]
//   float3 CameraDirection;            // Offset:  768 Size:    12
//   float3 EnvironmentMapColorOffset;  // Offset:  784 Size:    12 [unused]
//   float3 EnvironmentMapColorScale;   // Offset:  800 Size:    12 [unused]
//   float3 AmbientOcclusionRanges;     // Offset:  816 Size:    12 [unused]
//   float3 DepthTextureRcpSize;        // Offset:  832 Size:    12 [unused]
//   float2 MotionVectorOffsets;        // Offset:  848 Size:     8 [unused]
//   float2 DepthRangeCompression;      // Offset:  856 Size:     8 [unused]
//   float ShadowProjDepthMinValue;     // Offset:  864 Size:     4 [unused]
//   float DistanceScale;               // Offset:  868 Size:     4 [unused]
//   float WorldSpaceZOffset;           // Offset:  872 Size:     4 [unused]
//   float WorldSpaceZOffset_Previous;  // Offset:  876 Size:     4 [unused]
//   float CameraFOVDeg;                // Offset:  880 Size:     4 [unused]
//   float EffectsEmissiveEVBias;       // Offset:  884 Size:     4 [unused]
//   float ShadowCSMLastSliceIndex;     // Offset:  888 Size:     4
//   float UseNormalization;            // Offset:  892 Size:     4 [unused]
//   float FogUndergroundColorScale;    // Offset:  896 Size:     4 [unused]
//
// }
//
// cbuffer CSceneTerrainSkyOcclusionAtlasPrivateData
// {
//
//   float4 SectorOcclusion_OffsetScale;// Offset:    0 Size:    16
//   float3 SectorOcclusion_DistanceFade;// Offset:   16 Size:    12
//   float2 SectorOcclusion_HeightOffsetScale;// Offset:   32 Size:     8
//
// }
//
// cbuffer CAmbientProvider
// {
//
//   float4 CascadeDistanceScales[5];   // Offset:    0 Size:    80 [unused]
//   float4 CascadeNearFarSnappedOffsetCamera[5];// Offset:   80 Size:    80 [unused]
//   float4 CascadeNearFarRcpUVSize[5]; // Offset:  160 Size:    80 [unused]
//   float4 UndergroundSHR;             // Offset:  240 Size:    16
//   float4 UndergroundSHG;             // Offset:  256 Size:    16
//   float4 UndergroundSHB;             // Offset:  272 Size:    16
//   float InvUndergroundBlendEndHeight;// Offset:  288 Size:     4
//   float IndirectLightingScale;       // Offset:  292 Size:     4 [unused]
//
// }
//
// cbuffer CWaterParameterProvider
// {
//
//   float4 BorderAlphaMask;            // Offset:    0 Size:    16 [unused]
//   float ReflectionInvSquareFadeDistance;// Offset:   16 Size:     4 [unused]
//   float ReflectionSquareFadeDistance;// Offset:   20 Size:     4 [unused]
//   float SunLightScale;               // Offset:   24 Size:     4
//
// }
//
// cbuffer CWaterWaveParameterProvider
// {
//
//   float4 WaterWave_CameraCenter_FrontVector;// Offset:    0 Size:    16
//   float4 WaterWave_CameraRightVector_;// Offset:   16 Size:    16
//   float4 WaterWave_CameraTanFOVx_2_Near_Far;// Offset:   32 Size:    16
//
// }
//
// cbuffer WaterRiver
// {
//
//   float4 Extinctions;                // Offset:    0 Size:    16
//   float4 MaterialPickingID;          // Offset:   16 Size:    16 [unused]
//   float4 RefractionWaveInfo;         // Offset:   32 Size:    16 [unused]
//   float4 Specular;                   // Offset:   48 Size:    16
//   float4 WaterColor;                 // Offset:   64 Size:    16
//   float4 WaterColorModulation;       // Offset:   80 Size:    16
//   float3 LayerBlendCff;              // Offset:   96 Size:    12 [unused]
//   float CausticsIntensity;           // Offset:  108 Size:     4
//   float3 LayerSpeed;                 // Offset:  112 Size:    12 [unused]
//   float CausticsScale;               // Offset:  124 Size:     4
//   float2 BaseTiling;                 // Offset:  128 Size:     8 [unused]
//   float2 CenterDir;                  // Offset:  136 Size:     8 [unused]
//   float2 CenterTiling1;              // Offset:  144 Size:     8 [unused]
//   float2 DiffuseTiling;              // Offset:  152 Size:     8 [unused]
//   float DiffuseSpeedFactor;          // Offset:  160 Size:     4 [unused]
//   float NormalModifier;              // Offset:  164 Size:     4
//   float NormalOffsetScale;           // Offset:  168 Size:     4
//   float ReflectionColorOffset;       // Offset:  172 Size:     4
//   float ReflectionColorScale;        // Offset:  176 Size:     4
//   float ReflectionNormalOffsetScale; // Offset:  180 Size:     4 [unused]
//
// }
//
// cbuffer CVolumetricFogBlendedProvider
// {
//
//   float4 VFDepthDistribution;        // Offset:    0 Size:    16
//   float4 VFDepthParams;              // Offset:   16 Size:    16 [unused]
//   int4 VFCellParams;                 // Offset:   32 Size:    16
//
// }
//
// cbuffer CTileLightingBlendedParameterProvider
// {
//
//   float4 CSMSlice0_0;                // Offset:    0 Size:    16
//   float4 CSMSlice0_1;                // Offset:   16 Size:    16
//   float4 CSMSlice0_2;                // Offset:   32 Size:    16
//   float4 CSMSlice1_0;                // Offset:   48 Size:    16
//   float4 CSMSlice1_1;                // Offset:   64 Size:    16
//   float4 CSMSlice1_2;                // Offset:   80 Size:    16
//   float4 CSMSlice2_0;                // Offset:   96 Size:    16
//   float4 CSMSlice2_1;                // Offset:  112 Size:    16
//   float4 CSMSlice2_2;                // Offset:  128 Size:    16
//   float4 CSMSliceFade;               // Offset:  144 Size:    16 [unused]
//   float4 ShadowMapSize;              // Offset:  160 Size:    16
//   float4 SunColor;                   // Offset:  176 Size:    16
//   float4 SunDirection;               // Offset:  192 Size:    16
//   int2 NumTiles;                     // Offset:  208 Size:     8
//   int LightCount;                    // Offset:  216 Size:     4 [unused]
//   int ParticlesSmallBufferFactor;    // Offset:  220 Size:     4 [unused]
//
// }
//
// Resource bind info for ExposureBuffer
// {
//
//   float4 $Element;                   // Offset:    0 Size:    16
//
// }
//
// Resource bind info for SHOccGlobalProbe
// {
//
//   float4 $Element;                   // Offset:    0 Size:    16
//
// }
//
// Resource bind info for SkyParamBuffer
// {
//
//   struct ComputedSkyParameters
//   {
//       
//       float r[9];                    // Offset:    0
//       float g[9];                    // Offset:   36
//       float b[9];                    // Offset:   72
//       float3 sunColor;               // Offset:  108
//       float3 moonColor;              // Offset:  120
//
//   } $Element;                        // Offset:    0 Size:   132
//
// }
//
// Resource bind info for LightsLightingData
// {
//
//   struct LightingData
//   {
//       
//       float4 pos;                    // Offset:    0
//       float4 color;                  // Offset:   16
//       float4 direction;              // Offset:   32
//       float attenuation;             // Offset:   48
//       float2 spotFactors;            // Offset:   52
//       uint flags;                    // Offset:   60
//       float4 clippingInfo;           // Offset:   64
//       float4 clipPlanes[3];          // Offset:   80
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
// Resource bind info for ShadowData
// {
//
//   struct ShadowProjTextureData
//   {
//       
//       float4 shadowMapSize;          // Offset:    0
//       float4x4 shadowProjectionMatrix;// Offset:   16
//       float4 spotScaleOffsetUVs;     // Offset:   80
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for LightIndicesPerTileForBlended
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for LightOutputPerTileForBlended
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// DepthVPSampler__SampObj__         sampler      NA          NA    0        1
// EnvironmentMapBRDFTexture__SampObj__    sampler      NA          NA    1        1
// SectorHemiMapSamplerStateLinear    sampler      NA          NA    2        1
// WaterWaveTexture__SampObj__       sampler      NA          NA    3        1
// NormalTexture__SampObj__          sampler      NA          NA    4        1
// CausticsTexture__SampObj__        sampler      NA          NA    5        1
// ReflectionCubeTexture__SampObj__    sampler      NA          NA    6        1
// ColorClamp3D                      sampler      NA          NA    7        1
// ShadowCmpSampler                sampler_c      NA          NA    8        1
// DepthVPSampler__TexObj__          texture  float4          2d    0        1
// EnvironmentMapBRDFTexture__TexObj__    texture  float4          2d    1        1
// ExposureBuffer                    texture  struct         r/o    2        1
// SHOccGlobalProbe                  texture  struct         r/o    3        1
// SkyParamBuffer                    texture  struct         r/o    4        1
// SectorOcclusion_HeightTexture__TexObj__    texture  float4          2d    5        1
// WaterWaveTexture__TexObj__        texture  float4          2d    6        1
// NormalTexture__TexObj__           texture  float4          2d    7        1
// CausticsTexture__TexObj__         texture  float4          2d    8        1
// ReflectionCubeTexture__TexObj__    texture  float4        cube    9        1
// VFVolumeTextureRGB                texture  float4          3d   10        1
// VFVolumeTextureAlpha              texture  float4          3d   11        1
// ShadowCmpSampler_TextureObject    texture  float4     2darray   12        1
// ProjectedTexture0__TexObj__       texture  float4          2d   13        1
// DeferredShadowTexture             texture  float4          2d   14        1
// LightsLightingData                texture  struct         r/o   15        1
// ShadowData                        texture  struct         r/o   16        1
// LightIndicesPerTileForBlended     texture  struct         r/o   17        1
// LightOutputPerTileForBlended      texture  struct         r/o   18        1
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CSceneTerrainSkyOcclusionAtlasPrivateData    cbuffer      NA          NA    1        1
// CAmbientProvider                  cbuffer      NA          NA    2        1
// CWaterParameterProvider           cbuffer      NA          NA    3        1
// CWaterWaveParameterProvider       cbuffer      NA          NA    4        1
// WaterRiver                        cbuffer      NA          NA    5        1
// CVolumetricFogBlendedProvider     cbuffer      NA          NA    6        1
// CTileLightingBlendedParameterProvider    cbuffer      NA          NA    7        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// SV_IsFrontFace           0   x           8    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[56], immediateIndexed
dcl_constantbuffer cb1[3], immediateIndexed
dcl_constantbuffer cb2[19], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[3], immediateIndexed
dcl_constantbuffer cb5[12], immediateIndexed
dcl_constantbuffer cb6[3], immediateIndexed
dcl_constantbuffer cb7[14], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_structured t2, 16 
dcl_resource_structured t3, 16 
dcl_resource_structured t4, 132 
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texturecube (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t11
dcl_resource_texture2darray (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_structured t15, 128 
dcl_resource_structured t16, 96 
dcl_resource_structured t17, 4 
dcl_resource_structured t18, 4 
dcl_input_ps_siv linear noperspective centroid v0.xy, position
dcl_input_ps linear v1.xyzw
dcl_input_ps linear centroid v2.xyzw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 27

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r24.xyzw, l(0, 0, 0, 0), t125.xyzw


// Camera Position (environment reflections, etc) adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py -i --fix-fcprimal-camera-pos a63a1077747c5a91-ps.txt
mul r25.x, r24.x, r24.y
mul r25.x, r25.x, cb0[0].x
mov r25.yzw, l(0.0)
dp4 r26.x, r25.xyzw, cb0[4].xyzw
dp4 r26.y, r25.xyzw, cb0[5].xyzw
dp4 r26.z, r25.xyzw, cb0[6].xyzw
mov r25.xyzw, cb0[42].xyzw
add r25.xyz, r25.xyz, r26.xyz

mov_sat r0.x, v2.w
dp3 r0.y, v3.xyzx, v3.xyzx
sqrt r0.y, r0.y
add r1.xyz, -v5.xzyx, r25.xzyx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xzw, v1.wxww, t7.yzwx, s4
mad r4.xy, r3.zxzz, l(2.007874, 2.007874, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r4.xyxx, r4.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r4.z, r0.w
sample_indexable(texture2d)(float,float,float,float) r5.xzw, v1.wyww, t7.yzwx, s4
mad r6.xy, r5.zxzz, l(2.007874, 2.007874, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r6.xyxx, r6.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r6.z, r0.w
sample_indexable(texture2d)(float,float,float,float) r7.xzw, v1.wzww, t7.yzwx, s4
mad r8.xy, r7.zxzz, l(2.007874, 2.007874, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r8.xyxx, r8.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r8.z, r0.w
mul r3.xyz, r4.xyzx, v4.xxxx
mul r5.xyz, r6.xyzx, v4.yyyy
mul r7.xyz, r8.xyzx, v4.zzzz
add r3.xyzw, r3.xyzw, r5.xyzw
add r3.xyzw, r3.xyzw, r7.xyzw
mul r4.yw, r3.yyyx, cb5[10].yyyy
mov r4.z, r3.z
dp3 r0.w, r4.yzwy, r4.yzwy
rsq r0.w, r0.w
mul r1.w, r3.w, cb5[3].x
mul r3.x, r0.y, l(0.010000)
add r5.xy, v5.xyxx, -cb4[0].xyxx
dp2 r2.w, cb4[0].zwzz, r5.xyxx
mul r3.w, cb4[2].z, cb4[2].y
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
mad r2.w, r3.w, r2.w, -cb4[2].z
add r4.x, -cb4[2].z, cb4[2].y
div r2.w, r2.w, r4.x
mov r5.x, -r3.x
mov r5.y, l(0)
add r5.xy, r5.xyxx, v5.xyxx
add r5.xy, r5.xyxx, -cb4[0].xyxx
dp2 r5.z, cb4[0].zwzz, r5.xyxx
dp2 r5.x, cb4[1].xyxx, r5.xyxx
div r5.y, l(1.000000, 1.000000, 1.000000, 1.000000), r5.z
mad r5.y, r3.w, r5.y, -cb4[2].z
div r6.y, r5.y, r4.x
mul r5.y, r5.z, cb4[2].x
div r5.x, r5.x, r5.y
mad r6.x, r5.x, l(0.500000), l(0.500000)
mov r3.y, l(0)
add r5.xyzw, r3.xyyx, v5.xyxy
add r5.xyzw, r5.xyzw, -cb4[0].xyxy
dp2 r6.z, cb4[0].zwzz, r5.xyxx
dp2 r5.x, cb4[1].xyxx, r5.xyxx
div r5.y, l(1.000000, 1.000000, 1.000000, 1.000000), r6.z
mad r5.y, r3.w, r5.y, -cb4[2].z
div r7.y, r5.y, r4.x
mul r5.y, r6.z, cb4[2].x
div r5.x, r5.x, r5.y
mad r7.x, r5.x, l(0.500000), l(0.500000)
mov r3.z, -r3.x
add r3.yz, r3.yyzy, v5.xxyx
add r3.yz, r3.yyzy, -cb4[0].xxyx
dp2 r5.x, cb4[0].zwzz, r3.yzyy
dp2 r3.y, cb4[1].xyxx, r3.yzyy
div r3.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.x
mad r3.z, r3.w, r3.z, -cb4[2].z
div r8.y, r3.z, r4.x
mul r3.z, r5.x, cb4[2].x
div r3.y, r3.y, r3.z
mad r8.x, r3.y, l(0.500000), l(0.500000)
dp2 r3.y, cb4[0].zwzz, r5.zwzz
dp2 r3.z, cb4[1].xyxx, r5.zwzz
div r5.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.y
mad r3.w, r3.w, r5.x, -cb4[2].z
div r5.y, r3.w, r4.x
mul r3.y, r3.y, cb4[2].x
div r3.y, r3.z, r3.y
mad r5.x, r3.y, l(0.500000), l(0.500000)
sample_indexable(texture2d)(float,float,float,float) r3.y, r6.xyxx, t6.yxzw, s3
sample_indexable(texture2d)(float,float,float,float) r3.z, r7.xyxx, t6.yzxw, s3
sample_indexable(texture2d)(float,float,float,float) r3.w, r8.xyxx, t6.yzwx, s3
sample_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t6.xyzw, s3
add r5.w, -r3.y, r3.z
add r5.y, -r3.w, r4.x
div r3.xy, r5.ywyy, r3.xxxx
add r2.w, r2.w, l(-0.900000)
mul_sat r2.w, r2.w, l(10.000000)
mad r2.w, r2.w, l(-0.050000), l(0.050000)
mul r3.yw, r2.wwww, r3.xxxy
mov r3.z, l(0)
mad r3.xyz, r4.yzwy, r0.wwww, r3.yzwy
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.yzw, r0.wwww, r3.xxyz
mad r4.xy, r3.wyww, cb5[10].zzzz, v5.xyxx
mul r0.w, |cb0[48].z|, l(0.100000)
dp3 r2.w, r3.wzyw, r2.xyzx
mov_sat r5.x, r2.w
mad r6.x, r5.x, l(0.968750), l(0.015625)
mad r6.y, r1.w, l(0.322916657), l(0.015625)
sample_l_indexable(texture2d)(float,float,float,float) r5.yz, r6.xyxx, t1.zxyw, s1, l(0.000000)
mad_sat r0.w, r0.w, r5.z, r5.y
mov r3.x, l(1.000000)
mul r6.xyzw, r3.xyzw, l(0.282094806, 0.488602519, 0.488602519, 0.488602519)
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r7.xyzw, l(0), l(0), t3.xyzw
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r8.xyzw, l(1), l(0), t3.xyzw
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r9.xyzw, l(2), l(0), t3.xyzw
dp4 r7.x, r7.xyzw, r6.xyzw
dp4 r7.y, r8.xyzw, r6.xyzw
dp4 r7.z, r9.xyzw, r6.xyzw
max r5.yzw, r7.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r7.xyzw, l(0), l(108), t4.xywz
dp3 r3.x, r7.xywx, l(0.212600, 0.715200, 0.072200, 0.000000)
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r7.xy, l(0), l(124), t4.xyxx
dp3 r7.x, r7.zxyz, l(0.212600, 0.715200, 0.072200, 0.000000)
max r3.x, r3.x, r7.x
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r7.x, l(0), l(0), t4.xxxx
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r7.y, l(0), l(36), t4.xxxx
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r7.z, l(0), l(72), t4.xxxx
max r7.y, r7.z, r7.y
max r7.x, r7.y, r7.x
add r3.x, r3.x, r7.x
mul r7.xyz, r3.xxxx, r5.yzwy
dp4 r8.x, cb2[15].xyzw, r6.xyzw
dp4 r8.y, cb2[16].xyzw, r6.xyzw
dp4 r8.z, cb2[17].xyzw, r6.xyzw
max r6.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r8.xy, v5.yxyy, cb1[0].yxyy, cb1[0].wzww
sample_l_indexable(texture2d)(float,float,float,float) r6.w, r8.xyxx, t5.xzwy, s2, l(0.000000)
mad r6.w, r6.w, cb1[2].x, cb1[2].y
add r6.w, -r6.w, v5.z
mul_sat r6.w, -r6.w, cb2[18].x
sqrt r6.w, r6.w
add r8.xy, v5.xyxx, -r25.xyxx
dp2 r7.w, r8.xyxx, r8.xyxx
mad r7.w, cb1[1].x, r7.w, cb1[1].y
mul_sat r7.w, r7.w, l(3.000000)
mul r6.w, r6.w, r7.w
mad r5.yzw, -r5.yyzw, r3.xxxx, r6.xxyz
mad r5.yzw, r6.wwww, r5.yyzw, r7.xxyz
div r6.xy, v6.xyxx, v6.zzzz
sample_l_indexable(texture2d)(float,float,float,float) r6.z, r6.xyxx, t0.yzxw, s0, l(0.000000)
mov r6.w, l(1.000000)
dp4 r3.x, r6.xyzw, cb0[2].xyzw
dp4 r6.x, r6.xyzw, cb0[3].xyzw
div r3.x, -r3.x, r6.x
mul r3.x, r0.y, -r3.x
div r3.x, r3.x, v3.z
mad r6.x, -r1.w, l(0.330000), l(1.000000)
mul r6.x, r6.x, r6.x
max r6.x, r6.x, l(0.001000)
ftou r6.yz, v0.xxyx
ushr r7.xy, r6.yzyy, l(3, 3, 0, 0)
imad r6.w, r7.y, cb7[13].x, r7.x
ftoi r7.xy, v0.xyxx
mov r7.zw, l(0,0,0,0)
ld_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r7.x, r7.xyzw, t14.xyzw
mov r4.z, v5.z
mov r4.w, l(1.000000)
dp4 r8.x, r4.xyzw, cb7[6].xyzw
dp4 r8.y, r4.xyzw, cb7[7].xyzw
dp4 r8.z, r4.xyzw, cb7[8].xyzw
dp4 r9.x, r4.xyzw, cb7[3].xyzw
dp4 r9.y, r4.xyzw, cb7[4].xyzw
dp4 r9.z, r4.xyzw, cb7[5].xyzw
add r7.yzw, r9.xxyz, l(0.000000, -0.000000, -0.000000, -0.001000)
ge r10.xyz, r7.yzwy, l(0.000000, 0.000000, 0.000000, 0.000000)
and r10.xyz, r10.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
ge r7.yzw, l(0.000000, 1.000000, 1.000000, 1.000000), r7.yyzw
and r7.yzw, r7.yyzw, l(0, 0x3f800000, 0x3f800000, 0x3f800000)
mul r7.yzw, r7.yyzw, r10.xxyz
dp3 r7.y, r7.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
ge r7.y, r7.y, l(3.000000)
mov r9.w, l(1.000000)
mov r8.w, l(2.000000)
movc r10.xyzw, r7.yyyy, r9.xyzw, r8.xyzw
dp4 r11.x, r4.xyzw, cb7[0].xyzw
dp4 r11.y, r4.xyzw, cb7[1].xyzw
dp4 r11.z, r4.xyzw, cb7[2].xyzw
add r7.yzw, r11.xxyz, l(0.000000, -0.000000, -0.000000, -0.001000)
ge r12.xyz, r7.yzwy, l(0.000000, 0.000000, 0.000000, 0.000000)
and r12.xyz, r12.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
ge r7.yzw, l(0.000000, 1.000000, 1.000000, 1.000000), r7.yyzw
and r7.yzw, r7.yyzw, l(0, 0x3f800000, 0x3f800000, 0x3f800000)
mul r7.yzw, r7.yyzw, r12.xxyz
dp3 r7.y, r7.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
ge r7.y, r7.y, l(3.000000)
mov r11.w, l(0)
movc r10.xyzw, r7.yyyy, r11.xyzw, r10.xyzw
min r12.z, r10.w, cb0[55].z
eq r7.y, r12.z, cb0[55].z
if_nz r7.y
  mad r7.yz, r8.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  add r7.yz, |r7.yyzy|, l(0.000000, -0.800000, -0.800000, 0.000000)
  mul_sat r7.yz, r7.yyzy, l(0.000000, 5.000000, 5.000000, 0.000000)
  add r7.yz, -r7.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
  add r7.w, r8.z, l(-0.500000)
  mad r7.w, -|r7.w|, l(2.000000), l(1.000000)
  max r7.w, r7.w, l(0.000000)
  min r7.w, r7.w, l(0.200000)
  mul r7.w, r7.w, l(5.000000)
  min r7.y, r7.z, r7.y
  min r7.y, r7.w, r7.y
  mad r7.zw, r10.xxxy, cb7[10].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
  round_ni r13.xy, r7.zwzz
  add r7.zw, r7.zzzw, -r13.xxxy
  add r13.xy, r13.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
  mad r13.zw, -r7.wwwz, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
  mad r14.xy, r7.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
  add r14.zw, -r7.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000)
  div r14.zw, r14.zzzw, r13.wwwz
  div r7.zw, r7.zzzw, r14.xxxy
  add r15.zw, r14.zzzw, l(0.000000, 0.000000, -1.000000, -1.000000)
  add r15.xy, r7.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
  mul r7.z, r13.z, r13.w
  mul r16.xyzw, r15.zwxw, cb7[10].zwzw
  mad r17.xy, r13.xyxx, cb7[10].zwzz, r16.xyxx
  mov r17.z, cb0[55].z
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r17.xyzx, t12.xxxx, s8, r10.z
  mul r13.zw, r13.zzzw, r14.xxxy
  mad r16.xy, r13.xyxx, cb7[10].zwzz, r16.zwzz
  mov r16.z, cb0[55].z
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r8.w, r16.xyzx, t12.xxxx, s8, r10.z
  mul r8.w, r8.w, r13.z
  mad r7.z, r7.z, r7.w, r8.w
  mul r15.xyzw, r15.zyxy, cb7[10].zwzw
  mad r16.xy, r13.xyxx, cb7[10].zwzz, r15.xyxx
  mov r16.z, cb0[55].z
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r16.xyzx, t12.xxxx, s8, r10.z
  mad r7.z, r13.w, r7.w, r7.z
  mul r7.w, r14.y, r14.x
  mad r13.xy, r13.xyxx, cb7[10].zwzz, r15.zwzz
  mov r13.z, cb0[55].z
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r8.w, r13.xyzx, t12.xxxx, s8, r10.z
  mad r7.z, r7.w, r8.w, r7.z
  mad r7.z, r7.z, l(0.062500), -r7.x
  mad r7.y, r7.y, r7.z, r7.x
else 
  eq r7.z, r12.z, l(1.000000)
  if_nz r7.z
    mad r7.zw, r10.xxxy, cb7[10].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
    round_ni r13.xy, r7.zwzz
    add r7.zw, r7.zzzw, -r13.xxxy
    add r13.xy, r13.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    mul r13.zw, r13.xxxy, cb7[10].zzzw
    mad r14.xy, -r7.wzww, l(3.000000, 3.000000, 0.000000, 0.000000), l(4.000000, 4.000000, 0.000000, 0.000000)
    mad r14.zw, r7.zzzw, l(0.000000, 0.000000, 3.000000, 3.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
    mad r15.xy, -r7.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
    div r15.xy, r15.xyxx, r14.yxyy
    add r15.zw, r7.zzzw, l(0.000000, 0.000000, 3.000000, 3.000000)
    div r7.zw, r7.zzzw, r14.zzzw
    add r16.xw, r15.xxxy, l(-2.000000, 0.000000, 0.000000, -2.000000)
    mul r16.yz, r15.wwzw, l(0.000000, 0.142857149, 0.142857149, 0.000000)
    add r15.xy, r7.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000)
    mul r7.z, r14.x, r14.y
    mul r17.xyzw, r16.xwzw, cb7[10].zwzw
    mad r18.xy, r13.xyxx, cb7[10].zwzz, r17.xyxx
    mov r18.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r18.xyzx, t12.xxxx, s8, r10.z
    mul r17.xy, r14.xyxx, l(7.000000, 7.000000, 0.000000, 0.000000)
    mad r18.xy, r13.xyxx, cb7[10].zwzz, r17.zwzz
    mov r18.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r8.w, r18.xyzx, t12.xxxx, s8, r10.z
    mul r8.w, r8.w, r17.x
    mad r7.z, r7.z, r7.w, r8.w
    mul r14.xy, r14.xyxx, r14.zwzz
    mov r15.zw, r16.wwwy
    mul r18.xyzw, r15.xzxw, cb7[10].zwzw
    mad r19.xy, r13.xyxx, cb7[10].zwzz, r18.xyxx
    mov r19.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r19.xyzx, t12.xxxx, s8, r10.z
    mad r7.z, r14.x, r7.w, r7.z
    mul r19.xyzw, r16.xyzy, cb7[10].zwzw
    mad r20.xy, r13.xyxx, cb7[10].zwzz, r19.xyxx
    mov r20.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r20.xyzx, t12.xxxx, s8, r10.z
    mad r7.z, r17.y, r7.w, r7.z
    mad r17.xy, r13.xyxx, cb7[10].zwzz, r19.zwzz
    mov r17.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r17.xyzx, t12.xxxx, s8, r10.z
    mad r7.z, r7.w, l(49.000000), r7.z
    mul r15.zw, r14.zzzw, l(0.000000, 0.000000, 7.000000, 7.000000)
    mad r17.xy, r13.xyxx, cb7[10].zwzz, r18.zwzz
    mov r17.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r17.xyzx, t12.xxxx, s8, r10.z
    mad r7.z, r15.z, r7.w, r7.z
    mov r16.y, r15.y
    mul r16.xyzw, r16.xyzy, cb7[10].zwzw
    mad r17.xy, r13.xyxx, cb7[10].zwzz, r16.xyxx
    mov r17.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r17.xyzx, t12.xxxx, s8, r10.z
    mad r7.z, r14.y, r7.w, r7.z
    mad r16.xy, r13.xyxx, cb7[10].zwzz, r16.zwzz
    mov r16.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r16.xyzx, t12.xxxx, s8, r10.z
    mad r7.z, r15.w, r7.w, r7.z
    mul r7.w, r14.w, r14.z
    mad r13.xy, r15.xyxx, cb7[10].zwzz, r13.zwzz
    mov r13.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r8.w, r13.xyzx, t12.xxxx, s8, r10.z
    mad r7.z, r7.w, r8.w, r7.z
    mad r13.xy, r9.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
    add r13.xy, |r13.xyxx|, l(-0.800000, -0.800000, 0.000000, 0.000000)
    mul_sat r13.xy, r13.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000)
    add r13.xy, -r13.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    add r7.w, r9.z, l(-0.500000)
    mad r7.w, -|r7.w|, l(2.000000), l(1.000000)
    max r7.w, r7.w, l(0.000000)
    min r7.w, r7.w, l(0.200000)
    mul r7.yw, r7.zzzw, l(0.000000, 0.00694444450, 0.000000, 5.000000)
    min r8.w, r13.y, r13.x
    min r7.w, r7.w, r8.w
    ne r8.w, r7.w, l(1.000000)
    if_nz r8.w
      mad r8.xy, r8.xyxx, cb7[10].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
      round_ni r13.xy, r8.xyxx
      add r8.xy, r8.xyxx, -r13.xyxx
      add r13.xy, r13.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
      mad r13.zw, -r8.yyyx, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
      mad r14.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
      add r14.zw, -r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000)
      div r14.zw, r14.zzzw, r13.wwwz
      div r8.xy, r8.xyxx, r14.xyxx
      add r15.zw, r14.zzzw, l(0.000000, 0.000000, -1.000000, -1.000000)
      add r15.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
      mul r8.x, r13.z, r13.w
      mul r16.xyzw, r15.zwxw, cb7[10].zwzw
      mad r17.xy, r13.xyxx, cb7[10].zwzz, r16.xyxx
      mov r17.z, l(2.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r8.y, r17.xyzx, t12.xxxx, s8, r8.z
      mul r13.zw, r13.zzzw, r14.xxxy
      mad r16.xy, r13.xyxx, cb7[10].zwzz, r16.zwzz
      mov r16.z, l(2.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r8.w, r16.xyzx, t12.xxxx, s8, r8.z
      mul r8.w, r8.w, r13.z
      mad r8.x, r8.x, r8.y, r8.w
      mul r15.xyzw, r15.zyxy, cb7[10].zwzw
      mad r16.xy, r13.xyxx, cb7[10].zwzz, r15.xyxx
      mov r16.z, l(2.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r8.y, r16.xyzx, t12.xxxx, s8, r8.z
      mad r8.x, r13.w, r8.y, r8.x
      mul r8.y, r14.y, r14.x
      mad r13.xy, r13.xyxx, cb7[10].zwzz, r15.zwzz
      mov r13.z, l(2.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r8.z, r13.xyzx, t12.xxxx, s8, r8.z
      mad r8.x, r8.y, r8.z, r8.x
      mul r8.x, r8.x, l(0.062500)
      mad r7.z, r7.z, l(0.00694444450), -r8.x
      mad r7.y, r7.w, r7.z, r8.x
    endif 
  else 
    mad r7.zw, r10.xxxy, cb7[10].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
    round_ni r8.xy, r7.zwzz
    add r7.zw, r7.zzzw, -r8.xxxy
    add r8.xy, r8.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    mul r8.zw, r8.xxxy, cb7[10].zzzw
    mad r13.xyzw, r7.zzzz, l(11.000000, 11.000000, 5.000000, 5.000000), l(-28.000000, 17.000000, -6.000000, 1.000000)
    mad r10.xyw, r7.zzzz, l(4.000000, 4.000000, 0.000000, 7.000000), l(-5.000000, -16.000000, 0.000000, 5.000000)
    div r10.xyw, r10.xyxw, r13.zxzy
    add r14.xyz, r10.yxwy, l(-1.000000, -3.000000, 1.000000, 0.000000)
    div r7.z, r7.z, r13.w
    add r15.x, r7.z, l(3.000000)
    mad r16.xyzw, r7.wwww, l(11.000000, 11.000000, 5.000000, 5.000000), l(-28.000000, 17.000000, -6.000000, 1.000000)
    mad r10.xyw, r7.wwww, l(4.000000, 4.000000, 0.000000, 7.000000), l(-5.000000, -16.000000, 0.000000, 5.000000)
    div r10.xyw, r10.xyxw, r16.zxzy
    add r17.xyz, r10.xywx, l(-3.000000, -1.000000, 1.000000, 0.000000)
    div r7.z, r7.w, r16.w
    add r18.y, r7.z, l(3.000000)
    mul r19.xyzw, r13.zxzx, r16.zzxx
    mov r14.w, r17.x
    mul r20.xyzw, r14.ywxw, cb7[10].zwzw
    mad r12.xy, r8.xyxx, cb7[10].zwzz, r20.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.z, r12.xyzx, t12.xxxx, s8, r10.z
    mad r12.xy, r8.xyxx, cb7[10].zwzz, r20.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r12.xyzx, t12.xxxx, s8, r10.z
    mul r7.w, r7.w, r19.y
    mad r7.z, r19.x, r7.z, r7.w
    mul r20.xyzw, -r13.ywyw, r16.zzxx
    mad r12.xy, r14.zwzz, cb7[10].zwzz, r8.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r12.xyzx, t12.xxxx, s8, r10.z
    mad r7.z, r20.x, r7.w, r7.z
    mov r15.y, r14.w
    mad r12.xy, r15.xyxx, cb7[10].zwzz, r8.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r12.xyzx, t12.xxxx, s8, r10.z
    mad r7.z, r20.y, r7.w, r7.z
    mov r17.w, r14.y
    mul r21.xyzw, r17.wywz, cb7[10].zwzw
    mad r12.xy, r8.xyxx, cb7[10].zwzz, r21.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r12.xyzx, t12.xxxx, s8, r10.z
    mad r7.z, r19.z, r7.w, r7.z
    mov r14.yw, r17.yyyz
    mul r22.xyzw, r14.xyzy, cb7[10].zwzw
    mad r12.xy, r8.xyxx, cb7[10].zwzz, r22.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r12.xyzx, t12.xxxx, s8, r10.z
    mad r7.z, r19.w, r7.w, r7.z
    mad r12.xy, r8.xyxx, cb7[10].zwzz, r22.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r12.xyzx, t12.xxxx, s8, r10.z
    mad r7.z, r20.z, r7.w, r7.z
    mov r15.zw, r14.yyyw
    mul r19.xyzw, r15.xzxw, cb7[10].zwzw
    mad r12.xy, r8.xyxx, cb7[10].zwzz, r19.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r12.xyzx, t12.xxxx, s8, r10.z
    mad r7.z, r20.w, r7.w, r7.z
    mul r20.xyzw, r13.zxzx, -r16.yyww
    mad r12.xy, r8.xyxx, cb7[10].zwzz, r21.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r12.xyzx, t12.xxxx, s8, r10.z
    mad r7.z, r20.x, r7.w, r7.z
    mul r21.xyzw, r14.xwzw, cb7[10].zwzw
    mad r12.xy, r8.xyxx, cb7[10].zwzz, r21.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r12.xyzx, t12.xxxx, s8, r10.z
    mad r7.z, r20.y, r7.w, r7.z
    mul r13.xyzw, r13.ywyw, r16.yyww
    mad r12.xy, r8.xyxx, cb7[10].zwzz, r21.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r12.xyzx, t12.xxxx, s8, r10.z
    mad r7.z, r13.x, r7.w, r7.z
    mad r12.xy, r8.xyxx, cb7[10].zwzz, r19.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r12.xyzx, t12.xxxx, s8, r10.z
    mad r7.z, r13.y, r7.w, r7.z
    mov r18.x, r17.w
    mad r12.xy, r18.xyxx, cb7[10].zwzz, r8.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r12.xyzx, t12.xxxx, s8, r10.z
    mad r7.z, r20.z, r7.w, r7.z
    mov r18.zw, r14.xxxz
    mul r14.xyzw, r18.zywy, cb7[10].zwzw
    mad r12.xy, r8.xyxx, cb7[10].zwzz, r14.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r12.xyzx, t12.xxxx, s8, r10.z
    mad r7.z, r20.w, r7.w, r7.z
    mad r12.xy, r8.xyxx, cb7[10].zwzz, r14.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r12.xyzx, t12.xxxx, s8, r10.z
    mad r7.z, r13.z, r7.w, r7.z
    mov r18.x, r15.x
    mad r12.xy, r18.xyxx, cb7[10].zwzz, r8.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.w, r12.xyzx, t12.xxxx, s8, r10.z
    mad r7.z, r13.w, r7.w, r7.z
    mad r8.xy, r11.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
    add r8.xy, |r8.xyxx|, l(-0.800000, -0.800000, 0.000000, 0.000000)
    mul_sat r8.xy, r8.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000)
    add r8.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    add r7.w, r11.z, l(-0.500000)
    mad r7.w, -|r7.w|, l(2.000000), l(1.000000)
    max r7.w, r7.w, l(0.000000)
    min r7.w, r7.w, l(0.200000)
    mul r7.yw, r7.zzzw, l(0.000000, 0.000369822490, 0.000000, 5.000000)
    min r8.x, r8.y, r8.x
    min r7.w, r7.w, r8.x
    ne r8.x, r7.w, l(1.000000)
    if_nz r8.x
      mad r8.xy, r9.xyxx, cb7[10].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
      round_ni r8.zw, r8.xxxy
      add r8.xy, -r8.zwzz, r8.xyxx
      add r8.zw, r8.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
      mul r9.xy, r8.zwzz, cb7[10].zwzz
      mad r10.xy, -r8.yxyy, l(3.000000, 3.000000, 0.000000, 0.000000), l(4.000000, 4.000000, 0.000000, 0.000000)
      mad r10.zw, r8.xxxy, l(0.000000, 0.000000, 3.000000, 3.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
      mad r11.xy, -r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
      div r11.xy, r11.xyxx, r10.yxyy
      add r11.zw, r8.xxxy, l(0.000000, 0.000000, 3.000000, 3.000000)
      div r8.xy, r8.xyxx, r10.zwzz
      add r12.xw, r11.xxxy, l(-2.000000, 0.000000, 0.000000, -2.000000)
      mul r12.yz, r11.wwzw, l(0.000000, 0.142857149, 0.142857149, 0.000000)
      add r11.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
      mul r8.x, r10.x, r10.y
      mul r13.xyzw, r12.xwzw, cb7[10].zwzw
      mad r14.xy, r8.zwzz, cb7[10].zwzz, r13.xyxx
      mov r14.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r8.y, r14.xyzx, t12.xxxx, s8, r9.z
      mul r13.xy, r10.xyxx, l(7.000000, 7.000000, 0.000000, 0.000000)
      mad r14.xy, r8.zwzz, cb7[10].zwzz, r13.zwzz
      mov r14.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r9.w, r14.xyzx, t12.xxxx, s8, r9.z
      mul r9.w, r9.w, r13.x
      mad r8.x, r8.x, r8.y, r9.w
      mul r10.xy, r10.xyxx, r10.zwzz
      mov r11.zw, r12.wwwy
      mul r14.xyzw, r11.xzxw, cb7[10].zwzw
      mad r15.xy, r8.zwzz, cb7[10].zwzz, r14.xyxx
      mov r15.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r8.y, r15.xyzx, t12.xxxx, s8, r9.z
      mad r8.x, r10.x, r8.y, r8.x
      mul r15.xyzw, r12.xyzy, cb7[10].zwzw
      mad r16.xy, r8.zwzz, cb7[10].zwzz, r15.xyxx
      mov r16.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r8.y, r16.xyzx, t12.xxxx, s8, r9.z
      mad r8.x, r13.y, r8.y, r8.x
      mad r13.xy, r8.zwzz, cb7[10].zwzz, r15.zwzz
      mov r13.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r8.y, r13.xyzx, t12.xxxx, s8, r9.z
      mad r8.x, r8.y, l(49.000000), r8.x
      mul r11.zw, r10.zzzw, l(0.000000, 0.000000, 7.000000, 7.000000)
      mad r13.xy, r8.zwzz, cb7[10].zwzz, r14.zwzz
      mov r13.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r8.y, r13.xyzx, t12.xxxx, s8, r9.z
      mad r8.x, r11.z, r8.y, r8.x
      mov r12.y, r11.y
      mul r12.xyzw, r12.xyzy, cb7[10].zwzw
      mad r13.xy, r8.zwzz, cb7[10].zwzz, r12.xyxx
      mov r13.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r8.y, r13.xyzx, t12.xxxx, s8, r9.z
      mad r8.x, r10.y, r8.y, r8.x
      mad r12.xy, r8.zwzz, cb7[10].zwzz, r12.zwzz
      mov r12.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r8.y, r12.xyzx, t12.xxxx, s8, r9.z
      mad r8.x, r11.w, r8.y, r8.x
      mul r8.y, r10.w, r10.z
      mad r10.xy, r11.xyxx, cb7[10].zwzz, r9.xyxx
      mov r10.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r8.z, r10.xyzx, t12.xxxx, s8, r9.z
      mad r8.x, r8.y, r8.z, r8.x
      mul r8.x, r8.x, l(0.00694444450)
      mad r7.z, r7.z, l(0.000369822490), -r8.x
      mad r7.y, r7.w, r7.z, r8.x
    endif 
  endif 
endif 
mul r8.xyz, cb3[1].zzzz, cb7[11].xyzx
mul r7.yzw, r7.yyyy, r8.xxyz
mad r8.xyz, r1.xzyx, r0.zzzz, -cb7[12].xyzx
dp3 r8.w, r8.xyzx, r8.xyzx
rsq r8.w, r8.w
mul r8.xyz, r8.wwww, r8.xyzx
dp3 r8.w, r8.xzyx, r2.xyzx
add r8.w, -r8.w, l(1.000000)
mul r9.x, r8.w, r8.w
mul r9.x, r9.x, r9.x
mul r8.w, r8.w, r9.x
mad r8.w, r8.w, l(0.980000), l(0.020000)
dp3_sat r9.x, -cb7[12].yzxy, r3.yzwy
mul r9.y, r5.x, r5.x
mul r9.z, r6.x, r6.x
mad r9.w, -r6.x, r6.x, l(1.000000)
mad r9.y, r9.y, r9.w, r9.z
sqrt r9.y, r9.y
mul r10.x, r9.x, r9.x
mad r10.x, r10.x, r9.w, r9.z
sqrt r10.x, r10.x
mul r10.x, r5.x, r10.x
mad r10.x, r9.x, r9.y, r10.x
add r10.x, r10.x, r10.x
max r10.x, r10.x, l(0.000100)
div r10.x, l(1.000000, 1.000000, 1.000000, 1.000000), r10.x
dp3_sat r8.x, r8.yzxy, r3.yzwy
mad r8.y, r6.x, r6.x, l(-1.000000)
mul r8.x, r8.x, r8.x
mad r8.x, r8.x, r8.y, l(1.000000)
div r8.x, r6.x, r8.x
mul r8.x, r8.x, r8.x
mul r10.yzw, r7.yyzw, r8.xxxx
mul r10.yzw, r9.xxxx, r10.yyzw
mul r10.xyz, r10.xxxx, r10.yzwy
mul r8.xzw, r8.wwww, r10.xxyz
mul r7.yzw, r7.yyzw, r9.xxxx
mad r10.xyz, -r2.xzyx, r3.xxxx, r25.xyzx
mul_sat r11.xyz, cb7[11].xyzx, -cb7[12].zzzz
add r9.x, -r10.z, v5.z
max r9.x, r9.x, l(0.000000)
mul r12.xy, r3.wyww, r9.xxxx
mad r10.xy, r12.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), r10.xyxx
add r12.xyz, |r3.wyzw|, l(-0.200000, -0.200000, -0.200000, 0.000000)
mul r12.xyz, r12.xyzx, l(7.000000, 7.000000, 7.000000, 0.000000)
max r12.xyz, r12.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r10.w, r12.y, r12.x
add r10.w, r12.z, r10.w
div r12.xyz, r12.xyzx, r10.wwww
mul r13.xyzw, r10.yzzx, cb5[7].wwww
sample_indexable(texture2d)(float,float,float,float) r14.xyz, r13.xyxx, t8.xyzw, s5
sample_indexable(texture2d)(float,float,float,float) r13.xyz, r13.zwzz, t8.xyzw, s5
mul r10.xy, r10.xyxx, cb5[7].wwww
sample_indexable(texture2d)(float,float,float,float) r10.xyz, r10.xyxx, t8.xyzw, s5
mul r13.xyz, r12.yyyy, r13.xyzx
mad r12.xyw, r14.xyxz, r12.xxxx, r13.xyxz
mad r10.xyz, r10.xyzx, r12.zzzz, r12.xywx
mul r10.xyz, r11.xyzx, r10.xyzx
mul r10.xyz, r7.xxxx, r10.xyzx
mul r7.x, r9.x, -cb5[0].y
exp r7.x, r7.x
mul r10.xyz, r7.xxxx, r10.xyzx
ishl r7.x, r6.w, l(1)
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r7.x, r7.x, l(0), t17.xxxx
countbits r9.x, r7.x
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r6.w, l(0), t18.xxxx
and r10.w, r10.w, l(0x60000000)
ine r10.w, r10.w, l(0)
mov r12.xyz, r8.xzwx
mov r11.xyzw, r7.yzwx
mov r12.w, l(0)
loop 
  uge r13.x, r12.w, r9.x
  breakc_nz r13.x
  firstbit_lo r13.x, r11.w
  ishl r13.y, l(1), r13.x
  not r13.y, r13.y
  and r11.w, r11.w, r13.y
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r14.xyzw, r13.x, l(0), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r13.yzw, r13.x, l(16), t15.xxyz
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r15.xyz, r13.x, l(32), t15.xyzx
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r16.xyzw, r13.x, l(48), t15.xyzw
  and r17.xyzw, r16.wwww, l(32, 16, 1, 4)
  ult r18.xyzw, l(0, 0, 0, 0), r17.xyzw
  ushr r13.x, r16.w, l(5)
  and r13.x, r13.x, l(2)
  or r15.w, r18.y, r18.x
  and r15.w, r10.w, r15.w
  if_nz r15.w
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r19.xyzw, r13.x, l(0), t16.xyzw
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r20.xyzw, r13.x, l(16), t16.xyzw
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r21.xyzw, r13.x, l(32), t16.xyzw
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r22.xyzw, r13.x, l(48), t16.xyzw
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r23.xyzw, r13.x, l(64), t16.xyzw
  else 
    mov r19.xyzw, l(0,0,0,0)
    mov r20.xyzw, l(0,0,0,0)
    mov r21.xyzw, l(0,0,0,0)
    mov r22.xyzw, l(0,0,0,0)
    mov r23.xyzw, l(0,0,0,0)
  endif 
  add r14.xyz, -r14.xyzx, v5.xyzx
  dp3 r15.w, r14.xyzx, r14.xyzx
  max r16.w, r15.w, l(0.000010)
  div r17.x, l(1.000000, 1.000000, 1.000000, 1.000000), r16.w
  min r14.w, r14.w, r17.x
  mul r16.w, r16.w, r16.w
  mad_sat r16.x, -r16.w, r16.x, l(1.000000)
  mul r16.x, r16.x, r16.x
  mul r14.w, r14.w, r16.x
  mul r13.yzw, r13.yyzw, r14.wwww
  rsq r14.w, r15.w
  mul r17.xzw, r14.wwww, r14.xxyz
  dp3 r14.w, r17.xzwx, r15.xyzx
  mad_sat r14.w, r14.w, r16.y, r16.z
  mul r14.w, r14.w, r14.w
  mul r15.xyz, r13.yzwy, r14.wwww
  movc r13.yzw, r18.zzzz, r15.xxyz, r13.yyzw
  mad r15.xyz, r1.xzyx, r0.zzzz, -r14.xyzx
  dp3 r14.w, r15.xyzx, r15.xyzx
  rsq r14.w, r14.w
  mul r15.xyz, r14.wwww, r15.xyzx
  dp3 r14.w, r15.xzyx, r2.xyzx
  add r14.w, -r14.w, l(1.000000)
  mul r15.w, r14.w, r14.w
  mul r15.w, r15.w, r15.w
  mul r14.w, r14.w, r15.w
  mad r14.w, r14.w, l(0.980000), l(0.020000)
  if_nz r17.y
    if_z r13.x
      dp4 r16.x, r4.xyzw, r20.xyzw
      dp4 r16.y, r4.xyzw, r21.xyzw
      dp4 r13.x, r4.xyzw, r22.xyzw
      dp4 r15.w, r4.xyzw, r23.xyzw
      max r15.w, r15.w, l(0.000010)
      div r16.xy, r16.xyxx, r15.wwww
      mad r16.xy, r16.xyxx, r19.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
      round_ni r16.zw, r16.xxxy
      add r16.xy, -r16.zwzz, r16.xyxx
      add r16.zw, r16.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
      mul r16.zw, r19.zzzw, r16.zzzw
      mad r17.xy, -r16.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
      mad r17.zw, r16.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
      add r18.xy, -r16.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
      div r18.xy, r18.xyxx, r17.yxyy
      div r16.xy, r16.xyxx, r17.zwzz
      add r20.zw, r18.xxxy, l(0.000000, 0.000000, -1.000000, -1.000000)
      add r20.xy, r16.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
      mul r15.w, r17.x, r17.y
      mad r21.xyzw, r20.zwxw, r19.zwzw, r16.zwzw
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r16.x, r21.xyxx, t13.xxxx, s8, r13.x
      mul r17.xy, r17.xyxx, r17.zwzz
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r16.y, r21.zwzz, t13.xxxx, s8, r13.x
      mul r16.y, r16.y, r17.x
      mad r15.w, r15.w, r16.x, r16.y
      mad r16.xyzw, r20.zyxy, r19.zwzw, r16.zwzw
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r16.x, r16.xyxx, t13.xxxx, s8, r13.x
      mad r15.w, r17.y, r16.x, r15.w
      mul r16.x, r17.w, r17.z
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r13.x, r16.zwzz, t13.xxxx, s8, r13.x
      mad r13.x, r16.x, r13.x, r15.w
      mul r13.x, r13.x, l(0.062500)
    else 
      mov r13.x, l(1.000000)
    endif 
  else 
    mov r13.x, l(1.000000)
  endif 
  dp3_sat r14.x, -r14.yzxy, r3.yzwy
  mul r14.y, r14.x, r14.x
  mad r14.y, r14.y, r9.w, r9.z
  sqrt r14.y, r14.y
  mul r14.y, r5.x, r14.y
  mad r14.y, r14.x, r9.y, r14.y
  add r14.y, r14.y, r14.y
  max r14.y, r14.y, l(0.000100)
  div r14.y, l(1.000000, 1.000000, 1.000000, 1.000000), r14.y
  movc r14.z, r18.w, l(0.001500), l(0.050000)
  dp3_sat r15.x, r15.yzxy, r3.yzwy
  mul r15.x, r15.x, r15.x
  mad r15.x, r15.x, r8.y, l(1.000000)
  div r15.x, r6.x, r15.x
  mul r15.x, r15.x, r15.x
  mul r15.xyz, r13.yzwy, r15.xxxx
  mul r15.xyz, r14.xxxx, r15.xyzx
  mul r15.xyz, r14.yyyy, r15.xyzx
  mul r15.xyz, r14.zzzz, r15.xyzx
  mul r15.xyz, r13.xxxx, r15.xyzx
  mad r12.xyz, r15.xyzx, r14.wwww, r12.xyzx
  mul r13.yzw, r13.yyzw, r14.xxxx
  mad r11.xyz, r13.yzwy, r13.xxxx, r11.xyzx
  iadd r12.w, r12.w, l(1)
endloop 
bfi r6.w, l(31), l(1), r6.w, l(1)
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r6.w, r6.w, l(0), t17.xxxx
countbits r7.x, r6.w
mov r7.yzw, r11.xxyz
mov r8.xzw, r12.xxyz
mov r9.x, r6.w
mov r11.w, l(0)
loop 
  uge r12.w, r11.w, r7.x
  breakc_nz r12.w
  firstbit_lo r12.w, r9.x
  ishl r13.x, l(1), r12.w
  not r13.x, r13.x
  and r9.x, r9.x, r13.x
  iadd r12.w, l(32), r12.w
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r13.xyzw, r12.w, l(0), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r14.xyz, r12.w, l(16), t15.xyzx
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r15.xyz, r12.w, l(32), t15.xyzx
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r16.xyzw, r12.w, l(48), t15.xyzw
  and r17.xyzw, r16.wwww, l(32, 16, 1, 4)
  ult r18.xyzw, l(0, 0, 0, 0), r17.xyzw
  ushr r12.w, r16.w, l(5)
  and r12.w, r12.w, l(2)
  or r14.w, r18.y, r18.x
  and r14.w, r10.w, r14.w
  if_nz r14.w
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r19.xyzw, r12.w, l(0), t16.xyzw
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r20.xyzw, r12.w, l(16), t16.xyzw
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r21.xyzw, r12.w, l(32), t16.xyzw
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r22.xyzw, r12.w, l(48), t16.xyzw
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r23.xyzw, r12.w, l(64), t16.xyzw
  else 
    mov r19.xyzw, l(0,0,0,0)
    mov r20.xyzw, l(0,0,0,0)
    mov r21.xyzw, l(0,0,0,0)
    mov r22.xyzw, l(0,0,0,0)
    mov r23.xyzw, l(0,0,0,0)
  endif 
  add r13.xyz, -r13.xyzx, v5.xyzx
  dp3 r14.w, r13.xyzx, r13.xyzx
  max r15.w, r14.w, l(0.000010)
  div r16.w, l(1.000000, 1.000000, 1.000000, 1.000000), r15.w
  min r13.w, r13.w, r16.w
  mul r15.w, r15.w, r15.w
  mad_sat r15.w, -r15.w, r16.x, l(1.000000)
  mul r15.w, r15.w, r15.w
  mul r13.w, r13.w, r15.w
  mul r14.xyz, r13.wwww, r14.xyzx
  rsq r13.w, r14.w
  mul r17.xzw, r13.wwww, r13.xxyz
  dp3 r13.w, r17.xzwx, r15.xyzx
  mad_sat r13.w, r13.w, r16.y, r16.z
  mul r13.w, r13.w, r13.w
  mul r15.xyz, r14.xyzx, r13.wwww
  movc r14.xyz, r18.zzzz, r15.xyzx, r14.xyzx
  mad r15.xyz, r1.xzyx, r0.zzzz, -r13.xyzx
  dp3 r13.w, r15.xyzx, r15.xyzx
  rsq r13.w, r13.w
  mul r15.xyz, r13.wwww, r15.xyzx
  dp3 r13.w, r15.xzyx, r2.xyzx
  add r13.w, -r13.w, l(1.000000)
  mul r14.w, r13.w, r13.w
  mul r14.w, r14.w, r14.w
  mul r13.w, r13.w, r14.w
  mad r13.w, r13.w, l(0.980000), l(0.020000)
  if_nz r17.y
    if_z r12.w
      dp4 r16.x, r4.xyzw, r20.xyzw
      dp4 r16.y, r4.xyzw, r21.xyzw
      dp4 r12.w, r4.xyzw, r22.xyzw
      dp4 r14.w, r4.xyzw, r23.xyzw
      max r14.w, r14.w, l(0.000010)
      div r16.xy, r16.xyxx, r14.wwww
      mad r16.xy, r16.xyxx, r19.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
      round_ni r16.zw, r16.xxxy
      add r16.xy, -r16.zwzz, r16.xyxx
      add r16.zw, r16.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
      mul r16.zw, r19.zzzw, r16.zzzw
      mad r17.xy, -r16.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
      mad r17.zw, r16.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
      add r18.xy, -r16.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
      div r18.xy, r18.xyxx, r17.yxyy
      div r16.xy, r16.xyxx, r17.zwzz
      add r20.zw, r18.xxxy, l(0.000000, 0.000000, -1.000000, -1.000000)
      add r20.xy, r16.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
      mul r14.w, r17.x, r17.y
      mad r21.xyzw, r20.zwxw, r19.zwzw, r16.zwzw
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r15.w, r21.xyxx, t13.xxxx, s8, r12.w
      mul r16.xy, r17.xyxx, r17.zwzz
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r17.x, r21.zwzz, t13.xxxx, s8, r12.w
      mul r16.x, r16.x, r17.x
      mad r14.w, r14.w, r15.w, r16.x
      mad r19.xyzw, r20.zyxy, r19.zwzw, r16.zwzw
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r15.w, r19.xyxx, t13.xxxx, s8, r12.w
      mad r14.w, r16.y, r15.w, r14.w
      mul r15.w, r17.w, r17.z
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r12.w, r19.zwzz, t13.xxxx, s8, r12.w
      mad r12.w, r15.w, r12.w, r14.w
      mul r12.w, r12.w, l(0.062500)
    else 
      mov r12.w, l(1.000000)
    endif 
  else 
    mov r12.w, l(1.000000)
  endif 
  dp3_sat r13.x, -r13.yzxy, r3.yzwy
  mul r13.y, r13.x, r13.x
  mad r13.y, r13.y, r9.w, r9.z
  sqrt r13.y, r13.y
  mul r13.y, r5.x, r13.y
  mad r13.y, r13.x, r9.y, r13.y
  add r13.y, r13.y, r13.y
  max r13.y, r13.y, l(0.000100)
  div r13.y, l(1.000000, 1.000000, 1.000000, 1.000000), r13.y
  movc r13.z, r18.w, l(0.001500), l(0.050000)
  dp3_sat r14.w, r15.yzxy, r3.yzwy
  mul r14.w, r14.w, r14.w
  mad r14.w, r14.w, r8.y, l(1.000000)
  div r14.w, r6.x, r14.w
  mul r14.w, r14.w, r14.w
  mul r15.xyz, r14.wwww, r14.xyzx
  mul r15.xyz, r13.xxxx, r15.xyzx
  mul r15.xyz, r13.yyyy, r15.xyzx
  mul r15.xyz, r13.zzzz, r15.xyzx
  mul r15.xyz, r12.wwww, r15.xyzx
  mad r8.xzw, r15.xxyz, r13.wwww, r8.xxzw
  mul r13.xyz, r14.xyzx, r13.xxxx
  mad r7.yzw, r13.xxyz, r12.wwww, r7.yyzw
  iadd r11.w, r11.w, l(1)
endloop 
dp3 r0.z, r5.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
add_sat r1.xyz, cb5[5].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
add r2.w, r2.w, r2.w
mad r2.xyz, r3.wzyw, -r2.wwww, r2.xyzx
mul r3.yzw, r0.zzzz, r1.xxyz
mov r2.xyz, -r2.xyzx
mad r1.w, -r1.w, l(2.000000), l(6.000000)
sample_l_indexable(texturecube)(float,float,float,float) r2.xyz, r2.xyzx, t9.xyzw, s6, r1.w
mul r2.xyz, r2.xyzx, r3.yzwy
mad r2.xyz, r2.xyzx, cb5[11].xxxx, cb5[10].wwww
add r0.y, -r0.y, r3.x
mul r0.y, r0.y, -cb5[0].x
exp r0.y, r0.y
add r0.y, -r0.y, l(1.000000)
max r0.y, r0.y, l(0.000000)
add r3.xyz, r5.yzwy, r7.yzwy
mul r3.xyz, r3.xyzx, l(0.980000, 0.980000, 0.980000, 0.000000)
mad r2.xyz, r2.xyzx, r0.wwww, r8.xzwx
mul r1.xyz, r1.xyzx, cb5[4].xyzx
mul r0.z, r0.z, cb5[6].w
mul r0.z, r0.z, l(100.000000)
mul r4.xyz, r0.zzzz, r10.xyzx
mul r2.xyz, r0.yyyy, r2.xyzx
mad r1.xyz, r3.xyzx, r1.xyzx, r2.xyzx
mov r2.w, -r0.y
add r0.z, r2.w, l(1.000000)
mad r1.xyz, r4.xyzx, r0.zzzz, r1.xyzx
lt r0.zw, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[39].zzzw
and r0.z, r0.w, r0.z
if_nz r0.z
  add r3.xyz, v5.xyzx, -r25.xyzx
  dp3 r0.z, r3.xyzx, r3.xyzx
  sqrt r0.z, r0.z
  utof r3.xy, r6.yzyy
  mul r3.xy, r3.xyxx, cb0[40].zwzz
  add r0.z, r0.z, -cb6[0].w
  div r0.z, r0.z, cb6[0].z
  log r0.z, r0.z
  mul r0.z, r0.z, l(0.250000)
  ushr r0.w, cb6[2].z, l(1)
  utof r0.w, r0.w
  mul r0.z, r0.w, r0.z
  iadd r0.w, cb6[2].z, l(-1)
  itof r0.w, r0.w
  div r3.z, r0.z, r0.w
  sample_l_indexable(texture3d)(float,float,float,float) r4.xyz, r3.xyzx, t10.xyzw, s7, l(0.000000)
  sample_l_indexable(texture3d)(float,float,float,float) r0.z, r3.xyzx, t11.yzxw, s7, l(0.000000)
  ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r0.w, l(0), l(12), t2.xxxx
  mul r3.xyz, r0.wwww, r4.xyzx
else 
  add r4.xyz, v5.xyzx, -r25.xyzx
  dp3 r0.w, r4.xyzx, r4.xyzx
  sqrt r0.w, r0.w
  mad_sat r0.w, r0.w, cb0[35].y, cb0[35].x
  mul r1.w, r4.z, cb0[39].y
  max r1.w, r1.w, l(-125.000000)
  lt r3.w, l(0.000001), |r1.w|
  exp r4.x, -r1.w
  add r4.x, -r4.x, l(1.000000)
  div r1.w, r4.x, r1.w
  movc r1.w, r3.w, r1.w, l(1.000000)
  mad r1.w, r1.w, cb0[39].x, cb0[35].w
  mul r0.w, r0.w, r1.w
  mul r0.w, r0.w, -cb0[35].z
  exp r0.z, r0.w
  mad r3.xyz, -v2.xyzx, r0.zzzz, v2.xyzx
endif 
mad r1.xyz, r1.xyzx, r0.zzzz, r3.xyzx
mul r2.xyz, r0.yyyy, r1.xyzx
mad r0.xyzw, r0.xxxx, r2.xyzw, l(0.000000, 0.000000, 0.000000, 1.000000)
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r1.x, l(0), l(0), t2.xxxx
mul r0.xyz, r0.xyzx, r1.xxxx
max r0.xyz, r0.xyzx, l(0.0000610351999, 0.0000610351999, 0.0000610351999, 0.000000)
min o0.xyz, r0.xyzx, l(8192.000000, 8192.000000, 8192.000000, 0.000000)
mov o0.w, r0.w
ret 
// Approximately 920 instruction slots used