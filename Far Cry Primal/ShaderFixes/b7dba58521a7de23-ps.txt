// asmtool.py -i --fix-fcprimal-reflection --only-autofixed -fq b7dba58521a7de23-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//   using 3Dmigoto v1.2.31 on Wed Mar 02 08:07:12 2016
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4x4 InvProjectionMatrix;      // Offset:    0 Size:    64
//   float4x4 InvViewMatrix;            // Offset:   64 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  128 Size:    64 [unused]
//   float4x4 ViewMatrix;               // Offset:  192 Size:    64 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  256 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  320 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix_Previous;// Offset:  384 Size:    64 [unused]
//   float4 AmbientSHR;                 // Offset:  448 Size:    16 [unused]
//   float4 AmbientSHG;                 // Offset:  464 Size:    16 [unused]
//   float4 AmbientSHB;                 // Offset:  480 Size:    16 [unused]
//   float4 CameraDistances;            // Offset:  496 Size:    16 [unused]
//   float4 CameraNearPlaneSize;        // Offset:  512 Size:    16 [unused]
//   float4 DepthScale;                 // Offset:  528 Size:    16 [unused]
//   float4 DepthTextureScaleOffset;    // Offset:  544 Size:    16 [unused]
//   float4 FogParams;                  // Offset:  560 Size:    16
//   float4 FogSHB;                     // Offset:  576 Size:    16 [unused]
//   float4 FogSHG;                     // Offset:  592 Size:    16 [unused]
//   float4 FogSHR;                     // Offset:  608 Size:    16 [unused]
//   float4 HeightFogParams;            // Offset:  624 Size:    16
//   float4 ViewportSize;               // Offset:  640 Size:    16
//   float3 ViewPoint;                  // Offset:  656 Size:    12 [unused]
//   float3 CameraPosition;             // Offset:  672 Size:    12
//   float3 CameraPosition_Previous;    // Offset:  688 Size:    12 [unused]
//   float3 CameraPositionFractions;    // Offset:  704 Size:    12 [unused]
//   float3 CameraPositionFractions_Previous;// Offset:  720 Size:    12 [unused]
//   float3 CameraRight;                // Offset:  736 Size:    12 [unused]
//   float3 CameraUp;                   // Offset:  752 Size:    12 [unused]
//   float3 CameraDirection;            // Offset:  768 Size:    12
//   float3 EnvironmentMapColorOffset;  // Offset:  784 Size:    12 [unused]
//   float3 EnvironmentMapColorScale;   // Offset:  800 Size:    12 [unused]
//   float3 AmbientOcclusionRanges;     // Offset:  816 Size:    12 [unused]
//   float3 DepthTextureRcpSize;        // Offset:  832 Size:    12 [unused]
//   float2 MotionVectorOffsets;        // Offset:  848 Size:     8 [unused]
//   float2 DepthRangeCompression;      // Offset:  856 Size:     8 [unused]
//   float ShadowProjDepthMinValue;     // Offset:  864 Size:     4 [unused]
//   float DistanceScale;               // Offset:  868 Size:     4 [unused]
//   float WorldSpaceZOffset;           // Offset:  872 Size:     4 [unused]
//   float WorldSpaceZOffset_Previous;  // Offset:  876 Size:     4 [unused]
//   float CameraFOVDeg;                // Offset:  880 Size:     4 [unused]
//   float EffectsEmissiveEVBias;       // Offset:  884 Size:     4 [unused]
//   float ShadowCSMLastSliceIndex;     // Offset:  888 Size:     4
//   float UseNormalization;            // Offset:  892 Size:     4
//   float FogUndergroundColorScale;    // Offset:  896 Size:     4 [unused]
//
// }
//
// cbuffer CWaterReflectionParameterProvider
// {
//
//   float4x4 WaterReflectionTransform; // Offset:    0 Size:    64
//   float4 WaterReflectionPlane;       // Offset:   64 Size:    16 [unused]
//   float4 WaterReflectionTexCoordRange;// Offset:   80 Size:    16 [unused]
//   float WaterLevelAdjustment;        // Offset:   96 Size:     4 [unused]
//
// }
//
// cbuffer CSceneTerrainSkyOcclusionAtlasPrivateData
// {
//
//   float4 SectorOcclusion_OffsetScale;// Offset:    0 Size:    16
//   float3 SectorOcclusion_DistanceFade;// Offset:   16 Size:    12
//   float2 SectorOcclusion_HeightOffsetScale;// Offset:   32 Size:     8
//
// }
//
// cbuffer CAmbientProvider
// {
//
//   float4 CascadeDistanceScales[5];   // Offset:    0 Size:    80 [unused]
//   float4 CascadeNearFarSnappedOffsetCamera[5];// Offset:   80 Size:    80 [unused]
//   float4 CascadeNearFarRcpUVSize[5]; // Offset:  160 Size:    80 [unused]
//   float4 UndergroundSHR;             // Offset:  240 Size:    16
//   float4 UndergroundSHG;             // Offset:  256 Size:    16
//   float4 UndergroundSHB;             // Offset:  272 Size:    16
//   float InvUndergroundBlendEndHeight;// Offset:  288 Size:     4
//   float IndirectLightingScale;       // Offset:  292 Size:     4 [unused]
//
// }
//
// cbuffer CWaterParameterProvider
// {
//
//   float4 BorderAlphaMask;            // Offset:    0 Size:    16 [unused]
//   float ReflectionInvSquareFadeDistance;// Offset:   16 Size:     4
//   float ReflectionSquareFadeDistance;// Offset:   20 Size:     4
//   float SunLightScale;               // Offset:   24 Size:     4
//
// }
//
// cbuffer CWaterWaveParameterProvider
// {
//
//   float4 WaterWave_CameraCenter_FrontVector;// Offset:    0 Size:    16
//   float4 WaterWave_CameraRightVector_;// Offset:   16 Size:    16
//   float4 WaterWave_CameraTanFOVx_2_Near_Far;// Offset:   32 Size:    16
//
// }
//
// cbuffer WaterRiver
// {
//
//   float4 Extinctions;                // Offset:    0 Size:    16
//   float4 MaterialPickingID;          // Offset:   16 Size:    16 [unused]
//   float4 RefractionWaveInfo;         // Offset:   32 Size:    16 [unused]
//   float4 Specular;                   // Offset:   48 Size:    16
//   float4 WaterColor;                 // Offset:   64 Size:    16
//   float4 WaterColorModulation;       // Offset:   80 Size:    16
//   float3 LayerBlendCff;              // Offset:   96 Size:    12 [unused]
//   float CausticsIntensity;           // Offset:  108 Size:     4 [unused]
//   float3 LayerSpeed;                 // Offset:  112 Size:    12 [unused]
//   float CausticsScale;               // Offset:  124 Size:     4 [unused]
//   float2 BaseTiling;                 // Offset:  128 Size:     8 [unused]
//   float2 CenterDir;                  // Offset:  136 Size:     8 [unused]
//   float2 CenterTiling1;              // Offset:  144 Size:     8 [unused]
//   float2 DiffuseTiling;              // Offset:  152 Size:     8 [unused]
//   float DiffuseSpeedFactor;          // Offset:  160 Size:     4 [unused]
//   float NormalModifier;              // Offset:  164 Size:     4
//   float NormalOffsetScale;           // Offset:  168 Size:     4
//   float ReflectionColorOffset;       // Offset:  172 Size:     4
//   float ReflectionColorScale;        // Offset:  176 Size:     4
//   float ReflectionNormalOffsetScale; // Offset:  180 Size:     4
//
// }
//
// cbuffer CVolumetricFogBlendedProvider
// {
//
//   float4 VFDepthDistribution;        // Offset:    0 Size:    16
//   float4 VFDepthParams;              // Offset:   16 Size:    16 [unused]
//   int4 VFCellParams;                 // Offset:   32 Size:    16
//
// }
//
// cbuffer CTileLightingBlendedParameterProvider
// {
//
//   float4 CSMSlice0_0;                // Offset:    0 Size:    16
//   float4 CSMSlice0_1;                // Offset:   16 Size:    16
//   float4 CSMSlice0_2;                // Offset:   32 Size:    16
//   float4 CSMSlice1_0;                // Offset:   48 Size:    16
//   float4 CSMSlice1_1;                // Offset:   64 Size:    16
//   float4 CSMSlice1_2;                // Offset:   80 Size:    16
//   float4 CSMSlice2_0;                // Offset:   96 Size:    16
//   float4 CSMSlice2_1;                // Offset:  112 Size:    16
//   float4 CSMSlice2_2;                // Offset:  128 Size:    16
//   float4 CSMSliceFade;               // Offset:  144 Size:    16 [unused]
//   float4 ShadowMapSize;              // Offset:  160 Size:    16
//   float4 SunColor;                   // Offset:  176 Size:    16
//   float4 SunDirection;               // Offset:  192 Size:    16
//   int2 NumTiles;                     // Offset:  208 Size:     8
//   int LightCount;                    // Offset:  216 Size:     4 [unused]
//   int ParticlesSmallBufferFactor;    // Offset:  220 Size:     4 [unused]
//
// }
//
// Resource bind info for ExposureBuffer
// {
//
//   float4 $Element;                   // Offset:    0 Size:    16
//
// }
//
// Resource bind info for SHOccGlobalProbe
// {
//
//   float4 $Element;                   // Offset:    0 Size:    16
//
// }
//
// Resource bind info for SkyParamBuffer
// {
//
//   struct ComputedSkyParameters
//   {
//       
//       float r[9];                    // Offset:    0
//       float g[9];                    // Offset:   36
//       float b[9];                    // Offset:   72
//       float3 sunColor;               // Offset:  108
//       float3 moonColor;              // Offset:  120
//
//   } $Element;                        // Offset:    0 Size:   132
//
// }
//
// Resource bind info for LightsLightingData
// {
//
//   struct LightingData
//   {
//       
//       float4 pos;                    // Offset:    0
//       float4 color;                  // Offset:   16
//       float4 direction;              // Offset:   32
//       float attenuation;             // Offset:   48
//       float2 spotFactors;            // Offset:   52
//       uint flags;                    // Offset:   60
//       float4 clippingInfo;           // Offset:   64
//       float4 clipPlanes[3];          // Offset:   80
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
// Resource bind info for ShadowData
// {
//
//   struct ShadowProjTextureData
//   {
//       
//       float4 shadowMapSize;          // Offset:    0
//       float4x4 shadowProjectionMatrix;// Offset:   16
//       float4 spotScaleOffsetUVs;     // Offset:   80
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for LightIndicesPerTileForBlended
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for LightOutputPerTileForBlended
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// DepthVPSampler__SampObj__         sampler      NA          NA    0        1
// EnvironmentMapTexture__SampObj__    sampler      NA          NA    1        1
// EnvironmentMapBRDFTexture__SampObj__    sampler      NA          NA    2        1
// SectorHemiMapSamplerStateLinear    sampler      NA          NA    3        1
// WaterWaveTexture__SampObj__       sampler      NA          NA    4        1
// NormalTexture__SampObj__          sampler      NA          NA    5        1
// DiffuseTexture__SampObj__         sampler      NA          NA    6        1
// ColorClamp3D                      sampler      NA          NA    7        1
// ShadowCmpSampler                sampler_c      NA          NA    8        1
// ProjectedTexture0__SampObj__      sampler      NA          NA    9        1
// ReflectionRealTexture__SampObj__    sampler      NA          NA   10        1
// DepthVPSampler__TexObj__          texture  float4          2d    0        1
// EnvironmentMapTexture__TexObj__    texture  float4        cube    1        1
// EnvironmentMapBRDFTexture__TexObj__    texture  float4          2d    2        1
// ExposureBuffer                    texture  struct         r/o    3        1
// SHOccGlobalProbe                  texture  struct         r/o    4        1
// SkyParamBuffer                    texture  struct         r/o    5        1
// SectorOcclusion_HeightTexture__TexObj__    texture  float4          2d    6        1
// WaterWaveTexture__TexObj__        texture  float4          2d    7        1
// NormalTexture__TexObj__           texture  float4          2d    8        1
// DiffuseTexture__TexObj__          texture  float4          2d    9        1
// VFVolumeTextureRGB                texture  float4          3d   10        1
// VFVolumeTextureAlpha              texture  float4          3d   11        1
// ShadowCmpSampler_TextureObject    texture  float4     2darray   12        1
// ProjectedTexture0__TexObj__       texture  float4          2d   13        1
// DeferredShadowTexture             texture  float4          2d   14        1
// ReflectionRealTexture__TexObj__    texture  float4          2d   15        1
// LightsLightingData                texture  struct         r/o   16        1
// ShadowData                        texture  struct         r/o   17        1
// LightIndicesPerTileForBlended     texture  struct         r/o   18        1
// LightOutputPerTileForBlended      texture  struct         r/o   19        1
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CWaterReflectionParameterProvider    cbuffer      NA          NA    1        1
// CSceneTerrainSkyOcclusionAtlasPrivateData    cbuffer      NA          NA    2        1
// CAmbientProvider                  cbuffer      NA          NA    3        1
// CWaterParameterProvider           cbuffer      NA          NA    4        1
// CWaterWaveParameterProvider       cbuffer      NA          NA    5        1
// WaterRiver                        cbuffer      NA          NA    6        1
// CVolumetricFogBlendedProvider     cbuffer      NA          NA    7        1
// CTileLightingBlendedParameterProvider    cbuffer      NA          NA    8        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float     zw
// SV_IsFrontFace           0   x           9    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[56], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[19], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[3], immediateIndexed
dcl_constantbuffer cb6[12], immediateIndexed
dcl_constantbuffer cb7[3], immediateIndexed
dcl_constantbuffer cb8[14], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_comparison
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_structured t3, 16 
dcl_resource_structured t4, 16 
dcl_resource_structured t5, 132 
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t11
dcl_resource_texture2darray (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_structured t16, 128 
dcl_resource_structured t17, 96 
dcl_resource_structured t18, 4 
dcl_resource_structured t19, 4 
dcl_input_ps_siv linear noperspective centroid v0.xy, position
dcl_input_ps linear v1.xyzw
dcl_input_ps linear centroid v2.xyzw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.zw
dcl_output o0.xyzw
dcl_temps 29

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125
// stereo2mono copy of t15:
dcl_resource_texture2d (float,float,float,float) t100

ld_indexable(texture2d)(float,float,float,float) r26.xyzw, l(0, 0, 0, 0), t125.xyzw

mov_sat r0.x, v2.w
dp3 r0.y, v3.xyzx, v3.xyzx
sqrt r0.y, r0.y
add r1.xyz, -v5.xzyx, cb0[42].xzyx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xzw, v1.wxww, t8.yzwx, s5
mad r4.xy, r3.zxzz, l(2.007874, 2.007874, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r4.xyxx, r4.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r4.z, r0.w
sample_indexable(texture2d)(float,float,float,float) r5.xzw, v1.wyww, t8.yzwx, s5
mad r6.xy, r5.zxzz, l(2.007874, 2.007874, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r6.xyxx, r6.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r6.z, r0.w
sample_indexable(texture2d)(float,float,float,float) r7.xzw, v1.wzww, t8.yzwx, s5
mad r8.xy, r7.zxzz, l(2.007874, 2.007874, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r8.xyxx, r8.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r8.z, r0.w
mul r3.xyz, r4.xyzx, v4.xxxx
mul r5.xyz, r6.xyzx, v4.yyyy
mul r7.xyz, r8.xyzx, v4.zzzz
add r3.xyzw, r3.xyzw, r5.xyzw
add r3.xyzw, r3.xyzw, r7.xyzw
mul r4.yw, r3.yyyx, cb6[10].yyyy
mov r4.z, r3.z
dp3 r0.w, r4.yzwy, r4.yzwy
rsq r0.w, r0.w
mul r1.w, r3.w, cb6[3].x
mul r3.x, r0.y, l(0.010000)
add r5.xy, v5.xyxx, -cb5[0].xyxx
dp2 r2.w, cb5[0].zwzz, r5.xyxx
mul r3.w, cb5[2].z, cb5[2].y
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
mad r2.w, r3.w, r2.w, -cb5[2].z
add r4.x, -cb5[2].z, cb5[2].y
div r2.w, r2.w, r4.x
mov r5.x, -r3.x
mov r5.y, l(0)
add r5.xy, r5.xyxx, v5.xyxx
add r5.xy, r5.xyxx, -cb5[0].xyxx
dp2 r5.z, cb5[0].zwzz, r5.xyxx
dp2 r5.x, cb5[1].xyxx, r5.xyxx
div r5.y, l(1.000000, 1.000000, 1.000000, 1.000000), r5.z
mad r5.y, r3.w, r5.y, -cb5[2].z
div r6.y, r5.y, r4.x
mul r5.y, r5.z, cb5[2].x
div r5.x, r5.x, r5.y
mad r6.x, r5.x, l(0.500000), l(0.500000)
mov r3.y, l(0)
add r5.xyzw, r3.xyyx, v5.xyxy
add r5.xyzw, r5.xyzw, -cb5[0].xyxy
dp2 r6.z, cb5[0].zwzz, r5.xyxx
dp2 r5.x, cb5[1].xyxx, r5.xyxx
div r5.y, l(1.000000, 1.000000, 1.000000, 1.000000), r6.z
mad r5.y, r3.w, r5.y, -cb5[2].z
div r7.y, r5.y, r4.x
mul r5.y, r6.z, cb5[2].x
div r5.x, r5.x, r5.y
mad r7.x, r5.x, l(0.500000), l(0.500000)
mov r3.z, -r3.x
add r3.yz, r3.yyzy, v5.xxyx
add r3.yz, r3.yyzy, -cb5[0].xxyx
dp2 r5.x, cb5[0].zwzz, r3.yzyy
dp2 r3.y, cb5[1].xyxx, r3.yzyy
div r3.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.x
mad r3.z, r3.w, r3.z, -cb5[2].z
div r8.y, r3.z, r4.x
mul r3.z, r5.x, cb5[2].x
div r3.y, r3.y, r3.z
mad r8.x, r3.y, l(0.500000), l(0.500000)
dp2 r3.y, cb5[0].zwzz, r5.zwzz
dp2 r3.z, cb5[1].xyxx, r5.zwzz
div r5.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.y
mad r3.w, r3.w, r5.x, -cb5[2].z
div r5.y, r3.w, r4.x
mul r3.y, r3.y, cb5[2].x
div r3.y, r3.z, r3.y
mad r5.x, r3.y, l(0.500000), l(0.500000)
sample_indexable(texture2d)(float,float,float,float) r3.y, r6.xyxx, t7.yxzw, s4
sample_indexable(texture2d)(float,float,float,float) r3.z, r7.xyxx, t7.yzxw, s4
sample_indexable(texture2d)(float,float,float,float) r3.w, r8.xyxx, t7.yzwx, s4
sample_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t7.xyzw, s4
add r5.w, -r3.y, r3.z
add r5.y, -r3.w, r4.x
div r3.xy, r5.ywyy, r3.xxxx
add r2.w, r2.w, l(-0.900000)
mul_sat r2.w, r2.w, l(10.000000)
mad r2.w, r2.w, l(-0.050000), l(0.050000)
mul r3.yw, r2.wwww, r3.xxxy
mov r3.z, l(0)
mad r3.xyz, r4.yzwy, r0.wwww, r3.yzwy
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.yzw, r0.wwww, r3.xxyz
mad r4.xy, r3.wyww, cb6[10].zzzz, v8.zwzz
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyxx, t9.xyzw, s6
mad r5.xy, r3.wyww, cb6[10].zzzz, v5.xyxx
mul r0.w, |cb0[48].z|, l(0.100000)
dp3 r2.w, r3.wzyw, r2.xyzx
mov_sat r6.x, r2.w
mad r7.x, r6.x, l(0.968750), l(0.015625)
mad r7.y, r1.w, l(0.322916657), l(0.015625)
sample_l_indexable(texture2d)(float,float,float,float) r6.yz, r7.xyxx, t2.zxyw, s2, l(0.000000)
mad_sat r0.w, r0.w, r6.z, r6.y
mov r3.x, l(1.000000)
mul r7.xyzw, r3.xyzw, l(0.282094806, 0.488602519, 0.488602519, 0.488602519)
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r8.xyzw, l(0), l(0), t4.xyzw
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r9.xyzw, l(1), l(0), t4.xyzw
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r10.xyzw, l(2), l(0), t4.xyzw
dp4 r8.x, r8.xyzw, r7.xyzw
dp4 r8.y, r9.xyzw, r7.xyzw
dp4 r8.z, r10.xyzw, r7.xyzw
max r6.yzw, r8.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r8.xyzw, l(0), l(108), t5.yzxw
dp3 r3.x, r8.zxyz, l(0.212600, 0.715200, 0.072200, 0.000000)
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r8.xyz, l(0), l(120), t5.yzxx
dp3 r8.w, r8.wxyw, l(0.212600, 0.715200, 0.072200, 0.000000)
max r3.x, r3.x, r8.w
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r8.w, l(0), l(0), t5.xxxx
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r9.x, l(0), l(36), t5.xxxx
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r9.y, l(0), l(72), t5.xxxx
max r9.x, r9.y, r9.x
max r8.w, r8.w, r9.x
add r3.x, r3.x, r8.w
mul r9.xyz, r3.xxxx, r6.yzwy
dp4 r10.x, cb3[15].xyzw, r7.xyzw
dp4 r10.y, cb3[16].xyzw, r7.xyzw
dp4 r10.z, cb3[17].xyzw, r7.xyzw
max r7.xyz, r10.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r10.xy, v5.yxyy, cb2[0].yxyy, cb2[0].wzww
sample_l_indexable(texture2d)(float,float,float,float) r7.w, r10.xyxx, t6.xzwy, s3, l(0.000000)
mad r7.w, r7.w, cb2[2].x, cb2[2].y
add r7.w, -r7.w, v5.z
mul_sat r7.w, -r7.w, cb3[18].x
sqrt r7.w, r7.w
add r10.xy, v5.xyxx, -cb0[42].xyxx
dp2 r9.w, r10.xyxx, r10.xyxx
mad r10.x, cb2[1].x, r9.w, cb2[1].y
mul_sat r10.x, r10.x, l(3.000000)
mul r7.w, r7.w, r10.x
mad r6.yzw, -r6.yyzw, r3.xxxx, r7.xxyz
mad r6.yzw, r7.wwww, r6.yyzw, r9.xxyz
div r7.xy, v7.xyxx, v7.zzzz
sample_l_indexable(texture2d)(float,float,float,float) r7.z, r7.xyxx, t0.yzxw, s0, l(0.000000)
mov r7.w, l(1.000000)
dp4 r3.x, r7.xyzw, cb0[2].xyzw
dp4 r7.x, r7.xyzw, cb0[3].xyzw
div r3.x, -r3.x, r7.x
mul r3.x, r0.y, -r3.x
div r3.x, r3.x, v3.z
mad r7.xy, -r1.wwww, l(0.330000, 1.66666663, 0.000000, 0.000000), l(1.000000, 5.000000, 0.000000, 0.000000)
mul r7.x, r7.x, r7.x
max r7.x, r7.x, l(0.001000)
ftou r7.zw, v0.xxxy
ushr r9.xy, r7.zwzz, l(3, 3, 0, 0)
imad r9.x, r9.y, cb8[13].x, r9.x
mov r5.z, v5.z
mov r5.w, l(1.000000)
dp4 r10.x, r5.xyzw, cb8[6].xyzw
dp4 r10.y, r5.xyzw, cb8[7].xyzw
dp4 r10.z, r5.xyzw, cb8[8].xyzw
dp4 r11.x, r5.xyzw, cb8[3].xyzw
dp4 r11.y, r5.xyzw, cb8[4].xyzw
dp4 r11.z, r5.xyzw, cb8[5].xyzw
add r12.xyz, r11.xyzx, l(-0.000000, -0.000000, -0.001000, 0.000000)
ge r13.xyz, r12.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r13.xyz, r13.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
ge r12.xyz, l(1.000000, 1.000000, 1.000000, 0.000000), r12.xyzx
and r12.xyz, r12.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r12.xyz, r12.xyzx, r13.xyzx
dp3 r9.y, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
ge r9.y, r9.y, l(3.000000)
mov r11.w, l(1.000000)
mov r10.w, l(2.000000)
movc r12.xyzw, r9.yyyy, r11.xyzw, r10.xyzw
dp4 r13.x, r5.xyzw, cb8[0].xyzw
dp4 r13.y, r5.xyzw, cb8[1].xyzw
dp4 r13.z, r5.xyzw, cb8[2].xyzw
add r14.xyz, r13.xyzx, l(-0.000000, -0.000000, -0.001000, 0.000000)
ge r15.xyz, r14.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r15.xyz, r15.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
ge r14.xyz, l(1.000000, 1.000000, 1.000000, 0.000000), r14.xyzx
and r14.xyz, r14.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r14.xyz, r14.xyzx, r15.xyzx
dp3 r9.y, r14.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
ge r9.y, r9.y, l(3.000000)
mov r13.w, l(0)
movc r12.xyzw, r9.yyyy, r13.xyzw, r12.xyzw
min r14.z, r12.w, cb0[55].z
eq r9.y, r14.z, cb0[55].z
if_nz r9.y
  ftoi r15.xy, v0.xyxx
  mov r15.zw, l(0,0,0,0)
  ld_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r9.y, r15.xyzw, t14.yxzw
  mad r15.xy, r10.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  add r15.xy, |r15.xyxx|, l(-0.800000, -0.800000, 0.000000, 0.000000)
  mul_sat r15.xy, r15.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000)
  add r15.xy, -r15.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  add r9.z, r10.z, l(-0.500000)
  mad r9.z, -|r9.z|, l(2.000000), l(1.000000)
  max r9.z, r9.z, l(0.000000)
  min r9.z, r9.z, l(0.200000)
  mul r9.z, r9.z, l(5.000000)
  min r10.w, r15.y, r15.x
  min r9.z, r9.z, r10.w
  mad r15.xy, r12.xyxx, cb8[10].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  round_ni r15.zw, r15.xxxy
  add r15.xy, -r15.zwzz, r15.xyxx
  add r15.zw, r15.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
  mad r16.xy, -r15.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
  mad r16.zw, r15.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
  add r17.xy, -r15.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
  div r17.xy, r17.xyxx, r16.yxyy
  div r15.xy, r15.xyxx, r16.zwzz
  add r17.zw, r17.xxxy, l(0.000000, 0.000000, -1.000000, -1.000000)
  add r17.xy, r15.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  mul r10.w, r16.x, r16.y
  mul r18.xyzw, r17.zwxw, cb8[10].zwzw
  mad r19.xy, r15.zwzz, cb8[10].zwzz, r18.xyxx
  mov r19.z, cb0[55].z
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r11.w, r19.xyzx, t12.xxxx, s8, r12.z
  mul r15.xy, r16.xyxx, r16.zwzz
  mad r18.xy, r15.zwzz, cb8[10].zwzz, r18.zwzz
  mov r18.z, cb0[55].z
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r12.w, r18.xyzx, t12.xxxx, s8, r12.z
  mul r12.w, r12.w, r15.x
  mad r10.w, r10.w, r11.w, r12.w
  mul r17.xyzw, r17.zyxy, cb8[10].zwzw
  mad r18.xy, r15.zwzz, cb8[10].zwzz, r17.xyxx
  mov r18.z, cb0[55].z
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r11.w, r18.xyzx, t12.xxxx, s8, r12.z
  mad r10.w, r15.y, r11.w, r10.w
  mul r11.w, r16.w, r16.z
  mad r15.xy, r15.zwzz, cb8[10].zwzz, r17.zwzz
  mov r15.z, cb0[55].z
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r12.w, r15.xyzx, t12.xxxx, s8, r12.z
  mad r10.w, r11.w, r12.w, r10.w
  mad r10.w, r10.w, l(0.062500), -r9.y
  mad r9.y, r9.z, r10.w, r9.y
else 
  eq r9.z, r14.z, l(1.000000)
  if_nz r9.z
    mad r15.xy, r12.xyxx, cb8[10].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    round_ni r15.zw, r15.xxxy
    add r15.xy, -r15.zwzz, r15.xyxx
    add r15.zw, r15.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
    mul r16.xy, r15.zwzz, cb8[10].zwzz
    mad r16.zw, -r15.yyyx, l(0.000000, 0.000000, 3.000000, 3.000000), l(0.000000, 0.000000, 4.000000, 4.000000)
    mad r17.xy, r15.xyxx, l(3.000000, 3.000000, 0.000000, 0.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
    mad r17.zw, -r15.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
    div r17.zw, r17.zzzw, r16.wwwz
    add r18.xy, r15.xyxx, l(3.000000, 3.000000, 0.000000, 0.000000)
    div r15.xy, r15.xyxx, r17.xyxx
    add r19.xw, r17.zzzw, l(-2.000000, 0.000000, 0.000000, -2.000000)
    mul r19.yz, r18.yyxy, l(0.000000, 0.142857149, 0.142857149, 0.000000)
    add r18.xy, r15.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
    mul r9.z, r16.z, r16.w
    mul r20.xyzw, r19.xwzw, cb8[10].zwzw
    mad r21.xy, r15.zwzz, cb8[10].zwzz, r20.xyxx
    mov r21.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.w, r21.xyzx, t12.xxxx, s8, r12.z
    mul r15.xy, r16.zwzz, l(7.000000, 7.000000, 0.000000, 0.000000)
    mad r20.xy, r15.zwzz, cb8[10].zwzz, r20.zwzz
    mov r20.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r11.w, r20.xyzx, t12.xxxx, s8, r12.z
    mul r11.w, r11.w, r15.x
    mad r9.z, r9.z, r10.w, r11.w
    mul r16.zw, r16.zzzw, r17.xxxy
    mov r18.zw, r19.wwwy
    mul r20.xyzw, r18.xzxw, cb8[10].zwzw
    mad r21.xy, r15.zwzz, cb8[10].zwzz, r20.xyxx
    mov r21.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.w, r21.xyzx, t12.xxxx, s8, r12.z
    mad r9.z, r16.z, r10.w, r9.z
    mul r21.xyzw, r19.xyzy, cb8[10].zwzw
    mad r22.xy, r15.zwzz, cb8[10].zwzz, r21.xyxx
    mov r22.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.w, r22.xyzx, t12.xxxx, s8, r12.z
    mad r9.z, r15.y, r10.w, r9.z
    mad r21.xy, r15.zwzz, cb8[10].zwzz, r21.zwzz
    mov r21.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.w, r21.xyzx, t12.xxxx, s8, r12.z
    mad r9.z, r10.w, l(49.000000), r9.z
    mul r15.xy, r17.xyxx, l(7.000000, 7.000000, 0.000000, 0.000000)
    mad r20.xy, r15.zwzz, cb8[10].zwzz, r20.zwzz
    mov r20.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.w, r20.xyzx, t12.xxxx, s8, r12.z
    mad r9.z, r15.x, r10.w, r9.z
    mov r19.y, r18.y
    mul r19.xyzw, r19.xyzy, cb8[10].zwzw
    mad r20.xy, r15.zwzz, cb8[10].zwzz, r19.xyxx
    mov r20.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.w, r20.xyzx, t12.xxxx, s8, r12.z
    mad r9.z, r16.w, r10.w, r9.z
    mad r19.xy, r15.zwzz, cb8[10].zwzz, r19.zwzz
    mov r19.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.w, r19.xyzx, t12.xxxx, s8, r12.z
    mad r9.z, r15.y, r10.w, r9.z
    mul r10.w, r17.y, r17.x
    mad r15.xy, r18.xyxx, cb8[10].zwzz, r16.xyxx
    mov r15.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r11.w, r15.xyzx, t12.xxxx, s8, r12.z
    mad r9.z, r10.w, r11.w, r9.z
    mul r9.y, r9.z, l(0.00694444450)
    mad r15.xy, r11.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
    add r15.xy, |r15.xyxx|, l(-0.800000, -0.800000, 0.000000, 0.000000)
    mul_sat r15.xy, r15.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000)
    add r15.xy, -r15.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    add r10.w, r11.z, l(-0.500000)
    mad r10.w, -|r10.w|, l(2.000000), l(1.000000)
    max r10.w, r10.w, l(0.000000)
    min r10.w, r10.w, l(0.200000)
    mul r10.w, r10.w, l(5.000000)
    min r11.w, r15.y, r15.x
    min r10.w, r10.w, r11.w
    ne r11.w, r10.w, l(1.000000)
    if_nz r11.w
      mad r10.xy, r10.xyxx, cb8[10].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
      round_ni r15.xy, r10.xyxx
      add r10.xy, r10.xyxx, -r15.xyxx
      add r15.xy, r15.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
      mad r15.zw, -r10.yyyx, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
      mad r16.xy, r10.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
      add r16.zw, -r10.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000)
      div r16.zw, r16.zzzw, r15.wwwz
      div r10.xy, r10.xyxx, r16.xyxx
      add r17.zw, r16.zzzw, l(0.000000, 0.000000, -1.000000, -1.000000)
      add r17.xy, r10.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
      mul r10.x, r15.z, r15.w
      mul r18.xyzw, r17.zwxw, cb8[10].zwzw
      mad r19.xy, r15.xyxx, cb8[10].zwzz, r18.xyxx
      mov r19.z, l(2.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.y, r19.xyzx, t12.xxxx, s8, r10.z
      mul r15.zw, r15.zzzw, r16.xxxy
      mad r18.xy, r15.xyxx, cb8[10].zwzz, r18.zwzz
      mov r18.z, l(2.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r11.w, r18.xyzx, t12.xxxx, s8, r10.z
      mul r11.w, r11.w, r15.z
      mad r10.x, r10.x, r10.y, r11.w
      mul r17.xyzw, r17.zyxy, cb8[10].zwzw
      mad r18.xy, r15.xyxx, cb8[10].zwzz, r17.xyxx
      mov r18.z, l(2.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.y, r18.xyzx, t12.xxxx, s8, r10.z
      mad r10.x, r15.w, r10.y, r10.x
      mul r10.y, r16.y, r16.x
      mad r15.xy, r15.xyxx, cb8[10].zwzz, r17.zwzz
      mov r15.z, l(2.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.z, r15.xyzx, t12.xxxx, s8, r10.z
      mad r10.x, r10.y, r10.z, r10.x
      mul r10.x, r10.x, l(0.062500)
      mad r9.z, r9.z, l(0.00694444450), -r10.x
      mad r9.y, r10.w, r9.z, r10.x
    endif 
  else 
    mad r10.xy, r12.xyxx, cb8[10].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    round_ni r10.zw, r10.xxxy
    add r10.xy, -r10.zwzz, r10.xyxx
    add r10.zw, r10.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
    mul r12.xy, r10.zwzz, cb8[10].zwzz
    mad r15.xyzw, r10.xxxx, l(11.000000, 11.000000, 5.000000, 5.000000), l(-28.000000, 17.000000, -6.000000, 1.000000)
    mad r16.xyz, r10.xxxx, l(4.000000, 4.000000, 7.000000, 0.000000), l(-5.000000, -16.000000, 5.000000, 0.000000)
    div r16.xyz, r16.xyzx, r15.zxyz
    add r16.xyz, r16.yxzy, l(-1.000000, -3.000000, 1.000000, 0.000000)
    div r9.z, r10.x, r15.w
    add r17.x, r9.z, l(3.000000)
    mad r18.xyzw, r10.yyyy, l(11.000000, 11.000000, 5.000000, 5.000000), l(-28.000000, 17.000000, -6.000000, 1.000000)
    mad r19.xyz, r10.yyyy, l(4.000000, 4.000000, 7.000000, 0.000000), l(-5.000000, -16.000000, 5.000000, 0.000000)
    div r19.xyz, r19.xyzx, r18.zxyz
    add r19.xyz, r19.xyzx, l(-3.000000, -1.000000, 1.000000, 0.000000)
    div r9.z, r10.y, r18.w
    add r20.y, r9.z, l(3.000000)
    mul r21.xyzw, r15.zxzx, r18.zzxx
    mov r16.w, r19.x
    mul r22.xyzw, r16.ywxw, cb8[10].zwzw
    mad r14.xy, r10.zwzz, cb8[10].zwzz, r22.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r9.z, r14.xyzx, t12.xxxx, s8, r12.z
    mad r14.xy, r10.zwzz, cb8[10].zwzz, r22.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.x, r14.xyzx, t12.xxxx, s8, r12.z
    mul r10.x, r10.x, r21.y
    mad r9.z, r21.x, r9.z, r10.x
    mul r22.xyzw, -r15.ywyw, r18.zzxx
    mad r14.xy, r16.zwzz, cb8[10].zwzz, r12.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.x, r14.xyzx, t12.xxxx, s8, r12.z
    mad r9.z, r22.x, r10.x, r9.z
    mov r17.y, r16.w
    mad r14.xy, r17.xyxx, cb8[10].zwzz, r12.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.x, r14.xyzx, t12.xxxx, s8, r12.z
    mad r9.z, r22.y, r10.x, r9.z
    mov r19.w, r16.y
    mul r23.xyzw, r19.wywz, cb8[10].zwzw
    mad r14.xy, r10.zwzz, cb8[10].zwzz, r23.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.x, r14.xyzx, t12.xxxx, s8, r12.z
    mad r9.z, r21.z, r10.x, r9.z
    mov r16.yw, r19.yyyz
    mul r24.xyzw, r16.xyzy, cb8[10].zwzw
    mad r14.xy, r10.zwzz, cb8[10].zwzz, r24.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.x, r14.xyzx, t12.xxxx, s8, r12.z
    mad r9.z, r21.w, r10.x, r9.z
    mad r14.xy, r10.zwzz, cb8[10].zwzz, r24.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.x, r14.xyzx, t12.xxxx, s8, r12.z
    mad r9.z, r22.z, r10.x, r9.z
    mov r17.zw, r16.yyyw
    mul r21.xyzw, r17.xzxw, cb8[10].zwzw
    mad r14.xy, r10.zwzz, cb8[10].zwzz, r21.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.x, r14.xyzx, t12.xxxx, s8, r12.z
    mad r9.z, r22.w, r10.x, r9.z
    mul r22.xyzw, r15.zxzx, -r18.yyww
    mad r14.xy, r10.zwzz, cb8[10].zwzz, r23.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.x, r14.xyzx, t12.xxxx, s8, r12.z
    mad r9.z, r22.x, r10.x, r9.z
    mul r23.xyzw, r16.xwzw, cb8[10].zwzw
    mad r14.xy, r10.zwzz, cb8[10].zwzz, r23.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.x, r14.xyzx, t12.xxxx, s8, r12.z
    mad r9.z, r22.y, r10.x, r9.z
    mul r15.xyzw, r15.ywyw, r18.yyww
    mad r14.xy, r10.zwzz, cb8[10].zwzz, r23.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.x, r14.xyzx, t12.xxxx, s8, r12.z
    mad r9.z, r15.x, r10.x, r9.z
    mad r14.xy, r10.zwzz, cb8[10].zwzz, r21.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.x, r14.xyzx, t12.xxxx, s8, r12.z
    mad r9.z, r15.y, r10.x, r9.z
    mov r20.x, r19.w
    mad r14.xy, r20.xyxx, cb8[10].zwzz, r12.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.x, r14.xyzx, t12.xxxx, s8, r12.z
    mad r9.z, r22.z, r10.x, r9.z
    mov r20.zw, r16.xxxz
    mul r16.xyzw, r20.zywy, cb8[10].zwzw
    mad r14.xy, r10.zwzz, cb8[10].zwzz, r16.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.x, r14.xyzx, t12.xxxx, s8, r12.z
    mad r9.z, r22.w, r10.x, r9.z
    mad r14.xy, r10.zwzz, cb8[10].zwzz, r16.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.x, r14.xyzx, t12.xxxx, s8, r12.z
    mad r9.z, r15.z, r10.x, r9.z
    mov r20.x, r17.x
    mad r14.xy, r20.xyxx, cb8[10].zwzz, r12.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.x, r14.xyzx, t12.xxxx, s8, r12.z
    mad r9.z, r15.w, r10.x, r9.z
    mul r9.y, r9.z, l(0.000369822490)
    mad r10.xy, r13.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
    add r10.xy, |r10.xyxx|, l(-0.800000, -0.800000, 0.000000, 0.000000)
    mul_sat r10.xy, r10.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000)
    add r10.xy, -r10.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    add r10.z, r13.z, l(-0.500000)
    mad r10.z, -|r10.z|, l(2.000000), l(1.000000)
    max r10.z, r10.z, l(0.000000)
    min r10.z, r10.z, l(0.200000)
    mul r10.z, r10.z, l(5.000000)
    min r10.x, r10.y, r10.x
    min r10.x, r10.z, r10.x
    ne r10.y, r10.x, l(1.000000)
    if_nz r10.y
      mad r10.yz, r11.xxyx, cb8[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000)
      round_ni r11.xy, r10.yzyy
      add r10.yz, r10.yyzy, -r11.xxyx
      add r11.xy, r11.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
      mul r12.xy, r11.xyxx, cb8[10].zwzz
      mad r12.zw, -r10.zzzy, l(0.000000, 0.000000, 3.000000, 3.000000), l(0.000000, 0.000000, 4.000000, 4.000000)
      mad r13.xy, r10.yzyy, l(3.000000, 3.000000, 0.000000, 0.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
      mad r13.zw, -r10.yyyz, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
      div r13.zw, r13.zzzw, r12.wwwz
      add r14.xy, r10.yzyy, l(3.000000, 3.000000, 0.000000, 0.000000)
      div r10.yz, r10.yyzy, r13.xxyx
      add r15.xw, r13.zzzw, l(-2.000000, 0.000000, 0.000000, -2.000000)
      mul r15.yz, r14.yyxy, l(0.000000, 0.142857149, 0.142857149, 0.000000)
      add r14.xy, r10.yzyy, l(2.000000, 2.000000, 0.000000, 0.000000)
      mul r10.y, r12.z, r12.w
      mul r16.xyzw, r15.xwzw, cb8[10].zwzw
      mad r17.xy, r11.xyxx, cb8[10].zwzz, r16.xyxx
      mov r17.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.z, r17.xyzx, t12.xxxx, s8, r11.z
      mul r13.zw, r12.zzzw, l(0.000000, 0.000000, 7.000000, 7.000000)
      mad r16.xy, r11.xyxx, cb8[10].zwzz, r16.zwzz
      mov r16.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.w, r16.xyzx, t12.xxxx, s8, r11.z
      mul r10.w, r10.w, r13.z
      mad r10.y, r10.y, r10.z, r10.w
      mul r10.zw, r12.zzzw, r13.xxxy
      mov r14.zw, r15.wwwy
      mul r16.xyzw, r14.xzxw, cb8[10].zwzw
      mad r17.xy, r11.xyxx, cb8[10].zwzz, r16.xyxx
      mov r17.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r11.w, r17.xyzx, t12.xxxx, s8, r11.z
      mad r10.y, r10.z, r11.w, r10.y
      mul r17.xyzw, r15.xyzy, cb8[10].zwzw
      mad r18.xy, r11.xyxx, cb8[10].zwzz, r17.xyxx
      mov r18.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.z, r18.xyzx, t12.xxxx, s8, r11.z
      mad r10.y, r13.w, r10.z, r10.y
      mad r17.xy, r11.xyxx, cb8[10].zwzz, r17.zwzz
      mov r17.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.z, r17.xyzx, t12.xxxx, s8, r11.z
      mad r10.y, r10.z, l(49.000000), r10.y
      mul r12.zw, r13.xxxy, l(0.000000, 0.000000, 7.000000, 7.000000)
      mad r16.xy, r11.xyxx, cb8[10].zwzz, r16.zwzz
      mov r16.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.z, r16.xyzx, t12.xxxx, s8, r11.z
      mad r10.y, r12.z, r10.z, r10.y
      mov r15.y, r14.y
      mul r15.xyzw, r15.xyzy, cb8[10].zwzw
      mad r16.xy, r11.xyxx, cb8[10].zwzz, r15.xyxx
      mov r16.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.z, r16.xyzx, t12.xxxx, s8, r11.z
      mad r10.y, r10.w, r10.z, r10.y
      mad r15.xy, r11.xyxx, cb8[10].zwzz, r15.zwzz
      mov r15.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.z, r15.xyzx, t12.xxxx, s8, r11.z
      mad r10.y, r12.w, r10.z, r10.y
      mul r10.z, r13.y, r13.x
      mad r12.xy, r14.xyxx, cb8[10].zwzz, r12.xyxx
      mov r12.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r10.w, r12.xyzx, t12.xxxx, s8, r11.z
      mad r10.y, r10.z, r10.w, r10.y
      mul r10.y, r10.y, l(0.00694444450)
      mad r9.z, r9.z, l(0.000369822490), -r10.y
      mad r9.y, r10.x, r9.z, r10.y
    endif 
  endif 
endif 
mul r10.xyz, cb4[1].zzzz, cb8[11].xyzx
mul r10.xyz, r9.yyyy, r10.xyzx
mad r11.xyz, r1.xzyx, r0.zzzz, -cb8[12].xyzx
dp3 r9.y, r11.xyzx, r11.xyzx
rsq r9.y, r9.y
mul r11.xyz, r9.yyyy, r11.xyzx
dp3 r9.y, r11.xzyx, r2.xyzx
add r9.y, -r9.y, l(1.000000)
mul r9.z, r9.y, r9.y
mul r9.z, r9.z, r9.z
mul r9.y, r9.y, r9.z
mad r9.y, r9.y, l(0.980000), l(0.020000)
dp3_sat r9.z, -cb8[12].yzxy, r3.yzwy
mul r10.w, r6.x, r6.x
mul r11.w, r7.x, r7.x
mad r12.x, -r7.x, r7.x, l(1.000000)
mad r10.w, r10.w, r12.x, r11.w
sqrt r10.w, r10.w
mul r12.y, r9.z, r9.z
mad r12.y, r12.y, r12.x, r11.w
sqrt r12.y, r12.y
mul r12.y, r6.x, r12.y
mad r12.y, r9.z, r10.w, r12.y
add r12.y, r12.y, r12.y
max r12.y, r12.y, l(0.000100)
div r12.y, l(1.000000, 1.000000, 1.000000, 1.000000), r12.y
dp3_sat r11.x, r11.yzxy, r3.yzwy
mad r11.y, r7.x, r7.x, l(-1.000000)
mul r11.x, r11.x, r11.x
mad r11.x, r11.x, r11.y, l(1.000000)
div r11.x, r7.x, r11.x
mul r11.x, r11.x, r11.x
mul r13.xyz, r10.xyzx, r11.xxxx
mul r13.xyz, r9.zzzz, r13.xyzx
mul r12.yzw, r12.yyyy, r13.xxyz
mul r12.yzw, r9.yyyy, r12.yyzw
mul r10.xyz, r10.xyzx, r9.zzzz
ishl r9.y, r9.x, l(1)
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.y, r9.y, l(0), t18.xxxx
countbits r9.z, r9.y
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.x, r9.x, l(0), t19.xxxx
and r11.x, r11.x, l(0x60000000)
ine r11.x, r11.x, l(0)
mov r13.xyz, r10.xyzx
mov r14.xyz, r12.yzwy
mov r11.z, r9.y
mov r13.w, l(0)
loop 
  uge r14.w, r13.w, r9.z
  breakc_nz r14.w
  firstbit_lo r14.w, r11.z
  ishl r15.x, l(1), r14.w
  not r15.x, r15.x
  and r11.z, r11.z, r15.x
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r15.xyzw, r14.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r16.xyz, r14.w, l(16), t16.xyzx
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyz, r14.w, l(32), t16.xyzx
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyzw, r14.w, l(48), t16.xyzw
  and r19.xyzw, r18.wwww, l(32, 16, 1, 4)
  ult r20.xyzw, l(0, 0, 0, 0), r19.xyzw
  ushr r14.w, r18.w, l(5)
  and r14.w, r14.w, l(2)
  or r16.w, r20.y, r20.x
  and r16.w, r11.x, r16.w
  if_nz r16.w
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r21.xyzw, r14.w, l(0), t17.xyzw
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r22.xyzw, r14.w, l(16), t17.xyzw
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r23.xyzw, r14.w, l(32), t17.xyzw
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r24.xyzw, r14.w, l(48), t17.xyzw
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r14.w, l(64), t17.xyzw
  else 
    mov r21.xyzw, l(0,0,0,0)
    mov r22.xyzw, l(0,0,0,0)
    mov r23.xyzw, l(0,0,0,0)
    mov r24.xyzw, l(0,0,0,0)
    mov r25.xyzw, l(0,0,0,0)
  endif 
  add r15.xyz, -r15.xyzx, v5.xyzx
  dp3 r16.w, r15.xyzx, r15.xyzx
  max r17.w, r16.w, l(0.000010)
  div r18.w, l(1.000000, 1.000000, 1.000000, 1.000000), r17.w
  min r15.w, r15.w, r18.w
  mul r17.w, r17.w, r17.w
  mad_sat r17.w, -r17.w, r18.x, l(1.000000)
  mul r17.w, r17.w, r17.w
  mul r15.w, r15.w, r17.w
  mul r16.xyz, r15.wwww, r16.xyzx
  rsq r15.w, r16.w
  mul r19.xzw, r15.wwww, r15.xxyz
  dp3 r15.w, r19.xzwx, r17.xyzx
  mad_sat r15.w, r15.w, r18.y, r18.z
  mul r15.w, r15.w, r15.w
  mul r17.xyz, r16.xyzx, r15.wwww
  movc r16.xyz, r20.zzzz, r17.xyzx, r16.xyzx
  mad r17.xyz, r1.xzyx, r0.zzzz, -r15.xyzx
  dp3 r15.w, r17.xyzx, r17.xyzx
  rsq r15.w, r15.w
  mul r17.xyz, r15.wwww, r17.xyzx
  dp3 r15.w, r17.xzyx, r2.xyzx
  add r15.w, -r15.w, l(1.000000)
  mul r16.w, r15.w, r15.w
  mul r16.w, r16.w, r16.w
  mul r15.w, r15.w, r16.w
  mad r15.w, r15.w, l(0.980000), l(0.020000)
  dp4 r18.x, r5.xyzw, r22.xyzw
  dp4 r18.y, r5.xyzw, r23.xyzw
  if_nz r19.y
    if_z r14.w
      dp4 r16.w, r5.xyzw, r24.xyzw
      dp4 r17.w, r5.xyzw, r25.xyzw
      max r17.w, r17.w, l(0.000010)
      div r18.zw, r18.xxxy, r17.wwww
      mad r18.zw, r18.zzzw, r21.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
      round_ni r19.xy, r18.zwzz
      add r18.zw, r18.zzzw, -r19.xxxy
      add r19.xy, r19.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
      mul r19.xy, r21.zwzz, r19.xyxx
      mad r19.zw, -r18.wwwz, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
      mad r21.xy, r18.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
      add r22.xy, -r18.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000)
      div r22.xy, r22.xyxx, r19.wzww
      div r18.zw, r18.zzzw, r21.xxxy
      add r22.zw, r22.xxxy, l(0.000000, 0.000000, -1.000000, -1.000000)
      add r22.xy, r18.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      mul r17.w, r19.z, r19.w
      mad r23.xyzw, r22.zwxw, r21.zwzw, r19.xyxy
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r18.z, r23.xyxx, t13.xxxx, s8, r16.w
      mul r19.zw, r19.zzzw, r21.xxxy
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r18.w, r23.zwzz, t13.xxxx, s8, r16.w
      mul r18.w, r18.w, r19.z
      mad r17.w, r17.w, r18.z, r18.w
      mad r22.xyzw, r22.zyxy, r21.zwzw, r19.xyxy
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r18.z, r22.xyxx, t13.xxxx, s8, r16.w
      mad r17.w, r19.w, r18.z, r17.w
      mul r18.z, r21.y, r21.x
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r16.w, r22.zwzz, t13.xxxx, s8, r16.w
      mad r16.w, r18.z, r16.w, r17.w
      mul r16.w, r16.w, l(0.062500)
    else 
      mov r16.w, l(1.000000)
    endif 
  else 
    mov r16.w, l(1.000000)
  endif 
  and r17.w, r20.x, r20.z
  if_z r14.w
    sample_l_indexable(texture2d)(float,float,float,float) r18.xyz, r18.xyxx, t13.xyzw, s9, l(0.000000)
    mul r18.xyz, r16.xyzx, r18.xyzx
  else 
    mov r18.xyz, r16.xyzx
  endif 
  movc r16.xyz, r17.wwww, r18.xyzx, r16.xyzx
  dp3_sat r14.w, -r15.yzxy, r3.yzwy
  mul r15.x, r14.w, r14.w
  mad r15.x, r15.x, r12.x, r11.w
  sqrt r15.x, r15.x
  mul r15.x, r6.x, r15.x
  mad r15.x, r14.w, r10.w, r15.x
  add r15.x, r15.x, r15.x
  max r15.x, r15.x, l(0.000100)
  div r15.x, l(1.000000, 1.000000, 1.000000, 1.000000), r15.x
  movc r15.y, r20.w, l(0.001500), l(0.050000)
  dp3_sat r15.z, r17.yzxy, r3.yzwy
  mul r15.z, r15.z, r15.z
  mad r15.z, r15.z, r11.y, l(1.000000)
  div r15.z, r7.x, r15.z
  mul r15.z, r15.z, r15.z
  mul r17.xyz, r15.zzzz, r16.xyzx
  mul r17.xyz, r14.wwww, r17.xyzx
  mul r17.xyz, r15.xxxx, r17.xyzx
  mul r15.xyz, r15.yyyy, r17.xyzx
  mul r15.xyz, r16.wwww, r15.xyzx
  mad r14.xyz, r15.xyzx, r15.wwww, r14.xyzx
  mul r15.xyz, r16.xyzx, r14.wwww
  mad r13.xyz, r15.xyzx, r16.wwww, r13.xyzx
  iadd r13.w, r13.w, l(1)
endloop 
bfi r9.x, l(31), l(1), r9.x, l(1)
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.x, r9.x, l(0), t18.xxxx
countbits r9.y, r9.x
mov r10.xyz, r13.xyzx
mov r12.yzw, r14.xxyz
mov r9.z, r9.x
mov r11.z, l(0)
loop 
  uge r13.w, r11.z, r9.y
  breakc_nz r13.w
  firstbit_lo r13.w, r9.z
  ishl r14.w, l(1), r13.w
  not r14.w, r14.w
  and r9.z, r9.z, r14.w
  iadd r13.w, l(32), r13.w
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r15.xyzw, r13.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r16.xyz, r13.w, l(16), t16.xyzx
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyz, r13.w, l(32), t16.xyzx
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyzw, r13.w, l(48), t16.xyzw
  and r19.xyzw, r18.wwww, l(32, 16, 1, 4)
  ult r20.xyzw, l(0, 0, 0, 0), r19.xyzw
  ushr r13.w, r18.w, l(5)
  and r13.w, r13.w, l(2)
  or r14.w, r20.y, r20.x
  and r14.w, r11.x, r14.w
  if_nz r14.w
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r21.xyzw, r13.w, l(0), t17.xyzw
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r22.xyzw, r13.w, l(16), t17.xyzw
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r23.xyzw, r13.w, l(32), t17.xyzw
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r24.xyzw, r13.w, l(48), t17.xyzw
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r13.w, l(64), t17.xyzw
  else 
    mov r21.xyzw, l(0,0,0,0)
    mov r22.xyzw, l(0,0,0,0)
    mov r23.xyzw, l(0,0,0,0)
    mov r24.xyzw, l(0,0,0,0)
    mov r25.xyzw, l(0,0,0,0)
  endif 
  add r15.xyz, -r15.xyzx, v5.xyzx
  dp3 r14.w, r15.xyzx, r15.xyzx
  max r16.w, r14.w, l(0.000010)
  div r17.w, l(1.000000, 1.000000, 1.000000, 1.000000), r16.w
  min r15.w, r15.w, r17.w
  mul r16.w, r16.w, r16.w
  mad_sat r16.w, -r16.w, r18.x, l(1.000000)
  mul r16.w, r16.w, r16.w
  mul r15.w, r15.w, r16.w
  mul r16.xyz, r15.wwww, r16.xyzx
  rsq r14.w, r14.w
  mul r19.xzw, r14.wwww, r15.xxyz
  dp3 r14.w, r19.xzwx, r17.xyzx
  mad_sat r14.w, r14.w, r18.y, r18.z
  mul r14.w, r14.w, r14.w
  mul r17.xyz, r16.xyzx, r14.wwww
  movc r16.xyz, r20.zzzz, r17.xyzx, r16.xyzx
  mad r17.xyz, r1.xzyx, r0.zzzz, -r15.xyzx
  dp3 r14.w, r17.xyzx, r17.xyzx
  rsq r14.w, r14.w
  mul r17.xyz, r14.wwww, r17.xyzx
  dp3 r14.w, r17.xzyx, r2.xyzx
  add r14.w, -r14.w, l(1.000000)
  mul r15.w, r14.w, r14.w
  mul r15.w, r15.w, r15.w
  mul r14.w, r14.w, r15.w
  mad r14.w, r14.w, l(0.980000), l(0.020000)
  dp4 r18.x, r5.xyzw, r22.xyzw
  dp4 r18.y, r5.xyzw, r23.xyzw
  if_nz r19.y
    if_z r13.w
      dp4 r15.w, r5.xyzw, r24.xyzw
      dp4 r16.w, r5.xyzw, r25.xyzw
      max r16.w, r16.w, l(0.000010)
      div r18.zw, r18.xxxy, r16.wwww
      mad r18.zw, r18.zzzw, r21.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
      round_ni r19.xy, r18.zwzz
      add r18.zw, r18.zzzw, -r19.xxxy
      add r19.xy, r19.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
      mul r19.xy, r21.zwzz, r19.xyxx
      mad r19.zw, -r18.wwwz, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
      mad r21.xy, r18.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
      add r22.xy, -r18.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000)
      div r22.xy, r22.xyxx, r19.wzww
      div r18.zw, r18.zzzw, r21.xxxy
      add r22.zw, r22.xxxy, l(0.000000, 0.000000, -1.000000, -1.000000)
      add r22.xy, r18.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      mul r16.w, r19.z, r19.w
      mad r23.xyzw, r22.zwxw, r21.zwzw, r19.xyxy
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r17.w, r23.xyxx, t13.xxxx, s8, r15.w
      mul r18.zw, r19.zzzw, r21.xxxy
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r19.z, r23.zwzz, t13.xxxx, s8, r15.w
      mul r18.z, r18.z, r19.z
      mad r16.w, r16.w, r17.w, r18.z
      mad r19.xyzw, r22.zyxy, r21.zwzw, r19.xyxy
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r17.w, r19.xyxx, t13.xxxx, s8, r15.w
      mad r16.w, r18.w, r17.w, r16.w
      mul r17.w, r21.y, r21.x
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r15.w, r19.zwzz, t13.xxxx, s8, r15.w
      mad r15.w, r17.w, r15.w, r16.w
      mul r15.w, r15.w, l(0.062500)
    else 
      mov r15.w, l(1.000000)
    endif 
  else 
    mov r15.w, l(1.000000)
  endif 
  and r16.w, r20.x, r20.z
  if_z r13.w
    sample_l_indexable(texture2d)(float,float,float,float) r18.xyz, r18.xyxx, t13.xyzw, s9, l(0.000000)
    mul r18.xyz, r16.xyzx, r18.xyzx
  else 
    mov r18.xyz, r16.xyzx
  endif 
  movc r16.xyz, r16.wwww, r18.xyzx, r16.xyzx
  dp3_sat r13.w, -r15.yzxy, r3.yzwy
  mul r15.x, r13.w, r13.w
  mad r15.x, r15.x, r12.x, r11.w
  sqrt r15.x, r15.x
  mul r15.x, r6.x, r15.x
  mad r15.x, r13.w, r10.w, r15.x
  add r15.x, r15.x, r15.x
  max r15.x, r15.x, l(0.000100)
  div r15.x, l(1.000000, 1.000000, 1.000000, 1.000000), r15.x
  movc r15.y, r20.w, l(0.001500), l(0.050000)
  dp3_sat r15.z, r17.yzxy, r3.yzwy
  mul r15.z, r15.z, r15.z
  mad r15.z, r15.z, r11.y, l(1.000000)
  div r15.z, r7.x, r15.z
  mul r15.z, r15.z, r15.z
  mul r17.xyz, r15.zzzz, r16.xyzx
  mul r17.xyz, r13.wwww, r17.xyzx
  mul r17.xyz, r15.xxxx, r17.xyzx
  mul r15.xyz, r15.yyyy, r17.xyzx
  mul r15.xyz, r15.wwww, r15.xyzx
  mad r12.yzw, r15.xxyz, r14.wwww, r12.yyzw
  mul r15.xyz, r16.xyzx, r13.wwww
  mad r10.xyz, r15.xyzx, r15.wwww, r10.xyzx
  iadd r11.z, r11.z, l(1)
endloop 
add_sat r1.xyz, cb6[5].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r5.xy, v0.xyxx, cb0[40].zwzz
mad r9.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r9.xy, -|r9.xyxx|, |r9.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r11.xy, r3.wyww, cb6[11].yyyy
mad r11.xy, r11.xyxx, r0.yyyy, v6.xyxx
mov r11.z, v6.z
mov r11.w, l(1.000000)

// Far Cry Primal Reflection Fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -i --fix-fcprimal-reflection --only-autofixed -fq b7dba58521a7de23-ps.txt

// ViewProjectionMatrix:
dp4 r26.w, r11.xyzw, cb0[19].xyzw
// Stereo Correction:
add r26.w, r26.w, -r26.y
mul r27.x, r26.w, r26.x
mov r27.yzw, l(0.0)
// InvProjectionMatrix:
dp4 r28.x, r27.xyzw, cb0[0].xyzw
dp4 r28.y, r27.xyzw, cb0[1].xyzw
dp4 r28.z, r27.xyzw, cb0[2].xyzw
dp4 r28.w, r27.xyzw, cb0[3].xyzw
// InvViewMatrix:
dp4 r27.x, r28.xyzw, cb0[4].xyzw
dp4 r27.y, r28.xyzw, cb0[5].xyzw
// Negate Z to fix alignment when camera is tilted:
dp4 r27.z, -r28.xyzw, cb0[6].xyzw
// Adjust Coord:
add r11.xyz, r11.xyz, r27.xyzw

dp4 r13.x, r11.xyzw, cb1[0].xyzw
dp4 r13.y, r11.xyzw, cb1[1].xyzw
dp4 r0.z, r11.xyzw, cb1[3].xyzw
div r11.xy, r13.xyxx, r0.zzzz
mad r5.zw, -v0.xxxx, cb0[40].zzzz, l(0.000000, 0.000000, 1.000000, 1.000000)
add r5.xz, -r5.zzyz, r11.xxyx
mad_sat r5.xy, r5.xzxx, r9.xyxx, r5.wyww

// Swap reflection eyes from stereo2mono reflection copy.
// Mip-maps disabled as the reverse stereo blit only copies them in one eye
mov r27.xyzw, r5.xyzw
mul r27.x, r27.x, l(0.5)
eq r26.w, r26.z, l(-1.0)
if_nz r26.w
  add r27.x, r27.x, l(0.5)
endif

// sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xyxx, t15.xyzw, s10, r7.y
sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r27.xyxx, t100.xyzw, s10, l(0.0)

min r5.xyz, r5.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000)
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r0.z, l(0), l(12), t3.xxxx
mul r5.xyz, r0.zzzz, r5.xyzx
mad_sat r5.w, r9.w, cb4[1].x, cb4[1].y
mul r9.xyz, r1.xyzx, r6.yzwy
add r2.w, r2.w, r2.w
mad r2.xyz, r3.wzyw, -r2.wwww, r2.xyzx
mov r2.xyz, -r2.xyzx
mad r1.w, -r1.w, l(2.000000), l(6.000000)
sample_l_indexable(texturecube)(float,float,float,float) r2.xyz, r2.xyzx, t1.xyzw, s1, r1.w
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r3.yzw, l(0), l(108), t5.xxyz
dp3 r1.w, r3.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r8.xy, l(0), l(124), t5.xyxx
dp3 r2.w, r8.zxyz, l(0.212600, 0.715200, 0.072200, 0.000000)
max r1.w, r1.w, r2.w
add r1.w, r8.w, r1.w
add r1.w, r1.w, l(-1.000000)
mad r1.w, cb0[55].w, r1.w, l(1.000000)
mul r2.xyz, r1.wwww, r2.xyzx
mad r2.xyz, r2.xyzx, cb6[11].xxxx, cb6[10].wwww
mad r2.xyz, r9.xyzx, r2.xyzx, -r5.xyzx
mad r2.xyz, r5.wwww, r2.xyzx, r5.xyzx
add r0.y, -r0.y, r3.x
mul r0.y, r0.y, -cb6[0].x
exp r0.y, r0.y
add r0.y, -r0.y, l(1.000000)
max r0.y, r0.y, l(0.000000)
add r3.xyz, r6.yzwy, r10.xyzx
mul r3.xyz, r3.xyzx, l(0.980000, 0.980000, 0.980000, 0.000000)
mad r2.xyz, r2.xyzx, r0.wwww, r12.yzwy
add r4.xyz, r4.xyzx, -cb6[4].xyzx
mad r4.xyz, r4.wwww, r4.xyzx, cb6[4].xyzx
mul r1.xyz, r1.xyzx, r4.xyzx
mul r2.xyz, r0.yyyy, r2.xyzx
mad r1.xyz, r3.xyzx, r1.xyzx, r2.xyzx
lt r2.xy, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[39].zwzz
and r0.w, r2.y, r2.x
if_nz r0.w
  add r2.xyz, v5.xyzx, -cb0[42].xyzx
  dp3 r0.w, r2.xyzx, r2.xyzx
  sqrt r0.w, r0.w
  utof r2.xy, r7.zwzz
  mul r2.xy, r2.xyxx, cb0[40].zwzz
  add r0.w, r0.w, -cb7[0].w
  div r0.w, r0.w, cb7[0].z
  log r0.w, r0.w
  mul r0.w, r0.w, l(0.250000)
  ushr r1.w, cb7[2].z, l(1)
  utof r1.w, r1.w
  mul r0.w, r0.w, r1.w
  iadd r1.w, cb7[2].z, l(-1)
  itof r1.w, r1.w
  div r2.z, r0.w, r1.w
  sample_l_indexable(texture3d)(float,float,float,float) r3.xyz, r2.xyzx, t10.xyzw, s7, l(0.000000)
  sample_l_indexable(texture3d)(float,float,float,float) r0.w, r2.xyzx, t11.yzwx, s7, l(0.000000)
  mul r2.xyz, r0.zzzz, r3.xyzx
else 
  add r3.xyz, v5.xyzx, -cb0[42].xyzx
  dp3 r0.z, r3.xyzx, r3.xyzx
  sqrt r0.z, r0.z
  mad_sat r0.z, r0.z, cb0[35].y, cb0[35].x
  mul r1.w, r3.z, cb0[39].y
  max r1.w, r1.w, l(-125.000000)
  lt r2.w, l(0.000001), |r1.w|
  exp r3.x, -r1.w
  add r3.x, -r3.x, l(1.000000)
  div r1.w, r3.x, r1.w
  movc r1.w, r2.w, r1.w, l(1.000000)
  mad r1.w, r1.w, cb0[39].x, cb0[35].w
  mul r0.z, r0.z, r1.w
  mul r0.z, r0.z, -cb0[35].z
  exp r0.w, r0.z
  mad r2.xyz, -v2.xyzx, r0.wwww, v2.xyzx
endif 
mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
mul r1.xyz, r0.yyyy, r1.xyzx
mov r1.w, -r0.y
mad r0.xyzw, r0.xxxx, r1.xyzw, l(0.000000, 0.000000, 0.000000, 1.000000)
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r1.x, l(0), l(0), t3.xxxx
mul r0.xyz, r0.xyzx, r1.xxxx
max r0.xyz, r0.xyzx, l(0.0000610351999, 0.0000610351999, 0.0000610351999, 0.000000)
min o0.xyz, r0.xyzx, l(8192.000000, 8192.000000, 8192.000000, 0.000000)
mov o0.w, r0.w
ret 
// Approximately 940 instruction slots used