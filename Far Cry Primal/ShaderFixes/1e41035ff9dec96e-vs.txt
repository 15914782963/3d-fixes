//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//   using 3Dmigoto v1.2.31 on Wed Mar 02 08:06:29 2016
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4x4 InvProjectionMatrix;      // Offset:    0 Size:    64 [unused]
//   float4x4 InvViewMatrix;            // Offset:   64 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  128 Size:    64 [unused]
//   float4x4 ViewMatrix;               // Offset:  192 Size:    64 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  256 Size:    64
//   float4x4 ViewRotProjectionMatrix;  // Offset:  320 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix_Previous;// Offset:  384 Size:    64 [unused]
//   float4 AmbientSHR;                 // Offset:  448 Size:    16 [unused]
//   float4 AmbientSHG;                 // Offset:  464 Size:    16 [unused]
//   float4 AmbientSHB;                 // Offset:  480 Size:    16 [unused]
//   float4 CameraDistances;            // Offset:  496 Size:    16 [unused]
//   float4 CameraNearPlaneSize;        // Offset:  512 Size:    16 [unused]
//   float4 DepthScale;                 // Offset:  528 Size:    16 [unused]
//   float4 DepthTextureScaleOffset;    // Offset:  544 Size:    16
//   float4 FogParams;                  // Offset:  560 Size:    16 [unused]
//   float4 FogSHB;                     // Offset:  576 Size:    16
//   float4 FogSHG;                     // Offset:  592 Size:    16
//   float4 FogSHR;                     // Offset:  608 Size:    16
//   float4 HeightFogParams;            // Offset:  624 Size:    16
//   float4 ViewportSize;               // Offset:  640 Size:    16 [unused]
//   float3 ViewPoint;                  // Offset:  656 Size:    12 [unused]
//   float3 CameraPosition;             // Offset:  672 Size:    12
//   float3 CameraPosition_Previous;    // Offset:  688 Size:    12 [unused]
//   float3 CameraPositionFractions;    // Offset:  704 Size:    12 [unused]
//   float3 CameraPositionFractions_Previous;// Offset:  720 Size:    12 [unused]
//   float3 CameraRight;                // Offset:  736 Size:    12 [unused]
//   float3 CameraUp;                   // Offset:  752 Size:    12 [unused]
//   float3 CameraDirection;            // Offset:  768 Size:    12 [unused]
//   float3 EnvironmentMapColorOffset;  // Offset:  784 Size:    12 [unused]
//   float3 EnvironmentMapColorScale;   // Offset:  800 Size:    12 [unused]
//   float3 AmbientOcclusionRanges;     // Offset:  816 Size:    12 [unused]
//   float3 DepthTextureRcpSize;        // Offset:  832 Size:    12 [unused]
//   float2 MotionVectorOffsets;        // Offset:  848 Size:     8 [unused]
//   float2 DepthRangeCompression;      // Offset:  856 Size:     8 [unused]
//   float ShadowProjDepthMinValue;     // Offset:  864 Size:     4 [unused]
//   float DistanceScale;               // Offset:  868 Size:     4 [unused]
//   float WorldSpaceZOffset;           // Offset:  872 Size:     4 [unused]
//   float WorldSpaceZOffset_Previous;  // Offset:  876 Size:     4 [unused]
//   float CameraFOVDeg;                // Offset:  880 Size:     4 [unused]
//   float EffectsEmissiveEVBias;       // Offset:  884 Size:     4 [unused]
//   float ShadowCSMLastSliceIndex;     // Offset:  888 Size:     4 [unused]
//   float UseNormalization;            // Offset:  892 Size:     4 [unused]
//   float FogUndergroundColorScale;    // Offset:  896 Size:     4
//
// }
//
// cbuffer CGlobalShaderParameterProvider
// {
//
//   float4 BurnColor;                  // Offset:    0 Size:    16 [unused]
//   float4 BurnParams;                 // Offset:   16 Size:    16 [unused]
//   float4 BurnParams2;                // Offset:   32 Size:    16 [unused]
//   float4 BurnParams3;                // Offset:   48 Size:    16 [unused]
//   float4 CascadedShadowScaleOffsetTile0;// Offset:   64 Size:    16 [unused]
//   float4 CascadedShadowScaleOffsetTile1;// Offset:   80 Size:    16 [unused]
//   float4 WindSimParamsX;             // Offset:   96 Size:    16 [unused]
//   float4 WindSimParamsY;             // Offset:  112 Size:    16 [unused]
//   float VistaNoiseIntensity;         // Offset:  128 Size:     4 [unused]
//   float Time;                        // Offset:  132 Size:     4
//   float WindFactor;                  // Offset:  136 Size:     4 [unused]
//   float FireGlowEV;                  // Offset:  140 Size:     4 [unused]
//   float BurnSpeedScale;              // Offset:  144 Size:     4 [unused]
//   float BurnlineMaskScale;           // Offset:  148 Size:     4 [unused]
//   float BurnlineMaskInfluence;       // Offset:  152 Size:     4 [unused]
//   float WorldSpaceProgressionMaskScale;// Offset:  156 Size:     4 [unused]
//   float WorldSpaceProgressionMaskInfluence;// Offset:  160 Size:     4 [unused]
//   float MaskTransitionSpeedModifier; // Offset:  164 Size:     4 [unused]
//   float GlowMaskScale;               // Offset:  168 Size:     4 [unused]
//   float FireGlowMaskInfluence;       // Offset:  172 Size:     4 [unused]
//   float CenterBurnlineWidth;         // Offset:  176 Size:     4 [unused]
//   float TransitionToBurnlineWidth;   // Offset:  180 Size:     4 [unused]
//   float DissolveCutoffPoint;         // Offset:  184 Size:     4 [unused]
//   float DissolveBlendDistance;       // Offset:  188 Size:     4 [unused]
//   float EyeGlossinessScale;          // Offset:  192 Size:     4 [unused]
//   float EyeSpecIntensityScale;       // Offset:  196 Size:     4 [unused]
//   float EyeIrisGlossinessScale;      // Offset:  200 Size:     4 [unused]
//   float EyeIrisSpecIntensityScale;   // Offset:  204 Size:     4 [unused]
//   float EyeReflectionBoostScale;     // Offset:  208 Size:     4 [unused]
//   bool EyeReflectionMaskEnable;      // Offset:  212 Size:     4 [unused]
//   float4 BurnParams4;                // Offset:  224 Size:    16 [unused]
//   float4 BurnParams5;                // Offset:  240 Size:    16 [unused]
//
// }
//
// cbuffer CSceneTerrainSkyOcclusionAtlasPrivateData
// {
//
//   float4 SectorOcclusion_OffsetScale;// Offset:    0 Size:    16
//   float3 SectorOcclusion_DistanceFade;// Offset:   16 Size:    12
//   float2 SectorOcclusion_HeightOffsetScale;// Offset:   32 Size:     8
//
// }
//
// cbuffer CAmbientProvider
// {
//
//   float4 CascadeDistanceScales[5];   // Offset:    0 Size:    80 [unused]
//   float4 CascadeNearFarSnappedOffsetCamera[5];// Offset:   80 Size:    80 [unused]
//   float4 CascadeNearFarRcpUVSize[5]; // Offset:  160 Size:    80 [unused]
//   float4 UndergroundSHR;             // Offset:  240 Size:    16
//   float4 UndergroundSHG;             // Offset:  256 Size:    16
//   float4 UndergroundSHB;             // Offset:  272 Size:    16
//   float InvUndergroundBlendEndHeight;// Offset:  288 Size:     4
//   float IndirectLightingScale;       // Offset:  292 Size:     4 [unused]
//
// }
//
// cbuffer ShangrilaOcean
// {
//
//   float4 FoamLayer1Params;           // Offset:    0 Size:    16 [unused]
//   float4 FoamLayer2Params;           // Offset:   16 Size:    16 [unused]
//   float4 FoamParams;                 // Offset:   32 Size:    16 [unused]
//   float4 FoamSettings;               // Offset:   48 Size:    16 [unused]
//   float4 MaterialPickingID;          // Offset:   64 Size:    16 [unused]
//   float4 NormalMapParams1;           // Offset:   80 Size:    16
//   float4 NormalMapParams2;           // Offset:   96 Size:    16
//   float4 NormalMapParams3;           // Offset:  112 Size:    16
//   float4 NormalMapParams4;           // Offset:  128 Size:    16
//   float4 NormalsMaskParams;          // Offset:  144 Size:    16
//   float4 Octave1Params;              // Offset:  160 Size:    16 [unused]
//   float4 Octave2Params;              // Offset:  176 Size:    16 [unused]
//   float4 Octave3Params;              // Offset:  192 Size:    16 [unused]
//   float4 Octave4Params;              // Offset:  208 Size:    16 [unused]
//   float4 Octave5Params;              // Offset:  224 Size:    16 [unused]
//   float4 Octave6Params;              // Offset:  240 Size:    16 [unused]
//   float4 Octave7Params;              // Offset:  256 Size:    16 [unused]
//   float4 Octave8Params;              // Offset:  272 Size:    16 [unused]
//   float4 WavesCrestWeights;          // Offset:  288 Size:    16 [unused]
//   float3 ConstantReflectanceFactor;  // Offset:  304 Size:    12 [unused]
//   float DampingFadeOut;              // Offset:  316 Size:     4 [unused]
//   float3 DisplacementParams;         // Offset:  320 Size:    12 [unused]
//   float DepthDistanceCff;            // Offset:  332 Size:     4 [unused]
//   float3 NormalIncidenceReflectance; // Offset:  336 Size:    12 [unused]
//   float HighNormalsScale;            // Offset:  348 Size:     4 [unused]
//   float3 OceanColorDeep;             // Offset:  352 Size:    12 [unused]
//   float NormalsScale;                // Offset:  364 Size:     4 [unused]
//   float3 OceanColorShallow;          // Offset:  368 Size:    12 [unused]
//   float RimLightIntensity;           // Offset:  380 Size:     4 [unused]
//   float2 CausticsDepthFade;          // Offset:  384 Size:     8 [unused]
//   float2 CausticsParams;             // Offset:  392 Size:     8 [unused]
//   float2 CausticsRcpDepthFade;       // Offset:  400 Size:     8 [unused]
//   float2 Octave1Dir;                 // Offset:  408 Size:     8 [unused]
//   float2 Octave2Dir;                 // Offset:  416 Size:     8 [unused]
//   float2 Octave3Dir;                 // Offset:  424 Size:     8 [unused]
//   float2 Octave4Dir;                 // Offset:  432 Size:     8 [unused]
//   float2 Octave5Dir;                 // Offset:  440 Size:     8 [unused]
//   float2 Octave6Dir;                 // Offset:  448 Size:     8 [unused]
//   float2 Octave7Dir;                 // Offset:  456 Size:     8 [unused]
//   float2 Octave8Dir;                 // Offset:  464 Size:     8 [unused]
//   float2 Smoothness;                 // Offset:  472 Size:     8 [unused]
//   float2 WavesFade;                  // Offset:  480 Size:     8
//   float2 WavesHiResFade;             // Offset:  488 Size:     8 [unused]
//   float RimLightWidth;               // Offset:  496 Size:     4 [unused]
//   float ShallowWaterDepth;           // Offset:  500 Size:     4 [unused]
//   float TexGeoWavesBlendCff;         // Offset:  504 Size:     4 [unused]
//
// }
//
// cbuffer COceanParameterProvider
// {
//
//   float4 WavesAmpHDir_ampVDirOverWL[8];// Offset:    0 Size:   128
//   float4 WavesDir_oneOverWL_ampHWL[8];// Offset:  128 Size:   128
//   float4 WavesParameters[8];         // Offset:  256 Size:   128
//   float4 CornerPointsWS[4];          // Offset:  384 Size:    64 [unused]
//   float WavesCrestWeightsNorm[4];    // Offset:  448 Size:    52 [unused]
//   float4 OceanParameters;            // Offset:  512 Size:    16 [unused]
//   float4 SkyParameters;              // Offset:  528 Size:    16 [unused]
//   float4 VertexAdjustments;          // Offset:  544 Size:    16 [unused]
//   float2 GridSize;                   // Offset:  560 Size:     8 [unused]
//   float OneOverWavesFade;            // Offset:  568 Size:     4
//   float OneOverWavesHiResFade;       // Offset:  572 Size:     4 [unused]
//   float WaterLevel;                  // Offset:  576 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// SectorHemiMapSamplerStateLinear    sampler      NA          NA    0        1
// SectorOcclusion_HeightTexture__TexObj__    texture  float4          2d    0        1
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CGlobalShaderParameterProvider    cbuffer      NA          NA    1        1
// CSceneTerrainSkyOcclusionAtlasPrivateData    cbuffer      NA          NA    2        1
// CAmbientProvider                  cbuffer      NA          NA    3        1
// ShangrilaOcean                    cbuffer      NA          NA    4        1
// COceanParameterProvider           cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xy          9     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[57], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[19], immediateIndexed
dcl_constantbuffer cb4[31], immediateIndexed
dcl_constantbuffer cb5[37], dynamicIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input v0.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xyzw
dcl_output o9.xy
dcl_temps 7

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

lt r0.x, l(0.000000), v0.z
lt r0.y, v0.z, l(0.000000)
iadd r0.x, r0.y, -r0.x
itof r0.x, r0.x
ge r0.x, r0.x, l(0.000000)
and o9.y, r0.x, l(0x3f800000)
mul r0.x, cb1[8].y, cb4[5].y
mul r0.xy, r0.xxxx, cb4[5].zwzz
mad o6.xy, v0.xyxx, cb4[5].xxxx, r0.xyxx
mul r0.x, cb1[8].y, cb4[6].y
mul r0.xy, r0.xxxx, cb4[6].zwzz
mad o6.zw, v0.xxxy, cb4[6].xxxx, r0.xxxy
mul r0.x, cb1[8].y, cb4[7].y
mul r0.xy, r0.xxxx, cb4[7].zwzz
mad o7.xy, v0.xyxx, cb4[7].xxxx, r0.xyxx
mul r0.x, cb1[8].y, cb4[8].y
mul r0.xy, r0.xxxx, cb4[8].zwzz
mad o7.zw, v0.xxxy, cb4[8].xxxx, r0.xxxy
mul r0.x, cb1[8].y, cb4[9].y
mul r0.xy, r0.xxxx, cb4[9].zwzz
mad o8.xy, v0.xyxx, cb4[9].xxxx, r0.xyxx
mov r0.xy, v0.xyxx
mov r0.z, cb5[36].x
add r1.xyz, r0.xyzx, -cb0[42].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
sqrt r0.w, r0.w
mul r0.w, r0.w, cb5[35].z
max r1.x, r0.w, l(0.200000)
min r1.x, r1.x, l(1.000000)
mad r1.x, -r1.x, l(1.250000), l(1.250000)
log r1.x, r1.x
mul r1.x, r1.x, cb4[30].y
exp r1.x, r1.x
mov r3.xy, l(0,0,0,0)
mov r2.xyz, l(0,0,0,0)
mov r1.yz, l(0,0,0,0)
loop 
  ige r1.w, r1.z, l(4)
  breakc_nz r1.w
  dp2 r1.w, cb5[r1.z + 8].xyxx, v0.xyxx
  mad r1.w, -cb5[r1.z + 16].x, cb1[8].y, r1.w
  sincos r4.x, r5.x, r1.w
  mad r2.xy, -cb5[r1.z + 0].xyxx, r4.xxxx, r2.xyxx
  mad r2.z, cb5[r1.z + 16].z, r5.x, r2.z
  mad r3.xy, cb5[r1.z + 0].zwzz, r4.xxxx, r3.xyxx
  mul r1.w, cb5[r1.z + 8].w, cb5[r1.z + 16].z
  mad r1.y, r1.w, r5.x, r1.y
  iadd r1.z, r1.z, l(1)
endloop 
add r3.z, -r1.y, l(1.000000)
add_sat r0.w, r0.w, r0.w
add r1.yzw, -r3.xxyz, l(0.000000, 0.000000, 0.000000, 1.000000)
mad r1.yzw, r0.wwww, r1.yyzw, r3.xxyz
mul r2.xyz, r1.xxxx, r2.xyzx
mad r2.xyz, r2.xyzx, |v0.zzzz|, r0.xyzx
dp3 r0.w, r1.yzwy, r1.yzwy
rsq r0.w, r0.w
mul o2.xyz, r0.wwww, r1.yzwy
add o3.xyz, -r2.xyzx, cb0[42].xyzx
mov r2.w, l(1.000000)
dp4 r3.x, r2.xyzw, cb0[16].xyzw
dp4 r3.y, r2.xyzw, cb0[17].xyzw
dp4 o0.z, r2.xyzw, cb0[18].xyzw
dp4 r3.w, r2.xyzw, cb0[19].xyzw

// Relocated to here with asmtool.py
mov o0.xyw, r3.xyxw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -i --auto-fix-vertex-halo --only-autofixed 1e41035ff9dec96e-vs.txt
ne r6.w, r3.w, l(1.0)
if_nz r6.w
  add r6.w, r3.w, -r6.y
  mad r3.x, r6.w, r6.x, r3.x
endif

mul r4.xyzw, r3.xyww, cb0[34].xyzw
add o4.xy, r4.zwzz, r4.xyxx
lt r1.yz, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[39].zzwz
and r0.w, r1.z, r1.y
if_nz r0.w
  mov o1.xyz, l(0,0,0,0)
else 
  add r1.yzw, r2.yyzx, -cb0[42].yyzx
  dp3 r0.w, r1.yzwy, r1.yzwy
  rsq r0.w, r0.w
  mul r4.yzw, r0.wwww, r1.yyzw
  mov r4.x, l(1.000000)
  dp4 r5.x, cb0[38].xyzw, r4.xyzw
  dp4 r5.y, cb0[37].xyzw, r4.xyzw
  dp4 r5.z, cb0[36].xyzw, r4.xyzw
  max r1.yzw, r5.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r5.xy, r2.yxyy, cb2[0].yxyy, cb2[0].wzww
  sample_l_indexable(texture2d)(float,float,float,float) r0.w, r5.xyxx, t0.xzwy, s0, l(0.000000)
  mad r0.w, r0.w, cb2[2].x, cb2[2].y
  add r0.w, -r0.w, r2.z
  mul_sat r0.w, -r0.w, cb3[18].x
  sqrt r0.w, r0.w
  add r2.xy, r2.xyxx, -cb0[42].xyxx
  dp2 r2.x, r2.xyxx, r2.xyxx
  mad r2.x, cb2[1].x, r2.x, cb2[1].y
  mul_sat r2.x, r2.x, l(3.000000)
  mul r0.w, r0.w, r2.x
  dp4 r2.x, cb3[15].xyzw, r4.xyzw
  dp4 r2.y, cb3[16].xyzw, r4.xyzw
  dp4 r2.z, cb3[17].xyzw, r4.xyzw
  max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r2.xyz, r2.xyzx, cb0[56].xxxx, -r1.yzwy
  mad o1.xyz, r0.wwww, r2.xyzx, r1.yzwy
endif 

// mov o0.xyw, r3.xyxw // Relocated from here with asmtool.py

mov o8.w, l(0)
mov o8.z, r1.x
mov o4.z, r3.w
mov o5.xyz, r0.xyzx
mov o9.x, |v0.z|
ret 
// Approximately 105 instruction slots used