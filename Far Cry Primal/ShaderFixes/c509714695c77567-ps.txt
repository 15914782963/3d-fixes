// asmtool.py -i --fix-fcprimal-reflection --only-autofixed -fq c509714695c77567-ps.txt
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//   using 3Dmigoto v1.2.31 on Wed Mar 02 08:07:15 2016
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4x4 InvProjectionMatrix;      // Offset:    0 Size:    64
//   float4x4 InvViewMatrix;            // Offset:   64 Size:    64 [unused]
//   float4x4 ProjectionMatrix;         // Offset:  128 Size:    64 [unused]
//   float4x4 ViewMatrix;               // Offset:  192 Size:    64 [unused]
//   float4x4 ViewProjectionMatrix;     // Offset:  256 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix;  // Offset:  320 Size:    64 [unused]
//   float4x4 ViewRotProjectionMatrix_Previous;// Offset:  384 Size:    64 [unused]
//   float4 AmbientSHR;                 // Offset:  448 Size:    16 [unused]
//   float4 AmbientSHG;                 // Offset:  464 Size:    16 [unused]
//   float4 AmbientSHB;                 // Offset:  480 Size:    16 [unused]
//   float4 CameraDistances;            // Offset:  496 Size:    16 [unused]
//   float4 CameraNearPlaneSize;        // Offset:  512 Size:    16 [unused]
//   float4 DepthScale;                 // Offset:  528 Size:    16 [unused]
//   float4 DepthTextureScaleOffset;    // Offset:  544 Size:    16 [unused]
//   float4 FogParams;                  // Offset:  560 Size:    16
//   float4 FogSHB;                     // Offset:  576 Size:    16 [unused]
//   float4 FogSHG;                     // Offset:  592 Size:    16 [unused]
//   float4 FogSHR;                     // Offset:  608 Size:    16 [unused]
//   float4 HeightFogParams;            // Offset:  624 Size:    16
//   float4 ViewportSize;               // Offset:  640 Size:    16
//   float3 ViewPoint;                  // Offset:  656 Size:    12 [unused]
//   float3 CameraPosition;             // Offset:  672 Size:    12
//   float3 CameraPosition_Previous;    // Offset:  688 Size:    12 [unused]
//   float3 CameraPositionFractions;    // Offset:  704 Size:    12 [unused]
//   float3 CameraPositionFractions_Previous;// Offset:  720 Size:    12 [unused]
//   float3 CameraRight;                // Offset:  736 Size:    12 [unused]
//   float3 CameraUp;                   // Offset:  752 Size:    12 [unused]
//   float3 CameraDirection;            // Offset:  768 Size:    12
//   float3 EnvironmentMapColorOffset;  // Offset:  784 Size:    12 [unused]
//   float3 EnvironmentMapColorScale;   // Offset:  800 Size:    12 [unused]
//   float3 AmbientOcclusionRanges;     // Offset:  816 Size:    12 [unused]
//   float3 DepthTextureRcpSize;        // Offset:  832 Size:    12 [unused]
//   float2 MotionVectorOffsets;        // Offset:  848 Size:     8 [unused]
//   float2 DepthRangeCompression;      // Offset:  856 Size:     8 [unused]
//   float ShadowProjDepthMinValue;     // Offset:  864 Size:     4 [unused]
//   float DistanceScale;               // Offset:  868 Size:     4 [unused]
//   float WorldSpaceZOffset;           // Offset:  872 Size:     4 [unused]
//   float WorldSpaceZOffset_Previous;  // Offset:  876 Size:     4 [unused]
//   float CameraFOVDeg;                // Offset:  880 Size:     4 [unused]
//   float EffectsEmissiveEVBias;       // Offset:  884 Size:     4 [unused]
//   float ShadowCSMLastSliceIndex;     // Offset:  888 Size:     4 [unused]
//   float UseNormalization;            // Offset:  892 Size:     4
//   float FogUndergroundColorScale;    // Offset:  896 Size:     4 [unused]
//
// }
//
// cbuffer CWaterReflectionParameterProvider
// {
//
//   float4x4 WaterReflectionTransform; // Offset:    0 Size:    64
//   float4 WaterReflectionPlane;       // Offset:   64 Size:    16 [unused]
//   float4 WaterReflectionTexCoordRange;// Offset:   80 Size:    16 [unused]
//   float WaterLevelAdjustment;        // Offset:   96 Size:     4 [unused]
//
// }
//
// cbuffer CSceneTerrainSkyOcclusionAtlasPrivateData
// {
//
//   float4 SectorOcclusion_OffsetScale;// Offset:    0 Size:    16
//   float3 SectorOcclusion_DistanceFade;// Offset:   16 Size:    12
//   float2 SectorOcclusion_HeightOffsetScale;// Offset:   32 Size:     8
//
// }
//
// cbuffer CAmbientProvider
// {
//
//   float4 CascadeDistanceScales[5];   // Offset:    0 Size:    80 [unused]
//   float4 CascadeNearFarSnappedOffsetCamera[5];// Offset:   80 Size:    80 [unused]
//   float4 CascadeNearFarRcpUVSize[5]; // Offset:  160 Size:    80 [unused]
//   float4 UndergroundSHR;             // Offset:  240 Size:    16
//   float4 UndergroundSHG;             // Offset:  256 Size:    16
//   float4 UndergroundSHB;             // Offset:  272 Size:    16
//   float InvUndergroundBlendEndHeight;// Offset:  288 Size:     4
//   float IndirectLightingScale;       // Offset:  292 Size:     4 [unused]
//
// }
//
// cbuffer CWaterParameterProvider
// {
//
//   float4 BorderAlphaMask;            // Offset:    0 Size:    16 [unused]
//   float ReflectionInvSquareFadeDistance;// Offset:   16 Size:     4
//   float ReflectionSquareFadeDistance;// Offset:   20 Size:     4
//   float SunLightScale;               // Offset:   24 Size:     4
//
// }
//
// cbuffer CWaterWaveParameterProvider
// {
//
//   float4 WaterWave_CameraCenter_FrontVector;// Offset:    0 Size:    16
//   float4 WaterWave_CameraRightVector_;// Offset:   16 Size:    16
//   float4 WaterWave_CameraTanFOVx_2_Near_Far;// Offset:   32 Size:    16
//
// }
//
// cbuffer WaterRiver
// {
//
//   float4 Extinctions;                // Offset:    0 Size:    16
//   float4 MaterialPickingID;          // Offset:   16 Size:    16 [unused]
//   float4 RefractionWaveInfo;         // Offset:   32 Size:    16 [unused]
//   float4 Specular;                   // Offset:   48 Size:    16
//   float4 WaterColor;                 // Offset:   64 Size:    16
//   float4 WaterColorModulation;       // Offset:   80 Size:    16
//   float3 LayerBlendCff;              // Offset:   96 Size:    12 [unused]
//   float CausticsIntensity;           // Offset:  108 Size:     4 [unused]
//   float3 LayerSpeed;                 // Offset:  112 Size:    12 [unused]
//   float CausticsScale;               // Offset:  124 Size:     4 [unused]
//   float2 BaseTiling;                 // Offset:  128 Size:     8 [unused]
//   float2 CenterDir;                  // Offset:  136 Size:     8 [unused]
//   float2 CenterTiling1;              // Offset:  144 Size:     8 [unused]
//   float2 DiffuseTiling;              // Offset:  152 Size:     8 [unused]
//   float DiffuseSpeedFactor;          // Offset:  160 Size:     4 [unused]
//   float NormalModifier;              // Offset:  164 Size:     4
//   float NormalOffsetScale;           // Offset:  168 Size:     4
//   float ReflectionColorOffset;       // Offset:  172 Size:     4
//   float ReflectionColorScale;        // Offset:  176 Size:     4
//   float ReflectionNormalOffsetScale; // Offset:  180 Size:     4
//
// }
//
// cbuffer CVolumetricFogBlendedProvider
// {
//
//   float4 VFDepthDistribution;        // Offset:    0 Size:    16
//   float4 VFDepthParams;              // Offset:   16 Size:    16 [unused]
//   int4 VFCellParams;                 // Offset:   32 Size:    16
//
// }
//
// cbuffer CTileLightingBlendedParameterProvider
// {
//
//   float4 CSMSlice0_0;                // Offset:    0 Size:    16 [unused]
//   float4 CSMSlice0_1;                // Offset:   16 Size:    16 [unused]
//   float4 CSMSlice0_2;                // Offset:   32 Size:    16 [unused]
//   float4 CSMSlice1_0;                // Offset:   48 Size:    16 [unused]
//   float4 CSMSlice1_1;                // Offset:   64 Size:    16 [unused]
//   float4 CSMSlice1_2;                // Offset:   80 Size:    16 [unused]
//   float4 CSMSlice2_0;                // Offset:   96 Size:    16 [unused]
//   float4 CSMSlice2_1;                // Offset:  112 Size:    16 [unused]
//   float4 CSMSlice2_2;                // Offset:  128 Size:    16 [unused]
//   float4 CSMSliceFade;               // Offset:  144 Size:    16 [unused]
//   float4 ShadowMapSize;              // Offset:  160 Size:    16 [unused]
//   float4 SunColor;                   // Offset:  176 Size:    16
//   float4 SunDirection;               // Offset:  192 Size:    16
//   int2 NumTiles;                     // Offset:  208 Size:     8
//   int LightCount;                    // Offset:  216 Size:     4 [unused]
//   int ParticlesSmallBufferFactor;    // Offset:  220 Size:     4 [unused]
//
// }
//
// Resource bind info for ExposureBuffer
// {
//
//   float4 $Element;                   // Offset:    0 Size:    16
//
// }
//
// Resource bind info for SHOccGlobalProbe
// {
//
//   float4 $Element;                   // Offset:    0 Size:    16
//
// }
//
// Resource bind info for SkyParamBuffer
// {
//
//   struct ComputedSkyParameters
//   {
//       
//       float r[9];                    // Offset:    0
//       float g[9];                    // Offset:   36
//       float b[9];                    // Offset:   72
//       float3 sunColor;               // Offset:  108
//       float3 moonColor;              // Offset:  120
//
//   } $Element;                        // Offset:    0 Size:   132
//
// }
//
// Resource bind info for LightsLightingData
// {
//
//   struct LightingData
//   {
//       
//       float4 pos;                    // Offset:    0
//       float4 color;                  // Offset:   16
//       float4 direction;              // Offset:   32
//       float attenuation;             // Offset:   48
//       float2 spotFactors;            // Offset:   52
//       uint flags;                    // Offset:   60
//       float4 clippingInfo;           // Offset:   64
//       float4 clipPlanes[3];          // Offset:   80
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
// Resource bind info for ShadowData
// {
//
//   struct ShadowProjTextureData
//   {
//       
//       float4 shadowMapSize;          // Offset:    0
//       float4x4 shadowProjectionMatrix;// Offset:   16
//       float4 spotScaleOffsetUVs;     // Offset:   80
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for LightIndicesPerTileForBlended
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for LightOutputPerTileForBlended
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// DepthVPSampler__SampObj__         sampler      NA          NA    0        1
// EnvironmentMapTexture__SampObj__    sampler      NA          NA    1        1
// EnvironmentMapBRDFTexture__SampObj__    sampler      NA          NA    2        1
// SectorHemiMapSamplerStateLinear    sampler      NA          NA    3        1
// WaterWaveTexture__SampObj__       sampler      NA          NA    4        1
// NormalTexture__SampObj__          sampler      NA          NA    5        1
// ColorClamp3D                      sampler      NA          NA    6        1
// ProjectedTexture0__SampObj__      sampler      NA          NA    7        1
// ReflectionRealTexture__SampObj__    sampler      NA          NA    8        1
// DepthVPSampler__TexObj__          texture  float4          2d    0        1
// EnvironmentMapTexture__TexObj__    texture  float4        cube    1        1
// EnvironmentMapBRDFTexture__TexObj__    texture  float4          2d    2        1
// ExposureBuffer                    texture  struct         r/o    3        1
// SHOccGlobalProbe                  texture  struct         r/o    4        1
// SkyParamBuffer                    texture  struct         r/o    5        1
// SectorOcclusion_HeightTexture__TexObj__    texture  float4          2d    6        1
// WaterWaveTexture__TexObj__        texture  float4          2d    7        1
// NormalTexture__TexObj__           texture  float4          2d    8        1
// VFVolumeTextureRGB                texture  float4          3d    9        1
// VFVolumeTextureAlpha              texture  float4          3d   10        1
// ProjectedTexture0__TexObj__       texture  float4          2d   11        1
// ReflectionRealTexture__TexObj__    texture  float4          2d   12        1
// LightsLightingData                texture  struct         r/o   13        1
// ShadowData                        texture  struct         r/o   14        1
// LightIndicesPerTileForBlended     texture  struct         r/o   15        1
// LightOutputPerTileForBlended      texture  struct         r/o   16        1
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CWaterReflectionParameterProvider    cbuffer      NA          NA    1        1
// CSceneTerrainSkyOcclusionAtlasPrivateData    cbuffer      NA          NA    2        1
// CAmbientProvider                  cbuffer      NA          NA    3        1
// CWaterParameterProvider           cbuffer      NA          NA    4        1
// CWaterWaveParameterProvider       cbuffer      NA          NA    5        1
// WaterRiver                        cbuffer      NA          NA    6        1
// CVolumetricFogBlendedProvider     cbuffer      NA          NA    7        1
// CTileLightingBlendedParameterProvider    cbuffer      NA          NA    8        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xy          8     NONE   float       
// SV_IsFrontFace           0   x           9    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[56], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[19], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[3], immediateIndexed
dcl_constantbuffer cb6[12], immediateIndexed
dcl_constantbuffer cb7[3], immediateIndexed
dcl_constantbuffer cb8[14], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_structured t3, 16 
dcl_resource_structured t4, 16 
dcl_resource_structured t5, 132 
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_structured t13, 128 
dcl_resource_structured t14, 96 
dcl_resource_structured t15, 4 
dcl_resource_structured t16, 4 
dcl_input_ps_siv linear noperspective centroid v0.xy, position
dcl_input_ps linear v1.xyzw
dcl_input_ps linear centroid v2.xyzw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 27

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125
// stereo2mono copy of t12:
dcl_resource_texture2d (float,float,float,float) t100

ld_indexable(texture2d)(float,float,float,float) r22.xyzw, l(0, 0, 0, 0), t125.xyzw


// Camera Position (environment reflections, etc) adjustment inserted with DarkStarSword's asmtool.py:
// asmtool.py -i --fix-fcprimal-reflection --only-autofixed -fq c509714695c77567-ps.txt
mul r25.x, r22.x, r22.y
mul r25.x, r25.x, cb0[0].x
mov r25.yzw, l(0.0)
dp4 r26.x, r25.xyzw, cb0[4].xyzw
dp4 r26.y, r25.xyzw, cb0[5].xyzw
dp4 r26.z, r25.xyzw, cb0[6].xyzw
mov r25.xyzw, cb0[42].xyzw
add r25.xyz, r25.xyz, r26.xyz

mov_sat r0.x, v2.w
dp3 r0.y, v3.xyzx, v3.xyzx
sqrt r0.y, r0.y
add r1.xyz, -v5.xzyx, r25.xzyx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xzw, v1.wxww, t8.yzwx, s5
mad r4.xy, r3.zxzz, l(2.007874, 2.007874, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r4.xyxx, r4.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r4.z, r0.w
sample_indexable(texture2d)(float,float,float,float) r5.xzw, v1.wyww, t8.yzwx, s5
mad r6.xy, r5.zxzz, l(2.007874, 2.007874, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r6.xyxx, r6.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r6.z, r0.w
sample_indexable(texture2d)(float,float,float,float) r7.xzw, v1.wzww, t8.yzwx, s5
mad r8.xy, r7.zxzz, l(2.007874, 2.007874, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r8.xyxx, r8.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r8.z, r0.w
mul r3.xyz, r4.xyzx, v4.xxxx
mul r5.xyz, r6.xyzx, v4.yyyy
mul r7.xyz, r8.xyzx, v4.zzzz
add r3.xyzw, r3.xyzw, r5.xyzw
add r3.xyzw, r3.xyzw, r7.xyzw
mul r4.yw, r3.yyyx, cb6[10].yyyy
mov r4.z, r3.z
dp3 r0.w, r4.yzwy, r4.yzwy
rsq r0.w, r0.w
mul r1.w, r3.w, cb6[3].x
mul r3.x, r0.y, l(0.010000)
add r5.xy, v5.xyxx, -cb5[0].xyxx
dp2 r2.w, cb5[0].zwzz, r5.xyxx
mul r3.w, cb5[2].z, cb5[2].y
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
mad r2.w, r3.w, r2.w, -cb5[2].z
add r4.x, -cb5[2].z, cb5[2].y
div r2.w, r2.w, r4.x
mov r5.x, -r3.x
mov r5.y, l(0)
add r5.xy, r5.xyxx, v5.xyxx
add r5.xy, r5.xyxx, -cb5[0].xyxx
dp2 r5.z, cb5[0].zwzz, r5.xyxx
dp2 r5.x, cb5[1].xyxx, r5.xyxx
div r5.y, l(1.000000, 1.000000, 1.000000, 1.000000), r5.z
mad r5.y, r3.w, r5.y, -cb5[2].z
div r6.y, r5.y, r4.x
mul r5.y, r5.z, cb5[2].x
div r5.x, r5.x, r5.y
mad r6.x, r5.x, l(0.500000), l(0.500000)
mov r3.y, l(0)
add r5.xyzw, r3.xyyx, v5.xyxy
add r5.xyzw, r5.xyzw, -cb5[0].xyxy
dp2 r6.z, cb5[0].zwzz, r5.xyxx
dp2 r5.x, cb5[1].xyxx, r5.xyxx
div r5.y, l(1.000000, 1.000000, 1.000000, 1.000000), r6.z
mad r5.y, r3.w, r5.y, -cb5[2].z
div r7.y, r5.y, r4.x
mul r5.y, r6.z, cb5[2].x
div r5.x, r5.x, r5.y
mad r7.x, r5.x, l(0.500000), l(0.500000)
mov r3.z, -r3.x
add r3.yz, r3.yyzy, v5.xxyx
add r3.yz, r3.yyzy, -cb5[0].xxyx
dp2 r5.x, cb5[0].zwzz, r3.yzyy
dp2 r3.y, cb5[1].xyxx, r3.yzyy
div r3.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.x
mad r3.z, r3.w, r3.z, -cb5[2].z
div r8.y, r3.z, r4.x
mul r3.z, r5.x, cb5[2].x
div r3.y, r3.y, r3.z
mad r8.x, r3.y, l(0.500000), l(0.500000)
dp2 r3.y, cb5[0].zwzz, r5.zwzz
dp2 r3.z, cb5[1].xyxx, r5.zwzz
div r5.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.y
mad r3.w, r3.w, r5.x, -cb5[2].z
div r5.y, r3.w, r4.x
mul r3.y, r3.y, cb5[2].x
div r3.y, r3.z, r3.y
mad r5.x, r3.y, l(0.500000), l(0.500000)
sample_indexable(texture2d)(float,float,float,float) r3.y, r6.xyxx, t7.yxzw, s4
sample_indexable(texture2d)(float,float,float,float) r3.z, r7.xyxx, t7.yzxw, s4
sample_indexable(texture2d)(float,float,float,float) r3.w, r8.xyxx, t7.yzwx, s4
sample_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t7.xyzw, s4
add r5.w, -r3.y, r3.z
add r5.y, -r3.w, r4.x
div r3.xy, r5.ywyy, r3.xxxx
add r2.w, r2.w, l(-0.900000)
mul_sat r2.w, r2.w, l(10.000000)
mad r2.w, r2.w, l(-0.050000), l(0.050000)
mul r3.yw, r2.wwww, r3.xxxy
mov r3.z, l(0)
mad r3.xyz, r4.yzwy, r0.wwww, r3.yzwy
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.yzw, r0.wwww, r3.xxyz
mad r4.xy, r3.wyww, cb6[10].zzzz, v5.xyxx
mul r0.w, |cb0[48].z|, l(0.100000)
dp3 r2.w, r3.wzyw, r2.xyzx
mov_sat r5.x, r2.w
mad r6.x, r5.x, l(0.968750), l(0.015625)
mad r6.y, r1.w, l(0.322916657), l(0.015625)
sample_l_indexable(texture2d)(float,float,float,float) r5.yz, r6.xyxx, t2.zxyw, s2, l(0.000000)
mad_sat r0.w, r0.w, r5.z, r5.y
mov r3.x, l(1.000000)
mul r6.xyzw, r3.xyzw, l(0.282094806, 0.488602519, 0.488602519, 0.488602519)
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r7.xyzw, l(0), l(0), t4.xyzw
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r8.xyzw, l(1), l(0), t4.xyzw
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r9.xyzw, l(2), l(0), t4.xyzw
dp4 r7.x, r7.xyzw, r6.xyzw
dp4 r7.y, r8.xyzw, r6.xyzw
dp4 r7.z, r9.xyzw, r6.xyzw
max r5.yzw, r7.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r7.xyzw, l(0), l(108), t5.yzxw
dp3 r3.x, r7.zxyz, l(0.212600, 0.715200, 0.072200, 0.000000)
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r7.xyz, l(0), l(120), t5.yzxx
dp3 r7.w, r7.wxyw, l(0.212600, 0.715200, 0.072200, 0.000000)
max r3.x, r3.x, r7.w
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r7.w, l(0), l(0), t5.xxxx
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r8.x, l(0), l(36), t5.xxxx
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r8.y, l(0), l(72), t5.xxxx
max r8.x, r8.y, r8.x
max r7.w, r7.w, r8.x
add r3.x, r3.x, r7.w
mul r8.xyz, r3.xxxx, r5.yzwy
dp4 r9.x, cb3[15].xyzw, r6.xyzw
dp4 r9.y, cb3[16].xyzw, r6.xyzw
dp4 r9.z, cb3[17].xyzw, r6.xyzw
max r6.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r9.xy, v5.yxyy, cb2[0].yxyy, cb2[0].wzww
sample_l_indexable(texture2d)(float,float,float,float) r6.w, r9.xyxx, t6.xzwy, s3, l(0.000000)
mad r6.w, r6.w, cb2[2].x, cb2[2].y
add r6.w, -r6.w, v5.z
mul_sat r6.w, -r6.w, cb3[18].x
sqrt r6.w, r6.w
add r9.xy, v5.xyxx, -r25.xyxx
dp2 r8.w, r9.xyxx, r9.xyxx
mad r9.x, cb2[1].x, r8.w, cb2[1].y
mul_sat r9.x, r9.x, l(3.000000)
mul r6.w, r6.w, r9.x
mad r5.yzw, -r5.yyzw, r3.xxxx, r6.xxyz
mad r5.yzw, r6.wwww, r5.yyzw, r8.xxyz
div r6.xy, v7.xyxx, v7.zzzz
sample_l_indexable(texture2d)(float,float,float,float) r6.z, r6.xyxx, t0.yzxw, s0, l(0.000000)
mov r6.w, l(1.000000)
dp4 r3.x, r6.xyzw, cb0[2].xyzw
dp4 r6.x, r6.xyzw, cb0[3].xyzw
div r3.x, -r3.x, r6.x
mul r3.x, r0.y, -r3.x
div r3.x, r3.x, v3.z
mad r6.xy, -r1.wwww, l(0.330000, 1.66666663, 0.000000, 0.000000), l(1.000000, 5.000000, 0.000000, 0.000000)
mul r6.x, r6.x, r6.x
max r6.x, r6.x, l(0.001000)
ftou r6.zw, v0.xxxy
ushr r8.xy, r6.zwzz, l(3, 3, 0, 0)
imad r8.x, r8.y, cb8[13].x, r8.x
mul r9.xyz, cb4[1].zzzz, cb8[11].xyzx
mad r10.xyz, r1.xzyx, r0.zzzz, -cb8[12].xyzx
dp3 r8.y, r10.xyzx, r10.xyzx
rsq r8.y, r8.y
mul r10.xyz, r8.yyyy, r10.xyzx
dp3 r8.y, r10.xzyx, r2.xyzx
add r8.y, -r8.y, l(1.000000)
mul r8.z, r8.y, r8.y
mul r8.z, r8.z, r8.z
mul r8.y, r8.y, r8.z
mad r8.y, r8.y, l(0.980000), l(0.020000)
dp3_sat r8.z, -cb8[12].yzxy, r3.yzwy
mul r9.w, r5.x, r5.x
mul r10.w, r6.x, r6.x
mad r11.x, -r6.x, r6.x, l(1.000000)
mad r9.w, r9.w, r11.x, r10.w
sqrt r9.w, r9.w
mul r11.y, r8.z, r8.z
mad r11.y, r11.y, r11.x, r10.w
sqrt r11.y, r11.y
mul r11.y, r5.x, r11.y
mad r11.y, r8.z, r9.w, r11.y
add r11.y, r11.y, r11.y
max r11.y, r11.y, l(0.000100)
div r11.y, l(1.000000, 1.000000, 1.000000, 1.000000), r11.y
dp3_sat r10.x, r10.yzxy, r3.yzwy
mad r10.y, r6.x, r6.x, l(-1.000000)
mul r10.x, r10.x, r10.x
mad r10.x, r10.x, r10.y, l(1.000000)
div r10.x, r6.x, r10.x
mul r10.x, r10.x, r10.x
mul r12.xyz, r9.xyzx, r10.xxxx
mul r12.xyz, r8.zzzz, r12.xyzx
mul r11.yzw, r11.yyyy, r12.xxyz
mul r11.yzw, r8.yyyy, r11.yyzw
mul r9.xyz, r9.xyzx, r8.zzzz
ishl r8.y, r8.x, l(1)
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r8.y, r8.y, l(0), t15.xxxx
countbits r8.z, r8.y
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.x, r8.x, l(0), t16.xxxx
and r10.x, r10.x, l(0x60000000)
ine r10.x, r10.x, l(0)
mov r4.z, v5.z
mov r4.w, l(1.000000)
mov r12.xyz, r9.xyzx
mov r13.xyz, r11.yzwy
mov r10.z, r8.y
mov r12.w, l(0)
loop 
  uge r13.w, r12.w, r8.z
  breakc_nz r13.w
  firstbit_lo r13.w, r10.z
  ishl r14.x, l(1), r13.w
  not r14.x, r14.x
  and r10.z, r10.z, r14.x
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r14.xyzw, r13.w, l(0), t13.xyzw
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r15.xyz, r13.w, l(16), t13.xyzx
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r16.xyz, r13.w, l(32), t13.xyzx
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyzw, r13.w, l(48), t13.xyzw
  and r18.xyzw, r17.wwww, l(32, 16, 1, 4)
  ult r18.xyzw, l(0, 0, 0, 0), r18.xyzw
  ushr r13.w, r17.w, l(5)
  and r13.w, r13.w, l(2)
  or r15.w, r18.y, r18.x
  and r15.w, r10.x, r15.w
  if_nz r15.w
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r19.xyzw, r13.w, l(16), t14.xyzw
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r20.xyzw, r13.w, l(32), t14.xyzw
  else 
    mov r19.xyzw, l(0,0,0,0)
    mov r20.xyzw, l(0,0,0,0)
  endif 
  add r14.xyz, -r14.xyzx, v5.xyzx
  dp3 r15.w, r14.xyzx, r14.xyzx
  max r16.w, r15.w, l(0.000010)
  div r17.w, l(1.000000, 1.000000, 1.000000, 1.000000), r16.w
  min r14.w, r14.w, r17.w
  mul r16.w, r16.w, r16.w
  mad_sat r16.w, -r16.w, r17.x, l(1.000000)
  mul r16.w, r16.w, r16.w
  mul r14.w, r14.w, r16.w
  mul r15.xyz, r14.wwww, r15.xyzx
  rsq r14.w, r15.w
  mul r21.xyz, r14.wwww, r14.xyzx
  dp3 r14.w, r21.xyzx, r16.xyzx
  mad_sat r14.w, r14.w, r17.y, r17.z
  mul r14.w, r14.w, r14.w
  mul r16.xyz, r15.xyzx, r14.wwww
  movc r15.xyz, r18.zzzz, r16.xyzx, r15.xyzx
  mad r16.xyz, r1.xzyx, r0.zzzz, -r14.xyzx
  dp3 r14.w, r16.xyzx, r16.xyzx
  rsq r14.w, r14.w
  mul r16.xyz, r14.wwww, r16.xyzx
  dp3 r14.w, r16.xzyx, r2.xyzx
  add r14.w, -r14.w, l(1.000000)
  mul r15.w, r14.w, r14.w
  mul r15.w, r15.w, r15.w
  mul r14.w, r14.w, r15.w
  mad r14.w, r14.w, l(0.980000), l(0.020000)
  and r15.w, r18.x, r18.z
  if_z r13.w
    dp4 r17.x, r4.xyzw, r19.xyzw
    dp4 r17.y, r4.xyzw, r20.xyzw
    sample_l_indexable(texture2d)(float,float,float,float) r17.xyz, r17.xyxx, t11.xyzw, s7, l(0.000000)
    mul r17.xyz, r15.xyzx, r17.xyzx
  else 
    mov r17.xyz, r15.xyzx
  endif 
  movc r15.xyz, r15.wwww, r17.xyzx, r15.xyzx
  dp3_sat r13.w, -r14.yzxy, r3.yzwy
  mul r14.x, r13.w, r13.w
  mad r14.x, r14.x, r11.x, r10.w
  sqrt r14.x, r14.x
  mul r14.x, r5.x, r14.x
  mad r14.x, r13.w, r9.w, r14.x
  add r14.x, r14.x, r14.x
  max r14.x, r14.x, l(0.000100)
  div r14.x, l(1.000000, 1.000000, 1.000000, 1.000000), r14.x
  movc r14.y, r18.w, l(0.001500), l(0.050000)
  dp3_sat r14.z, r16.yzxy, r3.yzwy
  mul r14.z, r14.z, r14.z
  mad r14.z, r14.z, r10.y, l(1.000000)
  div r14.z, r6.x, r14.z
  mul r14.z, r14.z, r14.z
  mul r16.xyz, r14.zzzz, r15.xyzx
  mul r16.xyz, r13.wwww, r16.xyzx
  mul r16.xyz, r14.xxxx, r16.xyzx
  mul r14.xyz, r14.yyyy, r16.xyzx
  mad r13.xyz, r14.xyzx, r14.wwww, r13.xyzx
  mad r12.xyz, r13.wwww, r15.xyzx, r12.xyzx
  iadd r12.w, r12.w, l(1)
endloop 
bfi r8.x, l(31), l(1), r8.x, l(1)
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r8.x, r8.x, l(0), t15.xxxx
countbits r8.y, r8.x
mov r4.z, v5.z
mov r4.w, l(1.000000)
mov r9.xyz, r12.xyzx
mov r11.yzw, r13.xxyz
mov r8.z, r8.x
mov r10.z, l(0)
loop 
  uge r12.w, r10.z, r8.y
  breakc_nz r12.w
  firstbit_lo r12.w, r8.z
  ishl r13.w, l(1), r12.w
  not r13.w, r13.w
  and r8.z, r8.z, r13.w
  iadd r12.w, l(32), r12.w
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r14.xyzw, r12.w, l(0), t13.xyzw
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r15.xyz, r12.w, l(16), t13.xyzx
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r16.xyz, r12.w, l(32), t13.xyzx
  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyzw, r12.w, l(48), t13.xyzw
  and r18.xyzw, r17.wwww, l(32, 16, 1, 4)
  ult r18.xyzw, l(0, 0, 0, 0), r18.xyzw
  ushr r12.w, r17.w, l(5)
  and r12.w, r12.w, l(2)
  or r13.w, r18.y, r18.x
  and r13.w, r10.x, r13.w
  if_nz r13.w
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r19.xyzw, r12.w, l(16), t14.xyzw
    ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r20.xyzw, r12.w, l(32), t14.xyzw
  else 
    mov r19.xyzw, l(0,0,0,0)
    mov r20.xyzw, l(0,0,0,0)
  endif 
  add r14.xyz, -r14.xyzx, v5.xyzx
  dp3 r13.w, r14.xyzx, r14.xyzx
  max r15.w, r13.w, l(0.000010)
  div r16.w, l(1.000000, 1.000000, 1.000000, 1.000000), r15.w
  min r14.w, r14.w, r16.w
  mul r15.w, r15.w, r15.w
  mad_sat r15.w, -r15.w, r17.x, l(1.000000)
  mul r15.w, r15.w, r15.w
  mul r14.w, r14.w, r15.w
  mul r15.xyz, r14.wwww, r15.xyzx
  rsq r13.w, r13.w
  mul r21.xyz, r13.wwww, r14.xyzx
  dp3 r13.w, r21.xyzx, r16.xyzx
  mad_sat r13.w, r13.w, r17.y, r17.z
  mul r13.w, r13.w, r13.w
  mul r16.xyz, r15.xyzx, r13.wwww
  movc r15.xyz, r18.zzzz, r16.xyzx, r15.xyzx
  mad r16.xyz, r1.xzyx, r0.zzzz, -r14.xyzx
  dp3 r13.w, r16.xyzx, r16.xyzx
  rsq r13.w, r13.w
  mul r16.xyz, r13.wwww, r16.xyzx
  dp3 r13.w, r16.xzyx, r2.xyzx
  add r13.w, -r13.w, l(1.000000)
  mul r14.w, r13.w, r13.w
  mul r14.w, r14.w, r14.w
  mul r13.w, r13.w, r14.w
  mad r13.w, r13.w, l(0.980000), l(0.020000)
  and r14.w, r18.x, r18.z
  if_z r12.w
    dp4 r17.x, r4.xyzw, r19.xyzw
    dp4 r17.y, r4.xyzw, r20.xyzw
    sample_l_indexable(texture2d)(float,float,float,float) r17.xyz, r17.xyxx, t11.xyzw, s7, l(0.000000)
    mul r17.xyz, r15.xyzx, r17.xyzx
  else 
    mov r17.xyz, r15.xyzx
  endif 
  movc r15.xyz, r14.wwww, r17.xyzx, r15.xyzx
  dp3_sat r12.w, -r14.yzxy, r3.yzwy
  mul r14.x, r12.w, r12.w
  mad r14.x, r14.x, r11.x, r10.w
  sqrt r14.x, r14.x
  mul r14.x, r5.x, r14.x
  mad r14.x, r12.w, r9.w, r14.x
  add r14.x, r14.x, r14.x
  max r14.x, r14.x, l(0.000100)
  div r14.x, l(1.000000, 1.000000, 1.000000, 1.000000), r14.x
  movc r14.y, r18.w, l(0.001500), l(0.050000)
  dp3_sat r14.z, r16.yzxy, r3.yzwy
  mul r14.z, r14.z, r14.z
  mad r14.z, r14.z, r10.y, l(1.000000)
  div r14.z, r6.x, r14.z
  mul r14.z, r14.z, r14.z
  mul r16.xyz, r14.zzzz, r15.xyzx
  mul r16.xyz, r12.wwww, r16.xyzx
  mul r14.xzw, r14.xxxx, r16.xxyz
  mul r14.xyz, r14.yyyy, r14.xzwx
  mad r11.yzw, r14.xxyz, r13.wwww, r11.yyzw
  mad r9.xyz, r12.wwww, r15.xyzx, r9.xyzx
  iadd r10.z, r10.z, l(1)
endloop 
add_sat r1.xyz, cb6[5].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r4.xy, v0.xyxx, cb0[40].zwzz
mad r8.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r8.xy, -|r8.xyxx|, |r8.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r10.xy, r3.wyww, cb6[11].yyyy
mad r10.xy, r10.xyxx, r0.yyyy, v6.xyxx
mov r10.z, v6.z
mov r10.w, l(1.000000)

// Far Cry Primal Reflection Fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -i --fix-fcprimal-reflection --only-autofixed -fq c509714695c77567-ps.txt

// ViewProjectionMatrix:
dp4 r22.w, r10.xyzw, cb0[19].xyzw
// Stereo Correction:
add r22.w, r22.w, -r22.y
mul r23.x, r22.w, r22.x
mov r23.yzw, l(0.0)
// InvProjectionMatrix:
dp4 r24.x, r23.xyzw, cb0[0].xyzw
dp4 r24.y, r23.xyzw, cb0[1].xyzw
dp4 r24.z, r23.xyzw, cb0[2].xyzw
dp4 r24.w, r23.xyzw, cb0[3].xyzw
// InvViewMatrix:
dp4 r23.x, r24.xyzw, cb0[4].xyzw
dp4 r23.y, r24.xyzw, cb0[5].xyzw
// Negate Z to fix alignment when camera is tilted:
dp4 r23.z, -r24.xyzw, cb0[6].xyzw
// Adjust Coord:
add r10.xyz, r10.xyz, r23.xyzw

dp4 r12.x, r10.xyzw, cb1[0].xyzw
dp4 r12.y, r10.xyzw, cb1[1].xyzw
dp4 r0.z, r10.xyzw, cb1[3].xyzw
div r10.xy, r12.xyxx, r0.zzzz
mad r4.zw, -v0.xxxx, cb0[40].zzzz, l(0.000000, 0.000000, 1.000000, 1.000000)
add r4.xz, -r4.zzyz, r10.xxyx
mad_sat r4.xy, r4.xzxx, r8.xyxx, r4.wyww

// Swap reflection eyes from stereo2mono reflection copy.
// Mip-maps disabled as the reverse stereo blit only copies them in one eye
mov r23.xyzw, r4.xyzw
mul r23.x, r23.x, l(0.5)
eq r22.w, r22.z, l(-1.0)
if_nz r22.w
  add r23.x, r23.x, l(0.5)
endif

// sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t12.xyzw, s8, r6.y
sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r23.xyxx, t100.xyzw, s8, l(0.0)

min r4.xyz, r4.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000)
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r0.z, l(0), l(12), t3.xxxx
mul r4.xyz, r0.zzzz, r4.xyzx
mad_sat r4.w, r8.w, cb4[1].x, cb4[1].y
mul r8.xyz, r1.xyzx, r5.yzwy
add r2.w, r2.w, r2.w
mad r2.xyz, r3.wzyw, -r2.wwww, r2.xyzx
mov r2.xyz, -r2.xyzx
mad r1.w, -r1.w, l(2.000000), l(6.000000)
sample_l_indexable(texturecube)(float,float,float,float) r2.xyz, r2.xyzx, t1.xyzw, s1, r1.w
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r3.yzw, l(0), l(108), t5.xxyz
dp3 r1.w, r3.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r7.xy, l(0), l(124), t5.xyxx
dp3 r2.w, r7.zxyz, l(0.212600, 0.715200, 0.072200, 0.000000)
max r1.w, r1.w, r2.w
add r1.w, r7.w, r1.w
add r1.w, r1.w, l(-1.000000)
mad r1.w, cb0[55].w, r1.w, l(1.000000)
mul r2.xyz, r1.wwww, r2.xyzx
mad r2.xyz, r2.xyzx, cb6[11].xxxx, cb6[10].wwww
mad r2.xyz, r8.xyzx, r2.xyzx, -r4.xyzx
mad r2.xyz, r4.wwww, r2.xyzx, r4.xyzx
add r0.y, -r0.y, r3.x
mul r0.y, r0.y, -cb6[0].x
exp r0.y, r0.y
add r0.y, -r0.y, l(1.000000)
max r0.y, r0.y, l(0.000000)
add r3.xyz, r5.yzwy, r9.xyzx
mul r3.xyz, r3.xyzx, l(0.980000, 0.980000, 0.980000, 0.000000)
mad r2.xyz, r2.xyzx, r0.wwww, r11.yzwy
mul r1.xyz, r1.xyzx, cb6[4].xyzx
mul r2.xyz, r0.yyyy, r2.xyzx
mad r1.xyz, r3.xyzx, r1.xyzx, r2.xyzx
lt r2.xy, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[39].zwzz
and r0.w, r2.y, r2.x
if_nz r0.w
  add r2.xyz, v5.xyzx, -r25.xyzx
  dp3 r0.w, r2.xyzx, r2.xyzx
  sqrt r0.w, r0.w
  utof r2.xy, r6.zwzz
  mul r2.xy, r2.xyxx, cb0[40].zwzz
  add r0.w, r0.w, -cb7[0].w
  div r0.w, r0.w, cb7[0].z
  log r0.w, r0.w
  mul r0.w, r0.w, l(0.250000)
  ushr r1.w, cb7[2].z, l(1)
  utof r1.w, r1.w
  mul r0.w, r0.w, r1.w
  iadd r1.w, cb7[2].z, l(-1)
  itof r1.w, r1.w
  div r2.z, r0.w, r1.w
  sample_l_indexable(texture3d)(float,float,float,float) r3.xyz, r2.xyzx, t9.xyzw, s6, l(0.000000)
  sample_l_indexable(texture3d)(float,float,float,float) r0.w, r2.xyzx, t10.yzwx, s6, l(0.000000)
  mul r2.xyz, r0.zzzz, r3.xyzx
else 
  add r3.xyz, v5.xyzx, -r25.xyzx
  dp3 r0.z, r3.xyzx, r3.xyzx
  sqrt r0.z, r0.z
  mad_sat r0.z, r0.z, cb0[35].y, cb0[35].x
  mul r1.w, r3.z, cb0[39].y
  max r1.w, r1.w, l(-125.000000)
  lt r2.w, l(0.000001), |r1.w|
  exp r3.x, -r1.w
  add r3.x, -r3.x, l(1.000000)
  div r1.w, r3.x, r1.w
  movc r1.w, r2.w, r1.w, l(1.000000)
  mad r1.w, r1.w, cb0[39].x, cb0[35].w
  mul r0.z, r0.z, r1.w
  mul r0.z, r0.z, -cb0[35].z
  exp r0.w, r0.z
  mad r2.xyz, -v2.xyzx, r0.wwww, v2.xyzx
endif 
mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
mul r1.xyz, r0.yyyy, r1.xyzx
mov r1.w, -r0.y
mad r0.xyzw, r0.xxxx, r1.xyzw, l(0.000000, 0.000000, 0.000000, 1.000000)
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r1.x, l(0), l(0), t3.xxxx
mul r0.xyz, r0.xyzx, r1.xxxx
max r0.xyz, r0.xyzx, l(0.0000610351999, 0.0000610351999, 0.0000610351999, 0.000000)
min o0.xyz, r0.xyzx, l(8192.000000, 8192.000000, 8192.000000, 0.000000)
mov o0.w, r0.w
ret 
// Approximately 485 instruction slots used