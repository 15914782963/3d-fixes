// Torch lighting shader at start of game

//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   sampler2D AttenTex;
//   sampler2D DepthSpecBuffer;
//   float4 InvShadowMapSize;
//   float2 InvTexSizeMask;
//   float4 LightColor;
//   float3 LightPos;
//   float4x4 LightProjectionTex[4];
//   float4 LightRadius;
//   float3 LightWorldSpace;
//   sampler2D NormalBuffer;
//   sampler2D ShadowTex;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   LightPos           c32      1
//   LightColor         c33      1
//   LightRadius        c34      1
//   InvTexSizeMask     c53      1
//   LightWorldSpace    c54      1
//   InvShadowMapSize   c56      1
//   LightProjectionTex c61     16
//   NormalBuffer       s1       1
//   DepthSpecBuffer    s2       1
//   AttenTex           s3       1
//   ShadowTex          s5       1
//

    ps_3_0
    def c0, 0.5, 2, -1, 0
    def c1, 255, -0.57735002, 0.816500008, 0
    def c2, -0.57735002, -0.816500008, 0, 0.57735002
    def c3, 0, 2, -2, 1
    def c4, 0.0625, 0, 0, 0
    def c5, 3, 2, 0, 1
    defi i0, 5, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1.xyw
    dcl_texcoord2 v2.xyz
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s5

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

    rcp r0.x, v1.w
    mul r0.xy, r0.x, v1
    mad r0.xy, r0, c0.x, c0.x
    mov r1.xw, c0
    mad r0.xy, c53, r1.x, r0

    texld r2, r0, s2

    rcp r0.z, v0.w
    texld r3, r0, s1
    mad_pp r0.xyw, r3.xyzz, c0.y, c0.z
    nrm_pp r1.xyz, v0
    dp3 r2.y, r1, r0.xyww
    add r2.y, r2.y, r2.y
    mad r1.xyz, r0.xyww, -r2.y, r1
    mul r2.yzw, r0.z, v0.xxyz

    mad r2.xyz, r2.x, r2.yzww, v2

mul r29, c190, r2.x
mad r29, c191, r2.y, r29
mad r29, c192, r2.z, r29
add r29, c193, r29

mul r30, c184, r29.x
mad r30, c185, r29.y, r30
mad r30, c186, r29.z, r30
mad r30, c187, r29.w, r30

texldl r31, c220.z, s13
add r31.w, r30.w, -r31.y
mul r31.w, r31.w, r31.x

add r30.x, r30.x, -r31.w

mul r29, c180, r30.x
mad r29, c181, r30.y, r29
mad r29, c182, r30.z, r29
mad r29, c183, r30.w, r29

mul r28, c194, r29.x
mad r28, c195, r29.y, r28
mad r28, c196, r29.z, r28
mad r28, c197, r29.w, r28

mov r2.xyz, r28

    add r3.xyz, -r2, c32
    dp3 r0.z, r3, r3
    rsq r0.z, r0.z
    mul r3.xyz, r0.z, r3
    dp3_sat r1.x, r3, r1
    add r4.xyz, r2, -c54
    dp2add r5.y, r4, c1_abs.zyzw, c1_abs.w
    dp2add r5.x, r4.yzzw, c2, c2.z
    dp2add r6.x, r4.yzzw, c1.yzzw, c1.w
    dp2add r6.y, r4, c2.ywzw, c2.z
    add r1.yz, r5.xxyw, -r6.xxyw
    cmp r1.z, r1.z, c5.x, c5.y
    max r4.xy, r6, r5
    add r4.x, -r4.y, r4.x
    cmp r1.z, r4.x, c0.w, r1.z
    cmp r4.x, r4.x, c0_abs.z, c0_abs.w
    cmp r1.y, r1.y, r4.x, c0.w
    add r1.y, r1.z, r1.y
    add r4, r1.y, -c5.zwyx
    cmp r5, -r4_abs.x, c64, r1.w
    cmp r5, -r4_abs.y, c68, r5
    cmp r5, -r4_abs.z, c72, r5
    cmp r6.w, -r4_abs.w, c76.w, r5.w
    cmp r5.xyw, -r4_abs.w, c76.xyzz, r5.xyzz
    mov r7.w, r5.x
    mov r8.w, r5.y
    cmp r9, -r4_abs.x, c61, r1.w
    cmp r9, -r4_abs.y, c65, r9
    cmp r9, -r4_abs.z, c69, r9
    cmp r9.xyz, -r4_abs.w, c73, r9
    cmp r6.x, -r4_abs.w, c73.w, r9.w
    mov r7.x, r9.x
    cmp r10, -r4_abs.x, c62, r1.w
    cmp r10, -r4_abs.y, c66, r10
    cmp r10, -r4_abs.z, c70, r10
    cmp r6.y, -r4_abs.w, c74.w, r10.w
    cmp r11, -r4_abs.x, c63, r1.w
    cmp r11, -r4_abs.y, c67, r11
    cmp r11, -r4_abs.z, c71, r11
    cmp r6.z, -r4_abs.w, c75.w, r11.w
    mov r2.w, -c0.z
    dp4 r1.y, r6, r2
    cmp r4.xyz, -r4_abs.w, c74, r10
    cmp r5.xyz, -r4_abs.w, c75, r11
    mov r7.y, r4.x
    mov r7.z, r5.x
    dp4 r6.x, r7, r2
    mov r8.x, r9.y
    mov r8.y, r4.y
    mov r8.z, r5.y
    dp4 r6.y, r8, r2
    mov r5.y, r4.z
    mov r5.x, r9.z
    dp4 r6.z, r5, r2
    rcp r1.y, r1.y
    mul r1.yzw, r1.y, r6.xxyz
    mul r2.xy, r1.yzzw, c56.zwzw
    frc r2.xy, r2
    mad r4.zw, r1.w, c0_abs, c0_abs.xywz
    add r2.zw, -r2.xyxy, -c0.z
    mov r1.w, c0.w
    mov r5.y, -c0.y
    rep i0
      add r6.xyz, r5.y, c3.yzww
      cmp r5.z, r6.y, r2.y, -c0.z
      cmp r5.z, -r6.x, r2.w, r5.z
      mov r7.x, r1.w
      mov r7.y, -c0.y
      rep i0
        mov r5.x, r7.y
        mad r4.xy, r5, c56, r1.yzzw
        texldp r8, r4, s5
        add r7.yzw, r7.y, c3.xwyz
        cmp r4.x, r7.w, r2.x, -c0.z
        cmp r4.x, -r7.z, r2.z, r4.x
        mul r4.x, r4.x, r8.x
        mad r7.x, r4.x, r5.z, r7.x
      endrep
      mov r1.w, r7.x
      mov r5.y, r6.z
    endrep
    mul r1.y, r3.w, c1.x
    max r2.x, r1.y, -c0.z
    pow r3.w, r1.x, r2.x
    rcp r0.z, r0.z
    mul_pp r1.x, r0.z, c34.y
    mov r1.y, c0.w
    texld_pp r2, r1, s3
    mul r0.z, r3.w, c33.w
    mul r4.w, r0.z, r2.x
    mul r0.z, r1.w, c4.x
    dp3_sat r0.x, r3, r0.xyww
    mul r1.xyz, r2.x, c33
    mul r4.xyz, r0.x, r1
    mul oC0, r0.z, r4

// approximately 124 instruction slots used (4 texture, 120 arithmetic)
