// ---- Created with 3Dmigoto v1.3.0 on Sat Feb 06 02:19:31 2016
Texture2D<float4> t12 : register(t12);

Texture2D<float4> t11 : register(t11);

Texture2D<float4> t10 : register(t10);

Texture2D<float4> t9 : register(t9);

Texture2D<float4> t8 : register(t8);

Texture2D<float4> t7 : register(t7);

Texture2D<float4> t6 : register(t6);

Texture2D<float4> t5 : register(t5);

Texture2D<float4> t4 : register(t4);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

TextureCube<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s12_s : register(s12);

SamplerState s11_s : register(s11);

SamplerState s10_s : register(s10);

SamplerState s9_s : register(s9);

SamplerState s8_s : register(s8);

SamplerState s7_s : register(s7);

SamplerState s6_s : register(s6);

SamplerComparisonState s5_s : register(s5);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb1 : register(b1)
{
  float4 cb1[29];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[5];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float3 v0 : TEXCOORD0,
  float w0 : TEXCOORD1,
  linear centroid float4 v1 : TEXCOORD2,
  float4 v2 : TEXCOORD3,
  float3 v3 : TEXCOORD4,
  float4 v4 : SV_Position0,
  uint v5 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = v0.xy * cb0[2].xx + cb0[2].zw;
  r0.zw = float2(0.0009765625,-0.0009765625) + r0.xy;
  r1.xyzw = t10.Sample(s10_s, r0.zw).xyzw;
  r2.xyzw = t11.Sample(s11_s, r0.xy).xyzw;
  r3.xyzw = float4(0.00999999978,0.00999999978,0.119999997,0.119999997) * v0.xyxy;
  r0.zw = cb1[21].xy * cb1[1].xx;
  r4.xyzw = r0.zwzw * float4(0.200000003,0.200000003,0.100000001,0.100000001) + r3.xyxy;
  r5.xyzw = t2.Sample(s2_s, r4.xy).xyzw;
  r4.xyzw = t3.Sample(s3_s, r4.zw).xyzw;
  r1.yw = r0.zw * float2(0.479999989,0.479999989) + r3.zw;
  r3.xyzw = t2.Sample(s2_s, r1.yw).xyzw;
  r1.yw = -cb0[3].xy + v0.xy;
  r3.z = cb0[3].z * cb0[3].z;
  r3.w = dot(r1.yw, r1.yw);
  r3.w = cb0[3].z * cb0[3].z + -r3.w;
  r3.z = saturate(r3.w / r3.z);
  r6.y = r3.z * r3.z;
  r3.z = min(abs(r1.y), abs(r1.w));
  r4.z = max(abs(r1.y), abs(r1.w));
  r4.z = 1 / r4.z;
  r3.z = r4.z * r3.z;
  r4.z = r3.z * r3.z;
  r4.w = r4.z * 0.0208350997 + -0.0851330012;
  r4.w = r4.z * r4.w + 0.180141002;
  r4.w = r4.z * r4.w + -0.330299497;
  r4.z = r4.z * r4.w + 0.999866009;
  r4.w = r4.z * r3.z;
  r5.z = cmp(abs(r1.w) < abs(r1.y));
  r4.w = r4.w * -2 + 1.57079637;
  r4.w = r5.z ? r4.w : 0;
  r3.z = r3.z * r4.z + r4.w;
  r4.z = cmp(-r1.w < r1.w);
  r4.z = r4.z ? -3.141593 : 0;
  r3.z = r4.z + r3.z;
  r4.z = min(r1.y, -r1.w);
  r1.y = max(r1.y, -r1.w);
  r1.w = cmp(r4.z < -r4.z);
  r1.y = cmp(r1.y >= -r1.y);
  r1.y = r1.y ? r1.w : 0;
  r1.y = r1.y ? -r3.z : r3.z;
  r1.y = 0.318310142 * r1.y;
  r6.x = abs(r1.y);
  r7.y = cb1[1].x * cb0[0].w;
  r7.x = cb1[1].x;
  r1.yw = r7.xy * float2(0,0.75) + r6.xy;
  r7.xyzw = t2.Sample(s2_s, r1.yw).xyzw;
  r1.y = cb1[1].x * 0.5;
  r1.yw = cb1[21].xy * r1.yy;
  r1.yw = float2(0.200000003,0.200000003) * r1.yw;
  r1.yw = v0.xy * float2(0.0599999987,0.0599999987) + r1.yw;
  r8.xyzw = t2.Sample(s2_s, r1.yw).xyzw;
  if (v5.x != 0) {
    r6.xzw = cb1[0].xyz + -v0.xyz;
    r1.y = dot(r6.xzw, r6.xzw);
    r1.w = rsqrt(r1.y);
    r9.xyz = r6.xzw * r1.www;
    r4.zw = cb1[19].xy * v4.xy;
    r4.zw = saturate(r4.zw);
    r4.zw = cb1[20].zw * r4.zw;
    r10.xyzw = t7.SampleLevel(s7_s, r4.zw, 0, int2(0, 0)).xyzw;
    r3.z = r10.x * cb1[19].z + cb1[19].w;
    r3.z = 1 / r3.z;
    r4.z = -w0.x + r3.z;
    r1.x = r1.x + r1.x;
    r1.z = cb0[4].z + r1.z;
    r10.xyzw = t0.SampleLevel(s0_s, v1.xy, 0, int2(0, 0)).xyzw;
    r4.w = r10.w * 0.850000024 + 0.150000006;
    r10.xyz = r10.xyz * r4.www;
    r10.xyz = r10.xyz * r10.xyz;
    r10.xyz = cb0[1].xxx * r10.xyz;
    r4.w = dot(r10.xyz, float3(0.221729487,0.162337661,0.117096022));
    r11.xyz = float3(0.00499999989,0.00499999989,0.25) * v0.xyw;
    r5.zw = -r0.zw * float2(0.400000006,0.400000006) + r11.xy;
    r12.xyzw = t4.SampleLevel(s4_s, r5.zw, 0, int2(0, 0)).xyzw;
    r5.z = r12.y + r12.y;
    r7.zw = r4.xy + -r5.xy;
    r5.zw = r5.zz * r7.zw + r5.xy;
    r5.zw = r5.zw * float2(2,2) + float2(-1,-1);
    r12.xy = r5.zw * r1.zz;
    r12.z = 2;
    r5.z = dot(r12.xyz, r12.xyz);
    r5.z = rsqrt(r5.z);
    r13.w = r12.z * r5.z;
    r7.zw = r3.xy * float2(2,2) + float2(-1,-1);
    r14.xyzw = r1.zzzz * float4(0.939999998,0.5,0.800000012,4) + float4(0.0599999987,0.5,0.200000003,1);
    r13.xy = r14.xx * r7.zw;
    r13.z = 32;
    r5.w = dot(r13.xyz, r13.xyz);
    r5.w = rsqrt(r5.w);
    r11.xyw = r13.xyw * r5.www;
    r12.xy = r12.xy * r5.zz + r11.xy;
    r12.z = 32 * r11.w;
    r5.z = dot(r12.xyz, r12.xyz);
    r5.z = rsqrt(r5.z);
    r3.w = cmp(r3.w < 0);
    if (r3.w != 0) discard;
    r3.w = r6.y * r6.y + -r6.y;
    r3.w = cb0[3].w * r3.w;
    r13.w = -4 * r3.w;
    r13.xy = r7.xy * float2(2,2) + float2(-1,-1);
    r13.z = 2;
    r3.w = dot(r13.xyz, r13.xyz);
    r3.w = rsqrt(r3.w);
    r7.xyz = r13.xyw * r3.www;
    r7.xyz = r7.xyz * r13.wwz;
    r7.xyz = r12.xyz * r5.zzz + r7.xyz;
    r3.w = dot(r7.xyz, r7.xyz);
    r3.w = rsqrt(r3.w);
    r7.xyz = r7.xyz * r3.www;
    r3.w = dot(r9.xyz, r7.xyz);
    r3.w = r3.w + r3.w;
    r11.xyw = r7.xyz * -r3.www + r9.xyz;
    r5.zw = r8.xy * float2(2,2) + float2(-1,-1);
    r8.xy = r14.yy * r5.zw;
    r8.z = 14;
    r3.w = dot(r8.xyz, r8.xyz);
    r3.w = rsqrt(r3.w);
    r5.zw = r8.xy * r3.ww;
    r5.zw = float2(20,20) * r5.zw;
    r3.w = r14.y * 0.5 + 0.5;
    r5.zw = r5.zw / r3.ww;
    r5.zw = r5.zw * r5.zw;
    r5.zw = r5.zw / w0.xw;
    r5.zw = v4.xy * cb1[19].xy + r5.zw;
    r8.xyzw = t12.SampleLevel(s12_s, r5.zw, 0, int2(0, 0)).xyzw;
    r3.w = -0.0850000009 + r8.x;
    r3.w = saturate(66.6666641 * r3.w);
    r5.z = r3.w * -2 + 3;
    r3.w = r3.w * r3.w;
    r3.w = r5.z * r3.w;
    r3.w = min(1, r3.w);
    r5.z = 1 + -r3.w;
    r1.x = r5.z * r1.x;
    r1.y = sqrt(r1.y);
    r5.z = cmp(r1.y < 256);
    if (r5.z != 0) {
      r5.z = v0.z * cb1[5].z + cb1[5].w;
      r5.z = v0.y * cb1[5].y + r5.z;
      r8.x = v0.x * cb1[5].x + r5.z;
      r5.z = v0.z * cb1[6].z + cb1[6].w;
      r5.z = v0.y * cb1[6].y + r5.z;
      r8.y = v0.x * cb1[6].x + r5.z;
      r5.z = v0.z * cb1[7].z + cb1[7].w;
      r5.z = v0.y * cb1[7].y + r5.z;
      r8.z = v0.x * cb1[7].x + r5.z;
      r8.xyz = r8.xyz * cb1[11].xyz + cb1[15].xyz;
      r5.zw = -cb1[4].zw * float2(0.5,0.5) + r8.xy;
      r5.zw = r5.zw * cb1[4].xy + float2(0.5,0.5);
      r8.xy = floor(r5.zw);
      r5.zw = -r8.xy + r5.zw;
      r8.xy = float2(-0.5,-0.5) + r8.xy;
      r8.xy = cb1[4].zw * r8.xy;
      r12.xy = -r5.wz * float2(3,3) + float2(4,4);
      r12.zw = r5.zw * float2(3,3) + float2(1,1);
      r13.xy = -r5.zw * float2(2,2) + float2(3,3);
      r13.xy = r13.xy / r12.yx;
      r13.zw = float2(3,3) + r5.zw;
      r5.zw = r5.zw / r12.zw;
      r15.xw = float2(-2,-2) + r13.xy;
      r15.yz = float2(0.142857149,0.142857149) * r13.wz;
      r13.xy = float2(2,2) + r5.zw;
      r5.z = r12.y * r12.x;
      r16.xyzw = r15.xwzw * cb1[4].zwzw + r8.xyxy;
      r5.w = t5.SampleCmpLevelZero(s5_s, r16.xy, r8.z).x;
      r14.xy = float2(7,7) * r12.xy;
      r6.y = t5.SampleCmpLevelZero(s5_s, r16.zw, r8.z).x;
      r6.y = r14.x * r6.y;
      r5.z = r5.z * r5.w + r6.y;
      r12.xy = r12.zw * r12.xy;
      r13.zw = r15.wy;
      r16.xyzw = r13.xzxw * cb1[4].zwzw + r8.xyxy;
      r5.w = t5.SampleCmpLevelZero(s5_s, r16.xy, r8.z).x;
      r5.z = r12.x * r5.w + r5.z;
      r17.xyzw = r15.xyzy * cb1[4].zwzw + r8.xyxy;
      r5.w = t5.SampleCmpLevelZero(s5_s, r17.xy, r8.z).x;
      r5.z = r14.y * r5.w + r5.z;
      r5.w = t5.SampleCmpLevelZero(s5_s, r17.zw, r8.z).x;
      r5.z = r5.w * 49 + r5.z;
      r13.zw = float2(7,7) * r12.zw;
      r5.w = t5.SampleCmpLevelZero(s5_s, r16.zw, r8.z).x;
      r5.z = r13.z * r5.w + r5.z;
      r15.y = r13.y;
      r15.xyzw = r15.xyzy * cb1[4].zwzw + r8.xyxy;
      r5.w = t5.SampleCmpLevelZero(s5_s, r15.xy, r8.z).x;
      r5.z = r12.y * r5.w + r5.z;
      r5.w = t5.SampleCmpLevelZero(s5_s, r15.zw, r8.z).x;
      r5.z = r13.w * r5.w + r5.z;
      r5.w = r12.z * r12.w;
      r8.xy = r13.xy * cb1[4].zw + r8.xy;
      r6.y = t5.SampleCmpLevelZero(s5_s, r8.xy, r8.z).x;
      r5.z = r5.w * r6.y + r5.z;
      r5.z = 0.0069444445 * r5.z;
      r5.w = r5.z * r5.z;
      r1.y = saturate(r1.y * 0.0078125 + -1);
      r5.z = -r5.z * r5.z + 1;
      r1.y = r5.z * r1.y + r5.w;
    } else {
      r1.y = 1;
    }
    r8.z = dot(r7.xy, cb1[22].xy);
    r5.z = dot(r7.xy, cb1[23].xy);
    r8.y = -r5.z;
    r5.z = max(4, r11.z);
    r12.yz = float2(0,0);
    r13.xy = float2(0,0);
    r13.z = r3.z;
    r5.w = 0;
    while (true) {
      r6.y = cmp((int)r5.w >= 2);
      if (r6.y != 0) break;
      r6.y = -w0.x + r13.z;
      r6.y = saturate(r6.y / r5.z);
      r6.y = 0.200000003 * r6.y;
      r15.yz = r8.yz * r6.yy;
      r8.xw = saturate(v4.xy * cb1[19].xy + r15.yz);
      r8.xw = cb1[20].zw * r8.xw;
      r16.xyzw = t7.SampleLevel(s7_s, r8.xw, 0, int2(0, 0)).xyzw;
      r6.y = r16.x * cb1[19].z + cb1[19].w;
      r15.x = 1 / r6.y;
      r6.y = cmp(r15.x < w0.x);
      r12.x = r13.z;
      r13.xyz = r6.yyy ? r12.yzx : r15.yzx;
      r5.w = (int)r5.w + 1;
    }
    r3.z = -w0.x + r13.z;
    r5.zw = saturate(v4.xy * cb1[19].xy + r13.xy);
    r5.zw = cb1[20].zw * r5.zw;
    r8.xyzw = t6.SampleLevel(s6_s, r5.zw, 0, int2(0, 0)).xyzw;
    r2.xyz = float3(0.25,0.25,0.25) * r2.xyz;
    r5.z = r2.w * r2.w;
    r5.z = r5.z * 7.9000001 + 0.100000001;
    r5.z = r5.z * abs(r3.z);
    r5.z = exp2(-r5.z);
    r5.z = -0.00999999978 + r5.z;
    r5.z = max(0, r5.z);
    r5.w = dot(r7.xyz, cb1[2].xyz);
    r6.y = saturate(r5.w);
    r7.w = 1 + -r5.z;
    r2.xyz = r7.www * r2.xyz;
    r7.w = r6.y * r1.y;
    r7.w = 0.400000006 * r7.w;
    r12.xyz = r7.www * cb1[3].xyz + r10.xyz;
    r2.xyz = r12.xyz * r2.xyz;
    r3.z = saturate(8 * r3.z);
    r3.z = r3.z * -0.5 + 1;
    r3.z = r5.z * r3.z;
    r2.xyz = r8.xyz * r3.zzz + r2.xyz;
    r3.z = saturate(4 * r4.z);
    r5.z = saturate(r1.z * 2 + -1);
    r7.w = r3.z * r1.y;
    r7.w = r7.w * r4.w;
    r2.w = 1 + -r2.w;
    r2.w = r7.w * r2.w;
    r2.w = r5.z * r2.w;
    r5.z = cmp(0 < r2.w);
    r7.w = cmp(abs(v0.z) < 4);
    r8.x = saturate(v0.z * 0.25 + 0.25);
    r8.y = dot(cb1[2].xy, cb1[2].xy);
    r8.y = rsqrt(r8.y);
    r8.yz = cb1[2].xy * r8.yy;
    r8.y = dot(r8.yz, -r9.xy);
    r8.y = max(0, r8.y);
    r8.y = r8.y * r8.y;
    r8.x = r8.x * r8.y;
    r8.y = saturate(1 + -r5.w);
    r8.z = r8.y * r8.y;
    r8.y = r8.y * r8.z;
    r8.x = r8.x * r8.y;
    r2.w = r8.x * r2.w;
    r8.xyz = cb1[3].xyz * r2.www;
    r8.xyz = r8.xyz * float3(0.300000012,0.699999988,0.600000024) + r2.xyz;
    r8.xyz = r7.www ? r8.xyz : r2.xyz;
    r2.xyz = r5.zzz ? r8.xyz : r2.xyz;
    r8.xy = ddy(v0.xy);
    r2.w = dot(r8.xy, r8.xy);
    r2.w = log2(r2.w);
    r2.w = 0.25 * r2.w;
    r2.w = exp2(r2.w);
    r2.w = r2.w * r14.z + 1;
    r2.w = 1 / r2.w;
    r2.w = log2(abs(r2.w));
    r2.w = r14.w * r2.w;
    r2.w = exp2(r2.w);
    r2.w = min(1, r2.w);
    r2.w = r2.w * 6 + 6;
    r5.z = saturate(-r6.w * r1.w + 1);
    r1.z = r5.z * r1.z;
    r1.z = 0.200000003 * r1.z;
    r8.xyz = r1.zzz * r9.xyz + r7.xyz;
    r1.z = dot(r8.xyz, r8.xyz);
    r1.z = rsqrt(r1.z);
    r8.xyz = r8.xyz * r1.zzz;
    r1.z = dot(r9.xyz, r8.xyz);
    r5.z = r1.z + r1.z;
    r8.xyz = r8.xyz * -r5.zzz + r9.xyz;
    r1.z = -9 * r1.z;
    r1.z = exp2(r1.z);
    r1.z = min(1, r1.z);
    r1.z = r1.z * 0.980000019 + 0.0199999996;
    r9.xyz = v0.xyz;
    r9.w = 1;
    r12.x = dot(r9.xyzw, cb1[25].xyzw);
    r12.y = dot(r9.xyzw, cb1[26].xyzw);
    r5.z = dot(r9.xyzw, cb1[28].xyzw);
    r12.xy = r12.xy / r5.zz;
    r13.x = saturate(r12.x * 0.5 + 0.5);
    r13.y = saturate(-r12.y * 0.5 + 0.5);
    r12.xyzw = t9.SampleLevel(s9_s, r13.xy, 0, int2(0, 0)).xyzw;
    r5.z = 320 * r12.x;
    r5.z = min(1, r5.z);
    r12.xy = float2(11,8) + -r2.ww;
    r12.xy = float2(0.333333343,0.5) * r12.xy;
    r12.x = saturate(r12.x);
    r5.z = 32 * r5.z;
    r13.xyz = r5.zzz * r11.xyw;
    r13.w = 0;
    r9.xyzw = -r13.xyzw + r9.xyzw;
    r11.x = dot(r9.xyzw, cb1[25].xyzw);
    r11.y = dot(r9.xyzw, cb1[26].xyzw);
    r5.z = dot(r9.xyzw, cb1[28].xyzw);
    r9.xy = r11.xy / r5.zz;
    r11.x = saturate(r9.x * 0.5 + 0.5);
    r11.y = saturate(-r9.y * 0.5 + 0.5);
    r9.xy = float2(0.100000001,0.0500000007) * r12.xx;
    r9.z = 0;
    r12.xz = r11.xy + -r9.zy;
    r9.w = -r9.x;
    r9.xyzw = t8.SampleGrad(s8_s, r12.xz, float4(0,0,0,0), r9.zwzz).xyzw;
    r13.xyzw = t9.SampleLevel(s9_s, r11.xy, 0, int2(0, 0)).xyzw;
    r5.z = cmp(0.899999976 < r13.x);
    r5.z = r5.z ? 1.000000 : 0;
    r4.z = saturate(r4.z);
    r4.z = r5.z * r4.z;
    r5.z = saturate(0.75 + -r11.w);
    r1.z = r5.z * r1.z;
    r8.xyzw = t1.SampleLevel(s1_s, r8.xyz, 0).xyzw;
    r5.z = max(0, r12.y);
    r5.z = saturate(cb0[4].x + r5.z);
    r8.xyz = r8.xyz + -r9.xyz;
    r8.xyz = r5.zzz * r8.xyz + r9.xyz;
    r5.z = r3.z * r1.x;
    r1.z = saturate(r5.z * r1.z);
    r8.xyz = r8.xyz * r4.www + -r2.xyz;
    r2.xyz = r1.zzz * r8.xyz + r2.xyz;
    r1.z = cmp(0 != r4.z);
    r2.w = exp2(r2.w);
    r2.w = 4 * r2.w;
    r2.w = min(4096, r2.w);
    r8.xyz = cb1[3].xyz * float3(1,0.899999976,0.699999988);
    r1.x = r4.z * r1.x;
    r1.x = r1.x * r3.z;
    r6.xzw = r6.xzw * r1.www + cb1[2].xyz;
    r1.w = dot(r6.xzw, r6.xzw);
    r1.w = rsqrt(r1.w);
    r6.xzw = r6.xzw * r1.www;
    r1.w = saturate(dot(r7.xyz, r6.xzw));
    r3.z = dot(cb1[2].xyz, r6.xzw);
    r3.z = saturate(1 + -r3.z);
    r3.z = r3.z * r3.z;
    r3.z = r3.z * r3.z;
    r3.z = r3.z * 0.980000019 + 0.0199999996;
    r3.z = r6.y * r3.z;
    r1.w = log2(r1.w);
    r1.w = r2.w * r1.w;
    r1.w = exp2(r1.w);
    r1.w = r3.z * r1.w;
    r2.w = 2 + r2.w;
    r1.w = r2.w * r1.w;
    r1.w = 0.125 * r1.w;
    r6.xyz = r8.xyz * r1.www;
    r6.xyz = r1.xxx * r6.xyz + r2.xyz;
    r1.xzw = r1.zzz ? r6.xyz : r2.xyz;
    r1.y = r5.w * r1.y;
    r1.y = 0.699999988 * r1.y;
    r2.xyz = cb1[3].xyz * r1.yyy + r10.xyz;
    r2.xyz = r3.www * r2.xyz;
    r1.xyz = r2.xyz * float3(0.200000003,0.200000003,0.200000003) + r1.xzw;
    r2.xyz = -cb1[0].xyz + v0.xyz;
    r1.w = dot(r2.xyz, r2.xyz);
    r1.w = sqrt(r1.w);
    r2.w = 1 / r1.w;
    r2.xyz = r2.xyz * r2.www;
    r1.w = -cb1[16].w + r1.w;
    r1.w = max(0, r1.w);
    r1.w = cb1[17].w * r1.w;
    r1.w = -r1.w * r1.w;
    r1.w = exp2(r1.w);
    r2.x = saturate(dot(cb1[2].xyz, r2.xyz));
    r2.x = r2.x * r2.x;
    r2.x = r2.x * r2.x;
    r2.x = r2.x * r2.x;
    r2.yzw = cb1[17].xyz + -cb1[16].xyz;
    r2.xyz = r2.xxx * r2.yzw + cb1[16].xyz;
    r2.w = 1 + -r1.w;
    r2.xyz = r2.www * r2.xyz;
    r1.xyz = r1.xyz * r1.www + r2.xyz;
  } else {
    r2.xyzw = t11.SampleLevel(s11_s, r0.xy, 0, int2(0, 0)).xyzw;
    r6.xyzw = t0.SampleLevel(s0_s, v1.xy, 0, int2(0, 0)).xyzw;
    r0.x = r6.w * 0.850000024 + 0.150000006;
    r6.xyz = r6.xyz * r0.xxx;
    r6.xyz = r6.xyz * r6.xyz;
    r7.xyz = float3(0.00499999989,0.00499999989,0.25) * v0.xyw;
    r0.xy = -r0.zw * float2(0.400000006,0.400000006) + r7.xy;
    r0.xyzw = t4.SampleLevel(s4_s, r0.xy, 0, int2(0, 0)).xyzw;
    r0.x = r0.y + r0.y;
    r0.yz = r4.xy + -r5.xy;
    r0.xy = r0.xx * r0.yz + r5.xy;
    r0.xy = r0.xy * float2(2,2) + float2(-1,-1);
    r0.xy = float2(0.25,0.25) * r0.xy;
    r0.z = 2;
    r0.w = dot(r0.xyz, r0.xyz);
    r0.w = rsqrt(r0.w);
    r4.w = r0.z * r0.w;
    r3.xy = r3.xy * float2(2,2) + float2(-1,-1);
    r4.xy = float2(0.294999987,0.294999987) * r3.xy;
    r4.z = 32;
    r0.z = dot(r4.xyz, r4.xyz);
    r0.z = rsqrt(r0.z);
    r3.xyz = r4.xyw * r0.zzz;
    r0.xy = r0.xy * r0.ww + r3.xy;
    r0.z = 32 * r3.z;
    r0.z = dot(r0.xyz, r0.xyz);
    r0.z = rsqrt(r0.z);
    r0.xy = r0.xy * r0.zz;
    r0.zw = cb1[19].xy * v4.xy;
    r0.zw = saturate(r0.zw);
    r0.zw = cb1[20].zw * r0.zw;
    r3.xyzw = t7.SampleLevel(s7_s, r0.zw, 0, int2(0, 0)).xyzw;
    r0.z = r3.x * cb1[19].z + cb1[19].w;
    r0.z = 1 / r0.z;
    r3.z = dot(r0.xy, cb1[22].xy);
    r0.x = dot(r0.xy, cb1[23].xy);
    r3.y = -r0.x;
    r0.x = max(4, r7.z);
    r4.yz = float2(0,0);
    r5.xy = float2(0,0);
    r5.z = r0.z;
    r0.y = 0;
    while (true) {
      r0.w = cmp((int)r0.y >= 2);
      if (r0.w != 0) break;
      r0.w = -w0.x + r5.z;
      r0.w = saturate(r0.w / r0.x);
      r0.w = 0.200000003 * r0.w;
      r7.yz = r3.yz * r0.ww;
      r3.xw = saturate(v4.xy * cb1[19].xy + r7.yz);
      r3.xw = cb1[20].zw * r3.xw;
      r8.xyzw = t7.SampleLevel(s7_s, r3.xw, 0, int2(0, 0)).xyzw;
      r0.w = r8.x * cb1[19].z + cb1[19].w;
      r7.x = 1 / r0.w;
      r0.w = cmp(r7.x < w0.x);
      r4.x = r5.z;
      r5.xyz = r0.www ? r4.yzx : r7.yzx;
      r0.y = (int)r0.y + 1;
    }
    r0.xy = saturate(v4.xy * cb1[19].xy + r5.xy);
    r0.xy = cb1[20].zw * r0.xy;
    r0.xyzw = t6.SampleLevel(s6_s, r0.xy, 0, int2(0, 0)).xyzw;
    r0.x = dot(r0.xyz, float3(0.298999995,0.587000012,0.114));
    r0.xyz = r2.xyz * r0.xxx + r2.xyz;
    r0.w = v0.z * cb1[5].z + cb1[5].w;
    r0.w = v0.y * cb1[5].y + r0.w;
    r2.x = v0.x * cb1[5].x + r0.w;
    r0.w = v0.z * cb1[6].z + cb1[6].w;
    r0.w = v0.y * cb1[6].y + r0.w;
    r2.y = v0.x * cb1[6].x + r0.w;
    r0.w = v0.z * cb1[7].z + cb1[7].w;
    r0.w = v0.y * cb1[7].y + r0.w;
    r2.z = v0.x * cb1[7].x + r0.w;
    r2.xyz = r2.xyz * cb1[11].xyz + cb1[15].xyz;
    r2.xy = -cb1[4].zw * float2(0.5,0.5) + r2.xy;
    r2.xy = r2.xy * cb1[4].xy + float2(0.5,0.5);
    r3.xy = floor(r2.xy);
    r2.xy = -r3.xy + r2.xy;
    r3.xy = float2(-0.5,-0.5) + r3.xy;
    r3.xy = cb1[4].zw * r3.xy;
    r3.zw = -r2.yx * float2(3,3) + float2(4,4);
    r4.xy = r2.xy * float2(3,3) + float2(1,1);
    r4.zw = -r2.xy * float2(2,2) + float2(3,3);
    r4.zw = r4.zw / r3.wz;
    r5.xy = float2(3,3) + r2.xy;
    r2.xy = r2.xy / r4.xy;
    r7.xw = float2(-2,-2) + r4.zw;
    r7.yz = float2(0.142857149,0.142857149) * r5.yx;
    r5.xy = float2(2,2) + r2.xy;
    r0.w = r3.w * r3.z;
    r8.xyzw = r7.xwzw * cb1[4].zwzw + r3.xyxy;
    r1.w = t5.SampleCmpLevelZero(s5_s, r8.xy, r2.z).x;
    r2.xy = float2(7,7) * r3.zw;
    r2.w = t5.SampleCmpLevelZero(s5_s, r8.zw, r2.z).x;
    r2.x = r2.x * r2.w;
    r0.w = r0.w * r1.w + r2.x;
    r2.xw = r4.xy * r3.zw;
    r5.zw = r7.wy;
    r8.xyzw = r5.xzxw * cb1[4].zwzw + r3.xyxy;
    r1.w = t5.SampleCmpLevelZero(s5_s, r8.xy, r2.z).x;
    r0.w = r2.x * r1.w + r0.w;
    r9.xyzw = r7.xyzy * cb1[4].zwzw + r3.xyxy;
    r1.w = t5.SampleCmpLevelZero(s5_s, r9.xy, r2.z).x;
    r0.w = r2.y * r1.w + r0.w;
    r1.w = t5.SampleCmpLevelZero(s5_s, r9.zw, r2.z).x;
    r0.w = r1.w * 49 + r0.w;
    r2.xy = float2(7,7) * r4.xy;
    r1.w = t5.SampleCmpLevelZero(s5_s, r8.zw, r2.z).x;
    r0.w = r2.x * r1.w + r0.w;
    r7.y = r5.y;
    r7.xyzw = r7.xyzy * cb1[4].zwzw + r3.xyxy;
    r1.w = t5.SampleCmpLevelZero(s5_s, r7.xy, r2.z).x;
    r0.w = r2.w * r1.w + r0.w;
    r1.w = t5.SampleCmpLevelZero(s5_s, r7.zw, r2.z).x;
    r0.w = r2.y * r1.w + r0.w;
    r1.w = r4.x * r4.y;
    r2.xy = r5.xy * cb1[4].zw + r3.xy;
    r2.x = t5.SampleCmpLevelZero(s5_s, r2.xy, r2.z).x;
    r0.w = r1.w * r2.x + r0.w;
    r0.xyzw = float4(0.5,0.5,0.5,0.0069444445) * r0.xyzw;
    r0.w = r0.w * r0.w;
    r2.xyz = r6.xyz * cb0[1].xxx + r0.www;
    r1.xyz = r2.xyz * r0.xyz;
  }
  o0.xyz = r1.xyz;
  o0.w = 1;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 1      w        0     NONE   float      w
// TEXCOORD                 2   xy          1     NONE   float   xy  
// TEXCOORD                 3   xy          2     NONE   float       
// TEXCOORD                 4   xyz         3     NONE   float       
// SV_Position              0   xyzw        4      POS   float   xy  
// SV_IsFrontFace           0   x           5    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[5], immediateIndexed
dcl_constantbuffer cb1[29], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_comparison
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_sampler s11, mode_default
dcl_sampler s12, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_input_ps linear v0.xyz
dcl_input_ps linear v0.w
dcl_input_ps linear centroid v1.xy
dcl_input_ps_siv linear noperspective v4.xy, position
dcl_input_ps_sgv v5.x, is_front_face
dcl_output o0.xyzw
dcl_temps 18
mad r0.xy, v0.xyxx, cb0[2].xxxx, cb0[2].zwzz
add r0.zw, r0.xxxy, l(0.000000, 0.000000, 0.000977, -0.000977)
sample r1.xyzw, r0.zwzz, t10.xyzw, s10
sample r2.xyzw, r0.xyxx, t11.xyzw, s11
mul r3.xyzw, v0.xyxy, l(0.010000, 0.010000, 0.120000, 0.120000)
mul r0.zw, cb1[1].xxxx, cb1[21].xxxy
mad r4.xyzw, r0.zwzw, l(0.200000, 0.200000, 0.100000, 0.100000), r3.xyxy
sample r5.xyzw, r4.xyxx, t2.xyzw, s2
sample r4.xyzw, r4.zwzz, t3.xyzw, s3
mad r1.yw, r0.zzzw, l(0.000000, 0.480000, 0.000000, 0.480000), r3.zzzw
sample r3.xyzw, r1.ywyy, t2.xyzw, s2
add r1.yw, v0.xxxy, -cb0[3].xxxy
mul r3.z, cb0[3].z, cb0[3].z
dp2 r3.w, r1.ywyy, r1.ywyy
mad r3.w, cb0[3].z, cb0[3].z, -r3.w
div_sat r3.z, r3.w, r3.z
mul r6.y, r3.z, r3.z
min r3.z, |r1.w|, |r1.y|
max r4.z, |r1.w|, |r1.y|
div r4.z, l(1.000000, 1.000000, 1.000000, 1.000000), r4.z
mul r3.z, r3.z, r4.z
mul r4.z, r3.z, r3.z
mad r4.w, r4.z, l(0.020835), l(-0.085133)
mad r4.w, r4.z, r4.w, l(0.180141)
mad r4.w, r4.z, r4.w, l(-0.330299)
mad r4.z, r4.z, r4.w, l(0.999866)
mul r4.w, r3.z, r4.z
lt r5.z, |r1.w|, |r1.y|
mad r4.w, r4.w, l(-2.000000), l(1.570796)
and r4.w, r5.z, r4.w
mad r3.z, r3.z, r4.z, r4.w
lt r4.z, -r1.w, r1.w
and r4.z, r4.z, l(0xc0490fdb)
add r3.z, r3.z, r4.z
min r4.z, -r1.w, r1.y
max r1.y, -r1.w, r1.y
lt r1.w, r4.z, -r4.z
ge r1.y, r1.y, -r1.y
and r1.y, r1.y, r1.w
movc r1.y, r1.y, -r3.z, r3.z
mul r1.y, r1.y, l(0.318310)
mov r6.x, |r1.y|
mul r7.y, cb0[0].w, cb1[1].x
mov r7.x, cb1[1].x
mad r1.yw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.750000), r6.xxxy
sample r7.xyzw, r1.ywyy, t2.xyzw, s2
mul r1.y, l(0.500000), cb1[1].x
mul r1.yw, r1.yyyy, cb1[21].xxxy
mul r1.yw, r1.yyyw, l(0.000000, 0.200000, 0.000000, 0.200000)
mad r1.yw, v0.xxxy, l(0.000000, 0.060000, 0.000000, 0.060000), r1.yyyw
sample r8.xyzw, r1.ywyy, t2.xyzw, s2
if_nz v5.x
  add r6.xzw, -v0.xxyz, cb1[0].xxyz
  dp3 r1.y, r6.xzwx, r6.xzwx
  rsq r1.w, r1.y
  mul r9.xyz, r1.wwww, r6.xzwx
  mul r4.zw, v4.xxxy, cb1[19].xxxy
  mov_sat r4.zw, r4.zzzw
  mul r4.zw, r4.zzzw, cb1[20].zzzw
  sample_l_aoffimmi(0,0,0) r10.xyzw, r4.zwzz, t7.xyzw, s7, l(0.000000)
  mad r3.z, r10.x, cb1[19].z, cb1[19].w
  div r3.z, l(1.000000, 1.000000, 1.000000, 1.000000), r3.z
  add r4.z, r3.z, -v0.w
  add r1.x, r1.x, r1.x
  add r1.z, r1.z, cb0[4].z
  sample_l_aoffimmi(0,0,0) r10.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
  mad r4.w, r10.w, l(0.850000), l(0.150000)
  mul r10.xyz, r4.wwww, r10.xyzx
  mul r10.xyz, r10.xyzx, r10.xyzx
  mul r10.xyz, r10.xyzx, cb0[1].xxxx
  dp3 r4.w, r10.xyzx, l(0.221729, 0.162338, 0.117096, 0.000000)
  mul r11.xyz, v0.xywx, l(0.005000, 0.005000, 0.250000, 0.000000)
  mad r5.zw, -r0.zzzw, l(0.000000, 0.000000, 0.400000, 0.400000), r11.xxxy
  sample_l_aoffimmi(0,0,0) r12.xyzw, r5.zwzz, t4.xyzw, s4, l(0.000000)
  add r5.z, r12.y, r12.y
  add r7.zw, -r5.xxxy, r4.xxxy
  mad r5.zw, r5.zzzz, r7.zzzw, r5.xxxy
  mad r5.zw, r5.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
  mul r12.xy, r1.zzzz, r5.zwzz
  mov r12.z, l(2.000000)
  dp3 r5.z, r12.xyzx, r12.xyzx
  rsq r5.z, r5.z
  mul r13.w, r5.z, r12.z
  mad r7.zw, r3.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
  mad r14.xyzw, r1.zzzz, l(0.940000, 0.500000, 0.800000, 4.000000), l(0.060000, 0.500000, 0.200000, 1.000000)
  mul r13.xy, r7.zwzz, r14.xxxx
  mov r13.z, l(32.000000)
  dp3 r5.w, r13.xyzx, r13.xyzx
  rsq r5.w, r5.w
  mul r11.xyw, r5.wwww, r13.xyxw
  mad r12.xy, r12.xyxx, r5.zzzz, r11.xyxx
  mul r12.z, r11.w, l(32.000000)
  dp3 r5.z, r12.xyzx, r12.xyzx
  rsq r5.z, r5.z
  lt r3.w, r3.w, l(0.000000)
  discard_nz r3.w
  mad r3.w, r6.y, r6.y, -r6.y
  mul r3.w, r3.w, cb0[3].w
  mul r13.w, r3.w, l(-4.000000)
  mad r13.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mov r13.z, l(2.000000)
  dp3 r3.w, r13.xyzx, r13.xyzx
  rsq r3.w, r3.w
  mul r7.xyz, r3.wwww, r13.xywx
  mul r7.xyz, r13.wwzw, r7.xyzx
  mad r7.xyz, r12.xyzx, r5.zzzz, r7.xyzx
  dp3 r3.w, r7.xyzx, r7.xyzx
  rsq r3.w, r3.w
  mul r7.xyz, r3.wwww, r7.xyzx
  dp3 r3.w, r9.xyzx, r7.xyzx
  add r3.w, r3.w, r3.w
  mad r11.xyw, r7.xyxz, -r3.wwww, r9.xyxz
  mad r5.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
  mul r8.xy, r5.zwzz, r14.yyyy
  mov r8.z, l(14.000000)
  dp3 r3.w, r8.xyzx, r8.xyzx
  rsq r3.w, r3.w
  mul r5.zw, r3.wwww, r8.xxxy
  mul r5.zw, r5.zzzw, l(0.000000, 0.000000, 20.000000, 20.000000)
  mad r3.w, r14.y, l(0.500000), l(0.500000)
  div r5.zw, r5.zzzw, r3.wwww
  mul r5.zw, r5.zzzw, r5.zzzw
  div r5.zw, r5.zzzw, v0.wwww
  mad r5.zw, v4.xxxy, cb1[19].xxxy, r5.zzzw
  sample_l_aoffimmi(0,0,0) r8.xyzw, r5.zwzz, t12.xyzw, s12, l(0.000000)
  add r3.w, r8.x, l(-0.085000)
  mul_sat r3.w, r3.w, l(66.666664)
  mad r5.z, r3.w, l(-2.000000), l(3.000000)
  mul r3.w, r3.w, r3.w
  mul r3.w, r3.w, r5.z
  min r3.w, r3.w, l(1.000000)
  add r5.z, -r3.w, l(1.000000)
  mul r1.x, r1.x, r5.z
  sqrt r1.y, r1.y
  lt r5.z, r1.y, l(256.000000)
  if_nz r5.z
    mad r5.z, v0.z, cb1[5].z, cb1[5].w
    mad r5.z, v0.y, cb1[5].y, r5.z
    mad r8.x, v0.x, cb1[5].x, r5.z
    mad r5.z, v0.z, cb1[6].z, cb1[6].w
    mad r5.z, v0.y, cb1[6].y, r5.z
    mad r8.y, v0.x, cb1[6].x, r5.z
    mad r5.z, v0.z, cb1[7].z, cb1[7].w
    mad r5.z, v0.y, cb1[7].y, r5.z
    mad r8.z, v0.x, cb1[7].x, r5.z
    mad r8.xyz, r8.xyzx, cb1[11].xyzx, cb1[15].xyzx
    mad r5.zw, -cb1[4].zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), r8.xxxy
    mad r5.zw, r5.zzzw, cb1[4].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
    round_ni r8.xy, r5.zwzz
    add r5.zw, r5.zzzw, -r8.xxxy
    add r8.xy, r8.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    mul r8.xy, r8.xyxx, cb1[4].zwzz
    mad r12.xy, -r5.wzww, l(3.000000, 3.000000, 0.000000, 0.000000), l(4.000000, 4.000000, 0.000000, 0.000000)
    mad r12.zw, r5.zzzw, l(0.000000, 0.000000, 3.000000, 3.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
    mad r13.xy, -r5.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
    div r13.xy, r13.xyxx, r12.yxyy
    add r13.zw, r5.zzzw, l(0.000000, 0.000000, 3.000000, 3.000000)
    div r5.zw, r5.zzzw, r12.zzzw
    add r15.xw, r13.xxxy, l(-2.000000, 0.000000, 0.000000, -2.000000)
    mul r15.yz, r13.wwzw, l(0.000000, 0.142857, 0.142857, 0.000000)
    add r13.xy, r5.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000)
    mul r5.z, r12.x, r12.y
    mad r16.xyzw, r15.xwzw, cb1[4].zwzw, r8.xyxy
    sample_c_lz r5.w, r16.xyxx, t5.xxxx, s5, r8.z
    mul r14.xy, r12.xyxx, l(7.000000, 7.000000, 0.000000, 0.000000)
    sample_c_lz r6.y, r16.zwzz, t5.xxxx, s5, r8.z
    mul r6.y, r6.y, r14.x
    mad r5.z, r5.z, r5.w, r6.y
    mul r12.xy, r12.xyxx, r12.zwzz
    mov r13.zw, r15.wwwy
    mad r16.xyzw, r13.xzxw, cb1[4].zwzw, r8.xyxy
    sample_c_lz r5.w, r16.xyxx, t5.xxxx, s5, r8.z
    mad r5.z, r12.x, r5.w, r5.z
    mad r17.xyzw, r15.xyzy, cb1[4].zwzw, r8.xyxy
    sample_c_lz r5.w, r17.xyxx, t5.xxxx, s5, r8.z
    mad r5.z, r14.y, r5.w, r5.z
    sample_c_lz r5.w, r17.zwzz, t5.xxxx, s5, r8.z
    mad r5.z, r5.w, l(49.000000), r5.z
    mul r13.zw, r12.zzzw, l(0.000000, 0.000000, 7.000000, 7.000000)
    sample_c_lz r5.w, r16.zwzz, t5.xxxx, s5, r8.z
    mad r5.z, r13.z, r5.w, r5.z
    mov r15.y, r13.y
    mad r15.xyzw, r15.xyzy, cb1[4].zwzw, r8.xyxy
    sample_c_lz r5.w, r15.xyxx, t5.xxxx, s5, r8.z
    mad r5.z, r12.y, r5.w, r5.z
    sample_c_lz r5.w, r15.zwzz, t5.xxxx, s5, r8.z
    mad r5.z, r13.w, r5.w, r5.z
    mul r5.w, r12.w, r12.z
    mad r8.xy, r13.xyxx, cb1[4].zwzz, r8.xyxx
    sample_c_lz r6.y, r8.xyxx, t5.xxxx, s5, r8.z
    mad r5.z, r5.w, r6.y, r5.z
    mul r5.z, r5.z, l(0.006944)
    mul r5.w, r5.z, r5.z
    mad_sat r1.y, r1.y, l(0.007813), l(-1.000000)
    mad r5.z, -r5.z, r5.z, l(1.000000)
    mad r1.y, r5.z, r1.y, r5.w
  else 
    mov r1.y, l(1.000000)
  endif 
  dp2 r8.z, r7.xyxx, cb1[22].xyxx
  dp2 r5.z, r7.xyxx, cb1[23].xyxx
  mov r8.y, -r5.z
  max r5.z, r11.z, l(4.000000)
  mov r12.yz, l(0,0,0,0)
  mov r13.xy, l(0,0,0,0)
  mov r13.z, r3.z
  mov r5.w, l(0)
  loop 
    ige r6.y, r5.w, l(2)
    breakc_nz r6.y
    add r6.y, r13.z, -v0.w
    div_sat r6.y, r6.y, r5.z
    mul r6.y, r6.y, l(0.200000)
    mul r15.yz, r6.yyyy, r8.yyzy
    mad_sat r8.xw, v4.xxxy, cb1[19].xxxy, r15.yyyz
    mul r8.xw, r8.xxxw, cb1[20].zzzw
    sample_l_aoffimmi(0,0,0) r16.xyzw, r8.xwxx, t7.xyzw, s7, l(0.000000)
    mad r6.y, r16.x, cb1[19].z, cb1[19].w
    div r15.x, l(1.000000, 1.000000, 1.000000, 1.000000), r6.y
    lt r6.y, r15.x, v0.w
    mov r12.x, r13.z
    movc r13.xyz, r6.yyyy, r12.yzxy, r15.yzxy
    iadd r5.w, r5.w, l(1)
  endloop 
  add r3.z, r13.z, -v0.w
  mad_sat r5.zw, v4.xxxy, cb1[19].xxxy, r13.xxxy
  mul r5.zw, r5.zzzw, cb1[20].zzzw
  sample_l_aoffimmi(0,0,0) r8.xyzw, r5.zwzz, t6.xyzw, s6, l(0.000000)
  mul r2.xyz, r2.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
  mul r5.z, r2.w, r2.w
  mad r5.z, r5.z, l(7.900000), l(0.100000)
  mul r5.z, |r3.z|, r5.z
  exp r5.z, -r5.z
  add r5.z, r5.z, l(-0.010000)
  max r5.z, r5.z, l(0.000000)
  dp3 r5.w, r7.xyzx, cb1[2].xyzx
  mov_sat r6.y, r5.w
  add r7.w, -r5.z, l(1.000000)
  mul r2.xyz, r2.xyzx, r7.wwww
  mul r7.w, r1.y, r6.y
  mul r7.w, r7.w, l(0.400000)
  mad r12.xyz, r7.wwww, cb1[3].xyzx, r10.xyzx
  mul r2.xyz, r2.xyzx, r12.xyzx
  mul_sat r3.z, r3.z, l(8.000000)
  mad r3.z, r3.z, l(-0.500000), l(1.000000)
  mul r3.z, r3.z, r5.z
  mad r2.xyz, r8.xyzx, r3.zzzz, r2.xyzx
  mul_sat r3.z, r4.z, l(4.000000)
  mad_sat r5.z, r1.z, l(2.000000), l(-1.000000)
  mul r7.w, r1.y, r3.z
  mul r7.w, r4.w, r7.w
  add r2.w, -r2.w, l(1.000000)
  mul r2.w, r2.w, r7.w
  mul r2.w, r2.w, r5.z
  lt r5.z, l(0.000000), r2.w
  lt r7.w, |v0.z|, l(4.000000)
  mad_sat r8.x, v0.z, l(0.250000), l(0.250000)
  dp2 r8.y, cb1[2].xyxx, cb1[2].xyxx
  rsq r8.y, r8.y
  mul r8.yz, r8.yyyy, cb1[2].xxyx
  dp2 r8.y, r8.yzyy, -r9.xyxx
  max r8.y, r8.y, l(0.000000)
  mul r8.y, r8.y, r8.y
  mul r8.x, r8.y, r8.x
  add_sat r8.y, -r5.w, l(1.000000)
  mul r8.z, r8.y, r8.y
  mul r8.y, r8.z, r8.y
  mul r8.x, r8.y, r8.x
  mul r2.w, r2.w, r8.x
  mul r8.xyz, r2.wwww, cb1[3].xyzx
  mad r8.xyz, r8.xyzx, l(0.300000, 0.700000, 0.600000, 0.000000), r2.xyzx
  movc r8.xyz, r7.wwww, r8.xyzx, r2.xyzx
  movc r2.xyz, r5.zzzz, r8.xyzx, r2.xyzx
  deriv_rty r8.xy, v0.xyxx
  dp2 r2.w, r8.xyxx, r8.xyxx
  log r2.w, r2.w
  mul r2.w, r2.w, l(0.250000)
  exp r2.w, r2.w
  mad r2.w, r2.w, r14.z, l(1.000000)
  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  log r2.w, |r2.w|
  mul r2.w, r2.w, r14.w
  exp r2.w, r2.w
  min r2.w, r2.w, l(1.000000)
  mad r2.w, r2.w, l(6.000000), l(6.000000)
  mad_sat r5.z, -r6.w, r1.w, l(1.000000)
  mul r1.z, r1.z, r5.z
  mul r1.z, r1.z, l(0.200000)
  mad r8.xyz, r1.zzzz, r9.xyzx, r7.xyzx
  dp3 r1.z, r8.xyzx, r8.xyzx
  rsq r1.z, r1.z
  mul r8.xyz, r1.zzzz, r8.xyzx
  dp3 r1.z, r9.xyzx, r8.xyzx
  add r5.z, r1.z, r1.z
  mad r8.xyz, r8.xyzx, -r5.zzzz, r9.xyzx
  mul r1.z, r1.z, l(-9.000000)
  exp r1.z, r1.z
  min r1.z, r1.z, l(1.000000)
  mad r1.z, r1.z, l(0.980000), l(0.020000)
  mov r9.xyz, v0.xyzx
  mov r9.w, l(1.000000)
  dp4 r12.x, r9.xyzw, cb1[25].xyzw
  dp4 r12.y, r9.xyzw, cb1[26].xyzw
  dp4 r5.z, r9.xyzw, cb1[28].xyzw
  div r12.xy, r12.xyxx, r5.zzzz
  mad_sat r13.x, r12.x, l(0.500000), l(0.500000)
  mad_sat r13.y, -r12.y, l(0.500000), l(0.500000)
  sample_l_aoffimmi(0,0,0) r12.xyzw, r13.xyxx, t9.xyzw, s9, l(0.000000)
  mul r5.z, r12.x, l(320.000000)
  min r5.z, r5.z, l(1.000000)
  add r12.xy, -r2.wwww, l(11.000000, 8.000000, 0.000000, 0.000000)
  mul r12.xy, r12.xyxx, l(0.333333, 0.500000, 0.000000, 0.000000)
  mov_sat r12.x, r12.x
  mul r5.z, r5.z, l(32.000000)
  mul r13.xyz, r11.xywx, r5.zzzz
  mov r13.w, l(0)
  add r9.xyzw, r9.xyzw, -r13.xyzw
  dp4 r11.x, r9.xyzw, cb1[25].xyzw
  dp4 r11.y, r9.xyzw, cb1[26].xyzw
  dp4 r5.z, r9.xyzw, cb1[28].xyzw
  div r9.xy, r11.xyxx, r5.zzzz
  mad_sat r11.x, r9.x, l(0.500000), l(0.500000)
  mad_sat r11.y, -r9.y, l(0.500000), l(0.500000)
  mul r9.xy, r12.xxxx, l(0.100000, 0.050000, 0.000000, 0.000000)
  mov r9.z, l(0)
  add r12.xz, -r9.zzyz, r11.xxyx
  mov r9.w, -r9.x
  sample_d r9.xyzw, r12.xzxx, t8.xyzw, s8, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zwzz
  sample_l_aoffimmi(0,0,0) r13.xyzw, r11.xyxx, t9.xyzw, s9, l(0.000000)
  lt r5.z, l(0.900000), r13.x
  and r5.z, r5.z, l(0x3f800000)
  mov_sat r4.z, r4.z
  mul r4.z, r4.z, r5.z
  add_sat r5.z, -r11.w, l(0.750000)
  mul r1.z, r1.z, r5.z
  sample_l r8.xyzw, r8.xyzx, t1.xyzw, s1, l(0.000000)
  max r5.z, r12.y, l(0.000000)
  add_sat r5.z, r5.z, cb0[4].x
  add r8.xyz, -r9.xyzx, r8.xyzx
  mad r8.xyz, r5.zzzz, r8.xyzx, r9.xyzx
  mul r5.z, r1.x, r3.z
  mul_sat r1.z, r1.z, r5.z
  mad r8.xyz, r8.xyzx, r4.wwww, -r2.xyzx
  mad r2.xyz, r1.zzzz, r8.xyzx, r2.xyzx
  ne r1.z, l(0.000000, 0.000000, 0.000000, 0.000000), r4.z
  exp r2.w, r2.w
  mul r2.w, r2.w, l(4.000000)
  min r2.w, r2.w, l(4096.000000)
  mul r8.xyz, l(1.000000, 0.900000, 0.700000, 0.000000), cb1[3].xyzx
  mul r1.x, r1.x, r4.z
  mul r1.x, r3.z, r1.x
  mad r6.xzw, r6.xxzw, r1.wwww, cb1[2].xxyz
  dp3 r1.w, r6.xzwx, r6.xzwx
  rsq r1.w, r1.w
  mul r6.xzw, r1.wwww, r6.xxzw
  dp3_sat r1.w, r7.xyzx, r6.xzwx
  dp3 r3.z, cb1[2].xyzx, r6.xzwx
  add_sat r3.z, -r3.z, l(1.000000)
  mul r3.z, r3.z, r3.z
  mul r3.z, r3.z, r3.z
  mad r3.z, r3.z, l(0.980000), l(0.020000)
  mul r3.z, r3.z, r6.y
  log r1.w, r1.w
  mul r1.w, r1.w, r2.w
  exp r1.w, r1.w
  mul r1.w, r1.w, r3.z
  add r2.w, r2.w, l(2.000000)
  mul r1.w, r1.w, r2.w
  mul r1.w, r1.w, l(0.125000)
  mul r6.xyz, r1.wwww, r8.xyzx
  mad r6.xyz, r1.xxxx, r6.xyzx, r2.xyzx
  movc r1.xzw, r1.zzzz, r6.xxyz, r2.xxyz
  mul r1.y, r1.y, r5.w
  mul r1.y, r1.y, l(0.700000)
  mad r2.xyz, cb1[3].xyzx, r1.yyyy, r10.xyzx
  mul r2.xyz, r2.xyzx, r3.wwww
  mad r1.xyz, r2.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r1.xzwx
  add r2.xyz, v0.xyzx, -cb1[0].xyzx
  dp3 r1.w, r2.xyzx, r2.xyzx
  sqrt r1.w, r1.w
  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  mul r2.xyz, r2.wwww, r2.xyzx
  add r1.w, r1.w, -cb1[16].w
  max r1.w, r1.w, l(0.000000)
  mul r1.w, r1.w, cb1[17].w
  mul r1.w, r1.w, -r1.w
  exp r1.w, r1.w
  dp3_sat r2.x, cb1[2].xyzx, r2.xyzx
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, r2.x
  add r2.yzw, -cb1[16].xxyz, cb1[17].xxyz
  mad r2.xyz, r2.xxxx, r2.yzwy, cb1[16].xyzx
  add r2.w, -r1.w, l(1.000000)
  mul r2.xyz, r2.xyzx, r2.wwww
  mad r1.xyz, r1.xyzx, r1.wwww, r2.xyzx
else 
  sample_l_aoffimmi(0,0,0) r2.xyzw, r0.xyxx, t11.xyzw, s11, l(0.000000)
  sample_l_aoffimmi(0,0,0) r6.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
  mad r0.x, r6.w, l(0.850000), l(0.150000)
  mul r6.xyz, r0.xxxx, r6.xyzx
  mul r6.xyz, r6.xyzx, r6.xyzx
  mul r7.xyz, v0.xywx, l(0.005000, 0.005000, 0.250000, 0.000000)
  mad r0.xy, -r0.zwzz, l(0.400000, 0.400000, 0.000000, 0.000000), r7.xyxx
  sample_l_aoffimmi(0,0,0) r0.xyzw, r0.xyxx, t4.xyzw, s4, l(0.000000)
  add r0.x, r0.y, r0.y
  add r0.yz, -r5.xxyx, r4.xxyx
  mad r0.xy, r0.xxxx, r0.yzyy, r5.xyxx
  mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mul r0.xy, r0.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
  mov r0.z, l(2.000000)
  dp3 r0.w, r0.xyzx, r0.xyzx
  rsq r0.w, r0.w
  mul r4.w, r0.w, r0.z
  mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mul r4.xy, r3.xyxx, l(0.295000, 0.295000, 0.000000, 0.000000)
  mov r4.z, l(32.000000)
  dp3 r0.z, r4.xyzx, r4.xyzx
  rsq r0.z, r0.z
  mul r3.xyz, r0.zzzz, r4.xywx
  mad r0.xy, r0.xyxx, r0.wwww, r3.xyxx
  mul r0.z, r3.z, l(32.000000)
  dp3 r0.z, r0.xyzx, r0.xyzx
  rsq r0.z, r0.z
  mul r0.xy, r0.zzzz, r0.xyxx
  mul r0.zw, v4.xxxy, cb1[19].xxxy
  mov_sat r0.zw, r0.zzzw
  mul r0.zw, r0.zzzw, cb1[20].zzzw
  sample_l_aoffimmi(0,0,0) r3.xyzw, r0.zwzz, t7.xyzw, s7, l(0.000000)
  mad r0.z, r3.x, cb1[19].z, cb1[19].w
  div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
  dp2 r3.z, r0.xyxx, cb1[22].xyxx
  dp2 r0.x, r0.xyxx, cb1[23].xyxx
  mov r3.y, -r0.x
  max r0.x, r7.z, l(4.000000)
  mov r4.yz, l(0,0,0,0)
  mov r5.xy, l(0,0,0,0)
  mov r5.z, r0.z
  mov r0.y, l(0)
  loop 
    ige r0.w, r0.y, l(2)
    breakc_nz r0.w
    add r0.w, r5.z, -v0.w
    div_sat r0.w, r0.w, r0.x
    mul r0.w, r0.w, l(0.200000)
    mul r7.yz, r0.wwww, r3.yyzy
    mad_sat r3.xw, v4.xxxy, cb1[19].xxxy, r7.yyyz
    mul r3.xw, r3.xxxw, cb1[20].zzzw
    sample_l_aoffimmi(0,0,0) r8.xyzw, r3.xwxx, t7.xyzw, s7, l(0.000000)
    mad r0.w, r8.x, cb1[19].z, cb1[19].w
    div r7.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
    lt r0.w, r7.x, v0.w
    mov r4.x, r5.z
    movc r5.xyz, r0.wwww, r4.yzxy, r7.yzxy
    iadd r0.y, r0.y, l(1)
  endloop 
  mad_sat r0.xy, v4.xyxx, cb1[19].xyxx, r5.xyxx
  mul r0.xy, r0.xyxx, cb1[20].zwzz
  sample_l_aoffimmi(0,0,0) r0.xyzw, r0.xyxx, t6.xyzw, s6, l(0.000000)
  dp3 r0.x, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
  mad r0.xyz, r2.xyzx, r0.xxxx, r2.xyzx
  mad r0.w, v0.z, cb1[5].z, cb1[5].w
  mad r0.w, v0.y, cb1[5].y, r0.w
  mad r2.x, v0.x, cb1[5].x, r0.w
  mad r0.w, v0.z, cb1[6].z, cb1[6].w
  mad r0.w, v0.y, cb1[6].y, r0.w
  mad r2.y, v0.x, cb1[6].x, r0.w
  mad r0.w, v0.z, cb1[7].z, cb1[7].w
  mad r0.w, v0.y, cb1[7].y, r0.w
  mad r2.z, v0.x, cb1[7].x, r0.w
  mad r2.xyz, r2.xyzx, cb1[11].xyzx, cb1[15].xyzx
  mad r2.xy, -cb1[4].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000), r2.xyxx
  mad r2.xy, r2.xyxx, cb1[4].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  round_ni r3.xy, r2.xyxx
  add r2.xy, r2.xyxx, -r3.xyxx
  add r3.xy, r3.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
  mul r3.xy, r3.xyxx, cb1[4].zwzz
  mad r3.zw, -r2.yyyx, l(0.000000, 0.000000, 3.000000, 3.000000), l(0.000000, 0.000000, 4.000000, 4.000000)
  mad r4.xy, r2.xyxx, l(3.000000, 3.000000, 0.000000, 0.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
  mad r4.zw, -r2.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
  div r4.zw, r4.zzzw, r3.wwwz
  add r5.xy, r2.xyxx, l(3.000000, 3.000000, 0.000000, 0.000000)
  div r2.xy, r2.xyxx, r4.xyxx
  add r7.xw, r4.zzzw, l(-2.000000, 0.000000, 0.000000, -2.000000)
  mul r7.yz, r5.yyxy, l(0.000000, 0.142857, 0.142857, 0.000000)
  add r5.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
  mul r0.w, r3.z, r3.w
  mad r8.xyzw, r7.xwzw, cb1[4].zwzw, r3.xyxy
  sample_c_lz r1.w, r8.xyxx, t5.xxxx, s5, r2.z
  mul r2.xy, r3.zwzz, l(7.000000, 7.000000, 0.000000, 0.000000)
  sample_c_lz r2.w, r8.zwzz, t5.xxxx, s5, r2.z
  mul r2.x, r2.w, r2.x
  mad r0.w, r0.w, r1.w, r2.x
  mul r2.xw, r3.zzzw, r4.xxxy
  mov r5.zw, r7.wwwy
  mad r8.xyzw, r5.xzxw, cb1[4].zwzw, r3.xyxy
  sample_c_lz r1.w, r8.xyxx, t5.xxxx, s5, r2.z
  mad r0.w, r2.x, r1.w, r0.w
  mad r9.xyzw, r7.xyzy, cb1[4].zwzw, r3.xyxy
  sample_c_lz r1.w, r9.xyxx, t5.xxxx, s5, r2.z
  mad r0.w, r2.y, r1.w, r0.w
  sample_c_lz r1.w, r9.zwzz, t5.xxxx, s5, r2.z
  mad r0.w, r1.w, l(49.000000), r0.w
  mul r2.xy, r4.xyxx, l(7.000000, 7.000000, 0.000000, 0.000000)
  sample_c_lz r1.w, r8.zwzz, t5.xxxx, s5, r2.z
  mad r0.w, r2.x, r1.w, r0.w
  mov r7.y, r5.y
  mad r7.xyzw, r7.xyzy, cb1[4].zwzw, r3.xyxy
  sample_c_lz r1.w, r7.xyxx, t5.xxxx, s5, r2.z
  mad r0.w, r2.w, r1.w, r0.w
  sample_c_lz r1.w, r7.zwzz, t5.xxxx, s5, r2.z
  mad r0.w, r2.y, r1.w, r0.w
  mul r1.w, r4.y, r4.x
  mad r2.xy, r5.xyxx, cb1[4].zwzz, r3.xyxx
  sample_c_lz r2.x, r2.xyxx, t5.xxxx, s5, r2.z
  mad r0.w, r1.w, r2.x, r0.w
  mul r0.xyzw, r0.xyzw, l(0.500000, 0.500000, 0.500000, 0.006944)
  mul r0.w, r0.w, r0.w
  mad r2.xyz, r6.xyzx, cb0[1].xxxx, r0.wwww
  mul r1.xyz, r0.xyzx, r2.xyzx
endif 
mov o0.xyz, r1.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ HLSL errors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Steam\steamapps\common\The Witness\wrapper1349(158,58-63): error X3018: invalid subscript 'xyw'
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
