// Light shafts
// ---- Created with 3Dmigoto v1.2.27 on Sat Feb 06 04:32:10 2016
Texture2D<float4> t0 : register(t0);

SamplerState s0_s : register(s0);

cbuffer cb0 : register(b0)
{
  float4 cb0[2];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float2 v0 : TEXCOORD0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
float2 origin = cb0[0].xy;
origin.x += stereo.x / 2;

  r0.xy = -origin + v0.xy;
  r1.xyzw = t0.Sample(s0_s, v0.xy).xyzw;
  r1.xyz = r1.xyz * r1.www;
  r2.xyz = r1.xyz;
  r0.zw = v0.xy;
  r1.w = 1;
  r2.w = 1;
  while (true) {
    r3.x = cmp(r2.w >= 64);
    if (r3.x != 0) break;
    r0.zw = -r0.xy * float2(0.015625,0.015625) + r0.zw;
    r1.w = cb0[1].x * r1.w;
    r3.xyzw = t0.SampleLevel(s0_s, r0.zw, 0, int2(0, 0)).xyzw;
    r3.xyz = r3.xyz * r1.www;
    r2.xyz = r3.xyz * r3.www + r2.xyz;
    r2.w = 1 + r2.w;
  }
  r0.x = dot(r0.xy, r0.xy);
  r0.x = sqrt(r0.x);
  r0.x = -r0.x * 3 + 1;
  r0.x = max(0, r0.x);
  r0.x = 0.0625 * r0.x;
  o0.xyz = r2.xyz * r0.xxx;
  o0.w = 1;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.27 on Sat Feb 06 04:32:10 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v0.xy
dcl_output o0.xyzw
dcl_temps 4
add r0.xy, v0.xyxx, -cb0[0].xyxx
sample r1.xyzw, v0.xyxx, t0.xyzw, s0
mul r1.xyz, r1.wwww, r1.xyzx
mov r2.xyz, r1.xyzx
mov r0.zw, v0.xxxy
mov r1.w, l(1.000000)
mov r2.w, l(1.000000)
loop 
  ge r3.x, r2.w, l(64.000000)
  breakc_nz r3.x
  mad r0.zw, -r0.xxxy, l(0.000000, 0.000000, 0.015625, 0.015625), r0.zzzw
  mul r1.w, r1.w, cb0[1].x
  sample_l_aoffimmi(0,0,0) r3.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
  mul r3.xyz, r1.wwww, r3.xyzx
  mad r2.xyz, r3.xyzx, r3.wwww, r2.xyzx
  add r2.w, r2.w, l(1.000000)
endloop 
dp2 r0.x, r0.xyxx, r0.xyxx
sqrt r0.x, r0.x
mad r0.x, -r0.x, l(3.000000), l(1.000000)
max r0.x, r0.x, l(0.000000)
mul r0.x, r0.x, l(0.062500)
mul o0.xyz, r0.xxxx, r2.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
