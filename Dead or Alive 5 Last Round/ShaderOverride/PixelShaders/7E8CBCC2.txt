// river jungle

//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 gEyePlane;
//   float4 gEyePosition;
//   float4 gFogDensity;
//   float4 gFogDistance;
//   float4 gFogFarMiddle;
//   float4 gFogMiddle;
//   float4 gHDRRate;
//   float4 gHeightFogDensity;
//   float4 gHeightFogDistance;
//   float4 gHeightFogFarMiddle;
//   float4 gHeightFogMiddle;
//   float4 gLScatterMieTmp;
//   float4 gLScatterOutTmp;
//   float4 gLScatterRayTmp;
//   float4 gLScatterSunColor;
//   float4 gLScatterSunDir;
//   row_major float3x3 gLightDirection;
//   bool gLightScatterEnable;
//   float4 gParallaxParam;
//   sampler2D gSamplerDepth;
//   sampler2D gSamplerNormalMap;
//   sampler2D gSamplerReflect;
//   sampler2D gSamplerScreen;
//   float4 gSpecularColor;
//   float4 gTexBlendAlpha[2];
//   float4 gTexBlendScaleBias[2];
//   sampler2D gTextureSampler0;
//   sampler2D gTextureSampler1;
//   float4 param_fs_bumpwave_param_camera;
//   float4 param_fs_bumpwave_param_reflect;
//   float4 param_fs_bumpwave_param_refract;
//   float4 param_fs_bumpwave_param_tex2normal_bias;
//   float4 param_fs_bumpwave_param_tex2normal_scale;
//
//
// Registers:
//
//   Name                                     Reg   Size
//   ---------------------------------------- ----- ----
//   gLightScatterEnable                      b0       1
//   gHDRRate                                 c0       1
//   gTexBlendAlpha                           c2       1
//   gTexBlendScaleBias                       c4       1
//   gLScatterSunColor                        c8       1
//   gLScatterSunDir                          c9       1
//   gLScatterOutTmp                          c10      1
//   gLScatterRayTmp                          c11      1
//   gLScatterMieTmp                          c12      1
//   gFogMiddle                               c13      1
//   gFogFarMiddle                            c14      1
//   gFogDistance                             c15      1
//   gFogDensity                              c16      1
//   gHeightFogMiddle                         c17      1
//   gHeightFogFarMiddle                      c18      1
//   gHeightFogDistance                       c19      1
//   gHeightFogDensity                        c20      1
//   gParallaxParam                           c33      1
//   gEyePosition                             c36      1
//   gEyePlane                                c37      1
//   gSpecularColor                           c41      1
//   gLightDirection                          c47      3
//   param_fs_bumpwave_param_tex2normal_scale c62      1
//   param_fs_bumpwave_param_tex2normal_bias  c63      1
//   param_fs_bumpwave_param_reflect          c64      1
//   param_fs_bumpwave_param_refract          c65      1
//   param_fs_bumpwave_param_camera           c66      1
//   gTextureSampler0                         s0       1
//   gTextureSampler1                         s1       1
//   gSamplerNormalMap                        s12      1
//   gSamplerScreen                           s13      1
//   gSamplerDepth                            s14      1
//   gSamplerReflect                          s15      1
//

    ps_3_0
    def c1, 1, -1, 0, 8
    dcl_color_centroid v0.x
    dcl_texcoord_centroid v1

    dcl_texcoord2_centroid v2.xyw // Screen position - need adjusted for refraction, unadjusted for reflection & caustics

    dcl_texcoord3_centroid v3
    dcl_texcoord4_centroid v4
    dcl_texcoord5_centroid v5
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s12
    dcl_2d s13
    dcl_2d s14
    dcl_2d s15

def c220, 0, 1, 0.0625, 0.5
dcl_2d s7

// Corrected version of v2 for refraction:
texldl r31, c220.z, s7
mov r30.xyw, v2
add r31.w, r30.w, -r31.y
mul r31.w, r31.w, c220.w // Divide by 2 for texture space coords
mad r30.x, r31.w, r31.x, r30.x

    cmp r0.x, vFace, c1.x, c1.y
    cmp r0.x, -r0.x, c1.x, c1.y
    mul r0.xyz, r0.x, v5
    mov r1.x, v3.w
    mov r1.y, v4.w
    mov r1.z, v5.w
    add r2.xyz, r1, -c36
    dp3 r0.w, r2, r2
    rsq r0.w, r0.w
    mul r2.xyz, r0.w, r2
    mov r1.w, c1.x
    dp4 r1.x, c37, r1
    texld r3, v1, s0
    add r4, r3.w, -c0.w
    texkill r4
    texld r4, v1.zwzw, s1
    mad r5.xz, r3.w, c1, c1.zyxw
    mov r5.y, r4.w
    dp3 r1.y, r5, c2
    mad r1.z, r1.y, c4.x, c4.z
    mad r5.xyz, r3, c4.y, c4.w
    mul r4.xyz, r4, r5
    mul r4.xyz, r1.y, r4
    mad r1.yzw, r3.xxyz, r1.z, r4.xxyz
    rcp r2.w, v2.w
    mul r3.x, r2.w, v2.x
    mad r3.z, v2.y, -r2.w, c1.x
    texld r3, r3.xzzw, s12
    mov r4.xyz, c62
    mad r3.xyz, r3, r4, c63
    mul r4.xyz, r3.y, v4
    mad r4.xyz, r3.x, v3, r4
    mad r0.xyz, r3.z, r0, r4
    nrm r4.xyz, r0
    dp3 r0.x, r2, r4
    add r0.x, r0.x, r0.x
    mad r0.xyz, r4, -r0.x, r2
    dp3 r5.x, c47, r4
    dp3 r5.y, c48, r4
    dp3 r5.z, c49, r4
    dp3_sat r3.z, c47, r0
    dp3_sat r3.w, c48, r0
    dp3_sat r0.x, c49, r0
    mul_sat r5.xyz, r5, c1.w
    log r6.x, r3.z
    log r6.y, r3.w
    log r6.z, r0.x
    mul r0.xyz, r6, c41.w
    exp r6.x, r0.x
    exp r6.y, r0.y
    exp r6.z, r0.z
    mul r0.xyz, r5, r6
    dp3 r0.x, r0, c0.x

// c65 = refraction, use adjusted coordinate here:
    mul r0.yz, r3.xxyw, c65.xxyw
    mad r3.zw, r3.xyxy, c65.xyxy, r30.xyxy

    mul r5.x, r2.w, r3.z
    mad r5.z, r3.w, -r2.w, c1.x
    texld r5, r5.xzzw, s14
    add r3.z, r5.x, -c66.x
    rcp r3.z, r3.z
    mad r3.z, c66.y, r3.z, -v2.w
    cmp r3.w, -r3.z, c1.z, c1.x
    cmp r3.z, r3.z, -c1.z, -c1.x
    add r3.z, r3.z, r3.w
    mul r0.yz, r0, r3.z
    mul r0.yz, r0, v0.x
    cmp r0.yz, r3.z, r0, c1.z

// Use adjusted coordinate here as well:
    add r0.yz, r0, r30.xxyw
    mul r5.x, r2.w, r0.y

    mad r5.z, r0.z, -r2.w, c1.x
    texld r6, r5.xzzw, s14
    add r0.y, r6.x, -c66.x
    rcp r0.y, r0.y
    mad r0.y, c66.y, r0.y, -v2.w

// c65 = refraction, but don't use adjusted coordinate here as this is doing reflection calculations with c64
    rcp r0.z, c65.w
    mad r0.y, r0.y, r0.z, c65.z
    mul_sat r0.y, r0.y, v0.x
    texld r5, r5.xzzw, s13
    mad r3.xy, r3, c64, v2
    dp3_sat r0.z, r4, -r2
    add r0.yz, -r0, c1.x
    mul r0.z, r0.z, r0.z
    mul r0.z, r0.z, r0.z
    mad_sat r0.z, r0.z, c33.w, c33.z
    mul r0.z, r0.z, c64.z
    mul_sat r0.z, r0.z, v0.x
    mul r3.x, r2.w, r3.x
    mad r3.z, r3.y, -r2.w, c1.x
    texld r3, r3.xzzw, s15
    mul r3.w, r3.w, c0.z
    if b0
      rcp r0.w, r0.w
      add r0.w, r0.w, c9.w
      mul r4.xyz, r0.w, c10
      exp r6.x, r4.x
      exp r6.y, r4.y
      exp r6.z, r4.z
      add r4.xyz, r6, c1.y
      mov r7.x, c1.x
      mad r4.xyz, c8.w, r4, r7.x
      dp3 r0.w, c9, r2
      mad r2.x, r0.w, r0.w, c1.x
      mov r2.w, c12.w
      mad r0.w, r2.w, r0.w, c11.w
      mul r2.y, r0.w, r0.w
      mul r0.w, r0.w, r2.y
      rsq r0.w, r0.w
      mul r2.yzw, r0.w, c12.xxyz
      mad r2.xyz, c11, r2.x, r2.yzww
      add r6.xyz, -r6, c1.x
      mul r2.xyz, r2, r6
      mul r2.xyz, r2, c8
    else
      mov r2.xyz, c1.z
      mov r4.xyz, c1.x
    endif
    add r6.xy, r1.x, -c15
    mul_sat r6.xy, r6, c15.zwzw
    mov r7.xz, c1
    dp2add r0.w, r6, c16, r7.z
    mov r8.xyz, c14
    mad r8.xyz, r8, r6.y, c13
    dp2add r1.x, r6, -c16, r7.x
    add r6.xy, -c19, v4.w
    mul_sat r6.xy, r6, c19.zwzw
    dp2add r2.w, r6, c20, r7.z
    mov r9.xyz, c18
    mad r7.yzw, r9.xxyz, r6.y, c17.xxyz
    dp2add r4.w, r6, -c20, r7.x
    mul r4.xyz, r4.w, r4
    mul r4.xyz, r1.x, r4
    lrp r6.xyz, r2.w, r7.yzww, r2
    lrp r2.xyz, r0.w, r8, r6
    mad r1.xyz, r1.yzww, r4, r2
    add r2.xyz, -r1, r5
    mad r5.xyz, r0.y, r2, r1
    lrp r1, r0.z, r3, r5
    add oC0.w, r0.x, r1.w
    mov oC0.xyz, r1

// approximately 147 instruction slots used (7 texture, 140 arithmetic)
