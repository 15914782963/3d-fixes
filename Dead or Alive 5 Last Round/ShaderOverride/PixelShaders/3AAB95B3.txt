// water in background of Depth level

//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 gEyePlane;
//   float4 gEyePosition;
//   float4 gFogDensity;
//   float4 gFogDistance;
//   float4 gFogFarMiddle;
//   float4 gFogMiddle;
//   float4 gHDRRate;
//   float4 gHeightFogDensity;
//   float4 gHeightFogDistance;
//   float4 gHeightFogFarMiddle;
//   float4 gHeightFogMiddle;
//   float4 gLScatterMieTmp;
//   float4 gLScatterOutTmp;
//   float4 gLScatterRayTmp;
//   float4 gLScatterSunColor;
//   float4 gLScatterSunDir;
//   row_major float3x3 gLightDirection;
//   bool gLightScatterEnable;
//   float4 gParallaxParam;
//   sampler2D gSamplerDepth;
//   sampler2D gSamplerScreen;
//   float4 gSpecularColor;
//   sampler2D gTextureSampler0;
//   sampler2D gTextureSampler1;
//   samplerCUBE gTextureSampler2;
//   float4 param_fs_bumpglass_param_camera;
//   float4 param_fs_bumpglass_param_reflect;
//   float4 param_fs_bumpglass_param_refract;
//
//
// Registers:
//
//   Name                             Reg   Size
//   -------------------------------- ----- ----
//   gLightScatterEnable              b0       1
//   gHDRRate                         c0       1
//   gLScatterSunColor                c8       1
//   gLScatterSunDir                  c9       1
//   gLScatterOutTmp                  c10      1
//   gLScatterRayTmp                  c11      1
//   gLScatterMieTmp                  c12      1
//   gFogMiddle                       c13      1
//   gFogFarMiddle                    c14      1
//   gFogDistance                     c15      1
//   gFogDensity                      c16      1
//   gHeightFogMiddle                 c17      1
//   gHeightFogFarMiddle              c18      1
//   gHeightFogDistance               c19      1
//   gHeightFogDensity                c20      1
//   gParallaxParam                   c33      1
//   gEyePosition                     c36      1
//   gEyePlane                        c37      1
//   gSpecularColor                   c41      1
//   gLightDirection                  c47      3
//   param_fs_bumpglass_param_reflect c62      1
//   param_fs_bumpglass_param_refract c63      1
//   param_fs_bumpglass_param_camera  c64      1
//   gTextureSampler0                 s0       1
//   gTextureSampler1                 s1       1
//   gTextureSampler2                 s2       1
//   gSamplerScreen                   s13      1
//   gSamplerDepth                    s14      1
//

    ps_3_0
    def c1, 1, -1, 2, 8
    def c2, 0, 1, -0, -1
    dcl_color_centroid v0.x
    dcl_texcoord_centroid v1
    dcl_texcoord2_centroid v2.xyw
    dcl_texcoord3_centroid v3
    dcl_texcoord4_centroid v4
    dcl_texcoord5_centroid v5
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s13
    dcl_2d s14

def c220, 0, 1, 0.0625, 0.5
dcl_2d s7

// Corrected version of v2 for refraction:
texldl r31, c220.z, s7
mov r30.xyw, v2
add r31.w, r30.w, -r31.y
mul r31.w, r31.w, c220.w // Divide by 2 for texture space coords
mad r30.x, r31.w, r31.x, r30.x

    cmp r0.x, vFace, c1.x, c1.y
    cmp r0.x, -r0.x, c1.x, c1.y
    mul r0.xyz, r0.x, v5
    mov r1.x, v3.w
    mov r1.y, v4.w
    mov r1.z, v5.w
    add r2.xyz, r1, -c36
    dp3 r0.w, r2, r2
    rsq r0.w, r0.w
    mul r2.xyz, r0.w, r2
    mov r1.w, c1.x
    dp4 r1.x, c37, r1
    texld r3, v1, s0
    add r4, r3.w, -c0.w
    texkill r4
    texld r4, v1.zwzw, s1
    mad r1.yz, r4.xxyw, c1.z, c1.y
    dp2add r1.w, r1.yzzw, -r1.yzzw, c1.x
    rsq r1.w, r1_abs.w
    rcp r1.w, r1.w
    mul r4.xyz, r1.z, v4
    mad r4.xyz, r1.y, v3, r4
    mad r0.xyz, r1.w, r0, r4
    nrm r4.xyz, r0
    dp3 r0.x, r2, r4
    add r0.x, r0.x, r0.x
    mad r0.xyz, r4, -r0.x, r2
    dp3_sat r1.w, r4, r0
    add r1.w, -r1.w, c1.x
    mul r1.w, r1.w, r1.w
    mul r1.w, r1.w, r1.w
    mad_sat r1.w, r1.w, c33.w, c33.z
    dp3 r5.x, c47, r4
    dp3 r5.y, c48, r4
    dp3 r5.z, c49, r4
    dp3_sat r2.w, c47, r0
    dp3_sat r3.w, c48, r0
    dp3_sat r4.x, c49, r0
    mul_sat r4.yzw, r5.xxyz, c1.w
    log r5.x, r2.w
    log r5.y, r3.w
    log r5.z, r4.x
    mul r5.xyz, r5, c41.w
    exp r6.x, r5.x
    exp r6.y, r5.y
    exp r6.z, r5.z
    mul r4.xyz, r4.yzww, r6
    dp3 r2.w, r4, c0.x
    mul r4.xy, r1.yzzw, c63

// Use adjusted coordinate here:
    mad r1.yz, r1, c63.xxyw, r30.xxyw

    rcp r3.w, v2.w
    mul r5.x, r1.y, r3.w
    mad r5.z, r1.z, -r3.w, c1.x
    texld r5, r5.xzzw, s14
    add r1.y, r5.x, -c64.x
    rcp r1.y, r1.y
    mad r1.y, c64.y, r1.y, -v2.w
    cmp r1.z, -r1.y, c2.x, c2.y
    cmp r1.y, r1.y, c2.z, c2.w
    add r1.y, r1.y, r1.z
    mul r4.xy, r1.y, r4
    mul r4.xy, r4, v0.x
    cmp r1.yz, r1.y, r4.xxyw, c2.x

// Use adjusted coordinate here:
    add r1.yz, r1, r30.xxyw

    mul r4.x, r3.w, r1.y
    mad r4.z, r1.z, -r3.w, c1.x
    texld r4, r4.xzzw, s13
    texld r5, r0, s2
    if b0
      rcp r0.x, r0.w
      add r0.x, r0.x, c9.w
      mul r0.xyz, r0.x, c10
      exp r6.x, r0.x
      exp r6.y, r0.y
      exp r6.z, r0.z
      add r0.xyz, r6, c1.y
      mov r7.x, c1.x
      mad r0.xyz, c8.w, r0, r7.x
      dp3 r0.w, c9, r2
      mad r1.y, r0.w, r0.w, c1.x
      mov r3.w, c12.w
      mad r0.w, r3.w, r0.w, c11.w
      mul r1.z, r0.w, r0.w
      mul r0.w, r0.w, r1.z
      rsq r0.w, r0.w
      mul r2.xyz, r0.w, c12
      mad r2.xyz, c11, r1.y, r2
      add r6.xyz, -r6, c1.x
      mul r2.xyz, r2, r6
      mul r2.xyz, r2, c8
    else
      mov r2.xyz, c2.x
      mov r0.xyz, c1.x
    endif
    add r1.xy, r1.x, -c15
    mul_sat r1.xy, r1, c15.zwzw
    mov r6.x, c2.x
    dp2add r0.w, r1, c16, r6.x
    mov r7.xyz, c14
    mad r6.yzw, r7.xxyz, r1.y, c13.xxyz
    mov r7.x, c1.x
    dp2add r1.x, r1, -c16, r7.x
    add r1.yz, -c19.xxyw, v4.w
    mul_sat r1.yz, r1, c19.xzww
    dp2add r3.w, r1.yzzw, c20, r6.x
    mov r8.xyz, c18
    mad r7.yzw, r8.xxyz, r1.z, c17.xxyz
    dp2add r1.y, r1.yzzw, -c20, r7.x
    mul r0.xyz, r0, r1.y
    mul r0.xyz, r1.x, r0
    lrp r1.xyz, r3.w, r7.yzww, r2
    lrp r2.xyz, r0.w, r6.yzww, r1
    lrp r1.xyz, c63.z, r4, r3
    mul r0.w, r1.w, c62.z
    lrp r3.xyz, r0.w, r5, r1
    mad oC0.xyz, r3, r0, r2
    add oC0.w, r2.w, r4.w

// approximately 126 instruction slots used (5 texture, 121 arithmetic)
