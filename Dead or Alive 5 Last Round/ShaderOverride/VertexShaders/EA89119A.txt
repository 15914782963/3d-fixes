//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   bool gBlendUnDestOne;
//   float4 gEffectConstantColor;
//   float4 gEffectDistanceFade_VThickness;
//   float3 gEffectEyePosition;
//   float3 gEffectHemisphereColor0;
//   float3 gEffectHemisphereColor1;
//   float3 gEffectHemisphereVector;
//   float4 gEffectLightAttnPoint[2];
//   row_major float3x3 gEffectLightColorDir;
//   float4 gEffectLightColorPoint[4];
//   row_major float3x3 gEffectLightDirection;
//   float4 gEffectLightPosition[4];
//   row_major float4x4 gEffectShadingMatrix;
//   float4 gEffectUVOffset;
//   row_major float4x4 gEffectWorldViewProj;
//   bool gEnableLightScatter;
//   bool gEnableMultiUV;
//   bool gEnablePointLight0;
//   bool gEnablePointLight1;
//   bool gEnablePointLight2;
//   bool gEnablePointLight3;
//   bool gEnableVertexColor;
//   float3 gFogDensity;
//   float4 gFogDistance;
//   float4 gFogFarMiddle;
//   float4 gFogMiddle;
//   float3 gHeightFogDensity;
//   float4 gHeightFogDistance;
//   float4 gHeightFogFarMiddle;
//   float4 gHeightFogMiddle;
//   float4 gLScatterMieTmp;
//   float4 gLScatterOutTmp;
//   float4 gLScatterRayTmp;
//   float4 gLScatterSunColor;
//   float4 gLScatterSunDir;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   gEnableMultiUV                 b0       1
//   gEnableVertexColor             b1       1
//   gEnablePointLight0             b3       1
//   gEnablePointLight1             b4       1
//   gEnablePointLight2             b5       1
//   gEnablePointLight3             b6       1
//   gEnableLightScatter            b8       1
//   gBlendUnDestOne                b9       1
//   gFogDensity                    c32      1
//   gHeightFogDensity              c33      1
//   gLScatterSunColor              c102     1
//   gLScatterSunDir                c103     1
//   gLScatterOutTmp                c104     1
//   gLScatterRayTmp                c105     1
//   gLScatterMieTmp                c106     1
//   gFogMiddle                     c107     1
//   gFogFarMiddle                  c108     1
//   gFogDistance                   c109     1
//   gHeightFogMiddle               c110     1
//   gHeightFogFarMiddle            c111     1
//   gHeightFogDistance             c112     1
//   gEffectHemisphereVector        c170     1
//   gEffectHemisphereColor0        c171     1
//   gEffectHemisphereColor1        c172     1
//   gEffectLightDirection          c173     3
//   gEffectLightColorDir           c176     3
//   gEffectLightPosition           c179     4
//   gEffectLightColorPoint         c183     4
//   gEffectLightAttnPoint          c187     2
//   gEffectWorldViewProj           c200     4
//   gEffectShadingMatrix           c204     3
//   gEffectEyePosition             c208     1
//   gEffectUVOffset                c209     1
//   gEffectConstantColor           c210     1
//   gEffectDistanceFade_VThickness c211     1
//

    vs_3_0
    def c0, 1, 0, 0.5, -0.5
    def c1, 0.00048828125, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_color v2
    dcl_texcoord v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5

def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    mul r0, c201, v0.y
    mad r0, v0.x, c200, r0
    mad r0, v0.z, c202, r0
    add r0, r0, c203
    if b0
      add o2, c209, v3
    else
      add o2, c209.xyxy, v3.xyxy
    endif
    dp3 r1.x, v1, c170
    mov r2.xyz, c172
    mad r1.xyz, r1.x, r2, c171
    dp3_sat r1.w, c173, v1
    dp3_sat r2.x, c174, v1
    dp3_sat r2.y, c175, v1
    mul r2.xzw, r2.x, c177.xyyz
    mad r2.xzw, r1.w, c176.xyyz, r2
    mad r2.xyz, r2.y, c178, r2.xzww
    add r1.xyz, r1, r2
    if b3
      add r2.xyz, c179, -v0
      dp3 r1.w, r2, r2
      mov r3, c187
      mad_sat r2.w, r3.x, r1.w, c183.w
      mul r4.xyz, r2.w, c183
      mad r2.w, r3.y, r1.w, c0.x
      rcp r2.w, r2.w
      mul r4.xyz, r2.w, r4
      rsq r1.w, r1.w
      mul r2.xyz, r1.w, r2
      dp3_sat r1.w, v1, r2
      mul r2.xyz, r4, r1.w
      if b4
        add r4.xyz, c180, -v0
        dp3 r1.w, r4, r4
        mad_sat r2.w, r3.z, r1.w, c184.w
        mul r3.xyz, r2.w, c184
        mad r2.w, r3.w, r1.w, c0.x
        rcp r2.w, r2.w
        mul r3.xyz, r2.w, r3
        rsq r1.w, r1.w
        mul r4.xyz, r1.w, r4
        dp3_sat r1.w, v1, r4
        mad r2.xyz, r1.w, r3, r2
        if b5
          add r3.xyz, c181, -v0
          dp3 r1.w, r3, r3
          mov r4, c188
          mad_sat r2.w, r4.x, r1.w, c185.w
          mul r5.xyz, r2.w, c185
          mad r2.w, r4.y, r1.w, c0.x
          rcp r2.w, r2.w
          mul r5.xyz, r2.w, r5
          rsq r1.w, r1.w
          mul r3.xyz, r1.w, r3
          dp3_sat r1.w, v1, r3
          mad r2.xyz, r1.w, r5, r2
          if b6
            add r3.xyz, c182, -v0
            dp3 r1.w, r3, r3
            mad_sat r2.w, r4.z, r1.w, c186.w
            mul r4.xyz, r2.w, c186
            mad r2.w, r4.w, r1.w, c0.x
            rcp r2.w, r2.w
            mul r4.xyz, r2.w, r4
            rsq r1.w, r1.w
            mul r3.xyz, r1.w, r3
            dp3_sat r1.w, v1, r3
            mad r2.xyz, r1.w, r4, r2
          endif
        endif
      endif
    else
      mov r2.xyz, c0.y
    endif
    add r1.xyz, r1, r2

mov o0, r0 // Relocated from line 243 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i -f --only-autofixed --auto-fix-vertex-halo EA89119A.txt
texldl r6, c220.z, s0
add r6.w, r0.w, -r6.y
mad r0.x, r6.w, r6.x, r0.x

    mad o3.w, c211.x, r0.w, c211.y
    if b8
      if b9
        add r2.xyz, -c208, v0
        dp3 r2.w, r2, r2
        rsq r2.w, r2.w
        rcp r3.x, r2.w
        mul r2.xyz, r2.w, r2
        mul r3.yzw, r2.y, c205.xxyz
        mad r2.xyw, r2.x, c204.xyzz, r3.yzzw
        mad r2.xyz, r2.z, c206, r2.xyww
        nrm r4.xyz, r2
        mul r2.xyz, r3.x, c104
        exp r3.x, r2.x
        exp r3.y, r2.y
        exp r3.z, r2.z
        dp3 r2.x, c103, r4
        mad r2.y, r2.x, r2.x, c0.x
        mov r2.w, c106.w
        mad r2.x, r2.w, r2.x, c105.w
        mul r2.z, r2.x, r2.x
        mul r2.x, r2.x, r2.z
        rsq r2.x, r2.x
        mul r2.xzw, r2.x, c106.xyyz
        mad r2.xyz, c105, r2.y, r2.xzww
        add r3.xyz, -r3, c0.x
        mul r2.xyz, r2, r3
        mul r2.xyz, r2, c102
      else
        mov r2.xyz, c0.y
      endif
    else
      mov r2.xyz, c0.y
    endif
    if b9
      add r3.xy, r0.w, -c109
      mul_sat r3.xy, r3, c109.zwzw
      mov r3.z, c0.y
      dp3 r2.w, r3, c32
      mov r4.xyz, c108
      mad r3.xyz, r4, r3.y, c107
      add r3.w, -r2.w, c0.x
      mul r3.xyz, r2.w, r3
      add r4.xy, -c112, v0.y
      mul_sat r4.xy, r4, c112.zwzw
      mov r4.z, c0.y
      dp3 r2.w, r4, c33
      mov r5.xyz, c111
      mad r4.xyz, r5, r4.y, c110
      lrp r5.xyz, r2.w, r4, r2
      mad o3.xyz, r5, r3.w, r3
    else
      mov o3.xyz, r2
    endif
    if b1
      mov r1.w, c0.x
      mul r2, r1.wxyz, v2.wxyz
      mov o1.xyz, r2.yzww
    else
      mov o1.xyz, r1
      mov r2.x, c0.x
    endif
    mul o1.w, r2.x, c210.w
    mul r1.xy, r0, c0.zwzw
    rcp r1.z, r0.w
    mad r1.xy, r1, r1.z, c0.z
    mov r1.z, r0.w
    mul o4.xyz, r0.w, r1
    mad r1.x, v0.w, c211.z, c211.w
    max o5.w, r1.x, c1.x

//     mov o0, r0 // Relocated to line 173 with shadertool.py
    mov o4.w, r1.z
    mov o5.xyz, c0.y

// approximately 169 instruction slots used
