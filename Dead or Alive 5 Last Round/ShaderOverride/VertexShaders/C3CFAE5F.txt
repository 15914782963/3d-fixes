//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 gAmbientColor[2];
//   bool gEnvMappingEnable;
//   float4 gEyePosition;
//   float4 gHDRRate;
//   float3 gHemisphereVector;
//   float4 gLightAttnPoint[2];
//   float4 gLightColorPoint[4];
//   float4 gLightPosition[4];
//   bool gPointLightEnable1;
//   bool gPointLightEnable2;
//   bool gPointLightEnable3;
//   row_major float4x4 gReflectMatrix;
//   row_major float4x4 gShadingWorldViewProj;
//   bool gShadowEnable;
//   row_major float4x4 gShadowMatrix;
//   float3 gShadowOffset;
//   float3 gShadowVector;
//   sampler2D gSkinningMatricesSampler;
//   float4 gSpecularColor;
//   row_major float4x4 gStaticTransformMatrix;
//   float4 gUVMaskForReflect[3];
//   float4 gUVOffset0;
//   float4 gUVOffset1;
//   float4 gUVScaleByReflect[3];
//   bool gUseInputVertexColor;
//   bool gUseMultiUV;
//   bool gVertexBlendEnable2;
//   row_major float4x4 gWorldViewProj;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   gUseMultiUV              b0       1
//   gPointLightEnable1       b2       1
//   gPointLightEnable2       b3       1
//   gPointLightEnable3       b4       1
//   gEnvMappingEnable        b5       1
//   gShadowEnable            b6       1
//   gVertexBlendEnable2      b10      1
//   gUseInputVertexColor     b13      1
//   gStaticTransformMatrix   c0       4
//   gShadingWorldViewProj    c4       4
//   gUVOffset0               c8       1
//   gUVOffset1               c9       1
//   gShadowVector            c11      1
//   gShadowOffset            c12      1
//   gAmbientColor            c13      2
//   gLightColorPoint         c21      4
//   gSpecularColor           c26      1
//   gHDRRate                 c31      1
//   gWorldViewProj           c50      4
//   gReflectMatrix           c58      4
//   gUVScaleByReflect        c62      2
//   gUVMaskForReflect        c65      2
//   gEyePosition             c81      1
//   gShadowMatrix            c90      4
//   gHemisphereVector        c95      1
//   gLightPosition           c96      4
//   gLightAttnPoint          c100     2
//   gSkinningMatricesSampler s3       1
//

    vs_3_0
    def c10, 0.00390625, 0.000651041686, 0.001953125, 0.00325520826
    def c15, 0.000651041686, 0, 8, 0.5
    def c16, 1, 0, 0.001953125, 0.00325520826
    dcl_position v0
    dcl_color v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_normal v4
    dcl_tangent v5
    dcl_blendweight v6
    dcl_blendindices v7
    dcl_2d s3
    dcl_position o0
    dcl_texcoord6 o1
    dcl_color1 o2
    dcl_color o3.xyz
    dcl_texcoord o4
    dcl_texcoord1 o5
    dcl_texcoord2 o6
    dcl_texcoord3 o7
    dcl_texcoord4 o8
    dcl_texcoord5 o9
    dcl_texcoord7 o10

def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    if b10
      frc r0, v7
      add r1, -r0, v7
      slt r2, v7, -v7
      slt r0, -r0, r0
      mad r0, r2, r0, r1
      mul r1, r0, c10.x
      mad r0, r0.xxxy, c10.x, c10.yzwy
      mul r2, r0.x, c16.xyyy
      texldl r2, r2, s3
      mul r3, r0.yxxx, c16.xyyy
      texldl r3, r3, s3
      mul r4, r0.zxxx, c16.xyyy
      texldl r4, r4, s3
      mul r0, r0.wxxx, c16.xyyy
      texldl r0, r0, s3
      mul r5, r1.yxxx, c16.xyyy
      add r6, r5, c16.zyyy
      texldl r6, r6, s3
      add r5, r5, c16.wyyy
      texldl r5, r5, s3
      mul r7, r1.zxxx, c16.xyyy
      add r8, r7, c15.xyyy
      texldl r8, r8, s3
      add r9, r7, c16.zyyy
      texldl r9, r9, s3
      add r7, r7, c16.wyyy
      texldl r7, r7, s3
      mul r1, r1.wxxx, c16.xyyy
      add r10, r1, c15.xyyy
      texldl r10, r10, s3
      add r11, r1, c16.zyyy
      texldl r11, r11, s3
      add r1, r1, c16.wyyy
      texldl r1, r1, s3
      mul r0, r0, v6.y
      mul r6, r6, v6.y
      mul r5, r5, v6.y
      mad r0, v6.x, r2, r0
      mad r2, v6.x, r3, r6
      mad r3, v6.x, r4, r5
      mad r0, v6.z, r8, r0
      mad r2, v6.z, r9, r2
      mad r3, v6.z, r7, r3
      mad r0, v6.w, r10, r0
      mad r2, v6.w, r11, r2
      mad r1, v6.w, r1, r3
      dp4 r3.x, v0, r0
      dp4 r3.y, v0, r2
      dp4 r3.z, v0, r1
      mul r4, r3.y, c51
      mad r4, r3.x, c50, r4
      mad r4, r3.z, c52, r4
      add r4, r4, c53
      dp3 r5.x, v4, r0
      dp3 r5.y, v4, r2
      dp3 r5.z, v4, r1
      nrm r6.xyz, r5
      dp3 r0.x, v5, r0
      dp3 r0.y, v5, r2
      dp3 r0.z, v5, r1
      nrm r1.xyz, r0
      mov r0.xyz, r6.yzxw
    else
      mul r2.xyz, c1, v0.y
      mad r2.xyz, v0.x, c0, r2
      mad r2.xyz, v0.z, c2, r2
      add r3.xyz, r2, c3
      mul r2, c5, v0.y
      mad r2, v0.x, c4, r2
      mad r2, v0.z, c6, r2
      add r4, r2, c7
      mul r2.xyz, c1, v4.y
      mad r2.xyz, v4.x, c0, r2
      mad r2.xyz, v4.z, c2, r2
      nrm r5.xyz, r2
      mul r2.xyz, c1, v5.y
      mad r2.xyz, v5.x, c0, r2
      mad r2.xyz, v5.z, c2, r2
      nrm r1.xyz, r2
      mov r0.xyz, r5.yzxw
    endif
    mul r2.xyz, r1.yzxw, r0.yzxw
    mad r2.xyz, r0, r1.zxyw, -r2
    mul o8.xyz, r2, v5.w
    if b0
      add r2, c8, v2
      add r5, c9, v3
    else
      add r5, c8.xyxy, v2.xyxy
      mov r2, r5.zwzw
    endif
    if b5
      mul r6, r0.x, c59.xyxy
      mad r6, r0.z, c58.xyxy, r6
      mad r6, r0.y, c60.xyxy, r6
      add r6, r6, c61.xyxy
      mul r7, r6.zwzw, c65
      mad o4, r2, c62, r7
      mul r6, r6, c66
      mad o5, r5, c63, r6
    else
      mov o4, r2
      mov o5, r5
    endif
    if b13
      mul r2.x, c31.w, v1.w
      mov o3.xyz, v1
    else
      mov o3.xyz, c16.x
      mov r2.x, c31.w
    endif
    dp3 r2.y, r0.zxyw, c95
    mov r5.xyz, c14
    mad r2.yzw, r2.y, r5.xxyz, c13.xxyz
    if b2
      add r5.xyz, r3, -c81
      nrm r6.xyz, r5
      dp3 r3.w, r6.yzxw, r0
      add r3.w, r3.w, r3.w
      mad r5.xyz, r0.zxyw, -r3.w, r6
      add r6.xyz, -r3, c97
      dp3 r3.w, r6, r6
      mov r5.w, c22.w
      mad_sat r5.w, c100.z, r3.w, r5.w
      mul r7.xyz, r5.w, c22
      mov r8.x, c16.x
      mad r5.w, c100.w, r3.w, r8.x
      rcp r5.w, r5.w
      mul r7.xyz, r5.w, r7
      rsq r3.w, r3.w
      mul r6.xyz, r3.w, r6
      dp3 r3.w, r6.yzxw, r0
      mov_sat r5.w, r3.w
      mul r8.yzw, r7.xxyz, r5.w
      dp3_sat r5.w, r6, r5
      mul_sat r3.w, r3.w, c15.z
      slt r6.x, -r5.w, r5.w
      pow r6.y, r5.w, c26.w
      mul r5.w, r6.y, r6.x
      mul r3.w, r3.w, r5.w
      mul r6.xyz, r7, r3.w
      mul r3.w, r3.w, c31.x
      if b3
        add r7.xyz, -r3, c98
        dp3 r5.w, r7, r7
        mov r9.xz, c101
        mad_sat r6.w, r9.x, r5.w, c23.w
        mul r9.xyw, r6.w, c23.xyzz
        mad r6.w, c101.y, r5.w, r8.x
        rcp r6.w, r6.w
        mul r9.xyw, r6.w, r9
        rsq r5.w, r5.w
        mul r7.xyz, r5.w, r7
        dp3 r5.w, r7.yzxw, r0
        mov_sat r6.w, r5.w
        mad r8.yzw, r6.w, r9.xxyw, r8
        dp3_sat r6.w, r7, r5
        mul_sat r5.w, r5.w, c15.z
        slt r7.x, -r6.w, r6.w
        pow r7.y, r6.w, c26.w
        mul r6.w, r7.y, r7.x
        mul r5.w, r5.w, r6.w
        mad r6.xyz, r5.w, r9.xyww, r6
        mad r3.w, r5.w, c31.x, r3.w
        if b4
          add r7.xyz, -r3, c99
          dp3 r5.w, r7, r7
          mad_sat r6.w, r9.z, r5.w, c24.w
          mul r9.xyz, r6.w, c24
          mad r6.w, c101.w, r5.w, r8.x
          rcp r6.w, r6.w
          mul r9.xyz, r6.w, r9
          rsq r5.w, r5.w
          mul r7.xyz, r5.w, r7
          dp3 r5.w, r7.yzxw, r0
          mov_sat r6.w, r5.w
          mad r8.yzw, r6.w, r9.xxyz, r8
          dp3_sat r5.x, r7, r5
          mul_sat r5.y, r5.w, c15.z
          slt r5.z, -r5.x, r5.x
          pow r6.w, r5.x, c26.w
          mul r5.x, r5.z, r6.w
          mul r5.x, r5.y, r5.x
          mad r6.xyz, r5.x, r9, r6
          mad r3.w, r5.x, c31.x, r3.w
        endif
      endif
    else
      mov r8.yzw, c16.y
      mov r6.xyz, c16.y
      mov r3.w, c16.y
    endif
    add o1.xyz, r2.yzww, r8.yzww
    add r2.y, r3.w, c31.y
    if b6
      mul r5, r3.y, c91
      mad r5, r3.x, c90, r5
      mad r5, r3.z, c92, r5
      add r5, r5, c93
      dp3 r2.z, r0.zxyw, c11
      mad r2.w, c12.y, r2_abs.z, c12.x
      mad o10.z, r2.w, r5.w, r5.z
      mov o10.xyw, r5
      mov o2.w, r2.z
    else
      mov o10, c16.y
      mov o2.w, c16.x
    endif
    mul o2.xyz, r6, c26
    add o1.w, r2.x, r2.y

mov o0, r4 // Relocated from line 307 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i -f --only-autofixed --auto-fix-vertex-halo C3CFAE5F.txt
texldl r12, c220.z, s0
add r12.w, r4.w, -r12.y
mad r4.x, r12.w, r12.x, r4.x

    mul r2.xyz, r4.xyww, c15.w
    add o6.xy, r2.z, r2

//     mov o0, r4 // Relocated to line 305 with shadertool.py
    mov o6.zw, r4
    mov r1.w, r3.x
    mov o7, r1
    mov o8.w, r3.y
    mov r0.w, r3.z
    mov o9, r0.zxyw

// approximately 264 instruction slots used (24 texture, 240 arithmetic)
