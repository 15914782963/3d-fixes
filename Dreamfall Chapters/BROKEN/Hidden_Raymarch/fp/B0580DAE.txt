// CRC32: B0580DAE | Matched 2 variants of 1 shaders: Hidden/Raymarch
// 
//    Unity headers extracted from Raymarch.shader
//    Shader "Hidden/Raymarch" {
//      SubShader 1/1 {
//        Pass 1/1 {
//          ZWrite Off
//          Fog { Mode Off }
//          Stencil {
//             Comp Equal
//            }
//          Program "fp" {
//            SubProgram "d3d9 " {
// 2:           Keywords { "ATTENUATION_CURVE_OFF" "COLORED_OFF" "COOKIE_TEX_OFF" "DIRECTIONAL_SHAFTS" }
// 1:           Keywords { "ATTENUATION_CURVE_OFF" "COLORED_OFF" "COOKIE_TEX_ON" "DIRECTIONAL_SHAFTS" }
//              Matrix 0 [_FrustumRays]
//              Vector 4 [_ZBufferParams]
//              Vector 5 [_CameraPosLocal]
//              Vector 6 [_ShadowmapDim]
//              Vector 7 [_ScreenTexDim]
//              Vector 8 [_LightColor]
//              Float 9 [_Extinction]
//              Float 10 [_Brightness]
//              Float 11 [_MinDistFromCamera]
//              SetTexture 0 [_Coord] 2D 0
//              SetTexture 1 [_CameraDepthTexture] 2D 1
//              SetTexture 2 [_Shadowmap] 2D 2
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    def c12, 0.50000000, -0.50000000, 0.00000000, 2.00000000
    def c13, 256.00000000, 4.00000000, 0.00000000, 1.00000000
    defi i0, 255, 0, 1, 0
    def c14, 2.71828198, 0, 0, 0
    dcl_texcoord0 v0.xy
    mov r0.xyz, c2
    mov r3.xyz, c5
    mov r2.xyz, c1
    add r1.xyz, -c3, r0
    texld r4.xy, v0, s0
    add r0.xyz, -c0, r2
    mad r0.xyz, r4.x, r0, c0
    mad r1.xyz, r4.x, r1, c3
    add r1.xyz, r1, -r0
    mad r0.xyz, r4.y, r1, r0
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul r1.xyz, r0.w, r0
    mov r0.xyz, c5
    rcp r2.x, r1.x
    rcp r2.y, r1.y
    rcp r2.z, r1.z
    add r3.xyz, c12.y, -r3
    add r0.xyz, c12.x, -r0
    mul r3.xyz, r2, r3
    mul r0.xyz, r2, r0
    min r2.xyz, r0, r3
    max r2.xy, r2.x, r2.yzzw
    mul r4.xy, r4, c7
    max r1.w, r2.x, r2.y
    frc r2.zw, r4.xyxy
    add r2.xy, r4, -r2.zwzw
    max r0.xyz, r0, r3
    min r2.zw, r0.x, r0.xyyz
    max r1.w, r1, c12.z
    add r2.xy, r2, c12.x
    mul r2.xy, r2, c7.zwzw
    texld r0.x, r2, s1
    mad r0.x, r0, c4, c4.y
    min r0.z, r2, r2.w
    rcp r0.y, r0.w
    rcp r0.x, r0.x
    mul r0.x, r0, r0.y
    min r0.x, r0, r0.z
    max r1.w, r1, c11.x
    add r0.w, -r1, r0.x
    mul r0.xyz, r1, r0.w
    mul r0.xy, r0, c6
    frc r2.xy, r0
    add r0.xy, r0, -r2
    abs r2.y, r0
    abs r2.x, r0
    max r2.x, r2, r2.y
    mul r2.x, r2, c12.w
    abs r2.y, r2.x
    frc r2.z, r2.y
    add r2.y, r2, -r2.z
    cmp r2.x, r2, r2.y, -r2.y
    min_pp r2.x, r2, c13
    max_pp r2.x, r2, c13.y
    abs r2.y, r2.x
    frc r2.z, r2.y
    add r2.y, r2, -r2.z
    cmp r2.w, r2.x, r2.y, -r2.y
    mad r1.xyz, r1.w, r1, c5
    rcp r3.w, r2.w
    mul r0.xy, r0, c6.zwzw
    mul r3.xyz, r3.w, r0
    add r2.xyz, r1, c12.x
    mov r4.xyz, c12.z
    mov r4.w, c12.z
    loop aL, i0
    break_ge r4.w, r2.w
    mad r0.xyz, r4.w, r3, r2
    mul r5.x, r0.z, c9
    pow r1, c14.x, r5.x
    mov r5.xy, r0
    mov r5.z, c12
    texldl r0.x, r5.xyzz, s2
    add r0.x, -r0, r0.z
    mov r0.y, r1.x
    cmp r0.x, r0, c13.z, c13.w
    mad r4.xyz, r0.x, r0.y, r4
    add r4.w, r4, c13
    endloop
    mov r0.xyz, c8
    mul r0.xyz, c10.x, r0
    mul r0.xyz, r0, r3.w
    mul r0.xyz, r0, r0.w
    mul_sat oC0, r4.xyzz, r0.xyzz
