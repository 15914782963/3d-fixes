// CRC32: AF3AFC2F | Matched 8 variants of 1 shaders: Hidden/Final Interpolation
// 
//     Unity headers extracted from FinalInterpolation.shader
//     Shader "Hidden/Final Interpolation" {
//       Properties {
//        _ZTest ("", Float) = 8
//       }
//       Fallback Off
//       SubShader 1/1 {
//         Pass 1/1 {
//           ZTest [_ZTest]
//           ZWrite Off
//           Fog { Mode Off }
//           Blend One SrcAlpha
//           Program "vp" {
//             SubProgram "d3d9 " {
// 10:           Keywords { "DIRECTIONAL_SHAFTS" "FLIP_WORKAROUND_OFF" "LIGHT_OFF_SCREEN" "QUAD_SHAFTS" "SHOW_SAMPLES_OFF" }
// 40:           Keywords { "DIRECTIONAL_SHAFTS" "FLIP_WORKAROUND_OFF" "LIGHT_OFF_SCREEN" "QUAD_SHAFTS" "SHOW_SAMPLES_ON" }
// 01:           Keywords { "DIRECTIONAL_SHAFTS" "FLIP_WORKAROUND_OFF" "LIGHT_ON_SCREEN" "QUAD_SHAFTS" "SHOW_SAMPLES_OFF" }
// 04:           Keywords { "DIRECTIONAL_SHAFTS" "FLIP_WORKAROUND_OFF" "LIGHT_ON_SCREEN" "QUAD_SHAFTS" "SHOW_SAMPLES_ON" }
// 20:           Keywords { "FLIP_WORKAROUND_OFF" "LIGHT_OFF_SCREEN" "QUAD_SHAFTS" "SHOW_SAMPLES_OFF" "SPOT_SHAFTS" }
// 80:           Keywords { "FLIP_WORKAROUND_OFF" "LIGHT_OFF_SCREEN" "QUAD_SHAFTS" "SHOW_SAMPLES_ON" "SPOT_SHAFTS" }
// 02:           Keywords { "FLIP_WORKAROUND_OFF" "LIGHT_ON_SCREEN" "QUAD_SHAFTS" "SHOW_SAMPLES_OFF" "SPOT_SHAFTS" }
// 08:           Keywords { "FLIP_WORKAROUND_OFF" "LIGHT_ON_SCREEN" "QUAD_SHAFTS" "SHOW_SAMPLES_ON" "SPOT_SHAFTS" }
//               Bind "vertex" Vertex
//               Bind "texcoord" TexCoord0
//               Vector 0 [_ProjectionParams]
//               Vector 1 [_ScreenTexDim]
//             }
//           }
//         }
//       }
//     }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    dcl_position o0
    dcl_texcoord0 o1
    def c2, 0.00000000, 0.50000000, 0, 0
    dcl_position0 v0
    dcl_texcoord0 v1
    mov r0.y, c2.x
    mov r0.x, v0.y
    if_lt c0.x, r0.y
    mov r0.x, -v0.y
    endif
    mov r0.zw, c1
    mov o0.xzw, v0
    mad o1.xy, c2.y, r0.zwzw, v1
    mov o0.y, r0.x
