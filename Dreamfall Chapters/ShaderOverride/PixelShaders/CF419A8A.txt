// CRC32: CF419A8A | Matched 2 variants of 1 shaders: Hidden/Final Interpolation
// 
//    Unity headers extracted from FinalInterpolation.shader
//    Shader "Hidden/Final Interpolation" {
//      Properties {
//       _ZTest ("", Float) = 8
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Pass 1/1 {
//          ZTest [_ZTest]
//          ZWrite Off
//          Fog { Mode Off }
//          Blend One SrcAlpha
//          Program "fp" {
//            SubProgram "d3d9 " {
// 1:           Keywords { "FLIP_WORKAROUND_OFF" "FRUSTUM_SHAFTS" "LIGHT_ON_SCREEN" "SHOW_SAMPLES_OFF" "SPOT_SHAFTS" }
// 2:           Keywords { "FLIP_WORKAROUND_ON" "FRUSTUM_SHAFTS" "LIGHT_ON_SCREEN" "SHOW_SAMPLES_OFF" "SPOT_SHAFTS" }
//              Matrix 0 [_FrustumRays]
//              Vector 4 [_ZBufferParams]
//              Vector 5 [_LightPos]
//              Vector 6 [_CameraPosLocal]
//              Float 7 [_FrustumApex]
//              Vector 8 [_CoordTexDim]
//              Vector 9 [_ScreenTexDim]
//              Float 10 [_DepthThreshold]
//              SetTexture 0 [_CameraDepthTexture] 2D 0
//              SetTexture 1 [_DepthEpi] 2D 1
//              SetTexture 2 [_RaymarchedLight] 2D 2
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    def c11, 0.50000000, 1.00000000, 0.00000000, 99999996802856925000000000000000000000.00000000
    def c12, -0.50000000, 2.00000000, -1.00000000, 1.00000000
    def c13, -0.00000100, 0.00000100, -0.50000000, 0.50000000
    def c14, 0.25000000, 0.00000000, 0.50000000, 0.75000000
    def c15, 4.00000000, 0.00100000, 0, 0
    dcl_texcoord0 v0.xyz

def c220, 0, 1, 0.0625, -0.5
dcl_2d s13

mov r30, c200

// _LightPos is the mono screen-space light position, stereoise it:
mov r20, c5
if_eq r30.x, c220.x
texldl r31, c220.z, s13
add r31.w, r20.z, -r31.y // Z or W? Both seem to work.
mul r31.w, r31.w, c220.w // Had to multiply correction by -0.5
mad r20.x, r31.w, r31.x, r20.x
endif

    mov r1.xyz, c1
    mov r0.zw, c9
    rcp r0.x, v0.z
    mul r0.zw, c11.x, r0
    mul r0.xy, v0, r0.x
    mad r0.xy, r0, c11.x, r0.zwzw
    add r6.xy, r0, c11.x
    add r2.xyz, -c0, r1
    mov r0.xyz, c2
    add r1.xyz, -c3, r0
    mad r0.xyz, r6.x, r2, c0
    mad r1.xyz, r6.x, r1, c3
    add r1.xyz, r1, -r0
    mad r0.xyz, r6.y, r1, r0
    dp3 r0.w, r0, r0
    rsq r7.w, r0.w
    mul r7.xyz, r7.w, r0
    mul r2.x, r7.z, c11
    cmp r0.y, r7.z, c11.z, c11
    cmp r0.x, -r7.z, c11.z, c11.y
    add r0.z, r0.x, -r0.y
    mov r0.x, c7
    add r0.w, c11.x, -r0.x
    mov r0.y, c6.z
    add r0.y, -c7.x, r0
    mul r1.w, r0.y, c11.x
    mad r0.x, r0.w, r7, r2
    rcp r0.y, r0.x
    mad r0.x, -r0.w, c6, -r1.w
    mul r1.x, r0, r0.y
    mad r0.x, r0.w, r7.y, r2
    mad r1.z, r0.w, r7.x, -r2.x
    mad r2.x, r0.w, r7.y, -r2
    rcp r0.y, r0.x
    mad r0.x, -r0.w, c6.y, -r1.w
    mul r1.y, r0.x, r0
    mad r0.x, -r0.w, c6, r1.w
    rcp r0.y, r1.z
    mul r1.z, r0.x, r0.y
    mad r0.xy, r6, c12.y, c12.z
    add r6.zw, r0.xyxy, -r20.xyxy
    rcp r2.z, r2.x
    mad r0.w, -r0, c6.y, r1
    mul r1.w, r0, r2.z
    mul r2.xy, r6.zwzw, r6.zwzw
    add r0.w, r2.x, r2.y
    rsq r2.x, r0.w
    mul r7.xy, r2.x, r6.zwzw
    mad r3, r0.z, c11.w, -r1
    abs r4.xy, r7
    add r5.xy, r4, c13.x
    add r0, r0.xxyy, c12.wzwz
    mul r0, r7.yyxx, r0
    add r0, r0.xyyx, -r0.zzww
    cmp r0, r0, c11.z, c11.y
    add r4, -r0, c11.y
    mul r0, r0.wxyz, r4
    abs r4, r0
    cmp r5.xy, r5, c11.z, c11.y
    add r5.xy, r7, r5
    mad r2, r1, r7.z, c6.z
    cmp r4, -r4, c11.z, c11.y
    rcp r0.xz, r5.x
    rcp r0.yw, r5.y
    mov r5.zw, r20.xyxy
    add r5, c12.zzww, -r5.zwzw
    mul r0, r5, r0
    dp4 r5.x, r4, r0
    add r0, -r2, c7.x
    cmp r0, r0, c11.y, c11.z
    mad r0, r0, r3, r1
    mul r2.zw, r7.xyxy, r5.x
    mul r1.xy, r2.zwzw, r2.zwzw
    mov r2.xy, r0.zwzw
    add r0.z, r1.x, r1.y
    rsq r1.z, r0.z
    mov r1.xy, r0
    add r0.xy, r2.zwzw, r20
    rcp r1.w, r1.z
    mad r0, r0.yxyx, c13.zwwz, c13.w
    mad r0, r0, c14.x, c14.yxzw
    dp4 r0.y, r4, r0
    max r1.w, r1, c13.y
    rcp r1.w, r1.w
    mul r0.zw, r2, r1.w
    mov r0.x, c8
    mul r0.zw, r0, r6
    add r1.w, c12.z, r0.x
    add r0.x, r0.z, r0.w
    mul r0.z, r1.w, c8
    mad r0.x, r0, r1.z, c8.z
    mul r0.x, r0, r0.z
    mul r3.xy, r0, c8
    add r3.xy, r3, c11.x
    mov r0.y, c6.z
    mov r0.x, c6.z
    frc r5.zw, r3.xyxy
    rcp r0.z, r7.z
    add r0.y, c12.x, -r0
    add r0.x, c11, -r0
    mul r1.z, r0, r0.y
    mul r2.z, r0, r0.x
    max r0.xyz, r2, r1
    min r0.xy, r0.x, r0.yzzw
    min r1.xyz, r2, r1
    min r0.x, r0, r0.y
    mul r0.y, r7.w, r0.x
    texld r0.x, r6, s0
    max r2.xy, r1.x, r1.yzzw
    add r0.zw, -r5, r3.xyxy
    add r0.zw, r0, c11.x
    mul r3.xy, r0.zwzw, c8.zwzw
    mad r0.x, r0, c4, c4.y
    rcp r0.x, r0.x
    add r5.xy, r3, -c8.zwzw
    min_pp r1.w, r0.x, r0.y
    texld r0.x, r5, s1
    mov r3.zw, c8
    abs r0.w, r0.x
    mad r0.xy, c11.zyzw, -r3.zwzw, r3
    texld r0.x, r0, s1
    mov r3.zw, c8
    mad r4.xy, c11.yzzw, -r3.zwzw, r3
    abs r0.z, r0.x
    texld r0.x, r4, s1
    texld r3.x, r3, s1
    abs r0.y, r3.x
    abs r0.x, r0
    add r0, r1.w, -r0
    abs r0, r0
    max r0, r0, c10.x
    max r2.x, r2, r2.y
    add r6.xyz, -r5.zwzw, c11.y
    rcp r0.x, r0.x
    rcp r0.y, r0.y
    rcp r0.w, r0.w
    rcp r0.z, r0.z
    mul_sat r0, r0, c10.x
    pow r3, r0.x, c15.x
    pow r4, r0.y, c15.x
    mov r0.x, r3
    pow r3, r0.w, c15.x
    mov r0.y, r4
    pow r4, r0.z, c15.x
    mov r0.z, r4
    mov r0.w, r3
    mov r4.yz, r5.z
    mov r4.xw, r6.xyzz
    mov r3.xy, r5.w
    add r3.w, -r5, c11.y
    mov r3.z, r6.y
    mul r3, r4, r3
    mul r0, r3, r0
    dp4 r2.w, r0, c11.y
    rcp r2.w, r2.w
    mul r0, r0, r2.w
    add r3.w, r0.x, r0.y
    add r0.w, r0.z, r0
    max r0.x, r3.w, c15.y
    rcp r0.x, r0.x
    mul r0.x, r0.y, r0
    max r2.w, r0, c15.y
    rcp r2.w, r2.w
    mul r2.w, r0.z, r2
    mul r0.x, r0, c8.z
    mov r0.y, c8.w
    add r0.xy, r5, r0
    texld r3.xyz, r0, s2
    mul r0.xyz, r3, r3.w
    mul r3.x, r2.w, c8.z
    mov r3.y, c11.z
    add r1.xy, r5, r3
    texld r1.xyz, r1, s2
    mad r1.xyz, r1, r0.w, r0
    mad r1.w, -r2.x, r7, r1
    cmp r0.x, r1.w, c11.y, c11.z
    mul oC0.xyz, r0.x, r1
    mov oC0.w, c11.y
