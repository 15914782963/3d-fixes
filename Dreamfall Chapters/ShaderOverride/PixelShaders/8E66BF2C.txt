// CRC32: 8E66BF2C | Unity headers extracted from Standard_DirectionBlend.shader
// Shader "Dreamfall/Unity5/Standard_DirectionBlend" {
//   Properties {
//    _Color ("Main Color", Color) = (1,1,1,1)
//    _BlendColor ("Blend Color", Color) = (1,1,1,1)
//    _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//    _BlendTex ("Blend (RGB) Gloss (A)", 2D) = "white" { }
//    _BlendBump ("Blend Normal (RGB)", 2D) = "bump" { }
//    _BlendTile ("Blend Map Tile Factor", Float) = 1
//    _BumpMap ("Normalmap", 2D) = "bump" { }
//    _Detail ("Detail Base (RGB) Gloss (A)", 2D) = "white" { }
//    _DetailBump ("Detail Normalmap", 2D) = "bump" { }
//    _Boost ("Fresnel Boost", Float) = 1
//    _Direction ("Direction", Vector) = (0,1,0,1)
//    _Adjust ("Fresnel Adjust", Range(-1,1)) = 0
//    _MainAlphaFactor ("Alpha Factor Main", Range(0,1)) = 1
//    _2ndAlphaFactor ("Alpha Factor Seccond", Range(0,1)) = 1
//    _MainGloss ("Gloss Main", Range(0,1)) = 0.8
//    _2ndGloss ("Gloss Seccond", Range(0,1)) = 0.2
//    _MainMetallness ("Metallness Main", Range(0,1)) = 0
//    _2ndMetallness ("Metallness Seccond", Range(0,1)) = 0
//   }
//   Fallback "Specular"
//   SubShader 1/1 {
//     LOD 400
//     Tags { "RenderType"="Opaque" }
//     Pass 1/4 {
//       Name "FORWARD"
//       Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//       GpuProgramID 60415
//       Program "fp" {
//         SubProgram "d3d9 " {
//           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "LIGHTMAP_ON" "SHADOWS_SCREEN" }
//           Float 21 [_2ndAlphaFactor]
//           Float 23 [_2ndGloss]
//           Float 25 [_2ndMetallness]
//           Float 17 [_Adjust]
//           Vector 15 [_BlendColor]
//           Float 19 [_BlendTile]
//           Float 18 [_Boost]
//           Vector 14 [_Color]
//           Vector 16 [_Direction]
//           Float 20 [_MainAlphaFactor]
//           Float 22 [_MainGloss]
//           Float 24 [_MainMetallness]
//           Vector 0 [_WorldSpaceCameraPos]
//           Vector 11 [unity_ColorSpaceDielectricSpec]
//           Vector 13 [unity_DynamicLightmap_HDR]
//           Vector 1 [unity_FogColor]
//           Vector 2 [unity_FogParams]
//           Vector 12 [unity_Lightmap_HDR]
//           Vector 3 [unity_SpecCube0_BoxMax]
//           Vector 4 [unity_SpecCube0_BoxMin]
//           Vector 6 [unity_SpecCube0_HDR]
//           Vector 5 [unity_SpecCube0_ProbePosition]
//           Vector 7 [unity_SpecCube1_BoxMax]
//           Vector 8 [unity_SpecCube1_BoxMin]
//           Vector 10 [unity_SpecCube1_HDR]
//           Vector 9 [unity_SpecCube1_ProbePosition]
//           SetTexture 0 [unity_Lightmap] 2D 0
//           SetTexture 1 [unity_LightmapInd] 2D 1
//           SetTexture 2 [unity_DynamicLightmap] 2D 2
//           SetTexture 3 [unity_DynamicDirectionality] 2D 3
//           SetTexture 4 [unity_SpecCube0] CUBE 4
//           SetTexture 5 [unity_SpecCube1] CUBE 5
//           SetTexture 6 [_ShadowMapTexture] 2D 6
//           SetTexture 7 [_MainTex] 2D 7
//           SetTexture 8 [_BumpMap] 2D 8
//           SetTexture 9 [_BlendTex] 2D 9
//           SetTexture 10 [_Detail] 2D 10
//           SetTexture 11 [_DetailBump] 2D 11
//           SetTexture 12 [_BlendBump] 2D 12
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    def c26, 1.79999995, 0.100000001, 1, -2
    def c27, 0, 0.333333343, -0.5, 0.5
    def c28, 0.75, 7, 0.999989986, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5
    dcl_texcoord6 v6.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_cube s4
    dcl_cube s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9
    dcl_2d s10
    dcl_2d s11
    dcl_2d s12

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

texldl r31, c220.z, s13

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --fix-unity-reflection --only-autofixed --ignore-register-errors Dreamfall_Unity5_Standard_DirectionBlend/fp/8E66BF2C.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mov r0.x, v1.w
    mov r0.y, v2.w
    mov r0.z, v3.w
    add r1.xyz, -r0, r30
    nrm_pp r2.xyz, r1
    texld_pp r1, v0, s7
    mul r3.xy, c19.x, v0
    texld_pp r4, r3, s9
    texld_pp r5, v0.zwzw, s10
    mad_pp r5.xyz, r5, c26.x, c26.y
    min_pp r6.xyz, c26.z, r5
    mul_pp r1.xyz, r1, r6
    texld_pp r5, v0, s8
    mad_pp r5.xy, r5.wyzw, -c26.w, -c26.z
    dp2add_sat_pp r0.w, r5, r5, c27.x
    add_pp r0.w, -r0.w, c26.z
    rsq_pp r0.w, r0.w
    rcp_pp r5.z, r0.w
    texld_pp r6, v0.zwzw, s11
    mad_pp r6.xy, r6.wyzw, -c26.w, -c26.z
    dp2add_sat_pp r0.w, r6, r6, c27.x
    add_pp r0.w, -r0.w, c26.z
    rsq_pp r0.w, r0.w
    rcp_pp r6.z, r0.w
    add_pp r5.xyz, r5, r6
    dp3_pp r0.w, r5, r5
    rsq_pp r0.w, r0.w
    mul_pp r6.xyz, r0.w, r5
    dp3 r7.x, v1, r6
    dp3 r7.y, v2, r6
    dp3 r7.z, v3, r6
    add r7.xyz, r7, -c17.x
    dp3_sat r1.w, r7, c16
    mul_sat r1.w, r1.w, c18.x
    mul r7.xyz, r1, c14
    mad r8.xyz, r4, c15, -r7
    mad_pp r7.xyz, r1.w, r8, r7
    texld_pp r3, r3, s12
    mad_pp r3.xy, r3.wyzw, -c26.w, -c26.z
    dp2add_sat_pp r2.w, r3, r3, c27.x
    add_pp r2.w, -r2.w, c26.z
    rsq_pp r2.w, r2.w
    rcp_pp r3.z, r2.w
    mad r3.xyz, r5, -r0.w, r3
    mad_pp r3.xyz, r1.w, r3, r6
    add_pp r0.w, r1.y, r1.x
    mad_pp r0.w, r1.z, c27.y, r0.w
    max_pp r1.x, r0.w, c20.x
    mul_pp r0.w, r1.x, c22.x
    add_pp r1.x, r4.y, r4.x
    mad_pp r1.x, r4.z, c27.y, r1.x
    max_pp r2.w, r1.x, c21.x
    mad r1.x, c23.x, r2.w, -r0.w
    mad_pp r0.w, r1.w, r1.x, r0.w
    mov r1.x, c24.x
    add r1.x, -r1.x, c25.x
    mad_pp r1.x, r1.w, r1.x, c24.x
    texldp_pp r4, v5, s6
    dp3_pp r5.x, v1, r3
    dp3_pp r5.y, v2, r3
    dp3_pp r5.z, v3, r3
    add_pp r1.y, -r0.w, c26.z
    dp3_pp r1.z, -r2, r5
    add_pp r1.z, r1.z, r1.z
    mad_pp r3.xyz, r5, -r1.z, -r2
    texld_pp r6, v4, s0
    pow_pp r1.z, r6.w, c12.y
    mul_pp r1.z, r1.z, c12.x
    mul_pp r4.yzw, r6.xxyz, r1.z
    texld_pp r8, v4, s1
    add_pp r8.xyz, r8, c27.z
    dp3_pp r1.z, r5, r8
    add_pp r1.z, r1.z, c27.w
    mul_pp r4.yzw, r1.z, r4
    rcp r1.z, r8.w
    mul_pp r4.yzw, r1.z, r4
    mul_pp r6.xyz, r4.x, r6
    min_pp r8.xyz, r6, r4.yzww
    mul_pp r4.xyz, r4.x, r4.yzww
    max_pp r6.xyz, r8, r4
    texld_pp r4, v4.zwzw, s2
    mul_pp r1.z, r4.w, c13.x
    mul_pp r4.xyz, r4, r1.z
    log_pp r8.x, r4.x
    log_pp r8.y, r4.y
    log_pp r8.z, r4.z
    mul_pp r4.xyz, r8, c13.y
    exp_pp r8.x, r4.x
    exp_pp r8.y, r4.y
    exp_pp r8.z, r4.z
    texld_pp r4, v4.zwzw, s3
    add_pp r4.xyz, r4, c27.z
    dp3_pp r1.z, r5, r4
    add_pp r1.z, r1.z, c27.w
    mul_pp r4.xyz, r1.z, r8
    rcp r1.z, r4.w
    mad_pp r4.xyz, r4, r1.z, r6
    mov r6.xw, c27
    if_lt -c5.w, r6.x
    nrm_pp r8.xyz, r3
    add r9.xyz, -r0, c3
    rcp r10.x, r8.x
    rcp r10.y, r8.y
    rcp r10.z, r8.z
    mul_pp r9.xyz, r9, r10
    add r11.xyz, -r0, c4
    mul_pp r10.xyz, r10, r11
    cmp_pp r9.xyz, -r8, r10, r9
    min_pp r1.z, r9.y, r9.x
    min_pp r2.w, r9.z, r1.z
    mov r9.xyz, c4
    add r9.xyz, r9, c3
    mad r10.xyz, r9, r6.w, -c5
    add r10.xyz, r0, r10
    mad r8.xyz, r8, r2.w, r10
    mad_pp r8.xyz, r9, -c27.w, r8
    else
    mov_pp r8.xyz, r3
    endif
    pow_pp r2.w, r1.y, c28.x
    mul_pp r8.w, r2.w, c28.y
    texldl_pp r9, r8, s4
    pow_pp r1.y, r9.w, c6.y
    mul_pp r1.y, r1.y, c6.x
    mul_pp r10.xyz, r9, r1.y
    mov r1.w, c4.w
    if_lt r1.w, c28.z
    if_lt -c9.w, r6.x
    nrm_pp r6.xyz, r3
    add r11.xyz, -r0, c7
    rcp r12.x, r6.x
    rcp r12.y, r6.y
    rcp r12.z, r6.z
    mul_pp r11.xyz, r11, r12
    add r13.xyz, -r0, c8
    mul_pp r12.xyz, r12, r13
    cmp_pp r11.xyz, -r6, r12, r11
    min_pp r1.z, r11.y, r11.x
    min_pp r2.w, r11.z, r1.z
    mov r11.xyz, c7
    add r11.xyz, r11, c8
    mad r12.xyz, r11, r6.w, -c9
    add r0.xyz, r0, r12
    mad r0.xyz, r6, r2.w, r0
    mad_pp r8.xyz, r11, -c27.w, r0
    else
    mov_pp r8.xyz, r3
    endif
    texldl_pp r3, r8, s5
    pow_pp r0.x, r3.w, c10.y
    mul_pp r0.x, r0.x, c10.x
    mul_pp r0.xyz, r3, r0.x
    mad r1.yzw, r1.y, r9.xxyz, -r0.xxyz
    mad_pp r10.xyz, c4.w, r1.yzww, r0
    endif
    nrm_pp r0.xyz, r5
    lrp_pp r3.xyz, r1.x, r7, c11
    mad_pp r1.x, r1.x, -c11.w, c11.w
    mul_pp r1.yzw, r1.x, r7.xxyz
    dp3_pp r0.x, r0, r2
    add_pp r0.y, -r1.x, c26.z
    add_sat_pp r0.y, r0.y, r0.w
    add_pp r0.z, -r0.x, c26.z
    cmp_pp r0.x, r0.x, r0.z, c26.z
    mul_pp r0.z, r0.x, r0.x
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    lrp_pp r2.xyz, r0.x, r0.y, r3
    mul_pp r0.xyz, r2, r10
    mad_pp r0.xyz, r1.yzww, r4, r0
    mad_sat r0.w, v6.x, c2.z, c2.w
    add r0.xyz, r0, -c1
    mad_pp oC0.xyz, r0.w, r0, c1
    mov_pp oC0.w, c26.z
