// CRC32: A2CA5B53 |    Unity headers extracted from Standard_BillboardGrass.shader
//    Shader "Hidden/TerrainEngine/Details/BillboardWavingDoublePass" {
//      Properties {
//       _WavingTint ("Fade Color", Color) = (0.7,0.6,0.5,0)
//       _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
//       _WaveAndDistance ("Wave and distance", Vector) = (12,3.6,1,1)
//       _Cutoff ("Cutoff", Float) = 0.5
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//          Cull Off
//          ColorMask RGB
//          GpuProgramID 38781
//          Program "fp" {
//            SubProgram "d3d9 " {
//              GpuProgramIndex 45
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_BillboardGrass.shader.decompressed:
//   API d3d9
//   Shader model ps_2_0
//   undeciphered1: 41 6 -1
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
//   undeciphered3: 0 0 1
//   Float 4 [_Cutoff]
//   Vector 0 [_WorldSpaceCameraPos]
//   Vector 2 [unity_ColorSpaceDielectricSpec]
//   Vector 3 [unity_Lightmap_HDR]
//   Vector 1 [unity_SpecCube0_HDR]
//   SetTexture 0 [unity_Lightmap] 2D 0
//   SetTexture 1 [unity_SpecCube0] CUBE 1
//   SetTexture 2 [_ShadowMapTexture] 2D 2
//   SetTexture 3 [_MainTex] 2D 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//   using 3Dmigoto command line v1.2.36 on Sun Jun 19 22:12:51 2016
//
//
// Parameters:
//
//   float _Cutoff;
//   sampler2D _MainTex;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_Lightmap;
//   float4 unity_Lightmap_HDR;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_HDR;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _WorldSpaceCameraPos           c0       1
//   unity_SpecCube0_HDR            c1       1
//   unity_ColorSpaceDielectricSpec c2       1
//   unity_Lightmap_HDR             c3       1
//   _Cutoff                        c4       1
//   unity_Lightmap                 s0       1
//   unity_SpecCube0                s1       1
//   _ShadowMapTexture              s2       1
//   _MainTex                       s3       1
//

    ps_3_0 // Converted from ps_2_0 with DarkStarSword's shadertool.py
    def c5, -0.5, 6, 1, 0
    dcl_texcoord v1.xy
    dcl_texcoord1_pp v2.xyz
    dcl_texcoord2 v3.xyz
    dcl_color v0
    dcl_texcoord3_pp v4.xy
    dcl_texcoord4_pp v5
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

texldl r31, c220.z, s13

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --fix-unity-reflection --only-autofixed --ignore-register-errors Hidden_TerrainEngine_Details_BillboardWavingDoublePass/fp/A2CA5B53.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    texld r0, v1, s3
    mad_pp r1, r0.w, v0.w, c5.x
    mul_pp r0, r0, v0
    mad_pp r2, r0.w, v0.w, -c4.x
    add r3.xyz, -v3, r30
    nrm_pp r4.xyz, r3
    dp3_pp r4.w, -r4, v2
    add_pp r4.w, r4.w, r4.w
    mad_pp r3.xyz, v2, -r4.w, -r4
    mov_pp r3.w, c5.y
    texkill r1
    texkill r2
    texldb_pp r1, r3, s1
    texld_pp r2, v4, s0
    texldp_pp r3, v5, s2
    pow_pp r4.w, r1.w, c1.y
    mul_pp r1.w, r4.w, c1.x
    mul_pp r1.xyz, r1, r1.w
    nrm_pp r5.xyz, v2
    dp3_sat_pp r1.w, r5, r4
    add_pp r1.w, -r1.w, c5.z
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.w, r1.w, r1.w
    mov r3.z, c5.z
    add_sat_pp r3.y, r3.z, -c2.w
    lrp_pp r4.xyz, r1.w, r3.y, c2
    mul_pp r1.xyz, r1, r4
    pow_pp r1.w, r2.w, c3.y
    mul_pp r1.w, r1.w, c3.x
    mul_pp r3.yzw, r2.wzyx, r1.w
    mul_pp r2.xyz, r2, r3.x
    mul_pp r4.xyz, r3.x, r3.wzyx
    min_pp r5.xyz, r2, r3.wzyx
    max_pp r2.xyz, r5, r4
    mul_pp r0.xyz, r0, c2.w
    mul_pp r3.w, r0.w, v0.w
    mad_pp r3.xyz, r2, r0, r1
    mov_pp oC0, r3

// approximately 46 instruction slots used (4 texture, 42 arithmetic)
