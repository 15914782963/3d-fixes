// CRC32: 397A109B | Unity headers extracted from StandardVertexColor_CheapGloss.shader
// Shader "Dreamfall/Unity5/Standard VertexColor_CheapGloss" {
//   Properties {
//    _Color ("Color", Color) = (1,1,1,1)
//    _MainTex ("Albedo (RGB)", 2D) = "white" { }
//    _NormalTex ("Normal (RGB)", 2D) = "bump" { }
//    _NormalMul ("Normal Multiplier", Float) = 1
//    _AlphaFactor ("AlphaFactor", Range(0,1)) = 1
//    _glossHigh ("Gloss High", Range(0,1)) = 1
//    _glossLow ("Gloss Low", Range(0,1)) = 0
//    _MetalNess ("Metalness", Range(0,1)) = 0
//    _MetalNessAlphaFactor ("Metalness Alpha Factor", Range(0,1)) = 1
//    _VColorMult ("Vertex Color Strength", Range(0,1)) = 0
//    _LightProbeMulti ("Lightprobe Multiply", Float) = 1
//    _LightProbePow ("Lightprobe Power", Float) = 1
//   }
//   Fallback "Legacy Shaders/Diffuse"
//   SubShader 1/1 {
//     LOD 200
//     Tags { "RenderType"="Opaque" }
//     Pass 1/4 {
//       Name "FORWARD"
//       Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//       GpuProgramID 16059
//       Program "fp" {
//         SubProgram "d3d9 " {
//           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "LIGHTMAP_ON" "SHADOWS_OFF" }
//           Float 16 [_AlphaFactor]
//           Vector 21 [_Color]
//           Float 14 [_MetalNess]
//           Float 19 [_MetalNessAlphaFactor]
//           Float 15 [_NormalMul]
//           Float 20 [_VColorMult]
//           Vector 0 [_WorldSpaceCameraPos]
//           Float 17 [_glossHigh]
//           Float 18 [_glossLow]
//           Vector 11 [unity_ColorSpaceDielectricSpec]
//           Vector 13 [unity_DynamicLightmap_HDR]
//           Vector 1 [unity_FogColor]
//           Vector 2 [unity_FogParams]
//           Vector 12 [unity_Lightmap_HDR]
//           Vector 3 [unity_SpecCube0_BoxMax]
//           Vector 4 [unity_SpecCube0_BoxMin]
//           Vector 6 [unity_SpecCube0_HDR]
//           Vector 5 [unity_SpecCube0_ProbePosition]
//           Vector 7 [unity_SpecCube1_BoxMax]
//           Vector 8 [unity_SpecCube1_BoxMin]
//           Vector 10 [unity_SpecCube1_HDR]
//           Vector 9 [unity_SpecCube1_ProbePosition]
//           SetTexture 0 [unity_Lightmap] 2D 0
//           SetTexture 1 [unity_LightmapInd] 2D 1
//           SetTexture 2 [unity_DynamicLightmap] 2D 2
//           SetTexture 3 [unity_DynamicDirectionality] 2D 3
//           SetTexture 4 [unity_SpecCube0] CUBE 4
//           SetTexture 5 [unity_SpecCube1] CUBE 5
//           SetTexture 6 [_MainTex] 2D 6
//           SetTexture 7 [_NormalTex] 2D 7
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    def c22, 1, 2, -1, 0
    def c23, 0.333333343, -0.5, 0.5, 0.75
    def c24, 7, 0.999989986, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_color v4.xyz
    dcl_texcoord4_pp v5
    dcl_texcoord6 v6.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_cube s4
    dcl_cube s5
    dcl_2d s6
    dcl_2d s7

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

texldl r31, c220.z, s13

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --fix-unity-reflection --only-autofixed --ignore-register-errors Dreamfall_Unity5_Standard VertexColor_CheapGloss/fp/397A109B.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mov r0.x, v1.w
    mov r0.y, v2.w
    mov r0.z, v3.w
    add r1.xyz, -r0, r30
    nrm_pp r2.xyz, r1
    mov r1.xw, c22
    add r0.w, r1.x, -c20.x
    add r1.xyz, c22.x, -v4
    mad_pp r1.xyz, r0.w, r1, v4
    texld_pp r3, v0, s6
    mul_pp r4.xyz, r3, c21
    mul_pp r5.xyz, r1, r4
    texld_pp r6, v0.zwzw, s7
    mad_pp r6.xy, r6.wyzw, c22.y, c22.z
    mul_pp r6.xy, r6, c15.x
    dp2add_sat_pp r0.w, r6, r6, c22.w
    add_pp r0.w, -r0.w, c22.x
    rsq_pp r0.w, r0.w
    rcp_pp r6.z, r0.w
    add_pp r3.xy, r3.wyzw, r3.wxzw
    max_pp r0.w, r3.x, c19.x
    min_pp r2.w, r0.w, c22.x
    mul_pp r0.w, r2.w, c14.x
    add_pp r2.w, r3.z, r3.y
    mul_pp r3.x, r2.w, c23.x
    mov r7.xz, c23
    mad_pp r2.w, r2.w, -r7.x, c17.x
    mad_pp r2.w, c18.x, r2.w, r3.x
    max_pp r4.w, r3.w, c16.x
    dp3_pp r3.x, v1, r6
    dp3_pp r3.y, v2, r6
    dp3_pp r3.z, v3, r6
    mad_pp r3.w, r2.w, -r4.w, c22.x
    dp3_pp r5.w, -r2, r3
    add_pp r5.w, r5.w, r5.w
    mad_pp r6.xyz, r3, -r5.w, -r2
    texld_pp r8, v5, s0
    pow_pp r5.w, r8.w, c12.y
    mul_pp r5.w, r5.w, c12.x
    mul_pp r7.xyw, r8.xyzz, r5.w
    texld_pp r8, v5, s1
    add_pp r8.xyz, r8, c23.y
    dp3_pp r5.w, r3, r8
    add_pp r5.w, r5.w, c23.z
    mul_pp r7.xyw, r5.w, r7
    rcp r5.w, r8.w
    texld_pp r8, v5.zwzw, s2
    mul_pp r6.w, r8.w, c13.x
    mul_pp r8.xyz, r8, r6.w
    log_pp r9.x, r8.x
    log_pp r9.y, r8.y
    log_pp r9.z, r8.z
    mul_pp r8.xyz, r9, c13.y
    exp_pp r9.x, r8.x
    exp_pp r9.y, r8.y
    exp_pp r9.z, r8.z
    texld_pp r8, v5.zwzw, s3
    add_pp r8.xyz, r8, c23.y
    dp3_pp r6.w, r3, r8
    add_pp r6.w, r6.w, c23.z
    mul_pp r8.xyz, r6.w, r9
    rcp r6.w, r8.w
    mul_pp r8.xyz, r6.w, r8
    mad_pp r7.xyw, r7, r5.w, r8.xyzz
    if_lt -c5.w, r1.w
    nrm_pp r8.xyz, r6
    add r9.xyz, -r0, c3
    rcp r10.x, r8.x
    rcp r10.y, r8.y
    rcp r10.z, r8.z
    mul_pp r9.xyz, r9, r10
    add r11.xyz, -r0, c4
    mul_pp r10.xyz, r10, r11
    cmp_pp r9.xyz, -r8, r10, r9
    min_pp r5.w, r9.y, r9.x
    min_pp r6.w, r9.z, r5.w
    mov r9.xyz, c4
    add r9.xyz, r9, c3
    mad r10.xyz, r9, r7.z, -c5
    add r10.xyz, r0, r10
    mad r8.xyz, r8, r6.w, r10
    mad_pp r8.xyz, r9, -c23.z, r8
    else
    mov_pp r8.xyz, r6
    endif
    pow_pp r5.w, r3.w, c23.w
    mul_pp r8.w, r5.w, c24.x
    texldl_pp r9, r8, s4
    pow_pp r3.w, r9.w, c6.y
    mul_pp r3.w, r3.w, c6.x
    mul_pp r10.xyz, r9, r3.w
    mov r5.w, c4.w
    if_lt r5.w, c24.y
    if_lt -c9.w, r1.w
    nrm_pp r11.xyz, r6
    add r12.xyz, -r0, c7
    rcp r13.x, r11.x
    rcp r13.y, r11.y
    rcp r13.z, r11.z
    mul_pp r12.xyz, r12, r13
    add r14.xyz, -r0, c8
    mul_pp r13.xyz, r13, r14
    cmp_pp r12.xyz, -r11, r13, r12
    min_pp r1.w, r12.y, r12.x
    min_pp r5.w, r12.z, r1.w
    mov r12.xyz, c7
    add r12.xyz, r12, c8
    mad r13.xyz, r12, r7.z, -c9
    add r0.xyz, r0, r13
    mad r0.xyz, r11, r5.w, r0
    mad_pp r8.xyz, r12, -c23.z, r0
    else
    mov_pp r8.xyz, r6
    endif
    texldl_pp r6, r8, s5
    pow_pp r0.x, r6.w, c10.y
    mul_pp r0.x, r0.x, c10.x
    mul_pp r0.xyz, r6, r0.x
    mad r6.xyz, r3.w, r9, -r0
    mad_pp r10.xyz, c4.w, r6, r0
    endif
    nrm_pp r0.xyz, r3
    mad_pp r1.xyz, r4, r1, -c11
    mad_pp r1.xyz, r0.w, r1, c11
    mad_pp r0.w, r0.w, -c11.w, c11.w
    mul_pp r3.xyz, r0.w, r5
    dp3_pp r0.x, r0, r2
    add_pp r0.yz, -r0.xwxw, c22.x
    mad_sat_pp r0.y, r2.w, r4.w, r0.y
    cmp_pp r0.x, r0.x, r0.z, c22.x
    mul_pp r0.z, r0.x, r0.x
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    lrp_pp r2.xyz, r0.x, r0.y, r1
    mul_pp r0.xyz, r2, r10
    mad_pp r0.xyz, r3, r7.xyww, r0
    mad_sat r0.w, v6.x, c2.z, c2.w
    add r0.xyz, r0, -c1
    mad_pp oC0.xyz, r0.w, r0, c1
    mov_pp oC0.w, c22.x
