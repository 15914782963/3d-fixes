// CRC32: B81CB632 | Unity headers extracted from Standard_VertexBlend_2Tex.shader
// Shader "Dreamfall/Unity5/Standard_VertexBlend_2Tex" {
//   Properties {
//    _Col ("Tint Color 1", Color) = (1,1,1,1)
//    _Col2 ("Tint Color 2", Color) = (1,1,1,1)
//    _MainTex ("Base", 2D) = "black" { }
//    _2ndTex ("2nd - vertex Red", 2D) = "black" { }
//    _Bump1 ("_Bump Base", 2D) = "bump" { }
//    _Bump2 ("_Bump 2nd", 2D) = "bump" { }
//    _NoiseTex ("VertexColor Noise (RGB)", 2D) = "black" { }
//    _MainAlphaFactor ("Alpha Factor Main", Range(0,1)) = 1
//    _2ndMainAlphaFactor ("Alpha Factor Seccond", Range(0,1)) = 1
//    _MainGloss ("Gloss Main", Range(0,1)) = 0.8
//    _2ndGloss ("Gloss Seccond", Range(0,1)) = 0.2
//    _MainMetallness ("Metallness Main", Range(0,1)) = 0
//    _2ndMetallness ("Metallness Seccond", Range(0,1)) = 0
//   }
//   Fallback "Legacy Shaders/Diffuse"
//   SubShader 1/1 {
//     LOD 100
//     Tags { "RenderType"="Opaque" }
//     Pass 1/4 {
//       Name "FORWARD"
//       Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//       GpuProgramID 50137
//       Program "fp" {
//         SubProgram "d3d9 " {
//           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "LIGHTMAP_OFF" "SHADOWS_OFF" }
//           Float 19 [_2ndAlphaFactor]
//           Float 21 [_2ndGloss]
//           Float 23 [_2ndMetallness]
//           Vector 24 [_Col]
//           Vector 25 [_Col2]
//           Vector 16 [_LightColor0]
//           Float 18 [_MainAlphaFactor]
//           Float 20 [_MainGloss]
//           Float 22 [_MainMetallness]
//           Vector 0 [_WorldSpaceCameraPos]
//           Vector 1 [_WorldSpaceLightPos0]
//           Vector 15 [unity_ColorSpaceDielectricSpec]
//           Vector 5 [unity_FogColor]
//           Vector 6 [unity_FogParams]
//           Vector 17 [unity_LightGammaCorrectionConsts]
//           Vector 4 [unity_SHAb]
//           Vector 3 [unity_SHAg]
//           Vector 2 [unity_SHAr]
//           Vector 7 [unity_SpecCube0_BoxMax]
//           Vector 8 [unity_SpecCube0_BoxMin]
//           Vector 10 [unity_SpecCube0_HDR]
//           Vector 9 [unity_SpecCube0_ProbePosition]
//           Vector 11 [unity_SpecCube1_BoxMax]
//           Vector 12 [unity_SpecCube1_BoxMin]
//           Vector 14 [unity_SpecCube1_HDR]
//           Vector 13 [unity_SpecCube1_ProbePosition]
//           SetTexture 0 [unity_SpecCube0] CUBE 0
//           SetTexture 1 [unity_SpecCube1] CUBE 1
//           SetTexture 2 [_MainTex] 2D 2
//           SetTexture 3 [_2ndTex] 2D 3
//           SetTexture 4 [_Bump1] 2D 4
//           SetTexture 5 [_Bump2] 2D 5
//           SetTexture 6 [_NoiseTex] 2D 6
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    def c26, 2, -1, 0, 1
    def c27, 0.5, 0.75, 7, 0.999989986
    def c28, 0.00100000005, 31.622776, 9.99999975e-005, 10
    def c29, 0.967999995, 0.0299999993, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_color v4.x
    dcl_texcoord4_pp v5.xyz
    dcl_texcoord6 v6.x
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

texldl r31, c220.z, s13

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --fix-unity-reflection --only-autofixed --ignore-register-errors Dreamfall_Unity5_Standard_VertexBlend_2Tex/fp/B81CB632.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mov r0.x, v1.w
    mov r0.y, v2.w
    mov r0.z, v3.w
    add r1.xyz, -r0, r30
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul_pp r2.xyz, r0.w, r1
    texld r3, v0.zwzw, s6
    mad_pp r1.w, v4.x, c26.x, c26.y
    add_sat_pp r1.w, r3.x, r1.w
    texld r3, v0, s2
    mul_pp r3, r3, c24
    texld r4, v0, s3
    mad_pp r4, r4, c25, -r3
    mad_pp r3, r1.w, r4, r3
    texld_pp r4, v0, s4
    texld_pp r5, v0, s5
    lrp_pp r6.xy, r1.w, r5.wyzw, r4.wyzw
    mad_pp r4.xy, r6, c26.x, c26.y
    dp2add_sat_pp r2.w, r4, r4, c26.z
    add_pp r2.w, -r2.w, c26.w
    rsq_pp r2.w, r2.w
    rcp_pp r4.z, r2.w
    max_pp r2.w, r3.w, c18.x
    mul_pp r2.w, r2.w, c20.x
    max_pp r4.w, r3.w, c19.x
    mad_pp r3.w, c21.x, r4.w, -r2.w
    mad_pp r2.w, r1.w, r3.w, r2.w
    mov r5.x, c22.x
    add_pp r3.w, -r5.x, c23.x
    mad_pp r1.w, r1.w, r3.w, c22.x
    dp3_pp r5.x, v1, r4
    dp3_pp r5.y, v2, r4
    dp3_pp r5.z, v3, r4
    dp3_pp r3.w, r5, c1
    max_pp r4.x, r3.w, c26.z
    add_pp r3.w, -r2.w, c26.w
    dp3_pp r4.y, -r2, r5
    add_pp r4.y, r4.y, r4.y
    mad_pp r4.yzw, r5.xxyz, -r4.y, -r2.xxyz
    mov r5.w, c26.w
    dp4_pp r6.x, c2, r5
    dp4_pp r6.y, c3, r5
    dp4_pp r6.z, c4, r5
    add_pp r6.xyz, r6, v5
    mov r7.zw, c26
    if_lt -c9.w, r7.z
    nrm_pp r8.xyz, r4.yzww
    add r9.xyz, -r0, c7
    rcp r10.x, r8.x
    rcp r10.y, r8.y
    rcp r10.z, r8.z
    mul_pp r9.xyz, r9, r10
    add r11.xyz, -r0, c8
    mul_pp r10.xyz, r10, r11
    cmp_pp r9.xyz, -r8, r10, r9
    min_pp r5.w, r9.y, r9.x
    min_pp r6.w, r9.z, r5.w
    mov r9.xyz, c8
    add r9.xyz, r9, c7
    mov r7.x, c27.x
    mad r10.xyz, r9, r7.x, -c9
    add r10.xyz, r0, r10
    mad r8.xyz, r8, r6.w, r10
    mad_pp r8.xyz, r9, -c27.x, r8
    else
    mov_pp r8.xyz, r4.yzww
    endif
    pow_pp r5.w, r3.w, c27.y
    mul_pp r8.w, r5.w, c27.z
    texldl_pp r9, r8, s0
    pow_pp r5.w, r9.w, c10.y
    mul_pp r5.w, r5.w, c10.x
    mul_pp r10.xyz, r9, r5.w
    mov r11.xw, c27
    if_lt c8.w, r11.w
    if_lt -c13.w, r7.z
    nrm_pp r7.xyz, r4.yzww
    add r11.yzw, -r0.xxyz, c11.xxyz
    rcp r12.x, r7.x
    rcp r12.y, r7.y
    rcp r12.z, r7.z
    mul_pp r11.yzw, r11, r12.xxyz
    add r13.xyz, -r0, c12
    mul_pp r12.xyz, r12, r13
    cmp_pp r11.yzw, -r7.xxyz, r12.xxyz, r11
    min_pp r6.w, r11.z, r11.y
    min_pp r9.w, r11.w, r6.w
    mov r12.xyz, c11
    add r11.yzw, r12.xxyz, c12.xxyz
    mad r12.xyz, r11.yzww, r11.x, -c13
    add r0.xyz, r0, r12
    mad r0.xyz, r7, r9.w, r0
    mad_pp r8.xyz, r11.yzww, -c27.x, r0
    else
    mov_pp r8.xyz, r4.yzww
    endif
    texldl_pp r8, r8, s1
    pow_pp r0.x, r8.w, c14.y
    mul_pp r0.x, r0.x, c14.x
    mul_pp r0.xyz, r8, r0.x
    mad r4.yzw, r5.w, r9.xxyz, -r0.xxyz
    mad_pp r10.xyz, c8.w, r4.yzww, r0
    endif
    nrm_pp r0.xyz, r5
    lrp_pp r4.yzw, r1.w, r3.xxyz, c15.xxyz
    mad_pp r1.w, r1.w, -c15.w, c15.w
    mul_pp r3.xyz, r1.w, r3
    mad_pp r1.xyz, r1, r0.w, c1
    dp3_pp r0.w, r1, r1
    add r5.x, -r0.w, c28.x
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r5.x, c28.y, r0.w
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r0, r1
    max_pp r5.x, r0.w, c26.z
    dp3_pp r0.x, r0, r2
    max_pp r2.x, r0.x, c26.z
    dp3_pp r0.x, c1, r1
    max_pp r1.x, r0.x, c26.z
    mul_pp r0.x, r3.w, r3.w
    mul_pp r0.y, r0.x, c17.w
    mad_pp r0.x, r0.x, -c17.w, r7.w
    mad_pp r0.z, r4.x, r0.x, r0.y
    mad_pp r0.x, r2.x, r0.x, r0.y
    mad r0.x, r0.z, r0.x, c28.z
    rcp_pp r0.x, r0.x
    add_pp r0.y, -r3.w, c26.w
    mad_pp r0.y, r0.y, c29.x, c29.y
    log_pp r0.y, r0.y
    rcp r0.y, r0.y
    mul_pp r0.y, r0.y, c28.w
    mul_pp r0.z, r0.y, r0.y
    mad_pp r0.y, r0.y, r0.y, c26.w
    mul_pp r0.y, r0.y, c17.y
    pow_pp r1.y, r5.x, r0.z
    mul_pp r0.y, r0.y, r1.y
    add_pp r0.z, -r4.x, c26.w
    mul_pp r0.xw, r0.yyzz, r0.xyzz
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    add_pp r0.w, -r2.x, c26.w
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    mul_pp r1.y, r1.x, r1.x
    dp2add_pp r1.y, r1.y, r3.w, -c27.x
    mad_pp r0.z, r1.y, r0.z, c26.w
    mad_pp r1.y, r1.y, r0.w, c26.w
    mul_pp r0.z, r0.z, r1.y
    mul_pp r0.xy, r4.x, r0.xzzw
    mul_pp r0.x, r0.x, c17.x
    add_pp r0.z, -r1.w, c26.w
    add_sat_pp r0.z, r0.z, r2.w
    mad_pp r1.yzw, c16.xxyz, r0.y, r6.xxyz
    mul_pp r2.xyz, r0.x, c16
    cmp_pp r2.xyz, r0.x, r2, c26.z
    add_pp r0.x, -r1.x, c26.w
    mul_pp r0.y, r0.x, r0.x
    mul_pp r0.y, r0.y, r0.y
    mul_pp r0.x, r0.x, r0.y
    lrp_pp r5.xyz, r0.x, c26.w, r4.yzww
    mul_pp r2.xyz, r2, r5
    mad_pp r1.xyz, r3, r1.yzww, r2
    lrp_pp r2.xyz, r0.w, r0.z, r4.yzww
    mad_pp r0.xyz, r10, r2, r1
    mul r0.w, c6.y, v6.x
    exp_sat r0.w, -r0.w
    add r0.xyz, r0, -c5
    mad_pp oC0.xyz, r0.w, r0, c5
    mov_pp oC0.w, c26.w
