// CRC32: D898B11D |    Unity headers extracted from Standard_Ilum_Masked.shader
//    Shader "Dreamfall/Unity5/Standard_Ilum_Masked" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _GlowColor ("Glow Color", Color) = (1,1,1,1)
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _AlphaFactor ("Alpha Factor", Range(0,1)) = 1
//       _GlossHigh ("Glossy High", Range(0,1)) = 0.8
//       _GlossLow ("Glossy Low", Range(0,1)) = 0.2
//       _Metallness ("Metallness", Range(0,1)) = 0
//       _MetalNesAlphaFactor ("Metalness Alpha Factor", Range(0,1)) = 1
//       _IlumMask ("Ilum Mask", 2D) = "white" { }
//       _IlumMaskMin ("Min Clamp", Float) = 0
//       _IlumMaskMax ("Max Clamp", Float) = 1
//       _Illum ("IllumMap (RGB)", 2D) = "black" { }
//       _RotationSpeed ("Ilum Map rotation Speed", Float) = 1
//       _EmissionLM ("Emission (Lightmapper)", Range(0,2)) = 0.5
//      }
//      Fallback "Self-Illumin/VertexLit"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 51264
//          Program "fp" {
//            SubProgram "d3d9 " {
//              GpuProgramIndex 64
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_Ilum_Masked.shader.decompressed:
//   API d3d9
//   Shader model ps_3_0
//   undeciphered1: 268 8 5
//   Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" }
//   undeciphered3: 0 0 1
//   Float 22 [_AlphaFactor]
//   Vector 20 [_Color]
//   Float 19 [_EmissionLM]
//   Float 23 [_GlossHigh]
//   Float 24 [_GlossLow]
//   Vector 21 [_GlowColor]
//   Float 29 [_IlumMaskMax]
//   Float 28 [_IlumMaskMin]
//   Vector 18 [_LightColor0]
//   Float 25 [_MetalNesAlphaFactor]
//   Float 26 [_Metallness]
//   Float 27 [_RotationSpeed]
//   Vector 0 [_Time]
//   Vector 1 [_WorldSpaceCameraPos]
//   Vector 2 [_WorldSpaceLightPos0]
//   Vector 16 [unity_ColorSpaceDielectricSpec]
//   Vector 17 [unity_ColorSpaceLuminance]
//   Vector 6 [unity_FogColor]
//   Vector 7 [unity_FogParams]
//   Vector 5 [unity_SHAb]
//   Vector 4 [unity_SHAg]
//   Vector 3 [unity_SHAr]
//   Vector 8 [unity_SpecCube0_BoxMax]
//   Vector 9 [unity_SpecCube0_BoxMin]
//   Vector 11 [unity_SpecCube0_HDR]
//   Vector 10 [unity_SpecCube0_ProbePosition]
//   Vector 12 [unity_SpecCube1_BoxMax]
//   Vector 13 [unity_SpecCube1_BoxMin]
//   Vector 15 [unity_SpecCube1_HDR]
//   Vector 14 [unity_SpecCube1_ProbePosition]
//   SetTexture 0 [unity_SpecCube0] CUBE 0
//   SetTexture 1 [unity_SpecCube1] CUBE 1
//   SetTexture 2 [_MainTex] 2D 2
//   SetTexture 3 [_BumpMap] 2D 3
//   SetTexture 4 [_IlumMask] 2D 4
//   SetTexture 5 [_Illum] 2D 5
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//   using 3Dmigoto command line v1.2.36 on Sun Jun 19 22:14:01 2016
//
//
// Parameters:
//
//   float _AlphaFactor;
//   sampler2D _BumpMap;
//   float4 _Color;
//   float _EmissionLM;
//   float _GlossHigh;
//   float _GlossLow;
//   float4 _GlowColor;
//   sampler2D _Illum;
//   sampler2D _IlumMask;
//   float _IlumMaskMax;
//   float _IlumMaskMin;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _MetalNesAlphaFactor;
//   float _Metallness;
//   float _RotationSpeed;
//   float4 _Time;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_FogColor;
//   float4 unity_FogParams;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _Time                          c0       1
//   _WorldSpaceCameraPos           c1       1
//   _WorldSpaceLightPos0           c2       1
//   unity_SHAr                     c3       1
//   unity_SHAg                     c4       1
//   unity_SHAb                     c5       1
//   unity_FogColor                 c6       1
//   unity_FogParams                c7       1
//   unity_SpecCube0_BoxMax         c8       1
//   unity_SpecCube0_BoxMin         c9       1
//   unity_SpecCube0_ProbePosition  c10      1
//   unity_SpecCube0_HDR            c11      1
//   unity_SpecCube1_BoxMax         c12      1
//   unity_SpecCube1_BoxMin         c13      1
//   unity_SpecCube1_ProbePosition  c14      1
//   unity_SpecCube1_HDR            c15      1
//   unity_ColorSpaceDielectricSpec c16      1
//   unity_ColorSpaceLuminance      c17      1
//   _LightColor0                   c18      1
//   _EmissionLM                    c19      1
//   _Color                         c20      1
//   _GlowColor                     c21      1
//   _AlphaFactor                   c22      1
//   _GlossHigh                     c23      1
//   _GlossLow                      c24      1
//   _MetalNesAlphaFactor           c25      1
//   _Metallness                    c26      1
//   _RotationSpeed                 c27      1
//   _IlumMaskMin                   c28      1
//   _IlumMaskMax                   c29      1
//   unity_SpecCube0                s0       1
//   unity_SpecCube1                s1       1
//   _MainTex                       s2       1
//   _BumpMap                       s3       1
//   _IlumMask                      s4       1
//   _Illum                         s5       1
//

    ps_3_0
    def c30, -2, 3, 2, -1
    def c31, 0, 0.333333343, 14.4269505, 0.5
    def c32, 0.416666657, 1.05499995, -0.0549999997, 0.75
    def c33, 0.699999988, 1.70000005, 6, 0.999989986
    def c34, 0.00100000005, 31.622776, 0.797884583, 1
    def c35, 9.99999975e-006, 0.967999995, 0.0299999993, 10
    def c36, 0.159154937, 0.785398185, 9.99999975e-005, 0.00999999978
    def c37, 0.280000001, 1, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4_pp v4.xyz
    dcl_texcoord6 v5.x
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

texldl r31, c220.z, s13

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --fix-unity-reflection --only-autofixed --ignore-register-errors Dreamfall_Unity5_Standard_Ilum_Masked/fp/D898B11D.txt
mov r30, c1
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mov r0.x, v1.w
    mov r0.y, v2.w
    mov r0.z, v3.w
    add r1.xyz, -r0, r30
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul_pp r2.xyz, r0.w, r1
    mov r3.x, c27.x
    mad r3.x, r3.x, c0.x, v0.x
    texld_pp r4, v0, s2
    texld r5, v0, s4
    mov r6.x, c28.x
    add r1.w, -r6.x, c29.x
    add r5.xyz, r5, -c28.x
    rcp r1.w, r1.w
    mul_sat r5.xyz, r1.w, r5
    mad r6.xyz, r5, c30.x, c30.y
    mul r5.xyz, r5, r5
    mul_pp r5.xyz, r5, r6
    mov r3.y, v0.y
    texld_pp r3, r3, s5
    mul_pp r6.xyz, r4, c20
    texld_pp r7, v0.zwzw, s3
    mad_pp r7.xy, r7.wyzw, c30.z, c30.w
    dp2add_sat_pp r1.w, r7, r7, c31.x
    add_pp r1.w, -r1.w, -c30.w
    rsq_pp r1.w, r1.w
    rcp_pp r7.z, r1.w
    add_pp r8.xy, r4.ywzw, r4.xwzw
    mad_pp r1.w, r4.z, c31.y, r8.x
    add_pp r2.w, -r1.w, c23.x
    mad_pp r1.w, c24.x, r2.w, r1.w
    max_pp r2.w, r4.w, c22.x
    max_pp r3.w, r8.y, c25.x
    min_pp r4.w, r3.w, -c30.w
    mul_pp r3.w, r4.w, c26.x
    mul_pp r3.xyz, r3, r4
    mul_pp r3.xyz, r3, c21
    mul r3.xyz, r5, r3
    mov r5.xzw, c31
    mul r4.w, r5.z, c19.x
    exp r4.w, r4.w
    dp3_pp r8.x, v1, r7
    dp3_pp r8.y, v2, r7
    dp3_pp r8.z, v3, r7
    dp3_pp r5.y, r8, c2
    max_pp r6.w, r5.y, c31.x
    mad_pp r5.y, r1.w, -r2.w, -c30.w
    dp3_pp r5.z, -r2, r8
    add_pp r5.z, r5.z, r5.z
    mad_pp r7.xyz, r8, -r5.z, -r2
    mul_pp r9.xyz, r5.w, c3
    dp3_pp r5.z, r9, r9
    rsq_pp r5.z, r5.z
    rcp_pp r7.w, r5.z
    mul_pp r9.xyz, r5.z, r9
    dp3_pp r5.z, r8, r9
    mad_pp r5.z, r5.z, c31.w, c31.w
    rcp r8.w, c3.w
    mul_pp r9.x, r7.w, r8.w
    mad_pp r9.y, r7.w, -r8.w, -c30.w
    mad_pp r8.w, r7.w, r8.w, -c30.w
    rcp r8.w, r8.w
    mul_pp r8.w, r8.w, r9.y
    mad_pp r9.xy, r9.x, -c30.x, -c30.wxzw
    pow_pp r10.x, r5.z, r9.x
    mul_pp r5.z, r9.y, r10.x
    mad_pp r9.x, r9.y, -r10.x, -c30.w
    mad_pp r5.z, r8.w, r9.x, r5.z
    mul_pp r5.z, r5.z, c3.w
    cmp_pp r9.x, -r7.w, c3.w, r5.z
    mul_pp r10.xyz, r5.w, c4
    dp3_pp r5.z, r10, r10
    rsq_pp r5.z, r5.z
    rcp_pp r7.w, r5.z
    mul_pp r10.xyz, r5.z, r10
    dp3_pp r5.z, r8, r10
    mad_pp r5.z, r5.z, c31.w, c31.w
    rcp r8.w, c4.w
    mul_pp r9.w, r7.w, r8.w
    mad_pp r10.x, r7.w, -r8.w, -c30.w
    mad_pp r8.w, r7.w, r8.w, -c30.w
    rcp r8.w, r8.w
    mul_pp r8.w, r8.w, r10.x
    mad_pp r10.xy, r9.w, -c30.x, -c30.wxzw
    pow_pp r9.w, r5.z, r10.x
    mul_pp r5.z, r9.w, r10.y
    mad_pp r9.w, r10.y, -r9.w, -c30.w
    mad_pp r5.z, r8.w, r9.w, r5.z
    mul_pp r5.z, r5.z, c4.w
    cmp_pp r9.y, -r7.w, c4.w, r5.z
    mul_pp r10.xyz, r5.w, c5
    dp3_pp r5.z, r10, r10
    rsq_pp r5.z, r5.z
    rcp_pp r5.w, r5.z
    mul_pp r10.xyz, r5.z, r10
    dp3_pp r5.z, r8, r10
    mad_pp r5.z, r5.z, c31.w, c31.w
    rcp r7.w, c5.w
    mul_pp r8.w, r5.w, r7.w
    mad_pp r9.w, r5.w, -r7.w, -c30.w
    mad_pp r7.w, r5.w, r7.w, -c30.w
    rcp r7.w, r7.w
    mul_pp r7.w, r7.w, r9.w
    mad_pp r10.xy, r8.w, -c30.x, -c30.wxzw
    pow_pp r8.w, r5.z, r10.x
    mul_pp r5.z, r8.w, r10.y
    mad_pp r8.w, r10.y, -r8.w, -c30.w
    mad_pp r5.z, r7.w, r8.w, r5.z
    mul_pp r5.z, r5.z, c5.w
    cmp_pp r9.z, -r5.w, c5.w, r5.z
    add_pp r9.xyz, r9, v4
    max_pp r10.xyz, r9, c31.x
    abs r5.z, c17.w
    log_pp r9.x, r10.x
    log_pp r9.y, r10.y
    log_pp r9.z, r10.z
    mul_pp r9.xyz, r9, c32.x
    exp_pp r11.x, r9.x
    exp_pp r11.y, r9.y
    exp_pp r11.z, r9.z
    mad_pp r9.xyz, r11, c32.y, c32.z
    max_pp r11.xyz, r9, c31.x
    cmp_pp r9.xyz, -r5.z, r11, r10
    if_lt -c10.w, r5.x
      nrm_pp r10.xyz, r7
      add r11.xyz, -r0, c8
      rcp r12.x, r10.x
      rcp r12.y, r10.y
      rcp r12.z, r10.z
      mul_pp r11.xyz, r11, r12
      add r13.xyz, -r0, c9
      mul_pp r12.xyz, r12, r13
      cmp_pp r11.xyz, -r10, r12, r11
      min_pp r5.w, r11.y, r11.x
      min_pp r7.w, r11.z, r5.w
      add r11.xyz, r0, -c10
      mad_pp r10.xyz, r10, r7.w, r11
    else
      mov_pp r10.xyz, r7
    endif
    pow_pp r7.w, r5.y, c32.w
    mad_pp r5.w, r7.w, -c33.x, c33.y
    mul_pp r5.w, r5.w, r7.w
    mul_pp r10.w, r5.w, c33.z
    texldl_pp r11, r10, s0
    pow_pp r5.w, r11.w, c11.y
    mul_pp r5.w, r5.w, c11.x
    mul_pp r12.xyz, r11, r5.w
    mov r7.w, c9.w
    if_lt r7.w, c33.w
      if_lt -c14.w, r5.x
        nrm_pp r13.xyz, r7
        add r14.xyz, -r0, c12
        rcp r15.x, r13.x
        rcp r15.y, r13.y
        rcp r15.z, r13.z
        mul_pp r14.xyz, r14, r15
        add r16.xyz, -r0, c13
        mul_pp r15.xyz, r15, r16
        cmp_pp r14.xyz, -r13, r15, r14
        min_pp r5.x, r14.y, r14.x
        min_pp r7.w, r14.z, r5.x
        add r0.xyz, r0, -c14
        mad_pp r10.xyz, r13, r7.w, r0
      else
        mov_pp r10.xyz, r7
      endif
      texldl_pp r7, r10, s1
      pow_pp r0.x, r7.w, c15.y
      mul_pp r0.x, r0.x, c15.x
      mul_pp r0.xyz, r7, r0.x
      mad r7.xyz, r5.w, r11, -r0
      mad_pp r12.xyz, c9.w, r7, r0
    endif
    nrm_pp r0.xyz, r8
    mov r7.xyz, c16
    mad_pp r4.xyz, r4, c20, -r7
    mad_pp r4.xyz, r3.w, r4, c16
    mad_pp r3.w, r3.w, -c16.w, c16.w
    mul_pp r6.xyz, r3.w, r6
    mad_pp r1.xyz, r1, r0.w, c2
    dp3_pp r0.w, r1, r1
    add r5.x, -r0.w, c34.x
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r5.x, c34.y, r0.w
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r0, r1
    max_pp r5.x, r0.w, c31.x
    dp3_pp r0.x, r0, r2
    max_pp r2.x, r0.x, c31.x
    dp3_pp r0.x, c2, r1
    max_pp r1.x, r0.x, c31.x
    mul_pp r0.x, r5.y, r5.y
    mul_pp r0.y, r0.x, c34.z
    mad_pp r0.z, r0.x, -c34.z, c34.w
    mad_pp r0.w, r6.w, r0.z, r0.y
    mad_pp r0.y, r2.x, r0.z, r0.y
    mad r0.y, r0.w, r0.y, c35.x
    rcp_pp r0.y, r0.y
    add_pp r0.z, -r5.y, -c30.w
    mad_pp r0.z, r0.z, c35.y, c35.z
    log_pp r0.z, r0.z
    rcp r0.z, r0.z
    mul_pp r0.z, r0.z, c35.w
    mul_pp r0.w, r0.z, r0.z
    mad r0.z, r0.z, r0.z, c30.z
    mul_pp r0.z, r0.z, c36.x
    pow_pp r1.y, r5.x, r0.w
    mul_pp r0.z, r0.z, r1.y
    add_pp r0.w, -r6.w, -c30.w
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    add_pp r1.y, -r2.x, -c30.w
    mul_pp r1.z, r1.y, r1.y
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.y, r1.y, r1.z
    mul_pp r1.z, r1.x, r1.x
    dp2add_pp r1.z, r1.z, r5.y, -c31.w
    mad_pp r0.w, r1.z, r0.w, -c30.w
    mad_pp r1.z, r1.z, r1.y, -c30.w
    mul_pp r0.w, r0.w, r1.z
    mul r0.y, r0.z, r0.y
    mul_pp r0.z, r0.y, c36.y
    mad r0.y, r0.y, -c36.y, c36.z
    rsq r1.z, r0.z
    rcp_pp r1.z, r1.z
    cmp_pp r0.y, r0.y, c36.w, r1.z
    cmp_pp r0.y, -r5.z, r0.y, r0.z
    mul_pp r0.yz, r6.w, r0.xyww
    mul_pp r0.w, r0.x, r5.y
    mad_pp r0.w, r0.w, -c37.x, c37.y
    mad_pp r0.x, r0.x, r0.x, -c30.w
    rcp_pp r0.x, r0.x
    cmp_pp r0.x, -r5.z, r0.w, r0.x
    add_pp r0.w, -r3.w, -c30.w
    mad_sat_pp r0.w, r1.w, r2.w, r0.w
    mad_pp r2.xyz, c18, r0.z, r9
    mul_pp r5.xyz, r0.y, c18
    cmp_pp r5.xyz, r0.y, r5, c31.x
    add_pp r0.y, -r1.x, -c30.w
    mul_pp r0.z, r0.y, r0.y
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.y, r0.y, r0.z
    lrp_pp r1.xzw, r0.y, -c30.w, r4.xyyz
    mul_pp r1.xzw, r1, r5.xyyz
    mad_pp r1.xzw, r6.xyyz, r2.xyyz, r1
    mul_pp r0.xyz, r12, r0.x
    lrp_pp r2.xyz, r1.y, r0.w, r4
    mad_pp r0.xyz, r0, r2, r1.xzww
    mad_pp r0.xyz, r3, r4.w, r0
    mul r0.w, c7.x, v5.x
    mul r0.w, r0.w, -r0.w
    exp r0.w, r0.w
    add r0.xyz, r0, -c6
    mad_pp oC0.xyz, r0.w, r0, c6
    mov_pp oC0.w, -c30.w

// approximately 288 instruction slots used (8 texture, 280 arithmetic)
