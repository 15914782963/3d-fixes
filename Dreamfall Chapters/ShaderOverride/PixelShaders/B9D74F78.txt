// CRC32: B9D74F78 | Matched 2 variants of 1 shaders: Hidden/Final Interpolation
// 
//    Unity headers extracted from FinalInterpolation.shader
//    Shader "Hidden/Final Interpolation" {
//      Properties {
//       _ZTest ("", Float) = 8
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Pass 1/1 {
//          ZTest [_ZTest]
//          ZWrite Off
//          Fog { Mode Off }
//          Blend One SrcAlpha
//          Program "fp" {
//            SubProgram "d3d9 " {
// 1:           Keywords { "DIRECTIONAL_SHAFTS" "FLIP_WORKAROUND_OFF" "LIGHT_ON_SCREEN" "QUAD_SHAFTS" "SHOW_SAMPLES_ON" }
// 2:           Keywords { "DIRECTIONAL_SHAFTS" "FLIP_WORKAROUND_ON" "LIGHT_ON_SCREEN" "QUAD_SHAFTS" "SHOW_SAMPLES_ON" }
//              Matrix 0 [_FrustumRays]
//              Vector 4 [_ZBufferParams]
//              Vector 5 [_LightPos]
//              Vector 6 [_CameraPosLocal]
//              Vector 7 [_CoordTexDim]
//              Float 8 [_DepthThreshold]
//              Float 9 [_ShowSamplesBackgroundFade]
//              SetTexture 0 [_CameraDepthTexture] 2D 0
//              SetTexture 1 [_DepthEpi] 2D 1
//              SetTexture 2 [_RaymarchedLight] 2D 2
//              SetTexture 3 [_SamplePositions] 2D 3
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    def c10, 0.00000000, 1.00000000, 0.50000000, -0.50000000
    def c11, 2.00000000, -1.00000000, 1.00000000, -0.00000100
    def c12, 0.00000100, 4.00000000, 0.00100000, 0
    def c13, 0.25000000, 0.00000000, 0.50000000, 0.75000000
    dcl_texcoord0 v0.xy

def c220, 0, 1, 0.0625, -0.5
dcl_2d s13

mov r30, c200

// _LightPos is the mono screen-space light position, stereoise it:
mov r20, c5
if_eq r30.x, c220.x
texldl r31, c220.z, s13
add r31.w, r20.z, -r31.y // Z or W? Both seem to work.
mul r31.w, r31.w, c220.w // Had to multiply correction by -0.5
mad r20.x, r31.w, r31.x, r20.x
endif

    mad r0.xy, v0, c11.x, c11.y
    add r3.xy, r0, -r20
    mul r0.zw, r3.xyxy, r3.xyxy
    add r0.z, r0, r0.w
    rsq r0.z, r0.z
    mul r3.zw, r0.z, r3.xyxy
    add r1, r0.xxyy, c11.zyzy
    mul r0, r3.wwzz, r1
    abs r1.xy, r3.zwzw
    add r2.xy, r1, c11.w
    add r0, r0.xyyx, -r0.zzww
    cmp r0, r0, c10.x, c10.y
    add r1, -r0, c10.y
    mul r0, r0.wxyz, r1
    cmp r2.xy, r2, c10.x, c10.y
    add r1.xy, r3.zwzw, r2
    abs r0, r0
    mov r2.xy, r20
    cmp r0, -r0, c10.x, c10.y
    add r2, c11.yyzz, -r2.xyxy
    rcp r1.xz, r1.x
    rcp r1.yw, r1.y
    mul r1, r2, r1
    dp4 r1.x, r0, r1
    mul r2.xy, r3.zwzw, r1.x
    mul r1.xy, r2, r2
    add r1.x, r1, r1.y
    rsq r2.z, r1.x
    add r1.xy, r2, r20
    rcp r2.w, r2.z
    mad r1, r1.yxyx, c10.wzzw, c10.z
    mad r1, r1, c13.x, c13.yxzw
    dp4 r0.y, r0, r1
    mov r0.x, c7
    max r2.w, r2, c12.x
    rcp r2.w, r2.w
    mul r0.zw, r2.xyxy, r2.w
    mul r0.zw, r0, r3.xyxy
    add r1.x, c11.y, r0
    add r0.x, r0.z, r0.w
    mad r0.x, r0, r2.z, c7.z
    mul r0.z, r1.x, c7
    mul r0.x, r0, r0.z
    mul r0.xy, r0, c7
    add r0.xy, r0, c10.z
    frc r5.zw, r0.xyxy
    add r0.xy, -r5.zwzw, r0
    add r0.xy, r0, c10.z
    mul r4.xy, r0, c7.zwzw
    mov r0.xy, c7.zwzw
    mad r1.xy, c10, -r0, r4
    add r5.xy, r4, -c7.zwzw
    texld r1.x, r1, s1
    texld r0.x, r5, s1
    abs r1.w, r0.x
    mov r2.xyz, c1
    mov r0.xyz, c2
    add r2.xyz, -c0, r2
    add r0.xyz, -c3, r0
    mad r0.xyz, v0.x, r0, c3
    mad r2.xyz, v0.x, r2, c0
    add r3.xyz, r0, -r2
    mad r2.xyz, v0.y, r3, r2
    texld r0.x, r4, s1
    abs r1.y, r0.x
    dp3 r0.z, r2, r2
    rsq r3.w, r0.z
    mul r2.xyz, r3.w, r2
    mov r0.xy, c7.zwzw
    mad r0.xy, c10.yxzw, -r0, r4
    mov r4.xyz, c6
    mov r3.xyz, c6
    abs r1.z, r1.x
    texld r0.x, r0, s1
    abs r1.x, r0
    texld r0.x, v0, s0
    mad r0.x, r0, c4, c4.y
    rcp r2.x, r2.x
    rcp r2.y, r2.y
    rcp r2.z, r2.z
    add r4.xyz, c10.w, -r4
    add r3.xyz, c10.z, -r3
    mul r4.xyz, r2, r4
    mul r3.xyz, r2, r3
    max r2.xyz, r3, r4
    min r0.zw, r2.x, r2.xyyz
    min r0.y, r0.z, r0.w
    mul r0.y, r3.w, r0
    rcp r0.x, r0.x
    min_pp r4.w, r0.x, r0.y
    add r0, r4.w, -r1
    abs r0, r0
    max r0, r0, c8.x
    rcp r0.x, r0.x
    rcp r0.y, r0.y
    rcp r0.w, r0.w
    rcp r0.z, r0.z
    mul_sat r1, r0, c8.x
    pow r0, r1.x, c12.y
    pow r2, r1.y, c12.y
    mov r1.x, r0
    pow r0, r1.w, c12.y
    mov r1.w, r0
    mov r1.y, r2
    pow r2, r1.z, c12.y
    mov r1.z, r2
    add r0.xyz, -r5.zzww, c10.y
    mov r2.xw, r0.xyzy
    mov r2.yz, r5.z
    mov r0.xy, r5.w
    add r0.w, -r5, c10.y
    mul r0, r2, r0
    mul r0, r0, r1
    dp4 r1.x, r0, c10.y
    rcp r1.x, r1.x
    mul r0, r0, r1.x
    add r1.w, r0.x, r0.y
    add r0.w, r0.z, r0
    max r0.x, r1.w, c12.z
    rcp r0.x, r0.x
    mul r0.x, r0.y, r0
    max r2.x, r0.w, c12.z
    mul r0.x, r0, c7.z
    mov r0.y, c7.w
    add r0.xy, r5, r0
    texld r1.xyz, r0, s2
    rcp r0.x, r2.x
    mul r0.x, r0.z, r0
    min r2.xyz, r3, r4
    mul r1.xyz, r1, r1.w
    max r2.xy, r2.x, r2.yzzw
    mov r0.y, c10.x
    mul r0.x, r0, c7.z
    add r0.xy, r5, r0
    texld r0.xyz, r0, s2
    mad r1.xyz, r0, r0.w, r1
    max r0.w, r2.x, r2.y
    texld r0.xyz, v0, s3
    abs r2.xyz, r0
    mad r0.w, -r0, r3, r4
    cmp r0.w, r0, c10.y, c10.x
    mul r1.xyz, r0.w, r1
    cmp r2.xyz, -r2, c10.x, c10.y
    mad r0.xyz, -r1, c9.x, r0
    add_pp_sat r0.w, r2.x, r2.y
    add_pp_sat r0.w, r0, r2.z
    mul r1.xyz, r1, c9.x
    add r1.w, -r0, c10.y
    mad oC0.xyz, r0.w, r0, r1
    mul oC0.w, r1, c9.x
