// CRC32: 1C4DBECB |    Unity headers extracted from Normal-Parallax.shader
//    Shader "Legacy Shaders/Parallax Diffuse" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _Parallax ("Height", Range(0.005,0.08)) = 0.02
//       _MainTex ("Base (RGB)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _ParallaxMap ("Heightmap (A)", 2D) = "black" { }
//      }
//      Fallback "Legacy Shaders/Bumped Diffuse"
//      SubShader 2/2 {
//        LOD 500
//        Tags { "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 429863
//          Program "fp" {
//            SubProgram "d3d9 " {
//              GpuProgramIndex 225
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Normal-Parallax.shader.decompressed:
//   API d3d9
//   Shader model ps_2_0
//   undeciphered1: 37 4 -1
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//   undeciphered3: 0 0 1
//   Vector 3 [_Color]
//   Float 4 [_Parallax]
//   Vector 0 [_WorldSpaceCameraPos]
//   Vector 1 [unity_FogColor]
//   Vector 2 [unity_Lightmap_HDR]
//   SetTexture 0 [unity_Lightmap] 2D 0
//   SetTexture 1 [_ShadowMapTexture] 2D 1
//   SetTexture 2 [_MainTex] 2D 2
//   SetTexture 3 [_ParallaxMap] 2D 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//   using 3Dmigoto command line v1.2.36 on Sun Jun 19 22:10:06 2016
//
//
// Parameters:
//
//   float4 _Color;
//   sampler2D _MainTex;
//   float _Parallax;
//   sampler2D _ParallaxMap;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogColor;
//   sampler2D unity_Lightmap;
//   float4 unity_Lightmap_HDR;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _WorldSpaceCameraPos c0       1
//   unity_FogColor       c1       1
//   unity_Lightmap_HDR   c2       1
//   _Color               c3       1
//   _Parallax            c4       1
//   unity_Lightmap       s0       1
//   _ShadowMapTexture    s1       1
//   _MainTex             s2       1
//   _ParallaxMap         s3       1
//

    ps_3_0 // Converted from ps_2_0 with DarkStarSword's shadertool.py
    def c5, 0.5, 0.419999987, 1, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4_pp v4.xy
    dcl_texcoord5_pp v5
    dcl_texcoord6 v6.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

texldl r31, c220.z, s13

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --fix-unity-reflection --only-autofixed --ignore-register-errors Legacy Shaders_Parallax Diffuse/fp/1C4DBECB.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mov r0.x, -v1.w
    mov r0.y, -v2.w
    mov r0.z, -v3.w
    add r0.xyz, r0, r30
    nrm_pp r1.xyz, r0
    mul r0.xyz, r1.y, v2
    mad r0.xyz, v1, r1.x, r0
    mad_pp r0.xyz, v3, r1.z, r0
    dp3_pp r0.w, r0, r0
    rsq_pp r0.w, r0.w
    mad r0.z, r0.z, r0.w, c5.y
    mul r0.xy, r0.w, r0
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mov r1.x, v0.z
    mov r1.y, v0.w
    texld_pp r1, r1, s3
    mov r1.x, c5.x
    mul_pp r0.z, r1.x, c4.x
    mad_pp r0.z, r1.w, c4.x, -r0.z
    mad r0.xy, r0.z, r0, v0
    texld r0, r0, s2
    texld_pp r1, v4, s0
    texldp_pp r2, v5, s1
    mul_pp r0.xyz, r0, c3
    pow_pp r0.w, r1.w, c2.y
    mul_pp r0.w, r0.w, c2.x
    mul_pp r2.yzw, r1.wzyx, r0.w
    mul_pp r1.xyz, r1, r2.x
    mul_pp r3.xyz, r2.x, r2.wzyx
    min_pp r4.xyz, r1, r2.wzyx
    max_pp r1.xyz, r4, r3
    mad r0.xyz, r0, r1, -c1
    mov_sat r0.w, v6.x
    mad_pp r0.xyz, r0.w, r0, c1
    mov_pp r0.w, c5.z
    mov_pp oC0, r0

// approximately 41 instruction slots used (4 texture, 37 arithmetic)
