// CRC32: 038B2BD9 |    Unity headers extracted from Reflect-Diffuse_Fresnel.shader
//    Shader "Chickenlord/Reflective/Fresnel/Diffuse" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _ReflectColor ("Reflection Color", Color) = (1,1,1,0.5)
//       _Fresnel ("Reflection Fresnel Exponent", Range(0,6)) = 1
//       _MainTex ("Base (RGB) RefStrength (A)", 2D) = "white" { }
//       _Cube ("Reflection Cubemap", CUBE) = "_Skybox" { }
//      }
//      Fallback "Reflective/VertexLit"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 17421
//          Program "fp" {
//            SubProgram "d3d9 " {
//              GpuProgramIndex 48
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Reflect-Diffuse_Fresnel.shader.decompressed:
//   API d3d9
//   Shader model ps_3_0
//   undeciphered1: 102 2 -1
//   Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//   undeciphered3: 0 0 1
//   Vector 9 [_Color]
//   Float 11 [_Fresnel]
//   Vector 8 [_LightColor0]
//   Vector 10 [_ReflectColor]
//   Vector 0 [_WorldSpaceCameraPos]
//   Vector 1 [_WorldSpaceLightPos0]
//   Vector 7 [unity_ColorSpaceLuminance]
//   Vector 5 [unity_FogColor]
//   Vector 6 [unity_FogParams]
//   Vector 4 [unity_SHAb]
//   Vector 3 [unity_SHAg]
//   Vector 2 [unity_SHAr]
//   SetTexture 0 [_MainTex] 2D 0
//   SetTexture 1 [_Cube] CUBE 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//   using 3Dmigoto command line v1.2.36 on Sun Jun 19 22:06:06 2016
//
//
// Parameters:
//
//   float4 _Color;
//   samplerCUBE _Cube;
//   float _Fresnel;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float4 _ReflectColor;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_FogColor;
//   float4 unity_FogParams;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   _WorldSpaceCameraPos      c0       1
//   _WorldSpaceLightPos0      c1       1
//   unity_SHAr                c2       1
//   unity_SHAg                c3       1
//   unity_SHAb                c4       1
//   unity_FogColor            c5       1
//   unity_FogParams           c6       1
//   unity_ColorSpaceLuminance c7       1
//   _LightColor0              c8       1
//   _Color                    c9       1
//   _ReflectColor             c10      1
//   _Fresnel                  c11      1
//   _MainTex                  s0       1
//   _Cube                     s1       1
//

    ps_3_0
    def c12, 0.416666657, 1.05499995, -0.0549999997, 0
    def c13, 1, 0.5, 2, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xyz
    dcl_texcoord2_pp v2.xyz
    dcl_texcoord3 v3.xyz
    dcl_texcoord4_pp v4.xyz
    dcl_texcoord6 v5.x
    dcl_2d s0
    dcl_cube s1

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

texldl r31, c220.z, s13

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --fix-unity-reflection --only-autofixed --ignore-register-errors Chickenlord_Reflective_Fresnel_Diffuse/fp/038B2BD9.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mov r0.y, c13.y
    mul_pp r0.xzw, r0.y, c2.xyyz
    dp3_pp r1.x, r0.xzww, r0.xzww
    rsq_pp r1.x, r1.x
    rcp_pp r1.y, r1.x
    mul_pp r0.xzw, r0, r1.x
    dp3_pp r0.x, v2, r0.xzww
    mad_pp r0.x, r0.x, c13.y, c13.y
    rcp r0.z, c2.w
    mad_pp r0.w, r1.y, r0.z, c13.x
    rcp r0.w, r0.w
    mad_pp r1.x, r1.y, -r0.z, c13.x
    mul_pp r0.z, r0.z, r1.y
    mad_pp r1.zw, r0.z, c13.z, c13.xyxz
    mul_pp r0.z, r0.w, r1.x
    pow_pp r2.x, r0.x, r1.z
    mul_pp r0.x, r1.w, r2.x
    mad_pp r0.w, r1.w, -r2.x, c13.x
    mad_pp r0.x, r0.z, r0.w, r0.x
    mul_pp r0.x, r0.x, c2.w
    cmp_pp r1.x, -r1.y, c2.w, r0.x
    mul_pp r0.xzw, r0.y, c3.xyyz
    dp3_pp r1.w, r0.xzww, r0.xzww
    rsq_pp r1.w, r1.w
    rcp_pp r2.x, r1.w
    mul_pp r0.xzw, r0, r1.w
    dp3_pp r0.x, v2, r0.xzww
    mad_pp r0.x, r0.x, c13.y, c13.y
    rcp r0.z, c3.w
    mad_pp r0.w, r2.x, r0.z, c13.x
    rcp r0.w, r0.w
    mad_pp r1.w, r2.x, -r0.z, c13.x
    mul_pp r0.z, r0.z, r2.x
    mad_pp r2.yz, r0.z, c13.z, c13.xxzw
    mul_pp r0.z, r0.w, r1.w
    pow_pp r1.w, r0.x, r2.y
    mul_pp r0.x, r1.w, r2.z
    mad_pp r0.w, r2.z, -r1.w, c13.x
    mad_pp r0.x, r0.z, r0.w, r0.x
    mul_pp r0.x, r0.x, c3.w
    cmp_pp r1.y, -r2.x, c3.w, r0.x
    mul_pp r0.xyz, r0.y, c4
    dp3_pp r0.w, r0, r0
    rsq_pp r0.w, r0.w
    rcp_pp r1.w, r0.w
    mul_pp r0.xyz, r0.w, r0
    dp3_pp r0.x, v2, r0
    mad_pp r0.x, r0.x, c13.y, c13.y
    rcp r0.y, c4.w
    mad_pp r0.z, r1.w, r0.y, c13.x
    rcp r0.z, r0.z
    mad_pp r0.w, r1.w, -r0.y, c13.x
    mul_pp r0.y, r0.y, r1.w
    mad_pp r2.xy, r0.y, c13.z, c13.xzzw
    mul_pp r0.y, r0.z, r0.w
    pow_pp r3.x, r0.x, r2.x
    mul_pp r0.x, r2.y, r3.x
    mad_pp r0.z, r2.y, -r3.x, c13.x
    mad_pp r0.x, r0.y, r0.z, r0.x
    mul_pp r0.x, r0.x, c4.w
    cmp_pp r1.z, -r1.w, c4.w, r0.x
    add_pp r0.xyz, r1, v4
    max_pp r1.xyz, r0, c13.w
    log_pp r0.x, r1.x
    log_pp r0.y, r1.y
    log_pp r0.z, r1.z
    mul_pp r0.xyz, r0, c12.x
    exp_pp r2.x, r0.x
    exp_pp r2.y, r0.y
    exp_pp r2.z, r0.z
    mad_pp r0.xyz, r2, c12.y, c12.z
    max_pp r2.xyz, r0, c13.w
    abs r0.x, c7.w
    cmp_pp r0.xyz, -r0.x, r2, r1
    texld_pp r1, v0, s0
    mul_pp r1.xyz, r1, c9
    mul_pp r0.xyz, r0, r1
    mul_pp r1.xyz, r1, c8
    dp3_pp r0.w, v2, c1
    max_pp r2.x, r0.w, c13.w
    mad_pp r0.xyz, r1, r2.x, r0
    texld_pp r2, v1, s1
    mul_pp r1.xyz, r1.w, r2
    add r2.xyz, r30, -v3
    nrm_pp r3.xyz, r2
    dp3 r0.w, r3, v2
    add r0.w, -r0.w, c13.x
    pow r1.w, r0.w, c11.x
    mul_pp r1.xyz, r1.w, r1
    mad_pp r0.xyz, r1, c10, r0
    add r0.xyz, r0, -c5
    mad_sat r0.w, v5.x, c6.z, c6.w
    mad_pp oC0.xyz, r0.w, r0, c5
    mov_pp oC0.w, c13.x

// approximately 104 instruction slots used (2 texture, 102 arithmetic)
