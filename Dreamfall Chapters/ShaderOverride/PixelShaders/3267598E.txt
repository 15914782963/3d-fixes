// CRC32: 3267598E |    Unity headers extracted from Standard_MaskedTint_Ilum.shader
//    Shader "Dreamfall/Unity5/Standard_MaskedTint_Ilum" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _MainTex ("Base (RGB) RefStrGloss (A)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _TintMask ("Tint Mask (RGB)", 2D) = "Black" { }
//       _TintColorR ("Tint Color - R", Color) = (1,1,1,1)
//       _TintColorB ("Tint Color - G", Color) = (1,1,1,1)
//       _TintColorG ("Tint Color - B", Color) = (1,1,1,1)
//       _Color_Mul ("Tint Color Multiply", Float) = 2
//       _Illum ("IllumMap (RGB)", 2D) = "black" { }
//       _GlossLow ("Gloss Low", Range(0,1)) = 0.5
//       _GlossHigh ("Gloss High", Range(0,1)) = 0.8
//       _AlphaFactor ("AlphaFactor", Range(0,1)) = 1
//       _Metalness ("Metalness", Range(0,1)) = 0
//       _MetalNessAlphaFactor ("Metal Alpha Factor", Range(0,1)) = 1
//       _EmissionLM ("Emission (Lightmapper)", Float) = 1
//      }
//      Fallback "Legacy Shaders/Diffuse"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "RenderType"="Opaque" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 3282
//          Program "fp" {
//            SubProgram "d3d9 " {
//              GpuProgramIndex 56
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_MaskedTint_Ilum.shader.decompressed:
//   API d3d9
//   Shader model ps_3_0
//   undeciphered1: 261 8 5
//   Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" }
//   undeciphered3: 0 0 1
//   Float 20 [_AlphaFactor]
//   Vector 24 [_Color]
//   Float 28 [_Color_Mul]
//   Float 23 [_EmissionLM]
//   Float 19 [_GlossHigh]
//   Float 18 [_GlossLow]
//   Vector 17 [_LightColor0]
//   Float 22 [_MetalNessAlphaFactor]
//   Float 21 [_Metalness]
//   Vector 27 [_TintColorB]
//   Vector 26 [_TintColorG]
//   Vector 25 [_TintColorR]
//   Vector 0 [_WorldSpaceCameraPos]
//   Vector 1 [_WorldSpaceLightPos0]
//   Vector 15 [unity_ColorSpaceDielectricSpec]
//   Vector 16 [unity_ColorSpaceLuminance]
//   Vector 5 [unity_FogColor]
//   Vector 6 [unity_FogParams]
//   Vector 4 [unity_SHAb]
//   Vector 3 [unity_SHAg]
//   Vector 2 [unity_SHAr]
//   Vector 7 [unity_SpecCube0_BoxMax]
//   Vector 8 [unity_SpecCube0_BoxMin]
//   Vector 10 [unity_SpecCube0_HDR]
//   Vector 9 [unity_SpecCube0_ProbePosition]
//   Vector 11 [unity_SpecCube1_BoxMax]
//   Vector 12 [unity_SpecCube1_BoxMin]
//   Vector 14 [unity_SpecCube1_HDR]
//   Vector 13 [unity_SpecCube1_ProbePosition]
//   SetTexture 0 [unity_SpecCube0] CUBE 0
//   SetTexture 1 [unity_SpecCube1] CUBE 1
//   SetTexture 2 [_MainTex] 2D 2
//   SetTexture 3 [_BumpMap] 2D 3
//   SetTexture 4 [_TintMask] 2D 4
//   SetTexture 5 [_Illum] 2D 5
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//   using 3Dmigoto command line v1.2.36 on Sun Jun 19 22:00:48 2016
//
//
// Parameters:
//
//   float _AlphaFactor;
//   sampler2D _BumpMap;
//   float4 _Color;
//   float _Color_Mul;
//   float _EmissionLM;
//   float _GlossHigh;
//   float _GlossLow;
//   sampler2D _Illum;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _MetalNessAlphaFactor;
//   float _Metalness;
//   float4 _TintColorB;
//   float4 _TintColorG;
//   float4 _TintColorR;
//   sampler2D _TintMask;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_FogColor;
//   float4 unity_FogParams;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _WorldSpaceCameraPos           c0       1
//   _WorldSpaceLightPos0           c1       1
//   unity_SHAr                     c2       1
//   unity_SHAg                     c3       1
//   unity_SHAb                     c4       1
//   unity_FogColor                 c5       1
//   unity_FogParams                c6       1
//   unity_SpecCube0_BoxMax         c7       1
//   unity_SpecCube0_BoxMin         c8       1
//   unity_SpecCube0_ProbePosition  c9       1
//   unity_SpecCube0_HDR            c10      1
//   unity_SpecCube1_BoxMax         c11      1
//   unity_SpecCube1_BoxMin         c12      1
//   unity_SpecCube1_ProbePosition  c13      1
//   unity_SpecCube1_HDR            c14      1
//   unity_ColorSpaceDielectricSpec c15      1
//   unity_ColorSpaceLuminance      c16      1
//   _LightColor0                   c17      1
//   _GlossLow                      c18      1
//   _GlossHigh                     c19      1
//   _AlphaFactor                   c20      1
//   _Metalness                     c21      1
//   _MetalNessAlphaFactor          c22      1
//   _EmissionLM                    c23      1
//   _Color                         c24      1
//   _TintColorR                    c25      1
//   _TintColorG                    c26      1
//   _TintColorB                    c27      1
//   _Color_Mul                     c28      1
//   unity_SpecCube0                s0       1
//   unity_SpecCube1                s1       1
//   _MainTex                       s2       1
//   _BumpMap                       s3       1
//   _TintMask                      s4       1
//   _Illum                         s5       1
//

    ps_3_0
    def c29, 0.333333343, 0.5, 0.416666657, 0.75
    def c30, 1.05499995, -0.0549999997, 0.699999988, 1.70000005
    def c31, 6, 0.999989986, 0.00100000005, 31.622776
    def c32, 0.797884583, 1, 9.99999975e-006, 10
    def c33, 0.967999995, 0.0299999993, 0.159154937, 0.785398185
    def c34, 0.785398185, 9.99999975e-005, 0.00999999978, 0
    def c35, 0.280000001, 1, 0, 0
    def c36, 2, -1, 0, 1
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4_pp v4.xyz
    dcl_texcoord6 v5.x
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

texldl r31, c220.z, s13

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --fix-unity-reflection --only-autofixed --ignore-register-errors Dreamfall_Unity5_Standard_MaskedTint_Ilum/fp/3267598E.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mov r0.x, v1.w
    mov r0.y, v2.w
    mov r0.z, v3.w
    add r1.xyz, -r0, r30
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul_pp r2.xyz, r0.w, r1
    texld_pp r3, v0, s2
    texld_pp r4, v0, s5
    texld_pp r5, v0, s4
    mul_pp r3, r3, c24
    mul_pp r6, r3, c25
    mad_pp r6, r6, c28.x, -r3
    mad_pp r3, r5.x, r6, r3
    mul_pp r6, r3, c27
    mad_pp r6, r6, c28.x, -r3
    mad_pp r3, r5.z, r6, r3
    mul_pp r6, r3, c26
    mad_pp r6, r6, c28.x, -r3
    mad_pp r3, r5.y, r6, r3
    texld_pp r5, v0.zwzw, s3
    mad_pp r5.xy, r5.wyzw, c36.x, c36.y
    dp2add_sat_pp r1.w, r5, r5, c36.z
    add_pp r1.w, -r1.w, c36.w
    rsq_pp r1.w, r1.w
    rcp_pp r5.z, r1.w
    add_pp r6.xy, r3.ywzw, r3.xwzw
    mad_pp r1.w, r3.z, c29.x, r6.x
    add_pp r2.w, -r1.w, c19.x
    mad_pp r1.w, c18.x, r2.w, r1.w
    max_pp r2.w, r3.w, c20.x
    max_pp r3.w, r6.y, c22.x
    min_pp r4.w, r3.w, c36.w
    mul_pp r3.w, r4.w, c21.x
    mul_pp r4.xyz, r4, r3
    dp3_pp r6.x, v1, r5
    dp3_pp r6.y, v2, r5
    dp3_pp r6.z, v3, r5
    dp3_pp r4.w, r6, c1
    max_pp r5.x, r4.w, c36.z
    mad_pp r4.w, r1.w, -r2.w, c36.w
    dp3_pp r5.y, -r2, r6
    add_pp r5.y, r5.y, r5.y
    mad_pp r5.yzw, r6.xxyz, -r5.y, -r2.xxyz
    mov r7.y, c29.y
    mul_pp r7.xzw, r7.y, c2.xyyz
    dp3_pp r6.w, r7.xzww, r7.xzww
    rsq_pp r6.w, r6.w
    rcp_pp r8.x, r6.w
    mul_pp r7.xzw, r6.w, r7
    dp3_pp r6.w, r6, r7.xzww
    mad_pp r6.w, r6.w, c29.y, c29.y
    rcp r7.x, c2.w
    mul_pp r7.z, r7.x, r8.x
    mad_pp r7.w, r8.x, -r7.x, c36.w
    mad_pp r7.x, r8.x, r7.x, c36.w
    rcp r7.x, r7.x
    mul_pp r7.x, r7.x, r7.w
    mad_pp r7.zw, r7.z, c36.x, c36.xywx
    pow_pp r8.y, r6.w, r7.z
    mul_pp r6.w, r7.w, r8.y
    mad_pp r7.z, r7.w, -r8.y, c36.w
    mad_pp r6.w, r7.x, r7.z, r6.w
    mul_pp r6.w, r6.w, c2.w
    cmp_pp r8.x, -r8.x, c2.w, r6.w
    mul_pp r7.xzw, r7.y, c3.xyyz
    dp3_pp r6.w, r7.xzww, r7.xzww
    rsq_pp r6.w, r6.w
    rcp_pp r8.w, r6.w
    mul_pp r7.xzw, r6.w, r7
    dp3_pp r6.w, r6, r7.xzww
    mad_pp r6.w, r6.w, c29.y, c29.y
    rcp r7.x, c3.w
    mul_pp r7.z, r7.x, r8.w
    mad_pp r7.w, r8.w, -r7.x, c36.w
    mad_pp r7.x, r8.w, r7.x, c36.w
    rcp r7.x, r7.x
    mul_pp r7.x, r7.x, r7.w
    mad_pp r7.zw, r7.z, c36.x, c36.xywx
    pow_pp r9.x, r6.w, r7.z
    mul_pp r6.w, r7.w, r9.x
    mad_pp r7.z, r7.w, -r9.x, c36.w
    mad_pp r6.w, r7.x, r7.z, r6.w
    mul_pp r6.w, r6.w, c3.w
    cmp_pp r8.y, -r8.w, c3.w, r6.w
    mul_pp r7.xyz, r7.y, c4
    dp3_pp r6.w, r7, r7
    rsq_pp r6.w, r6.w
    rcp_pp r7.w, r6.w
    mul_pp r7.xyz, r6.w, r7
    dp3_pp r6.w, r6, r7
    mad_pp r6.w, r6.w, c29.y, c29.y
    rcp r7.x, c4.w
    mul_pp r7.y, r7.x, r7.w
    mad_pp r7.z, r7.w, -r7.x, c36.w
    mad_pp r7.x, r7.w, r7.x, c36.w
    rcp r7.x, r7.x
    mul_pp r7.x, r7.x, r7.z
    mad_pp r7.yz, r7.y, c36.x, c36.xwxw
    pow_pp r8.w, r6.w, r7.y
    mul_pp r6.w, r7.z, r8.w
    mad_pp r7.y, r7.z, -r8.w, c36.w
    mad_pp r6.w, r7.x, r7.y, r6.w
    mul_pp r6.w, r6.w, c4.w
    cmp_pp r8.z, -r7.w, c4.w, r6.w
    add_pp r7.xyz, r8, v4
    max_pp r8.xyz, r7, c36.z
    abs r6.w, c16.w
    log_pp r7.x, r8.x
    log_pp r7.y, r8.y
    log_pp r7.z, r8.z
    mul_pp r7.xyz, r7, c29.z
    exp_pp r9.x, r7.x
    exp_pp r9.y, r7.y
    exp_pp r9.z, r7.z
    mad_pp r7.xyz, r9, c30.x, c30.y
    max_pp r9.xyz, r7, c36.z
    cmp_pp r7.xyz, -r6.w, r9, r8
    mov r8.z, c36.z
    if_lt -c9.w, r8.z
      nrm_pp r9.xyz, r5.yzww
      add r8.xyw, -r0.xyzz, c7.xyzz
      rcp r10.x, r9.x
      rcp r10.y, r9.y
      rcp r10.z, r9.z
      mul_pp r8.xyw, r8, r10.xyzz
      add r11.xyz, -r0, c8
      mul_pp r10.xyz, r10, r11
      cmp_pp r8.xyw, -r9.xyzz, r10.xyzz, r8
      min_pp r7.w, r8.y, r8.x
      min_pp r9.w, r8.w, r7.w
      add r8.xyw, r0.xyzz, -c9.xyzz
      mad_pp r9.xyz, r9, r9.w, r8.xyww
    else
      mov_pp r9.xyz, r5.yzww
    endif
    pow_pp r7.w, r4.w, c29.w
    mad_pp r8.x, r7.w, -c30.z, c30.w
    mul_pp r7.w, r7.w, r8.x
    mul_pp r9.w, r7.w, c31.x
    texldl_pp r10, r9, s0
    pow_pp r7.w, r10.w, c10.y
    mul_pp r7.w, r7.w, c10.x
    mul_pp r8.xyw, r10.xyzz, r7.w
    mov r10.w, c8.w
    if_lt r10.w, c31.y
      if_lt -c13.w, r8.z
        nrm_pp r11.xyz, r5.yzww
        add r12.xyz, -r0, c11
        rcp r13.x, r11.x
        rcp r13.y, r11.y
        rcp r13.z, r11.z
        mul_pp r12.xyz, r12, r13
        add r14.xyz, -r0, c12
        mul_pp r13.xyz, r13, r14
        cmp_pp r12.xyz, -r11, r13, r12
        min_pp r8.z, r12.y, r12.x
        min_pp r10.w, r12.z, r8.z
        add r0.xyz, r0, -c13
        mad_pp r9.xyz, r11, r10.w, r0
      else
        mov_pp r9.xyz, r5.yzww
      endif
      texldl_pp r9, r9, s1
      pow_pp r0.x, r9.w, c14.y
      mul_pp r0.x, r0.x, c14.x
      mul_pp r0.xyz, r9, r0.x
      mad r5.yzw, r7.w, r10.xxyz, -r0.xxyz
      mad_pp r8.xyw, c8.w, r5.yzzw, r0.xyzz
    endif
    nrm_pp r0.xyz, r6
    lrp_pp r5.yzw, r3.w, r3.xxyz, c15.xxyz
    mad_pp r3.w, r3.w, -c15.w, c15.w
    mul_pp r3.xyz, r3.w, r3
    mad_pp r1.xyz, r1, r0.w, c1
    dp3_pp r0.w, r1, r1
    add r6.x, -r0.w, c31.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r6.x, c31.w, r0.w
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r0, r1
    max_pp r6.x, r0.w, c36.z
    dp3_pp r0.x, r0, r2
    max_pp r2.x, r0.x, c36.z
    dp3_pp r0.x, c1, r1
    max_pp r1.x, r0.x, c36.z
    mul_pp r0.x, r4.w, r4.w
    mul_pp r0.y, r0.x, c32.x
    mad_pp r0.z, r0.x, -c32.x, c32.y
    mad_pp r0.w, r5.x, r0.z, r0.y
    mad_pp r0.y, r2.x, r0.z, r0.y
    mad r0.y, r0.w, r0.y, c32.z
    rcp_pp r0.y, r0.y
    add_pp r0.z, -r4.w, c36.w
    mad_pp r0.z, r0.z, c33.x, c33.y
    log_pp r0.z, r0.z
    rcp r0.z, r0.z
    mul_pp r0.z, r0.z, c32.w
    mul_pp r0.w, r0.z, r0.z
    mad r0.z, r0.z, r0.z, c36.x
    mul_pp r0.z, r0.z, c33.z
    pow_pp r1.y, r6.x, r0.w
    mul_pp r0.z, r0.z, r1.y
    add_pp r0.w, -r5.x, c36.w
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    add_pp r1.y, -r2.x, c36.w
    mul_pp r1.z, r1.y, r1.y
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.y, r1.y, r1.z
    mul_pp r1.z, r1.x, r1.x
    dp2add_pp r1.z, r1.z, r4.w, -c29.y
    mad_pp r0.w, r1.z, r0.w, c36.w
    mad_pp r1.z, r1.z, r1.y, c36.w
    mul_pp r0.w, r0.w, r1.z
    mul r0.y, r0.z, r0.y
    mul_pp r0.z, r0.y, c33.w
    mad r0.y, r0.y, -c34.x, c34.y
    rsq r1.z, r0.z
    rcp_pp r1.z, r1.z
    cmp_pp r0.y, r0.y, c34.z, r1.z
    cmp_pp r0.y, -r6.w, r0.y, r0.z
    mul_pp r0.yz, r5.x, r0.xyww
    mul_pp r0.w, r0.x, r4.w
    mad_pp r0.w, r0.w, -c35.x, c35.y
    mad_pp r0.x, r0.x, r0.x, c36.w
    rcp_pp r0.x, r0.x
    cmp_pp r0.x, -r6.w, r0.w, r0.x
    add_pp r0.w, -r3.w, c36.w
    mad_sat_pp r0.w, r1.w, r2.w, r0.w
    mad_pp r2.xyz, c17, r0.z, r7
    mul_pp r6.xyz, r0.y, c17
    cmp_pp r6.xyz, r0.y, r6, c36.z
    add_pp r0.y, -r1.x, c36.w
    mul_pp r0.z, r0.y, r0.y
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.y, r0.y, r0.z
    lrp_pp r1.xzw, r0.y, c36.w, r5.yyzw
    mul_pp r1.xzw, r1, r6.xyyz
    mad_pp r1.xzw, r3.xyyz, r2.xyyz, r1
    mul_pp r0.xyz, r8.xyww, r0.x
    lrp_pp r2.xyz, r1.y, r0.w, r5.yzww
    mad_pp r0.xyz, r0, r2, r1.xzww
    mad_pp r0.xyz, r4, c23.x, r0
    mul r0.w, c6.y, v5.x
    exp_sat r0.w, -r0.w
    add r0.xyz, r0, -c5
    mad_pp oC0.xyz, r0.w, r0, c5
    mov_pp oC0.w, c36.w

// approximately 280 instruction slots used (8 texture, 272 arithmetic)
