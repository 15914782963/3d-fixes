// CRC32: B13AFAA9 | Unity headers extracted from StandardVertexColor.shader
// Shader "Dreamfall/Unity5/Standard VertexColor" {
//   Properties {
//    _Color ("Color", Color) = (1,1,1,1)
//    _MainTex ("Albedo (RGB)", 2D) = "white" { }
//    _NormalTex ("Normal (RGB)", 2D) = "bump" { }
//    _NormalMul ("Normal Multiplier", Float) = 1
//    _MetallicGlossTex ("Metallic(R)/Glossines(G)/Occlusion(B)", 2D) = "white" { }
//    _GlossinessAdjust ("Smoothness Max", Range(0,1)) = 0.5
//    _MetallicAdjust ("Metallic Max", Range(0,1)) = 0
//   }
//   Fallback "Legacy Shaders/Diffuse"
//   SubShader 1/1 {
//     LOD 200
//     Tags { "RenderType"="Opaque" }
//     Pass 1/4 {
//       Name "FORWARD"
//       Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//       GpuProgramID 45046
//       Program "fp" {
//         SubProgram "d3d9 " {
//           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "FOG_EXP" "LIGHTMAP_ON" "SHADOWS_SCREEN" }
//           Vector 16 [_Color]
//           Float 14 [_GlossinessAdjust]
//           Float 15 [_MetallicAdjust]
//           Float 13 [_NormalMul]
//           Vector 0 [_WorldSpaceCameraPos]
//           Vector 11 [unity_ColorSpaceDielectricSpec]
//           Vector 1 [unity_FogColor]
//           Vector 2 [unity_FogParams]
//           Vector 12 [unity_Lightmap_HDR]
//           Vector 3 [unity_SpecCube0_BoxMax]
//           Vector 4 [unity_SpecCube0_BoxMin]
//           Vector 6 [unity_SpecCube0_HDR]
//           Vector 5 [unity_SpecCube0_ProbePosition]
//           Vector 7 [unity_SpecCube1_BoxMax]
//           Vector 8 [unity_SpecCube1_BoxMin]
//           Vector 10 [unity_SpecCube1_HDR]
//           Vector 9 [unity_SpecCube1_ProbePosition]
//           SetTexture 0 [unity_Lightmap] 2D 0
//           SetTexture 1 [unity_LightmapInd] 2D 1
//           SetTexture 2 [unity_SpecCube0] CUBE 2
//           SetTexture 3 [unity_SpecCube1] CUBE 3
//           SetTexture 4 [_ShadowMapTexture] 2D 4
//           SetTexture 5 [_MainTex] 2D 5
//           SetTexture 6 [_NormalTex] 2D 6
//           SetTexture 7 [_MetallicGlossTex] 2D 7
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    def c17, -0.5, 0.5, 0.75, 7
    def c18, 2, -1, 0, 1
    def c19, 0.999989986, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1.xy
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4 v4
    dcl_color v5
    dcl_texcoord5_pp v6.xy
    dcl_texcoord6 v7
    dcl_texcoord7 v8.x
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_cube s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

texldl r31, c220.z, s13

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --fix-unity-reflection --only-autofixed --ignore-register-errors Dreamfall_Unity5_Standard VertexColor/fp/B13AFAA9.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mov r0.x, v2.w
    mov r0.y, v3.w
    mov r0.z, v4.w
    add r1.xyz, -r0, r30
    nrm_pp r2.xyz, r1
    texld r1, v0, s5
    mul r1.xyz, r1, c16
    mul_pp r3.xyz, r1, v5
    texld_pp r4, v1, s7
    texld_pp r5, v0.zwzw, s6
    mad_pp r5.xy, r5.wyzw, c18.x, c18.y
    mul_pp r5.xy, r5, c13.x
    dp2add_sat_pp r0.w, r5, r5, c18.z
    add_pp r0.w, -r0.w, c18.w
    rsq_pp r0.w, r0.w
    rcp_pp r5.z, r0.w
    mul_pp r0.w, r4.x, c15.x
    mul_pp r1.w, r4.z, v5.w
    texldp_pp r6, v7, s4
    dp3_pp r7.x, v2, r5
    dp3_pp r7.y, v3, r5
    dp3_pp r7.z, v4, r5
    mov r4.zw, c18
    mad_pp r2.w, r4.y, -c14.x, r4.w
    dp3_pp r3.w, -r2, r7
    add_pp r3.w, r3.w, r3.w
    mad_pp r5.xyz, r7, -r3.w, -r2
    texld_pp r8, v6, s0
    pow_pp r3.w, r8.w, c12.y
    mul_pp r3.w, r3.w, c12.x
    mul_pp r6.yzw, r8.xxyz, r3.w
    texld_pp r9, v6, s1
    add_pp r9.xyz, r9, c17.x
    dp3_pp r3.w, r7, r9
    add_pp r3.w, r3.w, c17.y
    mul_pp r6.yzw, r3.w, r6
    rcp r3.w, r9.w
    mul_pp r6.yzw, r3.w, r6
    mul_pp r8.xyz, r6.x, r8
    min_pp r9.xyz, r8, r6.yzww
    mul_pp r6.xyz, r6.x, r6.yzww
    max_pp r8.xyz, r9, r6
    mul_pp r6.xyz, r1.w, r8
    if_lt -c5.w, r4.z
    nrm_pp r8.xyz, r5
    add r9.xyz, -r0, c3
    rcp r10.x, r8.x
    rcp r10.y, r8.y
    rcp r10.z, r8.z
    mul_pp r9.xyz, r9, r10
    add r11.xyz, -r0, c4
    mul_pp r10.xyz, r10, r11
    cmp_pp r9.xyz, -r8, r10, r9
    min_pp r3.w, r9.y, r9.x
    min_pp r4.x, r9.z, r3.w
    mov r9.xyz, c4
    add r9.xyz, r9, c3
    mov r10.y, c17.y
    mad r10.xyz, r9, r10.y, -c5
    add r10.xyz, r0, r10
    mad r8.xyz, r8, r4.x, r10
    mad_pp r8.xyz, r9, -c17.y, r8
    else
    mov_pp r8.xyz, r5
    endif
    pow_pp r3.w, r2.w, c17.z
    mul_pp r8.w, r3.w, c17.w
    texldl_pp r9, r8, s2
    pow_pp r2.w, r9.w, c6.y
    mul_pp r2.w, r2.w, c6.x
    mul_pp r10.xyz, r9, r2.w
    mov r3.w, c4.w
    if_lt r3.w, c19.x
    if_lt -c9.w, r4.z
    nrm_pp r11.xyz, r5
    add r4.xzw, -r0.xyyz, c7.xyyz
    rcp r12.x, r11.x
    rcp r12.y, r11.y
    rcp r12.z, r11.z
    mul_pp r4.xzw, r4, r12.xyyz
    add r13.xyz, -r0, c8
    mul_pp r12.xyz, r12, r13
    cmp_pp r4.xzw, -r11.xyyz, r12.xyyz, r4
    min_pp r3.w, r4.z, r4.x
    min_pp r5.w, r4.w, r3.w
    mov r12.xyz, c7
    add r4.xzw, r12.xyyz, c8.xyyz
    mov r12.y, c17.y
    mad r12.xyz, r4.xzww, r12.y, -c9
    add r0.xyz, r0, r12
    mad r0.xyz, r11, r5.w, r0
    mad_pp r8.xyz, r4.xzww, -c17.y, r0
    else
    mov_pp r8.xyz, r5
    endif
    texldl_pp r5, r8, s3
    pow_pp r0.x, r5.w, c10.y
    mul_pp r0.x, r0.x, c10.x
    mul_pp r0.xyz, r5, r0.x
    mad r4.xzw, r2.w, r9.xyyz, -r0.xyyz
    mad_pp r10.xyz, c4.w, r4.xzww, r0
    endif
    mul_pp r0.xyz, r1.w, r10
    nrm_pp r5.xyz, r7
    mad_pp r1.xyz, r1, v5, -c11
    mad_pp r1.xyz, r0.w, r1, c11
    mad_pp r0.w, r0.w, -c11.w, c11.w
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r1.w, r5, r2
    mad_pp r0.w, r4.y, c14.x, -r0.w
    add_sat_pp r0.w, r0.w, c18.w
    add_pp r2.x, -r1.w, c18.w
    cmp_pp r1.w, r1.w, r2.x, c18.w
    mul_pp r2.x, r1.w, r1.w
    mul_pp r2.x, r2.x, r2.x
    mul_pp r1.w, r1.w, r2.x
    lrp_pp r2.xyz, r1.w, r0.w, r1
    mul_pp r0.xyz, r0, r2
    mad_pp r0.xyz, r3, r6, r0
    mul r0.w, c2.y, v8.x
    exp_sat r0.w, -r0.w
    add r0.xyz, r0, -c1
    mad_pp oC0.xyz, r0.w, r0, c1
    mov_pp oC0.w, c18.w
