// CRC32: 43EA4CAF | Matched 8 variants of 1 shaders: Hidden/Internal-PrePassLighting
// 
//     Unity headers extracted from Internal-PrePassLighting.shader
//     Shader "Hidden/Internal-PrePassLighting" {
//       Properties {
//        _LightTexture0 ("", any) = "" {}
//        _LightTextureB0 ("", 2D) = "" {}
//        _ShadowMapTexture ("", any) = "" {}
//       }
//       Fallback Off
//       SubShader 1/1 {
//         Pass 1/3 {
//           Tags { "SHADOWSUPPORT"="true" }
//           ZWrite Off
//           Fog { Mode Off }
//           Blend DstColor Zero
//           Program "fp" {
//             SubProgram "d3d9 " {
// 02:           Keywords { "SHADOWS_DEPTH" "SHADOWS_NATIVE" "SHADOWS_SOFT" "SPOT" "SUNSHINE_DISABLED" }
// 80:           Keywords { "SHADOWS_DEPTH" "SHADOWS_NATIVE" "SHADOWS_SOFT" "SPOT" "SUNSHINE_FILTER_HARD" }
// 20:           Keywords { "SHADOWS_DEPTH" "SHADOWS_NATIVE" "SHADOWS_SOFT" "SPOT" "SUNSHINE_FILTER_PCF_2x2" }
// 08:           Keywords { "SHADOWS_DEPTH" "SHADOWS_NATIVE" "SHADOWS_SOFT" "SPOT" "SUNSHINE_FILTER_PCF_3x3" }
// 01:           Keywords { "SHADOWS_DEPTH" "SHADOWS_NATIVE" "SPOT" "SUNSHINE_DISABLED" }
// 40:           Keywords { "SHADOWS_DEPTH" "SHADOWS_NATIVE" "SPOT" "SUNSHINE_FILTER_HARD" }
// 10:           Keywords { "SHADOWS_DEPTH" "SHADOWS_NATIVE" "SPOT" "SUNSHINE_FILTER_PCF_2x2" }
// 04:           Keywords { "SHADOWS_DEPTH" "SHADOWS_NATIVE" "SPOT" "SUNSHINE_FILTER_PCF_3x3" }
//               Matrix 0 [unity_World2Shadow0]
//               Matrix 4 [_CameraToWorld]
//               Matrix 8 [_LightMatrix0]
//               Vector 12 [_WorldSpaceCameraPos]
//               Vector 13 [_ProjectionParams]
//               Vector 14 [_ZBufferParams]
//               Vector 15 [unity_LightShadowBias]
//               Vector 16 [_LightShadowData]
//               Vector 17 [unity_ShadowFadeCenterAndType]
//               Vector 18 [_LightPos]
//               Vector 19 [_LightColor]
//               Vector 20 [unity_LightmapFade]
//               Vector 21 [_ShadowMapTexture_TexelSize]
//               SetTexture 0 [_CameraNormalsTexture] 2D 0
//               SetTexture 1 [_CameraDepthTexture] 2D 1
//               SetTexture 2 [_LightTexture0] 2D 2
//               SetTexture 3 [_LightTextureB0] 2D 3
//               SetTexture 4 [_ShadowMapTexture] 2D 4
//             }
//           }
//         }
//       }
//     }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    def c22, 2.00000000, -1.00000000, 0.00000000, 128.00000000
    def c23, 0.00000000, 1.00000000, 0.50000000, 0.01581139
    def c24, 0.02121320, 0.00707107, -0.50000000, 0.11108398
    def c25, 0.21997070, 0.70703125, 0.07098389, 0
    dcl_texcoord0 v0.xyzw
    dcl_texcoord1 v1.xyz

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

    rcp r0.x, v0.w
    mul r8.xy, v0, r0.x
    rcp r0.y, v1.z
    mul r0.y, r0, c13.z
    texld r0.x, r8, s1
    mad r0.x, r0, c14, c14.y
    mov r2.w, c23.y
    mul r1.xyz, v1, r0.y
    rcp r0.x, r0.x
    mul r0.xyw, r1.xyzz, r0.x // r0.w has depth
    mov r0.z, c23.y

// PRE-EMPTIVE FIX FOR UNITYSUNSHINE SHADER - THIS HAS NOT BEEN VERIFIED

// This is a simplified version of the maths to find P.I[0,0] from MV.I and MVP
// Assumes the game is storing matrix columns in registers (highly likely)
// c180 is the inverse of the MV matrix (From DX9Settings.ini)
// c190 is the MVP matrix (From DX9Settings.ini)

// Transpose first component of the MV.I matrix regs into r30:
mov r30.x, c180.x
mov r30.y, c181.x
mov r30.z, c182.x
mov r30.w, c183.x
dp4 r30.x, r30, c190 // Calculate P[0,0]
rcp r30.x, r30.x // Calculate P.I[0,0]

// This is a variation of the stereo-correction formula for view-space coords:
texldl r31, c220.z, s13 // r31.x = separation, r31.y = convergence
add r31.w, r0.w, -r31.y // r31.w = depth - convergence
mul r31.w, r31.w, r31.x // r31.w = separation * (depth - convergence)
mad r0.x, r31.w, r30.x, r0.x // X += separation * (depth - convergence) * P.I[0,0]

    dp4 r10.w, r0.xywz, c5
    dp4 r11.x, r0.xywz, c6
    dp4 r2.x, r0.xywz, c4
    mov r2.y, r10.w
    mov r2.z, r11.x
    dp4 r0.x, r2, c3
    rcp r1.x, r0.x
    mov r8.w, c23.y
    dp4 r0.z, r2, c2
    dp4 r0.y, r2, c1
    dp4 r0.x, r2, c0
    mul r3.xyz, r0, r1.x
    mov r0.xy, c21
    mad r0.xy, c23.z, -r0, r3
    mul r0.xy, r0, c21.zwzw
    frc r4.zw, r0.xyxy
    add_pp r9.xw, -r4.zyzw, c23.y
    mov r1.xy, c21
    add r0.xy, -r4.zwzw, r0
    mul r1.xy, c23.z, r1
    mad r4.xy, r0, c21, r1
    add r7.xy, r4, c21
    add r3.xy, r4, -c21
    mov r8.z, r9.x
    mov r1.xy, c21
    mad r6.xy, c22.x, r1, r4
    mov r0.y, c15.x
    mad r10.z, c23.w, -r0.y, r3
    mov r7.w, r4.z
    mov r0.y, r6
    mov r1.y, r6
    mov r5.x, r4
    mov r0.x, r4
    mov r0.z, r10
    texld r0.x, r0, s4
    mov r1.w, r0.x
    mov r0.y, c15.x
    mad r0.z, c24.x, -r0.y, r3
    mov r0.x, c15
    mad r9.z, c24.y, -r0.x, r3
    mov r1.z, r0
    mov r1.x, r3
    texld r1.x, r1, s4
    mov r1.z, r1.x
    mov r6.z, r0
    mov r3.z, r0
    mov r5.z, r9
    mov r5.y, r7
    texld r0.x, r5, s4
    mov r5.x, r3
    mov r1.y, r0.x
    mov r5.z, r10
    mov r5.y, r7
    texld r1.x, r5, s4
    add r5, r1, c24.z
    cmp r5, r5, c23.y, c23.x
    mov r1.y, r6
    mov r1.x, r7
    mov r1.z, r10
    texld r0.x, r1, s4
    mov r1.x, r6
    mov r1.z, r10
    mov r1.y, r7
    texld r1.x, r1, s4
    mov r1.z, r0.x
    texld r0.x, r6, s4
    mov r1.y, r1.x
    mov r7.z, r9
    texld r1.x, r7, s4
    mov r1.w, r0.x
    add r1, r1, c24.z
    cmp r1, r1, c23.y, c23.x
    mov r7.z, c23.y
    mul_pp r0.xy, r1.zwzw, r7.zwzw
    mul_pp r1.zw, r5, r8
    add_pp r0.y, r0.x, r0
    add_pp r0.x, r1.z, r1.w
    add_pp r5.w, r0.x, r0.y
    mul_pp r0.xy, r1, r7.zwzw
    mul_pp r1.xy, r5, r8.zwzw
    add_pp r0.y, r0.x, r0
    add_pp r0.x, r1, r1.y
    add_pp r5.z, r0.x, r0.y
    mov r1.x, r6
    mov r1.y, r4
    mov r1.z, r10
    texld r0.x, r1, s4
    mov r1.w, r0.x
    mov r0.y, r3
    mov r0.x, r6
    texld r0.x, r0, s4
    mov r0.z, r11.x
    mov r1.y, r0.x
    mov r9.y, r4
    mov r9.x, r7
    texld r1.x, r9, s4
    mov r1.z, r1.x
    mov r10.y, r3
    mov r10.x, r7
    texld r1.x, r10, s4
    add r6, r1, c24.z
    mov r1.x, r3
    mov r1.y, r4
    mov r1.z, r10
    texld r0.x, r1, s4
    mov r1.y, r3
    mov r1.x, r4
    mov r1.z, r10
    texld r1.x, r1, s4
    mov r1.y, r1.x
    texld r1.x, r3, s4
    cmp r3, r6, c23.y, c23.x
    mov r1.z, r0.x
    mov r4.z, r9
    texld r0.x, r4, s4
    mov r1.w, r0.x
    mul_pp r0.xy, r7.zwzw, r3.zwzw
    add r1, r1, c24.z
    cmp r1, r1, c23.y, c23.x
    mul_pp r1.xy, r8.zwzw, r1
    mul_pp r1.zw, r8, r1
    add_pp r0.y, r0.x, r0
    add_pp r0.x, r1.z, r1.w
    add_pp r5.y, r0.x, r0
    mul_pp r0.xy, r7.zwzw, r3
    add_pp r0.y, r0.x, r0
    add_pp r0.x, r1, r1.y
    add_pp r5.x, r0, r0.y
    mov r0.x, r2
    mov r0.y, r10.w
    add r3.xyz, -r0, c18
    dp3 r3.w, r3, r3
    rsq r4.x, r3.w
    mul r3.xyz, r4.x, r3
    mov_pp r1.w, r4
    mov_pp r1.x, r9.w
    mov_pp r1.yz, c23.y
    mul_pp r1, r1, r5
    dp4_pp r4.w, r1, c24.w
    add r1.xyz, r0, -c12
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mad r4.xyz, -r1.w, r1, r3
    dp3 r1.x, r4, r4
    mov r5.x, c16
    add r1.y, c23, -r5.x
    mad r4.w, r4, r1.y, c16.x
    rsq r1.w, r1.x
    add r1.xyz, -r0, c17
    mul r0.xyz, r1.w, r4
    dp3 r4.x, r1, r1
    texld r1, r8, s0
    rsq r4.x, r4.x
    rcp r4.y, r4.x
    mad_pp r1.xyz, r1, c22.x, c22.y
    add r4.y, -r0.w, r4
    mad r5.x, r4.y, c17.w, r0.w
    dp3_pp r4.x, r1, r1
    mad_sat r0.w, r5.x, c16.z, c16
    add_sat r5.y, r4.w, r0.w
    dp4 r4.w, r2, c11
    rsq_pp r4.x, r4.x
    mul_pp r4.xyz, r4.x, r1
    dp3_pp r0.x, r0, r4
    mul_pp r0.y, r1.w, c22.w
    max_pp r0.x, r0, c22.z
    pow_pp r1, r0.x, r0.y
    dp4 r0.z, r2, c10
    dp4 r0.x, r2, c8
    dp4 r0.y, r2, c9
    mov r0.w, r4
    texldp r0.w, r0, s2
    mul r0.x, r3.w, c18.w
    cmp r0.y, r4.w, c23.x, c23
    mul r0.y, r0.w, r0
    texld r0.x, r0.x, s3
    mul r0.x, r0.y, r0
    mul r1.y, r0.x, r5
    mov_pp r0.xyz, c19
    dp3_pp r0.x, c25, r0
    mov_sat r0.w, r1.y
    mul r0.w, r1.x, r0
    mul r0.w, r0, r0.x
    dp3_pp r0.y, r3, r4
    max_pp r0.x, r0.y, c22.z
    mad r0.y, r5.x, c20.z, c20.w
    add_sat r1.x, -r0.y, c23.y
    mul r0.x, r1.y, r0
    mul r0.xyz, r0.x, c19
    mul_pp r0, r0, r1.x
    exp_pp oC0.x, -r0.x
    exp_pp oC0.y, -r0.y
    exp_pp oC0.z, -r0.z
    exp_pp oC0.w, -r0.w
