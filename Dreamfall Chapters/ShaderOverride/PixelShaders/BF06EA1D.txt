// CRC32: BF06EA1D |    Unity headers extracted from MirrorWater.shader
//    Shader "Dreamfall/FX/Water (Supports Shadows)" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _MainTex ("Maintex (RGB)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _Fresnel ("Reflection Fresnel Exponent", Float) = 2
//       _ReflAmount ("Reflection amount", Float) = 2
//       _ReflPow ("Reflection pow", Float) = 1
//       _ReflDistort ("Reflection distort", Float) = 0.1
//       _ReflectionTex ("Reflection", 2D) = "white" { }
//       _WaterSpeed ("Water Speed", Float) = 1
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 35854
//          Program "fp" {
//            SubProgram "d3d9 " {
//              GpuProgramIndex 41
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from MirrorWater.shader.decompressed:
//   API d3d9
//   Shader model ps_3_0
//   undeciphered1: 57 5 -1
//   Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
//   undeciphered3: 0 0 1
//   Vector 3 [_Color]
//   Float 7 [_Fresnel]
//   Float 4 [_ReflAmount]
//   Float 5 [_ReflDistort]
//   Float 6 [_ReflPow]
//   Vector 0 [_Time]
//   Float 8 [_WaterSpeed]
//   Vector 1 [_WorldSpaceCameraPos]
//   Vector 2 [unity_Lightmap_HDR]
//   SetTexture 0 [unity_Lightmap] 2D 0
//   SetTexture 1 [_MainTex] 2D 1
//   SetTexture 2 [_BumpMap] 2D 2
//   SetTexture 3 [_ReflectionTex] 2D 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//   using 3Dmigoto command line v1.2.36 on Sun Jun 19 22:02:00 2016
//
//
// Parameters:
//
//   sampler2D _BumpMap;
//   float4 _Color;
//   float _Fresnel;
//   sampler2D _MainTex;
//   float _ReflAmount;
//   float _ReflDistort;
//   float _ReflPow;
//   sampler2D _ReflectionTex;
//   float4 _Time;
//   float _WaterSpeed;
//   float3 _WorldSpaceCameraPos;
//   sampler2D unity_Lightmap;
//   float4 unity_Lightmap_HDR;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _Time                c0       1
//   _WorldSpaceCameraPos c1       1
//   unity_Lightmap_HDR   c2       1
//   _Color               c3       1
//   _ReflAmount          c4       1
//   _ReflDistort         c5       1
//   _ReflPow             c6       1
//   _Fresnel             c7       1
//   _WaterSpeed          c8       1
//   unity_Lightmap       s0       1
//   _MainTex             s1       1
//   _BumpMap             s2       1
//   _ReflectionTex       s3       1
//

    ps_3_0
    def c9, 2, -1, 0, 1
    def c10, 0.5, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4 v4.xyw
    dcl_texcoord5_pp v5.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

texldl r31, c220.z, s13

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --fix-unity-reflection --only-autofixed --ignore-register-errors Dreamfall_FX_Water (Supports Shadows)/fp/BF06EA1D.txt
mov r30, c1
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mov r0.x, v1.w
    mov r0.y, v2.w
    mov r0.z, v3.w
    add r0.xyz, -r0, r30
    nrm_pp r1.xyz, r0
    mul r0.xyz, r1.y, v2
    mad r0.xyz, v1, r1.x, r0
    mad_pp r0.xyz, v3, r1.z, r0
    nrm r1.xyz, r0
    mov r0.x, c0.x
    mad r2.x, r0.x, c8.x, v0.z
    mov r2.yw, v0.w
    texld_pp r3, r2, s2
    mad_pp r3.xy, r3.wyzw, c9.x, c9.y
    dp2add_sat_pp r0.y, r3, r3, c9.z
    add_pp r0.y, -r0.y, c9.w
    rsq_pp r0.y, r0.y
    rcp_pp r3.z, r0.y
    mad r2.z, r0.x, -c8.x, v0.z
    texld_pp r0, r2.zwzw, s2
    mad_pp r0.xy, r0.wyzw, c9.x, c9.y
    dp2add_sat_pp r0.w, r0, r0, c9.z
    add_pp r0.w, -r0.w, c9.w
    rsq_pp r0.w, r0.w
    rcp_pp r0.z, r0.w
    add_pp r0.xyz, r0, r3
    mul_pp r0.xyz, r0, c10.x
    dp3 r0.z, r1, r0
    mul r0.xy, r0, c5.x
    add r0.z, -r0.z, c9.w
    pow_pp r1.x, r0.z, c7.x
    rcp r0.z, v4.w
    mad_pp r0.xy, v4, r0.z, r0
    texld_pp r0, r0, s3
    log r2.x, r0.x
    log r2.y, r0.y
    log r2.z, r0.z
    mul r0.xyz, r2, c6.x
    exp_pp r2.x, r0.x
    exp_pp r2.y, r0.y
    exp_pp r2.z, r0.z
    mul_pp r0.xyz, r1.x, r2
    mul r0.xyz, r0, c4.x
    texld_pp r1, v0, s1
    mul_pp r0.xyz, r0, r1.w
    mul_pp r1.xyz, r1, c3
    texld_pp r2, v5, s0
    pow_pp r0.w, r2.w, c2.y
    mul_pp r0.w, r0.w, c2.x
    mul_pp r2.xyz, r2, r0.w
    mad_pp oC0.xyz, r1, r2, r0
    mov_pp oC0.w, c9.w

// approximately 62 instruction slots used (5 texture, 57 arithmetic)
