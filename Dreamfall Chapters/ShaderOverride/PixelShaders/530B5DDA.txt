// CRC32: 530B5DDA |    Unity headers extracted from Rim_Opaque.shader
//    Shader "Chickenlord/Rim Lighting" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _SpecColor ("Specular Color", Color) = (0.5,0.5,0.5,1)
//       _RimColor ("Rim Color", Color) = (1,1,1,1)
//       _Shininess ("Shininess", Range(0.01,1)) = 0.078125
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _RS ("Rim Power", Range(0.2,6)) = 2.5
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 39210
//          Program "fp" {
//            SubProgram "d3d9 " {
//              GpuProgramIndex 29
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Rim_Opaque.shader.decompressed:
//   API d3d9
//   Shader model ps_2_0
//   undeciphered1: 40 3 -1
//   Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//   undeciphered3: 0 0 1
//   Vector 3 [_Color]
//   Float 5 [_RS]
//   Vector 4 [_RimColor]
//   Vector 0 [_WorldSpaceCameraPos]
//   Vector 1 [unity_FogColor]
//   Vector 2 [unity_Lightmap_HDR]
//   SetTexture 0 [unity_Lightmap] 2D 0
//   SetTexture 1 [_MainTex] 2D 1
//   SetTexture 2 [_BumpMap] 2D 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//   using 3Dmigoto command line v1.2.36 on Sun Jun 19 22:08:50 2016
//
//
// Parameters:
//
//   sampler2D _BumpMap;
//   float4 _Color;
//   sampler2D _MainTex;
//   float _RS;
//   float4 _RimColor;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogColor;
//   sampler2D unity_Lightmap;
//   float4 unity_Lightmap_HDR;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _WorldSpaceCameraPos c0       1
//   unity_FogColor       c1       1
//   unity_Lightmap_HDR   c2       1
//   _Color               c3       1
//   _RimColor            c4       1
//   _RS                  c5       1
//   unity_Lightmap       s0       1
//   _MainTex             s1       1
//   _BumpMap             s2       1
//

    ps_3_0 // Converted from ps_2_0 with DarkStarSword's shadertool.py
    def c6, 2, -1, 0, 1
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4_pp v4.xy
    dcl_texcoord6 v5.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

texldl r31, c220.z, s13

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --fix-unity-reflection --only-autofixed --ignore-register-errors Chickenlord_Rim Lighting/fp/530B5DDA.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mov r0.x, -v1.w
    mov r0.y, -v2.w
    mov r0.z, -v3.w
    add r0.xyz, r0, r30
    nrm_pp r1.xyz, r0
    mul r0.xyz, r1.y, v2
    mad r0.xyz, v1, r1.x, r0
    mad_pp r0.xyz, v3, r1.z, r0
    nrm r1.xyz, r0
    mov r0.x, v0.z
    mov r0.y, v0.w
    texld_pp r0, r0, s2
    texld_pp r2, v4, s0
    texld_pp r3, v0, s1
    mad_pp r4.x, r0.w, c6.x, c6.y
    mad_pp r4.y, r0.y, c6.x, c6.y
    dp2add_sat_pp r1.w, r4, r4, c6.z
    add_pp r1.w, -r1.w, c6.w
    rsq_pp r1.w, r1.w
    rcp_pp r4.z, r1.w
    dp3_sat r3.w, r4, r1
    add r3.w, -r3.w, c6.w
    pow r0.x, r3.w, c5.x
    mul_pp r0.xyz, r0.x, c4
    pow_pp r0.w, r2.w, c2.y
    mul_pp r0.w, r0.w, c2.x
    mul_pp r1.xyz, r2, r0.w
    mul_pp r2.xyz, r3, c3
    mad_pp r0.xyz, r2, r1, r0
    mov_sat r0.w, v5.x
    lrp_pp r1.xyz, r0.w, r0, c1
    mov_pp r1.w, c6.w
    mov_pp oC0, r1

// approximately 42 instruction slots used (3 texture, 39 arithmetic)
