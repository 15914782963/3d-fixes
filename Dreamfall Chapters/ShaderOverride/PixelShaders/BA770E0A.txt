// CRC32: BA770E0A |    Unity headers extracted from Standard_Disintegrate_AlphaCutoff_VertexPosition.shader
//    Shader "Dreamfall/Unity5/Standard_Disintegrate Alpha Cutoff Bumped Diffuse VertexPos" {
//      Properties {
//       _MainTex ("Texture (RGB)", 2D) = "white" { }
//       _BumpMap ("Bump (RGB)", 2D) = "bump" { }
//       _NoiseTex ("Effect Map (RGB)", 2D) = "white" { }
//       _AlphaFactor ("AlphaFactor", Range(0,1)) = 1
//       _glossHigh ("Gloss High", Range(0,1)) = 1
//       _glossLow ("Gloss Low", Range(0,1)) = 0
//       _MetalNess ("Metalness", Range(0,1)) = 0
//       _MetalNessAlphaFactor ("Metalness Alpha Factor", Range(0,1)) = 1
//       _Cutoff ("Cutoff", Range(0,1)) = 1
//       _DisintegrateAmount ("Effect Amount", Range(0,1.01)) = 0
//       _DissolveColor ("Edge Color", Color) = (1,0.5,0.2,0)
//       _EdgeEmission ("Edge Emission", Color) = (0,0,0,0)
//       _DissolveEdge ("Edge Range", Range(0,1)) = 0.01
//       _TileFactor ("Tile Factor", Range(0,10)) = 1
//       _EmissionFloat ("Emission Strength", Float) = 1
//       _UVxSpeed ("UV X speed", Float) = 1
//       _PlayerPos ("Player position(Set in script)", Vector) = (0,0,0,1)
//       _curveVal ("CurveValue", Float) = 1
//       _test ("squash test", Float) = 1
//       _flip ("Flip", Range(-1,1)) = 1
//       _UseplayerPos ("Use Player Pos (1=on)", Range(0,1)) = 1
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//          ColorMask RGB
//          GpuProgramID 25313
//          Program "fp" {
//            SubProgram "d3d9 " {
//              GpuProgramIndex 46
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_Disintegrate_AlphaCutoff_VertexPosition.shader.decompressed:
//   API d3d9
//   Shader model ps_3_0
//   undeciphered1: 156 11 5
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" }
//   undeciphered3: 0 0 1
//   Float 14 [_AlphaFactor]
//   Float 30 [_Cutoff]
//   Float 18 [_DisintegrateAmount]
//   Vector 19 [_DissolveColor]
//   Float 20 [_DissolveEdge]
//   Vector 22 [_EdgeEmission]
//   Float 28 [_EmissionFloat]
//   Float 13 [_MetalNess]
//   Float 17 [_MetalNessAlphaFactor]
//   Vector 23 [_PlayerPos]
//   Float 21 [_TileFactor]
//   Vector 0 [_Time]
//   Float 29 [_UVxSpeed]
//   Float 24 [_UseplayerPos]
//   Vector 1 [_WorldSpaceCameraPos]
//   Float 25 [_curveVal]
//   Float 27 [_flip]
//   Float 15 [_glossHigh]
//   Float 16 [_glossLow]
//   Float 26 [_test]
//   Vector 10 [unity_ColorSpaceDielectricSpec]
//   Vector 11 [unity_ColorSpaceLuminance]
//   Vector 12 [unity_Lightmap_HDR]
//   Vector 2 [unity_SpecCube0_BoxMax]
//   Vector 3 [unity_SpecCube0_BoxMin]
//   Vector 5 [unity_SpecCube0_HDR]
//   Vector 4 [unity_SpecCube0_ProbePosition]
//   Vector 6 [unity_SpecCube1_BoxMax]
//   Vector 7 [unity_SpecCube1_BoxMin]
//   Vector 9 [unity_SpecCube1_HDR]
//   Vector 8 [unity_SpecCube1_ProbePosition]
//   SetTexture 0 [unity_Lightmap] 2D 0
//   SetTexture 1 [unity_LightmapInd] 2D 1
//   SetTexture 2 [unity_SpecCube0] CUBE 2
//   SetTexture 3 [unity_SpecCube1] CUBE 3
//   SetTexture 4 [_ShadowMapTexture] 2D 4
//   SetTexture 5 [_MainTex] 2D 5
//   SetTexture 6 [_BumpMap] 2D 6
//   SetTexture 7 [_NoiseTex] 2D 7
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//   using 3Dmigoto command line v1.2.36 on Sun Jun 19 22:14:59 2016
//
//
// Parameters:
//
//   float _AlphaFactor;
//   sampler2D _BumpMap;
//   float _Cutoff;
//   float _DisintegrateAmount;
//   float4 _DissolveColor;
//   float _DissolveEdge;
//   float4 _EdgeEmission;
//   float _EmissionFloat;
//   sampler2D _MainTex;
//   float _MetalNess;
//   float _MetalNessAlphaFactor;
//   sampler2D _NoiseTex;
//   float3 _PlayerPos;
//   sampler2D _ShadowMapTexture;
//   float _TileFactor;
//   float4 _Time;
//   float _UVxSpeed;
//   float _UseplayerPos;
//   float3 _WorldSpaceCameraPos;
//   float _curveVal;
//   float _flip;
//   float _glossHigh;
//   float _glossLow;
//   float _test;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   sampler2D unity_Lightmap;
//   sampler2D unity_LightmapInd;
//   float4 unity_Lightmap_HDR;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _Time                          c0       1
//   _WorldSpaceCameraPos           c1       1
//   unity_SpecCube0_BoxMax         c2       1
//   unity_SpecCube0_BoxMin         c3       1
//   unity_SpecCube0_ProbePosition  c4       1
//   unity_SpecCube0_HDR            c5       1
//   unity_SpecCube1_BoxMax         c6       1
//   unity_SpecCube1_BoxMin         c7       1
//   unity_SpecCube1_ProbePosition  c8       1
//   unity_SpecCube1_HDR            c9       1
//   unity_ColorSpaceDielectricSpec c10      1
//   unity_ColorSpaceLuminance      c11      1
//   unity_Lightmap_HDR             c12      1
//   _MetalNess                     c13      1
//   _AlphaFactor                   c14      1
//   _glossHigh                     c15      1
//   _glossLow                      c16      1
//   _MetalNessAlphaFactor          c17      1
//   _DisintegrateAmount            c18      1
//   _DissolveColor                 c19      1
//   _DissolveEdge                  c20      1
//   _TileFactor                    c21      1
//   _EdgeEmission                  c22      1
//   _PlayerPos                     c23      1
//   _UseplayerPos                  c24      1
//   _curveVal                      c25      1
//   _test                          c26      1
//   _flip                          c27      1
//   _EmissionFloat                 c28      1
//   _UVxSpeed                      c29      1
//   _Cutoff                        c30      1
//   unity_Lightmap                 s0       1
//   unity_LightmapInd              s1       1
//   unity_SpecCube0                s2       1
//   unity_SpecCube1                s3       1
//   _ShadowMapTexture              s4       1
//   _MainTex                       s5       1
//   _BumpMap                       s6       1
//   _NoiseTex                      s7       1
//

    ps_3_0
    def c31, 2, -1, 0.333333343, -0.5
    def c32, 9.99999975e-005, 10000, 0.75, 6
    def c33, 0.699999988, 1.70000005, 0.999989986, 0
    def c34, -1, 1, -0, 0
    def c35, 0.280000001, 1, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_color v4
    dcl_texcoord5_pp v5.xy
    dcl_texcoord6 v6
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_cube s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

texldl r31, c220.z, s13

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --fix-unity-reflection --only-autofixed --ignore-register-errors Dreamfall_Unity5_Standard_Disintegrate Alpha Cutoff Bumped Diffuse VertexPos/fp/BA770E0A.txt
mov r30, c1
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mov r0.x, v1.w
    mov r0.y, v2.w
    mov r0.z, v3.w
    add r1.xyz, -r0, r30
    nrm_pp r2.xyz, r1
    mul r0.w, c26.x, v2.w
    add r1.xyz, -r0.xwzw, c23
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, c25.x
    mov r1.x, c0.x
    mad r1.y, r1.x, c29.x, v0.y
    mov r3.xw, c34
    add r1.z, r3.x, c24.x
    cmp r0.w, -r1_abs.z, r0.w, c18.x
    add r1.z, -r0.w, c34.y
    texld r4, v0, s5
    mul_pp r5, r4, v4
    mov r3.x, c27.x
    mul r1.w, r3.x, c20.x
    mad r1.z, r1.z, c27.x, -r1.w
    mov r1.x, v0.x
    mul r1.xy, r1, c21.x
    texld r6, r1, s7
    add r1.x, -r0.w, r6.x
    mov r3.xyz, c22
    mul_pp r6.xyz, r3, c28.x
    mul r1.x, r1.x, r5.w
    mul_pp r6.w, r1.x, c27.x
    cmp r0.w, -r0.w, c34.z, c34.x
    cmp r0.w, r1.z, c34.w, r0.w
    cmp_pp r1.xyz, r0.w, r5, c19
    mul_pp r7, r5.w, c34.wwwy
    cmp_pp r6, r0.w, r7, r6
    texld_pp r7, v0.zwzw, s6
    mad_pp r3.xy, r7.wyzw, c31.x, c31.y
    dp2add_sat_pp r0.w, r3, r3, c34.w
    add_pp r0.w, -r0.w, c34.y
    rsq_pp r0.w, r0.w
    rcp_pp r3.z, r0.w
    add_pp r4.xy, r5.wyzw, r5.wxzw
    max_pp r0.w, r4.x, c17.x
    min_pp r1.w, r0.w, c34.y
    mul_pp r0.w, r1.w, c13.x
    mad_pp r1.w, r4.z, v4.z, r4.y
    mul_pp r2.w, r1.w, c31.z
    mov r4.z, c31.z
    mad_pp r1.w, r1.w, -r4.z, c15.x
    mad_pp r1.w, c16.x, r1.w, r2.w
    max_pp r2.w, r5.w, c14.x
    add_pp r4, r6.w, -c30.x
    texkill r4
    texldp_pp r4, v6, s4
    dp3_pp r5.x, v1, r3
    dp3_pp r5.y, v2, r3
    dp3_pp r5.z, v3, r3
    mad_pp r3.x, r1.w, -r2.w, c34.y
    dp3_pp r3.y, -r2, r5
    add_pp r3.y, r3.y, r3.y
    mad_pp r4.yzw, r5.xxyz, -r3.y, -r2.xxyz
    texld_pp r7, v5, s0
    pow_pp r3.y, r7.w, c12.y
    mul_pp r3.y, r3.y, c12.x
    mul_pp r8.xyz, r7, r3.y
    texld_pp r9, v5, s1
    add_pp r9.xyz, r9, c31.w
    dp3_pp r3.y, r5, r9
    add_pp r3.y, r3.y, -c31.w
    mul_pp r8.xyz, r3.y, r8
    add r3.y, -r9.w, c32.x
    rcp r3.z, r9.w
    cmp r3.y, r3.y, c32.y, r3.z
    mul_pp r8.xyz, r3.y, r8
    mul_pp r7.xyz, r4.x, r7
    min_pp r9.xyz, r7, r8
    mul_pp r7.xyz, r4.x, r8
    max_pp r8.xyz, r9, r7
    if_lt -c4.w, r3.w
      nrm_pp r7.xyz, r4.yzww
      add r9.xyz, -r0, c2
      rcp r10.x, r7.x
      rcp r10.y, r7.y
      rcp r10.z, r7.z
      mul_pp r9.xyz, r9, r10
      add r11.xyz, -r0, c3
      mul_pp r10.xyz, r10, r11
      cmp_pp r9.xyz, -r7, r10, r9
      min_pp r3.y, r9.y, r9.x
      min_pp r4.x, r9.z, r3.y
      add r9.xyz, r0, -c4
      mad_pp r7.xyz, r7, r4.x, r9
    else
      mov_pp r7.xyz, r4.yzww
    endif
    pow_pp r4.x, r3.x, c32.z
    mad_pp r3.y, r4.x, -c33.x, c33.y
    mul_pp r3.y, r3.y, r4.x
    mul_pp r7.w, r3.y, c32.w
    texldl_pp r9, r7, s2
    pow_pp r3.y, r9.w, c5.y
    mul_pp r3.y, r3.y, c5.x
    mul_pp r10.xyz, r9, r3.y
    mov r5.w, c3.w
    if_lt r5.w, c33.z
      if_lt -c8.w, r3.w
        nrm_pp r11.xyz, r4.yzww
        add r12.xyz, -r0, c6
        rcp r13.x, r11.x
        rcp r13.y, r11.y
        rcp r13.z, r11.z
        mul_pp r12.xyz, r12, r13
        add r14.xyz, -r0, c7
        mul_pp r13.xyz, r13, r14
        cmp_pp r12.xyz, -r11, r13, r12
        min_pp r3.z, r12.y, r12.x
        min_pp r4.x, r12.z, r3.z
        add r0.xyz, r0, -c8
        mad_pp r7.xyz, r11, r4.x, r0
      else
        mov_pp r7.xyz, r4.yzww
      endif
      texldl_pp r4, r7, s3
      pow_pp r0.x, r4.w, c9.y
      mul_pp r0.x, r0.x, c9.x
      mul_pp r0.xyz, r4, r0.x
      mad r3.yzw, r3.y, r9.xxyz, -r0.xxyz
      mad_pp r10.xyz, c3.w, r3.yzww, r0
    endif
    nrm_pp r0.xyz, r5
    lrp_pp r3.yzw, r0.w, r1.xxyz, c10.xxyz
    mad_pp r0.w, r0.w, -c10.w, c10.w
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.x, r0, r2
    mul_pp r0.y, r3.x, r3.x
    abs r0.z, c11.w
    mul_pp r2.x, r0.y, r3.x
    mad_pp r2.x, r2.x, -c35.x, c35.y
    mad_pp r0.y, r0.y, r0.y, c34.y
    rcp_pp r0.y, r0.y
    cmp_pp r0.y, -r0.z, r2.x, r0.y
    add_pp r0.z, -r0.w, c34.y
    mad_sat_pp r0.z, r1.w, r2.w, r0.z
    mul_pp r2.xyz, r10, r0.y
    add_pp r0.y, -r0.x, c34.y
    cmp_pp r0.x, r0.x, r0.y, c34.y
    mul_pp r0.y, r0.x, r0.x
    mul_pp r0.y, r0.y, r0.y
    mul_pp r0.x, r0.x, r0.y
    lrp_pp r4.xyz, r0.x, r0.z, r3.yzww
    mul_pp r0.xyz, r2, r4
    mad_pp r0.xyz, r1, r8, r0
    add_pp oC0.xyz, r6, r0
    mov_pp oC0.w, r6.w

// approximately 179 instruction slots used (10 texture, 169 arithmetic)
