// CRC32: 8B4752F1 |    Unity headers extracted from Reflect-BumpSpec_Fresnel_Additive.shader
//    Shader "Dreamfall/FX/Fresnel Reflective Additive" {
//      Properties {
//       _Col ("Main Color", Color) = (1,1,1,1)
//       _ReflectColor ("Reflection Color", Color) = (1,1,1,0.5)
//       _Fresnel ("Reflection Fresnel Exponent", Range(0.01,6)) = 1
//       _MainTex ("Base (RGB) RefStrGloss (A)", 2D) = "white" { }
//       _Cube ("Reflection Cubemap", CUBE) = "" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _RefMult ("Reflect Amount", Float) = 1
//      }
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 5/5 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          Blend One One
//          GpuProgramID 298897
//          Program "fp" {
//            SubProgram "d3d9 " {
//              GpuProgramIndex 186
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Reflect-BumpSpec_Fresnel_Additive.shader.decompressed:
//   API d3d9
//   Shader model ps_3_0
//   undeciphered1: 125 3 -1
//   Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
//   undeciphered3: 0 0 1
//   Vector 6 [_Col]
//   Float 8 [_Fresnel]
//   Float 9 [_RefMult]
//   Vector 7 [_ReflectColor]
//   Vector 5 [_SpecColor]
//   Vector 0 [_WorldSpaceCameraPos]
//   Vector 4 [unity_ColorSpaceLuminance]
//   Vector 3 [unity_SHAb]
//   Vector 2 [unity_SHAg]
//   Vector 1 [unity_SHAr]
//   SetTexture 0 [_MainTex] 2D 0
//   SetTexture 1 [_BumpMap] 2D 1
//   SetTexture 2 [_Cube] CUBE 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//   using 3Dmigoto command line v1.2.36 on Sun Jun 19 21:59:18 2016
//
//
// Parameters:
//
//   sampler2D _BumpMap;
//   float4 _Col;
//   samplerCUBE _Cube;
//   float _Fresnel;
//   sampler2D _MainTex;
//   float _RefMult;
//   float4 _ReflectColor;
//   float4 _SpecColor;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   _WorldSpaceCameraPos      c0       1
//   unity_SHAr                c1       1
//   unity_SHAg                c2       1
//   unity_SHAb                c3       1
//   unity_ColorSpaceLuminance c4       1
//   _SpecColor                c5       1
//   _Col                      c6       1
//   _ReflectColor             c7       1
//   _Fresnel                  c8       1
//   _RefMult                  c9       1
//   _MainTex                  s0       1
//   _BumpMap                  s1       1
//   _Cube                     s2       1
//

    ps_3_0
    def c10, 0.100000001, 32, 2, -1
    def c11, 1.05499995, -0.0549999997, 0, 0
    def c12, 0, 0.5, 0.416666657, 1
    dcl_texcoord v0.xy
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4_pp v4.xyz
    dcl_texcoord6_pp v5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

texldl r31, c220.z, s13

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --fix-unity-reflection --only-autofixed --ignore-register-errors Dreamfall_FX_Fresnel Reflective Additive/fp/8B4752F1.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    texld_pp r0, v0, s1
    mad_pp r0.xy, r0.wyzw, c10.z, c10.w
    dp2add_sat_pp r0.w, r0, r0, c12.x
    add_pp r0.w, -r0.w, -c10.w
    rsq_pp r0.w, r0.w
    rcp_pp r0.z, r0.w
    dp3 r1.x, v1, r0
    dp3 r1.y, v2, r0
    dp3 r1.z, v3, r0
    mad_pp oC2.xyz, r1, c12.y, c12.y
    mov r2.xyw, c12
    mul_pp r3.xyz, r2.y, c1
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    rcp_pp r1.w, r0.w
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r1, r3
    mad_pp r0.w, r0.w, c12.y, c12.y
    rcp r2.z, c1.w
    mad_pp r3.x, r1.w, r2.z, -c10.w
    rcp r3.x, r3.x
    mad_pp r3.y, r1.w, -r2.z, -c10.w
    mul_pp r2.z, r1.w, r2.z
    mad_pp r3.zw, r2.z, c10_abs.z, c10_abs.xywz
    mul_pp r2.z, r3.x, r3.y
    pow_pp r4.x, r0.w, r3.z
    mul_pp r0.w, r3.w, r4.x
    mad_pp r3.x, r3.w, -r4.x, -c10.w
    mad_pp r0.w, r2.z, r3.x, r0.w
    mul_pp r0.w, r0.w, c1.w
    cmp_pp r3.x, -r1.w, c1.w, r0.w
    mul_pp r4.xyz, r2.y, c2
    dp3_pp r0.w, r4, r4
    rsq_pp r0.w, r0.w
    rcp_pp r1.w, r0.w
    mul_pp r4.xyz, r0.w, r4
    dp3_pp r0.w, r1, r4
    mad_pp r0.w, r0.w, c12.y, c12.y
    rcp r2.z, c2.w
    mad_pp r3.w, r1.w, r2.z, -c10.w
    rcp r3.w, r3.w
    mad_pp r4.x, r1.w, -r2.z, -c10.w
    mul_pp r2.z, r1.w, r2.z
    mad_pp r4.yz, r2.z, c10_abs.z, c10_abs.xwzw
    mul_pp r2.z, r3.w, r4.x
    pow_pp r3.w, r0.w, r4.y
    mul_pp r0.w, r3.w, r4.z
    mad_pp r3.w, r4.z, -r3.w, -c10.w
    mad_pp r0.w, r2.z, r3.w, r0.w
    mul_pp r0.w, r0.w, c2.w
    cmp_pp r3.y, -r1.w, c2.w, r0.w
    mul_pp r4.xyz, r2.y, c3
    dp3_pp r0.w, r4, r4
    rsq_pp r0.w, r0.w
    mul_pp r4.xyz, r0.w, r4
    rcp_pp r0.w, r0.w
    dp3_pp r1.w, r1, r4
    mad_pp r1.w, r1.w, c12.y, c12.y
    rcp r2.y, c3.w
    mul_pp r2.z, r0.w, r2.y
    mad_pp r4.xy, r2.z, c10_abs.z, c10_abs.wzzw
    pow_pp r2.z, r1.w, r4.x
    mul_pp r1.w, r2.z, r4.y
    mad_pp r2.z, r4.y, -r2.z, -c10.w
    mad_pp r3.w, r0.w, r2.y, -c10.w
    mad_pp r2.y, r0.w, -r2.y, -c10.w
    rcp r3.w, r3.w
    mul_pp r2.y, r2.y, r3.w
    mad_pp r1.w, r2.y, r2.z, r1.w
    mul_pp r1.w, r1.w, c3.w
    cmp_pp r3.z, -r0.w, c3.w, r1.w
    add_pp r3.xyz, r3, v5
    max_pp r4.xyz, r3, c12.x
    log_pp r3.x, r4.x
    log_pp r3.y, r4.y
    log_pp r3.z, r4.z
    mul_pp r3.xyz, r3, c12.z
    exp_pp r5.x, r3.x
    exp_pp r5.y, r3.y
    exp_pp r5.z, r3.z
    mad_pp r3.xyz, r5, c11.x, c11.y
    max_pp r5.xyz, r3, c12.x
    abs r0.w, c4.w
    cmp_pp r3.xyz, -r0.w, r5, r4
    mov r4.x, v1.w
    mov r4.y, v2.w
    mov r4.z, v3.w
    add r4.xyz, -r4, r30
    nrm_pp r5.xyz, r4
    dp3 r0.w, -r5, r1
    add r0.w, r0.w, r0.w
    mad r1.xyz, r1, -r0.w, -r5
    texld_pp r1, r1, s2
    nrm_pp r4.xyz, v4
    dp3 r0.x, r4, r0
    add r0.x, -r0.x, -c10.w
    mov r4.x, c10.x
    max_pp r0.y, c8.x, r4.x
    min_pp r1.w, r0.y, c10.y
    pow r2.y, r0.x, r1.w
    mul_pp r0.xyz, r1, r2.y
    texld_pp r1, v0, s0
    mul_pp r0.w, r1.w, c9.x
    mul_pp r0.xyz, r0.w, r0
    mul_pp r0.xyz, r0, c7
    mad_pp r0.xyz, r1, c6, r0
    mul_pp r1.xyz, r3, r0
    mov_pp oC0.xyz, r0
    exp_pp oC3.x, -r1.x
    exp_pp oC3.y, -r1.y
    exp_pp oC3.z, -r1.z
    mov_pp oC0.w, -c10.w
    mul_pp oC1, r2.wwwx, c5.xyzx
    mov_pp oC2.w, -c10.w
    mov_pp oC3.w, -c10.w

// approximately 128 instruction slots used (3 texture, 125 arithmetic)
