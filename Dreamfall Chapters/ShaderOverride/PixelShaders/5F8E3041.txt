// CRC32: 5F8E3041 | Unity headers extracted from Standard_CubemapReflection.shader
// Shader "Dreamfall/Unity5/Standard_CubemapReflection" {
//   Properties {
//    _Color ("Main Color", Color) = (1,1,1,1)
//    _ReflectColor ("Reflect Color", Color) = (0.5,0.5,0.5,1)
//    _Fresnel ("Specular Fresnel Exponent", Range(0.01,16)) = 1
//    _MainTex ("Base (RGB) RefStrGloss (A)", 2D) = "white" { }
//    _BumpMap ("Normalmap", 2D) = "bump" { }
//    _Cube ("Reflection Cubemap", CUBE) = "" { }
//    _RefMul ("Reflection Boost", Float) = 1
//    _AlbedoBlend ("0 = lighting modifies reflection", Range(0,1)) = 1
//    _AlphaFactor ("AlphaFactor", Range(0,1)) = 1
//    _glossHigh ("Gloss High", Range(0,1)) = 1
//    _glossLow ("Gloss Low", Range(0,1)) = 0
//    _MetalNess ("Metalness", Range(0,1)) = 0
//    _MetalNessAlphaFactor ("Metalness Alpha Factor", Range(0,1)) = 1
//   }
//   Fallback "Reflective/Bumped Diffuse"
//   SubShader 1/1 {
//     LOD 400
//     Tags { "RenderType"="Opaque" }
//     Pass 1/4 {
//       Name "FORWARD"
//       Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//       GpuProgramID 16763
//       Program "fp" {
//         SubProgram "d3d9 " {
//           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP" "LIGHTMAP_ON" "SHADOWS_SCREEN" }
//           Float 18 [_AlbedoBlend]
//           Float 19 [_AlphaFactor]
//           Vector 14 [_Color]
//           Float 16 [_Fresnel]
//           Float 22 [_MetalNess]
//           Float 23 [_MetalNessAlphaFactor]
//           Float 17 [_RefMul]
//           Vector 15 [_ReflectColor]
//           Vector 0 [_WorldSpaceCameraPos]
//           Float 20 [_glossHigh]
//           Float 21 [_glossLow]
//           Vector 11 [unity_ColorSpaceDielectricSpec]
//           Vector 13 [unity_DynamicLightmap_HDR]
//           Vector 1 [unity_FogColor]
//           Vector 2 [unity_FogParams]
//           Vector 12 [unity_Lightmap_HDR]
//           Vector 3 [unity_SpecCube0_BoxMax]
//           Vector 4 [unity_SpecCube0_BoxMin]
//           Vector 6 [unity_SpecCube0_HDR]
//           Vector 5 [unity_SpecCube0_ProbePosition]
//           Vector 7 [unity_SpecCube1_BoxMax]
//           Vector 8 [unity_SpecCube1_BoxMin]
//           Vector 10 [unity_SpecCube1_HDR]
//           Vector 9 [unity_SpecCube1_ProbePosition]
//           SetTexture 0 [unity_Lightmap] 2D 0
//           SetTexture 1 [unity_LightmapInd] 2D 1
//           SetTexture 2 [unity_DynamicLightmap] 2D 2
//           SetTexture 3 [unity_DynamicDirectionality] 2D 3
//           SetTexture 4 [unity_SpecCube0] CUBE 4
//           SetTexture 5 [unity_SpecCube1] CUBE 5
//           SetTexture 6 [_ShadowMapTexture] 2D 6
//           SetTexture 7 [_MainTex] 2D 7
//           SetTexture 8 [_BumpMap] 2D 8
//           SetTexture 9 [_Cube] CUBE 9
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    def c24, 0.100000001, 32, 2, -1
    def c25, 0, 0.333333343, -0.5, 0.5
    def c26, 0.75, 7, 0.999989986, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5
    dcl_texcoord6 v6.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_cube s4
    dcl_cube s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_cube s9

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

texldl r31, c220.z, s13

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --fix-unity-reflection --only-autofixed --ignore-register-errors Dreamfall_Unity5_Standard_CubemapReflection/fp/5F8E3041.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mov r0.x, v1.w
    mov r0.y, v2.w
    mov r0.z, v3.w
    add r1.xyz, -r0, r30
    nrm_pp r2.xyz, r1
    mul r1.xyz, r2.y, v2
    mad r1.xyz, v1, r2.x, r1
    mad_pp r1.xyz, v3, r2.z, r1
    mov r3.xw, c24
    max_pp r0.w, c16.x, r3.x
    min_pp r1.w, r0.w, c24.y
    texld_pp r4, v0, s7
    mul_pp r5, r4, c14
    texld_pp r6, v0.zwzw, s8
    mad_pp r3.xy, r6.wyzw, c24.z, c24.w
    dp2add_sat_pp r0.w, r3, r3, c25.x
    add_pp r0.w, -r0.w, -c24.w
    rsq_pp r0.w, r0.w
    rcp_pp r3.z, r0.w
    add_pp r6.xy, r5.wyzw, r5.wxzw
    max_pp r0.w, r6.x, c23.x
    min_pp r2.w, r0.w, -c24.w
    mul_pp r0.w, r2.w, c22.x
    mad_pp r2.w, r4.z, c14.z, r6.y
    mul_pp r4.w, r2.w, c25.y
    mov r6.xyw, c25
    mad_pp r2.w, r2.w, -r6.y, c20.x
    mad_pp r2.w, c21.x, r2.w, r4.w
    max_pp r4.w, r5.w, c19.x
    dp3 r7.x, v1, r3
    dp3 r7.y, v2, r3
    dp3 r7.z, v3, r3
    dp3 r5.w, -r2, r7
    add r5.w, r5.w, r5.w
    mad r8.xyz, r7, -r5.w, -r2
    texld_pp r9, r8, s9
    nrm r10.xyz, r1
    dp3 r1.x, r10, r3
    add r1.x, -r1.x, -c24.w
    pow_pp r3.x, r1.x, r1.w
    mul_pp r1.xyz, r3.x, r9
    mul_pp r1.xyz, r1, c15
    mul r1.xyz, r1, c17.x
    mad r3.xyz, r4, -c14, -r3.w
    mad r3.xyz, c18.x, r3, r5
    texldp_pp r9, v5, s6
    mad_pp r1.w, r2.w, -r4.w, -c24.w
    texld_pp r10, v4, s0
    pow_pp r3.w, r10.w, c12.y
    mul_pp r3.w, r3.w, c12.x
    mul_pp r9.yzw, r10.xxyz, r3.w
    texld_pp r11, v4, s1
    add_pp r11.xyz, r11, c25.z
    dp3_pp r3.w, r7, r11
    add_pp r3.w, r3.w, c25.w
    mul_pp r9.yzw, r3.w, r9
    rcp r3.w, r11.w
    mul_pp r9.yzw, r3.w, r9
    mul_pp r10.xyz, r9.x, r10
    min_pp r11.xyz, r10, r9.yzww
    mul_pp r9.xyz, r9.x, r9.yzww
    max_pp r10.xyz, r11, r9
    texld_pp r9, v4.zwzw, s2
    mul_pp r3.w, r9.w, c13.x
    mul_pp r9.xyz, r9, r3.w
    log_pp r11.x, r9.x
    log_pp r11.y, r9.y
    log_pp r11.z, r9.z
    mul_pp r9.xyz, r11, c13.y
    exp_pp r11.x, r9.x
    exp_pp r11.y, r9.y
    exp_pp r11.z, r9.z
    texld_pp r9, v4.zwzw, s3
    add_pp r9.xyz, r9, c25.z
    dp3_pp r3.w, r7, r9
    add_pp r3.w, r3.w, c25.w
    mul_pp r9.xyz, r3.w, r11
    rcp r3.w, r9.w
    mad_pp r9.xyz, r9, r3.w, r10
    if_lt -c5.w, r6.x
    nrm_pp r10.xyz, r8
    add r11.xyz, -r0, c3
    rcp r12.x, r10.x
    rcp r12.y, r10.y
    rcp r12.z, r10.z
    mul_pp r11.xyz, r11, r12
    add r13.xyz, -r0, c4
    mul_pp r12.xyz, r12, r13
    cmp_pp r11.xyz, -r10, r12, r11
    min_pp r3.w, r11.y, r11.x
    min_pp r5.w, r11.z, r3.w
    mov r11.xyz, c4
    add r11.xyz, r11, c3
    mad r12.xyz, r11, r6.w, -c5
    add r12.xyz, r0, r12
    mad r10.xyz, r10, r5.w, r12
    mad_pp r10.xyz, r11, -c25.w, r10
    else
    mov_pp r10.xyz, r8
    endif
    pow_pp r3.w, r1.w, c26.x
    mul_pp r10.w, r3.w, c26.y
    texldl_pp r11, r10, s4
    pow_pp r1.w, r11.w, c6.y
    mul_pp r1.w, r1.w, c6.x
    mul_pp r12.xyz, r11, r1.w
    mov r3.w, c4.w
    if_lt r3.w, c26.z
    if_lt -c9.w, r6.x
    nrm_pp r6.xyz, r8
    add r13.xyz, -r0, c7
    rcp r14.x, r6.x
    rcp r14.y, r6.y
    rcp r14.z, r6.z
    mul_pp r13.xyz, r13, r14
    add r15.xyz, -r0, c8
    mul_pp r14.xyz, r14, r15
    cmp_pp r13.xyz, -r6, r14, r13
    min_pp r3.w, r13.y, r13.x
    min_pp r5.w, r13.z, r3.w
    mov r13.xyz, c7
    add r13.xyz, r13, c8
    mad r14.xyz, r13, r6.w, -c9
    add r0.xyz, r0, r14
    mad r0.xyz, r6, r5.w, r0
    mad_pp r10.xyz, r13, -c25.w, r0
    else
    mov_pp r10.xyz, r8
    endif
    texldl_pp r6, r10, s5
    pow_pp r0.x, r6.w, c10.y
    mul_pp r0.x, r0.x, c10.x
    mul_pp r0.xyz, r6, r0.x
    mad r6.xyz, r1.w, r11, -r0
    mad_pp r12.xyz, c4.w, r6, r0
    endif
    nrm_pp r0.xyz, r7
    mov r6.xyz, c14
    mad_pp r4.xyz, r4, r6, -c11
    mad_pp r4.xyz, r0.w, r4, c11
    mad_pp r0.w, r0.w, -c11.w, c11.w
    mul_pp r5.xyz, r0.w, r5
    dp3_pp r0.x, r0, r2
    add_pp r0.yz, -r0.xwxw, -c24.w
    mad_sat_pp r0.y, r2.w, r4.w, r0.y
    cmp_pp r0.x, r0.x, r0.z, -c24.w
    mul_pp r0.z, r0.x, r0.x
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    lrp_pp r2.xyz, r0.x, r0.y, r4
    mul_pp r0.xyz, r2, r12
    mad_pp r0.xyz, r5, r9, r0
    mad_pp r0.xyz, r1, r3, r0
    mul r0.w, c2.y, v6.x
    exp_sat r0.w, -r0.w
    add r0.xyz, r0, -c1
    mad_pp oC0.xyz, r0.w, r0, c1
    mov_pp oC0.w, -c24.w
