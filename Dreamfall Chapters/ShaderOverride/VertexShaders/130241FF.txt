// CRC32: 130241FF |    Unity headers extracted from SpeedTreeBillboard.shader
//    Shader "Nature/SpeedTree Billboard" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _SpecColor ("Specular Color", Color) = (0.5,0.5,0.5,0)
//       _HueVariation ("Hue Variation", Color) = (1,0.5,0,0.1)
//       _Shininess ("Shininess", Range(0.01,1)) = 0.078125
//       _MainTex ("Base (RGB)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _Cutoff ("Alpha cutoff", Range(0,1)) = 0.5
//      [MaterialEnum(None,0,Fastest,1)]  _WindQuality ("Wind Quality", Range(0,1)) = 0
//      }
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 1/2 {
//        LOD 400
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="TransparentCutout" }
//        Pass 1/7 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "DisableBatching"="LodFading" "RenderType"="TransparentCutout" }
//          Cull Off
//          GpuProgramID 19329
//          Program "vp" {
//            SubProgram "d3d9 " {
//              GpuProgramIndex 102
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from SpeedTreeBillboard.shader.decompressed:
//   API d3d9
//   Shader model vs_3_0
//   undeciphered1: 178 -1 -1
//   Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" "VERTEXLIGHT_ON" "BILLBOARD_FACE_CAMERA_POS" "EFFECT_BUMP" }
//   undeciphered3: 25 3 0 0 3 4 4 5 1
//   Vector 41 [_Color]
//   Vector 40 [_ST_WindBranchAdherences]
//   Vector 39 [_ST_WindGlobal]
//   Vector 38 [_ST_WindVector]
//   Float 37 [_WindEnabled]
//   Float 36 [_WindQuality]
//   Vector 33 [unity_4LightAtten0]
//   Vector 30 [unity_4LightPosX0]
//   Vector 31 [unity_4LightPosY0]
//   Vector 32 [unity_4LightPosZ0]
//   Vector 42 [unity_BillboardCameraParams]
//   Vector 0 [unity_BillboardImageTexCoords0]
//   Vector 1 [unity_BillboardImageTexCoords1]
//   Vector 2 [unity_BillboardImageTexCoords2]
//   Vector 3 [unity_BillboardImageTexCoords3]
//   Vector 4 [unity_BillboardImageTexCoords4]
//   Vector 5 [unity_BillboardImageTexCoords5]
//   Vector 6 [unity_BillboardImageTexCoords6]
//   Vector 7 [unity_BillboardImageTexCoords7]
//   Vector 8 [unity_BillboardImageTexCoords8]
//   Vector 9 [unity_BillboardImageTexCoords9]
//   Vector 10 [unity_BillboardImageTexCoords10]
//   Vector 11 [unity_BillboardImageTexCoords11]
//   Vector 12 [unity_BillboardImageTexCoords12]
//   Vector 13 [unity_BillboardImageTexCoords13]
//   Vector 14 [unity_BillboardImageTexCoords14]
//   Vector 15 [unity_BillboardImageTexCoords15]
//   Vector 43 [unity_BillboardInfo]
//   Vector 44 [unity_BillboardSize]
//   Vector 35 [unity_ColorSpaceLuminance]
//   Vector 16 [unity_LightColor0]
//   Vector 17 [unity_LightColor1]
//   Vector 18 [unity_LightColor2]
//   Vector 19 [unity_LightColor3]
//   Vector 34 [unity_WorldTransformParams]
//   Matrix 24 [_Object2World] 3
//   Matrix 27 [_World2Object] 3
//   Matrix 20 [glstate_matrix_mvp]
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//   using 3Dmigoto command line v1.2.36 on Sun Jun 19 22:12:23 2016
//
//
// Parameters:
//
//   float4 _Color;
//   row_major float4x4 _Object2World;
//   float4 _ST_WindBranchAdherences;
//   float4 _ST_WindGlobal;
//   float4 _ST_WindVector;
//   float _WindEnabled;
//   float _WindQuality;
//   row_major float4x4 _World2Object;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_BillboardCameraParams;
//   float4 unity_BillboardImageTexCoords[16];
//   float4 unity_BillboardInfo;
//   float4 unity_BillboardSize;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_LightColor[8];
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_BillboardImageTexCoords c0      16
//   unity_LightColor              c16      4
//   glstate_matrix_mvp            c20      4
//   _Object2World                 c24      3
//   _World2Object                 c27      3
//   unity_4LightPosX0             c30      1
//   unity_4LightPosY0             c31      1
//   unity_4LightPosZ0             c32      1
//   unity_4LightAtten0            c33      1
//   unity_WorldTransformParams    c34      1
//   unity_ColorSpaceLuminance     c35      1
//   _WindQuality                  c36      1
//   _WindEnabled                  c37      1
//   _ST_WindVector                c38      1
//   _ST_WindGlobal                c39      1
//   _ST_WindBranchAdherences      c40      1
//   _Color                        c41      1
//   unity_BillboardCameraParams   c42      1
//   unity_BillboardInfo           c43      1
//   unity_BillboardSize           c44      1
//

    vs_3_0
    def c45, 0.0208350997, -0.0851330012, -0.330299497, 0.999866009
    def c46, -1, 0, 1, 0.180141002
    def c47, -2, 1.57079637, -3.14159274, 6.28318548
    def c48, -0.5, 0.25, 0.800000012, 0.5
    def c49, 2, -1, 3, 0.0125228781
    def c50, 0.305306017, 0.682171106, 0, 0
    dcl_position v0
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5.xyz
    dcl_texcoord5 o6.xyz
    dcl_texcoord7 o7.x
    mov r0.x, c24.w
    mov r0.y, c25.w
    mov r0.z, c26.w
    add r0.xyz, r0, v0
    add r1.xyz, -r0, c42
    dp3 r0.z, r1, r1
    rsq r0.z, r0.z
    mul r1.xy, r0.z, r1.xzzw
    mul r1.zw, r1.y, c46.xyxy
    mul r2.xyz, r1.ywxw, c46.xzzw
    dp3 r0.z, r1.zwxw, r2
    rsq r0.z, r0.z
    mul r1.xyz, r0.z, r2
    max r0.z, r1_abs.z, r1_abs.x
    rcp r0.z, r0.z
    min r0.w, r1_abs.z, r1_abs.x
    mul r0.z, r0.z, r0.w
    mul r0.w, r0.z, r0.z
    mad r1.w, r0.w, c45.x, c45.y
    mad r1.w, r0.w, r1.w, c46.w
    mad r1.w, r0.w, r1.w, c45.z
    mad r0.w, r0.w, r1.w, c45.w
    mul r0.z, r0.w, r0.z
    mad r0.w, r0.z, c47.x, c47.y
    slt r1.w, r1_abs.z, r1_abs.x
    mad r0.z, r0.w, r1.w, r0.z
    slt r0.w, r1.z, -r1.z
    mad r0.z, r0.w, c47.z, r0.z
    add r0.w, r0.z, r0.z
    min r1.w, r1.z, -r1.x
    slt r1.w, r1.w, -r1.w
    max r2.x, r1.z, -r1.x
    sge r2.x, r2.x, -r2.x
    mul r1.w, r1.w, r2.x
    mad r0.z, r1.w, -r0.w, r0.z
    slt r0.w, r0.z, c46.y
    mad r0.z, r0.w, c47.w, r0.z
    add r0.z, r0.z, v2.z
    mov r0.w, c48.w
    mad r0.z, r0.z, c43.y, r0.w
    frc r0.w, r0.z
    add r0.z, -r0.w, r0.z
    rcp r0.w, c43.x
    mul r0.z, r0.w, r0.z
    frc r0.w, r0_abs.z
    sge r0.z, r0.z, -r0.z
    lrp r1.w, r0.z, r0.w, -r0.w
    mul r0.z, r1.w, c43.x
    frc r0.w, r0.z
    add r0.z, r0.z, -r0.w
    mova a0.x, r0.z
    mad r0.zw, c0[a0.x], -v1.xyyx, c0[a0.x].xyxy
    mad r2.xy, c0[a0.x].zwzw, v1, c0[a0.x]
    mov r3.yz, c46
    slt r1.w, c0[a0.x].w, r3.y
    add r0.zw, r0, -r2.xyxy
    mad o5.xy, r1.w, r0.zwzw, r2
    add r2.x, r0.x, v2.w
    mad r2.y, v2.w, c48.z, r0.y
    add r0.xy, r2, c48.w
    frc r0.xy, r0
    mad r0.xy, r0, c49.x, c49.y
    mul r0.zw, r0_abs.xyxy, r0_abs.xyxy
    mad r0.xy, r0_abs, -c49.x, c49.z
    mad r0.xy, r0.zwzw, r0, c48.x
    add r0.xy, r0, r0
    mad r0.x, r0.y, r0.y, r0.x
    rcp r0.y, c39.z
    mul r0.z, r0.y, c40.x
    mad r0.x, c39.y, r0.x, r0.z
    mad r0.z, v1.y, c44.y, c44.z
    mul r2.y, r0.z, v2.y
    mad r0.y, r0.y, -c48.y, r2.y
    max r0.y, r0.y, c46.y
    mul r0.z, r0.y, c39.z
    pow r1.w, r0.z, c39.w
    mad r0.y, r0.y, -c39.z, r1.w
    slt r0.w, -r0_abs.z, r0_abs.z
    mad r0.y, r0.w, r0.y, r0.z
    mul r0.x, r0.y, r0.x
    add r0.y, c48.x, v1.x
    mul r0.y, r0.y, c44.x
    mul r0.y, r0.y, v2.x
    mul r2.xz, r1, r0.y
    mad r0.xz, c38, r0.x, r2
    mov r0.y, r2.y
    nrm r4.xyz, r0
    dp3 r0.x, r2, r2
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    mad r0.xyz, r4, r0.x, -r2
    mov r3.x, c36.x
    mul r0.w, r3.x, c37.x
    slt r0.w, c46.y, r0.w
    mad r0.xyz, r0.w, r0, r2
    add r0.xyz, r0, v0
    mov r0.w, c46.z
    dp4 o0.x, c20, r0
    dp4 o0.y, c21, r0
    dp4 o0.w, c23, r0
    dp4 r1.w, c24, r0
    add r2, -r1.w, c30
    mov o1.w, r1.w
    dp4 r1.w, c25, r0
    add r4, -r1.w, c31
    mov o2.w, r1.w
    mul r3.xyw, -r1.x, c29.zxzy
    mad r3.xyw, c27.zxzy, r1.z, r3
    dp3 r1.w, r3.xyww, r3.xyww
    rsq r1.w, r1.w
    mul r3.xyw, r1.w, r3
    mul r5, r3.w, r4
    mul r4, r4, r4
    mad r4, r2, r2, r4
    mad r2, r2, r3.y, r5
    dp4 r1.w, c26, r0
    dp4 r0.x, c22, r0
    add r5, -r1.w, c32
    mov o3.w, r1.w
    mad r2, r5, r3.x, r2
    mad r4, r5, r5, r4
    rsq r5.x, r4.x
    rsq r5.y, r4.y
    rsq r5.z, r4.z
    rsq r5.w, r4.w
    mad r4, r4, c33, r3.z
    mul r2, r2, r5
    max r2, r2, c46.y
    rcp r5.x, r4.x
    rcp r5.y, r4.y
    rcp r5.z, r4.z
    rcp r5.w, r4.w
    mul r2, r2, r5
    mul r0.yzw, r2.y, c17.xxyz
    mad r0.yzw, c16.xxyz, r2.x, r0
    mad r0.yzw, c18.xxyz, r2.z, r0
    mad r0.yzw, c19.xxyz, r2.w, r0
    mad r2.xyz, r0.yzww, c50.x, c50.y
    mad r2.xyz, r0.yzww, r2, c49.w
    mad r2.xyz, r0.yzww, r2, -r0.yzww
    abs r1.w, c35.w
    sge r1.w, -r1.w, r1.w
    mad o6.xyz, r1.w, r2, r0.yzww
    mov o0.z, r0.x
    mov o7.x, r0.x
    dp3 r0.z, c24, r1
    dp3 r0.x, c25, r1
    dp3 r0.y, c26, r1
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul r0.xyz, r0.w, r0
    mov o1.x, r0.z
    mul r1.xyz, r0, r3.xyww
    mad r1.xyz, r3.wxyw, r0.yzxw, -r1
    mul r1.xyz, r1, -c34.w
    mov o1.y, r1.x
    mov o1.z, r3.y
    mov o2.x, r0.x
    mov o3.x, r0.y
    mov o2.y, r1.y
    mov o3.y, r1.z
    mov o2.z, r3.w
    mov o3.z, r3.x
    mov o4, c41
    mov o5.z, c46.y

// approximately 169 instruction slots used
