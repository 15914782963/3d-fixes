// CRC32: 28D88030 | Matched 3 variants of 3 shaders: Diffuse Detail, Self-Illumin/Diffuse, Sonic Ether/Emissive/Textured
// 
//    Unity headers extracted from Normal-DiffuseDetail.shader
//    Shader "Diffuse Detail" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _MainTex ("Base (RGB)", 2D) = "white" {}
//       _Detail ("Detail (RGB)", 2D) = "gray" {}
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 250
//        Tags { "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [unity_4LightPosX0]
//              Vector 9 [unity_4LightPosY0]
//              Vector 10 [unity_4LightPosZ0]
//              Vector 11 [unity_4LightAtten0]
//              Vector 12 [unity_LightColor0]
//              Vector 13 [unity_LightColor1]
//              Vector 14 [unity_LightColor2]
//              Vector 15 [unity_LightColor3]
//              Vector 16 [unity_SHAr]
//              Vector 17 [unity_SHAg]
//              Vector 18 [unity_SHAb]
//              Vector 19 [unity_SHBr]
//              Vector 20 [unity_SHBg]
//              Vector 21 [unity_SHBb]
//              Vector 22 [unity_SHC]
//              Vector 23 [unity_Scale]
//              Vector 24 [_MainTex_ST]
//              Vector 25 [_Detail_ST]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from Illumin-Diffuse.shader
//    Shader "Self-Illumin/Diffuse" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" {}
//       _Illum ("Illumin (A)", 2D) = "white" {}
//       _EmissionLM ("Emission (Lightmapper)", Float) = 0
//      }
//      Fallback "Self-Illumin/VertexLit"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [unity_4LightPosX0]
//              Vector 9 [unity_4LightPosY0]
//              Vector 10 [unity_4LightPosZ0]
//              Vector 11 [unity_4LightAtten0]
//              Vector 12 [unity_LightColor0]
//              Vector 13 [unity_LightColor1]
//              Vector 14 [unity_LightColor2]
//              Vector 15 [unity_LightColor3]
//              Vector 16 [unity_SHAr]
//              Vector 17 [unity_SHAg]
//              Vector 18 [unity_SHAb]
//              Vector 19 [unity_SHBr]
//              Vector 20 [unity_SHBg]
//              Vector 21 [unity_SHBb]
//              Vector 22 [unity_SHC]
//              Vector 23 [unity_Scale]
//              Vector 24 [_MainTex_ST]
//              Vector 25 [_Illum_ST]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from SEEmissiveTextured.shader
//    Shader "Sonic Ether/Emissive/Textured" {
//      Properties {
//       _EmissionColor ("Emission Color", Color) = (1,1,1,1)
//       _DiffuseColor ("Diffuse Color", Color) = (1,1,1,1)
//       _MainTex ("Diffuse Texture", 2D) = "White" {}
//       _Illum ("Emission Texture", 2D) = "white" {}
//       _EmissionGain ("Emission Gain", Range(0,1)) = 0.5
//      }
//      Fallback "Self-Illumin/VertexLit"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [unity_4LightPosX0]
//              Vector 9 [unity_4LightPosY0]
//              Vector 10 [unity_4LightPosZ0]
//              Vector 11 [unity_4LightAtten0]
//              Vector 12 [unity_LightColor0]
//              Vector 13 [unity_LightColor1]
//              Vector 14 [unity_LightColor2]
//              Vector 15 [unity_LightColor3]
//              Vector 16 [unity_SHAr]
//              Vector 17 [unity_SHAg]
//              Vector 18 [unity_SHAb]
//              Vector 19 [unity_SHBr]
//              Vector 20 [unity_SHBg]
//              Vector 21 [unity_SHBb]
//              Vector 22 [unity_SHC]
//              Vector 23 [unity_Scale]
//              Vector 24 [_MainTex_ST]
//              Vector 25 [_Illum_ST]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

// Torch lens in inventory

    vs_3_0
    def c26, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2

dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2
dcl_position o3


def c7, 0, 1, 0.0625, 0.5
dcl_2d s0

    mul r3.xyz, v1, c23.w
    dp3 r4.x, r3, c4
    dp3 r3.w, r3, c5
    dp3 r3.x, r3, c6
    dp4 r0.x, v0, c5
    add r1, -r0.x, c9
    mul r2, r3.w, r1
    dp4 r0.x, v0, c4
    add r0, -r0.x, c8
    mul r1, r1, r1
    mov r4.z, r3.x
    mov r4.w, c26.x
    mad r2, r4.x, r0, r2
    dp4 r4.y, v0, c6
    mad r1, r0, r0, r1
    add r0, -r4.y, c10
    mad r1, r0, r0, r1
    mad r0, r3.x, r0, r2
    mul r2, r1, c11
    mov r4.y, r3.w
    rsq r1.x, r1.x
    rsq r1.y, r1.y
    rsq r1.w, r1.w
    rsq r1.z, r1.z
    mul r0, r0, r1
    add r1, r2, c26.x
    dp4 r2.z, r4, c18
    dp4 r2.y, r4, c17
    dp4 r2.x, r4, c16
    rcp r1.x, r1.x
    rcp r1.y, r1.y
    rcp r1.w, r1.w
    rcp r1.z, r1.z
    max r0, r0, c26.y
    mul r0, r0, r1
    mul r1.xyz, r0.y, c13
    mad r1.xyz, r0.x, c12, r1
    mad r0.xyz, r0.z, c14, r1
    mad r1.xyz, r0.w, c15, r0
    mul r0, r4.xyzz, r4.yzzx
    mul r1.w, r3, r3
    dp4 r4.w, r0, c21
    dp4 r4.z, r0, c20
    dp4 r4.y, r0, c19
    mad r1.w, r4.x, r4.x, -r1
    mul r0.xyz, r1.w, c22
    add r2.xyz, r2, r4.yzww
    add r0.xyz, r2, r0
    add o2.xyz, r0, r1
    mov o1.z, r3.x
    mov o1.y, r3.w
    mov o1.x, r4
    mad o0.zw, v2.xyxy, c25.xyxy, c25
    mad o0.xy, v2, c24, c24.zwzw
    dp4 r5.w, v0, c3
    dp4 r5.z, v0, c2
    dp4 r5.y, v0, c1
    dp4 r5.x, v0, c0

// approximately 58 instruction slots used

// UI depth adjustment inserted with DarkStarSword's shadertool.py:
// shadertool.py -i -f --ui=c200.z VertexShader_48_CRC32_28D88030.txt
texldl r6, c7.z, s0
mad r5.x, r6.x, c200.z, r5.x
mov o3, r5
