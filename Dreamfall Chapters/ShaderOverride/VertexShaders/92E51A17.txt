// Light on snow, menu - halo around window

    vs_3_0
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    def c11, 0.5, -1, 1, -999
    def c12, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1

def c3, 0, 1, 0.0625, 0.5
dcl_2d s0

    mov r0.x, c10
    slt r0.z, c11.w, r0.x
    max r0.z, -r0, r0
    dp4 r0.w, v0, c7
    dp4 r0.x, v0, c4
    dp4 r0.y, v0, c5
    mul r1.xyz, r0.xyww, c11.x
    mul r1.y, r1, c8.x
    dp4 r2.z, v0, c2
    dp4 r2.x, v0, c0
    dp4 r2.y, v0, c1
    mad r3.xyz, -r2, c11.yyzw, v1
    slt r0.z, c12.x, r0
    slt r1.w, v1.z, c12.x
    slt r2.w, c12.x, v1.z
    add r2.w, r1, r2
    add r1.w, -r0.z, c11.z
    mul r1.w, r1, r2
    mad r0.z, r0, c10.x, r1.w
    mul r2.xyz, r2, c11.yyzw
    mad o2.xyz, r0.z, r3, r2
    dp4 r0.z, v0, c6
    mad o1.xy, r1.z, c9.zwzw, r1
    mov r5, r0
    mov o1.zw, r0

// approximately 25 instruction slots used

// Output adjustment inserted with DarkStarSword's shadertool.py:
// shadertool.py -i -f -o - VertexShader_27_CRC32_92E51A17.txt --unadjust=position --condition=c200.x
mov r4.x, c200.x
if_eq r4.x, c3.x
texldl r4, c3.z, s0
add r4.w, r5.w, -r4.y
mul r4.w, r4.w, r4.x
add r5.x, r5.x, -r4.w
endif
mov o0, r5
