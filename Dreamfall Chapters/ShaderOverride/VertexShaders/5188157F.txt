// CRC32: 5188157F | Matched 2 variants of 1 shaders: Enviro/BumpedDiffuseOverlaySM2
// 
//    Unity headers extracted from Blend SM2.shader
//    Shader "Enviro/BumpedDiffuseOverlaySM2" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _Opacity ("Color over opacity", Range(0,1)) = 1
//       _MainTex ("Color over (RGBA)", 2D) = "white" {}
//       _BumpMap ("Normalmap over", 2D) = "bump" {}
//       _MainTex2 ("Color under (RGBA)", 2D) = "white" {}
//       _BumpMap2 ("Normalmap under", 2D) = "bump" {}
//      }
//      Fallback "Bumped Diffuse"
//      SubShader 1/2 {
//        LOD 400
//        Tags { "RenderType"="Opaque" }
//        Pass 4/4 {
//          Name "PREPASS"
//          Tags { "LIGHTMODE"="PrePassFinal" "RenderType"="Opaque" }
//          ZWrite Off
//          Program "vp" {
//            SubProgram "d3d9 " {
// 1:           Keywords { "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" "LIGHTMAP_ON" }
// 2:           Keywords { "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" "LIGHTMAP_ON" }
//              Bind "vertex" Vertex
//              Bind "texcoord" TexCoord0
//              Bind "texcoord1" TexCoord1
//              Matrix 0 [glstate_matrix_mvp]
//              Vector 4 [_ProjectionParams]
//              Vector 5 [_ScreenParams]
//              Vector 6 [unity_LightmapST]
//              Vector 7 [_MainTex_ST]
//              Vector 8 [_BumpMap_ST]
//              Vector 9 [_MainTex2_ST]
//              Vector 10 [_BumpMap2_ST]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
 //def c100, 0, 0, 0, 0
def c247, 0, 0, 0.0625, 0
dcl_2d s0 
    def c11, 0.5, 0, 0, 0
    dcl_texcoord2 o2
dcl_position o10
dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord3 o3
dcl_position v0
    dcl_texcoord v1
    dcl_texcoord1 v2
    dp4 r0.w, v0, c3
    dp4 r0.z, v0, c2
    dp4 r0.x, v0, c0
    dp4 r0.y, v0, c1
mov r10, r0
texldl r24, c247.z, s0	
add r24.y, r0.w, -r24.y
mul r24.x, r24.x, r24.y
add r0.x, r0.x, r24.x
    mul r1.xyz, r0.xyww, c11.x
    mul r1.y, r1, c4.x
    mad o2.xy, r1.z, c5.zwzw, r1
    mov o10, r10 //-----------------r0
    mov o2.zw, r0
    mad o0.zw, v1.xyxy, c8.xyxy, c8
    mad o0.xy, v1, c7, c7.zwzw
    mad o1.zw, v1.xyxy, c10.xyxy, c10
    mad o1.xy, v1, c9, c9.zwzw
    mad o3.xy, v2, c6, c6.zwzw

// approximately 14 instruction slots used


