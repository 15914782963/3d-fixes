// CRC32: 340AB268 | Matched 8 variants of 1 shaders: Hidden/Final Interpolation
// 
//     Unity headers extracted from FinalInterpolation.shader
//     Shader "Hidden/Final Interpolation" {
//       Properties {
//        _ZTest ("", Float) = 8
//       }
//       Fallback Off
//       SubShader 1/1 {
//         Pass 1/1 {
//           ZTest [_ZTest]
//           ZWrite Off
//           Fog { Mode Off }
//           Blend One SrcAlpha
//           Program "vp" {
//             SubProgram "d3d9 " {
// 10:           Keywords { "DIRECTIONAL_SHAFTS" "FLIP_WORKAROUND_ON" "FRUSTUM_SHAFTS" "LIGHT_OFF_SCREEN" "SHOW_SAMPLES_OFF" }
// 40:           Keywords { "DIRECTIONAL_SHAFTS" "FLIP_WORKAROUND_ON" "FRUSTUM_SHAFTS" "LIGHT_OFF_SCREEN" "SHOW_SAMPLES_ON" }
// 01:           Keywords { "DIRECTIONAL_SHAFTS" "FLIP_WORKAROUND_ON" "FRUSTUM_SHAFTS" "LIGHT_ON_SCREEN" "SHOW_SAMPLES_OFF" }
// 04:           Keywords { "DIRECTIONAL_SHAFTS" "FLIP_WORKAROUND_ON" "FRUSTUM_SHAFTS" "LIGHT_ON_SCREEN" "SHOW_SAMPLES_ON" }
// 20:           Keywords { "FLIP_WORKAROUND_ON" "FRUSTUM_SHAFTS" "LIGHT_OFF_SCREEN" "SHOW_SAMPLES_OFF" "SPOT_SHAFTS" }
// 80:           Keywords { "FLIP_WORKAROUND_ON" "FRUSTUM_SHAFTS" "LIGHT_OFF_SCREEN" "SHOW_SAMPLES_ON" "SPOT_SHAFTS" }
// 02:           Keywords { "FLIP_WORKAROUND_ON" "FRUSTUM_SHAFTS" "LIGHT_ON_SCREEN" "SHOW_SAMPLES_OFF" "SPOT_SHAFTS" }
// 08:           Keywords { "FLIP_WORKAROUND_ON" "FRUSTUM_SHAFTS" "LIGHT_ON_SCREEN" "SHOW_SAMPLES_ON" "SPOT_SHAFTS" }
//               Bind "vertex" Vertex
//               Matrix 0 [glstate_matrix_mvp]
//             }
//           }
//         }
//       }
//     }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
 //def c100, 0, 0, 0, 0
def c247, 0, 0, 0.0625, 0
dcl_2d s0 
    dcl_position o0
    dcl_texcoord o1
    dcl_position v0
    dp4 r1.x, v0, c1
    dp4 r0.w, v0, c3
    dp4 r0.x, v0, c0
    dp4 r0.z, v0, c2
    mov r0.y, r1.x
mov r10, r0
texldl r24, c247.z, s0	
add r24.y, r0.w, -r24.y
mul r24.x, r24.x, r24.y
add r0.x, r0.x, r24.x
    mov o0, r10 //----------------------r0
    mov o1.xz, r0.xyww
    mov o1.y, r1.x

// approximately 8 instruction slots used


