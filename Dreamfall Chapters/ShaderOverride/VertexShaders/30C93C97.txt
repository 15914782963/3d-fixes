// CRC32: 30C93C97 | Matched 2 variants of 1 shaders: Skar/FX/Additive Tint
// 
// 1: Unity headers extracted from AdditiveTint.shader
// 2: Unity headers extracted from AdditiveTint.shader_2
//    Shader "Skar/FX/Additive Tint" {
//      Properties {
// 2:    _MainTex ("Base Texture", 2D) = "grey" {}
// 1:    _MainTex ("Base Texture", 2D) = "white" {}
//       _TintColor ("TintColor", Color) = (1,1,1,1)
//       _Boost ("Boost", Float) = 1
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/1 {
//          Tags { "LIGHTMODE"="Always" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Fog {
//             Color (0,0,0,0)
//            }
//          Blend One One
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Bind "vertex" Vertex
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Vector 4 [_MainTex_ST]
//              Vector 5 [_TintColor]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

// UI - "The Balance has shifted"

    vs_3_0
    dcl_position v0
    dcl_texcoord v1

dcl_texcoord o0
dcl_position o1
dcl_color o2


def c6, 0, 1, 0.0625, 0.5
dcl_2d s0

    mov o2, c5
    mad o0.xy, v1, c4, c4.zwzw
    dp4 r0.w, v0, c3
    dp4 r0.z, v0, c2
    dp4 r0.y, v0, c1
    dp4 r0.x, v0, c0

// approximately 6 instruction slots used

// UI depth adjustment inserted with DarkStarSword's shadertool.py:
// shadertool.py --git --orig --ui=c200.z --condition=c251.x --lookup-header-json /home/dss/3d-fixes/ShaderHeaders.json 30C93C97.txt
mov r1.x, c251.x
if_eq r1.x, c6.x
texldl r1, c6.z, s0
mad r0.x, r1.x, c200.z, r0.x
endif
mov o1, r0
