// CRC32: B8698549 | Matched 2 variants of 2 shaders: Dreamfall/FX/Fresnel Additive, Dreamfall/FX/Fresnel Additive Distort Parallax
// 
//    Unity headers extracted from Additive-Fresnel.shader
//    Shader "Dreamfall/FX/Fresnel Additive" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" {}
//       _FresnelExp ("Fresnel Exp", Float) = 3.5
//       _FresnelCol ("Fresnel Color", Color) = (1,1,1,1)
//       _FresnelAmt ("Fresnel Amount", Float) = 1
//      }
//      Fallback "Specular"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Fog { Mode Off }
//          Blend One One
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_WorldSpaceCameraPos]
//              Vector 9 [_ProjectionParams]
//              Vector 10 [_ScreenParams]
//              Vector 11 [unity_4LightPosX0]
//              Vector 12 [unity_4LightPosY0]
//              Vector 13 [unity_4LightPosZ0]
//              Vector 14 [unity_4LightAtten0]
//              Vector 15 [unity_LightColor0]
//              Vector 16 [unity_LightColor1]
//              Vector 17 [unity_LightColor2]
//              Vector 18 [unity_LightColor3]
//              Vector 19 [unity_SHAr]
//              Vector 20 [unity_SHAg]
//              Vector 21 [unity_SHAb]
//              Vector 22 [unity_SHBr]
//              Vector 23 [unity_SHBg]
//              Vector 24 [unity_SHBb]
//              Vector 25 [unity_SHC]
//              Vector 26 [unity_Scale]
//              Vector 27 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from Additive-FresnelDistort.shader
//    Shader "Dreamfall/FX/Fresnel Additive Distort Parallax" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" {}
//       _Parallax ("Height", Range(0.005,0.2)) = 0.02
//       _FresnelExp ("Fresnel Exp", Float) = 3.5
//       _FresnelCol ("Fresnel Color", Color) = (1,1,1,1)
//       _FresnelAmt ("Fresnel Amount", Float) = 1
//       _ParallaxMap ("Heightmap (A)", 2D) = "grey" {}
//       _DistortMap ("DistortMap", 2D) = "black" {}
//       _DistortAmt ("Distort Amount", Float) = 0
//       _DistortSpeed ("Distort Speed", Float) = 0
//      }
//      Fallback "Specular"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Fog { Mode Off }
//          Blend One One
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_WorldSpaceCameraPos]
//              Vector 9 [_ProjectionParams]
//              Vector 10 [_ScreenParams]
//              Vector 11 [unity_4LightPosX0]
//              Vector 12 [unity_4LightPosY0]
//              Vector 13 [unity_4LightPosZ0]
//              Vector 14 [unity_4LightAtten0]
//              Vector 15 [unity_LightColor0]
//              Vector 16 [unity_LightColor1]
//              Vector 17 [unity_LightColor2]
//              Vector 18 [unity_LightColor3]
//              Vector 19 [unity_SHAr]
//              Vector 20 [unity_SHAg]
//              Vector 21 [unity_SHAb]
//              Vector 22 [unity_SHBr]
//              Vector 23 [unity_SHBg]
//              Vector 24 [unity_SHBb]
//              Vector 25 [unity_SHC]
//              Vector 26 [unity_Scale]
//              Vector 27 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
 //def c100, 0, 0, 0, 0
def c247, 0, 0, 0.0625, 0
dcl_2d s0 
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    def c28, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    mul r3.xyz, v1, c26.w
    dp3 r5.x, r3, c4
    dp4 r4.zw, v0, c5
    add r2, -r4.z, c12
    dp3 r4.z, r3, c5
    dp3 r3.z, r3, c6
    dp4 r3.w, v0, c4
    mul r0, r4.z, r2
    add r1, -r3.w, c11
    dp4 r4.xy, v0, c6
    mul r2, r2, r2
    mov r5.y, r4.z
    mov r5.z, r3
    mov r5.w, c28.x
    mad r0, r5.x, r1, r0
    mad r2, r1, r1, r2
    add r1, -r4.x, c13
    mad r2, r1, r1, r2
    mad r0, r3.z, r1, r0
    mul r1, r2, c14
    add r1, r1, c28.x
    rsq r2.x, r2.x
    rsq r2.y, r2.y
    rsq r2.z, r2.z
    rsq r2.w, r2.w
    mul r0, r0, r2
    dp4 r2.z, r5, c21
    dp4 r2.y, r5, c20
    dp4 r2.x, r5, c19
    rcp r1.x, r1.x
    rcp r1.y, r1.y
    rcp r1.w, r1.w
    rcp r1.z, r1.z
    max r0, r0, c28.y
    mul r0, r0, r1
    mul r1.xyz, r0.y, c16
    mad r1.xyz, r0.x, c15, r1
    mad r0.xyz, r0.z, c17, r1
    mad r1.xyz, r0.w, c18, r0
    mul r0, r5.xyzz, r5.yzzx
    mul r1.w, r4.z, r4.z
    dp4 r5.w, r0, c24
    dp4 r5.z, r0, c23
    dp4 r5.y, r0, c22
    mad r1.w, r5.x, r5.x, -r1
    mul r0.xyz, r1.w, c25
    add r2.xyz, r2, r5.yzww
    add r5.yzw, r2.xxyz, r0.xxyz
    dp4 r0.w, v0, c3
    dp4 r0.z, v0, c2
    dp4 r0.x, v0, c0
    dp4 r0.y, v0, c1
mov r10, r0
texldl r24, c247.z, s0	
add r24.y, r0.w, -r24.y
mul r24.x, r24.x, r24.y
add r0.x, r0.x, r24.x
    mul r2.xyz, r0.xyww, c28.z
    add o4.xyz, r5.yzww, r1
    mov r1.x, r2
    mul r1.y, r2, c9.x
    mov r3.x, r4.w
    mov r3.y, r4
    mad o5.xy, r2.z, c10.zwzw, r1
    mov o0, r10 //-----------------r0
    mov o5.zw, r0
    add o2.xyz, -r3.wxyw, c8
    mov o3.z, r3
    mov o3.y, r4.z
    mov o3.x, r5
    mad o1.xy, v2, c27, c27.zwzw

// approximately 66 instruction slots used


