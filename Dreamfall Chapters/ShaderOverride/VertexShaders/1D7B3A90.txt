// CRC32: 1D7B3A90 | Matched 4 variants of 1 shaders: Dreamfall/Unity5/FX/Wet Glass
// 
//    Unity headers extracted from Glass-Wet-Fresnel-Distort.shader
//    Shader "Dreamfall/Unity5/FX/Wet Glass" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _Distort ("Distortion", Float) = 100
//       _MainTex ("Tint Color (RGB), Mask(A)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _BumpMap2 ("NormalMap 2", 2D) = "bump" { }
//       _Speed ("Scroll Speed", Float) = 1
//       _Gloss ("Gloss", Range(0,1)) = 1
//      }
//      SubShader 1/2 {
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        GrabPass {
//          Name "BASE"
//          "_ScreenGrab"
//          Tags { "LIGHTMODE"="Always" }
//         }
//        Pass 1/1 {
//          Name "BASE"
//          Tags { "LIGHTMODE"="Always" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          GpuProgramID 49592
//          Program "vp" {
//            SubProgram "d3d9 " {
// 4:           Keywords { "FOG_EXP" }
// 8:           Keywords { "FOG_EXP2" }
// 2:           Keywords { "FOG_LINEAR" }
//              Bind "vertex" Vertex
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Vector 7 [_BumpMap2_ST]
//              Vector 6 [_BumpMap_ST]
//              Vector 8 [_MainTex_ST]
//              Float 5 [_Speed]
//              Vector 4 [_Time]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0 // Converted from vs_2_0 with DarkStarSword's shadertool.py
    def c9, 0.5, 0, 0, 0
    dcl_position v0
    dcl_texcoord v1

dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2
dcl_texcoord3 o3
dcl_position o4


def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    dp4 r0.y, c1, v0
    mov r1.y, -r0.y
    dp4 r1.x, c0, v0
    dp4 r0.w, c3, v0
    add r1.yz, r0.w, r1.xxyw
    mov o4.x, r1.x
    mul r2.xy, r1.yzzw, c9.x
    mad o1.xy, v1, c6, c6.zwzw
    mad o3.xy, v1, c8, c8.zwzw
    dp4 r0.z, c2, v0
    mov o4.yzw, r0
    mov r2.zw, r0
    mad r0.xy, v1, c7, c7.zwzw
    mov r1.x, c4.x
    mad r0.z, r1.x, c5.x, r0.y
    mov o2.xy, r0.xzzw

// approximately 16 instruction slots used

// Output adjustment inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --lookup-header-json ../../extracted/ShaderHeaders.json -f --adjust-output=texcoord --adjust-multiply=0.5 --git VertexShader/VertexShader_36_CRC32_1D7B3A90.txt
texldl r31, c220.z, s0
add r31.w, r2.w, -r31.y
mul r31.w, r31.w, r31.x
mul r31.w, r31.w, c220.w
add r2.x, r2.x, r31.w
mov o0, r2
