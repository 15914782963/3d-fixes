[General]

; UseRenderedShaders=true is nearly always useful, because it trims the
; list of shaders seen while hunting down to just those active in the
; current scene.  Disable this only if you get crashes during hunting.
UseRenderedShaders=true

; DumpAll will generate ASM text files for every shader seen by the game.
; This is usually worth doing once, but not useful for every run.
DumpAll=true

; Constant registers that will arrive in Vertex and Pixel Shaders, as
; c200.  The constants below will be assigned, based on the key preset.
DefVSConst1 = 200
DefPSConst1 = 200

; The PresetKeysList specifies which KEYs will be used.
; Multiple keys lists are supported.
; Note that the KEY sections are in hexadecimal
PresetsKeysList = 0;1;2;3;4;5;6;7;8;9;A;B;C;D;E;

; Allows textures to be cycled with Up/Down - use to hunt menu text CRC32
; bCalcTexCRCatStart = true

; v1.1.3 update added exclusive full screen mode, so this profile selection is
; no longer necessary:
; GameProfile = fxdplayer

; Mouse stopped working in game with Helix mod (works in menus)
InitMouse = false

; Makes it crash less when reloading shaders:
OverrideMethod = 2

; Allow access to the screen size in pixel shaders for shadow fix:
DefPSViewSizeConst = 210
; Use to calculate appropriate threshold for full-screen coordinate detection:
DefVSViewSizeConst = 210

; Force square surfaces (shadow maps) to be mono:
DefSquareSurfaceMode = 2

; DefDepthStencilSurfaceMode = 1
; DefSurfaceCreationMode = 1
; DefRtCreationMode = 1

SurfaceCreationModeList = 0;1;

; Stereoise LightShaft _DepthEpi render target (didn't seem to work)
[SF0]
DefMode = 1
Format = 115
; Width = 1024
; Height = 1024
; Usage = 1
; Pool = 0
; Levels = 1

; Stereoise LightShaft _CoordEpi render target (didn't seem to work)
[SF1]
DefMode = 1
Format = 115
; Width = 1024
; Height = 1024
; Usage = 1
; Pool = 0
; Levels = 1



; Number row on keyboard sets UI depth to various values between screen depth
; and separation. `~ (left of 1 on US keyboards) sets screen depth, 1-9 sets
; septh in 10% multiples and 0 sets depth to 100% separation.
; Note that the KEY%X on these sections is in hexadecimal, hence we use KEYA
; for the tenth key entry and so on.
[KEY0]
Key = 192
Presets = 0;
Type = 1
[PRES0]
Const3 = 0x00000000
[KEY1]
Key = 49
Presets = 1;
Type = 1
[PRES1]
Const3 = 0x3dcccccd
[KEY2]
Key = 50
Presets = 2;
Type = 1
[PRES2]
Const3 = 0x3e4ccccd
[KEY3]
Key = 51
Presets = 3;
Type = 1
[PRES3]
Const3 = 0x3e99999a
[KEY4]
Key = 52
Presets = 4;
Type = 1
[PRES4]
Const3 = 0x3ecccccd
[KEY5]
Key = 53
Presets = 5;
Type = 1
[PRES5]
Const3 = 0x3f000000
[KEY6]
Key = 54
Presets = 6;
Type = 1
[PRES6]
Const3 = 0x3f19999a
[KEY7]
Key = 55
Presets = 7;
Type = 1
[PRES7]
Const3 = 0x3f333333
[KEY8]
Key = 56
Presets = 8;
Type = 1
[PRES8]
Const3 = 0x3f4ccccd
[KEY9]
Key = 57
Presets = 9;
Type = 1
[PRES9]
Const3 = 0x3f666666
[KEYA]
Key = 48
Presets = A;
Type = 1
[PRESA]
Const3 = 0x3f800000

; U toggles volumetric ray-marched light shafts between:
;   - disabled
;   - no stereo fix (vertex shader only)
;   - partial stereo fix
; I tracked down the source code to these - maybe someone can do a better fix:
; https://github.com/robertcupisz/LightShafts
[KEYB]
Key = 85
Presets = B;C;
Type = 1
[PRESB]
Const1 = 0x3f800000
[PRESC]
Const1 = 0x00000000
UseByDef = true

; I toggles Const2
[KEYC]
Key = 73
Presets = D;E;
Type = 2
[PRESD]
Const2 = 0x3f800000
[PRESE]
Const2 = 0x00000000

; Default convergence 0.85 on backslash
[KEYD]
Key = 220
Presets = F;
[PRESF]
UseSepSettings = true
SaveSepSettings = true
Convergence = 0x3f47ae14
UseByDef = true


; Copy MV+MVP matrices from various sources in case of drawing a full-screen
; lighting effect (e.g. physical lighting effect such as specular highlights
; and environment reflections) while directional lighting is not active. Note
; that unlike the Unity 4 fix we do not ask Helix mod to inverse the MV matrix.
; This is because Unity 5 only passes in three columns of the matrix which
; won't work with the generic inverse matrix function. Instead we invert the
; matrix in assembly in the destination shader.
;
; The below shaders are pretty common one in Unity games that we can use, but
; you may need to find others (avoid UI and camera depth/normal shaders that
; often do not have a valid projection matrix). My extract_unity_headers.py
; script is useful to find other shaders that can be used here.


; #!/bin/sh
; 
; for x in *.txt; do
; 	line0=$(head -n 1 $x | sed 's/^[^|]*|//')
; 	# TODO: Filter out known bad sources
; 	line1=$(sed -n 's/^\/\/\s*Matrix \([0-9]\+\) \[glstate_matrix_modelview0\] 3$/GetMatrixFromReg = \1/p' $x|head -n 1)
; 	line2=$(sed -n 's/^\/\/\s*Matrix \([0-9]\+\) \[glstate_matrix_mvp\]$/GetConst2FromReg = \1/p' $x|head -n 1)
; 	if [ -n "$line1" -a -n "$line2" ]; then
; 		echo "[VS$(basename $x .txt)]"
; 		echo "; $line0"
; 		echo "$line1"
; 		echo "$line2"
; 	fi
; done

;[VS05F7E52C]
;;  Matched 65 variants of 2 shaders: Hidden/Internal-DeferredShading, Hidden/Internal-PrePassLighting
;GetMatrixFromReg = 4
;GetConst2FromReg = 0
[VS0D3985FB]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VS107EF89B]
;  Matched 4 variants of 2 shaders: Dreamfall/Backdrop/CustomFog_BumpSpecIllum, Dreamfall/Backdrop/CustomFog_BumpSpecIllum_A
GetMatrixFromReg = 4
GetConst2FromReg = 0
[VS1112F180]
;  Matched 4 variants of 2 shaders: Dreamfall/Backdrop/CustomFog_BumpSpecIllum, Dreamfall/Backdrop/CustomFog_BumpSpecIllum_A
GetMatrixFromReg = 4
GetConst2FromReg = 0
[VS116B529C]
;  Matched 4 variants of 2 shaders: Dreamfall/Backdrop/CustomFog_BumpSpecIllum, Dreamfall/Backdrop/CustomFog_BumpSpecIllum_A
GetMatrixFromReg = 4
GetConst2FromReg = 0
[VS1696BF25]
;  Matched 6 variants of 6 shaders: Particles/Additive, Particles/Additive (Soft), Particles/Alpha Blended, Particles/Multiply, Particles/Multiply (Double), Particles/~Additive-Multiply
GetMatrixFromReg = 4
GetConst2FromReg = 0
[VS17734E7B]
;  Matched 2 variants of 2 shaders: Dreamfall/Backdrop/CustomFog_BumpSpecIllum, Dreamfall/Backdrop/CustomFog_BumpSpecIllum_A
GetMatrixFromReg = 4
GetConst2FromReg = 0
;[VS18CD7F2E]
;;  Matched 131 variants of 5 shaders: Hidden/Internal-DeferredReflections, Hidden/Internal-DeferredShading, Hidden/Internal-PrePassLighting, Hidden/ShadowSoftener-DeferredShading, Hidden/ShadowSoftener-PrePassLighting
;GetMatrixFromReg = 4
;GetConst2FromReg = 0
[VS1A9CA980]
;  Matched 64 variants of 1 shaders: Hidden/FogVolume
GetMatrixFromReg = 4
GetConst2FromReg = 0
[VS1D2A681F]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VS22EBE928]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VS28DC7929]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VS2C124C4B]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VS2E9A5B4A]
;  Unity headers extracted from SpeedTreeBillboard.shader
GetMatrixFromReg = 60
GetConst2FromReg = 48
[VS307053C1]
;  Matched 4 variants of 2 shaders: Dreamfall/Backdrop/CustomFog_BumpSpecIllum, Dreamfall/Backdrop/CustomFog_BumpSpecIllum_A
GetMatrixFromReg = 4
GetConst2FromReg = 0
[VS32C4732E]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VS3E0A2456]
;  Matched 2 variants of 2 shaders: Dreamfall/Backdrop/CustomFog_BumpSpecIllum, Dreamfall/Backdrop/CustomFog_BumpSpecIllum_A
GetMatrixFromReg = 8
GetConst2FromReg = 4
[VS46B69BA6]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VS4855CBB2]
;  Matched 4 variants of 2 shaders: Dreamfall/Backdrop/CustomFog_BumpSpecIllum, Dreamfall/Backdrop/CustomFog_BumpSpecIllum_A
GetMatrixFromReg = 4
GetConst2FromReg = 0
[VS4943B496]
;  Matched 2 variants of 2 shaders: Dreamfall/Backdrop/CustomFog_BumpSpecIllum, Dreamfall/Backdrop/CustomFog_BumpSpecIllum_A
GetMatrixFromReg = 8
GetConst2FromReg = 4
[VS4C11A863]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VS4FD0208F]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VS50116D15]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VS56418208]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VS597503BF]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VS61FEE124]
;  Matched 2 variants of 2 shaders: Dreamfall/Backdrop/CustomFog_BumpSpecIllum, Dreamfall/Backdrop/CustomFog_BumpSpecIllum_A
GetMatrixFromReg = 4
GetConst2FromReg = 0
[VS630B218D]
;  Matched 4 variants of 2 shaders: Dreamfall/Backdrop/CustomFog_BumpSpecIllum, Dreamfall/Backdrop/CustomFog_BumpSpecIllum_A
GetMatrixFromReg = 4
GetConst2FromReg = 0
[VS66C12748]
;  Unity headers extracted from SpeedTree.shader
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VS6976B6F6]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VS6D38084F]
;  Unity headers extracted from SpeedTree.shader
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VS6D5E1461]
;  Matched 6 variants of 6 shaders: Particles/Additive, Particles/Additive (Soft), Particles/Alpha Blended, Particles/Multiply, Particles/Multiply (Double), Particles/~Additive-Multiply
GetMatrixFromReg = 4
GetConst2FromReg = 0
[VS771B6D48]
;  Unity headers extracted from SpeedTree.shader
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VS7D9961E6]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree Billboard
GetMatrixFromReg = 60
GetConst2FromReg = 48
[VS8081B494]
;  Unity headers extracted from SpeedTree.shader
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VS8398836C]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree Billboard
GetMatrixFromReg = 60
GetConst2FromReg = 48
[VS8AC5CEC8]
;  Unity headers extracted from SpeedTreeBillboard.shader
GetMatrixFromReg = 60
GetConst2FromReg = 48
[VS8C80C703]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree Billboard
GetMatrixFromReg = 60
GetConst2FromReg = 48
[VS8D872950]
;  Unity headers extracted from SpeedTree.shader
GetMatrixFromReg = 20
GetConst2FromReg = 16
;[VS8FC2469D]
;;  Unity headers extracted from ScreenDistort.shader
;GetMatrixFromReg = 4
;GetConst2FromReg = 0
[VS97183CD9]
;  Unity headers extracted from SpeedTreeBillboard.shader
GetMatrixFromReg = 60
GetConst2FromReg = 48
[VS9DE7F8F9]
;  Unity headers extracted from SpeedTree.shader
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VS9FC2C22B]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VSA047400B]
;  Unity headers extracted from SpeedTree.shader
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VSACDBDD9B]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree Billboard
GetMatrixFromReg = 60
GetConst2FromReg = 48
[VSAD105294]
;  Matched 6 variants of 6 shaders: Particles/Additive, Particles/Additive (Soft), Particles/Alpha Blended, Particles/Multiply, Particles/Multiply (Double), Particles/~Additive-Multiply
GetMatrixFromReg = 4
GetConst2FromReg = 0
[VSB8AA5CF9]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree Billboard
GetMatrixFromReg = 60
GetConst2FromReg = 48
[VSC4904609]
;  Matched 4 variants of 2 shaders: Dreamfall/Backdrop/CustomFog_BumpSpecIllum, Dreamfall/Backdrop/CustomFog_BumpSpecIllum_A
GetMatrixFromReg = 4
GetConst2FromReg = 0
[VSC72ED75E]
;  Matched 4 variants of 4 shaders: Dreamfall/FX/Additive (Soft) Boost, Dreamfall/FX/Additive (Soft) Boost_Overlay, Particles/Alpha Blended Premultiply, Sonic Ether/Particles/Additive
GetMatrixFromReg = 4
GetConst2FromReg = 0
[VSCABCCD74]
;  Matched 2 variants of 2 shaders: Dreamfall/Backdrop/CustomFog_BumpSpecIllum, Dreamfall/Backdrop/CustomFog_BumpSpecIllum_A
GetMatrixFromReg = 4
GetConst2FromReg = 0
;[VSCCCB6229]
;;  Unity headers extracted from MotionBlurClear.shader
;GetMatrixFromReg = 4
;GetConst2FromReg = 0
[VSD1039FB6]
;  Matched 6 variants of 6 shaders: Particles/Additive, Particles/Additive (Soft), Particles/Alpha Blended, Particles/Multiply, Particles/Multiply (Double), Particles/~Additive-Multiply
GetMatrixFromReg = 4
GetConst2FromReg = 0
[VSDBB61A64]
;  Unity headers extracted from SpeedTreeBillboard.shader
GetMatrixFromReg = 60
GetConst2FromReg = 48
[VSDC33497A]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree Billboard
GetMatrixFromReg = 60
GetConst2FromReg = 48
[VSDD1E6D1E]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VSE6910B7F]
;  Matched 4 variants of 2 shaders: Dreamfall/Backdrop/CustomFog_BumpSpecIllum, Dreamfall/Backdrop/CustomFog_BumpSpecIllum_A
GetMatrixFromReg = 4
GetConst2FromReg = 0
[VSEBAB0E3F]
;  Matched 64 variants of 1 shaders: Hidden/FogVolume
GetMatrixFromReg = 4
GetConst2FromReg = 0
[VSEC2C48B1]
;  Matched 2 variants of 2 shaders: Dreamfall/Backdrop/CustomFog_BumpSpecIllum, Dreamfall/Backdrop/CustomFog_BumpSpecIllum_A
GetMatrixFromReg = 4
GetConst2FromReg = 0
[VSEDB7435E]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree Billboard
GetMatrixFromReg = 60
GetConst2FromReg = 48
[VSEE600477]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree
GetMatrixFromReg = 20
GetConst2FromReg = 16
[VSF0AECC06]
;  Matched 3 variants of 1 shaders: Nature/SpeedTree Billboard
GetMatrixFromReg = 60
GetConst2FromReg = 48
[VSF8281F5C]
;  Unity headers extracted from SpeedTree.shader
GetMatrixFromReg = 20
GetConst2FromReg = 16


; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
; XXXXXXXXXXXXXXX THIS IS NOT WORKING IN DREAMFALL CHAPTERS XXXXXXXXXXXXXXXXXXX
; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
; With this enabled, const4 seems to be set at times when the copied matrix is
; not valid. Not sure if the game is rendering directional shadows off-screen,
; or if something else is bogus here. Regardless, disable this FOV source and
; we will rely on the Unity 4 technique of using MV.I * MVP to find P, copying
; the matrices from wherever we can find them.
;
; ; In Unity 5, the directional lighting shader has the inverse projection
; ; matrix, which we need to fix the lights/shadows, so copy it to other lighting
; ; shaders whenever it is active. Use a preset to set Const4 to signify when
; ; this matrix is valid and fall back to other techniques if it is not.
;
; [VS678DC18B]
; ; Hidden/Internal-PrePassCollectShadows
; GetConst3FromReg = 4
; PresIndex = 16
;
; [VS00933666]
; ; Hidden/Internal-PrePassCollectShadows
; GetConst3FromReg = 4
; PresIndex = 16
;
; [PRES10]
; ; PRES10 (hexadecimal) is PresIndex 16 (decimal)
; ; Signifies that the inverse projection matrix is currently valid
; Const4 = 0x3f800000
; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

; The lighting shaders will use the inverse projection matrix copied from the
; directional lighting shader if it is valid. At times when it is not valid the
; shader will fall back to other techniques. Point and spot lights will
; calculate it from the MV+MVP matrices passed into the shader from the game,
; and full-screen lighting effects (e.g. physical lighting) will use the
; matrices copied from other unrelated shaders (see above - additional shaders
; may be necessary). If all else fails, a hard coded constant can be set in
; the vertex shader in c220.w

[VS05F7E52C]
; Matched 65 variants of 2 shaders: Hidden/Internal-DeferredShading, Hidden/Internal-PrePassLighting
SetConst3ToReg = 170
UseMatrix = true
MatrixReg = 180
SetConst2ToReg = 190


; Fix for specular highlights that are not using deferred lighting shaders.
; These need the world space camera position adjusted, which we do by
; multiplying the adjustment amount by the inversed MVP matrix then the
; _Object2World matrix. We use Helix Mod to inverse the MVP matrix and pass
; _Object2World from the VS to the PS in spare texcoords:
[VS68D32F2E]
; Matched 12 variants of 3 shaders: Chickenlord/Detail/Bumped Specular, Dreamfall/Unity5/Standard_BarutiJacket, Dreamfall/Unity5/Standard_BumpedDetail_Ilum
GetMatrixFromReg1 = 0
InverseMatrix1 = true
[PS898E1E30]
; Standard_BumpedDetail_Ilum.shader
UseMatrix1 = true
MatrixReg1 = 180
