[General]

// UseRenderedShaders=true is nearly always useful, because it trims the 
// list of shaders seen while hunting down to just those active in the 
// current scene.  Disable this only if you get crashes during hunting.
UseRenderedShaders=true

// DumpAll will generate ASM text files for every shader seen by the game.
// This is usually worth doing once, but not useful for every run.
// DumpAll=true

// Constant registers that will arrive in Vertex and Pixel Shaders, as
// c200.  The constants below will be assigned, based on the key preset.
DefVSConst1 = 200  		
DefPSConst1 = 200

// The PresetKeysList specifies which KEYs will be used.
// Multiple keys lists are supported.
// Note that the KEY sections are in hexadecimal
PresetsKeysList = 0;1;2;3;4;5;6;7;8;9;A;B;C;D;E;

// Allows textures to be cycled with Up/Down - use to hunt menu text CRC32
// bCalcTexCRCatStart = true

// Game is borderless window, use a profile that supports 3D in a window. Don't
// use a profile that sets UseStereoMatrix, because although it does fix a
// large number of halo issues, it also causes severe flickering in parts which
// has me worried. Use "3D-Hub Player" which is pretty minimal:
GameProfile = fxdplayer

// Mouse stopped working in game with Helix mod (works in menus)
InitMouse = false

// Makes it crash less when reloading shaders:
OverrideMethod = 2

// Allow access to the screen size in pixel shaders for shadow fix:
DefPSViewSizeConst = 210

// Fixes shadow placement. The fact that this worked was a surprise to me - I
// thought the driver's default was for square render targets to be mono
DefSquareSurfaceMode = 2

// Number row on keyboard sets UI depth to various values between screen depth
// and separation. `~ (left of 1 on US keyboards) sets screen depth, 1-9 sets
// septh in 10% multiples and 0 sets depth to 100% separation.
// Note that the KEY%X on these sections is in hexadecimal, hence we use KEYA
// for the tenth key entry and so on.
[KEY0]
Key = 192
Presets = 0;
Type = 1
[PRES0]
Const3 = 0x00000000
[KEY1]
Key = 49
Presets = 1;
Type = 1
[PRES1]
Const3 = 0x3dcccccd
[KEY2]
Key = 50
Presets = 2;
Type = 1
[PRES2]
Const3 = 0x3e4ccccd
[KEY3]
Key = 51
Presets = 3;
Type = 1
[PRES3]
Const3 = 0x3e99999a
[KEY4]
Key = 52
Presets = 4;
Type = 1
[PRES4]
Const3 = 0x3ecccccd
[KEY5]
Key = 53
Presets = 5;
Type = 1
[PRES5]
Const3 = 0x3f000000
[KEY6]
Key = 54
Presets = 6;
Type = 1
[PRES6]
Const3 = 0x3f19999a
[KEY7]
Key = 55
Presets = 7;
Type = 1
[PRES7]
Const3 = 0x3f333333
[KEY8]
Key = 56
Presets = 8;
Type = 1
[PRES8]
Const3 = 0x3f4ccccd
[KEY9]
Key = 57
Presets = 9;
Type = 1
[PRES9]
Const3 = 0x3f666666
[KEYA]
Key = 48
Presets = A;
Type = 1
[PRESA]
Const3 = 0x3f800000

// U toggles Const1
[KEYB]
Key = 85
Presets = B;C;
Type = 1
[PRESB]
Const1 = 0x3f800000
[PRESC]
Const1 = 0x00000000

// I toggles Const2
[KEYC]
Key = 73
Presets = D;E;
Type = 1
[PRESD]
Const2 = 0x3f800000
[PRESE]
Const2 = 0x00000000

// O toggles Const3
[KEYD]
Key = 79
Presets = F;10;
Type = 1
[PRESF]
Const3 = 0x3f800000
[PRES10]
Const3 = 0x00000000

// P toggles Const4
[KEYE]
Key = 80
Presets = 11;12;
Type = 1
[PRES11]
Const4 = 0x3f800000
[PRES12]
Const4 = 0x00000000




// Get MV and MVP matrices from the VS inputs
[VS92E51A17]
// get glstate_matrix_modelview0 from c0-c3 and invert it
// We also place the inverted matrix back into c180 for use in this shader
UseMatrix = true
GetMatrixFromReg = 0
InverseMatrix = true
MatrixReg = 180
// get glstate_matrix_mvp from c4-c7
UseMatrix1 = true
GetMatrixFromReg1 = 4
InverseMatrix1 = false

// Copy MVP and inverted MV matrices into the PS:
// Unity "Hidden/Internal-PrePassLighting" shader with SPOT SHADOWS_DEPTH SHADOWS_NATIVE
[PSFD2FC596]
// c180-c183 has the inverted MV matrix:
UseMatrix = true
MatrixReg = 180
// c190-c193 has the MVP matrix:
UseMatrix1 = true
MatrixReg1 = 190

// ... and so on:
// Unity "Hidden/Internal-PrePassLighting" shader with SPOT SHADOWS_OFF
[PSE051955A]
UseMatrix = true
MatrixReg = 180
UseMatrix1 = true
MatrixReg1 = 190

// Unity "Hidden/Internal-PrePassLighting" shader with POINT SHADOWS_OFF
[PSC5B3DACA]
UseMatrix = true
MatrixReg = 180
UseMatrix1 = true
MatrixReg1 = 190

// TODO: ID this shader
[PS8043C713]
UseMatrix = true
MatrixReg = 180
UseMatrix1 = true
MatrixReg1 = 190
