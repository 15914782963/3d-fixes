condition = stereo_available

;;;;;;;;;;;;;;;;;;;;;;;;;;;;; SUN ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[ShaderRegexSunMoon]
shader_model = ps_5_0
temps = stereo repl_sun repl_moon

[ShaderRegexSunMoon.Pattern]
(?P<variant1>
	//   float4 g_vSunScreenPos;            // Index:\s+16\.xyzw\s+Components:\s+4\n
	(.|\n)*
	//   float4 g_vMoonScreenPos;           // Index:\s+17\.xyzw\s+Components:\s+4\n

	(.|\n)*
)

(?P<declarations>(dcl_.*\n)+)

((?P<moon_a>(.|\n)*?)cb0\[17\])?
((?P<moon_b>(.|\n)*?)cb0\[17\])?
((?P<moon_c>(.|\n)*?)cb0\[17\])?
((?P<moon_d>(.|\n)*?)cb0\[17\])?
((?P<moon_e>(.|\n)*?)cb0\[17\])?

((?P<sun_a>(.|\n)*?)cb0\[16\])?
((?P<sun_b>(.|\n)*?)cb0\[16\])?
((?P<sun_c>(.|\n)*?)cb0\[16\])?
((?P<sun_d>(.|\n)*?)cb0\[16\])?
((?P<sun_e>(.|\n)*?)cb0\[16\])?

[ShaderRegexSunMoon.InsertDeclarations]
dcl_resource_texture2d (float,float,float,float) t121

[ShaderRegexSunMoon.Pattern.Replace]
${variant1}\n
${declarations}\n
\n
ld_indexable(texture2d)(float,float,float,float) ${stereo}.xyzw, l(0, 0, 0, 0), t121.xyzw\n
\n
mov ${repl_sun}.xyzw, cb0[16].xyzw\n
mov ${repl_moon}.xyzw, cb0[17].xyzw\n
add ${repl_sun}.x, ${repl_sun}.x, ${stereo}.x\n
add ${repl_moon}.x, ${repl_moon}.x, ${stereo}.x\n
\n

${moon_a:+${moon_a}${repl_moon}:}
${moon_b:+${moon_b}${repl_moon}:}
${moon_c:+${moon_c}${repl_moon}:}
${moon_d:+${moon_d}${repl_moon}:}
${moon_e:+${moon_e}${repl_moon}:}

${sun_a:+${sun_a}${repl_sun}:}
${sun_b:+${sun_b}${repl_sun}:}
${sun_c:+${sun_c}${repl_sun}:}
${sun_d:+${sun_d}${repl_sun}:}
${sun_e:+${sun_e}${repl_sun}:}

[ShaderRegexSun]
shader_model = ps_5_0
temps = stereo repl_sun

[ShaderRegexSun.Pattern]
(?P<variant2>
	//   float4 g_vSunScreenPos;            // Index:\s+12\.xyzw\s+Components:\s+4\n
	(.|\n)*
)

(?P<declarations>(dcl_.*\n)+)

((?P<a>(.|\n)*?)cb0\[12\])?
((?P<b>(.|\n)*?)cb0\[12\])?
((?P<c>(.|\n)*?)cb0\[12\])?
((?P<d>(.|\n)*?)cb0\[12\])?
((?P<e>(.|\n)*?)cb0\[12\])?

[ShaderRegexSun.InsertDeclarations]
dcl_resource_texture2d (float,float,float,float) t121

[ShaderRegexSun.Pattern.Replace]
${variant1}\n
${declarations}\n
\n
ld_indexable(texture2d)(float,float,float,float) ${stereo}.xyzw, l(0, 0, 0, 0), t121.xyzw\n
\n
mov ${repl_sun}.xyzw, cb0[12].xyzw\n
add ${repl_sun}.x, ${repl_sun}.x, ${stereo}.x\n
\n

${a:+${a}${repl_sun}:}
${b:+${b}${repl_sun}:}
${c:+${c}${repl_sun}:}
${d:+${d}${repl_sun}:}
${e:+${e}${repl_sun}:}

; Leaving this commented out for now - if it applies to all shaders it adjusts
; the shaft type flares half way to infinity but leaves the hex type flares
; alone - those need an additional adjustment not covered by this yet.
;[ShaderRegexSunFlare]
;shader_model = ps_5_0
;temps = stereo repl
;
;[ShaderRegexSunFlare.Pattern]
;(
;	(?P<variant1>
;		//   float4 g_vSun2dInfo;               // Index:\s+1\.xyzw\s+Components:\s+4\n
;		(.|\n)*
;		(dcl_.*\n)+
;	)
;	((?P<a1>(.|\n)*?)cb2\[1\])?
;	((?P<b1>(.|\n)*?)cb2\[1\])?
;	((?P<c1>(.|\n)*?)cb2\[1\])?
;	((?P<d1>(.|\n)*?)cb2\[1\])?
;	((?P<e1>(.|\n)*?)cb2\[1\])?
;|
;	(?P<variant2>
;		//   float4 g_vSun2dInfo;               // Index:\s+2\.xyzw\s+Components:\s+4\n
;		(.|\n)*
;		(dcl_.*\n)+
;	)
;	((?P<a2>(.|\n)*?)cb2\[2\])?
;	((?P<b2>(.|\n)*?)cb2\[2\])?
;	((?P<c2>(.|\n)*?)cb2\[2\])?
;	((?P<d2>(.|\n)*?)cb2\[2\])?
;	((?P<e2>(.|\n)*?)cb2\[2\])?
;)
;
;[ShaderRegexSunFlare.InsertDeclarations]
;dcl_resource_texture2d (float,float,float,float) t121
;
;[ShaderRegexSunFlare.Pattern.Replace]
;${variant1:-}${variant2:-}\n
;\n
;ld_indexable(texture2d)(float,float,float,float) ${stereo}.xyzw, l(0, 0, 0, 0), t121.xyzw\n
;\n
;mov ${repl}.xyzw, ${variant1:+cb2[1]:cb2[2]}.xyzw\n
;mad ${repl}.x, ${stereo}.x, l(0.5), ${repl}.x\n
;\n
;
;${a1:+${a1}${repl}:}
;${b1:+${b1}${repl}:}
;${c1:+${c1}${repl}:}
;${d1:+${d1}${repl}:}
;${e1:+${e1}${repl}:}
;
;${a2:+${a2}${repl}:}
;${b2:+${b2}${repl}:}
;${c2:+${c2}${repl}:}
;${d2:+${d2}${repl}:}
;${e2:+${e2}${repl}:}
