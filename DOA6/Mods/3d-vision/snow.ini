;;;;;;;;;;;;; SNOW SHADOWS (Maybe decals also) ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[ShaderRegexSnow]
shader_model = ps_5_0
temps = stereo tmp1 tmp2 matrices

[ShaderRegexSnow.Pattern]
(?<pt1>
	//   row_major float4x4 mP2W;           // Offset:\s+(?P<mP2W_off>[0-9]+) Size:    64\n
	(.|\n)*
	//   row_major float4x4 mW2V;           // Offset:\s+(?P<mW2V_off>[0-9]+) Size:    64\n
	(.|\n)*
	// sDepth                            texture  float4          2d    (?P<depth>[0-9]+)        1\n
	(.|\n)*
	// \$Globals                          cbuffer      NA          NA    0        1\n
	(.|\n)*
)
(?<dcl_cb>dcl_constantbuffer cb0\[[0-9]+\]), immediateIndexed\n
(?<pt2>
	(.|\n)*
	sample_l_indexable\(texture2d\)\(float,float,float,float\) (?P<zbuffer>r[0-9]+)\.[xyzw], r[0-9]+\.[xyzw]{4}, t(?P=depth)\.yzxw, s[0-9]+, l\(0\.000000\)\n
	mul r[0-9]+\.xyzw, v[0-9]+\.yyyy, cb0\[[0-9]+\].xyzw\n
	mad r[0-9]+\.xyzw, v[0-9]+\.xxxx, cb0\[[0-9]+\].xyzw, r[0-9]+\.xyzw\n
	mad r[0-9]+\.xyzw, (?P=zbuffer)\.[xyzw]{4}, cb0\[[0-9]+\].xyzw, r[0-9]+\.xyzw\n
	add (?P<world_pos>r[0-9]+)\.xyzw, r[0-9]+\.xyzw, cb0\[[0-9]+\].xyzw\n
)

[ShaderRegexSnow.InsertDeclarations]
dcl_resource_texture2d (float,float,float,float) t125

[ShaderRegexSnow.Pattern.Replace]
${pt1}
${dcl_cb}, dynamicIndexed\n
${pt2}
\n
div ${tmp1}.xyzw, ${world_pos}.xyzw, ${world_pos}.wwww\n

// Calculate offsets of mP2W and mW2P (TODO: add a way to statically calculate this in ShaderRegex):\n
udiv ${matrices}.xy, null, l(${mW2V_off}, ${mP2W_off}, 0, 0), l(16, 16, 0, 0)\n

// I don't have mW2P handy, but I can get the linear depth via mW2V instead:\n
mul ${tmp2}.xyzw, ${tmp1}.xxxx, cb0[${matrices}.x + 0].xyzw\n
mad ${tmp2}.xyzw, ${tmp1}.yyyy, cb0[${matrices}.x + 1].xyzw, ${tmp2}.xyzw\n
mad ${tmp2}.xyzw, ${tmp1}.zzzz, cb0[${matrices}.x + 2].xyzw, ${tmp2}.xyzw\n
add ${tmp2}.xyzw, ${tmp2}.xyzw, cb0[${matrices}.x + 3].xyzw\n

// ${tmp2}.z is now *negative* linear depth\n

// I also don't have the projection matrix handy to do a view-space adjustment,\n
// but that's okay. Calculate the adjustment magnitude in clip space:\n
ld_indexable(texture2d)(float,float,float,float) ${stereo}.xyzw, l(0, 0, 0, 0), t125.xyzw\n
add ${stereo}.w, -${tmp2}.z, -${stereo}.y\n
mul ${tmp2}.x, -${stereo}.w, ${stereo}.x\n

// Now use mP2W to convert (clip_adjustment, 0, 0, 0) to world space:\n
mul ${tmp2}.xyzw, ${tmp2}.xxxx, cb0[${matrices}.y + 0].xyzw\n

// And adjust the original world-space coord:\n
//add r2.xyz, r2.xyz, r38.xyz\n
mad ${world_pos}.xyz, ${tmp2}.xyzw, ${world_pos}.wwww, ${world_pos}.xyzw\n
