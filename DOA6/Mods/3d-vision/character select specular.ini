;;;;;;;;;;;;;;;;;;;;;;;; SPECULAR ON CHARACTER SELECT SCREEN ;;;;;;;;;;;;
[Present]
clear = Resource\ShaderFixes\inverse-cs.ini\InverseOutCBSlot4

; The shaders used on the character select screen are a different pattern to
; the ones used in game. These don't have the mP2W matrix handy, so we inverse
; the mW2P matrix from the vertex shader. We will grab a reference to the
; vs-cb0 on any vertex shader that has mP2W at the expected position (one of
; the few cases where it seems we can rely on it being in a fixed position...),
; but won't do the inverse from the VS command list - the shaders run too often
; and will use up the matrix inverse limit on something unwanted, and disabling
; the limit hurts performance too much. The pixel shaders match far less, so do
; the inverse from them.
[ShaderRegexCharacterSelectSpecularVS]
shader_model = vs_5_0
Resource\ShaderFixes\inverse-cs.ini\InverseIn = ref vs-cb0
;$\ShaderFixes\inverse-cs.ini\matrix_offset = 0
;reset_per_frame_limits = CustomShader\ShaderFixes\inverse-cs.ini\InverseSlot4
;run = CustomShader\ShaderFixes\inverse-cs.ini\InverseSlot4
;[ClearDepthStencilView]
;reset_per_frame_limits = CustomShader\ShaderFixes\inverse-cs.ini\InverseSlot4
;[ClearRenderTargetView]
;reset_per_frame_limits = CustomShader\ShaderFixes\inverse-cs.ini\InverseSlot4
[ShaderRegexCharacterSelectSpecularVS.Pattern]
// cbuffer \$Globals\n
// {\n
//\n
//   row_major float4x4 mW2P;           // Offset:    0 Size:    64\n
;(.|\n)*
;//   bool bSkin[3];                     // Offset: 6208 Size:    36\n
(.|\n)*
;// mSoftBodyNode                     texture  float4         buf   10        1\n
// \$Globals                          cbuffer      NA          NA    0        1\n
[ShaderRegexCharacterSelectSpecularPS]
shader_model = ps_5_0
temps = stereo tmp
$\ShaderFixes\inverse-cs.ini\matrix_offset = 0
;reset_per_frame_limits = CustomShader\ShaderFixes\inverse-cs.ini\InverseSlot4
run = CustomShader\ShaderFixes\inverse-cs.ini\InverseSlot4
ps-cb13 = Resource\ShaderFixes\inverse-cs.ini\InverseOutCBSlot4
post ps-cb13 = null
[ShaderRegexCharacterSelectSpecularPS.Pattern]
(?P<before>
	dcl_.*\n
	round_ni r0\.xy, v0\.xyxx\n
	add r1\.xyz, -v2\.xyzx, cb0\[11\]\.xyzx\n
)
[ShaderRegexCharacterSelectSpecularPS.InsertDeclarations]
dcl_resource_texture2d (float,float,float,float) t125
dcl_constantbuffer cb13[4], immediateIndexed
[ShaderRegexCharacterSelectSpecularPS.Pattern.Replace]
${before}\n

ne ${tmp}.x, cb13[0].x, l(0.0)\n
if_nz ${tmp}.x\n
	ld_indexable(texture2d)(float,float,float,float) ${stereo}.xyzw, l(0, 0, 0, 0), t125.xyzw\n
	mul ${tmp}.x, ${stereo}.x, -${stereo}.y\n
	mul ${tmp}.xyzw, ${tmp}.xxxx, cb13[0].xyzw\n
	add r1.xyz, r1.xyzw -${tmp}.xyzw\n
endif\n
