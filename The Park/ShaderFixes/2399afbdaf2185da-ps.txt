// Lights
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.34 on Tue Mar 22 18:41:41 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xy w
// SV_POSITION              0   xyzw        1      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[49], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps linear v0.xyw
dcl_output o0.xyzw
//dcl_temps 13
dcl_temps 16

div r0.xy, v0.xyxx, v0.wwww
mad r0.zw, r0.xxxy, cb0[41].xxxy, cb0[41].wwwz
sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.zwzz, t1.xyzw, s1, l(0.000000)
lt r2.x, l(0.500000), r1.w
movc r2.x, r2.x, l(-0.500000), l(-0.000000)
add r1.w, r1.w, r2.x
mul r1.w, r1.w, l(14.000000)
ftou r1.w, r1.w
if_nz r1.w
  sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r0.zwzz, t0.xyzw, s0, l(0.000000)
  mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  dp3 r2.w, r2.xyzx, r2.xyzx
  rsq r2.w, r2.w
  mul r2.xyz, r2.wwww, r2.xyzx
  sample_l_indexable(texture2d)(float,float,float,float) r2.w, r0.zwzz, t5.yzwx, s5, l(0.000000)
  mad r2.w, r2.w, cb0[40].z, -cb0[40].w
  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  mul r0.xy, r0.xyxx, r2.wwww
  
  ld_indexable(texture2d)(float,float,float,float) r16.xyzw, l(0, 0, 0, 0), t125.xyzw
  add r16.w, r2.w, -r16.y
  mul r16.w, r16.x, r16.w
  add r0.x, r0.x, -r16.w
  
  mul r3.xyzw, r0.yyyy, cb0[29].xyzw
  mad r3.xyzw, r0.xxxx, cb0[28].xyzw, r3.xyzw
  mad r3.xyzw, r2.wwww, cb0[30].xyzw, r3.xyzw
  add r3.xyzw, r3.xyzw, cb0[31].xyzw
  div r3.xyz, r3.xyzx, r3.wwww
  add r4.xyz, r3.xyzx, -cb0[44].xyzx
  dp3 r0.x, r4.xyzx, r4.xyzx
  rsq r0.x, r0.x
  mul r4.xyz, r0.xxxx, r4.xyzx
  sample_l_indexable(texture2d)(float,float,float,float) r0.xy, r0.zwzz, t6.zwxy, s6, l(0.000000)
  mul r0.xy, r0.xyxx, r0.xyxx
  add r3.xyz, -r3.xyzx, cb1[0].xyzx
  dp3 r2.w, r3.xyzx, r3.xyzx
  rsq r2.w, r2.w
  mul r5.xyz, r2.wwww, r3.xyzx
  dp3 r3.w, r2.xyzx, r5.xyzx
  mov_sat r4.w, r3.w
  mul r6.xyz, r3.xyzx, cb1[0].wwww
  dp3 r5.w, r6.xyzx, r6.xyzx
  min r5.w, r5.w, l(1.000000)
  add r5.w, -r5.w, l(1.000000)
  log r5.w, r5.w
  mul r5.w, r5.w, cb1[1].w
  exp r5.w, r5.w
  dp3 r5.x, r5.xyzx, cb1[2].xyzx
  add r5.x, r5.x, -cb1[3].x
  mul_sat r5.x, r5.x, cb1[3].y
  mul r5.x, r5.x, r5.x
  lt r5.yz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.wwxw
  and r5.y, r5.z, r5.y
  if_nz r5.y
    sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r0.zwzz, t2.xyzw, s2, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r7.xyzw, r0.zwzz, t3.xyzw, s3, l(0.000000)
    if_nz cb1[6].x
      sample_l_indexable(texture2d)(float,float,float,float) r8.xyzw, r0.zwzz, t4.xyzw, s4, l(0.000000)
      dp4 r5.y, cb1[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r5.z, r8.xyzw, cb1[5].xyzw
      add r5.z, r5.z, l(-1.000000)
      mad r5.y, r5.y, r5.z, l(1.000000)
      mul r8.yz, r0.yyxy, r5.yyyy
      mad_sat r0.x, r3.w, l(6.000000), l(-0.200000)
      mul r8.x, r0.x, r8.z
    else 
      sample_l_indexable(texture2d)(float,float,float,float) r8.x, r0.zwzz, t7.xyzw, s7, l(0.000000)
      mov r8.y, l(1.000000)
    endif 
    mul r0.x, r5.x, r5.w
    mul r0.xy, r8.xyxx, r0.xxxx
    mov r5.x, r1.z
    mov r5.y, l(1.000000)
    max r0.zw, r5.xxxy, cb1[4].xxxx
    mul r5.xy, r0.zwzz, r0.zwzz
    dp3 r0.w, r4.xyzx, r2.xyzx
    add r0.w, r0.w, r0.w
    mad r8.xyz, r2.xyzx, -r0.wwww, r4.xyzx
    lt r5.zw, l(0.000000, 0.000000, 0.000000, 0.000000), cb1[3].wwwz
    if_nz r5.z
      mul r0.w, r2.w, cb1[3].w
      min r0.w, r0.w, l(1.000000)
      mad r9.xy, r0.wwww, l(0.500000, 0.500000, 0.000000, 0.000000), r5.xyxx
      min r9.xy, r9.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
      div r9.xy, r5.xyxx, r9.xyxx
      mul r10.xyz, cb1[2].xyzx, cb1[3].wwww
      mad r11.xyz, -r10.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
      dp3 r0.w, r8.xyzx, r10.xyzx
      mad r12.xyz, r0.wwww, r8.xyzx, -r10.xyzx
      dp3 r1.z, r11.xyzx, r12.xyzx
      mul r0.w, r0.w, r0.w
      mad r0.w, cb1[3].w, cb1[3].w, -r0.w
      div_sat r0.w, r1.z, r0.w
      mad r3.xyz, r0.wwww, r10.xyzx, r11.xyzx
    else 
      mov r9.xy, l(1.000000,1.000000,0,0)
    endif 
    if_nz r5.w
      mul r0.w, r2.w, cb1[3].z
      min r0.w, r0.w, l(1.000000)
      mad r5.zw, r0.wwww, l(0.000000, 0.000000, 0.500000, 0.500000), r5.xxxy
      min r5.zw, r5.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      div r5.xy, r5.xyxx, r5.zwzz
      mul r5.xy, r5.xyxx, r5.xyxx
      mul r9.xy, r5.xyxx, r9.xyxx
      dp3 r0.w, r3.xyzx, r8.xyzx
      mad r5.xyz, r0.wwww, r8.xyzx, -r3.xyzx
      dp3 r0.w, r5.xyzx, r5.xyzx
      rsq r0.w, r0.w
      mul r0.w, r0.w, cb1[3].z
      min r0.w, r0.w, l(1.000000)
      mad r3.xyz, r5.xyzx, r0.wwww, r3.xyzx
    endif 
    dp3 r0.w, r3.xyzx, r3.xyzx
    rsq r0.w, r0.w
    mul r5.xyz, r0.wwww, r3.xyzx
    switch r1.w
      case l(0)
      case l(1)
      case l(2)
      case l(3)
      case l(5)
      case l(6)
      mad r10.xyz, -r6.xyzx, r1.xxxx, r6.xyzx
      mad r10.xyz, r10.xyzx, cb0[47].wwww, cb0[47].xyzx
      mad r11.xyz, r3.xyzx, r0.wwww, -r4.xyzx
      dp3 r1.z, r11.xyzx, r11.xyzx
      rsq r1.z, r1.z
      mul r11.xyz, r1.zzzz, r11.xyzx
      dp3_sat r1.z, r2.xyzx, r5.xyzx
      dp3 r2.w, r2.xyzx, -r4.xyzx
      add r2.w, |r2.w|, l(0.000010)
      dp3_sat r3.w, -r4.xyzx, r11.xyzx
      dp2 r3.w, r3.wwww, r3.wwww
      add r3.w, r3.w, l(0.500000)
      add r2.w, -r2.w, l(1.000000)
      mul r5.w, r2.w, r2.w
      mul r5.w, r5.w, r5.w
      mul r2.w, r2.w, r5.w
      add r1.z, -r1.z, l(1.000000)
      mul r5.w, r1.z, r1.z
      mul r5.w, r5.w, r5.w
      mul r1.z, r1.z, r5.w
      mad r3.w, r3.w, r0.z, l(-1.000000)
      mad r2.w, r3.w, r2.w, l(1.000000)
      mad r1.z, r3.w, r1.z, l(1.000000)
      mul r1.z, r2.w, r1.z
      mul r1.z, r1.z, l(0.318309873)
      mul r10.xyz, r1.zzzz, r10.xyzx
      mad r1.z, -r0.z, l(0.333300), l(1.000000)
      mul r10.xyz, r1.zzzz, r10.xyzx
      mul r8.xyz, r9.yyyy, r10.xyzx
      break 
      case l(4)
      mov r8.xyz, l(0,0,0,0)
      break 
      default 
      mov r8.xyz, l(0,0,0,0)
      break 
    endswitch 
    switch r1.w
      case l(0)
      case l(1)
      case l(2)
      case l(3)
      case l(5)
      case l(6)
      mul r1.z, r1.y, l(0.080000)
      mad r6.xyz, -r1.yyyy, l(0.080000, 0.080000, 0.080000, 0.000000), r6.xyzx
      mad r1.xyz, r1.xxxx, r6.xyzx, r1.zzzz
      mad r1.xyz, r1.xyzx, cb0[48].wwww, cb0[48].xyzx
      mad r6.xyz, r3.xyzx, r0.wwww, -r4.xyzx
      dp3 r2.w, r6.xyzx, r6.xyzx
      rsq r2.w, r2.w
      mul r6.xyz, r2.wwww, r6.xyzx
      dp3_sat r2.w, r2.xyzx, r5.xyzx
      dp3 r3.w, r2.xyzx, -r4.xyzx
      add r3.w, |r3.w|, l(0.000010)
      dp3_sat r5.w, r2.xyzx, r6.xyzx
      dp3_sat r6.x, -r4.xyzx, r6.xyzx
      mul r6.y, r0.z, r0.z
      mul r6.z, r6.y, r6.y
      mad r6.w, r5.w, r6.z, -r5.w
      mad r5.w, r6.w, r5.w, l(1.000000)
      mul r5.w, r5.w, r5.w
      mul r5.w, r5.w, l(3.14159274)
      div r5.w, r6.z, r5.w
      mul r5.w, r9.x, r5.w
      mad r0.z, -r0.z, r0.z, l(1.000000)
      mad r6.z, r3.w, r0.z, r6.y
      mad r0.z, r2.w, r0.z, r6.y
      mul r0.z, r0.z, r3.w
      mad r0.z, r2.w, r6.z, r0.z
      rcp r0.z, r0.z
      mul r0.z, r0.z, r5.w
      add r2.w, -r6.x, l(1.000000)
      mul r3.w, r2.w, r2.w
      mul r3.w, r3.w, r3.w
      mul r5.w, r2.w, r3.w
      mul_sat r6.x, r1.y, l(50.000000)
      mad r2.w, -r2.w, r3.w, l(1.000000)
      mul r1.xyz, r1.xyzx, r2.wwww
      mad r1.xyz, r6.xxxx, r5.wwww, r1.xyzx
      mul r0.z, r0.z, l(0.500000)
      mul r9.yzw, r1.xxyz, r0.zzzz
      break 
      case l(4)
      mov r9.yzw, l(0,0,0,0)
      break 
      default 
      mov r9.yzw, l(0,0,0,0)
      break 
    endswitch 
    mul r0.x, r0.x, r4.w
    mul r1.xyz, r0.xxxx, cb1[1].xyzx
    add r6.xyz, r8.xyzx, r9.yzwy
    mul r8.xyz, r1.xyzx, r8.xyzx
    dp3 r0.x, r8.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
    mul r7.yzw, r7.yyzw, r7.yyzw
    switch r1.w
      case l(2)
      mad r3.xyz, r3.xyzx, r0.wwww, -r4.xyzx
      dp3 r0.z, r3.xyzx, r3.xyzx
      rsq r0.z, r0.z
      mul r3.xyz, r0.zzzz, r3.xyzx
      dp3_sat r0.z, r5.xyzx, r4.xyzx
      log r0.z, r0.z
      mul r0.z, r0.z, l(12.000000)
      exp r0.z, r0.z
      mad r0.w, r7.x, l(-2.900000), l(3.000000)
      mul r0.z, r0.w, r0.z
      dp3 r0.w, r2.xyzx, r3.xyzx
      mad r0.w, r0.w, r7.x, l(1.000000)
      add_sat r0.w, -r7.x, r0.w
      mul r1.w, r0.w, l(0.159154937)
      mad r0.w, -r0.w, l(0.159154937), l(1.000000)
      mad r0.z, r0.z, r0.w, r1.w
      mul r8.xyz, r0.zzzz, r7.yzwy
      break 
      case l(3)
      dp3 r0.z, r2.xyzx, r5.xyzx
      mad_sat r3.x, r0.z, l(0.500000), l(0.500000)
      add r3.y, -r7.x, l(1.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t8.xyzw, s8, l(0.000000)
      mul r8.xyz, r7.yzwy, r3.xyzx
      break 
      case l(6)
      dp3 r0.z, -r2.xyzx, r5.xyzx
      add r0.z, r0.z, l(0.500000)
      mul_sat r0.z, r0.z, l(0.444444448)
      dp3_sat r0.w, -r4.xyzx, -r5.xyzx
      mul r0.w, r0.w, r0.w
      mad r0.w, r0.w, l(-0.640000), l(1.000000)
      mul r0.w, r0.w, r0.w
      div r0.w, l(0.114591561), r0.w
      mul r0.z, r0.w, r0.z
      mul r8.xyz, r7.yzwy, r0.zzzz
      break 
      default 
      mov r8.xyz, l(0,0,0,0)
      break 
    endswitch 
    mul r0.yzw, r0.yyyy, cb1[1].xxyz
    mul r0.yzw, r0.yyzw, r8.xxyz
    mad o0.xyz, r6.xyzx, r1.xyzx, r0.yzwy
    dp3 r0.y, r0.yzwy, l(0.300000, 0.590000, 0.110000, 0.000000)
    add o0.w, r0.y, r0.x
  else 
    mov o0.xyzw, l(0,0,0,0)
  endif 
else 
  mov o0.xyzw, l(0,0,0,0)
endif 
ret 
// Approximately 0 instruction slots used
