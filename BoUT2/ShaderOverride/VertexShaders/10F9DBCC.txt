// CRC32: 10F9DBCC | Matched 3 variants of 3 shaders: Unlit/Premultiplied Colored, Unlit/Text, Unlit/Transparent Packed
// 
//    Unity headers extracted from Unlit - Premultiplied Colored.shader
//    Shader "Unlit/Premultiplied Colored" {
//      Properties {
//       _MainTex ("Base (RGB), Alpha (A)", 2D) = "black" {}
//      }
//      SubShader 1/2 {
//        LOD 200
//        Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//        Pass 1/1 {
//          Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Cull Off
//          Fog { Mode Off }
//          Blend One OneMinusSrcAlpha
//          ColorMask RGB
//          Offset -1, -1
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from Unlit - Text.shader
//    Shader "Unlit/Text" {
//      Properties {
//       _MainTex ("Alpha (A)", 2D) = "white" {}
//      }
//      SubShader 1/2 {
//        LOD 200
//        Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//        Pass 1/1 {
//          Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Cull Off
//          Fog { Mode Off }
//          Blend SrcAlpha OneMinusSrcAlpha
//          Offset -1, -1
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from Unlit - Transparent Packed.shader
//    Shader "Unlit/Transparent Packed" {
//      Properties {
//       _MainTex ("Base (RGB), Alpha (A)", 2D) = "black" {}
//      }
//      Fallback Off
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//        Pass 1/1 {
//          Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Cull Off
//          Fog { Mode Off }
//          Blend SrcAlpha OneMinusSrcAlpha
//          ColorMask RGB
//          Offset -1, -1
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

// Subtitle vertex shader (plus a bunch of other things)
    vs_3_0
    dcl_color o8
dcl_texcoord o0.xy
dcl_position o10
dcl_position v0
    dcl_color v1
    dcl_texcoord v2

def c220, 0.75, 1, 0.0625, 0
dcl_2d s0

    mov o8, v1
    mov o0.xy, v2
    dp4 r10.w, v0, c3
    dp4 r10.z, v0, c2
    dp4 r10.y, v0, c1
    dp4 r10.x, v0, c0

mov r13.x, c251.x	// Load TexCounterReg
if_eq r13.x, c220.y	// If (TexCounterReg == 1) /* NOT defined */

texldl r13, c220.z, s0
mul r13.x, c200.z, r13.x // r13.x = Separation * Const3
add r10.x, r10.x, r13.x

endif

mov o10, r10
