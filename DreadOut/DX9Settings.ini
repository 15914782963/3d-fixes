[General]

; May need 64bit helix mod!

; UseRenderedShaders=true is nearly always useful, because it trims the
; list of shaders seen while hunting down to just those active in the
; current scene.  Disable this only if you get crashes during hunting.
UseRenderedShaders=true

; DumpAll will generate ASM text files for every shader seen by the game.
; This is usually worth doing once, but not useful for every run.
DumpAll=true

; Less crashes when reloading shaders:
OverrideMethod = 2

; Force square surfaces (shadow maps) to be mono:
DefSquareSurfaceMode = 2

; Allow access to the view size in pixel shaders to calculate the pixel
; position on screen. This isn't usually necessary in the generic lighting fix,
; but sometimes a situation arises where it is necessary.
DefPSViewSizeConst = 210

PresetsKeysList = 0;

; Mouse doesn't work with if Helix mod inits it
InitMouse = false

Quick hack to make the camera work - hold Q to set separation to 0 to
effectively disable 3D, for when the camera is out (I wanted RMB toggle, but
helix doesn't work with the mouse in this game). This is necessary as the
shaders have no way to tell if a 2D or 3D render target is currently in use, so
anything we fix for 3D will break when used on a 2D render target.  Since every
surface and lighting shader needs to be fixed in Unity games - this means
everything breaks on the camera :(
Later I'll mess with turning the camera into a 3D render target and see if
that looks any good, but for now:
[KEY0]
Key = 81
Presets = 0;1;
Type = 2

[PRES0]
; 0% separation, effectively disabling 3D:
UseSepSettings = true
Separation = 0x00000000

[PRES1]
; 100% separation, 0.11 convergence (camera is comfortable even without Q), allow saving this preset:
UseSepSettings = true
SaveSepSettings = true
UseByDef = true
Separation = 0x42c80000
Convergence = 0x3de147ae

; Copy the MVP and inverted MV matrices to all lighting shaders to allow us to
; calculate the projection matrix and find the horizontal FOV. This technique
; was first used to fix Dreamfall Chapters - take a look at the forum thread
; for that game and it's fix for more details on how this works.


; Get matrices from different shader since the prepass lighting shader is
; sometimes used to draw screen shadows and as such may not always use the
; desired projection matrix.
[VS61CAF50F]
UseMatrix = true
GetMatrixFromReg = 0
InverseMatrix = true
MatrixReg = 180
GetConst1FromReg = 4

; Unity Hidden/Internal-PrePassLighting.shader - ***VERTEX SHADER FOR ALL VARIANTS***
; MV is in c0-c3. Invert this and place it back in c180
; MVP is in c4-c7. We only need the first column so only bother with c4
[VSDF7A050C]
UseMatrix = true
; GetMatrixFromReg = 0
; InverseMatrix = true
MatrixReg = 180
; GetConst1FromReg = 4
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader (older version of VSDF7A050C)
[VS36A3FBCB]
UseMatrix = true
; GetMatrixFromReg = 0
; InverseMatrix = true
MatrixReg = 180
; GetConst1FromReg = 4
SetConst1ToReg = 190



; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL SHADOWS_OFF
[PS0020AFE0]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_OFF SPOT
[PS04ED7E6B]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL SHADOWS_SCREEN
[PS0D1EC394]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL SHADOWS_SCREEN
[PS21FE5699]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_CUBE
[PS284DA432]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PS44DF04B9]
; Older version of PS284DA432 - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL_COOKIE SHADOWS_OFF
[PS30543CCC]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL SHADOWS_SCREEN
[PS356BC878]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_CUBE
[PS3CD83AD3]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PS504A9A58]
; Older version of PS3CD83AD3 - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_OFF
[PS40045626]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_NATIVE SHADOWS_SOFT SPOT
[PS4369D874]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL_COOKIE SHADOWS_SCREEN
[PS49C3F4B4]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_SOFT SPOT
[PS4FD8532C]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT
[PS547CD7A9]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PS58C2298C]
; Older version of PS547CD7A9 - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_NATIVE SHADOWS_SOFT SPOT
[PS57FC4695]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_NATIVE SPOT
[PS5B0A6D77]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL_COOKIE SHADOWS_SCREEN
[PS62F2B6BF]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_NATIVE SHADOWS_SOFT SPOT
[PS736137F7]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL_COOKIE SHADOWS_SCREEN
[PS7667285E]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SPOT
[PS7A9BF7A7]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_CUBE
[PS81ED1203]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PSB0BEF0E8]
; Older version of PS81ED1203 - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT
[PS893B94C1]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PSD6C3206E]
; Older version of PS893B94C1 - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_CUBE SHADOWS_SOFT
[PS921CDD6F]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PS1D6B3B35]
; Older version of PS921CDD6F - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_CUBE
[PS95788CE2]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PSA42B6E09]
; Older version of PS95788CE2 - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT
[PS9DAE0A20]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PSC256BE8F]
; Older version of PS9DAE0A20 - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_NATIVE SPOT
[PSA1F71696]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_CUBE
[PSA43F3389]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PSAC3E0442]
; Older version of PSA43F3389 - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_OFF
[PSB29F30D0]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_NATIVE SPOT
[PSB5628877]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_OFF
[PSC5B3DACA]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL SHADOWS_OFF
[PSC8C82836]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_CUBE
[PSCA11D98D]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PSA7AD24DD]
; Older version of PSCA11D98D - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SPOT
[PSCD7F5093]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_CUBE SHADOWS_SOFT
[PSCDD3D9C8]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PS9F602026]
; Older version of PSCDD3D9C8 - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_OFF
[PSD126442B]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_CUBE SHADOWS_SOFT
[PSD9464729]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PS8BF5BEC7]
; Older version of PSD9464729 - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SPOT
[PSD9EACE72]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL SHADOWS_OFF
[PSDC5DB6D7]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_OFF SPOT
[PSE051955A]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL_COOKIE SHADOWS_OFF
[PSE0BDEC4E]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_OFF
[PSEA0E4115]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_SOFT SPOT
[PSEE9B36D7]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL_COOKIE SHADOWS_OFF
[PSF42872AF]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_OFF SPOT
[PSF4C40BBB]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_SOFT SPOT
[PSFA0EA836]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_OFF
[PSFE9BDFF4]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190


; Unity Hidden/Internal-PrePassCollectShadows.shader - ***VERTEX SHADER FOR ALL VARIANTS***
; Note: This shader has an MVP matrix, but not the matching MV matrix.
[VSBAEDDED5]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassCollectShadows.shader - SHADOWS_NONATIVE SHADOWS_SPLIT_SPHERES
[PS871F16C5]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassCollectShadows.shader - SHADOWS_NONATIVE
[PSAFC69A8C]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassCollectShadows.shader - SHADOWS_NATIVE SHADOWS_SPLIT_SPHERES
[PSC24D6005]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassCollectShadows.shader - SHADOWS_NATIVE
[PSDF3A8F27]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
