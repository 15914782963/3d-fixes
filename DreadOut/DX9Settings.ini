[General]

; May need 64bit helix mod!

; UseRenderedShaders=true is nearly always useful, because it trims the
; list of shaders seen while hunting down to just those active in the
; current scene.  Disable this only if you get crashes during hunting.
UseRenderedShaders=true

; DumpAll will generate ASM text files for every shader seen by the game.
; This is usually worth doing once, but not useful for every run.
DumpAll=true

; Less crashes when reloading shaders:
OverrideMethod = 2

; Force square surfaces (shadow maps) to be mono:
DefSquareSurfaceMode = 2

; Allow access to the view size in pixel shaders to calculate the pixel
; position on screen. This isn't usually necessary in the generic lighting fix,
; but sometimes a situation arises where it is necessary.
DefPSViewSizeConst = 210

PresetsKeysList = 0;B;C;D;E;

; Mouse doesn't work with if Helix mod inits it
InitMouse = false

; Might help with flashlight clipping (seems pretty rare even without this)
SkipSetScissorRect = true

; Access Const1 from shaders:
DefVSConst1 = 200
DefPSConst1 = 200

; To track down texture CRCs with up/down:
bCalcTexCRCAtStart = true


; Stereoise surfaces related to the camera. This is necessary as the fixed
; shaders have no way to tell if they are being rendered in stereo or mono, so
; the stereo fix breaks them if they are rendered on the camera in mono. If the
; camera is also 3D this is not an issue (the other option would be to set
; separation to 0 whenever the camera is out - Below key binding Q does this):
SurfaceCreationModeList = 0;1;
DepthStencilSurfaceModeList = 0;

[SF0]
; Stereoise Camera RGB
; D3DUSAGE_RENDERTARGET/D3DUSAGE_DEPTHSTENCIL Height 1024 Width 1024 Usage 1 Format 21 Pool 0 Levels 1 texptr 0 nIndex 1, Mode 1
Height = 1024
Width = 1024
Usage = 1
Format = 21
Pool = 0
Levels = 1
DefMode = 1

[SF1]
; Seems to be related to the camera depth target (guessing the depth buffer is copied to this surface)
; D3DUSAGE_RENDERTARGET/D3DUSAGE_DEPTHSTENCIL Height 1024 Width 1024 Usage 2 Format 1515474505 Pool 0 Levels 1 texptr 0 nIndex 0, Mode 2
Height = 1024
Width = 1024
Usage = 2
Format = 1515474505
Pool = 0
DefMode = 1

[DS0]
; Stereoise Camera Depth target
; CreateDepthStencilSurface Format 80, Width 1024, Height 1024, Format 80, MultiSample 0, MultisampleQuality  0  Mode 2 Index 0
Width = 1024
Height = 1024
Format = 80
DefMode = 1


; Hold Q to set separation to 0 to effectively disable 3D, for use with menus,
; which are 3D by default and nowhere near the scene plane. I was previously
; using this with the camera as well, but unless the switch was automated that
; was too annoying.
[KEY0]
Key = 81
Presets = 0;1;
Type = 2

[PRES0]
; 0% separation, effectively disabling 3D (nVidia seems to pick 1% as a
; minimum, so there is still a small amount of pop, but broken surfaces look
; mostly fine):
UseSepSettings = true
Separation = 0x00000000

[PRES1]
; 100% separation, 0.11 convergence (camera is comfortable even without Q), allow saving this preset:
UseSepSettings = true
SaveSepSettings = true
UseByDef = true
Separation = 0x42c80000
Convergence = 0x3de147ae


; Hold U to set Const1
[KEYB]
Key = 85
Presets = B;C;
Type = 2
[PRESB]
Const1 = 0x3f800000
[PRESC]
Const1 = 0x00000000

; Hold I to set Const2
[KEYC]
Key = 73
Presets = D;E;
Type = 2
[PRESD]
Const2 = 0x3f800000
[PRESE]
Const2 = 0x00000000

; Hold O to set Const3
[KEYD]
Key = 79
Presets = F;10;
Type = 2
[PRESF]
Const3 = 0x3f800000
[PRES10]
Const3 = 0x00000000

; Hold P to set Const4
[KEYE]
Key = 80
Presets = 11;12;
Type = 2
[PRES11]
Const4 = 0x3f800000
[PRES12]
Const4 = 0x00000000

; Copy the MVP and inverted MV matrices to all lighting shaders to allow us to
; calculate the projection matrix and find the horizontal FOV. This technique
; was first used to fix Dreamfall Chapters - take a look at the forum thread
; for that game and it's fix for more details on how this works.


; Possible alternate sources of MV+MVP matrices if lighting shader proves
; unreliable:
;[VS364BA958]
; Hidden/Internal-GUITextureBlit, Hidden/Internal-GUITextureClip

;[VS4AA396AE]
;; TreeSoftOcclusionLeaves.shader
;UseMatrix = true
;GetMatrixFromReg = 0
;InverseMatrix = true
;MatrixReg = 180
;GetConst1FromReg = 4
;
;[VS61CAF50F]
;; Particle Alpha Blend.shader
;UseMatrix = true
;GetMatrixFromReg = 0
;InverseMatrix = true
;MatrixReg = 180
;GetConst1FromReg = 4


; Unity Hidden/Internal-PrePassLighting.shader - ***VERTEX SHADER FOR ALL VARIANTS***
; MV is in c0-c3. Invert this and place it back in c180
; MVP is in c4-c7. We only need the first column so only bother with c4
[VSDF7A050C]
UseMatrix = true
GetMatrixFromReg = 0
InverseMatrix = true
MatrixReg = 180
GetConst1FromReg = 4
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader (older version of VSDF7A050C)
[VS36A3FBCB]
UseMatrix = true
; GetMatrixFromReg = 0
; InverseMatrix = true
MatrixReg = 180
; GetConst1FromReg = 4
SetConst1ToReg = 190



; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL SHADOWS_OFF
[PS0020AFE0]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_OFF SPOT
[PS04ED7E6B]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL SHADOWS_SCREEN
[PS0D1EC394]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL SHADOWS_SCREEN
[PS21FE5699]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_CUBE
[PS284DA432]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PS44DF04B9]
; Older version of PS284DA432 - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL_COOKIE SHADOWS_OFF
[PS30543CCC]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL SHADOWS_SCREEN
[PS356BC878]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_CUBE
[PS3CD83AD3]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PS504A9A58]
; Older version of PS3CD83AD3 - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_OFF
[PS40045626]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_NATIVE SHADOWS_SOFT SPOT
[PS4369D874]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL_COOKIE SHADOWS_SCREEN
[PS49C3F4B4]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_SOFT SPOT
[PS4FD8532C]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT
[PS547CD7A9]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PS58C2298C]
; Older version of PS547CD7A9 - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_NATIVE SHADOWS_SOFT SPOT
[PS57FC4695]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_NATIVE SPOT
[PS5B0A6D77]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL_COOKIE SHADOWS_SCREEN
[PS62F2B6BF]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_NATIVE SHADOWS_SOFT SPOT
[PS736137F7]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL_COOKIE SHADOWS_SCREEN
[PS7667285E]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SPOT
[PS7A9BF7A7]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_CUBE
[PS81ED1203]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PSB0BEF0E8]
; Older version of PS81ED1203 - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT
[PS893B94C1]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PSD6C3206E]
; Older version of PS893B94C1 - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_CUBE SHADOWS_SOFT
[PS921CDD6F]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PS1D6B3B35]
; Older version of PS921CDD6F - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_CUBE
[PS95788CE2]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PSA42B6E09]
; Older version of PS95788CE2 - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT
[PS9DAE0A20]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PSC256BE8F]
; Older version of PS9DAE0A20 - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_NATIVE SPOT
[PSA1F71696]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_CUBE
[PSA43F3389]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PSAC3E0442]
; Older version of PSA43F3389 - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_OFF
[PSB29F30D0]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_NATIVE SPOT
[PSB5628877]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_OFF
[PSC5B3DACA]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL SHADOWS_OFF
[PSC8C82836]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_CUBE
[PSCA11D98D]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PSA7AD24DD]
; Older version of PSCA11D98D - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SPOT
[PSCD7F5093]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_CUBE SHADOWS_SOFT
[PSCDD3D9C8]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PS9F602026]
; Older version of PSCDD3D9C8 - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_OFF
[PSD126442B]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT SHADOWS_CUBE SHADOWS_SOFT
[PSD9464729]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190
[PS8BF5BEC7]
; Older version of PSD9464729 - only difference is one constant
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SPOT
[PSD9EACE72]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL SHADOWS_OFF
[PSDC5DB6D7]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_OFF SPOT
[PSE051955A]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL_COOKIE SHADOWS_OFF
[PSE0BDEC4E]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_OFF
[PSEA0E4115]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_SOFT SPOT
[PSEE9B36D7]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - DIRECTIONAL_COOKIE SHADOWS_OFF
[PSF42872AF]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_OFF SPOT
[PSF4C40BBB]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - SHADOWS_DEPTH SHADOWS_SOFT SPOT
[PSFA0EA836]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassLighting.shader - POINT_COOKIE SHADOWS_OFF
[PSFE9BDFF4]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190


; Unity Hidden/Internal-PrePassCollectShadows.shader - ***VERTEX SHADER FOR ALL VARIANTS***
; Note: This shader has an MVP matrix, but not the matching MV matrix.
[VSBAEDDED5]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassCollectShadows.shader - SHADOWS_NONATIVE SHADOWS_SPLIT_SPHERES
[PS871F16C5]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassCollectShadows.shader - SHADOWS_NONATIVE
[PSAFC69A8C]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassCollectShadows.shader - SHADOWS_NATIVE SHADOWS_SPLIT_SPHERES
[PSC24D6005]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190

; Unity Hidden/Internal-PrePassCollectShadows.shader - SHADOWS_NATIVE
[PSDF3A8F27]
UseMatrix = true
MatrixReg = 180
SetConst1ToReg = 190




[VS8A07B021]
; Match book texture in pause menu, which needs to be adjusted slightly to
; better line up with the UI:
CheckTexCRC = true
VBOffsetList = 0;
TexCounterReg = 251
ValNotDefined = 0
ValForDefined = 1
UseDefinedOnly = false
DefinedTexturesVS = 62949867;
[VB8A07B021.0]
