// CRC32: F810FAAF | Matched 2 variants of 2 shaders: Hidden/Nature/Tree Creator Bark Optimized, Nature/Tree Creator Bark
// 
//    Unity headers extracted from TreeCreatorBarkOptimized.shader
//    Shader "Hidden/Nature/Tree Creator Bark Optimized" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" {}
//       _BumpSpecMap ("Normalmap (GA) Spec (R)", 2D) = "bump" {}
//       _TranslucencyMap ("Trans (RGB) Gloss(A)", 2D) = "white" {}
//       _SpecColor ("Specular Color", Color) = (0.5,0.5,0.5,1)
//       _Scale ("Scale", Vector) = (1,1,1,1)
//       _SquashAmount ("Squash", Float) = 1
//      }
//      Dependency "BillboardShader" = "Hidden/Nature/Tree Creator Bark Rendertex"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="TreeBark" }
//        Pass 5/6 {
//          Name "SHADOWCASTER"
//          Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="TreeBark" }
//          Cull Off
//          Fog { Mode Off }
//          Offset 1, 1
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "SHADOWS_DEPTH" }
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "normal" Normal
//              Bind "texcoord1" TexCoord1
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_Time]
//              Vector 9 [unity_LightShadowBias]
//              Vector 10 [_Scale]
//              Vector 11 [_SquashPlaneNormal]
//              Float 12 [_SquashAmount]
//              Vector 13 [_Wind]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from TreeCreatorBark.shader
//    Shader "Nature/Tree Creator Bark" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _Shininess ("Shininess", Range(0.01,1)) = 0.078125
//       _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" {}
//       _BumpMap ("Normalmap", 2D) = "bump" {}
//       _GlossMap ("Gloss (A)", 2D) = "black" {}
//       _SpecColor ("Specular Color", Color) = (0.5,0.5,0.5,1)
//       _Scale ("Scale", Vector) = (1,1,1,1)
//       _SquashAmount ("Squash", Float) = 1
//      }
//      Dependency "OptimizedShader" = "Hidden/Nature/Tree Creator Bark Optimized"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="TreeBark" }
//        Pass 5/6 {
//          Name "SHADOWCASTER"
//          Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="TreeBark" }
//          Cull Off
//          Fog { Mode Off }
//          Offset 1, 1
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "SHADOWS_DEPTH" }
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "normal" Normal
//              Bind "texcoord1" TexCoord1
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_Time]
//              Vector 9 [unity_LightShadowBias]
//              Vector 10 [_Scale]
//              Vector 11 [_SquashPlaneNormal]
//              Float 12 [_SquashAmount]
//              Vector 13 [_Wind]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0 // Converted from vs_2_0 with DarkStarSword's shadertool.py
dcl_fog o9 // Inserted by shadertool.py for fog compatibility on upgrade from vs_2_0 to vs_3_0
    def c14, 1, 2, -0.5, -1
    def c15, 1.97500002, 0.792999983, 0.375, 0.193000004
    def c16, 2, 3, 0.300000012, 0.100000001
    def c17, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v2
    dcl_texcoord1 v4
    dcl_color v5

dcl_texcoord o0
dcl_position o1


def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    mov r0.xyz, c7
    dp3 r0.x, c14.x, r0
    add r0.x, v5, r0
    mov r0.y, r0.x
    mul r2.xyz, v0, c10
    add r0.x, v5.y, r0
    dp3 r0.x, r2, r0.x
    add r0.xy, r0, c8.y
    mul r0, r0.xxyy, c15
    frc r0, r0
    mad r0, r0, c14.y, c14.z
    frc r0, r0
    mad r0, r0, c14.y, c14.w
    abs r0, r0
    mad r1, -r0, c16.x, c16.y
    mul r0, r0, r0
    mul r0, r0, r1
    add r3.xy, r0.xzzw, r0.ywzw
    mul r0.xyz, r3.y, c13
    mul r1.xyz, v4.y, r0
    mul r0.w, v5.y, c16
    mov r1.w, c14.x
    mul r0.xz, r0.w, v2
    mul r0.y, v4, c16.z
    mad r0.xyz, r3.xyxw, r0, r1
    mad r0.xyz, r0, c13.w, r2
    mad r1.xyz, v4.x, c13, r0
    dp3 r0.x, r1, c11
    add r0.x, r0, c11.w
    mul r0.xyz, r0.x, c11
    add r1.xyz, -r0, r1
    mad r1.xyz, r0, c12.x, r1
    dp4 r0.x, r1, c2
    add r0.x, r0, c9
    max r0.y, r0.x, c17.x
    add r0.y, r0, -r0.x
    mad r0.z, r0.y, c9.y, r0.x
    dp4 r0.w, r1, c3
    dp4 r0.x, r1, c0
    dp4 r0.y, r1, c1
    mov o1, r0

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i -f --auto-fix-vertex-halo --only-autofixed --add-fog-on-sm3-update F810FAAF.txt
texldl r4, c220.z, s0
add r4.w, r0.w, -r4.y
mad r0.x, r4.w, r4.x, r0.x

mov o9, r0.z // Inserted by shadertool.py for fog compatibility on upgrade from vs_2_0 to vs_3_0
    mov o0, r0

// approximately 42 instruction slots used
