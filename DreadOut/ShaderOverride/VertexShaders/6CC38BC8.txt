// CRC32: 6CC38BC8 | Matched 4 variants of 1 shaders: FX/Water4
// 
//    Unity headers extracted from FX-Water4.shader
//    Shader "FX/Water4" {
//      Properties {
//       _ReflectionTex ("Internal reflection", 2D) = "white" {}
//       _MainTex ("Fallback texture", 2D) = "black" {}
//       _ShoreTex ("Shore & Foam texture ", 2D) = "black" {}
//       _BumpMap ("Normals ", 2D) = "bump" {}
//       _DistortParams ("Distortions (Bump waves, Reflection, Fresnel power, Fresnel bias)", Vector) = (1,1,2,1.15)
//       _InvFadeParemeter ("Auto blend parameter (Edge, Shore, Distance scale)", Vector) = (0.15,0.15,0.5,1)
//       _AnimationTiling ("Animation Tiling (Displacement)", Vector) = (2.2,2.2,-1.1,-1.1)
//       _AnimationDirection ("Animation Direction (displacement)", Vector) = (1,1,1,1)
//       _BumpTiling ("Bump Tiling", Vector) = (1,1,-2,3)
//       _BumpDirection ("Bump Direction & Speed", Vector) = (1,1,-1,1)
//       _FresnelScale ("FresnelScale", Range(0.15,4)) = 0.75
//       _BaseColor ("Base color", Color) = (0.54,0.95,0.99,0.5)
//       _ReflectionColor ("Reflection color", Color) = (0.54,0.95,0.99,0.5)
//       _SpecularColor ("Specular color", Color) = (0.72,0.72,0.72,1)
//       _WorldLightDir ("Specular light direction", Vector) = (0,0.1,-0.5,0)
//       _Shininess ("Shininess", Range(2,500)) = 200
//       _Foam ("Foam (intensity, cutoff)", Vector) = (0.1,0.375,0,0)
//       _GerstnerIntensity ("Per vertex displacement", Float) = 1
//       _GAmplitude ("Wave Amplitude", Vector) = (0.3,0.35,0.25,0.25)
//       _GFrequency ("Wave Frequency", Vector) = (1.3,1.35,1.25,1.25)
//       _GSteepness ("Wave Steepness", Vector) = (1,1,1,1)
//       _GSpeed ("Wave Speed", Vector) = (1.2,1.375,1.1,1.5)
//       _GDirectionAB ("Wave Direction", Vector) = (0.3,0.85,0.85,0.25)
//       _GDirectionCD ("Wave Direction", Vector) = (0.1,0.9,0.5,0.5)
//      }
//      Fallback "Transparent/Diffuse"
//      SubShader 2/3 {
//        LOD 300
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/1 {
//          Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Cull Off
//          Blend SrcAlpha OneMinusSrcAlpha
//          ColorMask RGB
//          Program "vp" {
//            SubProgram "d3d9 " {
// 4:           Keywords { "WATER_EDGEBLEND_OFF" "WATER_REFLECTIVE" "WATER_VERTEX_DISPLACEMENT_OFF" }
// 8:           Keywords { "WATER_EDGEBLEND_OFF" "WATER_SIMPLE" "WATER_VERTEX_DISPLACEMENT_OFF" }
// 1:           Keywords { "WATER_EDGEBLEND_ON" "WATER_REFLECTIVE" "WATER_VERTEX_DISPLACEMENT_OFF" }
// 2:           Keywords { "WATER_EDGEBLEND_ON" "WATER_SIMPLE" "WATER_VERTEX_DISPLACEMENT_OFF" }
//              Bind "vertex" Vertex
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_Time]
//              Vector 9 [_WorldSpaceCameraPos]
//              Vector 10 [_ProjectionParams]
//              Vector 11 [_ScreenParams]
//              Vector 12 [_BumpTiling]
//              Vector 13 [_BumpDirection]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    def c14, 0.5, 0, 1, 0
    dcl_position v0

def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    dp4 r0.w, v0, c3
    dp4 r0.z, v0, c2
    dp4 r0.x, v0, c0
    dp4 r0.y, v0, c1

mov o0, r0 // Relocated from line 14 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-vertex-halo --only-autofixed 6CC38BC8.txt
texldl r2, c220.z, s0
add r2.w, r0.w, -r2.y
mad r0.x, r2.w, r2.x, r0.x

    mul r1.xyz, r0.xyww, c14.x

//     mov o0, r0 // Relocated to line 13 with shadertool.py
    mul r1.y, r1, c10.x
    mad o4.xy, r1.z, c11.zwzw, r1
    dp4 r0.y, v0, c6
    mov o4.zw, r0
    dp4 r0.x, v0, c4
    mov r1.x, c8
    mad r1, c13, r1.x, r0.xyxy
    mov r0.z, r0.y
    dp4 r0.y, v0, c5
    mov o1, c14.yzyz
    mul o3, r1, c12
    add o2.xyz, r0, -c9

// approximately 18 instruction slots used
