// CRC32: CF328D22 (FOG + FD26ACA9) | Matched 4 variants of 1 shaders: FX/SimpleWater4
// 
//    Unity headers extracted from FX-SimpleWater4.shader
//    Shader "FX/SimpleWater4" {
//      Properties {
//       _ReflectionTex ("Internal reflection", 2D) = "white" {}
//       _MainTex ("Fallback texture", 2D) = "black" {}
//       _BumpMap ("Normals ", 2D) = "bump" {}
//       _DistortParams ("Distortions (Bump waves, Reflection, Fresnel power, Fresnel bias)", Vector) = (1,1,2,1.15)
//       _InvFadeParemeter ("Auto blend parameter (Edge, Shore, Distance scale)", Vector) = (0.15,0.15,0.5,1)
//       _AnimationTiling ("Animation Tiling (Displacement)", Vector) = (2.2,2.2,-1.1,-1.1)
//       _AnimationDirection ("Animation Direction (displacement)", Vector) = (1,1,1,1)
//       _BumpTiling ("Bump Tiling", Vector) = (1,1,-2,3)
//       _BumpDirection ("Bump Direction & Speed", Vector) = (1,1,-1,1)
//       _FresnelScale ("FresnelScale", Range(0.15,4)) = 0.75
//       _BaseColor ("Base color", Color) = (0.54,0.95,0.99,0.5)
//       _ReflectionColor ("Reflection color", Color) = (0.54,0.95,0.99,0.5)
//       _SpecularColor ("Specular color", Color) = (0.72,0.72,0.72,1)
//       _WorldLightDir ("Specular light direction", Vector) = (0,0.1,-0.5,0)
//       _Shininess ("Shininess", Range(2,500)) = 200
//       _GerstnerIntensity ("Per vertex displacement", Float) = 1
//       _GAmplitude ("Wave Amplitude", Vector) = (0.3,0.35,0.25,0.25)
//       _GFrequency ("Wave Frequency", Vector) = (1.3,1.35,1.25,1.25)
//       _GSteepness ("Wave Steepness", Vector) = (1,1,1,1)
//       _GSpeed ("Wave Speed", Vector) = (1.2,1.375,1.1,1.5)
//       _GDirectionAB ("Wave Direction", Vector) = (0.3,0.85,0.85,0.25)
//       _GDirectionCD ("Wave Direction", Vector) = (0.1,0.9,0.5,0.5)
//      }
//      Fallback "Transparent/Diffuse"
//      SubShader 1/3 {
//        LOD 500
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        GrabPass {
//          "_RefractionTex"
//         }
//        Pass 1/1 {
//          Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Cull Off
//          Blend SrcAlpha OneMinusSrcAlpha
//          ColorMask RGB
//          Program "vp" {
//            SubProgram "d3d9 " {
// 4:           Keywords { "WATER_EDGEBLEND_OFF" "WATER_REFLECTIVE" "WATER_VERTEX_DISPLACEMENT_OFF" }
// 8:           Keywords { "WATER_EDGEBLEND_OFF" "WATER_SIMPLE" "WATER_VERTEX_DISPLACEMENT_OFF" }
// 1:           Keywords { "WATER_EDGEBLEND_ON" "WATER_REFLECTIVE" "WATER_VERTEX_DISPLACEMENT_OFF" }
// 2:           Keywords { "WATER_EDGEBLEND_ON" "WATER_SIMPLE" "WATER_VERTEX_DISPLACEMENT_OFF" }
//              Bind "vertex" Vertex
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_Time]
//              Vector 9 [_WorldSpaceCameraPos]
//              Vector 10 [_ProjectionParams]
//              Vector 11 [_ScreenParams]
//              Vector 12 [_BumpTiling]
//              Vector 13 [_BumpDirection]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    dcl_fog o9
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    def c14, 0.5, 0, 1, 0
    dcl_position v0

def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    dp4 r2.y, v0, c1
    dp4 r2.w, v0, c3
    dp4 r3.x, v0, c0
    mov r0.w, r2
    dp4 r0.z, v0, c2
    mov r0.y, r2
    mov r0.x, r3

mov o0, r0 // Relocated from line 20 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-vertex-halo --only-autofixed CF328D22.txt
texldl r4, c220.z, s0
add r4.w, r0.w, -r4.y
mad r0.x, r4.w, r4.x, r0.x

    mul r1.xyz, r0.xyww, c14.x
    mul r1.y, r1, c10.x

//     mov o0, r0 // Relocated to line 18 with shadertool.py
    mov o9, r0.z
    mov r3.y, -r2
    mov r0.x, c8
    dp4 r2.x, v0, c4
    dp4 r2.z, v0, c6
    mad o4.xy, r1.z, c11.zwzw, r1
    mad r1, c13, r0.x, r2.xzxz
    dp4 r2.y, v0, c5
    add r0.xy, r2.w, r3
    mov o1, c14.yzyz
    mul o3, r1, c12
    mov o4.zw, r0
    mov o5.zw, r0
    add o2.xyz, r2, -c9
    mul o5.xy, r0, c14.x

// approximately 25 instruction slots used
