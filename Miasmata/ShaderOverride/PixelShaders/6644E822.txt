// light shafts transfer to screen, bloom, etc


//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float dbg_disable_lightshafts;
//   float2 detail_step;
//   float tunnel;
//
//
// Registers:
//
//   Name                    Reg   Size
//   ----------------------- ----- ----
//   tunnel                  c0       1
//   dbg_disable_lightshafts c1       1
//   detail_step             c2       1
//
//
// Default values:
//
//   tunnel
//     c0   = { 0, 0, 0, 0 };
//
//   dbg_disable_lightshafts
//     c1   = { 0, 0, 0, 0 };
//
//   detail_step
//     c2   = { 0, 0, 0, 0 };
//

//PRESHADER     preshader
//PRESHADER     mul c0.xy, (0.5, 0.5), c2.xy
//PRESHADER     neg r0.x, c1.x
//PRESHADER     max c1.x, r0.x, c1.x
//PRESHADER     mul r0.x, c0.x, (0.3)
//PRESHADER     neg r1.x, r0.x
//PRESHADER     add c3.x, r1.x, (0.707)

// approximately 6 instructions used
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float bloom_factor;
//   sampler2D bloom_sampler;
//   float2 bloom_tc_off;
//   float contrast;
//   sampler2D detail_sampler;
//   float2 double_image_ofs;
//   sampler2D exposure_sampler;
//   float fade;
//   float3 light_dir;
//   float3 lightshaft_binorm;
//   float3 lightshaft_norm;
//   float4 ls_color;
//   float4 ls_fog_color;
//   float4 over_exposure;
//   float4 saturation;
//   sampler2D shaft1_sampler;
//
//
// Registers:
//
//   Name              Reg   Size
//   ----------------- ----- ----
//   bloom_factor      c4       1
//   bloom_tc_off      c5       1
//   over_exposure     c6       1
//   saturation        c7       1
//   contrast          c8       1
//   fade              c9       1
//   light_dir         c10      1
//   lightshaft_norm   c11      1
//   lightshaft_binorm c12      1
//   ls_fog_color      c13      1
//   ls_color          c14      1
//   double_image_ofs  c15      1
//   bloom_sampler     s0       1
//   exposure_sampler  s1       1
//   shaft1_sampler    s2       1
//   detail_sampler    s3       1
//
//
// Default values:
//
//   bloom_factor
//     c4   = { 0, 0, 0, 0 };
//
//   bloom_tc_off
//     c5   = { 0, 0, 0, 0 };
//
//   over_exposure
//     c6   = { 0, 0, 0, 0 };
//
//   saturation
//     c7   = { 0, 0, 0, 0 };
//
//   contrast
//     c8   = { 1, 0, 0, 0 };
//
//   fade
//     c9   = { 0, 0, 0, 0 };
//
//   light_dir
//     c10  = { 0, 0, 0, 0 };
//
//   lightshaft_norm
//     c11  = { 0, 0, 0, 0 };
//
//   lightshaft_binorm
//     c12  = { 0, 0, 0, 0 };
//
//   ls_fog_color
//     c13  = { 0, 0, 0, 0 };
//
//   ls_color
//     c14  = { 0, 0, 0, 0 };
//
//   double_image_ofs
//     c15  = { 0, 0, 0, 0 };
//

    ps_3_0
    def c16, 0.159184977, 0.318369955, 0.5, 0.875
    def c17, 0.5, 0.0625, 16, 0.333333343
    def c18, 0.5, 0, 0.0208350997, -0.0851330012
    def c19, 0.180141002, -0.330299497, 0.999866009, 0.159184977
    def c20, 0, 1, -2, 1.57079637
    def c21, -0, -3.14159274, 8, 0.0625
    def c22, 0.454545468, 5, 1, 0
    def c23, 0.298999995, 0.587000012, 0.114, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xyz // Affects light shafts
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

dcl_texcoord3 v3.xyz // New input from vertex shader with uncorrected world-space
def c220, 0, 1, 0.0625, 0.5
dcl_2d s13
dcl vPos.xy

// Use corrected world-space by default:
mov r11.xyz, v1

// To avoid clipping, use the uncorrected world position on the left and right
// separation/2 of the screen. Won't be accurate, but will be less jarring.

rcp r22.x, c222.x
mul r22.x, vPos.x, r22.x
texldl r31, c220, s13

mov r30.x, c220.x

mul r31.w, r31.x, c220.w
if_lt r22.x, r31.w
	// left separation/2 of screen. Interpolate between the corrected and
	// uncorrected coordinates to remove the clipping without a visible
	// seam in the fog
	add r22.z, -r22.x, r31.w
	rcp r31.z, r31.w
	mul r22.w, r22.z, r31.z
	mov r23.xyz, v3
	mov r21.xyz, v1
	lrp r11, r22.www, r23, r21
endif

add r30.w, c220.y, r31.w
if_gt r22.x, r30.w
	// right separation/2 of screen. Interpolate between the corrected and
	// uncorrected coordinates to remove the clipping without a visible
	// seam in the fog
	add r22.z, -r22.x, r30.w
	rcp r31.z, r31.w
	mul r22.w, r22.z, r31.z
	mov r23.xyz, v3
	mov r21.xyz, v1
	lrp r11, r22.www, r23, r21
endif

    dp3 r0.y, r11, c12 // lightshaft_binorm
    dp3 r0.x, r11, c11 // lightshaft_norm
    add r0.zw, -r0_abs.xyxy, r0_abs.xyyx
    cmp r1.xy, r0.z, r0_abs, r0_abs.yxzw
    cmp r0.z, r0.w, c20.x, c20.y
    rcp r0.w, r1.y
    mul r0.w, r0.w, r1.x
    mul r1.x, r0.w, r0.w
    mad r1.y, r1.x, c18.z, c18.w
    mad r1.y, r1.x, r1.y, c19.x
    mad r1.y, r1.x, r1.y, c19.y
    mad r1.x, r1.x, r1.y, c19.z
    mul r0.w, r0.w, r1.x
    mad r1.x, r0.w, c20.z, c20.w
    mad r0.z, r1.x, r0.z, r0.w
    cmp r0.w, r0.x, c21.x, c21.y
    add r0.z, r0.w, r0.z
    add r0.w, r0.z, r0.z
    add r1.x, -r0.x, r0.y
    cmp r1.xy, r1.x, r0, r0.yxzw
    dp2add r0.x, r0, r0, c18.y
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    cmp r0.y, r1.y, c20.y, c20.x
    cmp r0.y, r1.x, c18.y, r0.y
    mad r1.x, r0.y, -r0.w, r0.z
    dp3 r0.y, r11, c10 // light_dir
    max r1.z, r0_abs.y, r0.x
    rcp r0.z, r1.z
    min r1.z, r0.x, r0_abs.y
    mul r0.z, r0.z, r1.z
    mul r0.w, r0.z, r0.z
    mad r1.z, r0.w, c18.z, c18.w
    mad r1.z, r0.w, r1.z, c19.x
    mad r1.z, r0.w, r1.z, c19.y
    mad r0.w, r0.w, r1.z, c19.z
    mul r0.z, r0.w, r0.z
    mad r0.w, r0.z, c20.z, c20.w
    add r1.z, -r0_abs.y, r0.x
    min r1.w, r0.x, r0.y
    cmp r0.xy, r1.wzzw, c20.x, c20.y
    mad r0.y, r0.w, r0.y, r0.z
    add r0.z, r0.y, r0.y
    mad r1.y, r0.x, -r0.z, r0.y
    mad r0.xy, r1, c16, c16.z
    mul r1.x, r1.x, c19.w
    add r1.yw, -c0.xxzy, v0.xxzy
    add r2.xy, r1.ywzw, c15
    texld r3, r1.ywzw, s3
    texld r2, r2, s3
    add r2, r2, r3
    mul r0.w, r2.w, c21.z
    frc r1.y, r0.w
    add r0.w, r0.w, -r1.y
    mul r0.w, r0.w, c21.w
    min r1.y, r0.w, c16.w
    mad r0.z, r0.y, c21.w, r1.y
    texld r3, r0.xzzw, s2 // shaf1_sampler
    mov r1.z, r0.z
    add r0.xy, r1.xzzw, c17
    texld r0, r0, s2 // shaf1_sampler
    mad r0.z, r2.w, c18.x, -r1.y
    mul r0.z, r0.z, c17.z
    min r1.x, r0.z, c20.y
    lrp r4.xy, r1.x, r0, r3
    add r0.xy, c5, v0
    texld r0, r0, s0
    mad r0.xyz, r2, -c18.x, r0
    mul r1.xyz, r2, c18.x
    mad r0.xyz, c4.x, r0, r1
    lrp r1.xyz, r4.y, r0, c13
    mul r2.xyz, r4.x, c14
    texld r3, c18.y, s1
    mad r1.xyz, r2, r3.x, r1
    cmp r0.xyz, -c1.x, r1, r0
    rcp r0.w, r3.w
    mad r0.xyz, r0, r3.w, -r0.w
    mad r0.xyz, r0, c8.x, r0.w
    add r0.w, r0.y, r0.x
    add r0.w, r0.z, r0.w
    mad r0.xyz, r0.w, -c17.w, r0
    mul r0.w, r0.w, c17.w
    mad r0.xyz, r0, c7, r0.w
    max r1.xyz, r0, c18.y
    add r0.xyz, r1, c20.y
    rcp r2.x, r0.x
    rcp r2.y, r0.y
    rcp r2.z, r0.z
    mul r0.xyz, r1, r2
    log r2.x, r0.x
    log r2.y, r0.y
    log r2.z, r0.z
    mul r0.xyz, r2, c22.x
    exp r2.x, r0.x
    exp r2.y, r0.y
    exp r2.z, r0.z
    mul r0.xyz, r1, r2
    mul r0.xyz, r0, c6
    mul r0.xyz, r0, c9.x
    add r1.xy, -c18.x, v0
    dp2add r0.w, r1, r1, c18.y
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    add r0.w, -r0.w, c3.x
    mad_sat r0.w, r0.w, c22.y, c22.z
    mul r0.xyz, r0.w, r0
    dp3 oC0.w, r0, c23
    mov oC0.xyz, r0

// approximately 110 instruction slots used (6 texture, 104 arithmetic)
