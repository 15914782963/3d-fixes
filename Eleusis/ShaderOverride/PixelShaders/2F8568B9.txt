//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 FalloffParameters;
//   float4 LightPosition;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4x4 ScreenToShadowMatrix;
//   float4x4 ScreenToWorld;
//   float3 ShadowBufferSizeAndSoftTransitionScale;
//   sampler2D ShadowDepthTexture;
//   float4 ShadowModulateColor;
//   float2 ShadowTexelSize;
//
//
// Registers:
//
//   Name                                   Reg   Size
//   -------------------------------------- ----- ----
//   ShadowModulateColor                    c0       1
//   ScreenPositionScaleBias                c1       1
//   MinZ_MaxZRatio                         c2       1
//   NvStereoEnabled                        c3       1
//   ScreenToWorld                          c7       4
//   ScreenToShadowMatrix                   c11      4
//   LightPosition                          c15      1
//   FalloffParameters                      c16      1
//   ShadowBufferSizeAndSoftTransitionScale c17      1
//   ShadowTexelSize                        c18      1
//   SceneColorTexture                      s0       1
//   NvStereoFixTexture                     s1       1
//   ShadowDepthTexture                     s2       1
//

    ps_3_0
    def c4, 0.0625, 0, 1, -1
    def c5, 0.25, 0, 0, 0
    def c6, 0.5, 1.5, -0.999000013, 2.5
    dcl_texcoord v0.xyw
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    abs r0.x, c3.x
    if_ne c3.x, -c3.x
      texld r1, c4, s1
      add r0.y, -r1.y, v0.w
      mad r1.x, r1.x, r0.y, v0.x
      mov r1.yz, v0.xyww
    else
      mov r1.xyz, c4.y
    endif
    cmp r0.xyz, -r0.x, v0.xyww, r1
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.y
    texldl r0, r0, s0
    mov r1.zw, c4
    add r0.x, r1.z, -c2.y
    add r0.x, -r0.x, r0.w
    rcp r0.x, r0.x
    mul r0.x, r0.x, -c2.x
    rcp r0.y, v0.w
    mul r0.yz, r0.y, v0.xxyw
    mul r0.yz, r0.x, r0
    mul r2, r0.z, c12
    mad r2, c11, r0.y, r2
    mad r2, c13, r0.x, r2
    add r2, r2, c14
    rcp r0.w, r2.w
    mul r1.xy, r0.w, r2
    mul r2.xy, r1, c17
    frc r2.xy, r2
    mad r1.xy, r1, c17, r1.w
    add r1.xy, -r2, r1
    add r3, r1.xyxy, c6.xxxy
    mul r3, r3, c18.xyxy
    mul r4, r3.xyxx, c4.zzyy
    texldl r4, r4, s2
    max r0.w, c6.z, -r2.z
    add r2.z, r0.w, r4.x
    mad_sat r4.x, r2.z, c17.z, r1.z
    mul r3, r3.zwxx, c4.zzyy
    texldl r3, r3, s2
    add r2.z, r0.w, r3.x
    mad_sat r4.y, r2.z, c17.z, r1.z
    add r3, r1.xyxy, c6.xwyx
    mul r3, r3, c18.xyxy
    mul r5, r3.xyxx, c4.zzyy
    texldl r5, r5, s2
    add r2.z, r0.w, r5.x
    mad_sat r4.z, r2.z, c17.z, r1.z
    mul r3, r3.zwxx, c4.zzyy
    texldl r3, r3, s2
    add r2.z, r0.w, r3.x
    mad_sat r3.x, r2.z, c17.z, r1.z
    add r5, r1.xyxy, c6.yyyw
    mul r5, r5, c18.xyxy
    mul r6, r5.xyxx, c4.zzyy
    texldl r6, r6, s2
    add r2.z, r0.w, r6.x
    mad_sat r3.y, r2.z, c17.z, r1.z
    mul r5, r5.zwxx, c4.zzyy
    texldl r5, r5, s2
    add r2.z, r0.w, r5.x
    mad_sat r3.z, r2.z, c17.z, r1.z
    add r5, r1.xyxy, c6.wxwy
    mul r5, r5, c18.xyxy
    mul r6, r5.xyxx, c4.zzyy
    texldl r6, r6, s2
    add r2.z, r0.w, r6.x
    mad_sat r6.x, r2.z, c17.z, r1.z
    mul r5, r5.zwxx, c4.zzyy
    texldl r5, r5, s2
    add r2.z, r0.w, r5.x
    mad_sat r6.y, r2.z, c17.z, r1.z
    add r1.xy, r1, c6.w
    mul r5.xy, r1, c18
    mov r5.zw, c4.y
    texldl r5, r5, s2
    add r0.w, r0.w, r5.x
    mad_sat r6.z, r0.w, c17.z, r1.z
    lrp r5, r2.x, r3.xyyz, r4.xyyz
    lrp r1.xy, r2.y, r5.ywzw, r5.xzzw
    lrp r4, r2.x, r6.xyyz, r3.xyyz
    lrp r3.xy, r2.y, r4.ywzw, r4.xzzw
    add r0.w, r1.y, r1.x
    add r0.w, r3.x, r0.w
    add r0.w, r3.y, r0.w
    mul_sat_pp r0.w, r0.w, c5.x
    mul r1.xyz, r0.z, c8
    mad r1.xyz, c7, r0.y, r1
    mad r0.xyz, c9, r0.x, r1
    add r0.xyz, r0, c10
    add r0.xyz, -r0, c15
    mul r0.xyz, r0, c15.w
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    mad r0.x, r0.x, c16.y, c16.z
    max r1.x, r0.x, c4.y
    mad r0.x, r1.x, -r1.x, c4.z
    max r1.x, r0.x, c4.y
    pow_pp r0.x, r1.x, c16.x
    add r1, r1.w, c0
    mad r1, r0.x, r1, c4.z
    mul r0.x, r0.w, r0.w
    add r2, -r1, c4.z
    mad oC0, r0.x, r2, r1

// approximately 121 instruction slots used (21 texture, 100 arithmetic)
