// CRC32: A7B5900D | Matched 11 variants of 9 shaders: Final/Enemy/EnemyAliveMaterial, Final/Enemy/EnemyAliveMaterialAlpha, Final/Enemy/EnemyAliveMaterialCutoff, Final/Enemy/EnemyDeadMaterial, Final/Hair/Hair_Low, Final/Interior/Shops_pixel-lit_From-Ats_ambientTex, Final/Nexus/Nexus_Regular, Final/Special/BackdropNear, Final/Special/BannerMakerShader
// 
//    Unity headers extracted from S_EnemyAliveMaterial_Shader.shader
//    Shader "Final/Enemy/EnemyAliveMaterial" {
//      Properties {
//       _GlowControl ("Glow Amount", Float) = 20
//       _ElementalColor ("_ElementalColor", Color) = (1,1,1,0.1)
//       _MainTex ("_MainTex", 2D) = "white" {}
//       _BumpMap ("_BumpMap", 2D) = "black" {}
//       _AmbientTex ("_AmbientTex", 2D) = "black" {}
//      }
//      Fallback "Diffuse"
//      SubShader 3/3 {
//        LOD 100
//        Tags { "QUEUE"="Geometry" "IGNOREPROJECTOR"="False" "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry" "IGNOREPROJECTOR"="False" "RenderType"="Opaque" }
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_WorldSpaceCameraPos]
//              Vector 9 [_ProjectionParams]
//              Vector 10 [_ScreenParams]
//              Vector 11 [unity_4LightPosX0]
//              Vector 12 [unity_4LightPosY0]
//              Vector 13 [unity_4LightPosZ0]
//              Vector 14 [unity_4LightAtten0]
//              Vector 15 [unity_LightColor0]
//              Vector 16 [unity_LightColor1]
//              Vector 17 [unity_LightColor2]
//              Vector 18 [unity_LightColor3]
//              Vector 19 [unity_SHAr]
//              Vector 20 [unity_SHAg]
//              Vector 21 [unity_SHAb]
//              Vector 22 [unity_SHBr]
//              Vector 23 [unity_SHBg]
//              Vector 24 [unity_SHBb]
//              Vector 25 [unity_SHC]
//              Vector 26 [unity_Scale]
//              Vector 27 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from S_EnemyAliveMaterialAlpha_Shader.shader
//    Shader "Final/Enemy/EnemyAliveMaterialAlpha" {
//      Properties {
//       _GlowControl ("Glow Amount", Float) = 20
//       _ElementalColor ("_ElementalColor", Color) = (1,1,1,0.1)
//       _MainTex ("_MainTex", 2D) = "white" {}
//       _BumpMap ("_BumpMap", 2D) = "black" {}
//       _AmbientTex ("_AmbientTex", 2D) = "black" {}
//       _Alpha ("Alpha Amount", Range(0,1)) = 1
//      }
//      Fallback "Diffuse"
//      SubShader 2/2 {
//        LOD 100
//        Tags { "QUEUE"="Geometry" "IGNOREPROJECTOR"="False" "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry" "IGNOREPROJECTOR"="False" "RenderType"="Opaque" }
//          Cull Off
//          Blend SrcAlpha OneMinusSrcAlpha
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_WorldSpaceCameraPos]
//              Vector 9 [_ProjectionParams]
//              Vector 10 [_ScreenParams]
//              Vector 11 [unity_4LightPosX0]
//              Vector 12 [unity_4LightPosY0]
//              Vector 13 [unity_4LightPosZ0]
//              Vector 14 [unity_4LightAtten0]
//              Vector 15 [unity_LightColor0]
//              Vector 16 [unity_LightColor1]
//              Vector 17 [unity_LightColor2]
//              Vector 18 [unity_LightColor3]
//              Vector 19 [unity_SHAr]
//              Vector 20 [unity_SHAg]
//              Vector 21 [unity_SHAb]
//              Vector 22 [unity_SHBr]
//              Vector 23 [unity_SHBg]
//              Vector 24 [unity_SHBb]
//              Vector 25 [unity_SHC]
//              Vector 26 [unity_Scale]
//              Vector 27 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from S_EnemyAliveMaterialCutoff_Shader .shader
//    Shader "Final/Enemy/EnemyAliveMaterialCutoff" {
//      Properties {
//       _GlowControl ("Glow Amount", Float) = 20
//       _ElementalColor ("_ElementalColor", Color) = (1,1,1,0.1)
//       _MainTex ("_MainTex", 2D) = "white" {}
//       _BumpMap ("_BumpMap", 2D) = "black" {}
//       _AmbientTex ("_AmbientTex", 2D) = "black" {}
//       _Cutoff ("Alpha cutoff", Range(0,1)) = 0.5
//      }
//      Fallback "Diffuse"
//      SubShader 3/3 {
//        LOD 100
//        Tags { "QUEUE"="Geometry" "IGNOREPROJECTOR"="False" "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry" "IGNOREPROJECTOR"="False" "RenderType"="Opaque" }
//          Cull Off
//          ColorMask RGB
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_WorldSpaceCameraPos]
//              Vector 9 [_ProjectionParams]
//              Vector 10 [_ScreenParams]
//              Vector 11 [unity_4LightPosX0]
//              Vector 12 [unity_4LightPosY0]
//              Vector 13 [unity_4LightPosZ0]
//              Vector 14 [unity_4LightAtten0]
//              Vector 15 [unity_LightColor0]
//              Vector 16 [unity_LightColor1]
//              Vector 17 [unity_LightColor2]
//              Vector 18 [unity_LightColor3]
//              Vector 19 [unity_SHAr]
//              Vector 20 [unity_SHAg]
//              Vector 21 [unity_SHAb]
//              Vector 22 [unity_SHBr]
//              Vector 23 [unity_SHBg]
//              Vector 24 [unity_SHBb]
//              Vector 25 [unity_SHC]
//              Vector 26 [unity_Scale]
//              Vector 27 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from S_EnemyDeadMaterial_Shader.shader
//    Shader "Final/Enemy/EnemyDeadMaterial" {
//      Properties {
//       _bloodTiling ("Blood Tiling", Float) = 2
//       _ElementalColor ("Blood Color", Color) = (0.1,0,0.02,1)
//       _MainTex ("_MainTex", 2D) = "white" {}
//       _BumpMap ("_BumpMap", 2D) = "black" {}
//       _AmbientTex ("_AmbientTex", 2D) = "black" {}
//      }
//      Fallback "Diffuse"
//      SubShader 2/2 {
//        LOD 100
//        Tags { "QUEUE"="Geometry" "IGNOREPROJECTOR"="False" "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry" "IGNOREPROJECTOR"="False" "RenderType"="Opaque" }
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_WorldSpaceCameraPos]
//              Vector 9 [_ProjectionParams]
//              Vector 10 [_ScreenParams]
//              Vector 11 [unity_4LightPosX0]
//              Vector 12 [unity_4LightPosY0]
//              Vector 13 [unity_4LightPosZ0]
//              Vector 14 [unity_4LightAtten0]
//              Vector 15 [unity_LightColor0]
//              Vector 16 [unity_LightColor1]
//              Vector 17 [unity_LightColor2]
//              Vector 18 [unity_LightColor3]
//              Vector 19 [unity_SHAr]
//              Vector 20 [unity_SHAg]
//              Vector 21 [unity_SHAb]
//              Vector 22 [unity_SHBr]
//              Vector 23 [unity_SHBg]
//              Vector 24 [unity_SHBb]
//              Vector 25 [unity_SHC]
//              Vector 26 [unity_Scale]
//              Vector 27 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from S_HairLow_Shader.shader
//    Shader "Final/Hair/Hair_Low" {
//      Properties {
//       _HairColor ("Hair Color", Color) = (1,1,1,1)
//       _Cutoff ("Alpha cutoff", Range(0,1)) = 0.5
//       _MainTex ("_MainTex", 2D) = "white" {}
//       _BumpMap ("_BumpMap", 2D) = "black" {}
//      }
//      SubShader 2/2 {
//        LOD 100
//        Tags { "RenderType"="Transparent" }
//        Pass 1/6 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "RenderType"="Transparent" }
//          Cull Off
//          ColorMask RGB
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_WorldSpaceCameraPos]
//              Vector 9 [_ProjectionParams]
//              Vector 10 [_ScreenParams]
//              Vector 11 [unity_4LightPosX0]
//              Vector 12 [unity_4LightPosY0]
//              Vector 13 [unity_4LightPosZ0]
//              Vector 14 [unity_4LightAtten0]
//              Vector 15 [unity_LightColor0]
//              Vector 16 [unity_LightColor1]
//              Vector 17 [unity_LightColor2]
//              Vector 18 [unity_LightColor3]
//              Vector 19 [unity_SHAr]
//              Vector 20 [unity_SHAg]
//              Vector 21 [unity_SHAb]
//              Vector 22 [unity_SHBr]
//              Vector 23 [unity_SHBg]
//              Vector 24 [unity_SHBb]
//              Vector 25 [unity_SHC]
//              Vector 26 [unity_Scale]
//              Vector 27 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from S_Interior_Cutoff_Shader.shader
//    Shader "Final/Interior/Shops_pixel-lit_From-Ats_ambientTex" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _MainTex ("Base (RGB) Trans (A)", 2D) = "white" {}
//       _Cutoff ("Alpha cutoff", Range(0,1)) = 0.5
//       _BumpMap ("_BumpMap", 2D) = "black" {}
//       _AmbientTex ("_AmbientTex", 2D) = "black" {}
//      }
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 5/5 {
//        LOD 100
//        Tags { "IGNOREPROJECTOR"="True" "RenderType"="TreeLeaf" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "IGNOREPROJECTOR"="True" "RenderType"="TreeLeaf" }
//          Cull Off
//          ColorMask RGB
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_WorldSpaceCameraPos]
//              Vector 9 [_ProjectionParams]
//              Vector 10 [_ScreenParams]
//              Vector 11 [unity_4LightPosX0]
//              Vector 12 [unity_4LightPosY0]
//              Vector 13 [unity_4LightPosZ0]
//              Vector 14 [unity_4LightAtten0]
//              Vector 15 [unity_LightColor0]
//              Vector 16 [unity_LightColor1]
//              Vector 17 [unity_LightColor2]
//              Vector 18 [unity_LightColor3]
//              Vector 19 [unity_SHAr]
//              Vector 20 [unity_SHAg]
//              Vector 21 [unity_SHAb]
//              Vector 22 [unity_SHBr]
//              Vector 23 [unity_SHBg]
//              Vector 24 [unity_SHBb]
//              Vector 25 [unity_SHC]
//              Vector 26 [unity_Scale]
//              Vector 27 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from S_Nexus_Regular_Shader.shader
//    Shader "Final/Nexus/Nexus_Regular" {
//      Properties {
//       _MainTex ("_MainTex", 2D) = "white" {}
//       _BumpMap ("_BumpMap", 2D) = "black" {}
//       _AmbientTex ("_AmbientTex", 2D) = "black" {}
//      }
//      Fallback "Diffuse"
// 1:   SubShader 2/3 {
// 2:   SubShader 3/3 {
// 2:     LOD 100
// 1:     LOD 200
//        Tags { "QUEUE"="Geometry" "IGNOREPROJECTOR"="False" "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Geometry" "IGNOREPROJECTOR"="False" "RenderType"="Opaque" }
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_WorldSpaceCameraPos]
//              Vector 9 [_ProjectionParams]
//              Vector 10 [_ScreenParams]
//              Vector 11 [unity_4LightPosX0]
//              Vector 12 [unity_4LightPosY0]
//              Vector 13 [unity_4LightPosZ0]
//              Vector 14 [unity_4LightAtten0]
//              Vector 15 [unity_LightColor0]
//              Vector 16 [unity_LightColor1]
//              Vector 17 [unity_LightColor2]
//              Vector 18 [unity_LightColor3]
//              Vector 19 [unity_SHAr]
//              Vector 20 [unity_SHAg]
//              Vector 21 [unity_SHAb]
//              Vector 22 [unity_SHBr]
//              Vector 23 [unity_SHBg]
//              Vector 24 [unity_SHBb]
//              Vector 25 [unity_SHC]
//              Vector 26 [unity_Scale]
//              Vector 27 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from S_Backdrop_Shader.shader
//    Shader "Final/Special/BackdropNear" {
//      Properties {
//       _Color ("Color Tint", Color) = (1,1,1,1)
//       _MainTex ("Diffuse", 2D) = "white" {}
//       _Cutoff ("Alpha cutoff", Range(0,1)) = 0.2
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 100
//        Tags { "ForceNoShadowCasting"="True" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="True" "RenderType"="TransparentCutout" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "ForceNoShadowCasting"="True" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="True" "RenderType"="TransparentCutout" }
//          Cull Off
//          ColorMask RGB
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_WorldSpaceCameraPos]
//              Vector 9 [_ProjectionParams]
//              Vector 10 [_ScreenParams]
//              Vector 11 [unity_4LightPosX0]
//              Vector 12 [unity_4LightPosY0]
//              Vector 13 [unity_4LightPosZ0]
//              Vector 14 [unity_4LightAtten0]
//              Vector 15 [unity_LightColor0]
//              Vector 16 [unity_LightColor1]
//              Vector 17 [unity_LightColor2]
//              Vector 18 [unity_LightColor3]
//              Vector 19 [unity_SHAr]
//              Vector 20 [unity_SHAg]
//              Vector 21 [unity_SHAb]
//              Vector 22 [unity_SHBr]
//              Vector 23 [unity_SHBg]
//              Vector 24 [unity_SHBb]
//              Vector 25 [unity_SHC]
//              Vector 26 [unity_Scale]
//              Vector 27 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from S_Banner_Shader.shader
//    Shader "Final/Special/BannerMakerShader" {
//      Properties {
//       _WindMagnitude ("Wind Magnitude", Float) = 1
//       _Dec1Color ("Decal 1 Color", Color) = (1,0,0,1)
//       _Dec2Color ("Decal 2 Color", Color) = (0,1,0,1)
//       _Dec3Color ("Decal 2 Color", Color) = (0,0,1,1)
//       _BGColor ("BG Color", Color) = (1,0,1,1)
//       _Dec1Tex ("Decal Inner Texture", 2D) = "black" {}
//       _Dec2Tex ("Decal Outer Texture", 2D) = "black" {}
//       _Dec3Tex ("Border Texture", 2D) = "black" {}
//       _MainTex ("Base (RGB) Trans (A)", 2D) = "white" {}
//       _Cutoff ("Alpha cutoff", Range(0,1)) = 0.5
//       _BumpMap ("_BumpMap", 2D) = "black" {}
//      }
// 1:   SubShader 2/3 {
// 2:   SubShader 3/3 {
// 2:     LOD 100
// 1:     LOD 200
//        Tags { "IGNOREPROJECTOR"="True" "RenderType"="TreeLeaf" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "IGNOREPROJECTOR"="True" "RenderType"="TreeLeaf" }
//          Cull Off
//          ColorMask RGB
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_WorldSpaceCameraPos]
//              Vector 9 [_ProjectionParams]
//              Vector 10 [_ScreenParams]
//              Vector 11 [unity_4LightPosX0]
//              Vector 12 [unity_4LightPosY0]
//              Vector 13 [unity_4LightPosZ0]
//              Vector 14 [unity_4LightAtten0]
//              Vector 15 [unity_LightColor0]
//              Vector 16 [unity_LightColor1]
//              Vector 17 [unity_LightColor2]
//              Vector 18 [unity_LightColor3]
//              Vector 19 [unity_SHAr]
//              Vector 20 [unity_SHAg]
//              Vector 21 [unity_SHAb]
//              Vector 22 [unity_SHBr]
//              Vector 23 [unity_SHBg]
//              Vector 24 [unity_SHBb]
//              Vector 25 [unity_SHC]
//              Vector 26 [unity_Scale]
//              Vector 27 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    def c28, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2

def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    mul r3.xyz, v1, c26.w
    dp3 r5.x, r3, c4
    dp4 r4.zw, v0, c5
    add r2, -r4.z, c12
    dp3 r4.z, r3, c5
    dp3 r3.x, r3, c6
    dp4 r3.w, v0, c4
    mul r0, r4.z, r2
    add r1, -r3.w, c11
    dp4 r4.xy, v0, c6
    mul r2, r2, r2
    mov r5.z, r3.x
    mov r5.y, r4.z
    mov r5.w, c28.x
    mad r0, r5.x, r1, r0
    mad r2, r1, r1, r2
    add r1, -r4.x, c13
    mad r2, r1, r1, r2
    mad r0, r3.x, r1, r0
    mul r1, r2, c14
    add r1, r1, c28.x
    mov o2.z, r3.x
    rsq r2.x, r2.x
    rsq r2.y, r2.y
    rsq r2.z, r2.z
    rsq r2.w, r2.w
    mul r0, r0, r2
    dp4 r2.z, r5, c21
    dp4 r2.y, r5, c20
    dp4 r2.x, r5, c19
    rcp r1.x, r1.x
    rcp r1.y, r1.y
    rcp r1.w, r1.w
    rcp r1.z, r1.z
    max r0, r0, c28.y
    mul r0, r0, r1
    mul r1.xyz, r0.y, c16
    mad r1.xyz, r0.x, c15, r1
    mad r0.xyz, r0.z, c17, r1
    mad r1.xyz, r0.w, c18, r0
    mul r0, r5.xyzz, r5.yzzx
    mul r1.w, r4.z, r4.z
    dp4 r5.w, r0, c24
    dp4 r5.z, r0, c23
    dp4 r5.y, r0, c22
    mad r1.w, r5.x, r5.x, -r1
    mul r0.xyz, r1.w, c25
    add r2.xyz, r2, r5.yzww
    add r5.yzw, r2.xxyz, r0.xxyz
    dp4 r0.w, v0, c3
    dp4 r0.z, v0, c2
    dp4 r0.x, v0, c0
    dp4 r0.y, v0, c1

mov o0, r0 // Relocated from line 72 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-vertex-halo --only-autofixed A7B5900D.txt
texldl r6, c220.z, s0
add r6.w, r0.w, -r6.y
mad r0.x, r6.w, r6.x, r0.x

    mul r2.xyz, r0.xyww, c28.z
    add o3.xyz, r5.yzww, r1
    mov r1.x, r2
    mul r1.y, r2, c9.x
    mov r3.x, r4.w
    mov r3.y, r4
    mad o5.xy, r2.z, c10.zwzw, r1

//     mov o0, r0 // Relocated to line 65 with shadertool.py
    mov o5.zw, r0
    mov o2.y, r4.z
    mov o2.x, r5
    add o4.xyz, -r3.wxyw, c8
    mad o1.xy, v2, c27, c27.zwzw

// approximately 66 instruction slots used
