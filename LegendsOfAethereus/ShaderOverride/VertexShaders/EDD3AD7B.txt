// CRC32: EDD3AD7B | Matched 2 variants of 1 shaders: MG/Skin/Game-Material_Eye-Gloss_Alpha
// 
//    Unity headers extracted from mg_game-material_eye-gloss_alpha.shader
//    Shader "MG/Skin/Game-Material_Eye-Gloss_Alpha" {
//      Properties {
//       _MainTex ("_MainTex", 2D) = "white" {}
//       _Cube ("_Cube", CUBE) = "black" {}
//       _BumpMap ("_BumpMap", 2D) = "black" {}
//       _AmbientTex ("_AmbientTex", 2D) = "black" {}
//       _ExtrasTex ("_ExtrasTex", 2D) = "black" {}
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="False" "RenderType"="Transparent" }
//        Pass 4/4 {
//          Name "PREPASS"
//          Tags { "LIGHTMODE"="PrePassFinal" "QUEUE"="Transparent" "IGNOREPROJECTOR"="False" "RenderType"="Transparent" }
//          ZWrite Off
//          Cull Off
//          Blend SrcAlpha OneMinusSrcAlpha
//          Program "vp" {
//            SubProgram "d3d9 " {
// 1:           Keywords { "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "LIGHTMAP_OFF" }
// 2:           Keywords { "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "LIGHTMAP_OFF" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Bind "tangent" TexCoord2
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Matrix 8 [_World2Object]
//              Vector 12 [_WorldSpaceCameraPos]
//              Vector 13 [_ProjectionParams]
//              Vector 14 [_ScreenParams]
//              Vector 15 [unity_SHAr]
//              Vector 16 [unity_SHAg]
//              Vector 17 [unity_SHAb]
//              Vector 18 [unity_SHBr]
//              Vector 19 [unity_SHBg]
//              Vector 20 [unity_SHBb]
//              Vector 21 [unity_SHC]
//              Vector 22 [unity_Scale]
//              Vector 23 [_MainTex_ST]
//              Vector 24 [_BumpMap_ST]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    def c25, 1, 0.5, 0, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord v3

def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    mul r1.xyz, v2, c22.w
    dp3 r2.w, r1, c5
    dp3 r0.x, r1, c4
    dp3 r0.z, r1, c6
    mov r0.y, r2.w
    mul r1, r0.xyzz, r0.yzzx
    mov r0.w, c25.x
    dp4 r2.z, r0, c17
    dp4 r2.y, r0, c16
    dp4 r2.x, r0, c15
    mul r0.y, r2.w, r2.w
    mad r0.w, r0.x, r0.x, -r0.y
    dp4 r3.z, r1, c20
    dp4 r3.y, r1, c19
    dp4 r3.x, r1, c18
    add r2.xyz, r2, r3
    mul r3.xyz, r0.w, c21
    mov r0.xyz, v1
    mul r1.xyz, v2.zxyw, r0.yzxw
    mov r0.xyz, v1
    mad r0.xyz, v2.yzxw, r0.zxyw, -r1
    add o7.xyz, r2, r3
    mul r2.xyz, r0, v1.w
    mov r0.xyz, c12
    mov r0.w, c25.x
    dp4 r1.z, r0, c10
    dp4 r1.x, r0, c8
    dp4 r1.y, r0, c9
    mad r1.xyz, r1, c22.w, -v0
    dp3 r0.w, -r1, c4
    dp3 o2.y, r1, r2
    dp3 r0.y, r2, c4
    dp3 r0.x, v1, c4
    dp3 r0.z, v2, c4
    mul o4, r0, c22.w
    dp3 r0.w, -r1, c5
    dp3 r0.y, r2, c5
    dp3 r0.x, v1, c5
    dp3 r0.z, v2, c5
    mul o5, r0, c22.w
    dp3 r0.w, -r1, c6
    dp3 r0.y, r2, c6
    dp3 r0.x, v1, c6
    dp3 r0.z, v2, c6
    mul o6, r0, c22.w
    dp4 r0.w, v0, c3
    dp4 r0.z, v0, c2
    dp3 o2.z, v2, r1
    dp4 r0.x, v0, c0
    dp4 r0.y, v0, c1

mov o0, r0 // Relocated from line 70 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-vertex-halo --only-autofixed EDD3AD7B.txt
texldl r4, c220.z, s0
add r4.w, r0.w, -r4.y
mad r0.x, r4.w, r4.x, r0.x

    mul r2.xyz, r0.xyww, c25.y
    dp3 o2.x, r1, v1
    mov r1.x, r2
    mul r1.y, r2, c13.x
    mad o3.xy, r2.z, c14.zwzw, r1

//     mov o0, r0 // Relocated to line 65 with shadertool.py
    mov o3.zw, r0
    mad o1.zw, v3.xyxy, c24.xyxy, c24
    mad o1.xy, v3, c23, c23.zwzw

// approximately 59 instruction slots used
