// CRC32: BCD3F8FA | Unity headers extracted from S_HeatHaze_Shader.shader
// Shader "Final/Particle/HeatHaze" {
//   Properties {
//    _BumpMap ("Noise Texture (RG)", 2D) = "white" {}
//    strength ("strength", Range(0.1,0.3)) = 0.2
//    transparency ("transparency", Range(0.01,0.1)) = 0.05
//   }
//   SubShader 1/1 {
//     LOD 100
//     Tags { "QUEUE"="Transparent+10" }
//     GrabPass {
//       Name "BASE"
//       Tags { "LIGHTMODE"="Always" }
//      }
//     Pass 1/1 {
//       Name "BASE"
//       Tags { "LIGHTMODE"="Always" "QUEUE"="Transparent+10" }
//       Cull Off
//       Fog {
//          Color (0,0,0,0)
//         }
//       Blend SrcAlpha OneMinusSrcAlpha
//       AlphaTest Greater 0
//       Program "vp" {
//         SubProgram "d3d9 " {
//           Bind "vertex" Vertex
//           Bind "normal" Normal
//           Bind "texcoord" TexCoord0
//           Matrix 0 [glstate_matrix_modelview0]
//           Matrix 4 [glstate_matrix_mvp]
//           Matrix 8 [_World2Object]
//           Vector 12 [_WorldSpaceCameraPos]
//           Vector 13 [unity_Scale]
//           Vector 14 [_BumpMap_ST]
//           Float 15 [strength]
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0 // Converted from vs_2_0 with DarkStarSword's shadertool.py
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2

dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2
dcl_position o3


def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    mov r1.xyz, c12
    mov r1.w, c16.x
    dp4 r0.z, r1, c10
    dp4 r0.x, r1, c8
    dp4 r0.y, r1, c9
    mad r0.xyz, r0, c13.w, -v0
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul r0.xyz, r0.w, r0
    dp3 r0.x, r0, v1
    dp4 r1.x, v0, c2
    add r0.w, -r1.x, c16.x
    rcp r0.y, r0.w
    mul r0.x, r0, r0
    mul r0.x, r0, r0.y
    mul o1.x, r0, c15
    dp4 r0.w, v0, c7
    dp4 r0.z, v0, c6
    dp4 r0.x, v0, c4
    dp4 r0.y, v0, c5
    mov o3, r0

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-vertex-halo --only-autofixed BCD3F8FA.txt
texldl r2, c220.z, s0
add r2.w, r0.w, -r2.y
mad r0.x, r2.w, r2.x, r0.x

    mov o0, r0
    mad o2.xy, v2, c14, c14.zwzw

// approximately 23 instruction slots used
