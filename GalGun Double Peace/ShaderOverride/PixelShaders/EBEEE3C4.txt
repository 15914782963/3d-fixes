//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 EdgeSampleOffsets[4];
//   float2 InvRandomAngleTextureSize;
//   float4 MinZ_MaxZRatio;
//   sampler2D RandomAngleTexture;
//   float4 RefiningSampleOffsets[16];
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4x4 ScreenToShadowMatrix;
//   sampler2D ShadowDepthTexture;
//   float ShadowFadeFraction;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   InvRandomAngleTextureSize c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   RefiningSampleOffsets     c8      16
//   ScreenToShadowMatrix      c24      4
//   EdgeSampleOffsets         c28      4
//   ShadowFadeFraction        c32      1
//   SceneColorTexture         s0       1
//   ShadowDepthTexture        s1       1
//   RandomAngleTexture        s2       1
//

    ps_3_0
    def c3, 0, 1, 0.999000013, 0.5
    def c4, 0.125, 0, 9.99999975e-005, -0.999899983
    def c5, 0.03125, 0.699999988, 0, 0
    def c6, 2, -1, 1, 0.125
    dcl_texcoord v0.xyw
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15


// Unreal Engine shadow fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../../.. --auto-fix-unreal-shadows --stereo-sampler-ps=s15 -f EBEEE3C4.txt
texldl r31, c220.z, s15
mov r7.xyw, v0
add r31.w, r7.w, -r31.y
mad r7.x, r31.w, r31.x, r7.x

    rcp r0.x, r7.w
    mul r0.yz, r0.x, r7.xxyw
    mad r1.xy, r0.yzzw, c1, c1.wzzw
    mov r1.zw, c3.x
    texldl r1, r1, s0
    mov r1.y, c3.y
    add r0.w, r1.y, -c2.y
    add r0.w, -r0.w, r1.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, -c2.x
    mul r0.yz, r0.w, r0
    mul r2, r0.z, c25

// Unreal Engine shadow fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../../.. --auto-fix-unreal-shadows --stereo-sampler-ps=s15 -f EBEEE3C4.txt
add r31.w, r0.w, -r31.y
mad r0.y, -r31.w, r31.x, r0.y

    mad r2, c24, r0.y, r2
    mad r2, c26, r0.w, r2
    add r2, r2, c27
    rcp r0.y, r2.w
    mul r0.zw, r0.y, r2.xyxy
    min r1.x, r2.z, c3.z
    mad r1.zw, r7.xyxy, r0.x, c3.y
    mul r1.zw, r1, c0.xyxy
    mul r1.zw, r1, c3.w
    texld r3, r1.zwzw, s2
    mad_pp r3, r3.yxyx, c6.x, c6.y
    mul_pp r4, r3.wzwz, c6.zyzy
    mad r5, r4.zwzw, c28.xxzz, r0.zwzw
    mad_pp r5, r3.zwzw, c28.yyww, r5
    texld_pp r6, r5, s1
    texld_pp r5, r5.zwzw, s1
    mov_pp r6.y, r5.x
    add r1.zw, r1.x, -r6.xyxy
    cmp r1.zw, r1, c3.x, c3.y
    mad r5, r4.zwzw, c29.xxzz, r0.zwzw
    mad_pp r5, r3.zwzw, c29.yyww, r5
    texld_pp r6, r5, s1
    texld_pp r5, r5.zwzw, s1
    mov_pp r6.y, r5.x
    add r2.zw, r1.x, -r6.xyxy
    cmp r2.zw, r2, c3.x, c3.y
    dp2add_pp r0.x, r2.zwzw, c4.x, c4.y
    dp2add_pp r0.x, r1.zwzw, c6.w, r0.x
    mad r5, r4.zwzw, c30.xxzz, r0.zwzw
    mad_pp r5, r3.zwzw, c30.yyww, r5
    texld_pp r6, r5, s1
    texld_pp r5, r5.zwzw, s1
    mov_pp r6.y, r5.x
    add r1.zw, r1.x, -r6.xyxy
    cmp r1.zw, r1, c3.x, c3.y
    dp2add_pp r0.x, r1.zwzw, c6.w, r0.x
    mad r4, r4, c31.xxzz, r0.zwzw
    mad_pp r3, r3, c31.yyww, r4
    texld_pp r4, r3, s1
    texld_pp r3, r3.zwzw, s1
    mov_pp r4.y, r3.x
    add r0.zw, r1.x, -r4.xyxy
    cmp r0.zw, r0, c3.x, c3.y
    dp2add_pp r0.x, r0.zwzw, c6.w, r0.x
    add r0.z, -r0.x, c4.z
    add r0.w, r0.x, c4.w
    cmp r0.w, r0.w, c3.x, c3.y
    cmp r0.z, r0.z, c3.x, r0.w
    if_ne r0.z, -r0.z
      mad_pp r3, r2.xyxy, r0.y, c8
      mul r4, r3.xyxx, c3.yyxx
      texldl_pp r4, r4, s1
      mul r3, r3.zwxx, c3.yyxx
      texldl_pp r3, r3, s1
      mad_pp r5, r2.xyxy, r0.y, c9
      mul r6, r5.xyxx, c3.yyxx
      texldl_pp r6, r6, s1
      mul r5, r5.zwxx, c3.yyxx
      texldl_pp r5, r5, s1
      mov_pp r4.y, r3.x
      mov_pp r4.z, r6.x
      mov_pp r4.w, r5.x
      add r3, r1.x, -r4
      cmp r3, r3, c3.x, c3.y
      dp4_pp r0.z, r3, c5.x
      mad_pp r3, r2.xyxy, r0.y, c10
      mul r4, r3.xyxx, c3.yyxx
      texldl r4, r4, s1
      mul r3, r3.zwxx, c3.yyxx
      texldl r3, r3, s1
      mad_pp r5, r2.xyxy, r0.y, c11
      mul r6, r5.xyxx, c3.yyxx
      texldl r6, r6, s1
      mul r5, r5.zwxx, c3.yyxx
      texldl r5, r5, s1
      mov r4.y, r3.x
      mov r4.z, r6.x
      mov r4.w, r5.x
      add r3, r1.x, -r4
      cmp r3, r3, c3.x, c3.y
      dp4_pp r0.w, r3, c5.x
      add_pp r0.z, r0.w, r0.z
      mad_pp r3, r2.xyxy, r0.y, c12
      mul r4, r3.xyxx, c3.yyxx
      texldl r4, r4, s1
      mul r3, r3.zwxx, c3.yyxx
      texldl r3, r3, s1
      mad_pp r5, r2.xyxy, r0.y, c13
      mul r6, r5.xyxx, c3.yyxx
      texldl r6, r6, s1
      mul r5, r5.zwxx, c3.yyxx
      texldl r5, r5, s1
      mov r4.y, r3.x
      mov r4.z, r6.x
      mov r4.w, r5.x
      add r3, r1.x, -r4
      cmp r3, r3, c3.x, c3.y
      dp4_pp r0.w, r3, c5.x
      add_pp r0.z, r0.w, r0.z
      mad_pp r3, r2.xyxy, r0.y, c14
      mul r4, r3.xyxx, c3.yyxx
      texldl r4, r4, s1
      mul r3, r3.zwxx, c3.yyxx
      texldl r3, r3, s1
      mad_pp r5, r2.xyxy, r0.y, c15
      mul r6, r5.xyxx, c3.yyxx
      texldl r6, r6, s1
      mul r5, r5.zwxx, c3.yyxx
      texldl r5, r5, s1
      mov r4.y, r3.x
      mov r4.z, r6.x
      mov r4.w, r5.x
      add r3, r1.x, -r4
      cmp r3, r3, c3.x, c3.y
      dp4_pp r0.w, r3, c5.x
      add_pp r0.z, r0.w, r0.z
      mad_pp r3, r2.xyxy, r0.y, c16
      mul r4, r3.xyxx, c3.yyxx
      texldl r4, r4, s1
      mul r3, r3.zwxx, c3.yyxx
      texldl r3, r3, s1
      mad_pp r5, r2.xyxy, r0.y, c17
      mul r6, r5.xyxx, c3.yyxx
      texldl r6, r6, s1
      mul r5, r5.zwxx, c3.yyxx
      texldl r5, r5, s1
      mov r4.y, r3.x
      mov r4.z, r6.x
      mov r4.w, r5.x
      add r3, r1.x, -r4
      cmp r3, r3, c3.x, c3.y
      dp4_pp r0.w, r3, c5.x
      add_pp r0.z, r0.w, r0.z
      mad_pp r3, r2.xyxy, r0.y, c18
      mul r4, r3.xyxx, c3.yyxx
      texldl r4, r4, s1
      mul r3, r3.zwxx, c3.yyxx
      texldl r3, r3, s1
      mad_pp r5, r2.xyxy, r0.y, c19
      mul r6, r5.xyxx, c3.yyxx
      texldl r6, r6, s1
      mul r5, r5.zwxx, c3.yyxx
      texldl r5, r5, s1
      mov r4.y, r3.x
      mov r4.z, r6.x
      mov r4.w, r5.x
      add r3, r1.x, -r4
      cmp r3, r3, c3.x, c3.y
      dp4_pp r0.w, r3, c5.x
      add_pp r0.z, r0.w, r0.z
      mad_pp r3, r2.xyxy, r0.y, c20
      mul r4, r3.xyxx, c3.yyxx
      texldl r4, r4, s1
      mul r3, r3.zwxx, c3.yyxx
      texldl r3, r3, s1
      mad_pp r5, r2.xyxy, r0.y, c21
      mul r6, r5.xyxx, c3.yyxx
      texldl r6, r6, s1
      mul r5, r5.zwxx, c3.yyxx
      texldl r5, r5, s1
      mov r4.y, r3.x
      mov r4.z, r6.x
      mov r4.w, r5.x
      add r3, r1.x, -r4
      cmp r3, r3, c3.x, c3.y
      dp4_pp r0.w, r3, c5.x
      add_pp r0.z, r0.w, r0.z
      mad_pp r3, r2.xyxy, r0.y, c22
      mul r4, r3.xyxx, c3.yyxx
      texldl r4, r4, s1
      mul r3, r3.zwxx, c3.yyxx
      texldl r3, r3, s1
      mad_pp r2, r2.xyxy, r0.y, c23
      mul r5, r2.xyxx, c3.yyxx
      texldl r5, r5, s1
      mul r2, r2.zwxx, c3.yyxx
      texldl r2, r2, s1
      mov r4.y, r3.x
      mov r4.z, r5.x
      mov r4.w, r2.x
      add r2, r1.x, -r4
      cmp r2, r2, c3.x, c3.y
      dp4_pp r0.y, r2, c5.x
      add_pp r0.y, r0.y, r0.z
      lrp_pp r1.x, c5.y, r0.y, r0.x
      mov_pp r0.x, r1.x
    endif
    mul_pp r0.y, r0.x, r0.x
    mul_pp r0.x, r0.x, r0.y
    mad r0.x, r0.x, r0.x, -c3.y
    mad_pp r0.x, c32.x, r0.x, r1.y
    rsq_pp r0.x, r0.x
    rcp_pp oC0, r0.x

// approximately 244 instruction slots used (75 texture, 169 arithmetic)
