//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DiffuseOverrideParameter;
//   float3 DistanceFieldParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   float4 ObjectWorldPositionAndRadius;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowTexture;
//   float2 SpotAngles;
//   float3 SpotDirection;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_3;
//   float4x4 ViewProjectionMatrix;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   CameraWorldPos               c0       1
//   ScreenPositionScaleBias      c1       1
//   DiffuseOverrideParameter     c4       1
//   ViewProjectionMatrix         c8       4
//   ObjectWorldPositionAndRadius c12      1
//   UniformPixelVector_1         c13      1
//   UniformPixelVector_3         c14      1
//   UniformPixelScalars_0        c15      1
//   LightColorAndFalloffExponent c16      1
//   DistanceFieldParameters      c17      1
//   SpotDirection                c18      1
//   SpotAngles                   c19      1
//   LightAttenuationTexture      s0       1
//   PixelTexture2D_0             s1       1
//   PixelTexture2D_1             s2       1
//   ShadowTexture                s3       1
//

    ps_3_0
    def c2, -0.333299994, 1, 0, 10
    def c3, 2, -1, -9.99999997e-007, 0.400000006
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord1 v3.xy
    dcl_texcoord4_pp v4.xyz
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6.xyz
    dcl_texcoord7 v7
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul r2.xyz, r2, v1.w
    add r3.xyz, c0, v7
    nrm r4.xyz, v6
    nrm_pp r5.xyz, v4
    texld r6, v3, s2
    add r7, r6.w, c2.x
    texkill r7
    texld_pp r7, v2, s3
    add r0.w, r7.x, c17.x
    mul_sat_pp r0.w, r0.w, c17.y
    log r0.w, r0.w
    mul r0.w, r0.w, c17.z
    exp_pp r7.xyz, r0.w
    dp3 r0.w, v5, v5
    rsq r1.w, r0.w
    mul r8.xyz, r1.w, v5
    dp3 r1.w, r8, -c18
    add r1.w, r1.w, -c19.x
    mul_sat r1.w, r1.w, c19.y
    mul r1.w, r1.w, r1.w
    add r2.w, -r0.w, c2.y
    mul r2.w, r7.z, r2.w
    mul r8, r1.w, r2.w
    mov r9, r8
    texkill r9
    if b0
      mul r8.xyz, c9.xyww, v7.y
      mad r8.xyz, c8.xyww, v7.x, r8
      mad r8.xyz, c10.xyww, v7.z, r8
      mad r8.xyz, c11.xyww, v7.w, r8

// Unreal Engine halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --fix-unreal-ps-halo --stereo-sampler-ps=s15 --only-autofixed CRC32_E23F447_0.txt
texldl r31, c220.z, s15
add r31.w, r8.z, -r31.y
mad r8.x, r31.w, r31.x, r8.x

      rcp r2.w, r8.z
      mul r8.xy, r2.w, r8
      mad r8.xy, r8, c1, c1.wzzw
      texld r9, r8, s0
      mul_pp r8.xyz, r9, r9
      mul_pp r7.xyz, r7.z, r8
    endif
    mov_sat r0.w, r0.w
    add r0.w, -r0.w, c2.y
    pow r2.w, r0.w, c16.w
    mov r9.zw, c2
    add r8.xyz, r9.zzww, c12
    add r3.xyz, r3, -r8
    nrm r8.xyz, r3
    mul r2.xyz, r2, r8.y
    mad r1.xyz, r8.x, r1, r2
    mad r0.xyz, r8.z, r0, r1
    texld r3, v3, s1
    mad r1.xyz, r3, c3.x, c3.y
    mul r1.xyz, r1, c13
    mad r0.xyz, r1, c2.yyzw, r0
    dp3_sat r0.x, r0, r5
    add r0.y, r0.x, c3.z
    pow r2.x, r0.x, c15.w
    mul r0.x, r2.x, c14.w
    mul r0.xzw, r0.x, c14.xyyz
    cmp r0.xyz, r0.y, r0.xzww, c2.z
    max r2.xyz, r0, c2.z
    min r3.xyz, r2, c3.w
    dp3 r0.w, r1, r4
    mul r2.xyz, r1, r0.w
    mad r2.xyz, r2, -c3.x, c3.x
    dp3_sat r0.w, r5, r2
    add r2.x, r0.w, c3.z
    pow r2.y, r0.w, c15.w
    mul r4.xyz, r2.y, c14
    cmp r2.xyz, r2.x, r4, c2.z
    max r4.xyz, r2, c2.z
    min r2.xyz, r4, c3.w
    mul r0.xyz, r0, r2
    mad r0.xyz, r6, r3, r0
    dp3_pp r0.w, r1, r5
    mul r1.xyz, r0.w, c4
    cmp r1.xyz, r0.w, r1, c2.z
    mad r0.xyz, r0, c4.w, r1
    mul r0.xyz, r7, r0
    mul r0.xyz, r0, c16
    mul r0.xyz, r2.w, r0
    mul r0.xyz, r1.w, r0
    cmp oC0.xyz, -r8.w, c2.z, r0
    mov oC0.w, c2.z

// approximately 103 instruction slots used (4 texture, 99 arithmetic)
