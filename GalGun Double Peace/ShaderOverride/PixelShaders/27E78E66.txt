//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DiffuseOverrideParameter;
//   float2 DistanceFadeParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   samplerCUBE PixelTextureCube_0;
//   float4 ScreenPositionScaleBias;
//   sampler2D ShadowTexture;
//   float4 SpecularOverrideParameter;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_1;
//   float4x4 ViewProjectionMatrix;
//   bool bEnableDistanceShadowFading;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   bEnableDistanceShadowFading  b1       1
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   ViewProjectionMatrix         c8       4
//   UniformPixelVector_0         c12      1
//   UniformPixelVector_1         c13      1
//   UniformPixelScalars_0        c14      1
//   LightColorAndFalloffExponent c15      1
//   DistanceFadeParameters       c16      1
//   LightAttenuationTexture      s0       1
//   PixelTexture2D_0             s1       1
//   PixelTexture2D_1             s2       1
//   PixelTextureCube_0           s3       1
//   ShadowTexture                s4       1
//

    ps_3_0
    def c2, 2, -1, 1, -9.99999997e-007
    def c3, 1.5, 0, 15, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord1 v3.xy
    dcl_texcoord4_pp v4.xyz
    dcl_texcoord6 v5.xyz
    dcl_texcoord7 v6
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_cube s3
    dcl_2d s4

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15

    nrm_pp r0.xyz, v1
    nrm_pp r1.xyz, v0
    mul_pp r2.xyz, r0.zxyw, r1.yzxw
    mad_pp r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul r2.xyz, r2, v1.w
    dp3 r0.w, v5, v5
    rsq r0.w, r0.w
    mul r3.xyz, r0.w, v5
    nrm_pp r4.xyz, v4
    mul r5.xy, c14.x, v3
    texld r6, r5, s1
    mad r6.xyz, r6, c2.x, c2.y
    mul_pp r6.xyz, r6, c13
    nrm_pp r7.xyz, r6
    cmp r1.w, vFace, c2.y, c2.z
    mul r1.w, r1.w, c0.x
    mul_pp r6.xyz, r1.w, r7
    dp3 r1.w, r6, r3
    mul r7.xyz, r1.w, r6
    mad r3.xyw, r7.xyzz, c2.x, -r3.xyzz
    texld_pp r7, v2, s4
    if b0
      mul r7.yzw, c9.xxyw, v6.y
      mad r7.yzw, c8.xxyw, v6.x, r7
      mad r7.yzw, c10.xxyw, v6.z, r7
      mad r7.yzw, c11.xxyw, v6.w, r7

// Unreal Engine halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --fix-unreal-ps-halo --stereo-sampler-ps=s15 --only-autofixed CRC32_27E78E66_1266.txt
texldl r31, c220.z, s15
add r31.w, r7.w, -r31.y
mad r7.y, r31.w, r31.x, r7.y

      rcp r1.w, r7.w
      mul r5.zw, r1.w, r7.xyyz
      mad r5.zw, r5, c1.xyxy, c1.xywz
      texld r8, r5.zwzw, s0
      mul_pp r7.yzw, r8.xxyz, r8.xxyz
      if b1
        dp3 r1.w, v6, v6
        rsq r1.w, r1.w
        rcp r1.w, r1.w
        add r1.w, -r1.w, c16.x
        mul_sat_pp r1.w, r1.w, c16.y
        mul_pp r1.w, r1.w, r1.w
        mad_pp r2.w, r8.w, r8.w, -r7.x
        mad_pp r8.xyz, r1.w, r2.w, r7.x
      else
        mov_pp r8.xyz, r7.x
      endif
      mul_pp r7.yzw, r7, r8.xxyz
    else
      mov_pp r7.yzw, r7.x
    endif
    mov r5.z, c2.z
    add r8.xyz, r5.z, -c12
    texld r5, r5, s2
    mad r0.w, v5.z, -r0.w, c2.z
    cmp r0.w, r3.z, r0_abs.w, c2.z
    add r1.w, r0.w, c2.w
    pow r2.w, r0.w, c3.x
    dp3 r1.x, r1, r3.xyww
    dp3 r1.y, r2, r3.xyww
    dp3 r1.z, r0, r3.xyww
    texld r0, r1, s3
    mul r0.xyz, r0, r2.w
    mul r0.xyz, r0, r5.w
    mul r0.xyz, r0, c14.y
    cmp r0.xyz, r1.w, r0, c3.y
    add r0.xyz, r0, r5
    mul_pp r0.xyz, r8, r0
    mad_pp r0.xyz, r0, c4.w, c4
    dp3_sat_pp r0.w, r6, r4
    add r1.x, r0.w, c2.w
    cmp_pp r0.w, r1.x, r0.w, c3.y
    dp3_sat_pp r1.x, r3.xyww, r4
    add r1.y, r1.x, c2.w
    pow_pp r2.x, r1.x, c3.z
    mul_pp r1.xzw, r2.x, c5.xyyz
    cmp_pp r1.xyz, r1.y, r1.xzww, c3.y
    mad_pp r0.xyz, r0, r0.w, r1
    mul_pp r0.xyz, r7.yzww, r0
    mul oC0.xyz, r0, c15
    mov oC0.w, c3.y

// approximately 93 instruction slots used (5 texture, 88 arithmetic)
