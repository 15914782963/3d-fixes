//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 EdgeSampleOffsets[2];
//   float2 InvRandomAngleTextureSize;
//   float4 MinZ_MaxZRatio;
//   sampler2D RandomAngleTexture;
//   float4 RefiningSampleOffsets[2];
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4x4 ScreenToShadowMatrix;
//   float2 ShadowBufferSize;
//   sampler2D ShadowDepthTexture;
//   float ShadowFadeFraction;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   InvRandomAngleTextureSize c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   ScreenToShadowMatrix      c8       4
//   RefiningSampleOffsets     c12      2
//   EdgeSampleOffsets         c14      2
//   ShadowBufferSize          c16      1
//   ShadowFadeFraction        c17      1
//   SceneColorTexture         s0       1
//   ShadowDepthTexture        s1       1
//   RandomAngleTexture        s2       1
//

    ps_3_0
    def c3, 0, 1, 0.999000013, 0.5
    def c4, 2, -1, 1, 0.0625
    def c5, 9.99999975e-005, -0.999899983, 0.25, 0.699999988
    dcl_texcoord v0.xyw
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15


// Unreal Engine shadow fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../../.. --auto-fix-unreal-shadows --stereo-sampler-ps=s15 -f 5E0EB212.txt
texldl r31, c220.z, s15
mov r9.xyw, v0
add r31.w, r9.w, -r31.y
mad r9.x, r31.w, r31.x, r9.x

    rcp r0.x, r9.w
    mul r0.yz, r0.x, r9.xxyw
    mad r1.xy, r0.yzzw, c1, c1.wzzw
    mov r1.zw, c3.x
    texldl r1, r1, s0
    mov r1.y, c3.y
    add r0.w, r1.y, -c2.y
    add r0.w, -r0.w, r1.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, -c2.x
    mul r0.yz, r0.w, r0
    mul r2, r0.z, c9

// Unreal Engine shadow fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../../.. --auto-fix-unreal-shadows --stereo-sampler-ps=s15 -f 5E0EB212.txt
add r31.w, r0.w, -r31.y
mad r0.y, -r31.w, r31.x, r0.y

    mad r2, c8, r0.y, r2
    mad r2, c10, r0.w, r2
    add r2, r2, c11
    rcp r0.y, r2.w
    mul r0.zw, r0.y, r2.xyxy
    min r3.z, r2.z, c3.z
    mad r1.xz, r9.xyyw, r0.x, c3.y
    mul r1.xz, r1, c0.xyyw
    mul r1.xz, r1, c3.w
    texld r4, r1.xzzw, s2
    mad_pp r4, r4.yxyx, c4.x, c4.y
    mul_pp r5, r4.wzwz, c4.zyzy
    mad r6, r5.zwzw, c14.xxzz, r0.zwzw
    mad_pp r6, r4.zwzw, c14.yyww, r6
    mul r3.xyw, r6.xyzx, c3.yyzx
    texldl r7, r3, s1
    mul r3.xyw, r6.zwzx, c3.yyzx
    texldl r6, r3, s1
    add r7, -r7, r3.z
    cmp_pp r7, r7, c3.x, c3.y
    dp4_pp r0.x, r7, c4.w
    add r6, r3.z, -r6
    cmp_pp r6, r6, c3.x, c3.y
    dp4_pp r1.x, r6, c4.w
    add_pp r0.x, r0.x, r1.x
    mad r5, r5, c15.xxzz, r0.zwzw
    mad_pp r4, r4, c15.yyww, r5
    mov_pp r5.xy, r4
    mov r5.zw, r3
    texldl r6, r5, s1
    mov_pp r5.xy, r4.zwzw
    texldl r4, r5, s1
    add r6, r3.z, -r6
    cmp_pp r6, r6, c3.x, c3.y
    dp4_pp r0.z, r6, c4.w
    add_pp r0.x, r0.z, r0.x
    add r4, r3.z, -r4
    cmp_pp r4, r4, c3.x, c3.y
    dp4_pp r0.z, r4, c4.w
    add_pp r0.x, r0.z, r0.x
    add r0.z, -r0.x, c5.x
    add r0.w, r0.x, c5.y
    cmp r0.w, r0.w, c3.x, c3.y
    cmp r0.z, r0.z, c3.x, r0.w
    if_ne r0.z, -r0.z
      mad_pp r4, r2.xyxy, r0.y, c12
      mov_pp r5.xy, r4
      texldl r6, r5, s1
      mov_pp r5.xy, r4.zwzw
      texldl r7, r5, s1
      add r6, r3.z, -r6.wxyz
      add r7, r3.z, -r7.wxyz
      cmp_pp r6, r6, c3.x, c3.y
      cmp_pp r7, r7, c3.x, c3.y
      mul r4, r4, c16.xyxy
      frc_pp r4, r4
      mov_pp r8.xy, r6
      mov_pp r8.zw, r7.xyxy
      mov_pp r7.xy, r6.zwzw
      lrp_pp r6, r4.yyww, r7, r8
      mad_pp r2, r2.xyxy, r0.y, c13
      mov_pp r5.xy, r2
      texldl r7, r5, s1
      mov_pp r5.xy, r2.zwzw
      texldl r5, r5, s1
      add r7, r3.z, -r7.wxyz
      add r3, r3.z, -r5.wxyz
      cmp_pp r5, r7, c3.x, c3.y
      cmp_pp r3, r3, c3.x, c3.y
      mul r2, r2, c16.xyxy
      frc_pp r2, r2
      mov_pp r7.xy, r5
      mov_pp r7.zw, r3.xyxy
      mov_pp r3.xy, r5.zwzw
      lrp_pp r5, r2.yyww, r3, r7
      lrp_pp r3.xy, r4.xzzw, r6.ywzw, r6.xzzw
      lrp_pp r3.zw, r2.xyxz, r5.xyyw, r5.xyxz
      dp4_pp r0.y, r3, c5.z
      lrp_pp r1.x, c5.w, r0.y, r0.x
      mov_pp r0.x, r1.x
    endif
    mul_pp r0.y, r0.x, r0.x
    mul_pp r0.x, r0.x, r0.y
    mad r0.x, r0.x, r0.x, -c3.y
    mad_pp r0.x, c17.x, r0.x, r1.y
    rsq_pp r0.x, r0.x
    rcp_pp oC0, r0.x

// approximately 110 instruction slots used (19 texture, 91 arithmetic)
