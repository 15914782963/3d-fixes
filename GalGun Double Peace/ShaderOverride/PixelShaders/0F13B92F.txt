//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CameraWorldPos;
//   float4 DiffuseOverrideParameter;
//   float4 ObjectWorldPositionAndRadius;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   sampler2D PixelTexture2D_3;
//   float4 ScreenPositionScaleBias;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_1;
//   float4 UniformPixelScalars_5;
//   float4 UniformPixelVector_1;
//   float4 UniformPixelVector_5;
//   float4 UniformPixelVector_7;
//   float4 UniformPixelVector_8;
//   float4x4 ViewProjectionMatrix;
//   float4 WorldIncidentLighting[7];
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   DiffuseOverrideParameter     c4       1
//   WorldIncidentLighting        c8       7
//   ViewProjectionMatrix         c15      4
//   CameraWorldPos               c19      1
//   ObjectWorldPositionAndRadius c20      1
//   UniformPixelVector_1         c21      1
//   UniformPixelVector_5         c22      1
//   UniformPixelVector_7         c23      1
//   UniformPixelVector_8         c24      1
//   UniformPixelScalars_0        c25      1
//   UniformPixelScalars_1        c26      1
//   UniformPixelScalars_5        c27      1
//   PixelTexture2D_0             s0       1
//   PixelTexture2D_1             s1       1
//   PixelTexture2D_2             s2       1
//   PixelTexture2D_3             s3       1
//

    ps_3_0
    def c2, 2, -1, 1, 0.5
    def c3, -0.333299994, 420, 1.20000005, -9.99999997e-007
    def c5, 0, 3, -1, 0.858085215
    def c6, -1.02332771, 1.02332771, 0.886227608, 0
    def c7, -0.858085215, 0.247708291, 0.429042608, 0
    dcl_color v0.xyz
    dcl_color1 v1
    dcl_texcoord v2.xy
    dcl_texcoord7 v3
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15

    mul r0.xyz, c16.xyww, v3.y
    mad r0.xyz, c15.xyww, v3.x, r0
    mad r0.xyz, c17.xyww, v3.z, r0
    mad r0.xyz, c18.xyww, v3.w, r0

// Unreal Engine halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --fix-unreal-ps-halo --stereo-sampler-ps=s15 --only-autofixed CRC32_F13B92F_0.txt
texldl r31, c220.z, s15
add r31.w, r0.z, -r31.y
mad r0.x, r31.w, r31.x, r0.x

    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    rcp r0.z, c26.y
    mad r0.xy, r0, r0.z, c22
    add r0.zw, r0.xyxy, c2.w
    texld r1, r0, s3
    texld r0, r0.zwzw, s2
    mul r0.x, r1.x, r0.x
    mov r0.z, c2.z
    mad r0.x, c27.x, -r0.x, r0.z
    mul r0.x, r0.x, c27.y
    texld r1, v2, s1
    mad r0, r1.w, r0.x, c3.x
    mul r1.xyz, r1, c24
    texkill r0
    add r0.x, c19.z, v3.z
    mov r0.yz, c3
    add r0.y, r0.y, c20.z
    add r0.x, -r0.x, r0.y
    mul r0.y, r0.z, c20.w
    rcp r0.y, r0.y
    mul r0.x, r0.y, r0.x
    add r0.y, r0_abs.x, c3.w
    pow_sat r1.w, r0_abs.x, c25.x
    cmp r0.x, r0.y, r1.w, c5.x
    add r0.y, -r0.x, c2.z
    mad r0.xyz, r0.x, c23, r0.y
    mul r0.xyz, r1, r0
    mad_pp r0.xyz, r0, c4.w, c4
    texld r1, v2, s0
    mad r1.xyz, r1, c2.x, c2.y
    mul_pp r1.xyz, r1, c21
    nrm_pp r2.xyz, r1
    cmp r0.w, vFace, c2.y, c2.z
    mul r0.w, r0.w, c0.x
    mul r1.xyz, r0.w, r2
    nrm_pp r2.xyz, v1
    nrm_pp r3.xyz, v0
    mul_pp r4.xyz, r2.zxyw, r3.yzxw
    mad_pp r4.xyz, r2.yzxw, r3.zxyw, -r4
    dp3_pp r2.y, r2, r1
    dp3_pp r2.z, r3, r1
    mul r3.xyz, r4, v1.w
    dp3_pp r2.x, r3, r1
    mul r1.xz, r2, r2.y
    mul r3.xyz, r2, r2.xyxw
    mul r4.xyz, r2, c6.xyxw
    mad_pp r1.w, r2.z, r2.z, -r3.x
    mad r1.y, r3.y, c5.y, c5.z
    mul r4.w, r3.z, c5.w
    mul r1, r1, c7.xyxz
    dp4 r0.w, c10, r1
    dp4 r2.x, c9, r4
    mov r2.z, c6.z
    mad_pp r2.x, c8.x, r2.z, r2.x
    add_pp r3.x, r0.w, r2.x
    dp4 r0.w, c12, r1
    dp4 r1.x, c14, r1
    dp4 r1.y, c11, r4
    dp4 r1.z, c13, r4
    mad_pp r1.z, c8.z, r2.z, r1.z
    add_pp r3.z, r1.x, r1.z
    mad_pp r1.x, c8.y, r2.z, r1.y
    add_pp r3.y, r0.w, r1.x
    max_pp r1.xyz, r3, c5.x
    mul_pp oC0.xyz, r0, r1
    mov oC0.w, c5.x

// approximately 80 instruction slots used (4 texture, 76 arithmetic)
