//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DiffuseOverrideParameter;
//   float2 DistanceFadeParameters;
//   sampler2D LightAttenuationTexture;
//   float4 LightColorAndFalloffExponent;
//   sampler2D PixelTexture2D_0;
//   sampler2D PixelTexture2D_1;
//   sampler2D PixelTexture2D_2;
//   float4 ScreenPositionScaleBias;
//   float4 SpecularOverrideParameter;
//   float TwoSidedSign;
//   float4 UniformPixelScalars_0;
//   float4 UniformPixelScalars_4;
//   float4 UniformPixelVector_0;
//   float4 UniformPixelVector_3;
//   float4x4 ViewProjectionMatrix;
//   bool bEnableDistanceShadowFading;
//   bool bReceiveDynamicShadows;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   bReceiveDynamicShadows       b0       1
//   bEnableDistanceShadowFading  b1       1
//   TwoSidedSign                 c0       1
//   ScreenPositionScaleBias      c1       1
//   DiffuseOverrideParameter     c4       1
//   SpecularOverrideParameter    c5       1
//   ViewProjectionMatrix         c8       4
//   UniformPixelVector_0         c12      1
//   UniformPixelVector_3         c13      1
//   UniformPixelScalars_0        c14      1
//   UniformPixelScalars_4        c15      1
//   LightColorAndFalloffExponent c16      1
//   DistanceFadeParameters       c17      1
//   LightAttenuationTexture      s0       1
//   PixelTexture2D_0             s1       1
//   PixelTexture2D_1             s2       1
//   PixelTexture2D_2             s3       1
//

    ps_3_0
    def c2, -1, 1, 0, 2
    def c3, 0.5, -0.100000001, -9.99999997e-007, 15
    dcl_color1 v0.y
    dcl_texcoord v1.xy
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5_pp v3.w
    dcl_texcoord6 v4.xyz
    dcl_texcoord7 v5
    dcl vFace
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15

    mul r0.xyz, c9.xyww, v5.y
    mad r0.xyz, c8.xyww, v5.x, r0
    mad r0.xyz, c10.xyww, v5.z, r0
    mad r0.xyz, c11.xyww, v5.w, r0

// Unreal Engine halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --fix-unreal-ps-halo --stereo-sampler-ps=s15 --only-autofixed CRC32_66F7ED42_9494.txt
texldl r31, c220.z, s15
add r31.w, r0.z, -r31.y
mad r0.x, r31.w, r31.x, r0.x

    nrm r1.xyz, v4
    nrm_pp r2.xyz, v2
    cmp r0.w, vFace, c2.x, c2.y
    mul_pp r0.w, r0.w, c0.x
    mul r3.xy, r1.z, r0.w
    mul r3.z, r0.w, r3.y
    mad r1.xyz, r3, c2.zzww, -r1
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    rcp r0.z, c14.z
    mad r3.xy, r0, r0.z, c13
    add r3.zw, r3.xyxy, c3.x
    texld r4, r3.zwzw, s2
    texld r3, r3, s3
    mul r0.z, r3.x, r4.x
    mov r3.y, c2.y
    mad r0.z, c15.y, -r0.z, r3.y
    mov r4.y, c3.y
    mad r4, c15.z, r0.z, r4.y
    texkill r4
    if b0
      texld r4, r0, s0
      mul_pp r0.xyz, r4, r4
      if b1
        dp3 r1.w, v5, v5
        rsq r1.w, r1.w
        rcp r1.w, r1.w
        add r1.w, -r1.w, c17.x
        mul_sat_pp r1.w, r1.w, c17.y
        mul_pp r1.w, r1.w, r1.w
        mad_pp r2.w, r4.w, r4.w, -v3.w
        mad_pp r3.xzw, r1.w, r2.w, v3.w
      else
        mov_pp r3.xzw, v3.w
      endif
      mul_pp r0.xyz, r0, r3.xzww
    else
      mov_pp r0.xyz, v3.w
    endif
    mov_pp r4.y, c14.y
    mad_pp r3.xzw, r4.y, c5.w, c5.xyyz
    mad r4.xyz, c12, -v0.y, r3.y
    mul r5.xy, c14.x, v1
    texld r5, r5, s1
    mul_pp r4.xyz, r4, r5
    mad_pp r4.xyz, r4, c4.w, c4
    mul_sat_pp r0.w, r2.z, r0.w
    add r1.w, r0.w, c3.z
    dp3_sat_pp r1.x, r1, r2
    add r1.y, r1.x, c3.z
    pow_pp r2.x, r1.x, c3.w
    mul r2.yzw, r0.w, r4.xxyz
    cmp r1.xzw, r1.w, r2.yyzw, c2.z
    mul_pp r2.xyz, r3.xzww, r2.x
    cmp_pp r2.xyz, r1.y, r2, c2.z
    add_pp r1.xyz, r1.xzww, r2
    mul_pp r0.xyz, r0, r1
    mul oC0.xyz, r0, c16
    mov oC0.w, c2.z

// approximately 74 instruction slots used (4 texture, 70 arithmetic)
