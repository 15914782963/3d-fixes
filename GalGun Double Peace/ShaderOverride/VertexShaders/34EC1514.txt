//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float AxisRotationVectorSourceIndex;
//   float4 AxisRotationVectors[2];
//   float4 CameraPositionVS;
//   float4 CameraRight;
//   float4 CameraUp;
//   float4 CameraWorldPosition;
//   float4 FogInScattering[4];
//   float4 FogMaxHeight;
//   float4x4 LocalToWorld;
//   float4 NormalsCylinderUnitDirection;
//   float4 NormalsSphereCenter;
//   float NormalsType;
//   float3 ParticleUpRightResultScalars;
//   float4 SharedFogParameter0;
//   float4 SharedFogParameter1;
//   float4 SharedFogParameter2;
//   float4 SharedFogParameter3;
//   float3 TemporalAAParameters;
//   float4x4 ViewProjectionMatrix;
//   float bUseExponentialHeightFog;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   ViewProjectionMatrix          c0       4
//   CameraPositionVS              c4       1
//   LocalToWorld                  c6       4
//   FogInScattering               c10      4
//   AxisRotationVectors           c14      2
//   TemporalAAParameters          c16      1
//   CameraWorldPosition           c17      1
//   CameraRight                   c18      1
//   CameraUp                      c19      1
//   NormalsType                   c20      1
//   NormalsSphereCenter           c21      1
//   NormalsCylinderUnitDirection  c22      1
//   AxisRotationVectorSourceIndex c23      1
//   ParticleUpRightResultScalars  c24      1
//   SharedFogParameter0           c25      1
//   SharedFogParameter1           c26      1
//   SharedFogParameter2           c27      1
//   SharedFogParameter3           c28      1
//   bUseExponentialHeightFog      c29      1
//   FogMaxHeight                  c30      1
//

    vs_3_0
    def c31, 0, 0, 0.159154937, 0.5
    def c32, 0, 1, 6.28318548, -3.14159274
    def c34, 1, 0, 0.5, 1.5
    def c33, 1, 1, 0.00999999978, -0.00999999978
    def c35, 0.499000013, 0.5, 0.00100000005, 0
    dcl_position v0
    dcl_normal v1
    dcl_tangent v2
    dcl_blendweight v3
    dcl_texcoord v4
    dcl_texcoord1 v5
    dcl_texcoord2 v6
    dcl_texcoord3 v7
    dcl_color o0.x
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord4 o4
    dcl_texcoord6 o5
    dcl_texcoord5 o6
    dcl_position o7

def c220, 0, 1, 0.0625, 0.5
dcl_2d s3

    mul r0, c7, v0.y
    mad r0, c6, v0.x, r0
    mad r0, c8, v0.z, r0
    mad r0, c9, v0.w, r0
    mad r1.x, v3.x, c31.z, c31.w
    frc r1.x, r1.x
    mad r1.x, r1.x, c32.z, c32.w
    sincos r2.xy, r1.x
    mul r1.xyz, c7, v1.y
    mad r1.xyz, c6, v1.x, r1
    mad r1.xyz, c8, v1.z, r1
    mad r1.xyz, c9, v1.w, r1
    frc r1.w, c23.x
    add r2.z, -r1.w, c23.x
    slt r2.w, c23.x, -c23.x
    slt r1.w, -r1.w, r1.w
    mad r1.w, r2.w, r1.w, r2.z
    mova a0.x, r1.w
    add r3.xyz, -r0.zxyw, c17.zxyw
    dp3 r2.z, r3, r3
    max r2.z, r2.z, c33.z
    rsq r2.z, r2.z
    mul r3.xyz, r2.z, r3
    add r1.xyz, r0, -r1
    dp3 r2.z, r1, r1
    max r2.z, r2.z, c33.z
    rsq r2.z, r2.z
    mul r1.xyz, r1, r2.z
    mul r4, r2.y, c18
    mad r4, -r2.x, c19, r4
    mul r5, r2.x, c18
    mad r2, r2.y, c19, r5
    mul r5.xyz, r1.yzxw, r3
    mad r5.xyz, r3.zxyw, r1.zxyw, -r5
    dp3 r3.w, r5, r5
    max r3.w, r3.w, c33.z
    rsq r3.w, r3.w
    mul r5.xyz, r3.w, r5
    mul r6.xyz, r3, c14[a0.x].yzxw
    mad r3.xyz, r3.zxyw, c14[a0.x].zxyw, -r6
    dp3 r3.w, r3, r3
    max r3.w, r3.w, c33.z
    rsq r3.w, r3.w
    mul r3.xyz, r3.w, r3
    slt r3.w, -r1_abs.w, r1_abs.w
    mad r3.xyz, r3, c14[a0.x].w, -c14[a0.x]
    mad r6.xyz, r3.w, r3, c14[a0.x]
    sge r1.w, -r1_abs.w, r1_abs.w
    mad r3.xyz, r1.w, r3, c14[a0.x]
    mul r5.xyz, r5, c24.y
    mov r5.w, c31.x
    mad r4, r4, c24.x, r5
    mul r5.xyz, r6, c24.z
    mov r5.w, c31.x
    add r4, r4, r5
    mul r1.xyz, -r1, c24.y
    mov r1.w, c31.x
    mad r1, r2, c24.x, r1
    mul r2.xyz, r3, c24.z
    mov r2.w, c31.x
    add r1, r1, r2
    frc r2.x, v3.y
    add r2.x, -r2.x, v3.y
    mova a0.x, r2.x
    mov r2.w, c31.w
    add r2.x, -r2.w, c31[a0.x].x
    mul r2.x, r2.x, v2.x
    mad r3, r2.x, r4, r0
    add r0.w, -r2.w, c31[a0.x].y
    mul r0.w, r0.w, v2.y
    mad r2, r0.w, r1, r3
    mul r3.xyz, r1.yzxw, r4.zxyw
    mad r3.xyz, r4.yzxw, r1.zxyw, -r3
    dp3 r0.w, r3, r3
    rsq r0.w, r0.w
    mov r5.x, c20.x
    slt r5.xy, r5.x, c34.zwzw
    add r6.xyz, r0, -c21
    dp3 r1.w, r6, r6
    rsq r1.w, r1.w
    dp3 r3.w, c22, r6
    mov r7.xyz, c22
    mad r7.xyz, r3.w, r7, c21
    add r0.xyz, r0, -r7
    nrm r7.xyz, r0
    mad r0.xyz, r6, r1.w, -r7
    mad r0.xyz, r5.y, r0, r7
    mad r3.xyz, r3, r0.w, -r0
    mad r0.xyz, r5.x, r3, r0
    mul r3, r2.y, c1
    mad r3, c0, r2.x, r3
    mad r3, c2, r2.z, r3
    mad r3, c3, r2.w, r3
    mul r0.w, r3.w, c16.z
    mad r3.xy, r0.w, c16, r3
    mad r5.xyz, r2, -c4.w, c4
    dp3 o5.x, r4, r5
    dp3 o5.y, r1, r5
    dp3 o5.z, r0, r5
    abs r0.x, c29.x
    if_lt -r0.x, r0.x
      add r0.xyz, r2, -c4
      dp3 r0.w, r0, r0
      rsq r0.w, r0.w
      rcp r1.x, r0.w
      add r1.x, r1.x, -c25.w
      max r1.x, r1.x, c31.x
      slt r1.y, c33.z, r0_abs.z
      add r1.z, r0.z, c33.w
      mad r1.y, r1.y, r1.z, c33.z
      mul r1.z, r1.y, -c25.y
      exp r1.z, r1.z
      add r1.z, -r1.z, c32.y
      mul r1.xy, r1, c25
      rcp r1.y, r1.y
      mul r1.y, r1.y, r1.z
      mul r1.x, r1.y, r1.x
      mul r0.xyz, r0.w, r0
      dp3 r0.x, c28, r0
      mad r0.x, r0.x, -c35.x, c35.y
      pow r1.y, r0.x, c25.z
      mov r0.xyz, c27
      add r0.xyz, -r0, c26
      mad r0.xyz, r1.y, r0, c27
      exp r0.w, -r1.x
      min r0.w, r0.w, c32.y
      max r0.w, r0.w, c26.w
      add r1.x, -r0.w, c32.y
      mul o4.xyz, r0, r1.x
      mov o4.w, r0.w
    else
      add r0.xyz, r2, -c4
      dp3 r0.x, r0, r0
      rsq r0.x, r0.x
      rcp r0.x, r0.x
      mov r1.z, c4.z
      add r2, -r1.z, c28
      sge r0.y, c35.z, r0_abs.z
      lrp r1.x, r0.y, c35.z, r0.z
      rcp r0.y, r1.x
      mul_sat r2, r0.y, r2
      add r1, -r1.z, c30
      mul_sat r1, r0.y, r1
      add r0, r0.x, -c27
      max r0, r0, c31.x
      add r1, -r2, r1
      mul r0, r0, r1_abs
      slt r1, r0, c26
      mul r0, r0, c25
      exp r2.x, r0.x
      exp r2.y, r0.y
      exp r2.z, r0.z
      exp r2.w, r0.w
      mul r0, r1, r2
      mad r1, r1, r2, -c32.y
      mul r2.xyz, r1.x, c10
      mov r2.w, r0.x
      mul r2, r0.y, r2
      mad r2.xyz, r1.y, c11, r2
      mul r2, r0.z, r2
      mad r2.xyz, r1.z, c12, r2
      mul r0, r0.w, r2
      mad o4.xyz, r1.w, c13, r0
      mov o4.w, r0.w
    endif
    mov o0.x, v6.x
    mov o1, v4
    mov o2, v5
    mov o3, v7
    mov o5.w, c32.y

mov o7, r3 // Relocated from line 247 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-vertex-halo --only-autofixed --stereo-sampler-vs=s3 34EC1514.txt
texldl r31, c220.z, s3
add r31.w, r3.w, -r31.y
mad r3.x, r31.w, r31.x, r3.x

    mov o6, r3

//     mov o7, r3 // Relocated to line 246 with shadertool.py

// approximately 185 instruction slots used
