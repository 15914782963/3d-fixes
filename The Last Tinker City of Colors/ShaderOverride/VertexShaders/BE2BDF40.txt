// CRC32: BE2BDF40 | Matched 6 variants of 2 shaders: Mimimi/Water/Artistic Ocean, Mimimi/Water/Artistic Ocean NoRef
// 
//    Unity headers extracted from Water-Artistic-Ocean.shader
//    Shader "Mimimi/Water/Artistic Ocean" {
//      Properties {
//       _ReflectionTex ("Internal reflection", 2D) = "white" {}
//       _MainTex ("Fallback texture", 2D) = "black" {}
//       _BumpMap ("Normals ", 2D) = "bump" {}
//       _DistortParams ("Distortions (Bump waves, Reflection, Fresnel power, Fresnel bias)", Vector) = (1,1,2,1.15)
//       _InvFadeParemeter ("Auto blend parameter (Edge, Shore, Distance scale)", Vector) = (0.15,0.15,0.5,1)
//       _AnimationTiling ("Animation Tiling (Displacement)", Vector) = (2.2,2.2,-1.1,-1.1)
//       _AnimationDirection ("Animation Direction (displacement)", Vector) = (1,1,1,1)
//       _BumpTiling ("Bump Tiling", Vector) = (1,1,-2,3)
//       _BumpDirection ("Bump Direction & Speed", Vector) = (1,1,-1,1)
//       _FresnelScale ("FresnelScale", Range(0.15,4)) = 0.75
//       _BaseColor ("Base color", Color) = (0.54,0.95,0.99,0.5)
//       _RefColor ("_RefColor", Color) = (0.54,0.95,0.99,0.5)
//       _ReflectionColor ("Reflection color", Color) = (0.54,0.95,0.99,0.5)
//       _SpecularColor ("Specular color", Color) = (0.72,0.72,0.72,1)
//       _WorldLightDir ("Specular light direction", Vector) = (0,0.1,-0.5,0)
//       _Shininess ("Shininess", Range(2,500)) = 200
//       _GerstnerIntensity ("Per vertex displacement", Float) = 1
//       _GAmplitude ("Wave Amplitude", Vector) = (0.3,0.35,0.25,0.25)
//       _GFrequency ("Wave Frequency", Vector) = (1.3,1.35,1.25,1.25)
//       _GSteepness ("Wave Steepness", Vector) = (1,1,1,1)
//       _GSpeed ("Wave Speed", Vector) = (1.2,1.375,1.1,1.5)
//       _GDirectionAB ("Wave Direction", Vector) = (0.3,0.85,0.85,0.25)
//       _GDirectionCD ("Wave Direction", Vector) = (0.1,0.9,0.5,0.5)
//       _Cube ("Reflection Cubemap", CUBE) = "" { TexGen CubeReflect }
//      }
//      Fallback "Transparent/Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "RenderType"="Transparent" }
// 3:     Pass 1/2 {
// c:     Pass 2/2 {
//          Tags { "QUEUE"="AlphaTest" "RenderType"="Transparent" }
// c:       ZWrite Off
// c:       Blend SrcAlpha OneMinusSrcAlpha
//          Program "vp" {
//            SubProgram "d3d9 " {
// 5:           Keywords { "WATER_REFLECTIVE" }
// a:           Keywords { "WATER_SIMPLE" }
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_Time]
//              Vector 9 [_WorldSpaceCameraPos]
//              Vector 10 [_ProjectionParams]
//              Vector 11 [_ScreenParams]
//              Vector 12 [_BumpTiling]
//              Vector 13 [_BumpDirection]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from Water-Artistic-Ocean-NoRef.shader
//    Shader "Mimimi/Water/Artistic Ocean NoRef" {
//      Properties {
//       _ReflectionTex ("Internal reflection", 2D) = "white" {}
//       _MainTex ("Fallback texture", 2D) = "black" {}
//       _BumpMap ("Normals ", 2D) = "bump" {}
//       _DistortParams ("Distortions (Bump waves, Reflection, Fresnel power, Fresnel bias)", Vector) = (1,1,2,1.15)
//       _InvFadeParemeter ("Auto blend parameter (Edge, Shore, Distance scale)", Vector) = (0.15,0.15,0.5,1)
//       _AnimationTiling ("Animation Tiling (Displacement)", Vector) = (2.2,2.2,-1.1,-1.1)
//       _AnimationDirection ("Animation Direction (displacement)", Vector) = (1,1,1,1)
//       _BumpTiling ("Bump Tiling", Vector) = (1,1,-2,3)
//       _BumpDirection ("Bump Direction & Speed", Vector) = (1,1,-1,1)
//       _FresnelScale ("FresnelScale", Range(0.15,4)) = 0.75
//       _BaseColor ("Base color", Color) = (0.54,0.95,0.99,0.5)
//       _RefColor ("_RefColor", Color) = (0.54,0.95,0.99,0.5)
//       _ReflectionColor ("Reflection color", Color) = (0.54,0.95,0.99,0.5)
//       _SpecularColor ("Specular color", Color) = (0.72,0.72,0.72,1)
//       _WorldLightDir ("Specular light direction", Vector) = (0,0.1,-0.5,0)
//       _Shininess ("Shininess", Range(2,500)) = 200
//       _GerstnerIntensity ("Per vertex displacement", Float) = 1
//       _GAmplitude ("Wave Amplitude", Vector) = (0.3,0.35,0.25,0.25)
//       _GFrequency ("Wave Frequency", Vector) = (1.3,1.35,1.25,1.25)
//       _GSteepness ("Wave Steepness", Vector) = (1,1,1,1)
//       _GSpeed ("Wave Speed", Vector) = (1.2,1.375,1.1,1.5)
//       _GDirectionAB ("Wave Direction", Vector) = (0.3,0.85,0.85,0.25)
//       _GDirectionCD ("Wave Direction", Vector) = (0.1,0.9,0.5,0.5)
//       _Cube ("Reflection Cubemap", CUBE) = "" { TexGen CubeReflect }
//      }
//      Fallback "Transparent/Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "RenderType"="Transparent" }
// 1:     Pass 1/2 {
// 2:     Pass 2/2 {
//          Tags { "QUEUE"="AlphaTest" "RenderType"="Transparent" }
// 2:       ZWrite Off
// 2:       Blend SrcAlpha OneMinusSrcAlpha
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_Time]
//              Vector 9 [_WorldSpaceCameraPos]
//              Vector 10 [_ProjectionParams]
//              Vector 11 [_ScreenParams]
//              Vector 12 [_BumpTiling]
//              Vector 13 [_BumpDirection]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    ; 26 ALU
    dcl_position o0
    dcl_color0 o1
    dcl_texcoord0 o2
    dcl_texcoord1 o3
    dcl_texcoord2 o4
    dcl_texcoord3 o5
    dcl_texcoord4 o6
    def c14, 0.10000000, 1.50000000, 0.00000000, 0.50000000
    def c15, 0.00000000, 1.00000000, 0, 0
    dcl_position0 v0
    dcl_color0 v1

def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    dp4 r2.w, v0, c3
    dp4 r2.z, v0, c2
    dp4 r2.x, v0, c0
    dp4 r2.y, v0, c1

mov o0, r2 // Relocated from line 143 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py --auto-fix-vertex-halo --add-fog-on-sm3-update --only-autofixed -I .. ShaderCRCs/Mimimi_Water_Artistic Ocean NoRef/vp/BE2BDF40.txt
texldl r31, c220.z, s0
add r31.w, r2.w, -r31.y
mad r2.x, r31.w, r31.x, r2.x

    mul r3.xyz, r2.xyww, c14.w
    mul r3.y, r3, c10.x
    dp4 r1.z, v0, c6
    dp4 r1.x, v0, c4
    dp4 r1.y, v0, c5
    add r0.xyz, r1, -c9
    dp3 r0.w, r0, r0
    mov r1.y, c8.x
    mad r1, c13, r1.y, r1.xzxz
    rsq r0.w, r0.w

//     mov o0, r2 // Relocated to line 133 with shadertool.py
    rcp r2.x, r0.w
    mul r0.w, r2.x, c14.x
    min r0.w, r0, c14.y
    max r0.w, r0, c14.z
    mad o5.xy, r3.z, c11.zwzw, r3
    mov o1, v1
    mov o2, c15.xyxy
    mov o3, r0
    mul o4, r1, c12
    mov o5.zw, r2
    mov o6.x, r2
