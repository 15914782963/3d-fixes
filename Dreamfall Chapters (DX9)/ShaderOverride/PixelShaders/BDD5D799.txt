// CRC32: BDD5D799 |    Unity headers extracted from Reflect-BumpSpec_Fresnel_Additive.shader
//    Shader "Dreamfall/FX/Fresnel Reflective Additive" {
//      Properties {
//       _Col ("Main Color", Color) = (1,1,1,1)
//       _ReflectColor ("Reflection Color", Color) = (1,1,1,0.5)
//       _Fresnel ("Reflection Fresnel Exponent", Range(0.01,6)) = 1
//       _MainTex ("Base (RGB) RefStrGloss (A)", 2D) = "white" { }
//       _Cube ("Reflection Cubemap", CUBE) = "" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _RefMult ("Reflect Amount", Float) = 1
//      }
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent" "SHADOWSUPPORT"="true" "RenderType"="Transparent" }
//          Blend One One
//          GpuProgramID 19409
//          Program "fp" {
//            SubProgram "d3d9 " {
//              GpuProgramIndex 42
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Reflect-BumpSpec_Fresnel_Additive.shader.decompressed:
//   API d3d9
//   Shader model ps_3_0
//   undeciphered1: 53 5 -1
//   Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" }
//   undeciphered3: 0 0 1
//   Vector 2 [_Col]
//   Float 4 [_Fresnel]
//   Float 5 [_RefMult]
//   Vector 3 [_ReflectColor]
//   Vector 0 [_WorldSpaceCameraPos]
//   Vector 1 [unity_Lightmap_HDR]
//   SetTexture 0 [unity_Lightmap] 2D 0
//   SetTexture 1 [unity_LightmapInd] 2D 1
//   SetTexture 2 [_MainTex] 2D 2
//   SetTexture 3 [_BumpMap] 2D 3
//   SetTexture 4 [_Cube] CUBE 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//   using 3Dmigoto command line v1.2.36 on Sun Jun 19 21:59:11 2016
//
//
// Parameters:
//
//   sampler2D _BumpMap;
//   float4 _Col;
//   samplerCUBE _Cube;
//   float _Fresnel;
//   sampler2D _MainTex;
//   float _RefMult;
//   float4 _ReflectColor;
//   float3 _WorldSpaceCameraPos;
//   sampler2D unity_Lightmap;
//   sampler2D unity_LightmapInd;
//   float4 unity_Lightmap_HDR;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _WorldSpaceCameraPos c0       1
//   unity_Lightmap_HDR   c1       1
//   _Col                 c2       1
//   _ReflectColor        c3       1
//   _Fresnel             c4       1
//   _RefMult             c5       1
//   unity_Lightmap       s0       1
//   unity_LightmapInd    s1       1
//   _MainTex             s2       1
//   _BumpMap             s3       1
//   _Cube                s4       1
//

    ps_3_0
    def c6, 0.100000001, 32, 2, -1
    def c7, 0, -0.5, 0.5, 9.99999975e-005
    def c8, 10000, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4_pp v4.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_cube s4

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

texldl r31, c220.z, s13

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --fix-unity-reflection --only-autofixed --ignore-register-errors Dreamfall_FX_Fresnel Reflective Additive/fp/BDD5D799.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mov r0.x, c6.x
    max_pp r1.x, c4.x, r0.x
    min_pp r0.x, r1.x, c6.y
    mov r1.x, v1.w
    mov r1.y, v2.w
    mov r1.z, v3.w
    add r0.yzw, -r1.xxyz, r30.xxyz
    nrm_pp r1.xyz, r0.yzww
    mul r0.yzw, r1.y, v2.xxyz
    mad r0.yzw, v1.xxyz, r1.x, r0
    mad_pp r0.yzw, v3.xxyz, r1.z, r0
    nrm r2.xyz, r0.yzww
    texld_pp r3, v0, s3
    mad_pp r3.xy, r3.wyzw, c6.z, c6.w
    dp2add_sat_pp r0.y, r3, r3, c7.x
    add_pp r0.y, -r0.y, -c6.w
    rsq_pp r0.y, r0.y
    rcp_pp r3.z, r0.y
    dp3 r0.y, r2, r3
    add r0.y, -r0.y, -c6.w
    pow r1.w, r0.y, r0.x
    dp3 r0.x, v1, r3
    dp3 r0.y, v2, r3
    dp3 r0.z, v3, r3
    dp3 r0.w, -r1, r0
    add r0.w, r0.w, r0.w
    mad r1.xyz, r0, -r0.w, -r1
    texld_pp r2, r1, s4
    mul_pp r1.xyz, r1.w, r2
    texld_pp r2, v0, s2
    mul_pp r0.w, r2.w, c5.x
    mul_pp r1.xyz, r0.w, r1
    mul_pp r1.xyz, r1, c3
    mad_pp r1.xyz, r2, c2, r1
    texld_pp r2, v4, s1
    add_pp r2.xyz, r2, c7.y
    dp3_pp r0.x, r0, r2
    add_pp r0.x, r0.x, c7.z
    texld_pp r3, v4, s0
    pow_pp r0.y, r3.w, c1.y
    mul_pp r0.y, r0.y, c1.x
    mul_pp r0.yzw, r3.xxyz, r0.y
    mul_pp r0.xyz, r0.x, r0.yzww
    add r0.w, -r2.w, c7.w
    rcp r1.w, r2.w
    cmp r0.w, r0.w, c8.x, r1.w
    mul_pp r0.xyz, r0.w, r0
    mul_pp oC0.xyz, r0, r1
    mov_pp oC0.w, -c6.w

// approximately 58 instruction slots used (5 texture, 53 arithmetic)
