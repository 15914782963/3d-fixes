// CRC32: 49B691FD |    Unity headers extracted from Reflect-BumpSpec_Fresnel_Additive.shader
//    Shader "Dreamfall/FX/Fresnel Reflective Additive" {
//      Properties {
//       _Col ("Main Color", Color) = (1,1,1,1)
//       _ReflectColor ("Reflection Color", Color) = (1,1,1,0.5)
//       _Fresnel ("Reflection Fresnel Exponent", Range(0.01,6)) = 1
//       _MainTex ("Base (RGB) RefStrGloss (A)", 2D) = "white" { }
//       _Cube ("Reflection Cubemap", CUBE) = "" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _RefMult ("Reflect Amount", Float) = 1
//      }
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Blend One One
//          GpuProgramID 126639
//          Program "fp" {
//            SubProgram "d3d9 " {
//              GpuProgramIndex 102
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Reflect-BumpSpec_Fresnel_Additive.shader.decompressed:
//   API d3d9
//   Shader model ps_3_0
//   undeciphered1: 53 4 -1
//   Keywords { "POINT" "FOG_EXP" }
//   undeciphered3: 0 0 1
//   Vector 7 [_Col]
//   Float 9 [_Fresnel]
//   Vector 6 [_LightColor0]
//   Float 10 [_RefMult]
//   Vector 8 [_ReflectColor]
//   Vector 3 [_WorldSpaceCameraPos]
//   Vector 4 [_WorldSpaceLightPos0]
//   Vector 5 [unity_FogParams]
//   Matrix 0 [_LightMatrix0] 3
//   SetTexture 0 [_LightTexture0] 2D 0
//   SetTexture 1 [_MainTex] 2D 1
//   SetTexture 2 [_BumpMap] 2D 2
//   SetTexture 3 [_Cube] CUBE 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//   using 3Dmigoto command line v1.2.36 on Sun Jun 19 21:59:14 2016
//
//
// Parameters:
//
//   sampler2D _BumpMap;
//   float4 _Col;
//   samplerCUBE _Cube;
//   float _Fresnel;
//   float4 _LightColor0;
//   row_major float4x4 _LightMatrix0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _RefMult;
//   float4 _ReflectColor;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogParams;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _LightMatrix0        c0       3
//   _WorldSpaceCameraPos c3       1
//   _WorldSpaceLightPos0 c4       1
//   unity_FogParams      c5       1
//   _LightColor0         c6       1
//   _Col                 c7       1
//   _ReflectColor        c8       1
//   _Fresnel             c9       1
//   _RefMult             c10      1
//   _LightTexture0       s0       1
//   _MainTex             s1       1
//   _BumpMap             s2       1
//   _Cube                s3       1
//

    ps_3_0
    def c11, 0.100000001, 32, 2, -1
    def c12, 0, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.xyz
    dcl_texcoord3_pp v3.xyz
    dcl_texcoord4 v4.xyz
    dcl_texcoord6 v5.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_cube s3

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

texldl r31, c220.z, s13

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --fix-unity-reflection --only-autofixed --ignore-register-errors Dreamfall_FX_Fresnel Reflective Additive/fp/49B691FD.txt
mov r30, c3
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mad r0, v4.xyzx, c12.yyyx, c12.xxxy
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp3 r0.x, r1, r1
    texld_pp r0, r0.x, s0
    mul_pp r0.xyz, r0.x, c6
    mov r1.x, c11.x
    max_pp r0.w, c9.x, r1.x
    min_pp r1.x, r0.w, c11.y
    add r1.yzw, r30.xxyz, -v4.xxyz
    nrm_pp r2.xyz, r1.yzww
    mul_pp r1.yzw, r2.y, v2.xxyz
    mad_pp r1.yzw, v1.xxyz, r2.x, r1
    mad_pp r1.yzw, v3.xxyz, r2.z, r1
    nrm r3.xyz, r1.yzww
    texld_pp r4, v0, s2
    mad_pp r4.xy, r4.wyzw, c11.z, c11.w
    dp2add_sat_pp r0.w, r4, r4, c12.x
    add_pp r0.w, -r0.w, -c11.w
    rsq_pp r0.w, r0.w
    rcp_pp r4.z, r0.w
    dp3 r0.w, r3, r4
    add r0.w, -r0.w, -c11.w
    pow r2.w, r0.w, r1.x
    dp3 r1.x, v1, r4
    dp3 r1.y, v2, r4
    dp3 r1.z, v3, r4
    dp3 r0.w, -r2, r1
    add r0.w, r0.w, r0.w
    mad r2.xyz, r1, -r0.w, -r2
    texld_pp r3, r2, s3
    mul_pp r2.xyz, r2.w, r3
    texld_pp r3, v0, s1
    mul_pp r0.w, r3.w, c10.x
    mul_pp r2.xyz, r0.w, r2
    mul_pp r2.xyz, r2, c8
    mad_pp r2.xyz, r3, c7, r2
    mul_pp r0.xyz, r0, r2
    add r2.xyz, c4, -v4
    nrm_pp r3.xyz, r2
    dp3_pp r0.w, r1, r3
    max_pp r1.x, r0.w, c12.x
    mul_pp r0.xyz, r0, r1.x
    mul r0.w, c5.y, v5.x
    exp_sat r0.w, -r0.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, -c11.w

// approximately 57 instruction slots used (4 texture, 53 arithmetic)
