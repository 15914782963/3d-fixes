// CRC32: B2D071B7 |    Unity headers extracted from ghost.shader
//    Shader "Character/Ghost Shader Bumped" {
//      Properties {
//       _MainTex ("Texture", 2D) = "white" { }
//       _BumpMap ("Bumpmap", 2D) = "bump" { }
//       _RimColor ("Rim Color", Color) = (0.46,0,1,0)
//       _RimPower ("Rim Power", Range(0.2,2)) = 0.5
//       _Brightness ("Brightness", Range(0,3)) = 1
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//        Pass 3/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Blend SrcAlpha One
//          ColorMask RGB
//          GpuProgramID 77918
//          Program "fp" {
//            SubProgram "d3d9 " {
//              GpuProgramIndex 36
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from ghost.shader.decompressed:
//   API d3d9
//   Shader model ps_2_0
//   undeciphered1: 49 3 -1
//   Keywords { "POINT" }
//   undeciphered3: 0 0 1
//   Float 8 [_Brightness]
//   Vector 5 [_LightColor0]
//   Vector 6 [_RimColor]
//   Float 7 [_RimPower]
//   Vector 3 [_WorldSpaceCameraPos]
//   Vector 4 [_WorldSpaceLightPos0]
//   Matrix 0 [_LightMatrix0] 3
//   SetTexture 0 [_LightTexture0] 2D 0
//   SetTexture 1 [_MainTex] 2D 1
//   SetTexture 2 [_BumpMap] 2D 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//   using 3Dmigoto command line v1.2.36 on Sun Jun 19 22:05:57 2016
//
//
// Parameters:
//
//   float _Brightness;
//   sampler2D _BumpMap;
//   float4 _LightColor0;
//   row_major float4x4 _LightMatrix0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float4 _RimColor;
//   float _RimPower;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _LightMatrix0        c0       3
//   _WorldSpaceCameraPos c3       1
//   _WorldSpaceLightPos0 c4       1
//   _LightColor0         c5       1
//   _RimColor            c6       1
//   _RimPower            c7       1
//   _Brightness          c8       1
//   _LightTexture0       s0       1
//   _MainTex             s1       1
//   _BumpMap             s2       1
//

    ps_3_0 // Converted from ps_2_0 with DarkStarSword's shadertool.py
    def c9, 0.300000012, 0.589999974, 0.109999999, 0
    def c10, 2, -1, 1, 0.333333343
    dcl_texcoord v0
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.xyz
    dcl_texcoord3_pp v3.xyz
    dcl_texcoord4 v4.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

texldl r31, c220.z, s13

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --fix-unity-reflection --only-autofixed --ignore-register-errors Character_Ghost Shader Bumped/fp/B2D071B7.txt
mov r30, c3
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mov r0.xyz, v4
    mov r0.w, c10.z
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp3 r0.xy, r1, r1
    mov r1.x, v0.z
    mov r1.y, v0.w
    texld_pp r0, r0, s0
    texld_pp r2, v0, s1
    texld_pp r1, r1, s2
    mul_pp r0.xyz, r0.x, c5
    dp3_pp r0.w, r2, c9
    mul_pp r0.xyz, r0, r0.w
    add r2.xyz, -v4, c4
    nrm_pp r3.xyz, r2
    mad_pp r2.x, r1.w, c10.x, c10.y
    mad_pp r2.y, r1.y, c10.x, c10.y
    dp2add_sat_pp r0.w, r2, r2, c9.w
    add_pp r0.w, -r0.w, c10.z
    rsq_pp r0.w, r0.w
    rcp_pp r2.z, r0.w
    dp3_pp r1.x, v1, r2
    dp3_pp r1.y, v2, r2
    dp3_pp r1.z, v3, r2
    dp3_pp r0.w, r1, r3
    max_pp r2.w, r0.w, c9.w
    mul_pp r0.xyz, r0, r2.w
    add r1.xyz, -v4, r30
    nrm_pp r3.xyz, r1
    mul_pp r1.xyz, r3.y, v2
    mad_pp r1.xyz, v1, r3.x, r1
    mad_pp r1.xyz, v3, r3.z, r1
    nrm r3.xyz, r1
    dp3_sat r1.x, r3, r2
    add_pp r1.x, -r1.x, c10.z
    pow r2.x, r1.x, c7.x
    mul r1.xyz, r2.x, c6
    mul_pp r1.xy, r1, c8.x
    add_pp r1.x, r1.y, r1.x
    mad_pp r1.x, r1.z, c8.x, r1.x
    mul_pp r0.w, r1.x, c10.w
    mov_pp oC0, r0

// approximately 52 instruction slots used (3 texture, 49 arithmetic)
