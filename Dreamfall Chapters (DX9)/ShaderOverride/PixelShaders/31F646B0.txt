// CRC32: 31F646B0 |    Unity headers extracted from BumpColorSpecFresnel.shader
//    Shader "Dreamfall/Fresnel/Bumped Colored Specular" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _SpecColor ("Specular Color", Color) = (0.5,0.5,0.5,1)
//       _Shininess ("Shininess", Range(0.03,1)) = 0.078125
//       _MainTex ("Base (RGB) ", 2D) = "white" { }
//       _SpecMap ("Specular Map (R)", 2D) = "white" { }
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _FresnelCol ("Fresnel Color", Color) = (1,1,1,1)
//       _Fresnel ("Fresnel Exponent", Range(0.1,6)) = 1
//       _FresnelMult ("Reflect Multiplier", Float) = 1
//      }
//      Fallback "Specular"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 51601
//          Program "fp" {
//            SubProgram "d3d9 " {
//              GpuProgramIndex 42
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from BumpColorSpecFresnel.shader.decompressed:
//   API d3d9
//   Shader model ps_3_0
//   undeciphered1: 45 4 -1
//   Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" }
//   undeciphered3: 0 0 1
//   Float 4 [_Fresnel]
//   Vector 2 [_FresnelCol]
//   Float 3 [_FresnelMult]
//   Vector 0 [_WorldSpaceCameraPos]
//   Vector 1 [unity_Lightmap_HDR]
//   SetTexture 0 [unity_Lightmap] 2D 0
//   SetTexture 1 [unity_LightmapInd] 2D 1
//   SetTexture 2 [_MainTex] 2D 2
//   SetTexture 3 [_BumpMap] 2D 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//   using 3Dmigoto command line v1.2.36 on Sun Jun 19 22:05:39 2016
//
//
// Parameters:
//
//   sampler2D _BumpMap;
//   float _Fresnel;
//   float4 _FresnelCol;
//   float _FresnelMult;
//   sampler2D _MainTex;
//   float3 _WorldSpaceCameraPos;
//   sampler2D unity_Lightmap;
//   sampler2D unity_LightmapInd;
//   float4 unity_Lightmap_HDR;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _WorldSpaceCameraPos c0       1
//   unity_Lightmap_HDR   c1       1
//   _FresnelCol          c2       1
//   _FresnelMult         c3       1
//   _Fresnel             c4       1
//   unity_Lightmap       s0       1
//   unity_LightmapInd    s1       1
//   _MainTex             s2       1
//   _BumpMap             s3       1
//

    ps_3_0
    def c5, 2, -1, 0, 1
    def c6, -0.5, 0.5, 9.99999975e-005, 10000
    dcl_texcoord v0
    dcl_texcoord2 v1
    dcl_texcoord3 v2
    dcl_texcoord4 v3
    dcl_texcoord5_pp v4.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

texldl r31, c220.z, s13

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --fix-unity-reflection --only-autofixed --ignore-register-errors Dreamfall_Fresnel_Bumped Colored Specular/fp/31F646B0.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    texld_pp r0, v4, s0
    pow_pp r1.x, r0.w, c1.y
    mul_pp r0.w, r1.x, c1.x
    mul_pp r0.xyz, r0, r0.w
    texld_pp r1, v0.zwzw, s3
    mad_pp r1.xy, r1.wyzw, c5.x, c5.y
    dp2add_sat_pp r0.w, r1, r1, c5.z
    add_pp r0.w, -r0.w, c5.w
    rsq_pp r0.w, r0.w
    rcp_pp r1.z, r0.w
    dp3_pp r2.x, v1, r1
    dp3_pp r2.y, v2, r1
    dp3_pp r2.z, v3, r1
    texld_pp r3, v4, s1
    add_pp r3.xyz, r3, c6.x
    dp3_pp r0.w, r2, r3
    add_pp r0.w, r0.w, c6.y
    mul_pp r0.xyz, r0.w, r0
    add r0.w, -r3.w, c6.z
    rcp r1.w, r3.w
    cmp r0.w, r0.w, c6.w, r1.w
    mul_pp r0.xyz, r0.w, r0
    mov r2.x, v1.w
    mov r2.y, v2.w
    mov r2.z, v3.w
    add r2.xyz, -r2, r30
    nrm_pp r3.xyz, r2
    mul r2.xyz, r3.y, v2
    mad r2.xyz, v1, r3.x, r2
    mad_pp r2.xyz, v3, r3.z, r2
    nrm r3.xyz, r2
    dp3 r0.w, r3, r1
    add r0.w, -r0.w, c5.w
    pow_pp r1.x, r0.w, c4.x
    texld_pp r2, v0, s2
    mov r3.x, c2.x
    mul_pp r0.w, r3.x, c3.x
    mad_pp r1.xyz, r1.x, r0.w, r2
    mul_pp oC0.xyz, r0, r1
    mov_pp oC0.w, c5.w

// approximately 49 instruction slots used (4 texture, 45 arithmetic)
