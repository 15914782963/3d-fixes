// CRC32: FE25FE70 |    Unity headers extracted from Additive-Fresnel.shader
//    Shader "Dreamfall/FX/Fresnel Additive" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//       _FresnelExp ("Fresnel Exp", Float) = 3.5
//       _FresnelCol ("Fresnel Color", Color) = (1,1,1,1)
//       _FresnelAmt ("Fresnel Amount", Float) = 1
//      }
//      Fallback "Specular"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent" "SHADOWSUPPORT"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Blend One One
//          GpuProgramID 10523
//          Program "fp" {
//            SubProgram "d3d9 " {
//              GpuProgramIndex 44
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Additive-Fresnel.shader.decompressed:
//   API d3d9
//   Shader model ps_3_0
//   undeciphered1: 99 2 -1
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
//   undeciphered3: 0 0 1
//   Vector 7 [_Color]
//   Float 10 [_FresnelAmt]
//   Vector 8 [_FresnelCol]
//   Float 9 [_FresnelExp]
//   Vector 6 [_LightColor0]
//   Vector 0 [_WorldSpaceCameraPos]
//   Vector 1 [_WorldSpaceLightPos0]
//   Vector 5 [unity_ColorSpaceLuminance]
//   Vector 4 [unity_SHAb]
//   Vector 3 [unity_SHAg]
//   Vector 2 [unity_SHAr]
//   SetTexture 0 [_ShadowMapTexture] 2D 0
//   SetTexture 1 [_MainTex] 2D 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//   using 3Dmigoto command line v1.2.36 on Sun Jun 19 21:55:34 2016
//
//
// Parameters:
//
//   float4 _Color;
//   float _FresnelAmt;
//   float4 _FresnelCol;
//   float _FresnelExp;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   _WorldSpaceCameraPos      c0       1
//   _WorldSpaceLightPos0      c1       1
//   unity_SHAr                c2       1
//   unity_SHAg                c3       1
//   unity_SHAb                c4       1
//   unity_ColorSpaceLuminance c5       1
//   _LightColor0              c6       1
//   _Color                    c7       1
//   _FresnelCol               c8       1
//   _FresnelExp               c9       1
//   _FresnelAmt               c10      1
//   _ShadowMapTexture         s0       1
//   _MainTex                  s1       1
//

    ps_3_0
    def c11, 0.416666657, 1.05499995, -0.0549999997, 0
    def c12, 0.5, 1, 2, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2 v2.xyz
    dcl_texcoord3_pp v3.xyz
    dcl_texcoord4 v4
    dcl_2d s0
    dcl_2d s1

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

texldl r31, c220.z, s13

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --fix-unity-reflection --only-autofixed --ignore-register-errors Dreamfall_FX_Fresnel Additive/fp/FE25FE70.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mov r0.x, c12.x
    mul_pp r0.yzw, r0.x, c2.xxyz
    dp3_pp r1.x, r0.yzww, r0.yzww
    rsq_pp r1.x, r1.x
    rcp_pp r1.y, r1.x
    mul_pp r0.yzw, r0, r1.x
    dp3_pp r0.y, v1, r0.yzww
    mad_pp r0.y, r0.y, c12.x, c12.x
    rcp r0.z, c2.w
    mad_pp r0.w, r1.y, r0.z, c12.y
    rcp r0.w, r0.w
    mad_pp r1.x, r1.y, -r0.z, c12.y
    mul_pp r0.z, r0.z, r1.y
    mad_pp r1.zw, r0.z, c12.z, c12.xyyz
    mul_pp r0.z, r0.w, r1.x
    pow_pp r2.x, r0.y, r1.z
    mul_pp r0.y, r1.w, r2.x
    mad_pp r0.w, r1.w, -r2.x, c12.y
    mad_pp r0.y, r0.z, r0.w, r0.y
    mul_pp r0.y, r0.y, c2.w
    cmp_pp r1.x, -r1.y, c2.w, r0.y
    mul_pp r0.yzw, r0.x, c3.xxyz
    dp3_pp r1.w, r0.yzww, r0.yzww
    rsq_pp r1.w, r1.w
    rcp_pp r2.x, r1.w
    mul_pp r0.yzw, r0, r1.w
    dp3_pp r0.y, v1, r0.yzww
    mad_pp r0.y, r0.y, c12.x, c12.x
    rcp r0.z, c3.w
    mad_pp r0.w, r2.x, r0.z, c12.y
    rcp r0.w, r0.w
    mad_pp r1.w, r2.x, -r0.z, c12.y
    mul_pp r0.z, r0.z, r2.x
    mad_pp r2.yz, r0.z, c12.z, c12
    mul_pp r0.z, r0.w, r1.w
    pow_pp r1.w, r0.y, r2.y
    mul_pp r0.y, r1.w, r2.z
    mad_pp r0.w, r2.z, -r1.w, c12.y
    mad_pp r0.y, r0.z, r0.w, r0.y
    mul_pp r0.y, r0.y, c3.w
    cmp_pp r1.y, -r2.x, c3.w, r0.y
    mul_pp r0.xyz, r0.x, c4
    dp3_pp r0.w, r0, r0
    rsq_pp r0.w, r0.w
    rcp_pp r1.w, r0.w
    mul_pp r0.xyz, r0.w, r0
    dp3_pp r0.x, v1, r0
    mad_pp r0.x, r0.x, c12.x, c12.x
    rcp r0.y, c4.w
    mad_pp r0.z, r1.w, r0.y, c12.y
    rcp r0.z, r0.z
    mad_pp r0.w, r1.w, -r0.y, c12.y
    mul_pp r0.y, r0.y, r1.w
    mad_pp r2.xy, r0.y, c12.z, c12.yzzw
    mul_pp r0.y, r0.z, r0.w
    pow_pp r3.x, r0.x, r2.x
    mul_pp r0.x, r2.y, r3.x
    mad_pp r0.z, r2.y, -r3.x, c12.y
    mad_pp r0.x, r0.y, r0.z, r0.x
    mul_pp r0.x, r0.x, c4.w
    cmp_pp r1.z, -r1.w, c4.w, r0.x
    add_pp r0.xyz, r1, v3
    max_pp r1.xyz, r0, c12.w
    log_pp r0.x, r1.x
    log_pp r0.y, r1.y
    log_pp r0.z, r1.z
    mul_pp r0.xyz, r0, c11.x
    exp_pp r2.x, r0.x
    exp_pp r2.y, r0.y
    exp_pp r2.z, r0.z
    mad_pp r0.xyz, r2, c11.y, c11.z
    max_pp r2.xyz, r0, c12.w
    abs r0.x, c5.w
    cmp_pp r0.xyz, -r0.x, r2, r1
    texld_pp r1, v0, s1
    mul_pp r2.xyz, r1, c7
    mul_pp r0.xyz, r0, r2
    dp3_pp r0.w, v1, c1
    max_pp r1.w, r0.w, c12.w
    texldp_pp r3, v4, s0
    mul_pp r3.xyz, r3.x, c6
    mul_pp r2.xyz, r2, r3
    mad_pp r0.xyz, r2, r1.w, r0
    add r2.xyz, r30, -v2
    nrm_pp r3.xyz, r2
    dp3 r0.w, v1, r3
    pow r1.w, r0.w, c9.x
    mul_sat r0.w, r1.w, c10.x
    mul r2.xyz, r0.w, c8
    mad_pp oC0.xyz, r1, r2, r0
    mov_pp oC0.w, c12.y

// approximately 101 instruction slots used (2 texture, 99 arithmetic)
