// CRC32: C96B655F |    Unity headers extracted from Standard_BillboardGrass.shader
//    Shader "Hidden/TerrainEngine/Details/BillboardWavingDoublePass" {
//      Properties {
//       _WavingTint ("Fade Color", Color) = (0.7,0.6,0.5,0)
//       _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
//       _WaveAndDistance ("Wave and distance", Vector) = (12,3.6,1,1)
//       _Cutoff ("Cutoff", Float) = 0.5
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="TransparentCutout" }
//          Cull Off
//          ColorMask RGB
//          GpuProgramID 38781
//          Program "fp" {
//            SubProgram "d3d9 " {
//              GpuProgramIndex 40
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_BillboardGrass.shader.decompressed:
//   API d3d9
//   Shader model ps_2_0
//   undeciphered1: 44 5 -1
//   Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
//   undeciphered3: 0 0 1
//   Float 5 [_Cutoff]
//   Vector 4 [_LightColor0]
//   Vector 0 [_WorldSpaceCameraPos]
//   Vector 1 [_WorldSpaceLightPos0]
//   Vector 3 [unity_ColorSpaceDielectricSpec]
//   Vector 2 [unity_SpecCube0_HDR]
//   SetTexture 0 [unity_SpecCube0] CUBE 0
//   SetTexture 1 [unity_NHxRoughness] 2D 1
//   SetTexture 2 [_MainTex] 2D 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//   using 3Dmigoto command line v1.2.36 on Sun Jun 19 22:12:51 2016
//
//
// Parameters:
//
//   float _Cutoff;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_HDR;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _WorldSpaceCameraPos           c0       1
//   _WorldSpaceLightPos0           c1       1
//   unity_SpecCube0_HDR            c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   _LightColor0                   c4       1
//   _Cutoff                        c5       1
//   unity_SpecCube0                s0       1
//   unity_NHxRoughness             s1       1
//   _MainTex                       s2       1
//

    ps_3_0 // Converted from ps_2_0 with DarkStarSword's shadertool.py
    def c6, -0.5, 6, 1, 16
    dcl_texcoord v1.xy
    dcl_texcoord1_pp v2.xyz
    dcl_texcoord2 v3.xyz
    dcl_color v0
    dcl_texcoord3_pp v4.xyz
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

texldl r31, c220.z, s13

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --fix-unity-reflection --only-autofixed --ignore-register-errors Hidden_TerrainEngine_Details_BillboardWavingDoublePass/fp/C96B655F.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    texld r0, v1, s2
    mad_pp r1, r0.w, v0.w, c6.x
    mul_pp r0, r0, v0
    mad_pp r2, r0.w, v0.w, -c5.x
    add r3.xyz, -v3, r30
    nrm_pp r4.xyz, r3
    dp3_pp r4.w, -r4, v2
    add_pp r4.w, r4.w, r4.w
    mad_pp r3.xyz, v2, -r4.w, -r4
    mov_pp r3.w, c6.y
    nrm_pp r5.xyz, v2
    dp3_pp r4.w, r4, r5
    add_pp r5.w, r4.w, r4.w
    mov_sat_pp r4.w, r4.w
    add_pp r6.y, -r4.w, c6.z
    mad_pp r4.xyz, r5, -r5.w, r4
    dp3_pp r6.x, r4, c1
    mul_pp r4.xy, r6, r6
    mul_pp r4.xy, r4, r4
    mov_pp r4.z, c6.z
    mov_pp r5.x, r4.x
    mov_pp r5.y, r4.z
    texkill r1
    texkill r2
    texldb_pp r1, r3, s0
    texld r2, r5, s1
    pow_pp r2.y, r1.w, c2.y
    mul_pp r1.w, r2.y, c2.x
    mul_pp r1.xyz, r1, r1.w
    mov r1.w, c3.w
    add_sat_pp r1.w, -r1.w, c6.z
    lrp_pp r2.yzw, r4.y, r1.w, c3.wzyx
    mul_pp r1.xyz, r1, r2.wzyx
    mul_pp r0.xyz, r0, c3.w
    mul_pp r3.w, r0.w, v0.w
    mad_pp r1.xyz, v4, r0, r1
    mul_pp r0.w, r2.x, c6.w
    mad_pp r0.xyz, r0.w, c3, r0
    dp3_sat_pp r0.w, v2, c1
    mul_pp r2.xyz, r0.w, c4
    mad_pp r3.xyz, r0, r2, r1
    mov_pp oC0, r3

// approximately 48 instruction slots used (3 texture, 45 arithmetic)
