// CRC32: D76FD1F0 |    Unity headers extracted from Reflect-Glossy_Fresnel.shader
//    Shader "Chickenlord/Reflective/Fresnel/Specular" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _SpecColor ("Specular Color", Color) = (0.5,0.5,0.5,1)
//       _Shininess ("Shininess", Range(0.01,1)) = 0.078125
//       _ReflectColor ("Reflection Color", Color) = (1,1,1,0.5)
//       _Fresnel ("Reflection Fresnel Exponent", Range(0,6)) = 1
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//       _Cube ("Reflection Cubemap", CUBE) = "_Skybox" { }
//      }
//      Fallback "Reflective/VertexLit"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 5091
//          Program "fp" {
//            SubProgram "d3d9 " {
//              GpuProgramIndex 52
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Reflect-Glossy_Fresnel.shader.decompressed:
//   API d3d9
//   Shader model ps_2_0
//   undeciphered1: 38 3 -1
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_LINEAR" }
//   undeciphered3: 0 0 1
//   Vector 5 [_Color]
//   Float 8 [_Fresnel]
//   Vector 3 [_LightColor0]
//   Vector 6 [_ReflectColor]
//   Float 7 [_Shininess]
//   Vector 4 [_SpecColor]
//   Vector 0 [_WorldSpaceCameraPos]
//   Vector 1 [_WorldSpaceLightPos0]
//   Vector 2 [unity_FogColor]
//   SetTexture 0 [_ShadowMapTexture] 2D 0
//   SetTexture 1 [_MainTex] 2D 1
//   SetTexture 2 [_Cube] CUBE 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//   using 3Dmigoto command line v1.2.36 on Sun Jun 19 22:06:10 2016
//
//
// Parameters:
//
//   float4 _Color;
//   samplerCUBE _Cube;
//   float _Fresnel;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float4 _ReflectColor;
//   sampler2D _ShadowMapTexture;
//   float _Shininess;
//   float4 _SpecColor;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogColor;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _WorldSpaceCameraPos c0       1
//   _WorldSpaceLightPos0 c1       1
//   unity_FogColor       c2       1
//   _LightColor0         c3       1
//   _SpecColor           c4       1
//   _Color               c5       1
//   _ReflectColor        c6       1
//   _Shininess           c7       1
//   _Fresnel             c8       1
//   _ShadowMapTexture    s0       1
//   _MainTex             s1       1
//   _Cube                s2       1
//

    ps_3_0 // Converted from ps_2_0 with DarkStarSword's shadertool.py
    def c9, 1, 0, 128, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xyz
    dcl_texcoord2_pp v2.xyz
    dcl_texcoord3 v3.xyz
    dcl_texcoord4_pp v4.xyz
    dcl_texcoord5_pp v5
    dcl_texcoord6 v6.x
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

texldl r31, c220.z, s13

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --fix-unity-reflection --only-autofixed --ignore-register-errors Chickenlord_Reflective_Fresnel_Specular/fp/D76FD1F0.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    texld_pp r0, v0, s1
    texldp_pp r1, v5, s0
    texld_pp r2, v1, s2
    dp3_pp r2.w, v2, c1
    max_pp r1.y, r2.w, c9.y
    add r3.xyz, -v3, r30
    dp3 r2.w, r3, r3
    rsq r2.w, r2.w
    mad_pp r4.xyz, r3, r2.w, c1
    mul_pp r3.xyz, r2.w, r3
    dp3 r2.w, r3, v2
    add r2.w, -r2.w, c9.x
    pow r4.w, r2.w, c8.x
    nrm_pp r3.xyz, r4
    dp3_pp r2.w, v2, r3
    max r1.z, r2.w, c9.y
    mov r1.w, c9.z
    mul r1.w, r1.w, c7.x
    pow r2.w, r1.z, r1.w
    mul r2.w, r0.w, r2.w
    mul_pp r3.xyz, r1.x, c3
    mul r4.xyz, r3, c4
    mul r4.xyz, r2.w, r4
    mul_pp r0.xyz, r0, c5
    mul_pp r3.xyz, r3, r0
    mad_pp r1.xyz, r3, r1.y, r4
    mad_pp r0.xyz, r0, v4, r1
    mul_pp r1.xyz, r0.w, r2
    mul_pp r1.xyz, r4.w, r1
    mad_pp r0.xyz, r1, c6, r0
    mov_sat r0.w, v6.x
    lrp_pp r1.xyz, r0.w, r0, c2
    mov r1.w, c9.x
    mov_pp oC0, r1

// approximately 40 instruction slots used (3 texture, 37 arithmetic)
