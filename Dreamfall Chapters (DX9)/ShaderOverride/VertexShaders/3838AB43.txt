// CRC32: 3838AB43 |    Unity headers extracted from Standard_BillboardGrass.shader
//    Shader "Hidden/TerrainEngine/Details/BillboardWavingDoublePass" {
//      Properties {
//       _WavingTint ("Fade Color", Color) = (0.7,0.6,0.5,0)
//       _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
//       _WaveAndDistance ("Wave and distance", Vector) = (12,3.6,1,1)
//       _Cutoff ("Cutoff", Float) = 0.5
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//          ZWrite Off
//          Cull Off
//          Blend One One
//          ColorMask RGB
//          GpuProgramID 93465
//          Program "vp" {
//            SubProgram "d3d9 " {
//              GpuProgramIndex 77
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_BillboardGrass.shader.decompressed:
//   API d3d9
//   Shader model vs_2_0
//   undeciphered1: 59 -1 -1
//   Keywords { "POINT" "FOG_LINEAR" }
//   undeciphered3: 143 5 0 0 2 1 1 2 3 4 7 8 1
//   Vector 13 [_CameraPosition]
//   Vector 14 [_CameraRight]
//   Vector 15 [_CameraUp]
//   Vector 16 [_MainTex_ST]
//   Vector 12 [_WaveAndDistance]
//   Vector 11 [_WavingTint]
//   Vector 10 [unity_FogParams]
//   Matrix 4 [_Object2World] 3
//   Matrix 7 [_World2Object] 3
//   Matrix 0 [glstate_matrix_mvp]
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//   using 3Dmigoto command line v1.2.36 on Sun Jun 19 22:12:52 2016
//
//
// Parameters:
//
//   float4 _CameraPosition;
//   float3 _CameraRight;
//   float3 _CameraUp;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _WaveAndDistance;
//   float4 _WavingTint;
//   row_major float4x4 _World2Object;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_FogParams;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   glstate_matrix_mvp c0       4
//   _Object2World      c4       3
//   _World2Object      c7       3
//   unity_FogParams    c10      1
//   _WavingTint        c11      1
//   _WaveAndDistance   c12      1
//   _CameraPosition    c13      1
//   _CameraRight       c14      1
//   _CameraUp          c15      1
//   _MainTex_ST        c16      1
//

    vs_3_0 // Converted from vs_2_0 with DarkStarSword's shadertool.py
    def c17, 1.20000005, 2, 1.60000002, 4.80000019
    def c18, 6.40884876, -3.14159274, 0.00833330024, -0.000198409994
    def c19, 0.00600000005, 0.0199999996, 0.0500000007, -0.161616161
    def c20, 0.674199879, 0.269679934, 0.134839967, 0.699999988
    def c21, 0.0240000002, 0.0399999991, -0.119999997, 0.0960000008
    def c22, 0.00600000005, 0.0199999996, -0.0199999996, 0.100000001
    def c23, -0.5, 0.5, 0, 1
    def c24, 0.0120000001, 0.0199999996, 0.0599999987, 0.0240000002
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord v3
    dcl_color v4

dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2
dcl_texcoord4 o3
dcl_position o4
dcl_color o5

    add r0.xyz, v0, -c13
    dp3 r0.x, r0, r0
    slt r0.x, c12.w, r0.x
    mad r0.xy, r0.x, -v1, v1
    mad r0.xzw, r0.x, c14.xyyz, v0.xyyz
    mad r0.xyz, r0.y, c15, r0.xzww
    mul r1.xy, r0.xzzw, c12.y
    mul r2, r1.y, c19.xyyz
    mad r1, r1.x, c24, r2
    mov r2.x, c12.x
    mad r1, r2.x, c17, r1
    frc r1, r1
    mad r1, r1, c18.x, c18.y
    mul r2, r1, r1
    mul r3, r1, r2
    mad r1, r3, c19.w, r1
    mul r3, r2, r3
    mul r2, r2, r3
    mad r1, r3, c18.z, r1
    mad r1, r2, c18.w, r1
    mul r1, r1, r1
    mul r1, r1, r1
    mul r2, r1, v1.y
    dp4 r1.x, r1, c20.xxyz
    mul r1.x, r1.x, c20.w
    dp4 r3.x, r2, c21
    dp4 r3.z, r2, c22
    mad r0.xz, r3, -c12.z, r0
    add r1.yzw, r0.xxyz, -c13.xxyz
    dp3 r1.y, r1.yzww, r1.yzww
    add r1.y, -r1.y, c12.w
    add r1.y, r1.y, r1.y
    mul r1.y, r1.y, c13.w
    max r1.y, r1.y, c23.z
    min o5.w, r1.y, c23.w
    mov r2.x, c23.x
    add r1.yzw, r2.x, c11.xxyz
    mad r1.xyz, r1.x, r1.yzww, c23.y
    mul r1.xyz, r1, v4
    add o5.xyz, r1, r1
    mov r0.w, v0.w
    dp4 o4.x, c0, r0
    dp4 o4.y, c1, r0
    dp4 o4.w, c3, r0
    mad o0.xy, v3, c16, c16.zwzw
    dp4 o2.x, c4, r0
    dp4 o2.y, c5, r0
    dp4 o2.z, c6, r0
    dp4 r0.x, c2, r0
    mul r0.yzw, v2.y, c8.xxyz
    mad r0.yzw, c7.xxyz, v2.x, r0
    mad r0.yzw, c9.xxyz, v2.z, r0
    dp3 r1.x, r0.yzww, r0.yzww
    rsq r1.x, r1.x
    mul o1.xyz, r0.yzww, r1.x
    mad o3.x, r0.x, c10.z, c10.w
    mov o4.z, r0.x

// approximately 57 instruction slots used
