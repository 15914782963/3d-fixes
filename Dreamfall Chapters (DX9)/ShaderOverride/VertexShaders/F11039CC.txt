// CRC32: F11039CC |    Unity headers extracted from Additive-Fresnel.shader
//    Shader "Dreamfall/FX/Fresnel Additive" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//       _FresnelExp ("Fresnel Exp", Float) = 3.5
//       _FresnelCol ("Fresnel Color", Color) = (1,1,1,1)
//       _FresnelAmt ("Fresnel Amount", Float) = 1
//      }
//      Fallback "Specular"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent" "SHADOWSUPPORT"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Blend One One
//          GpuProgramID 10523
//          Program "vp" {
//            SubProgram "d3d9 " {
//              GpuProgramIndex 8
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Additive-Fresnel.shader.decompressed:
//   API d3d9
//   Shader model vs_3_0
//   undeciphered1: 49 -1 -1
//   Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
//   undeciphered3: 11 3 0 0 1 2 3 4 1
//   Vector 19 [_MainTex_ST]
//   Vector 17 [unity_4LightAtten0]
//   Vector 14 [unity_4LightPosX0]
//   Vector 15 [unity_4LightPosY0]
//   Vector 16 [unity_4LightPosZ0]
//   Vector 18 [unity_ColorSpaceLuminance]
//   Vector 0 [unity_LightColor0]
//   Vector 1 [unity_LightColor1]
//   Vector 2 [unity_LightColor2]
//   Vector 3 [unity_LightColor3]
//   Matrix 8 [_Object2World] 3
//   Matrix 11 [_World2Object] 3
//   Matrix 4 [glstate_matrix_mvp]
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//   using 3Dmigoto command line v1.2.36 on Sun Jun 19 21:55:33 2016
//
//
// Parameters:
//
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   row_major float4x4 _World2Object;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_LightColor[8];
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   unity_LightColor          c0       4
//   glstate_matrix_mvp        c4       4
//   _Object2World             c8       3
//   _World2Object             c11      3
//   unity_4LightPosX0         c14      1
//   unity_4LightPosY0         c15      1
//   unity_4LightPosZ0         c16      1
//   unity_4LightAtten0        c17      1
//   unity_ColorSpaceLuminance c18      1
//   _MainTex_ST               c19      1
//

    vs_3_0
    def c20, 0, 1, 0.305306017, 0.682171106
    def c21, 0.0125228781, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord3 o4.xyz
    dcl_texcoord6 o5
    dp4 o0.x, c4, v0
    dp4 o0.y, c5, v0
    dp4 o0.z, c6, v0
    dp4 o0.w, c7, v0
    mad o1.xy, v2, c19, c19.zwzw
    mul r0.xyz, c12, v1.y
    mad r0.xyz, c11, v1.x, r0
    mad r0.xyz, c13, v1.z, r0
    nrm r1.xyz, r0
    dp4 r0.y, c9, v0
    add r2, -r0.y, c15
    mul r3, r1.y, r2
    mul r2, r2, r2
    dp4 r0.x, c8, v0
    add r4, -r0.x, c14
    mad r3, r4, r1.x, r3
    mad r2, r4, r4, r2
    dp4 r0.z, c10, v0
    add r4, -r0.z, c16
    mov o3.xyz, r0
    mad r0, r4, r1.z, r3
    mov o2.xyz, r1
    mad r1, r4, r4, r2
    rsq r2.x, r1.x
    rsq r2.y, r1.y
    rsq r2.z, r1.z
    rsq r2.w, r1.w
    mov r3.y, c20.y
    mad r1, r1, c17, r3.y
    mul r0, r0, r2
    max r0, r0, c20.x
    rcp r2.x, r1.x
    rcp r2.y, r1.y
    rcp r2.z, r1.z
    rcp r2.w, r1.w
    mul r0, r0, r2
    mul r1.xyz, r0.y, c1
    mad r1.xyz, c0, r0.x, r1
    mad r0.xyz, c2, r0.z, r1
    mad r0.xyz, c3, r0.w, r0
    mad r1.xyz, r0, c20.z, c20.w
    mad r1.xyz, r0, r1, c21.x
    mad r1.xyz, r0, r1, -r0
    abs r0.w, c18.w
    sge r0.w, -r0.w, r0.w
    mad o4.xyz, r0.w, r1, r0
    mov o5, c20.x

// approximately 49 instruction slots used
