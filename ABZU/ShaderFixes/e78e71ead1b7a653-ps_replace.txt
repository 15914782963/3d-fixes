// Orange web door
// ---- Created with 3Dmigoto v1.2.44 on Mon Oct 03 02:34:16 2016
Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb2 : register(b2)
{
  float4 cb2[7];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[9];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[30];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);

#include "matrix.hlsl"

void main( 
  float4 v0 : SV_Position0,
  out float4 o0 : SV_Target0,
  out float4 o2 : SV_Target2,
  out float4 o3 : SV_Target3)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = cb1[3].zw * v0.xy;
  r0.x = t1.SampleLevel(s1_s, r0.xy, 0).x;
  r1.xyzw = cb0[2].xyzw * v0.yyyy;
  r1.xyzw = v0.xxxx * cb0[1].xyzw + r1.xyzw;
  r0.xyzw = r0.xxxx * cb0[3].xyzw + r1.xyzw;
  r0.xyzw = cb0[4].xyzw + r0.xyzw;
  r0.xyz = r0.xyz / r0.www;

float4 s = StereoParams.Load(0);
matrix m = MATRIX(cb0, 1);
matrix im = inverse(m);
float4 t = mul(float4(r0.xyz, 1), im);
t.x -= s.x * (t.w - s.y) * cb1[3].x / 2; // Different cb for resolution
r0.xyz = mul(t, m);

  r1.xyz = float3(1,1,1) + r0.xyz;
  r1.xyz = cmp(r1.xyz < float3(0,0,0));
  r0.w = (int)r1.y | (int)r1.x;
  r0.w = (int)r1.z | (int)r0.w;
  if (r0.w != 0) discard;
  r1.xyz = float3(1,1,1) + -r0.xyz;
  r0.xyz = r0.xyz * float3(0.5,0.5,0.5) + float3(0.5,0.5,0.5);
  r1.xyz = cmp(r1.xyz < float3(0,0,0));
  r0.w = (int)r1.y | (int)r1.x;
  r0.w = (int)r1.z | (int)r0.w;
  if (r0.w != 0) discard;
  r0.y = t0.Sample(s0_s, r0.zy).x;
  r0.x = r0.x * 2 + -1;
  r0.x = saturate(-abs(r0.x) * 4 + 4);
  r0.y = saturate(cb2[6].x * r0.y);
  r0.x = r0.y * r0.x;
  r0.x = cb0[29].x * r0.x;
  o0.w = r0.x;
  r0.yzw = cb2[3].xyz + cb2[2].xyz;
  o0.xyz = max(float3(0,0,0), r0.yzw);
  o2.w = r0.x;
  o3.w = r0.x;
  o2.z = cb1[8].y * 0.5 + cb1[8].x;
  o2.xy = float2(0,0);
  r0.yzw = saturate(cb2[4].xyz * cb2[2].xyz);
  o3.xyz = r0.yzw * r0.xxx;
  return;
}
