// Blur (processes broken velocity buffer?)

// Type: FPostProcessMotionBlurNewPS4
// Skipping over variable length shader specific section (384 bytes):
//   00263311: 00000000 00000000 00000000 00001001 | ................ |
//   00263321: 10000000 00011000 00000000 01000000 | ................ |
//   00263331: 01001000 10000000 00000000 00000000 | ................ |
//   00263341: 00000000 00000000 00000000 00000000 | ................ |
//   00263351: 00000100 01000100 01000000 00000000 | ................ |
//   00263361: 00000000 00000200 01000200 01004000 | ..............@. |
//   00263371: 10000000 00000000 00000000 00000000 | ................ |
//   00263381: 00000000 00000000 00000000 00000000 | ................ |
//   00263391: 00000000 00000000 00000000 00000000 | ................ |
//   002633a1: 00000000 00000000 00000000 00000000 | ................ |
//   002633b1: 00000000 00000000 00000000 00000000 | ................ |
//   002633c1: 00000000 00000000 00000000 00000000 | ................ |
//   002633d1: 00000000 00000000 00000000 00000000 | ................ |
//   002633e1: 00000000 00000000 00000000 00000000 | ................ |
//   002633f1: 00000000 00000000 00000000 00000000 | ................ |
//   00263401: 00000000 00000000 00000000 00000000 | ................ |
//   00263411: 00000000 00000000 00000000 00000000 | ................ |
//   00263421: 00000000 00000000 00000000 00000000 | ................ |
//   00263431: 00000000 00000000 90011000 000029E6 | ..............). |
//   00263441: 612DB5D1 B2151CEA 33A986BB 4C0102CF | a-......3...L... |
//   00263451: 6B9D9FF0 F6BACFE0 D9C0AC9A FAAB2F4D | k............./M |
//   00263461: BE1DE551 D0430500 00004E6F 6E650005 | ...Q.C....None.. |
//   00263471: 0000004E 6F6E6500 00000000 00000000 | ...None......... |
//   00263481: 00000000 00000000 00000000 1D000000 | ................ |
// SourceHash: a08b0d8d5a1bc690a8e7dbdc10ce214867b341e4
// TargetFrequency: 3, TargetPlatform: 0
// NumUniformParameters: 0
// ShaderTypeName: None
// ResourceTableBits: 00000000
// ShaderResourceViewMap:
// SamplerMap:
// UnorderedAccessViewMap:
// ResourceTableLayoutHashes:
// Unknown Tail (52 bytes):
//   00000000: 70050103 03010075 04000000 006E2450 | p......u.....n$P |
//   00000010: 6F737450 726F6365 73734D6F 74696F6E | ostProcessMotion |
//   00000020: 426C7572 2E757366 7C4D6169 6E4E6577 | Blur.usf|MainNew |
//   00000030: 50530000                            | PS..             |
// OutputHash: 29e6612db5d1b2151cea33a986bb4c0102cf6b9d
// NumInstructions: 357
// NumTextureSamplers: 3
//
// Headers extracted with DarkStarSword's extract_unreal_shaders.py
// https://github.com/DarkStarSword/3d-fixes

// ---- Created with 3Dmigoto v1.2.42 on Fri Sep 30 07:19:03 2016
Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb0 : register(b0)
{
  float4 cb0[26];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : TEXCOORD0,
  float4 v1 : SV_Position0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = (uint2)v1.xy;
  r0.zw = (uint2)r0.xy;
  r0.z = dot(r0.zw, float2(0.0671105608,0.00583714992));
  r0.z = frac(r0.z);
  r0.z = 52.9829178 * r0.z;
  r1.x = frac(r0.z);
  r0.zw = (int2)r0.xy & int2(1,1);
  r0.zw = (uint2)r0.zw;
  r0.z = r0.z * 0.5 + -0.25;
  r0.w = r0.w * 2 + -1;
  r1.y = r0.z * r0.w;
  r0.zw = float2(-0.5,-0.5) + r1.xy;
  r0.zw = float2(0.5,0.5) * r0.zw;
  r0.xy = (int2)r0.xy + asint(-cb0[16].xy);
  r0.xy = (uint2)r0.xy;
  r0.xy = float2(0.5,0.5) + r0.xy;
  r0.xy = r0.xy * float2(0.0625,0.0625) + r0.zw;
  r0.zw = asuint(cb0[16].zw);
  r0.xy = min(r0.xy, r0.zw);
  r0.xy = cb0[4].zw * r0.xy;
  r0.xyzw = t2.SampleLevel(s2_s, r0.xy, 0).xyzw;

// Kill blur:
r0 = 0;

  r2.xyzw = cb0[25].yyyy * r0.zwzw;
  r0.z = dot(r2.zw, r2.zw);
  r0.w = cmp(r0.z < 0.25);
  r3.xyz = t0.SampleLevel(s0_s, v0.xy, 0).xyz;
  if (r0.w != 0) {
    o0.xyz = r3.xyz;
    o0.w = 0;
    return;
  }
  r0.xy = cb0[25].yy * r0.xy;
  r0.x = dot(r0.xy, r0.xy);
  r0.y = 0.400000006 * r0.z;
  r0.x = cmp(r0.y < r0.x);
  r0.yw = rcp(r2.zw);
  r4.xy = cb0[17].xx * r0.yw;
  r4.xy = v0.zw * r4.xy;
  r4.zw = -cb0[17].xx * r0.yw + -r4.xy;
  r0.yw = cb0[17].xx * r0.yw + -r4.xy;
  r5.xy = max(r4.zw, r0.yw);
  r5.zw = max(-r4.zw, -r0.yw);
  r4.xy = saturate(min(r5.xz, r5.yw));
  r4.z = -r4.y;
  r2.xyzw = r4.xxzz * r2.xyzw;
  r2.xyzw = cb0[1].zwzw * r2.xyzw;
  if (r0.x != 0) {
    r1.z = -r1.x;
    r4.xyzw = float4(0,0,1,1) + r1.xxzz;
    r4.xyzw = float4(0.125,0.125,0.125,0.125) * r4.xyzw;
    r4.xyzw = r4.xyzw * r2.xyzw + v0.xyxy;
    r0.xyw = t0.SampleLevel(s0_s, r4.xy, 0).xyz;
    r4.xyz = t0.SampleLevel(s0_s, r4.zw, 0).xyz;
    r0.xyw = r4.xyz + r0.xyw;
    r4.xyzw = float4(1,1,2,2) + r1.xxzz;
    r4.xyzw = float4(0.125,0.125,0.125,0.125) * r4.xyzw;
    r4.xyzw = r4.xyzw * r2.xyzw + v0.xyxy;
    r5.xyz = t0.SampleLevel(s0_s, r4.xy, 0).xyz;
    r0.xyw = r5.xyz + r0.xyw;
    r4.xyz = t0.SampleLevel(s0_s, r4.zw, 0).xyz;
    r0.xyw = r4.xyz + r0.xyw;
    r4.xyzw = float4(2,2,3,3) + r1.xxzz;
    r4.xyzw = float4(0.125,0.125,0.125,0.125) * r4.xyzw;
    r4.xyzw = r4.xyzw * r2.xyzw + v0.xyxy;
    r5.xyz = t0.SampleLevel(s0_s, r4.xy, 0).xyz;
    r0.xyw = r5.xyz + r0.xyw;
    r4.xyz = t0.SampleLevel(s0_s, r4.zw, 0).xyz;
    r0.xyw = r4.xyz + r0.xyw;
    r4.xyzw = float4(3,3,4,4) + r1.xxzz;
    r4.xyzw = float4(0.125,0.125,0.125,0.125) * r4.xyzw;
    r4.xyzw = r4.xyzw * r2.xyzw + v0.xyxy;
    r5.xyz = t0.SampleLevel(s0_s, r4.xy, 0).xyz;
    r0.xyw = r5.xyz + r0.xyw;
    r4.xyz = t0.SampleLevel(s0_s, r4.zw, 0).xyz;
    r0.xyw = r4.xyz + r0.xyw;
    r4.xyzw = float4(4,4,5,5) + r1.xxzz;
    r4.xyzw = float4(0.125,0.125,0.125,0.125) * r4.xyzw;
    r4.xyzw = r4.xyzw * r2.xyzw + v0.xyxy;
    r5.xyz = t0.SampleLevel(s0_s, r4.xy, 0).xyz;
    r0.xyw = r5.xyz + r0.xyw;
    r4.xyz = t0.SampleLevel(s0_s, r4.zw, 0).xyz;
    r0.xyw = r4.xyz + r0.xyw;
    r4.xyzw = float4(5,5,6,6) + r1.xxzz;
    r4.xyzw = float4(0.125,0.125,0.125,0.125) * r4.xyzw;
    r4.xyzw = r4.xyzw * r2.xyzw + v0.xyxy;
    r5.xyz = t0.SampleLevel(s0_s, r4.xy, 0).xyz;
    r0.xyw = r5.xyz + r0.xyw;
    r4.xyz = t0.SampleLevel(s0_s, r4.zw, 0).xyz;
    r0.xyw = r4.xyz + r0.xyw;
    r4.xyzw = float4(6,6,7,7) + r1.xxzz;
    r4.xyzw = float4(0.125,0.125,0.125,0.125) * r4.xyzw;
    r4.xyzw = r4.xyzw * r2.xyzw + v0.xyxy;
    r5.xyz = t0.SampleLevel(s0_s, r4.xy, 0).xyz;
    r0.xyw = r5.xyz + r0.xyw;
    r4.xyz = t0.SampleLevel(s0_s, r4.zw, 0).xyz;
    r0.xyw = r4.xyz + r0.xyw;
    r4.xyzw = float4(7,7,8,8) + r1.xxzz;
    r4.xyzw = float4(0.125,0.125,0.125,0.125) * r4.xyzw;
    r4.xyzw = r4.xyzw * r2.xyzw + v0.xyxy;
    r5.xyz = t0.SampleLevel(s0_s, r4.xy, 0).xyz;
    r0.xyw = r5.xyz + r0.xyw;
    r4.xyz = t0.SampleLevel(s0_s, r4.zw, 0).xyz;
    r0.xyw = r4.xyz + r0.xyw;
    r0.xyw = float3(0.0625,0.0625,0.0625) * r0.xyw;
  } else {
    r0.z = rsqrt(r0.z);
    r0.z = 8 * r0.z;
    r1.yz = t1.SampleLevel(s1_s, v0.xy, 0).xz;
    r1.y = cb0[25].y * r1.y;
    r4.x = min(cb0[25].w, r1.y);
    r1.w = -r1.x;
    r5.xyzw = float4(0,0,1,1) + r1.xxww;
    r5.xyzw = float4(0.125,0.125,0.125,0.125) * r5.xyzw;
    r5.xyzw = r5.xyzw * r2.xyzw + v0.xyxy;
    r6.xy = t1.SampleLevel(s1_s, r5.xy, 0).xz;
    r7.xyz = t0.SampleLevel(s0_s, r5.xy, 0).xyz;
    r1.y = cb0[25].y * r6.x;
    r4.y = min(cb0[25].w, r1.y);
    r1.y = r6.y + -r1.z;
    r5.xy = saturate(r1.yy * float2(1,-1) + float2(0.5,0.5));
    r6.xz = saturate(r4.xy * r0.zz);
    r1.y = dot(r5.xy, r6.xz);
    r5.xy = t1.SampleLevel(s1_s, r5.zw, 0).xz;
    r8.xyz = t0.SampleLevel(s0_s, r5.zw, 0).xyz;
    r3.w = cb0[25].y * r5.x;
    r4.z = min(cb0[25].w, r3.w);
    r3.w = r5.y + -r1.z;
    r5.xz = saturate(r3.ww * float2(1,-1) + float2(0.5,0.5));
    r6.xz = saturate(r4.xz * r0.zz);
    r3.w = dot(r5.xz, r6.xz);
    r5.x = cmp(r5.y < r6.y);
    r5.y = cmp(r4.y < r4.z);
    r5.z = r5.y ? r5.x : 0;
    r5.w = r5.z ? r3.w : r1.y;
    r5.x = (int)r5.y | (int)r5.x;
    r5.x = (int)r5.x | (int)r5.z;
    r1.y = r5.x ? r3.w : r1.y;
    r7.w = 1;
    r8.w = 1;
    r6.xyzw = r8.xyzw * r1.yyyy;
    r5.xyzw = r5.wwww * r7.xyzw + r6.xyzw;
    r6.xyzw = float4(1,1,2,2) + r1.xxww;
    r7.xyzw = float4(0.125,0.125,0.125,0.125) * r6.xyzw;
    r7.xyzw = r7.xyzw * r2.xyzw + v0.xyxy;
    r6.xz = t1.SampleLevel(s1_s, r7.xy, 0).xz;
    r8.xyz = t0.SampleLevel(s0_s, r7.xy, 0).xyz;
    r1.y = cb0[25].y * r6.x;
    r4.w = min(cb0[25].w, r1.y);
    r1.y = r6.z + -r1.z;
    r6.xw = saturate(r1.yy * float2(1,-1) + float2(0.5,0.5));
    r7.xy = saturate(r0.zz * r4.xw + -r1.xx);
    r1.y = dot(r6.xw, r7.xy);
    r6.xw = t1.SampleLevel(s1_s, r7.zw, 0).xz;
    r7.xyz = t0.SampleLevel(s0_s, r7.zw, 0).xyz;
    r3.w = cb0[25].y * r6.x;
    r4.y = min(cb0[25].w, r3.w);
    r3.w = r6.w + -r1.z;
    r9.xy = saturate(r3.ww * float2(1,-1) + float2(0.5,0.5));
    r9.zw = saturate(r0.zz * r4.xy + -r1.xx);
    r3.w = dot(r9.xy, r9.zw);
    r6.x = cmp(r6.w < r6.z);
    r6.z = cmp(r4.w < r4.y);
    r6.w = r6.z ? r6.x : 0;
    r9.x = r6.w ? r3.w : r1.y;
    r6.x = (int)r6.z | (int)r6.x;
    r6.x = (int)r6.x | (int)r6.w;
    r1.y = r6.x ? r3.w : r1.y;
    r8.w = 1;
    r5.xyzw = r9.xxxx * r8.xyzw + r5.xyzw;
    r7.w = 1;
    r5.xyzw = r1.yyyy * r7.xyzw + r5.xyzw;
    r7.xyzw = float4(2,2,3,3) + r1.xxww;
    r8.xyzw = float4(0.125,0.125,0.125,0.125) * r7.xyzw;
    r8.xyzw = r8.xyzw * r2.xyzw + v0.xyxy;
    r6.xz = t1.SampleLevel(s1_s, r8.xy, 0).xz;
    r9.xyz = t0.SampleLevel(s0_s, r8.xy, 0).xyz;
    r1.y = cb0[25].y * r6.x;
    r4.z = min(cb0[25].w, r1.y);
    r1.y = r6.z + -r1.z;
    r6.xw = saturate(r1.yy * float2(1,-1) + float2(0.5,0.5));
    r7.xz = saturate(r0.zz * r4.xz + -r6.yy);
    r1.y = dot(r6.xw, r7.xz);
    r6.xw = t1.SampleLevel(s1_s, r8.zw, 0).xz;
    r8.xyz = t0.SampleLevel(s0_s, r8.zw, 0).xyz;
    r3.w = cb0[25].y * r6.x;
    r4.w = min(cb0[25].w, r3.w);
    r3.w = r6.w + -r1.z;
    r7.xz = saturate(r3.ww * float2(1,-1) + float2(0.5,0.5));
    r6.xy = saturate(r0.zz * r4.xw + -r6.yy);
    r3.w = dot(r7.xz, r6.xy);
    r6.x = cmp(r6.w < r6.z);
    r6.y = cmp(r4.z < r4.w);
    r6.z = r6.y ? r6.x : 0;
    r6.w = r6.z ? r3.w : r1.y;
    r6.x = (int)r6.y | (int)r6.x;
    r6.x = (int)r6.x | (int)r6.z;
    r1.y = r6.x ? r3.w : r1.y;
    r9.w = 1;
    r5.xyzw = r6.wwww * r9.xyzw + r5.xyzw;
    r8.w = 1;
    r5.xyzw = r1.yyyy * r8.xyzw + r5.xyzw;
    r6.xyzw = float4(3,3,4,4) + r1.xxww;
    r8.xyzw = float4(0.125,0.125,0.125,0.125) * r6.xyzw;
    r8.xyzw = r8.xyzw * r2.xyzw + v0.xyxy;
    r6.xz = t1.SampleLevel(s1_s, r8.xy, 0).xz;
    r9.xyz = t0.SampleLevel(s0_s, r8.xy, 0).xyz;
    r1.y = cb0[25].y * r6.x;
    r4.y = min(cb0[25].w, r1.y);
    r1.y = r6.z + -r1.z;
    r6.xw = saturate(r1.yy * float2(1,-1) + float2(0.5,0.5));
    r7.xz = saturate(r0.zz * r4.xy + -r7.yy);
    r1.y = dot(r6.xw, r7.xz);
    r6.xw = t1.SampleLevel(s1_s, r8.zw, 0).xz;
    r8.xyz = t0.SampleLevel(s0_s, r8.zw, 0).xyz;
    r3.w = cb0[25].y * r6.x;
    r4.z = min(cb0[25].w, r3.w);
    r3.w = r6.w + -r1.z;
    r7.xz = saturate(r3.ww * float2(1,-1) + float2(0.5,0.5));
    r7.yw = saturate(r0.zz * r4.xz + -r7.yy);
    r3.w = dot(r7.xz, r7.yw);
    r6.x = cmp(r6.w < r6.z);
    r6.z = cmp(r4.y < r4.z);
    r6.w = r6.z ? r6.x : 0;
    r7.x = r6.w ? r3.w : r1.y;
    r6.x = (int)r6.z | (int)r6.x;
    r6.x = (int)r6.x | (int)r6.w;
    r1.y = r6.x ? r3.w : r1.y;
    r9.w = 1;
    r5.xyzw = r7.xxxx * r9.xyzw + r5.xyzw;
    r8.w = 1;
    r5.xyzw = r1.yyyy * r8.xyzw + r5.xyzw;
    r7.xyzw = float4(4,4,5,5) + r1.xxww;
    r8.xyzw = float4(0.125,0.125,0.125,0.125) * r7.xyzw;
    r8.xyzw = r8.xyzw * r2.xyzw + v0.xyxy;
    r6.xz = t1.SampleLevel(s1_s, r8.xy, 0).xz;
    r9.xyz = t0.SampleLevel(s0_s, r8.xy, 0).xyz;
    r1.y = cb0[25].y * r6.x;
    r4.w = min(cb0[25].w, r1.y);
    r1.y = r6.z + -r1.z;
    r6.xw = saturate(r1.yy * float2(1,-1) + float2(0.5,0.5));
    r7.xz = saturate(r0.zz * r4.xw + -r6.yy);
    r1.y = dot(r6.xw, r7.xz);
    r6.xw = t1.SampleLevel(s1_s, r8.zw, 0).xz;
    r8.xyz = t0.SampleLevel(s0_s, r8.zw, 0).xyz;
    r3.w = cb0[25].y * r6.x;
    r4.y = min(cb0[25].w, r3.w);
    r3.w = r6.w + -r1.z;
    r7.xz = saturate(r3.ww * float2(1,-1) + float2(0.5,0.5));
    r6.xy = saturate(r0.zz * r4.xy + -r6.yy);
    r3.w = dot(r7.xz, r6.xy);
    r6.x = cmp(r6.w < r6.z);
    r6.y = cmp(r4.w < r4.y);
    r6.z = r6.y ? r6.x : 0;
    r6.w = r6.z ? r3.w : r1.y;
    r6.x = (int)r6.y | (int)r6.x;
    r6.x = (int)r6.x | (int)r6.z;
    r1.y = r6.x ? r3.w : r1.y;
    r9.w = 1;
    r5.xyzw = r6.wwww * r9.xyzw + r5.xyzw;
    r8.w = 1;
    r5.xyzw = r1.yyyy * r8.xyzw + r5.xyzw;
    r6.xyzw = float4(5,5,6,6) + r1.xxww;
    r8.xyzw = float4(0.125,0.125,0.125,0.125) * r6.xyzw;
    r8.xyzw = r8.xyzw * r2.xyzw + v0.xyxy;
    r6.xz = t1.SampleLevel(s1_s, r8.xy, 0).xz;
    r9.xyz = t0.SampleLevel(s0_s, r8.xy, 0).xyz;
    r1.y = cb0[25].y * r6.x;
    r4.z = min(cb0[25].w, r1.y);
    r1.y = r6.z + -r1.z;
    r6.xw = saturate(r1.yy * float2(1,-1) + float2(0.5,0.5));
    r7.xz = saturate(r0.zz * r4.xz + -r7.yy);
    r1.y = dot(r6.xw, r7.xz);
    r6.xw = t1.SampleLevel(s1_s, r8.zw, 0).xz;
    r8.xyz = t0.SampleLevel(s0_s, r8.zw, 0).xyz;
    r3.w = cb0[25].y * r6.x;
    r4.w = min(cb0[25].w, r3.w);
    r3.w = r6.w + -r1.z;
    r7.xz = saturate(r3.ww * float2(1,-1) + float2(0.5,0.5));
    r7.yw = saturate(r0.zz * r4.xw + -r7.yy);
    r3.w = dot(r7.xz, r7.yw);
    r6.x = cmp(r6.w < r6.z);
    r6.z = cmp(r4.z < r4.w);
    r6.w = r6.z ? r6.x : 0;
    r7.x = r6.w ? r3.w : r1.y;
    r6.x = (int)r6.z | (int)r6.x;
    r6.x = (int)r6.x | (int)r6.w;
    r1.y = r6.x ? r3.w : r1.y;
    r9.w = 1;
    r5.xyzw = r7.xxxx * r9.xyzw + r5.xyzw;
    r8.w = 1;
    r5.xyzw = r1.yyyy * r8.xyzw + r5.xyzw;
    r7.xyzw = float4(6,6,7,7) + r1.xxww;
    r8.xyzw = float4(0.125,0.125,0.125,0.125) * r7.xyzw;
    r8.xyzw = r8.xyzw * r2.xyzw + v0.xyxy;
    r6.xz = t1.SampleLevel(s1_s, r8.xy, 0).xz;
    r9.xyz = t0.SampleLevel(s0_s, r8.xy, 0).xyz;
    r1.y = cb0[25].y * r6.x;
    r4.y = min(cb0[25].w, r1.y);
    r1.y = r6.z + -r1.z;
    r6.xw = saturate(r1.yy * float2(1,-1) + float2(0.5,0.5));
    r7.xz = saturate(r0.zz * r4.xy + -r6.yy);
    r1.y = dot(r6.xw, r7.xz);
    r6.xw = t1.SampleLevel(s1_s, r8.zw, 0).xz;
    r8.xyz = t0.SampleLevel(s0_s, r8.zw, 0).xyz;
    r3.w = cb0[25].y * r6.x;
    r4.z = min(cb0[25].w, r3.w);
    r3.w = r6.w + -r1.z;
    r7.xz = saturate(r3.ww * float2(1,-1) + float2(0.5,0.5));
    r6.xy = saturate(r0.zz * r4.xz + -r6.yy);
    r3.w = dot(r7.xz, r6.xy);
    r6.x = cmp(r6.w < r6.z);
    r4.z = cmp(r4.y < r4.z);
    r6.y = r4.z ? r6.x : 0;
    r6.z = r6.y ? r3.w : r1.y;
    r4.z = (int)r4.z | (int)r6.x;
    r4.z = (int)r4.z | (int)r6.y;
    r1.y = r4.z ? r3.w : r1.y;
    r9.w = 1;
    r5.xyzw = r6.zzzz * r9.xyzw + r5.xyzw;
    r8.w = 1;
    r5.xyzw = r1.yyyy * r8.xyzw + r5.xyzw;
    r6.xyzw = float4(7,7,8,8) + r1.xxww;
    r6.xyzw = float4(0.125,0.125,0.125,0.125) * r6.xyzw;
    r2.xyzw = r6.xyzw * r2.xyzw + v0.xyxy;
    r1.xy = t1.SampleLevel(s1_s, r2.xy, 0).xz;
    r6.xyz = t0.SampleLevel(s0_s, r2.xy, 0).xyz;
    r1.x = cb0[25].y * r1.x;
    r4.w = min(cb0[25].w, r1.x);
    r1.x = r1.y + -r1.z;
    r1.xw = saturate(r1.xx * float2(1,-1) + float2(0.5,0.5));
    r2.xy = saturate(r0.zz * r4.xw + -r7.yy);
    r1.x = dot(r1.xw, r2.xy);
    r2.xy = t1.SampleLevel(s1_s, r2.zw, 0).xz;
    r8.xyz = t0.SampleLevel(s0_s, r2.zw, 0).xyz;
    r1.w = cb0[25].y * r2.x;
    r4.y = min(cb0[25].w, r1.w);
    r1.z = r2.y + -r1.z;
    r1.zw = saturate(r1.zz * float2(1,-1) + float2(0.5,0.5));
    r2.xz = saturate(r0.zz * r4.xy + -r7.yy);
    r0.z = dot(r1.zw, r2.xz);
    r1.y = cmp(r2.y < r1.y);
    r1.z = cmp(r4.w < r4.y);
    r1.w = r1.z ? r1.y : 0;
    r2.x = r1.w ? r0.z : r1.x;
    r1.y = (int)r1.z | (int)r1.y;
    r1.y = (int)r1.y | (int)r1.w;
    r0.z = r1.y ? r0.z : r1.x;
    r6.w = 1;
    r1.xyzw = r2.xxxx * r6.xyzw + r5.xyzw;
    r8.w = 1;
    r1.xyzw = r0.zzzz * r8.xyzw + r1.xyzw;
    r1.xyz = float3(0.0625,0.0625,0.0625) * r1.xyz;
    r0.z = -r1.w * 0.0625 + 1;
    r0.xyw = r0.zzz * r3.xyz + r1.xyz;
  }
  o0.xyz = r0.xyw;
  o0.w = 0;
  return;
}
