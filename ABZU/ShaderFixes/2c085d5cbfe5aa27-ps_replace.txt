// Gold surfaces (still have broken highlight)
// ---- Created with 3Dmigoto v1.2.44 on Mon Oct 03 03:16:54 2016
Texture2D<float4> t0 : register(t0);

SamplerState s0_s : register(s0);

cbuffer cb4 : register(b4)
{
  float4 cb4[17];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[12];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[14];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[60];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[14];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);

#include "matrix.hlsl"

void main( 
  linear centroid float4 v0 : TEXCOORD10,
  linear centroid float4 v1 : TEXCOORD11,
  float4 v2 : TEXCOORD0,
  float4 v3 : VELOCITY_PREV_POS0,
  float4 v4 : SV_Position0,
  uint v5 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1,
  out float4 o2 : SV_Target2,
  out float4 o3 : SV_Target3,
  out float4 o4 : SV_Target4,
  out float4 o5 : SV_Target5)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = v1.zxy * v0.yzx;
  r0.xyz = v1.yzx * v0.zxy + -r0.xyz;
  r0.xyz = v1.www * r0.xyz;
  r1.xy = -cb2[1].xy + v4.xy;
  r1.xy = r1.xy * cb2[2].zw + float2(-0.5,-0.5);
  r1.xy = v4.ww * r1.xy;
  r1.z = v4.w;
  r1.xyz = float3(2,-2,1) * r1.xyz;
  r2.xyzw = cb1[37].xyzw * v4.yyyy;
  r2.xyzw = v4.xxxx * cb1[36].xyzw + r2.xyzw;
  r2.xyzw = v4.zzzz * cb1[38].xyzw + r2.xyzw;
  r2.xyzw = cb1[39].xyzw + r2.xyzw;
  r2.xyz = r2.xyz / r2.www;

float4 s = StereoParams.Load(0);
matrix m = MATRIX(cb1, 36);
matrix im = inverse(m);
float4 t = mul(float4(r2.xyz, 1), im);
t.x -= s.x * (t.w - s.y) * cb2[3].x / 2;
r2.xyz = mul(t, m);

  r3.xyz = -cb1[56].xyz + r2.xyz;
  r0.w = dot(r2.xyz, r2.xyz);
  r0.w = sqrt(r0.w);
  r2.xyz = -r2.xyz / r0.www;
  r4.xyz = cb2[7].www * float3(0,0,1) + cb2[7].xyz;
  r0.w = dot(r4.xyz, r4.xyz);
  r0.w = rsqrt(r0.w);
  r4.xyz = r4.xyz * r0.www;
  r0.xyz = r4.yyy * r0.xyz;
  r0.xyz = r4.xxx * v0.xyz + r0.xyz;
  r0.xyz = r4.zzz * v1.xyz + r0.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r4.xyz = cb4[5].xyz + cb3[10].xyz;
  r4.xyz = -r4.xyz + r3.xyz;
  r0.w = dot(r4.xyz, r4.xyz);
  r0.w = sqrt(r0.w);
  r0.w = saturate(r0.w / cb4[14].y);
  r0.w = 1 + -r0.w;
  r0.w = max(9.99999997e-007, r0.w);
  r0.w = log2(r0.w);
  r0.w = cb4[14].z * r0.w;
  r0.w = exp2(r0.w);
  r4.xyz = cb4[6].xyz * r0.www + cb4[7].xyz;
  r0.w = dot(r0.xyz, r2.xyz);
  r0.w = max(0, r0.w);
  r0.w = 1 + -r0.w;
  r0.w = max(9.99999997e-007, abs(r0.w));
  r0.w = log2(r0.w);
  r0.w = cb4[14].w * r0.w;
  r0.w = exp2(r0.w);
  r0.w = r0.w * 0.959999979 + 0.0399999991;
  r2.xyz = -cb4[13].xyz + cb4[12].xyz;
  r2.xyz = r0.www * r2.xyz + cb4[13].xyz;
  r5.xyz = saturate(cb4[8].xyz * r2.xyz);
  r6.xw = cb4[15].zz;
  r6.yz = float2(1,7);
  r6.xy = v2.zw * r6.xy;
  r6.xy = r6.xy * r6.zw;
  r0.w = t0.Sample(s0_s, r6.xy).x;
  r1.w = -cb4[16].x + cb4[15].w;
  r0.w = saturate(r0.w * r1.w + cb4[16].x);
  r1.w = cmp(cb0[13].x != 0.000000);
  r2.w = cmp(0.00100000005 < abs(cb0[13].x));
  r1.w = r1.w ? r2.w : 0;
  r6.xy = floor(v4.xy);
  r2.w = dot(r6.xy, float2(347.834503,3343.28369));
  r2.w = cos(r2.w);
  r2.w = 1000 * r2.w;
  r2.w = frac(r2.w);
  r3.w = cmp(cb0[13].x < 0);
  r4.w = 1 + cb0[13].x;
  r4.w = cmp(r2.w < r4.w);
  r2.w = cmp(cb0[13].x < r2.w);
  r2.w = r3.w ? r4.w : r2.w;
  r2.w = cmp((int)r2.w == 0);
  r1.w = r1.w ? r2.w : 0;
  if (r1.w != 0) discard;
  r6.xy = saturate(cb4[15].xy);
  o2.z = r0.w * cb2[8].y + cb2[8].x;
  r2.xyz = saturate(cb4[16].zzz * r2.xyz);
  r2.xyz = saturate(r2.xyz * cb2[5].www + cb2[5].xyz);
  r7.xyz = -r5.xyz * r6.xxx + r5.xyz;
  r0.w = 0.0799999982 * r6.y;
  r8.xyz = -r6.yyy * float3(0.0799999982,0.0799999982,0.0799999982) + r5.xyz;
  r8.xyz = r6.xxx * r8.xyz + r0.www;
  r7.xyz = r7.xyz * cb2[5].www + cb2[5].xyz;
  r8.xyz = r8.xyz * cb2[6].www + cb2[6].xyz;
  r9.w = saturate(cb4[16].y);
  r7.xyz = r8.xyz + r7.xyz;
  r9.xyz = max(float3(0,0,0), r4.xyz);
  r0.w = cmp(0 < cb2[9].x);
  if (r0.w != 0) {
    r4.xyz = -cb3[8].xyz + r3.xyz;
    r8.xyz = float3(1,1,1) + cb3[9].xyz;
    r4.xyz = cmp(r8.xyz < abs(r4.xyz));
    r0.w = (int)r4.y | (int)r4.x;
    r0.w = (int)r4.z | (int)r0.w;
    r1.w = dot(r3.xyz, float3(0.577000022,0.577000022,0.577000022));
    r1.w = 0.00200000009 * r1.w;
    r1.w = frac(r1.w);
    r1.w = cmp(0.5 < r1.w);
    r3.yzw = r1.www ? float3(0,1,1) : float3(1,1,0);
    r3.x = 1;
    r9.xyzw = r0.wwww ? r3.yzwx : r9.xyzw;
    o5.w = r9.w;
  } else {
    o5.w = r9.w;
  }
  o0.xyz = cb2[13].xxx * r7.xyz + r9.xyz;
  o5.xyz = sqrt(r2.xyz);
  r1.xy = r1.xy / r1.zz;
  r1.xy = -cb1[26].xy + r1.xy;
  r1.zw = v3.xy / v3.ww;
  r1.zw = -cb1[59].xy + r1.zw;
  r1.xy = r1.xy + -r1.zw;
  r1.xy = r1.xy * float2(0.249500006,0.249500006) + float2(0.499992371,0.499992371);
  o4.xy = v3.zz * r1.xy;
  o4.zw = float2(0,0);
  o1.xyz = r0.xyz * float3(0.5,0.5,0.5) + float3(0.5,0.5,0.5);
  o0.w = 0;
  o1.w = cb3[11].x;
  o2.w = 0.13333334;
  o2.xy = r6.xy;
  o3.xyz = r5.xyz;
  o3.w = 1;
  return;
}
