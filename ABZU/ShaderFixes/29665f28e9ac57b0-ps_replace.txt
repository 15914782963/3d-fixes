// ---- Created with 3Dmigoto v1.2.44 on Mon Oct 03 03:48:39 2016
Texture2D<float4> t8 : register(t8);

Texture2D<float4> t7 : register(t7);

Texture2D<float4> t6 : register(t6);

Texture2D<float4> t5 : register(t5);

Texture2D<float4> t4 : register(t4);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s8_s : register(s8);

SamplerState s7_s : register(s7);

SamplerState s6_s : register(s6);

SamplerState s5_s : register(s5);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb3 : register(b3)
{
  float4 cb3[7];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[14];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[14];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[60];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);

#include "matrix.hlsl"

void main( 
  linear centroid float4 v0 : TEXCOORD10,
  linear centroid float4 v1 : TEXCOORD11,
  float4 v2 : TEXCOORD0,
  float4 v3 : VELOCITY_PREV_POS0,
  float4 v4 : SV_Position0,
  uint v5 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1,
  out float4 o2 : SV_Target2,
  out float4 o3 : SV_Target3,
  out float4 o4 : SV_Target4,
  out float4 o5 : SV_Target5)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = v1.zxy * v0.yzx;
  r0.xyz = v1.yzx * v0.zxy + -r0.xyz;
  r0.xyz = v1.www * r0.xyz;
  r1.xy = -cb1[1].xy + v4.xy;
  r1.xy = r1.xy * cb1[2].zw + float2(-0.5,-0.5);
  r1.xy = v4.ww * r1.xy;
  r1.z = v4.w;
  r1.xyz = float3(2,-2,1) * r1.xyz;
  r2.xyzw = cb0[37].xyzw * v4.yyyy;
  r2.xyzw = v4.xxxx * cb0[36].xyzw + r2.xyzw;
  r2.xyzw = v4.zzzz * cb0[38].xyzw + r2.xyzw;
  r2.xyzw = cb0[39].xyzw + r2.xyzw;
  r2.xyz = r2.xyz / r2.www;

float4 s = StereoParams.Load(0);
matrix m = MATRIX(cb0, 36);
matrix im = inverse(m);
float4 t = mul(float4(r2.xyz, 1), im);
t.x -= s.x * (t.w - s.y) * cb1[3].x / 2;
r2.xyz = mul(t, m);

  r2.xyz = -cb0[56].xyz + r2.xyz;
  r3.xyz = -cb2[8].xyz + r2.xyz;
  r4.xyzw = cb2[5].xzyz * r3.yyyy;
  r4.xyzw = r3.xxxx * cb2[4].xzyz + r4.xyzw;
  r4.xyzw = r3.zzzz * cb2[6].xzyz + r4.xyzw;
  r4.xyzw = cb2[13].xzyz * r4.xyzw;
  r4.xyzw = r4.xyzw / cb3[4].xxxx;
  r5.xy = t0.Sample(s0_s, r4.xy).xy;
  r5.xy = r5.xy * float2(2,2) + float2(-1,-1);
  r0.w = dot(r5.xy, r5.xy);
  r0.w = 1 + -r0.w;
  r0.w = max(0, r0.w);
  r5.z = sqrt(r0.w);
  r6.xyz = cb2[5].yxz * v1.yyy;
  r6.xyz = v1.xxx * cb2[4].yxz + r6.xyz;
  r6.xyz = v1.zzz * cb2[6].yxz + r6.xyz;
  r0.w = dot(r6.xyz, r6.xyz);
  r0.w = sqrt(r0.w);
  r6.xyz = r6.xyz / r0.www;
  r7.xyz = cmp(r6.xyz >= float3(0.5,0.5,0.5));
  r7.xyz = r7.xyz ? float3(1,1,1) : 0;
  r8.xyz = r7.xxx * r5.xyz;
  r5.w = -r5.x;
  r5.xyz = r8.xyz * float3(2,0,0) + r5.wyz;
  r6.xw = t0.Sample(s0_s, r4.zw).xy;
  r8.xy = r6.xw * float2(2,2) + float2(-1,-1);
  r0.w = dot(r8.xy, r8.xy);
  r0.w = 1 + -r0.w;
  r0.w = max(0, r0.w);
  r8.z = sqrt(r0.w);
  r7.xyw = r8.xyz * r7.yyy;
  r7.xyw = float3(0,2,0) * r7.xyw;
  r7.xyw = r8.xyz * float3(-1,-1,1) + r7.xyw;
  r0.w = cmp(abs(r6.y) >= 0.5);
  r0.w = r0.w ? 1.000000 : 0;
  r6.xyw = r7.xyw + -r5.xyz;
  r5.xyz = r0.www * r6.xyw + r5.xyz;
  r8.xyzw = cb2[5].xyxy * r3.yyyy;
  r8.xyzw = r3.xxxx * cb2[4].xyxy + r8.xyzw;
  r8.xyzw = r3.zzzz * cb2[6].xyxy + r8.xyzw;
  r8.xyzw = cb2[13].xyxy * r8.xyzw;
  r8.xyzw = r8.xyzw / cb3[4].yyzz;
  r6.xy = t1.Sample(s1_s, r8.xy).xy;
  r9.xy = r6.xy * float2(2,2) + float2(-1,-1);
  r1.w = dot(r9.xy, r9.xy);
  r1.w = 1 + -r1.w;
  r1.w = max(0, r1.w);
  r9.z = sqrt(r1.w);
  r6.xyw = r9.xyz + -r5.xyz;
  r5.xyz = r7.zzz * r6.xyw + r5.xyz;
  r6.xy = t2.Sample(s2_s, r8.zw).xy;
  r9.xy = r6.xy * float2(2,2) + float2(-1,-1);
  r1.w = dot(r9.xy, r9.xy);
  r1.w = 1 + -r1.w;
  r1.w = max(0, r1.w);
  r9.z = sqrt(r1.w);
  r1.w = cmp(-0.5 >= r6.z);
  r1.w = r1.w ? 1.000000 : 0;
  r6.xyz = r9.xyz + -r5.xyz;
  r5.xyz = r1.www * r6.xyz + r5.xyz;
  r5.xyz = r5.xyz * cb1[7].www + cb1[7].xyz;
  r2.w = dot(r5.xyz, r5.xyz);
  r2.w = rsqrt(r2.w);
  r5.xyz = r5.xyz * r2.www;
  r0.xyz = r5.yyy * r0.xyz;
  r0.xyz = r5.xxx * v0.xyz + r0.xyz;
  r0.xyz = r5.zzz * v1.xyz + r0.xyz;
  r2.w = dot(r0.xyz, r0.xyz);
  r2.w = rsqrt(r2.w);
  r0.xyz = r2.www * r0.xyz;
  r5.xyz = t3.Sample(s3_s, r4.xy).xyz;
  r6.xyz = t3.Sample(s3_s, r4.zw).xyz;
  r6.xyz = r6.xyz + -r5.xyz;
  r5.xyz = r0.www * r6.xyz + r5.xyz;
  r6.xyz = t4.Sample(s4_s, r8.xy).xyz;
  r6.xyz = r6.xyz + -r5.xyz;
  r5.xyz = r7.zzz * r6.xyz + r5.xyz;
  r6.xyz = t5.Sample(s5_s, r8.zw).xyz;
  r6.xyz = r6.xyz + -r5.xyz;
  r5.xyz = r1.www * r6.xyz + r5.xyz;
  r5.xyz = saturate(cb3[2].xyz * r5.xyz);
  r4.xy = t6.Sample(s6_s, r4.xy).xz;
  r4.zw = t6.Sample(s6_s, r4.zw).xz;
  r4.zw = r4.wz + -r4.yx;
  r4.xy = r0.ww * r4.zw + r4.yx;
  r4.zw = t7.Sample(s7_s, r8.xy).xz;
  r4.zw = r4.wz + -r4.xy;
  r4.xy = r7.zz * r4.zw + r4.xy;
  r4.zw = t8.Sample(s8_s, r8.zw).xz;
  r4.zw = r4.wz + -r4.xy;
  r4.xy = r1.ww * r4.wz + r4.yx;
  r0.w = cb3[6].y + -cb3[6].z;
  r0.w = saturate(r4.x * r0.w + cb3[6].z);
  r4.y = saturate(r4.y);
  o2.z = r0.w * cb1[8].y + cb1[8].x;
  r0.w = cb1[6].w * r4.y;
  r4.xzw = r5.xyz * cb1[5].www + cb1[5].xyz;
  r6.xyz = r0.www * float3(0.0799999982,0.0799999982,0.0799999982) + cb1[6].xyz;
  r4.xzw = r6.xyz + r4.xzw;
  r6.xyz = max(float3(0,0,0), cb3[1].xyz);
  r0.w = cmp(0 < cb1[9].x);
  if (r0.w != 0) {
    r7.xyz = float3(1,1,1) + cb2[9].xyz;
    r3.xyz = cmp(r7.xyz < abs(r3.xyz));
    r0.w = (int)r3.y | (int)r3.x;
    r0.w = (int)r3.z | (int)r0.w;
    r1.w = dot(r2.xyz, float3(0.577000022,0.577000022,0.577000022));
    r1.w = 0.00200000009 * r1.w;
    r1.w = frac(r1.w);
    r1.w = cmp(0.5 < r1.w);
    r2.xyz = r1.www ? float3(0,1,1) : float3(1,1,0);
    r6.xyz = r0.www ? r2.xyz : r6.xyz;
  }
  o0.xyz = cb1[13].xxx * r4.xzw + r6.xyz;
  r1.xy = r1.xy / r1.zz;
  r1.xy = -cb0[26].xy + r1.xy;
  r1.zw = v3.xy / v3.ww;
  r1.zw = -cb0[59].xy + r1.zw;
  r1.xy = r1.xy + -r1.zw;
  r1.xy = r1.xy * float2(0.249500006,0.249500006) + float2(0.499992371,0.499992371);
  o4.xy = v3.zz * r1.xy;
  o4.zw = float2(0,0);
  o1.xyz = r0.xyz * float3(0.5,0.5,0.5) + float3(0.5,0.5,0.5);
  o0.w = 0;
  o1.w = cb2[11].x;
  o2.xw = float2(0,0.129411772);
  o2.y = r4.y;
  o3.xyz = r5.xyz;
  o3.w = 1;
  o5.xyzw = float4(0,0,0,0);
  return;
}
