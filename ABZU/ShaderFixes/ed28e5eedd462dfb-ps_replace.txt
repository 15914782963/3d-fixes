// ---- Created with 3Dmigoto v1.2.42 on Fri Sep 30 07:38:43 2016
Texture2D<float4> t7 : register(t7);

Texture2D<float4> t6 : register(t6);

Texture2D<float4> t5 : register(t5);

Texture2D<float4> t4 : register(t4);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s5_s : register(s5);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb6 : register(b6)
{
  float4 cb6[8];
}

cbuffer cb5 : register(b5)
{
  float4 cb5[1];
}

cbuffer cb4 : register(b4)
{
  float4 cb4[1];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[12];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[14];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[60];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[19];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float2 v0 : TEXCOORD0,
  float w0 : TEXCOORD1,
  float4 v1 : VELOCITY_PREV_POS0,
  float4 v2 : SV_Position0,
  uint v3 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1,
  out float4 o2 : SV_Target2,
  out float4 o3 : SV_Target3,
  out float4 o4 : SV_Target4,
  out float4 o5 : SV_Target5)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = t7.Sample(s5_s, v0.xy).x;
  r0.yzw = cb0[16].xyz * w0.xzz;
  r1.xyz = cb0[18].xyz * w0.xzz;
  r2.xy = -cb2[1].xy + v2.xy;
  r2.xy = r2.xy * cb2[2].zw + float2(-0.5,-0.5);
  r2.xy = v2.ww * r2.xy;
  r2.z = v2.w;
  r3.xyzw = cb1[37].xyzw * v2.yyyy;
  r3.xyzw = v2.xxxx * cb1[36].xyzw + r3.xyzw;
  r3.xyzw = v2.zzzz * cb1[38].xyzw + r3.xyzw;
  r3.xyzw = cb1[39].xyzw + r3.xyzw;
  r3.xyz = r3.xyz / r3.www;
  r4.xyz = -cb1[56].xyz + r3.xyz;
  r1.w = dot(r3.xyz, r3.xyz);
  r1.w = sqrt(r1.w);
  r3.xyz = -r3.xyz / r1.www;
  r5.xy = -cb4[0].xy + r4.xy;
  r5.xy = cb4[0].zw * r5.xy;
  r6.xyzw = t0.SampleLevel(s0_s, r5.xy, 0).xyzw;
  r1.w = -cb5[0].y + r6.w;
  r2.w = cb5[0].z + -cb5[0].y;
  r1.w = saturate(r1.w / r2.w);
  r2.w = 1 + -r1.w;
  r1.w = cb5[0].x * r2.w + r1.w;
  r7.xyzw = t1.SampleLevel(s0_s, r5.xy, 0).xyzw;
  r2.w = r7.w * r1.w;
  r5.zw = cb6[6].xw * float2(2,2) + float2(1,1);
  r2.w = saturate(r2.w * r5.z + -cb6[6].x);
  r8.xy = r4.xy / cb6[6].yy;
  r3.w = t3.Sample(s1_s, r8.xy).x;
  r3.w = saturate(1 + -r3.w);
  r3.w = 1 + -r3.w;
  r4.w = max(9.99999975e-005, cb6[6].z);
  r5.z = -r4.w * 0.5 + r3.w;
  r2.w = -r5.z + r2.w;
  r3.w = r4.w * 0.5 + r3.w;
  r3.w = r3.w + -r5.z;
  r2.w = saturate(r2.w / r3.w);
  r8.xyzw = t2.SampleLevel(s0_s, r5.xy, 0).xyzw;
  r1.w = r8.w * r1.w;
  r1.w = saturate(r1.w * r5.w + -cb6[6].w);
  r5.xy = r4.xy / cb6[7].xx;
  r3.w = t4.Sample(s2_s, r5.xy).w;
  r3.w = saturate(1 + -r3.w);
  r3.w = 1 + -r3.w;
  r4.w = max(9.99999975e-005, cb6[7].y);
  r5.x = -r4.w * 0.5 + r3.w;
  r1.w = -r5.x + r1.w;
  r3.w = r4.w * 0.5 + r3.w;
  r3.w = r3.w + -r5.x;
  r1.w = saturate(r1.w / r3.w);
  r5.x = cb2[7].w * r0.w;
  r5.y = cb2[7].w * -cb0[17].z;
  r5.z = cb2[7].w * r1.z;
  r5.xyz = cb2[7].xyz + r5.xyz;
  r3.w = dot(r5.xyz, r5.xyz);
  r3.w = rsqrt(r3.w);
  r5.xyz = r5.xyz * r3.www;
  r9.xyz = -cb0[17].xyz * r5.yyy;
  r0.yzw = r5.xxx * r0.yzw + r9.xyz;
  r0.yzw = r5.zzz * r1.xyz + r0.yzw;
  r3.w = dot(r0.yzw, r0.yzw);
  r3.w = rsqrt(r3.w);
  r0.yzw = r3.www * r0.yzw;
  r3.w = dot(r0.yzw, r3.xyz);
  r5.xyz = r3.www * r0.yzw;
  r3.xyz = r5.xyz * float3(2,2,2) + -r3.xyz;
  r5.xy = float2(0.00526315812,0.00526315812) * r4.xy;
  r9.xyz = t5.Sample(s3_s, r5.xy).xyz;
  r9.xyz = float3(0.5,0.5,0.5) + r9.xyz;
  r10.xyz = r9.xyz * r6.xyz;
  r11.xyz = cb6[2].xyz * r10.xyz;
  r11.xyz = r2.www * -r11.xyz + r11.xyz;
  r11.xyz = r1.www * -r11.xyz + r11.xyz;
  r11.xyz = cb6[3].xyz + r11.xyz;
  r6.xyz = -r6.xyz * r9.xyz + r7.xyz;
  r6.xyz = r2.www * r6.xyz + r10.xyz;
  r7.xyz = r8.xyz + -r6.xyz;
  r6.xyz = r1.www * r7.xyz + r6.xyz;
  r6.xyz = saturate(cb6[4].xyz * r6.xyz);
  r1.x = dot(r1.xyz, r3.xyz);
  r1.y = 1 + -abs(r1.x);
  r1.xy = max(float2(9.99999997e-007,9.99999997e-007), abs(r1.xy));
  r1.y = log2(r1.y);
  r1.y = 6.44999981 * r1.y;
  r1.y = exp2(r1.y);
  r1.x = 0.370000005 + r1.x;
  r1.xy = min(float2(1,1), r1.xy);
  r1.x = r1.y * r1.x;
  r1.y = max(0, r3.w);
  r1.y = 1 + -r1.y;
  r1.y = max(9.99999997e-007, abs(r1.y));
  r1.y = log2(r1.y);
  r1.xy = float2(5,-0.125) * r1.xy;
  r1.y = exp2(r1.y);
  r1.x = r1.y * 0.959999979 + r1.x;
  r1.x = 0.0399999991 + r1.x;
  r1.y = t6.Sample(s4_s, r5.xy).x;
  r1.x = r1.x * r1.y;
  r3.xyzw = float4(2,-2,1,0.000597014907) * r2.xyzz;
  r1.y = max(9.99999997e-007, abs(r3.w));
  r1.y = log2(r1.y);
  r1.xy = float2(20,1.29999995) * r1.xy;
  r1.y = exp2(r1.y);
  r1.y = 1 + -r1.y;
  r1.y = max(0, r1.y);
  r1.y = 1 + -r1.y;
  r1.x = r1.y * -r1.x + r1.x;
  r1.x = r2.w * -r1.x + r1.x;
  r1.x = saturate(r1.w * -r1.x + r1.x);
  r1.y = r2.w * 0.560000002 + 0.439999998;
  r1.z = 1 + -r1.y;
  r1.y = r1.w * r1.z + r1.y;
  r0.x = -0.333299994 + r0.x;
  r0.x = cmp(r0.x < 0);
  if (r0.x != 0) discard;
  r0.x = min(1, r1.y);
  o2.z = r0.x * cb2[8].y + cb2[8].x;
  r0.x = cb2[6].w * r1.x;
  r1.yzw = r6.xyz * cb2[5].www + cb2[5].xyz;
  r2.xyz = r0.xxx * float3(0.0799999982,0.0799999982,0.0799999982) + cb2[6].xyz;
  r1.yzw = r2.xyz + r1.yzw;
  r2.xyz = max(float3(0,0,0), r11.xyz);
  r0.x = cmp(0 < cb2[9].x);
  if (r0.x != 0) {
    r5.xyz = -cb3[8].xyz + r4.xyz;
    r7.xyz = float3(1,1,1) + cb3[9].xyz;
    r5.xyz = cmp(r7.xyz < abs(r5.xyz));
    r0.x = (int)r5.y | (int)r5.x;
    r0.x = (int)r5.z | (int)r0.x;
    r2.w = dot(r4.xyz, float3(0.577000022,0.577000022,0.577000022));
    r2.w = 0.00200000009 * r2.w;
    r2.w = frac(r2.w);
    r2.w = cmp(0.5 < r2.w);
    r4.xyz = r2.www ? float3(0,1,1) : float3(1,1,0);
    r2.xyz = r0.xxx ? r4.xyz : r2.xyz;
  }
  o0.xyz = cb2[13].xxx * r1.yzw + r2.xyz;
  r1.yz = r3.xy / r3.zz;
  r1.yz = -cb1[26].xy + r1.yz;
  r2.xy = v1.xy / v1.ww;
  r2.xy = -cb1[59].xy + r2.xy;
  r1.yz = -r2.xy + r1.yz;
  r1.yz = r1.yz * float2(0.249500006,0.249500006) + float2(0.499992371,0.499992371);
  o4.xy = v1.zz * r1.yz;
  o4.zw = float2(0,0);
  o1.xyz = r0.yzw * float3(0.5,0.5,0.5) + float3(0.5,0.5,0.5);
  o0.w = 0;
  o1.w = cb3[11].x;
  o2.xw = float2(0,0.129411772);
  o2.y = r1.x;
  o3.xyz = r6.xyz;
  o3.w = 1;
  o5.xyzw = float4(0,0,0,0);
  return;
}
