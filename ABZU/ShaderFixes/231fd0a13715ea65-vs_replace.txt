// Water w/ sun reflections
// PS c10819b69c631ece - water on main menu
// 16087ef0346c4d70 4e7828140620978e 57602750d16d2a78 b0637dad8ecb6a91

// Type: FAtmosphericVS
// Skipping over variable length shader specific section (82 bytes):
//   0039aa24: A39A7FD3 CDA0B8AB 62018F67 271AE498 | ........b..g'... |
//   0039aa34: 10D9F725 9FF0F6BA CFE0D9C0 AC9AFAAB | ...%............ |
//   0039aa44: 2F4DBE1D E551D043 05000000 4E6F6E65 | /M...Q.C....None |
//   0039aa54: 00050000 004E6F6E 65000000 00000000 | .....None....... |
//   0039aa64: 00000000 00000000 00000000 00000F00 | ................ |
//   0039aa74: 0000                                | ..               |
// SourceHash: bda5f0634234c4687210553a2109ff1621b07dd4
// TargetFrequency: 0, TargetPlatform: 0
// NumUniformParameters: 1
//   StructName: FViewUniformShaderParameters
//    BaseIndex: 0, bIsBound: 1
// ShaderTypeName: None
// ResourceTableBits: 00000000
// ShaderResourceViewMap:
// SamplerMap:
// UnorderedAccessViewMap:
// ResourceTableLayoutHashes:
// Unknown Tail (57 bytes):
//   00000000: 70050000 00010075 0D010000 00050000 | p......u........ |
//   00000010: 00566965 77006E20 41746D6F 73706865 | .View.n Atmosphe |
//   00000020: 72696346 6F675368 61646572 2E757366 | ricFogShader.usf |
//   00000030: 7C56534D 61696E00 00                | |VSMain..        |
// OutputHash: a39a7fd3cda0b8ab62018f67271ae49810d9f725
// NumInstructions: 7
// NumTextureSamplers: 0
//
// Headers extracted with DarkStarSword's extract_unreal_shaders.py
// https://github.com/DarkStarSword/3d-fixes

// ---- Created with 3Dmigoto v1.2.42 on Fri Sep 30 07:38:42 2016
cbuffer cb0 : register(b0)
{
  float4 cb0[53];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float2 v0 : ATTRIBUTE0,
  out float4 o0 : TEXCOORD0,
  out float4 o1 : TEXCOORD1,
  out float4 o2 : SV_POSITION0)
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 s = StereoParams.Load(0);

  o0.xy = v0.xy * cb0[52].xy + cb0[52].wz;
  o2.xy = v0.xy;
  o2.zw = float2(0,1);

// This fixes the placement of the sun reflection in the water. Need to keep an
// eye out for anything else that might break since this shader is used for
// multiple things.
v0.x -= s.x;

  r0.xyzw = cb0[45].xyzw * v0.yyyy;
  r0.xyzw = v0.xxxx * cb0[44].xyzw + r0.xyzw;
  o1.xyzw = cb0[46].xyzw + r0.xyzw;


  return;
}
