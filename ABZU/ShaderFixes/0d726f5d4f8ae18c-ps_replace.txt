// Caustics

// ---- Created with 3Dmigoto v1.2.42 on Fri Sep 30 07:38:42 2016
Texture2D<float4> t5 : register(t5);

Texture2D<float4> t4 : register(t4);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s5_s : register(s5);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb4 : register(b4)
{
  float4 cb4[10];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[10];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[12];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[57];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[24];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);

#include "matrix.hlsl"

void main( 
  float4 v0 : SV_Position0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 s = StereoParams.Load(0);

  r0.xy = cb2[3].zw * v0.xy;
  r0.x = t5.SampleLevel(s5_s, r0.xy, 0).x;
  r1.xyzw = cb0[19].xyzw * v0.yyyy;
  r1.xyzw = v0.xxxx * cb0[18].xyzw + r1.xyzw;
  r1.xyzw = r0.xxxx * cb0[20].xyzw + r1.xyzw;
  r1.xyzw = cb0[21].xyzw + r1.xyzw;
  r0.yzw = r1.yzx / r1.www;

// Fix caustics placement:
matrix m = MATRIX(cb0, 18);
matrix im = inverse(m);
float4 t = mul(float4(r0.wyz, 1), im);
t.x -= s.x * (t.w - s.y) * cb2[3].x/2;
r0.yzw = mul(t, m).yzx;

  r1.xyzw = cb1[37].xyzw * v0.yyyy;
  r1.xyzw = v0.xxxx * cb1[36].xyzw + r1.xyzw;
  r1.xyzw = r0.xxxx * cb1[38].xyzw + r1.xyzw;
  r1.xyzw = cb1[39].xyzw + r1.xyzw;
  r1.xyz = r1.xyz / r1.www;

// Fixes some ambient lighting
// Common SVPositionToTranslatedWorld fix:
matrix TranslatedWorldToClip = MATRIX(cb1, 0);
matrix ClipToTranslatedWorld = MATRIX(cb1, 32);
t = mul(r1.xyz, TranslatedWorldToClip);
t.x -= s.x * (t.w - s.y);
r1.xyz = mul(t, ClipToTranslatedWorld);

  r1.xyz = -cb1[56].xyz + r1.xyz;
  r2.xyz = cb1[53].xyz + -r1.xyz;
  r0.x = dot(r2.xyz, r2.xyz);
  r0.x = sqrt(r0.x);
  r1.w = cb3[7].z * cb3[7].w + -cb0[23].x;
  r1.w = r1.z + -r1.w;
  r1.w = saturate(cb0[23].y * r1.w);
  r2.x = r1.w * r1.w;
  r1.w = r2.x * r1.w;
  r2.x = 1 + -cb0[23].z;
  r1.w = r1.w * r2.x + cb0[23].z;
  r0.x = cb0[22].x + -r0.x;
  r2.x = 0.200000003 * cb0[22].x;
  r0.x = saturate(r0.x / r2.x);
  r2.x = cmp(0 < r1.w);
  r2.y = cmp(0 < r0.x);
  r2.x = r2.y ? r2.x : 0;
  r2.y = cb0[13].x * r0.w;
  r2.yz = r0.zy / r2.yy;
  r2.yz = r2.yz * float2(0.5,0.5) + float2(0.5,0.5);
  r3.xy = cmp(float2(0,0) < cb0[13].zw);
  r2.w = dot(r0.yzw, r0.yzw);
  r2.w = rsqrt(r2.w);
  r4.xyz = r2.www * r0.yzw;
  r0.w = min(abs(r4.x), abs(r4.y));
  r2.w = max(abs(r4.x), abs(r4.y));
  r2.w = 1 / r2.w;
  r0.w = r2.w * r0.w;
  r2.w = r0.w * r0.w;
  r3.z = r2.w * 0.0208350997 + -0.0851330012;
  r3.z = r2.w * r3.z + 0.180141002;
  r3.z = r2.w * r3.z + -0.330299497;
  r2.w = r2.w * r3.z + 0.999866009;
  r3.z = r2.w * r0.w;
  r3.w = cmp(abs(r4.y) < abs(r4.x));
  r3.z = r3.z * -2 + 1.57079637;
  r3.z = r3.w ? r3.z : 0;
  r0.w = r0.w * r2.w + r3.z;
  r3.zw = cmp(r4.yz < -r4.yz);
  r2.w = r3.z ? -3.141593 : 0;
  r0.w = r2.w + r0.w;
  r2.w = min(r4.x, r4.y);
  r3.z = max(r4.x, r4.y);
  r2.w = cmp(r2.w < -r2.w);
  r3.z = cmp(r3.z >= -r3.z);
  r2.w = r2.w ? r3.z : 0;
  r0.w = r2.w ? -r0.w : r0.w;
  r0.w = 3.14159274 + r0.w;
  r4.x = 0.159154937 * r0.w;
  r0.w = 1 + -abs(r4.z);
  r0.w = sqrt(r0.w);
  r2.w = abs(r4.z) * -0.0187292993 + 0.0742610022;
  r2.w = r2.w * abs(r4.z) + -0.212114394;
  r2.w = r2.w * abs(r4.z) + 1.57072878;
  r3.z = r2.w * r0.w;
  r3.z = r3.z * -2 + 3.14159274;
  r3.z = r3.w ? r3.z : 0;
  r0.w = r2.w * r0.w + r3.z;
  r4.y = 0.318309873 * r0.w;
  r0.yz = r3.yy ? r4.xy : r0.zy;
  r0.yz = r3.xx ? r2.yz : r0.yz;
  r2.yz = float2(-1,-1) * cb1[52].xy + cb1[52].wz;
  r0.w = t1.Sample(s1_s, r2.yz).x;
  r2.yz = cb4[6].zz * r0.yz;
  r3.xz = float2(-0.100000001,-0.0500000007) * cb2[11].zz;
  r3.yw = float2(0,0);
  r3.xyzw = r0.yzyz * cb4[6].yyzz + r3.xyzw;
  r2.w = t2.Sample(s2_s, r3.xy).z;
  r3.x = -0.075000003 * cb2[11].z;
  r3.y = 0;
  r2.yz = r2.yz * float2(0.300000012,0.300000012) + r3.xy;
  r2.yz = t3.Sample(s3_s, r2.yz).xy;
  r2.y = r2.y + r2.z;
  r2.yz = cb4[6].ww * r2.yy + r3.zw;
  r3.xyz = t4.Sample(s4_s, r2.yz).xyz;
  r2.yz = cb2[11].zz * float2(-0.0270000007,0.00999999978) + r0.yz;
  r2.y = t3.Sample(s3_s, r2.yz).x;
  r0.yz = cb2[11].zz * float2(0.0309999995,-0.0130000003) + r0.yz;
  r0.y = t3.Sample(s3_s, r0.yz).y;
  if (r2.x != 0) {
    r0.z = 1 + -r0.w;
    r0.w = cb4[6].x * 2 + 1;
    r0.w = saturate(r2.w * r0.w + -cb4[6].x);
    r0.w = max(9.99999997e-007, r0.w);
    r0.w = log2(r0.w);
    r0.w = 1.60000002 * r0.w;
    r0.w = exp2(r0.w);
    r2.xzw = cb4[7].xxx * r3.xyz;
    r2.xzw = r0.www * r2.xzw + cb4[2].xyz;
    r0.w = cb4[7].z * r2.y;
    r0.y = r0.w * r0.y;
    r0.w = cb4[7].y * 2 + 1;
    r0.y = saturate(r0.y * r0.w + -cb4[7].y);
    r0.w = cb3[6].w + -r1.z;
    r0.w = r0.w / -cb3[9].z;
    r1.xy = -cb3[9].xy * r0.ww + r1.xy;
    r1.xy = -cb3[4].xy + r1.xy;
    r1.xy = saturate(cb3[5].xy * r1.xy);
    r0.w = t0.SampleLevel(s0_s, r1.xy, 0).y;
    r3.xyz = r0.yyy + -r2.xzw;
    r2.xyz = r0.www * r3.xyz + r2.xzw;
    r2.xyz = cb4[2].xyz * r2.xyz;
    r0.y = 50 + -cb4[7].w;
    r0.y = r0.w * r0.y + cb4[7].w;
    r0.y = max(0, r0.y);
    r0.y = cb3[7].z * cb3[7].w + -r0.y;
    r1.x = r1.z + -r0.y;
    r0.w = r0.w * -cb4[8].x + cb4[8].x;
    r0.w = max(0, r0.w);
    r0.w = cb3[7].z * cb3[7].w + -r0.w;
    r0.y = r0.w + -r0.y;
    r0.y = saturate(r1.x / r0.y);
    r0.y = max(9.99999997e-007, r0.y);
    r0.y = log2(r0.y);
    r0.y = cb4[8].y * r0.y;
    r0.y = exp2(r0.y);
    r0.y = 1 + -r0.y;
    r1.xy = max(float2(0,0), cb4[8].zw);
    r1.xy = cb3[7].zz * cb3[7].ww + -r1.xy;
    r0.w = r1.z + -r1.x;
    r1.x = r1.y + -r1.x;
    r0.w = saturate(r0.w / r1.x);
    r0.w = max(9.99999997e-007, r0.w);
    r0.w = log2(r0.w);
    r0.w = cb4[9].x * r0.w;
    r0.w = exp2(r0.w);
    r0.w = min(r0.y, r0.w);
    r1.xyz = r2.xyz * r0.www + -cb4[2].xyz;
    r1.xyz = r0.yyy * r1.xyz + cb4[2].xyz;
    r0.y = cmp(r0.z >= 0);
    r0.yzw = r0.yyy ? r1.xyz : cb4[2].xyz;
    r0.yzw = cb4[3].xyz + r0.yzw;
    r0.yzw = max(float3(0,0,0), r0.yzw);
    r0.y = dot(r0.yzw, float3(0.333299994,0.333299994,0.333299994));
    r0.y = -cb0[22].y + r0.y;
    r0.x = r0.x * r0.y;
    r0.x = cb0[13].y * r0.x + cb0[22].y;
    r0.x = r0.x * r1.w;
  } else {
    r0.x = cb0[22].y * r1.w;
  }
  r0.z = sqrt(r0.x);
  r0.xyw = float3(1,1,1);
  r1.xyzw = r0.zzzz + -r0.wwzw;
  o0.xyzw = cb0[22].zzzz * r1.xyzw + r0.xyzw;
  return;
}
