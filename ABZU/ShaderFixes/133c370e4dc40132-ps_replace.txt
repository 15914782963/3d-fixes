// Bubbles at waterfall

// ---- Created with 3Dmigoto v1.2.51 on Sun Dec 25 04:31:14 2016
Texture2D<float4> t5 : register(t5);

Texture2D<float4> t4 : register(t4);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture3D<float4> t0 : register(t0);

SamplerState s5_s : register(s5);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb4 : register(b4)
{
  float4 cb4[8];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[30];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[12];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[12];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[60];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);

#include "matrix.hlsl"

void main( 
  float4 v0 : TEXCOORD10,
  float4 v1 : TEXCOORD11,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD3,
  float4 v4 : PARTICLE_POSITION0,
  float4 v5 : VELOCITY_PREV_POS0,
  float4 v6 : SV_Position0,
  uint v7 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1,
  out float4 o2 : SV_Target2,
  out float4 o3 : SV_Target3,
  out float4 o4 : SV_Target4,
  out float4 o5 : SV_Target5)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = v1.zxy * v0.yzx;
  r0.xyz = v1.yzx * v0.zxy + -r0.xyz;
  r0.xyz = v1.www * r0.xyz;
  r1.xy = -cb1[1].xy + v6.xy;
  r1.xy = r1.xy * cb1[2].zw + float2(-0.5,-0.5);
  r1.xy = v6.ww * r1.xy;
  r1.z = v6.w;
  r1.xyz = float3(2,-2,1) * r1.xyz;
  r2.xyzw = cb0[37].xyzw * v6.yyyy;
  r2.xyzw = v6.xxxx * cb0[36].xyzw + r2.xyzw;
  r2.xyzw = v6.zzzz * cb0[38].xyzw + r2.xyzw;
  r2.xyzw = cb0[39].xyzw + r2.xyzw;
  r2.xyz = r2.xyz / r2.www;

float4 s = StereoParams.Load(0);
matrix TranslatedWorldToClip = MATRIX(cb0, 0);
matrix ClipToTranslatedWorld = MATRIX(cb0, 32);
float4 t = mul(r2.xyz, TranslatedWorldToClip);
t.x -= s.x * (t.w - s.y);
r2.xyz = mul(t, ClipToTranslatedWorld);

  r2.xyz = -cb0[56].xyz + r2.xyz;
  r3.xyz = cb1[7].www * float3(0,0,1) + cb1[7].xyz;
  r0.w = dot(r3.xyz, r3.xyz);
  r0.w = rsqrt(r0.w);
  r3.xyz = r3.xyz * r0.www;
  r4.xyz = r3.yyy * r0.xyz;
  r3.xyw = r3.xxx * v0.xyz + r4.xyz;
  r3.xyz = r3.zzz * v1.xyz + r3.xyw;
  r0.w = dot(r3.xyz, r3.xyz);
  r0.w = rsqrt(r0.w);
  r3.xyz = r3.xyz * r0.www;
  r4.xyz = -cb3[4].xyz + r2.xyz;
  r4.xyz = saturate(cb3[5].xyz * r4.xyz);
  r4.xyz = t0.SampleLevel(s0_s, r4.xyz, 0).xyz;
  r5.xyz = cb3[29].xyz + -r4.xyz;
  r4.xyz = cb3[28].xxx * r5.xyz + r4.xyz;
  r5.xyz = saturate(cb4[4].xxx + r4.xyz);
  r4.xyz = saturate(cb4[4].yyy + r4.xyz);
  r6.xyz = -cb0[53].zxy + v4.zxy;
  r0.w = dot(r6.xyz, r6.xyz);
  r0.w = sqrt(r0.w);
  r6.xyz = r6.xyz / r0.www;
  r7.xyz = float3(0,-1,0) * r6.xyz;
  r6.xyz = r6.zxy * float3(-1,0,0) + -r7.xyz;
  r6.xyz = float3(0,0,-1) + r6.xyz;
  r6.xyz = float3(0.5,0.5,0.5) * r6.xyz;
  r0.w = dot(r6.xyz, r6.xyz);
  r0.w = sqrt(r0.w);
  r6.xyz = r6.xyz / r0.www;
  r0.w = dot(r6.xyz, r6.xyz);
  r0.w = sqrt(r0.w);
  r6.xyz = r6.xyz / r0.www;
  r7.xy = t1.Sample(s1_s, v3.xy).xy;
  r7.xy = r7.xy * float2(2,2) + float2(-1,-1);
  r0.w = dot(r7.xy, r7.xy);
  r0.w = 1 + -r0.w;
  r0.w = max(0, r0.w);
  r7.z = sqrt(r0.w);
  r0.w = dot(r7.xyz, r7.xyz);
  r0.w = sqrt(r0.w);
  r7.xyz = r7.xyz / r0.www;
  r8.xyz = r7.yyy * r0.xyz;
  r7.xyw = r7.xxx * v0.xyz + r8.xyz;
  r7.xyz = r7.zzz * v1.xyz + r7.xyw;
  r0.w = dot(r6.xyz, r7.xyz);
  r1.w = saturate(dot(r7.xyz, -cb0[14].xyz));
  r1.w = max(9.99999997e-007, r1.w);
  r1.w = log2(r1.w);
  r1.w = cb4[4].z * r1.w;
  r1.w = exp2(r1.w);
  r1.w = 1 + -r1.w;
  r2.w = dot(-cb0[14].xyz, r6.xyz);
  r2.w = 1 + -abs(r2.w);
  r0.w = saturate(r1.w * r2.w + r0.w);
  r1.w = v2.y * 100 + cb1[11].z;
  r3.w = cb4[4].w * r1.w;
  r7.y = -r3.w;
  r7.zw = v3.xy * float2(2,2) + float2(-1,-1);
  r8.xy = r7.zw * r7.zw;
  r8.xy = cb4[5].xy * r8.xy;
  r3.w = r8.x + r8.y;
  r4.w = sqrt(r3.w);
  r5.w = r4.w * cb4[5].z + cb4[5].w;
  r3.w = r3.w * r5.w + 1;
  r4.w = 1 + -r4.w;
  r4.w = max(0, r4.w);
  r4.w = cb4[6].x * r4.w;
  r4.w = max(9.99999997e-007, abs(r4.w));
  r4.w = log2(r4.w);
  r4.w = cb4[6].y * r4.w;
  r4.w = exp2(r4.w);
  r8.xy = r8.xy * r3.ww + -r7.zw;
  r7.zw = r4.ww * r8.xy + r7.zw;
  r7.x = 0;
  r7.xy = r7.xy + r7.zw;
  r7.xy = r7.xy / cb4[6].zz;
  r7.xy = float2(0.5,0.5) + r7.xy;
  r3.w = 0.5 / cb4[6].z;
  r7.xy = r7.xy + -r3.ww;
  r7.xy = t2.Sample(s2_s, r7.xy).xy;
  r7.xy = r7.xy * float2(2,2) + float2(-1,-1);
  r3.w = dot(r7.xy, r7.xy);
  r3.w = 1 + -r3.w;
  r3.w = max(0, r3.w);
  r7.z = sqrt(r3.w);
  r3.w = dot(r7.xyz, r7.xyz);
  r3.w = sqrt(r3.w);
  r7.xyz = r7.xyz / r3.www;
  r0.xyz = r7.yyy * r0.xyz;
  r0.xyz = r7.xxx * v0.xyz + r0.xyz;
  r0.xyz = r7.zzz * v1.xyz + r0.xyz;
  r3.w = dot(r6.xyz, r0.xyz);
  r0.x = saturate(dot(r0.xyz, -cb0[14].xyz));
  r0.x = max(9.99999997e-007, r0.x);
  r0.x = log2(r0.x);
  r0.x = cb4[4].z * r0.x;
  r0.x = exp2(r0.x);
  r0.x = 1 + -r0.x;
  r0.x = saturate(r0.x * r2.w + r3.w);
  r0.y = r0.w * 2 + -1;
  r0.y = 1 + -abs(r0.y);
  r0.y = max(9.99999997e-007, r0.y);
  r0.y = log2(r0.y);
  r0.y = cb4[6].w * r0.y;
  r0.y = exp2(r0.y);
  r0.x = r0.x + -r0.w;
  r0.x = r0.y * r0.x;
  r0.x = v2.x * r0.x + r0.w;
  r0.y = saturate(cb4[7].x);
  r0.y = 1 + -r0.y;
  r0.z = max(9.99999975e-005, cb4[7].y);
  r0.w = -r0.z * 0.5 + r0.y;
  r0.y = r0.z * 0.5 + r0.y;
  r0.xy = r0.xy + -r0.ww;
  r0.x = saturate(r0.x / r0.y);
  r0.yzw = r4.xyz + -r5.xyz;
  r0.xyz = r0.xxx * r0.yzw + r5.xyz;
  r0.xyz = r0.xyz * cb4[7].zzz + cb4[1].xyz;
  r0.w = cb4[7].w * r1.w;
  r4.xy = float2(-0.25,0.25) * r0.ww;
  sincos(r4.x, r4.x, r5.x);
  r6.x = -r4.x;
  r4.zw = v3.xy / v2.xx;
  r4.zw = float2(0.5,0.5) + r4.zw;
  r0.w = 0.5 / v2.x;
  r4.zw = r4.zw + -r0.ww;
  r4.zw = float2(-0.5,-0.5) + r4.zw;
  r6.y = r5.x;
  r5.x = dot(r6.yx, r4.zw);
  r6.z = r4.x;
  r5.y = dot(r6.zy, r4.zw);
  r5.xy = float2(0.5,0.5) + r5.xy;
  r0.w = t3.Sample(s3_s, r5.xy).x;
  r5.xy = t4.Sample(s4_s, v3.xy).xz;
  sincos(r4.y, r4.x, r6.x);
  r7.x = -r4.x;
  r7.y = r6.x;
  r6.x = dot(r7.yx, r4.zw);
  r7.z = r4.x;
  r6.y = dot(r7.zy, r4.zw);
  r4.xy = float2(0.5,0.5) + r6.xy;
  r1.w = t3.Sample(s3_s, r4.xy).x;
  r1.w = r1.w * r5.y;
  r0.w = r0.w * r5.x + r1.w;
  r1.w = 1 + -v2.x;
  r4.xy = v3.xy / r1.ww;
  r4.xy = float2(0.5,0.5) + r4.xy;
  r1.w = 0.5 / r1.w;
  r4.xy = r4.xy + -r1.ww;
  r1.w = t5.Sample(s5_s, r4.xy).x;
  r0.w = saturate(r1.w + r0.w);
  r0.w = -0.333299994 + r0.w;
  r0.w = cmp(r0.w < 0);
  if (r0.w != 0) discard;
  r0.xyz = max(float3(0,0,0), r0.xyz);
  r0.w = cmp(0 < cb1[9].x);
  if (r0.w != 0) {
    r4.xyz = -cb2[8].xyz + r2.xyz;
    r5.xyz = float3(1,1,1) + cb2[9].xyz;
    r4.xyz = cmp(r5.xyz < abs(r4.xyz));
    r0.w = (int)r4.y | (int)r4.x;
    r0.w = (int)r4.z | (int)r0.w;
    r1.w = dot(r2.xyz, float3(0.577000022,0.577000022,0.577000022));
    r1.w = 0.00200000009 * r1.w;
    r1.w = frac(r1.w);
    r1.w = cmp(0.5 < r1.w);
    r2.xyz = r1.www ? float3(0,1,1) : float3(1,1,0);
    r0.xyz = r0.www ? r2.xyz : r0.xyz;
  }
  r1.xy = r1.xy / r1.zz;
  r1.xy = -cb0[26].xy + r1.xy;
  r1.zw = v5.xy / v5.ww;
  r1.zw = -cb0[59].xy + r1.zw;
  r1.xy = r1.xy + -r1.zw;
  r1.xy = r1.xy * float2(0.249500006,0.249500006) + float2(0.499992371,0.499992371);
  o4.xy = v5.zz * r1.xy;
  o4.zw = float2(0,0);
  o1.xyz = r3.xyz * float3(0.5,0.5,0.5) + float3(0.5,0.5,0.5);
  o0.xyz = r0.xyz;
  o0.w = 0;
  o1.w = cb2[11].x;
  o2.xyzw = float4(0,0,0,0);
  o3.xyzw = float4(0,0,0,0);
  o5.xyzw = float4(0,0,0,0);
  return;
}