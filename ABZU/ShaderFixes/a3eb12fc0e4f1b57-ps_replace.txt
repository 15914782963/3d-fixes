// Vortex
// ---- Created with 3Dmigoto v1.2.44 on Mon Oct 03 03:42:00 2016
Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb3 : register(b3)
{
  float4 cb3[12];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[10];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[12];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[57];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);

#include "matrix.hlsl"

void main( 
  linear centroid float4 v0 : TEXCOORD10,
  linear centroid float4 v1 : TEXCOORD11,
  float4 v2 : COLOR0,
  float4 v3 : TEXCOORD0,
  float4 v4 : SV_Position0,
  uint v5 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = v1.zxy * v0.yzx;
  r0.xyz = v1.yzx * v0.zxy + -r0.xyz;
  r0.xyz = v1.www * r0.xyz;
  r1.xy = -cb1[1].xy + v4.xy;
  r1.xy = r1.xy * cb1[2].zw + float2(-0.5,-0.5);
  r1.xy = v4.ww * r1.xy;
  r1.z = v4.w;
  r1.xyw = float3(2,-2,1) * r1.xyz;
  r2.xyzw = cb0[37].xyzw * v4.yyyy;
  r2.xyzw = v4.xxxx * cb0[36].xyzw + r2.xyzw;
  r2.xyzw = v4.zzzz * cb0[38].xyzw + r2.xyzw;
  r2.xyzw = cb0[39].xyzw + r2.xyzw;
  r2.xyz = r2.xyz / r2.www;

// Common SVPositionToTranslatedWorld fix:
float4 s = StereoParams.Load(0);
matrix TranslatedWorldToClip = MATRIX(cb0, 0);
matrix ClipToTranslatedWorld = MATRIX(cb0, 32);
float4 t = mul(r2.xyz, TranslatedWorldToClip);
t.x -= s.x * (t.w - s.y);
r2.xyz = mul(t, ClipToTranslatedWorld);

  r3.xyz = -cb0[56].xyz + r2.xyz;
  r0.w = dot(r2.xyz, r2.xyz);
  r0.w = sqrt(r0.w);
  r2.xyz = -r2.xyz / r0.www;
  r0.w = cb2[9].w * cb1[10].w;
  r2.w = v5.x ? 1 : -1;
  r0.w = r2.w * r0.w;
  r4.xyz = cb1[7].www * float3(0,0,1) + cb1[7].xyz;
  r4.xyz = r4.xyz * r0.www;
  r0.w = dot(r4.xyz, r4.xyz);
  r0.w = rsqrt(r0.w);
  r4.xyz = r4.xyz * r0.www;
  r0.xyz = r4.yyy * r0.xyz;
  r0.xyz = r4.xxx * v0.xyz + r0.xyz;
  r0.xyz = r4.zzz * v1.xyz + r0.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r4.xy = cb3[6].xy * cb1[11].zz;
  r4.xy = frac(r4.xy);
  r4.z = 0;
  r4.yw = cb3[6].zw * v3.xy + r4.yz;
  r4.xy = r4.zx + r4.yw;
  r0.w = t0.Sample(s0_s, r4.xy).x;
  r4.xy = cb3[7].xy * cb1[11].zz;
  r4.xy = frac(r4.xy);
  r4.z = 0;
  r4.yw = cb3[7].zw * v3.xy + r4.yz;
  r4.xy = r4.zx + r4.yw;
  r2.w = t1.Sample(s1_s, r4.xy).z;
  r2.w = cb3[8].x + r2.w;
  r0.w = r2.w + r0.w;
  r4.xyz = cb3[2].xyz * r0.www;
  r4.xyz = r4.xyz * cb3[8].yyy + cb3[3].xyz;
  r5.xyz = -cb0[53].xyz + r3.xyz;
  r0.w = dot(r5.xyz, r5.xyz);
  r0.w = sqrt(r0.w);
  r2.w = -cb3[8].z + r0.w;
  r2.w = saturate(r2.w / cb3[8].w);
  r3.w = cb3[9].x + -cb3[9].y;
  r0.w = -r3.w + r0.w;
  r3.w = cb3[9].x + -r3.w;
  r0.w = saturate(r0.w / r3.w);
  r0.w = 1 + -r0.w;
  r0.w = r2.w * r0.w;
  r0.x = dot(r0.xyz, r2.xyz);
  r0.x = max(0, r0.x);
  r0.x = 1 + -r0.x;
  r0.x = max(9.99999997e-007, abs(r0.x));
  r0.y = r0.x * r0.x;
  r0.y = r0.y * r0.y;
  r0.x = r0.x * r0.y;
  r0.x = r0.x * 0.959999979 + 0.0399999991;
  r0.x = 1 + -r0.x;
  r0.x = max(9.99999997e-007, abs(r0.x));
  r0.x = log2(r0.x);
  r0.x = cb3[9].z * r0.x;
  r0.x = exp2(r0.x);
  r0.y = 1 + -v3.y;
  r0.y = max(9.99999997e-007, abs(r0.y));
  r0.y = log2(r0.y);
  r0.y = cb3[9].w * r0.y;
  r0.y = exp2(r0.y);
  r2.xy = cb3[10].yz * cb1[11].zz;
  r2.xy = frac(r2.xy);
  r5.x = cb3[10].w * v3.x;
  r5.y = cb3[11].x * v3.y;
  r2.z = 0;
  r2.yw = r5.xy + r2.yz;
  r2.xy = r2.zx + r2.yw;
  r0.z = t1.Sample(s1_s, r2.xy).z;
  r2.x = cb3[10].x * 2 + 1;
  r0.z = saturate(r0.z * r2.x + -cb3[10].x);
  r0.z = v2.w * r0.z;
  r0.y = r0.y * r0.z;
  r0.x = r0.x * r0.y;
  r0.x = r0.w * r0.x;
  r0.yz = r1.xy / r1.ww;
  r0.yz = r0.yz * cb0[52].xy + cb0[52].wz;
  r0.y = t2.SampleLevel(s2_s, r0.yz, 0).x;
  r0.y = r0.y * cb0[51].z + -cb0[51].w;
  r0.y = 1 / r0.y;
  r0.y = -r1.z * 1 + r0.y;
  r0.y = saturate(r0.y / cb3[11].z);
  r0.x = r0.x * r0.y;
  r0.w = saturate(cb3[11].w * r0.x);
  r0.xyz = max(float3(0,0,0), r4.xyz);
  r1.x = cmp(0 < cb1[9].x);
  if (r1.x != 0) {
    r1.xyz = -cb2[8].xyz + r3.xyz;
    r2.xyz = float3(1,1,1) + cb2[9].xyz;
    r1.xyz = cmp(r2.xyz < abs(r1.xyz));
    r1.x = (int)r1.y | (int)r1.x;
    r1.x = (int)r1.z | (int)r1.x;
    r1.y = dot(r3.xyz, float3(0.577000022,0.577000022,0.577000022));
    r1.y = 0.00200000009 * r1.y;
    r1.y = frac(r1.y);
    r1.y = cmp(0.5 < r1.y);
    r2.yzw = r1.yyy ? float3(0,1,1) : float3(1,1,0);
    r2.x = 1;
    r0.xyzw = r1.xxxx ? r2.yzwx : r0.xyzw;
  }
  o0.xyz = r0.xyz * r0.www;
  o0.w = 0;
  return;
}
