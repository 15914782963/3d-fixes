
cbuffer PER_BATCH : register(b0)
{
  float4 TexAtlasSize : packoffset(c0);
  float3 vfColGradDelta : packoffset(c1);
  float4 vfRampParams : packoffset(c2);
  float4 vfColGradRadial : packoffset(c3);
  float4 vfColGradParams : packoffset(c4);
  float4 SpritesOutdoorAOVertInfo : packoffset(c5);
  float3 vfColGradBase : packoffset(c6);
  float4 vfParams : packoffset(c7);
  float3 vfSunDir : packoffset(c8);
  float4 vfViewPos : packoffset(c9);
}

cbuffer PER_FRAME : register(b3)
{
  row_major float4x4 g_VS_ViewProjMatr : packoffset(c0);
  float4 g_VS_WorldViewPos : packoffset(c6);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float4 v0 : POSITION0,
  float2 v1 : TEXCOORD0,
  float4 v2 : COLOR0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : COLOR0)
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = dot(g_VS_ViewProjMatr._m00_m01_m02_m03, v0.xyzw);
  r0.y = dot(g_VS_ViewProjMatr._m10_m11_m12_m13, v0.xyzw);
  r0.z = dot(g_VS_ViewProjMatr._m20_m21_m22_m23, v0.xyzw);
  r0.w = dot(g_VS_ViewProjMatr._m30_m31_m32_m33, v0.xyzw);
  o0.xyzw = r0.xyzw;
  r0.xy = r0.xy * float2(1.000000e+000,-1.000000e+000) + r0.ww;
  o3.zw = r0.zw;
  o3.xy = float2(5.000000e-001,5.000000e-001) * r0.xy;
  r0.x = v2.z < 5.000000000e-001;
  r0.yz = float2(3.200000e+001,6.400000e+001) * TexAtlasSize.ww;
  r0.x = r0.x ? r0.y : r0.z;
  o1.z = v1.x + r0.x;
  o1.xyw = v1.xyy;
  o2.xy = SpritesOutdoorAOVertInfo.zz * v0.yx + SpritesOutdoorAOVertInfo.xy;
  o2.z = -SpritesOutdoorAOVertInfo.w + v0.z;
  o2.w = 0.000000000e+000;
  o4.xyzw = v2.zyxw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer PER_BATCH
// {
//
//   float4 TexAtlasSize;               // Offset:    0 Size:    16
//   float3 vfColGradDelta;             // Offset:   16 Size:    12 [unused]
//   float4 vfRampParams;               // Offset:   32 Size:    16 [unused]
//   float4 vfColGradRadial;            // Offset:   48 Size:    16 [unused]
//   float4 vfColGradParams;            // Offset:   64 Size:    16 [unused]
//   float4 SpritesOutdoorAOVertInfo;   // Offset:   80 Size:    16
//   float3 vfColGradBase;              // Offset:   96 Size:    12 [unused]
//   float4 vfParams;                   // Offset:  112 Size:    16 [unused]
//   float3 vfSunDir;                   // Offset:  128 Size:    12 [unused]
//   float4 vfViewPos;                  // Offset:  144 Size:    16 [unused]
//
// }
//
// cbuffer PER_FRAME
// {
//
//   row_major float4x4 g_VS_ViewProjMatr;// Offset:    0 Size:    64
//   float4 g_VS_WorldViewPos;          // Offset:   96 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// PER_BATCH                         cbuffer      NA          NA    0        1
// PER_FRAME                         cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// COLOR                    0   xyzw        4     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb3[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v2.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_temps 1
dp4 r0.x, cb3[0].xyzw, v0.xyzw
dp4 r0.y, cb3[1].xyzw, v0.xyzw
dp4 r0.z, cb3[2].xyzw, v0.xyzw
dp4 r0.w, cb3[3].xyzw, v0.xyzw
mov o0.xyzw, r0.xyzw
mad r0.xy, r0.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), r0.wwww
mov o3.zw, r0.zzzw
mul o3.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
lt r0.x, v2.z, l(0.500000)
mul r0.yz, cb0[0].wwww, l(0.000000, 32.000000, 64.000000, 0.000000)
movc r0.x, r0.x, r0.y, r0.z
add o1.z, r0.x, v1.x
mov o1.xyw, v1.xyxy
mad o2.xy, cb0[5].zzzz, v0.yxyy, cb0[5].xyxx
add o2.z, v0.z, -cb0[5].w
mov o2.w, l(0)
mov o4.xyzw, v2.zyxw
ret 
// Approximately 18 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer PER_BATCH
// {
//
//   float4 TexAtlasSize;               // Offset:    0 Size:    16
//   float3 vfColGradDelta;             // Offset:   16 Size:    12 [unused]
//   float4 vfRampParams;               // Offset:   32 Size:    16 [unused]
//   float4 vfColGradRadial;            // Offset:   48 Size:    16 [unused]
//   float4 vfColGradParams;            // Offset:   64 Size:    16 [unused]
//   float4 SpritesOutdoorAOVertInfo;   // Offset:   80 Size:    16
//   float3 vfColGradBase;              // Offset:   96 Size:    12 [unused]
//   float4 vfParams;                   // Offset:  112 Size:    16 [unused]
//   float3 vfSunDir;                   // Offset:  128 Size:    12 [unused]
//   float4 vfViewPos;                  // Offset:  144 Size:    16 [unused]
//
// }
//
// cbuffer PER_FRAME
// {
//
//   row_major float4x4 g_VS_ViewProjMatr;// Offset:    0 Size:    64
//   float4 g_VS_WorldViewPos;          // Offset:   96 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// PER_BATCH                         cbuffer      NA          NA    0        1
// PER_FRAME                         cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// COLOR                    0   xyzw        4     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb3[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v2.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_temps 1
dp4 r0.x, cb3[0].xyzw, v0.xyzw
dp4 r0.y, cb3[1].xyzw, v0.xyzw
dp4 r0.z, cb3[2].xyzw, v0.xyzw
dp4 r0.w, cb3[3].xyzw, v0.xyzw
mov o0.xyzw, r0.xyzw
mad r0.xy, r0.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), r0.wwww
mov o3.zw, r0.zzzw
mul o3.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
lt r0.x, v2.z, l(0.500000)
mul r0.yz, l(0.000000, 32.000000, 64.000000, 0.000000), cb0[0].wwww
movc r0.x, r0.x, r0.y, r0.z
add o1.z, r0.x, v1.x
mov o1.xyw, v1.xyxy
mad o2.xy, cb0[5].zzzz, v0.yxyy, cb0[5].xyxx
add o2.z, v0.z, -cb0[5].w
mov o2.w, l(0)
mov o4.xyzw, v2.zyxw
ret 
// Approximately 18 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
