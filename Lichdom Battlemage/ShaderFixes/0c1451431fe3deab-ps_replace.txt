
cbuffer PER_BATCH : register(b0)
{
  float4 vBasisMagnitudes : packoffset(c0);
  float4 vWBasisY : packoffset(c1);
  float4 vWBasisX : packoffset(c2);
  float4 irreg_kernel_2d[8] : packoffset(c3);
  float4 PS_NearFarClipDist : packoffset(c11);
  float4 vInvShadowMapWH : packoffset(c12);
  float4 fDepthShift : packoffset(c13);
  float4 fShadowFadingDist : packoffset(c14);
  float4 vCamPos : packoffset(c15);
  float4 fOneDivFarDist : packoffset(c16);
  float4 vWBasisZ : packoffset(c17);
  float4 fDepthTestBias : packoffset(c18);
  float4 fKernelRadius : packoffset(c19);
}
SamplerState sceneDepthSampler_s : register(s0);
SamplerState sRotSampler_s : register(s2);
SamplerComparisonState SAMPLER_STATE_depthMapSampler_s : register(s1);
Texture2D<float4> sceneDepthSampler : register(t0);
Texture2D<float4> sRotSampler : register(t1);
Texture2D<float4> depthMapSampler0 : register(t2);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : SV_POSITION0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = sceneDepthSampler.Sample(sceneDepthSampler_s, v2.xy).x;
  r0.yzw = vBasisMagnitudes.xyz * r0.xxx;
  r1.xy = v1.zw * r0.xx + v1.xy;
  r0.xy = v0.xy * r0.yz;
  r2.xyzw = vWBasisX.xyzw * r0.xxxx;
  r2.xyzw = vWBasisZ.xyzw * r0.wwww + r2.xyzw;
  r0.xyzw = vWBasisY.xyzw * r0.yyyy + r2.xyzw;
  r0.xyzw = vCamPos.xyzw + r0.xyzw;
  r0.z = r0.z * fOneDivFarDist.x + -fDepthTestBias.x;
  r0.xy = r0.xy / r0.ww;
  r0.z = max(0, r0.z);
  r0.z = min(0.999998987, r0.z);
  r0.w = 15 * fKernelRadius.y;
  r1.xy = r1.xy * r0.ww;
  r1.xy = sRotSampler.Sample(sRotSampler_s, r1.xy).xy;
  r2.xyz = fKernelRadius.yxx * vInvShadowMapWH.yxx;
  r1.xyz = r2.xyz * r1.yxx;
  r1.w = -r1.x;
  r2.xyzw = irreg_kernel_2d[0].yyzz * r1.xzzw;
  r2.xyzw = r1.zwxz * irreg_kernel_2d[0].xxww + r2.xyzw;
  r2.xyzw = r2.xyzw + r0.xyxy;
  r3.x = depthMapSampler0.SampleCmp(SAMPLER_STATE_depthMapSampler_s, r2.xy, r0.z).x;
  r3.y = depthMapSampler0.SampleCmp(SAMPLER_STATE_depthMapSampler_s, r2.zw, r0.z).x;
  r2.xyzw = irreg_kernel_2d[1].yyzz * r1.xzzw;
  r2.xyzw = r1.zwxz * irreg_kernel_2d[1].xxww + r2.xyzw;
  r2.xyzw = r2.xyzw + r0.xyxy;
  r3.z = depthMapSampler0.SampleCmp(SAMPLER_STATE_depthMapSampler_s, r2.xy, r0.z).x;
  r3.w = depthMapSampler0.SampleCmp(SAMPLER_STATE_depthMapSampler_s, r2.zw, r0.z).x;
  r0.w = dot(r3.xyzw, float4(1.250000e-001,1.250000e-001,1.250000e-001,1.250000e-001));
  r2.xyzw = irreg_kernel_2d[2].yyzz * r1.xzzw;
  r2.xyzw = r1.zwxz * irreg_kernel_2d[2].xxww + r2.xyzw;
  r2.xyzw = r2.xyzw + r0.xyxy;
  r3.x = depthMapSampler0.SampleCmp(SAMPLER_STATE_depthMapSampler_s, r2.xy, r0.z).x;
  r3.y = depthMapSampler0.SampleCmp(SAMPLER_STATE_depthMapSampler_s, r2.zw, r0.z).x;
  r2.xyzw = irreg_kernel_2d[3].yyzz * r1.xyzw;
  r1.xyzw = r1.zwxz * irreg_kernel_2d[3].xxww + r2.xyzw;
  r1.xyzw = r1.xyzw + r0.xyxy;
  r0.xy = float2(-5.000000e-001,-5.000000e-001) + r0.xy;
  r0.xy = abs(r0.xy) + abs(r0.xy);
  r0.x = max(r0.x, r0.y);
  r0.x = r0.x * r0.x;
  r0.x = r0.x * r0.x;
  r0.x = r0.x * r0.x;
  r0.x = saturate(-fShadowFadingDist.x * r0.x + 1);
  r3.z = depthMapSampler0.SampleCmp(SAMPLER_STATE_depthMapSampler_s, r1.xy, r0.z).x;
  r3.w = depthMapSampler0.SampleCmp(SAMPLER_STATE_depthMapSampler_s, r1.zw, r0.z).x;
  r0.y = dot(r3.xyzw, float4(1.250000e-001,1.250000e-001,1.250000e-001,1.250000e-001));
  r0.y = r0.w + r0.y;
  r0.y = -r0.y * r0.y + 1;
  o0.xyzw = r0.yyyy * r0.xxxx;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Buffer Definitions: 
//
// cbuffer PER_BATCH
// {
//
//   float4 vBasisMagnitudes;           // Offset:    0 Size:    16
//   float4 vWBasisY;                   // Offset:   16 Size:    16
//   float4 vWBasisX;                   // Offset:   32 Size:    16
//   float4 irreg_kernel_2d[8];         // Offset:   48 Size:   128
//   float4 PS_NearFarClipDist;         // Offset:  176 Size:    16 [unused]
//   float4 vInvShadowMapWH;            // Offset:  192 Size:    16
//   float4 fDepthShift;                // Offset:  208 Size:    16 [unused]
//   float4 fShadowFadingDist;          // Offset:  224 Size:    16
//   float4 vCamPos;                    // Offset:  240 Size:    16
//   float4 fOneDivFarDist;             // Offset:  256 Size:    16
//   float4 vWBasisZ;                   // Offset:  272 Size:    16
//   float4 fDepthTestBias;             // Offset:  288 Size:    16
//   float4 fKernelRadius;              // Offset:  304 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sceneDepthSampler                 sampler      NA          NA    0        1
// SAMPLER_STATE_depthMapSampler   sampler_c      NA          NA    1        1
// sRotSampler                       sampler      NA          NA    2        1
// sceneDepthSampler                 texture  float4          2d    0        1
// sRotSampler                       texture  float4          2d    1        1
// depthMapSampler0                  texture  float4          2d    2        1
// PER_BATCH                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_constantbuffer cb0[20], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 4
sample_indexable(texture2d)(float,float,float,float) r0.x, v2.xyxx, t0.xyzw, s0
mul r0.yzw, r0.xxxx, cb0[0].xxyz
mad r1.xy, v1.zwzz, r0.xxxx, v1.xyxx
mul r0.xy, r0.yzyy, v0.xyxx
mul r2.xyzw, r0.xxxx, cb0[2].xyzw
mad r2.xyzw, cb0[17].xyzw, r0.wwww, r2.xyzw
mad r0.xyzw, cb0[1].xyzw, r0.yyyy, r2.xyzw
add r0.xyzw, r0.xyzw, cb0[15].xyzw
mad r0.z, r0.z, cb0[16].x, -cb0[18].x
div r0.xy, r0.xyxx, r0.wwww
max r0.z, r0.z, l(0.000000)
min r0.z, r0.z, l(0.999999)
mul r0.w, cb0[19].y, l(15.000000)
mul r1.xy, r0.wwww, r1.xyxx
sample_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t1.xyzw, s2
mul r2.xyz, cb0[12].yxxy, cb0[19].yxxy
mul r1.xyz, r1.yxxy, r2.xyzx
mov r1.w, -r1.x
mul r2.xyzw, r1.xzzw, cb0[3].yyzz
mad r2.xyzw, r1.zwxz, cb0[3].xxww, r2.xyzw
add r2.xyzw, r0.xyxy, r2.xyzw
sample_c_indexable(texture2d)(float,float,float,float) r3.x, r2.xyxx, t2.xxxx, s1, r0.z
sample_c_indexable(texture2d)(float,float,float,float) r3.y, r2.zwzz, t2.xxxx, s1, r0.z
mul r2.xyzw, r1.xzzw, cb0[4].yyzz
mad r2.xyzw, r1.zwxz, cb0[4].xxww, r2.xyzw
add r2.xyzw, r0.xyxy, r2.xyzw
sample_c_indexable(texture2d)(float,float,float,float) r3.z, r2.xyxx, t2.xxxx, s1, r0.z
sample_c_indexable(texture2d)(float,float,float,float) r3.w, r2.zwzz, t2.xxxx, s1, r0.z
dp4 r0.w, r3.xyzw, l(0.125000, 0.125000, 0.125000, 0.125000)
mul r2.xyzw, r1.xzzw, cb0[5].yyzz
mad r2.xyzw, r1.zwxz, cb0[5].xxww, r2.xyzw
add r2.xyzw, r0.xyxy, r2.xyzw
sample_c_indexable(texture2d)(float,float,float,float) r3.x, r2.xyxx, t2.xxxx, s1, r0.z
sample_c_indexable(texture2d)(float,float,float,float) r3.y, r2.zwzz, t2.xxxx, s1, r0.z
mul r2.xyzw, r1.xyzw, cb0[6].yyzz
mad r1.xyzw, r1.zwxz, cb0[6].xxww, r2.xyzw
add r1.xyzw, r0.xyxy, r1.xyzw
add r0.xy, r0.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r0.xy, |r0.xyxx|, |r0.xyxx|
max r0.x, r0.y, r0.x
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.x
mad_sat r0.x, -cb0[14].x, r0.x, l(1.000000)
sample_c_indexable(texture2d)(float,float,float,float) r3.z, r1.xyxx, t2.xxxx, s1, r0.z
sample_c_indexable(texture2d)(float,float,float,float) r3.w, r1.zwzz, t2.xxxx, s1, r0.z
dp4 r0.y, r3.xyzw, l(0.125000, 0.125000, 0.125000, 0.125000)
add r0.y, r0.y, r0.w
mad r0.y, -r0.y, r0.y, l(1.000000)
mul o0.xyzw, r0.xxxx, r0.yyyy
ret 
// Approximately 51 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//   using 3Dmigoto v1.1.30 on Fri Jul 10 00:27:00 2015
//
//
// Buffer Definitions: 
//
// cbuffer PER_BATCH
// {
//
//   float4 vBasisMagnitudes;           // Offset:    0 Size:    16
//   float4 vWBasisY;                   // Offset:   16 Size:    16
//   float4 vWBasisX;                   // Offset:   32 Size:    16
//   float4 irreg_kernel_2d[8];         // Offset:   48 Size:   128
//   float4 PS_NearFarClipDist;         // Offset:  176 Size:    16 [unused]
//   float4 vInvShadowMapWH;            // Offset:  192 Size:    16
//   float4 fDepthShift;                // Offset:  208 Size:    16 [unused]
//   float4 fShadowFadingDist;          // Offset:  224 Size:    16
//   float4 vCamPos;                    // Offset:  240 Size:    16
//   float4 fOneDivFarDist;             // Offset:  256 Size:    16
//   float4 vWBasisZ;                   // Offset:  272 Size:    16
//   float4 fDepthTestBias;             // Offset:  288 Size:    16
//   float4 fKernelRadius;              // Offset:  304 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sceneDepthSampler_s               sampler      NA          NA    0        1
// SAMPLER_STATE_depthMapSampler_s  sampler_c      NA          NA    1        1
// sRotSampler_s                     sampler      NA          NA    2        1
// sceneDepthSampler                 texture  float4          2d    0        1
// sRotSampler                       texture  float4          2d    1        1
// depthMapSampler0                  texture  float4          2d    2        1
// PER_BATCH                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[20], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 4
sample_indexable(texture2d)(float,float,float,float) r0.x, v2.xyxx, t0.xyzw, s0
mul r0.yzw, r0.xxxx, cb0[0].xxyz
mad r1.xy, v1.zwzz, r0.xxxx, v1.xyxx
mul r0.xy, r0.yzyy, v0.xyxx
mul r2.xyzw, r0.xxxx, cb0[2].xyzw
mad r2.xyzw, cb0[17].xyzw, r0.wwww, r2.xyzw
mad r0.xyzw, cb0[1].xyzw, r0.yyyy, r2.xyzw
add r0.xyzw, r0.xyzw, cb0[15].xyzw
mad r0.z, r0.z, cb0[16].x, -cb0[18].x
div r0.xy, r0.xyxx, r0.wwww
max r0.z, r0.z, l(0.000000)
min r0.z, r0.z, l(0.999999)
mul r0.w, l(15.000000), cb0[19].y
mul r1.xy, r0.wwww, r1.xyxx
sample_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t1.xyzw, s2
mul r2.xyz, cb0[12].xyxx, cb0[19].xyxx
mul r1.xzw, r1.xxyx, r2.xxyz
mov r1.y, -r1.z
mul r2.xyzw, r1.zwwy, cb0[3].yyzz
mad r2.xyzw, r1.wyzw, cb0[3].xxww, r2.xyzw
add r2.xyzw, r0.xyxy, r2.xyzw
sample_c_indexable(texture2d)(float,float,float,float) r3.x, r2.xyxx, t2.xxxx, s1, r0.z
sample_c_indexable(texture2d)(float,float,float,float) r3.y, r2.zwzz, t2.xxxx, s1, r0.z
mul r2.xyzw, r1.zwwy, cb0[4].yyzz
mad r2.xyzw, r1.wyzw, cb0[4].xxww, r2.xyzw
add r2.xyzw, r0.xyxy, r2.xyzw
sample_c_indexable(texture2d)(float,float,float,float) r3.z, r2.xyxx, t2.xxxx, s1, r0.z
sample_c_indexable(texture2d)(float,float,float,float) r3.w, r2.zwzz, t2.xxxx, s1, r0.z
dp4 r0.w, r3.xyzw, l(0.125000, 0.125000, 0.125000, 0.125000)
mul r2.xyzw, r1.zwwy, cb0[5].yyzz
mad r2.xyzw, r1.wyzw, cb0[5].xxww, r2.xyzw
add r2.xyzw, r0.xyxy, r2.xyzw
sample_c_indexable(texture2d)(float,float,float,float) r3.x, r2.xyxx, t2.xxxx, s1, r0.z
sample_c_indexable(texture2d)(float,float,float,float) r3.y, r2.zwzz, t2.xxxx, s1, r0.z
mul r2.xyzw, r1.zwwy, cb0[6].yyzz
mad r1.xyzw, r1.xyzw, cb0[6].xxww, r2.xyzw
add r1.xyzw, r0.xyxy, r1.xyzw
add r0.xy, r0.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r0.xy, |r0.xyxx|, |r0.xyxx|
max r0.x, r0.y, r0.x
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.x
mad_sat r0.x, -cb0[14].x, r0.x, l(1.000000)
sample_c_indexable(texture2d)(float,float,float,float) r3.z, r1.xyxx, t2.xxxx, s1, r0.z
sample_c_indexable(texture2d)(float,float,float,float) r3.w, r1.zwzz, t2.xxxx, s1, r0.z
dp4 r0.y, r3.xyzw, l(0.125000, 0.125000, 0.125000, 0.125000)
add r0.y, r0.y, r0.w
mad r0.y, -r0.y, r0.y, l(1.000000)
mul o0.xyzw, r0.xxxx, r0.yyyy
ret 
// Approximately 51 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
