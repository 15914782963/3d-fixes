cbuffer cb3 : register(b3)
{
  float4 cb3[3];
}


cbuffer PER_BATCH : register(b0)
{
  float4 PBAlphaTest : packoffset(c0);
  float4 g_invGridSize : packoffset(c1);
  float4 GlowParams : packoffset(c2);
  row_major float4x4 TexGen0 : packoffset(c3);
  float4 irreg_kernel_2d[8] : packoffset(c7);
  float4 g_gridCenter : packoffset(c15);
  float4 PS_NearFarClipDist : packoffset(c16);
  float4 vInvShadowMapWH : packoffset(c17);
  float4 g_vGIAttenuation : packoffset(c18);
  float4 fDepthShift : packoffset(c19);
  float4 fOneDivFarDist : packoffset(c20);
  float4 fDepthTestBias : packoffset(c21);
  float4 LSPos : packoffset(c22);
  row_major float4x4 g_gridMatrix : packoffset(c23);
  float4 g_gridSize : packoffset(c27);
}

cbuffer PER_INSTANCE : register(b1)
{
  float4 Ambient : packoffset(c0);
  float4 ParticleParams[2] : packoffset(c1);
  float4 AvgFogVolumeContrib : packoffset(c3);
}

cbuffer PER_FRAME : register(b3)
{
  float4 g_PS_SunLightDir : packoffset(c2);
}

cbuffer PER_LIGHT : register(b5)
{
  float4 LDiffuses0 : packoffset(c0);
  float4 WorldLightsPos0 : packoffset(c1);
  float4 LDiffuses1 : packoffset(c3);
  float4 WorldLightsPos1 : packoffset(c4);
  float4 LDiffuses2 : packoffset(c6);
  float4 WorldLightsPos2 : packoffset(c7);
  float4 LDiffuses3 : packoffset(c9);
  float4 WorldLightsPos3 : packoffset(c10);
}
SamplerState sceneDepthSampler_s : register(s0);
SamplerState diffuseSampler_s : register(s1);
Texture2D<float4> diffuseSampler : register(t0);
Texture2D<float4> sceneDepthSampler : register(t1);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  float4 v5 : TEXCOORD4,
  float4 v6 : COLOR0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = diffuseSampler.Sample(diffuseSampler_s, v1.xy).xyzw;
  r1.x = r0.w * v6.w + -PBAlphaTest.w;
  r0.xyzw = v6.wxyz * r0.wxyz;
  r1.x = r1.x < 0.000000000e+000;
  if (r1.x != 0) discard;
  r1.x = dot(v2.xyz, v2.xyz);
  r1.x = rsqrt(r1.x);
  r1.yzw = v2.xyz * r1.xxx;
  r1.x = v2.z * r1.x + 1.000000000e+000;
  r1.x = r1.x * 3.750000000e-001 + 2.500000000e-001;
  r2.xyz = Ambient.xyz * r1.xxx;
  r1.x = dot(cb3[2].xyz, r1.yzw);
  r1.y = 1.000000000e+000 + -r1.x;
  r1.x = r1.y * ParticleParams[0].z + r1.x;
  r1.y = 5.000000000e-001 * ParticleParams[0].z;
  r1.x = max(r1.y, r1.x);
  r1.xyz = LDiffuses0.xyz * r1.xxx;
  r1.w = 0.000000e+000 != ParticleParams[0].y;
  r2.xyz = r1.www ? r2.xyz : Ambient.xyz;
  r1.xyz = r1.xyz * Ambient.www + r2.xyz;
  r1.xyz = r1.xyz * r0.yzw + -v5.xyz;
  r1.xyz = v5.www * r1.xyz + v5.xyz;
  r1.xyz = -AvgFogVolumeContrib.xyz + r1.xyz;
  r1.xyz = AvgFogVolumeContrib.www * r1.xyz + AvgFogVolumeContrib.xyz;
  r2.xy = v4.xy / v4.ww;
  r1.w = sceneDepthSampler.Sample(sceneDepthSampler_s, r2.xy).x;
  r2.x = PS_NearFarClipDist.z * v4.w;
  r1.w = r1.w * PS_NearFarClipDist.y + -r2.x;
  r1.w = v4.z * r1.w;
  r1.w = saturate(ParticleParams[1].x * r1.w);
  r2.x = 1.000000e+000 / PS_NearFarClipDist.z;
  r1.w = saturate(r2.x * r1.w);
  r0.yzw = r0.xxx * r0.yzw;
  r0.x = saturate(r0.x);
  o0.w = r0.x * r1.w;
  r0.xyz = GlowParams.xyz * r0.yzw;
  r0.xyz = r1.www * r0.xyz + r1.xyz;
  o0.xyz = cb3[2].www * r0.xyz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer PER_BATCH
// {
//
//   float4 PBAlphaTest;                // Offset:    0 Size:    16
//   float4 g_invGridSize;              // Offset:   16 Size:    16 [unused]
//   float4 GlowParams;                 // Offset:   32 Size:    16
//   row_major float4x4 TexGen0;        // Offset:   48 Size:    64 [unused]
//   float4 irreg_kernel_2d[8];         // Offset:  112 Size:   128 [unused]
//   float4 g_gridCenter;               // Offset:  240 Size:    16 [unused]
//   float4 PS_NearFarClipDist;         // Offset:  256 Size:    16
//   float4 vInvShadowMapWH;            // Offset:  272 Size:    16 [unused]
//   float4 g_vGIAttenuation;           // Offset:  288 Size:    16 [unused]
//   float4 fDepthShift;                // Offset:  304 Size:    16 [unused]
//   float4 fOneDivFarDist;             // Offset:  320 Size:    16 [unused]
//   float4 fDepthTestBias;             // Offset:  336 Size:    16 [unused]
//   float4 LSPos;                      // Offset:  352 Size:    16 [unused]
//   row_major float4x4 g_gridMatrix;   // Offset:  368 Size:    64 [unused]
//   float4 g_gridSize;                 // Offset:  432 Size:    16 [unused]
//
// }
//
// cbuffer PER_INSTANCE
// {
//
//   float4 Ambient;                    // Offset:    0 Size:    16
//   float4 ParticleParams[2];          // Offset:   16 Size:    32
//   float4 AvgFogVolumeContrib;        // Offset:   48 Size:    16
//
// }
//
// cbuffer PER_FRAME
// {
//
//   float4 g_PS_SunLightDir;           // Offset:   32 Size:    16
//
// }
//
// cbuffer PER_LIGHT
// {
//
//   float4 LDiffuses0;                 // Offset:    0 Size:    16
//   float4 WorldLightsPos0;            // Offset:   16 Size:    16 [unused]
//   float4 LDiffuses1;                 // Offset:   48 Size:    16 [unused]
//   float4 WorldLightsPos1;            // Offset:   64 Size:    16 [unused]
//   float4 LDiffuses2;                 // Offset:   96 Size:    16 [unused]
//   float4 WorldLightsPos2;            // Offset:  112 Size:    16 [unused]
//   float4 LDiffuses3;                 // Offset:  144 Size:    16 [unused]
//   float4 WorldLightsPos3;            // Offset:  160 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sceneDepthSampler                 sampler      NA          NA    0        1
// diffuseSampler                    sampler      NA          NA    1        1
// diffuseSampler                    texture  float4          2d    0        1
// sceneDepthSampler                 texture  float4          2d    1        1
// PER_BATCH                         cbuffer      NA          NA    0        1
// PER_INSTANCE                      cbuffer      NA          NA    1        1
// PER_FRAME                         cbuffer      NA          NA    3        1
// PER_LIGHT                         cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// COLOR                    0   xyzw        6     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_constantbuffer cb3[3], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyzw
dcl_output o0.xyzw
dcl_temps 3
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s1
mad r1.x, r0.w, v6.w, -cb0[0].w
mul r0.xyzw, r0.wxyz, v6.wxyz
lt r1.x, r1.x, l(0.000000)
discard_nz r1.x
dp3 r1.x, v2.xyzx, v2.xyzx
rsq r1.x, r1.x
mul r1.yzw, r1.xxxx, v2.xxyz
mad r1.x, v2.z, r1.x, l(1.000000)
mad r1.x, r1.x, l(0.375000), l(0.250000)
mul r2.xyz, r1.xxxx, cb1[0].xyzx
dp3 r1.x, cb3[2].xyzx, r1.yzwy
add r1.y, -r1.x, l(1.000000)
mad r1.x, r1.y, cb1[1].z, r1.x
mul r1.y, cb1[1].z, l(0.500000)
max r1.x, r1.y, r1.x
mul r1.xyz, r1.xxxx, cb5[0].xyzx
ne r1.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb1[1].y
movc r2.xyz, r1.wwww, r2.xyzx, cb1[0].xyzx
mad r1.xyz, r1.xyzx, cb1[0].wwww, r2.xyzx
mad r1.xyz, r1.xyzx, r0.yzwy, -v5.xyzx
mad r1.xyz, v5.wwww, r1.xyzx, v5.xyzx
add r1.xyz, r1.xyzx, -cb1[3].xyzx
mad r1.xyz, cb1[3].wwww, r1.xyzx, cb1[3].xyzx
div r2.xy, v4.xyxx, v4.wwww
sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.yzwx, s0
mul r2.x, v4.w, cb0[16].z
mad r1.w, r1.w, cb0[16].y, -r2.x
mul r1.w, r1.w, v4.z
mul_sat r1.w, r1.w, cb1[2].x
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[16].z
mul_sat r1.w, r1.w, r2.x
mul r0.yzw, r0.yyzw, r0.xxxx
mov_sat r0.x, r0.x
mul o0.w, r1.w, r0.x
mul r0.xyz, r0.yzwy, cb0[2].xyzx
mad r0.xyz, r1.wwww, r0.xyzx, r1.xyzx
mul o0.xyz, r0.xyzx, cb3[2].wwww
ret 
// Approximately 39 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer cb3
// {
//
//   float4 cb3[3];                     // Offset:    0 Size:    48
//
// }
//
// cbuffer PER_BATCH
// {
//
//   float4 PBAlphaTest;                // Offset:    0 Size:    16
//   float4 g_invGridSize;              // Offset:   16 Size:    16 [unused]
//   float4 GlowParams;                 // Offset:   32 Size:    16
//   row_major float4x4 TexGen0;        // Offset:   48 Size:    64 [unused]
//   float4 irreg_kernel_2d[8];         // Offset:  112 Size:   128 [unused]
//   float4 g_gridCenter;               // Offset:  240 Size:    16 [unused]
//   float4 PS_NearFarClipDist;         // Offset:  256 Size:    16
//   float4 vInvShadowMapWH;            // Offset:  272 Size:    16 [unused]
//   float4 g_vGIAttenuation;           // Offset:  288 Size:    16 [unused]
//   float4 fDepthShift;                // Offset:  304 Size:    16 [unused]
//   float4 fOneDivFarDist;             // Offset:  320 Size:    16 [unused]
//   float4 fDepthTestBias;             // Offset:  336 Size:    16 [unused]
//   float4 LSPos;                      // Offset:  352 Size:    16 [unused]
//   row_major float4x4 g_gridMatrix;   // Offset:  368 Size:    64 [unused]
//   float4 g_gridSize;                 // Offset:  432 Size:    16 [unused]
//
// }
//
// cbuffer PER_INSTANCE
// {
//
//   float4 Ambient;                    // Offset:    0 Size:    16
//   float4 ParticleParams[2];          // Offset:   16 Size:    32
//   float4 AvgFogVolumeContrib;        // Offset:   48 Size:    16
//
// }
//
// cbuffer PER_LIGHT
// {
//
//   float4 LDiffuses0;                 // Offset:    0 Size:    16
//   float4 WorldLightsPos0;            // Offset:   16 Size:    16 [unused]
//   float4 LDiffuses1;                 // Offset:   48 Size:    16 [unused]
//   float4 WorldLightsPos1;            // Offset:   64 Size:    16 [unused]
//   float4 LDiffuses2;                 // Offset:   96 Size:    16 [unused]
//   float4 WorldLightsPos2;            // Offset:  112 Size:    16 [unused]
//   float4 LDiffuses3;                 // Offset:  144 Size:    16 [unused]
//   float4 WorldLightsPos3;            // Offset:  160 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sceneDepthSampler_s               sampler      NA          NA    0        1
// diffuseSampler_s                  sampler      NA          NA    1        1
// diffuseSampler                    texture  float4          2d    0        1
// sceneDepthSampler                 texture  float4          2d    1        1
// PER_BATCH                         cbuffer      NA          NA    0        1
// PER_INSTANCE                      cbuffer      NA          NA    1        1
// cb3                               cbuffer      NA          NA    3        1
// PER_LIGHT                         cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// COLOR                    0   xyzw        6     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb3[3], immediateIndexed
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyzw
dcl_output o0.xyzw
dcl_temps 3
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s1
mad r1.x, r0.w, v6.w, -cb0[0].w
lt r1.x, r1.x, l(0.000000)
discard_nz r1.x
mul r0.xyzw, r0.wxyz, v6.wxyz
dp3 r1.x, v2.xyzx, v2.xyzx
rsq r1.x, r1.x
mul r1.yzw, r1.xxxx, v2.xxyz
mad r1.x, v2.z, r1.x, l(1.000000)
mad r1.x, r1.x, l(0.375000), l(0.250000)
mul r2.xyz, r1.xxxx, cb1[0].xyzx
dp3 r1.x, cb3[2].xyzx, r1.yzwy
add r1.y, -r1.x, l(1.000000)
mad r1.x, r1.y, cb1[1].z, r1.x
mul r1.y, l(0.500000), cb1[1].z
max r1.x, r1.x, r1.y
mul r1.xyz, r1.xxxx, cb5[0].xyzx
ne r1.w, l(0.000000), cb1[1].y
movc r2.xyz, r1.wwww, r2.xyzx, cb1[0].xyzx
mad r1.xyz, r1.xyzx, cb1[0].wwww, r2.xyzx
mad r1.xyz, r1.xyzx, r0.yzwy, -v5.xyzx
mad r1.xyz, v5.wwww, r1.xyzx, v5.xyzx
add r1.xyz, r1.xyzx, -cb1[3].xyzx
mad r1.xyz, cb1[3].wwww, r1.xyzx, cb1[3].xyzx
div r2.xy, v4.xyxx, v4.wwww
sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.yzwx, s0
mul r2.x, v4.w, cb0[16].z
mad r1.w, r1.w, cb0[16].y, -r2.x
mul r1.w, r1.w, v4.z
mul_sat r1.w, r1.w, cb1[2].x
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[16].z
mul_sat r1.w, r1.w, r2.x
mul r0.yzw, r0.yyzw, r0.xxxx
mov_sat r0.x, r0.x
mul o0.w, r1.w, r0.x
mul r0.xyz, r0.yzwy, cb0[2].xyzx
mad r0.xyz, r1.wwww, r0.xyzx, r1.xyzx
mul o0.xyz, r0.xyzx, cb3[2].wwww
ret 
// Approximately 39 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
