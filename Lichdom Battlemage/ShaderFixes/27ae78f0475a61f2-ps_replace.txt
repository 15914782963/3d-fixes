// hand pixel shader 2/2 - should move fix to VS, but has decompile error

cbuffer cb3 : register(b3)
{
  float4 cb3[224];
}


cbuffer PER_BATCH : register(b0)
{
  float4 PS_ScreenSize : packoffset(c0);
  float4 PS_NearFarClipDist : packoffset(c1);
  float4 ResInfoBump : packoffset(c2);
}

cbuffer PER_INSTANCE : register(b1)
{
  float4 Ambient : packoffset(c0);
  float4 AvgFogVolumeContrib : packoffset(c1);
  float4 AlphaTest : packoffset(c2);
  float4 SnowVolumeParams[2] : packoffset(c3);
}

cbuffer PER_FRAME : register(b3)
{
  float4 g_PS_SunColor : packoffset(c1);
  float4 g_PS_SunLightDir : packoffset(c2);
  float4 g_PS_FogColor : packoffset(c3);
  float4 g_PS_ProjRatio : packoffset(c223);
}

cbuffer PER_MATERIAL : register(b4)
{
  float4 MatDifColor : packoffset(c0);
  float4 MatSpecColor : packoffset(c1);
  float4 MatEmissiveColor : packoffset(c2);
  float4 __0WrinkleBlend0__1WrinkleBlend1__2WrinkleBlend2__3WrinkleBlend3 : packoffset(c3);
  float3 __0LightWrapCoef__1RimStrength__2Melanin__3 : packoffset(c4);
  float4 __0VNE_Width__1VNE_Glow__2__3VNE_Blend : packoffset(c5);
  float3 __0FresnelBias__1FresnelPower__2FresnelScale__3 : packoffset(c6);
  float3 __0VNE_NoiseInfluence__1VNE_NormalInfluence__2VNE_Tiling__3 : packoffset(c8);
  float3 __0ScatterRadius__1SecondarySpecGloss__2SecondarySpecStrength__3 : packoffset(c9);
  float __0VNE_ColorBlend__1__2__3 : packoffset(c220);
}

cbuffer PER_LIGHT : register(b5)
{
  float4 LDiffuses0 : packoffset(c0);
  float4 WorldLightsPos0 : packoffset(c1);
  float4 ShadowChanMasks0 : packoffset(c2);
  float4 LDiffuses1 : packoffset(c3);
  float4 WorldLightsPos1 : packoffset(c4);
  float4 ShadowChanMasks1 : packoffset(c5);
  float4 LDiffuses2 : packoffset(c6);
  float4 WorldLightsPos2 : packoffset(c7);
  float4 ShadowChanMasks2 : packoffset(c8);
  float4 LDiffuses3 : packoffset(c9);
  float4 WorldLightsPos3 : packoffset(c10);
  float4 ShadowChanMasks3 : packoffset(c11);
}
SamplerState diffuseMapSampler_s : register(s0);
SamplerState glossMapSampler_s : register(s2);
SamplerState shadowOccludeMapSampler_s : register(s3);
SamplerState decalMapSampler_s : register(s4);
SamplerState envMapSamplerCUBE_s : register(s5);
SamplerState sceneDepthSamplerScaled_s : register(s6);
SamplerState volumeNoiseMapSampler_s : register(s7);
SamplerState gradientMapSampler_s : register(s8);
SamplerState VNE_DecalMapSampler_s : register(s9);
SamplerState sceneSpecularAccSampler_s : register(s10);
SamplerState sceneNormalsSampler_s : register(s12);
SamplerState sceneDiffuseAccSampler_s : register(s13);
SamplerState sceneNormalsBentSampler_s : register(s14);
Texture2D<float4> diffuseMapSampler : register(t0);
Texture2D<float4> glossMapSampler : register(t2);
Texture2D<float4> shadowOccludeMapSampler : register(t3);
Texture2D<float4> decalMapSampler : register(t4);
Texture3D<float4> volumeNoiseMapSampler : register(t5);
Texture2D<float4> gradientMapSampler : register(t6);
Texture2D<float4> VNE_DecalMapSampler : register(t7);
TextureCube<float4> envMapSamplerCUBE : register(t8);
Texture2D<float4> sceneDepthSamplerScaled : register(t9);
Texture2D<float4> sceneSpecularAccSampler : register(t10);
Texture2D<float4> sceneNormalsSampler : register(t12);
Texture2D<float4> sceneDiffuseAccSampler : register(t13);
Texture2D<float4> sceneNormalsBentSampler : register(t14);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  float4 v5 : TEXCOORD4,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
v3.x += stereo.x * (v3.w - stereo.y) / 2;

  r0.x = __0ScatterRadius__1SecondarySpecGloss__2SecondarySpecStrength__3.x * cb3[223].z;
  r0.x = 3.499999875e-004 * r0.x;
  r0.x = r0.x / v3.w;
  r0.yz = v3.xy / v3.ww;
  r1.xyzw = r0.xxxx * float4(0.000000e+000,-1.000000e+000,-8.660000e-001,5.000000e-001) + r0.yzyz;
  r2.xyz = sceneDiffuseAccSampler.Sample(sceneDiffuseAccSampler_s, r1.xy).xyz;
  r3.xyz = cb3[1].www * r2.xyz;
  r0.w = sceneDepthSamplerScaled.Sample(sceneDepthSamplerScaled_s, r1.xy).x;
  r1.x = PS_NearFarClipDist.y / PS_NearFarClipDist.z;
  r0.w = r0.w * r1.x + -v3.w;
  r0.w = 5.000000000e+001 * abs(r0.w);
  r0.w = min(r0.w, 1.000000000e+000);
  r4.xyz = sceneDiffuseAccSampler.Sample(sceneDiffuseAccSampler_s, r0.yz).xyz;
  r4.xyz = cb3[1].www * r4.xyz;
  r5.xyz = r4.xyz / cb3[1].www;
  r2.xyz = -r2.xyz * cb3[1].www + r5.xyz;
  r2.xyz = r0.www * r2.xyz + r3.xyz;
  r2.xyz = r5.xyz + r2.xyz;
  r3.xyz = sceneDiffuseAccSampler.Sample(sceneDiffuseAccSampler_s, r1.zw).xyz;
  r0.w = sceneDepthSamplerScaled.Sample(sceneDepthSamplerScaled_s, r1.zw).x;
  r0.w = r0.w * r1.x + -v3.w;
  r0.w = 5.000000000e+001 * abs(r0.w);
  r0.w = min(r0.w, 1.000000000e+000);
  r1.yzw = cb3[1].www * r3.xyz;
  r3.xyz = -r3.xyz * cb3[1].www + r5.xyz;
  r1.yzw = r0.www * r3.xyz + r1.yzw;
  r1.yzw = r2.xyz + r1.yzw;
  r2.xyzw = r0.xxxx * float4(8.660000e-001,5.000000e-001,-1.414000e+000,-1.414000e+000) + r0.yzyz;
  r3.xyz = sceneDiffuseAccSampler.Sample(sceneDiffuseAccSampler_s, r2.xy).xyz;
  r6.xyz = cb3[1].www * r3.xyz;
  r3.xyz = -r3.xyz * cb3[1].www + r5.xyz;
  r0.w = sceneDepthSamplerScaled.Sample(sceneDepthSamplerScaled_s, r2.xy).x;
  r0.w = r0.w * r1.x + -v3.w;
  r0.w = 5.000000000e+001 * abs(r0.w);
  r0.w = min(r0.w, 1.000000000e+000);
  r3.xyz = r0.www * r3.xyz + r6.xyz;
  r1.yzw = r3.xyz + r1.yzw;
  r0.w = sceneDepthSamplerScaled.Sample(sceneDepthSamplerScaled_s, r2.zw).x;
  r2.xyz = sceneDiffuseAccSampler.Sample(sceneDiffuseAccSampler_s, r2.zw).xyz;
  r0.w = r0.w * r1.x + -v3.w;
  r0.w = 5.000000000e+001 * abs(r0.w);
  r0.w = min(r0.w, 1.000000000e+000);
  r3.xyz = cb3[1].www * r2.xyz;
  r2.xyz = -r2.xyz * cb3[1].www + r5.xyz;
  r2.xyz = r0.www * r2.xyz + r3.xyz;
  r2.xyz = r1.yzw * float3(2.500000e-001,2.500000e-001,2.500000e-001) + r2.xyz;
  r1.yzw = float3(5.450000e-002,1.362500e-001,8.775000e-002) * r1.yzw;
  r1.yzw = r5.xyz * float3(2.330000e-001,4.550000e-001,6.490000e-001) + r1.yzw;
  r3.xyzw = r0.xxxx * float4(-1.414000e+000,1.414000e+000,1.414000e+000,1.414000e+000) + r0.yzyz;
  r0.w = sceneDepthSamplerScaled.Sample(sceneDepthSamplerScaled_s, r3.xy).x;
  r0.w = r0.w * r1.x + -v3.w;
  r0.w = 5.000000000e+001 * abs(r0.w);
  r0.w = min(r0.w, 1.000000000e+000);
  r6.xyz = sceneDiffuseAccSampler.Sample(sceneDiffuseAccSampler_s, r3.xy).xyz;
  r7.xyz = cb3[1].www * r6.xyz;
  r6.xyz = -r6.xyz * cb3[1].www + r5.xyz;
  r6.xyz = r0.www * r6.xyz + r7.xyz;
  r2.xyz = r6.xyz + r2.xyz;
  r0.w = sceneDepthSamplerScaled.Sample(sceneDepthSamplerScaled_s, r3.zw).x;
  r3.xyz = sceneDiffuseAccSampler.Sample(sceneDiffuseAccSampler_s, r3.zw).xyz;
  r0.w = r0.w * r1.x + -v3.w;
  r0.w = 5.000000000e+001 * abs(r0.w);
  r0.w = min(r0.w, 1.000000000e+000);
  r6.xyz = cb3[1].www * r3.xyz;
  r3.xyz = -r3.xyz * cb3[1].www + r5.xyz;
  r3.xyz = r0.www * r3.xyz + r6.xyz;
  r2.xyz = r3.xyz + r2.xyz;
  r3.xyzw = r0.xxxx * float4(1.414000e+000,-1.414000e+000,-4.000000e+000,0.000000e+000) + r0.yzyz;
  r0.w = sceneDepthSamplerScaled.Sample(sceneDepthSamplerScaled_s, r3.xy).x;
  r0.w = r0.w * r1.x + -v3.w;
  r0.w = 5.000000000e+001 * abs(r0.w);
  r0.w = min(r0.w, 1.000000000e+000);
  r6.xyz = sceneDiffuseAccSampler.Sample(sceneDiffuseAccSampler_s, r3.xy).xyz;
  r7.xyz = -r6.xyz * cb3[1].www + r5.xyz;
  r6.xyz = cb3[1].www * r6.xyz;
  r6.xyz = r0.www * r7.xyz + r6.xyz;
  r2.xyz = r6.xyz + r2.xyz;
  r0.w = sceneDepthSamplerScaled.Sample(sceneDepthSamplerScaled_s, r3.zw).x;
  r3.xyz = sceneDiffuseAccSampler.Sample(sceneDiffuseAccSampler_s, r3.zw).xyz;
  r0.w = r0.w * r1.x + -v3.w;
  r0.w = 5.000000000e+001 * abs(r0.w);
  r0.w = min(r0.w, 1.000000000e+000);
  r6.xyz = -r3.xyz * cb3[1].www + r5.xyz;
  r3.xyz = cb3[1].www * r3.xyz;
  r3.xyz = r0.www * r6.xyz + r3.xyz;
  r3.xyz = r2.xyz * float3(2.000000e-001,2.000000e-001,2.000000e-001) + r3.xyz;
  r1.yzw = r2.xyz * float3(7.160000e-002,0.000000e+000,0.000000e+000) + r1.yzw;
  r2.xyzw = r0.xxxx * float4(4.000000e+000,0.000000e+000,0.000000e+000,4.000000e+000) + r0.yzyz;
  r0.xw = r0.xx * float2(0.000000e+000,-4.000000e+000) + r0.yz;
  r3.w = sceneDepthSamplerScaled.Sample(sceneDepthSamplerScaled_s, r2.xy).x;
  r3.w = r3.w * r1.x + -v3.w;
  r3.w = 5.000000000e+001 * abs(r3.w);
  r3.w = min(r3.w, 1.000000000e+000);
  r6.xyz = sceneDiffuseAccSampler.Sample(sceneDiffuseAccSampler_s, r2.xy).xyz;
  r7.xyz = -r6.xyz * cb3[1].www + r5.xyz;
  r6.xyz = cb3[1].www * r6.xyz;
  r6.xyz = r3.www * r7.xyz + r6.xyz;
  r3.xyz = r6.xyz + r3.xyz;
  r2.x = sceneDepthSamplerScaled.Sample(sceneDepthSamplerScaled_s, r2.zw).x;
  r2.yzw = sceneDiffuseAccSampler.Sample(sceneDiffuseAccSampler_s, r2.zw).xyz;
  r2.x = r2.x * r1.x + -v3.w;
  r2.x = 5.000000000e+001 * abs(r2.x);
  r2.x = min(r2.x, 1.000000000e+000);
  r6.xyz = -r2.yzw * cb3[1].www + r5.xyz;
  r2.yzw = cb3[1].www * r2.yzw;
  r2.xyz = r2.xxx * r6.xyz + r2.yzw;
  r2.xyz = r3.xyz + r2.xyz;
  r2.w = sceneDepthSamplerScaled.Sample(sceneDepthSamplerScaled_s, r0.xw).x;
  r3.xyz = sceneDiffuseAccSampler.Sample(sceneDiffuseAccSampler_s, r0.xw).xyz;
  r0.x = r2.w * r1.x + -v3.w;
  r0.x = 5.000000000e+001 * abs(r0.x);
  r0.x = min(r0.x, 1.000000000e+000);
  r5.xyz = -r3.xyz * cb3[1].www + r5.xyz;
  r3.xyz = cb3[1].www * r3.xyz;
  r3.xyz = r0.xxx * r5.xyz + r3.xyz;
  r2.xyz = r3.xyz + r2.xyz;
  r1.xyz = r2.xyz * float3(3.820000e-002,0.000000e+000,0.000000e+000) + r1.yzw;
  r1.xyz = cb3[1].www * r1.xyz;
  r2.xyz = cb3[2].xyz;
  r2.w = 2.820900083e-001;
  r3.xyzw = sceneNormalsBentSampler.Sample(sceneNormalsBentSampler_s, r0.yz).xyzw;
  r3.xyzw = r3.xyzw * float4(9.772000e-001,9.772000e-001,9.772000e-001,1.000000e+000) + float4(-4.886000e-001,-4.886000e-001,-4.886000e-001,0.000000e+000);
  r0.x = dot(r2.xyzw, r3.xyzw);
  r0.x = saturate(AlphaTest.z * r0.x);
  r0.x = 1.000000000e+000 + -r0.x;
  r2.xyz = sceneNormalsSampler.Sample(sceneNormalsSampler_s, r0.yz).xyz;
  r2.xyz = r2.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r0.w = dot(r2.xyz, r2.xyz);
  r0.w = rsqrt(r0.w);
  r2.xyz = r2.xyz * r0.www;
  r0.w = dot(cb3[2].xyz, r2.xyz);
  r1.w = r0.w * r0.x;
  r0.x = r0.w * r0.x + __0LightWrapCoef__1RimStrength__2Melanin__3.x;
  r1.w = saturate(r1.w);
  r0.w = dot(-v2.xyz, -v2.xyz);
  r0.w = rsqrt(r0.w);
  r3.xyz = -v2.xyz * r0.www + cb3[2].xyz;
  r5.xyz = -v2.xyz * r0.www;
  r0.w = dot(r3.xyz, r3.xyz);
  r0.w = rsqrt(r0.w);
  r3.xyz = r3.xyz * r0.www;
  r0.w = saturate(dot(r2.xyz, r3.xyz));
  r0.w = log2(r0.w);
  r3.xyzw = glossMapSampler.Sample(glossMapSampler_s, v1.xy).xyzw;
  r6.xyzw = MatSpecColor.wxyz * r3.wxyz;
  r2.w = r6.x * 1.000000000e+001 + 1.000000000e+000;
  r2.w = exp2(r2.w);
  r0.w = r2.w * r0.w;
  r2.w = r2.w * 1.250000000e-001 + 2.500000000e-001;
  r0.w = exp2(r0.w);
  r0.w = r2.w * r0.w;
  r0.w = r0.w * r1.w;
  r7.xyz = LDiffuses0.xyz * LDiffuses0.www;
  r7.xyz = r7.xyz * r0.www;
  r8.xyz = sceneSpecularAccSampler.Sample(sceneSpecularAccSampler_s, r0.yz).xyz;
  r0.y = shadowOccludeMapSampler.Sample(shadowOccludeMapSampler_s, r0.yz).w;
  r0.y = 1.000000000e+000 + -r0.y;
  r7.xyz = r7.xyz * r0.yyy + r8.xyz;
  r8.xyzw = v1.xyxy * float4(5.000000e-001,5.000000e-001,5.000000e-001,5.000000e-001) + float4(5.000000e-001,0.000000e+000,0.000000e+000,5.000000e-001);
  r9.xyz = decalMapSampler.Sample(decalMapSampler_s, r8.xy).xyz;
  r8.xyz = decalMapSampler.Sample(decalMapSampler_s, r8.zw).xyz;
  r10.xyzw = diffuseMapSampler.Sample(diffuseMapSampler_s, v1.xy).xyzw;
  r9.xyz = -r10.xyz + r9.xyz;
  r9.xyz = __0WrinkleBlend0__1WrinkleBlend1__2WrinkleBlend2__3WrinkleBlend3.yyy * r9.xyz;
  r11.xyzw = float4(5.000000e-001,5.000000e-001,8.000000e+000,8.000000e+000) * v1.xyxy;
  r12.xyz = decalMapSampler.Sample(decalMapSampler_s, r11.xy).xyz;
  r11.xyz = VNE_DecalMapSampler.Sample(VNE_DecalMapSampler_s, r11.zw).xyz;
  r12.xyz = r12.xyz + -r10.xyz;
  r9.xyz = r12.xyz * __0WrinkleBlend0__1WrinkleBlend1__2WrinkleBlend2__3WrinkleBlend3.xxx + r9.xyz;
  r8.xyz = -r10.xyz + r8.xyz;
  r8.xyz = r8.xyz * __0WrinkleBlend0__1WrinkleBlend1__2WrinkleBlend2__3WrinkleBlend3.zzz + r9.xyz;
  r0.zw = v1.xy * float2(5.000000e-001,5.000000e-001) + float2(5.000000e-001,5.000000e-001);
  r9.xyz = decalMapSampler.Sample(decalMapSampler_s, r0.zw).xyz;
  r9.xyz = r9.xyz + -r10.xyz;
  r8.xyz = r9.xyz * __0WrinkleBlend0__1WrinkleBlend1__2WrinkleBlend2__3WrinkleBlend3.www + r8.xyz;
  r8.xyz = saturate(r10.xyz + r8.xyz);
  r0.z = v5.w * r10.w;
  r0.w = dot(r8.xyz, float3(3.300000e-001,5.900000e-001,1.100000e-001));
  r9.xyz = r8.xyz * r0.www + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r9.xyz = __0LightWrapCoef__1RimStrength__2Melanin__3.zzz * r9.xyz + float3(1.000000e+000,1.000000e+000,1.000000e+000);
  r8.xyz = r9.xyz * r8.xyz;
  r8.xyz = sqrt(r8.xyz);
  r9.xyz = float3(1.000000e-002,1.000000e-002,1.000000e-002) + r8.xyz;
  r4.xyz = r4.xyz / r9.xyz;
  r0.w = __0LightWrapCoef__1RimStrength__2Melanin__3.x + 1.000000000e+000;
  r0.x = saturate(r0.x / r0.w);
  r9.xyz = LDiffuses0.xyz * r0.xxx;
  r0.xyw = r9.xyz * r0.yyy + r4.xyz;
  r4.xyz = MatEmissiveColor.xyz + r0.xyw;
  r4.xyz = float3(-1.000000e+000,-1.000000e+000,-1.000000e+000) + r4.xyz;
  r4.xyz = MatDifColor.www * r4.xyz + float3(1.000000e+000,1.000000e+000,1.000000e+000);
  r1.w = dot(r5.xyz, r2.xyz);
  r2.w = r1.w + r1.w;
  r5.xyz = r2.www * r2.xyz + -r5.xyz;
  r2.w = -r6.x * 6.000000000e+000 + 6.000000000e+000;
  r5.xyzw = envMapSamplerCUBE.SampleLevel(envMapSamplerCUBE_s, r5.xyz, r2.w).xyzw;
  r2.w = 1.600000000e+001 * r5.w;
  r5.xyz = r5.xyz * r2.www;
  r4.xyz = r5.xyz * r4.xyz + r7.xyz;
  r7.xyz = MatDifColor.www * r0.xyw + float3(1.000000e+000,1.000000e+000,1.000000e+000);
  r4.xyz = r5.xyz * r7.xyz + r4.xyz;
  r2.w = saturate(r1.w);
  r1.w = 1.000000000e+000 + -r1.w;
  r1.w = r1.w * r1.w;
  r1.w = min(r1.w, 1.000000000e+000);
  r1.w = r1.w + r1.w;
  r1.w = min(r1.w, 1.000000000e+000);
  r4.w = 9.999999975e-007 + r2.w;
  r2.w = 1.001000047e+000 + -r2.w;
  r2.w = log2(r2.w);
  r2.w = __0FresnelBias__1FresnelPower__2FresnelScale__3.y * r2.w;
  r2.w = exp2(r2.w);
  r2.w = __0FresnelBias__1FresnelPower__2FresnelScale__3.z * r2.w + __0FresnelBias__1FresnelPower__2FresnelScale__3.x;
  r4.w = log2(r4.w);
  r3.w = __0ScatterRadius__1SecondarySpecGloss__2SecondarySpecStrength__3.y * r3.w;
  r4.w = r3.w * r4.w;
  r3.w = r3.w * 1.250000000e-001 + 2.500000000e-001;
  r4.w = exp2(r4.w);
  r3.w = r4.w * r3.w;
  r5.xyz = r3.www * r0.xyw;
  r4.xyz = r5.xyz * __0ScatterRadius__1SecondarySpecGloss__2SecondarySpecStrength__3.zzz + r4.xyz;
  r3.xyz = r4.xyz * r3.xyz;
  r3.xyz = MatSpecColor.xyz * r3.xyz;
  r3.xyz = r3.xyz * r2.www;
  r2.w = 1.000000e+000 / __0VNE_NoiseInfluence__1VNE_NormalInfluence__2VNE_Tiling__3.z;
  r2.w = __0VNE_NoiseInfluence__1VNE_NormalInfluence__2VNE_Tiling__3.y * r2.w;
  r2.xyz = r2.xyz * r2.www;
  r2.xyz = r2.xyz * float3(1.000000e-001,1.000000e-001,1.000000e-001) + v4.xyz;
  r2.xyz = __0VNE_NoiseInfluence__1VNE_NormalInfluence__2VNE_Tiling__3.zzz * r2.xyz;
  r2.x = volumeNoiseMapSampler.Sample(volumeNoiseMapSampler_s, r2.xyz).x;
  r2.x = r2.x * __0VNE_NoiseInfluence__1VNE_NormalInfluence__2VNE_Tiling__3.x + v4.w;
  r2.x = -__0VNE_Width__1VNE_Glow__2__3VNE_Blend.w + r2.x;
  r2.y = max(9.999999747e-006, __0VNE_Width__1VNE_Glow__2__3VNE_Blend.x);
  r2.y = min(r2.y, 1.000000000e+000);
  r2.x = r2.x / r2.y;
  r2.x = saturate(1.000000000e+000 + r2.x);
  r2.x = 1.000000000e+000 + -r2.x;
  r2.yz = float2(2.500000e-001,7.500000e-001);
  r2.z = gradientMapSampler.Sample(gradientMapSampler_s, r2.xz).x;
  r4.xyzw = gradientMapSampler.Sample(gradientMapSampler_s, r2.xy).xyzw;
  r2.x = __0VNE_Width__1VNE_Glow__2__3VNE_Blend.y * 8.000000000e+000;
  r2.x = exp2(r2.x);
  r4.xyz = r4.xyz * r2.xxx;
  r2.xyw = r11.xyz * r2.xxx + -r4.xyz;
  r2.xyz = r2.zzz * r2.xyw + r4.xyz;
  r2.xyz = r2.xyz + -r8.xyz;
  r2.w = __0VNE_ColorBlend__1__2__3 * r4.w;
  o0.w = r4.w * r0.z;
  r2.xyz = r2.www * r2.xyz + r8.xyz;
  r2.xyz = MatDifColor.xyz * r2.xyz;
  r1.xyz = r1.xyz * r2.xyz + r3.xyz;
  r0.z = r1.w * r1.w;
  r1.w = -r1.w * 2.000000000e+000 + 3.000000000e+000;
  r0.z = r1.w * r0.z;
  r0.z = __0LightWrapCoef__1RimStrength__2Melanin__3.y * r0.z;
  r0.xyz = r0.zzz * r0.xyw;
  r0.xyz = r0.xyz * r6.yzw + r1.xyz;
  o0.xyz = cb3[2].www * r0.xyz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer PER_BATCH
// {
//
//   float4 PS_ScreenSize;              // Offset:    0 Size:    16 [unused]
//   float4 PS_NearFarClipDist;         // Offset:   16 Size:    16
//   float4 ResInfoBump;                // Offset:   32 Size:    16 [unused]
//
// }
//
// cbuffer PER_INSTANCE
// {
//
//   float4 Ambient;                    // Offset:    0 Size:    16 [unused]
//   float4 AvgFogVolumeContrib;        // Offset:   16 Size:    16 [unused]
//   float4 AlphaTest;                  // Offset:   32 Size:    16
//   float4 SnowVolumeParams[2];        // Offset:   48 Size:    32 [unused]
//
// }
//
// cbuffer PER_FRAME
// {
//
//   float4 g_PS_SunColor;              // Offset:   16 Size:    16
//   float4 g_PS_SunLightDir;           // Offset:   32 Size:    16
//   float4 g_PS_FogColor;              // Offset:   48 Size:    16 [unused]
//   float4 g_PS_ProjRatio;             // Offset: 3568 Size:    16
//
// }
//
// cbuffer PER_MATERIAL
// {
//
//   float4 MatDifColor;                // Offset:    0 Size:    16
//   float4 MatSpecColor;               // Offset:   16 Size:    16
//   float4 MatEmissiveColor;           // Offset:   32 Size:    16
//   float4 __0WrinkleBlend0__1WrinkleBlend1__2WrinkleBlend2__3WrinkleBlend3;// Offset:   48 Size:    16
//   float3 __0LightWrapCoef__1RimStrength__2Melanin__3;// Offset:   64 Size:    12
//   float4 __0VNE_Width__1VNE_Glow__2__3VNE_Blend;// Offset:   80 Size:    16
//   float3 __0FresnelBias__1FresnelPower__2FresnelScale__3;// Offset:   96 Size:    12
//   float3 __0VNE_NoiseInfluence__1VNE_NormalInfluence__2VNE_Tiling__3;// Offset:  128 Size:    12
//   float3 __0ScatterRadius__1SecondarySpecGloss__2SecondarySpecStrength__3;// Offset:  144 Size:    12
//   float __0VNE_ColorBlend__1__2__3;  // Offset: 3520 Size:     4
//
// }
//
// cbuffer PER_LIGHT
// {
//
//   float4 LDiffuses0;                 // Offset:    0 Size:    16
//   float4 WorldLightsPos0;            // Offset:   16 Size:    16 [unused]
//   float4 ShadowChanMasks0;           // Offset:   32 Size:    16 [unused]
//   float4 LDiffuses1;                 // Offset:   48 Size:    16 [unused]
//   float4 WorldLightsPos1;            // Offset:   64 Size:    16 [unused]
//   float4 ShadowChanMasks1;           // Offset:   80 Size:    16 [unused]
//   float4 LDiffuses2;                 // Offset:   96 Size:    16 [unused]
//   float4 WorldLightsPos2;            // Offset:  112 Size:    16 [unused]
//   float4 ShadowChanMasks2;           // Offset:  128 Size:    16 [unused]
//   float4 LDiffuses3;                 // Offset:  144 Size:    16 [unused]
//   float4 WorldLightsPos3;            // Offset:  160 Size:    16 [unused]
//   float4 ShadowChanMasks3;           // Offset:  176 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// diffuseMapSampler                 sampler      NA          NA    0        1
// glossMapSampler                   sampler      NA          NA    2        1
// shadowOccludeMapSampler           sampler      NA          NA    3        1
// decalMapSampler                   sampler      NA          NA    4        1
// envMapSamplerCUBE                 sampler      NA          NA    5        1
// sceneDepthSamplerScaled           sampler      NA          NA    6        1
// volumeNoiseMapSampler             sampler      NA          NA    7        1
// gradientMapSampler                sampler      NA          NA    8        1
// VNE_DecalMapSampler               sampler      NA          NA    9        1
// sceneSpecularAccSampler           sampler      NA          NA   10        1
// sceneNormalsSampler               sampler      NA          NA   12        1
// sceneDiffuseAccSampler            sampler      NA          NA   13        1
// sceneNormalsBentSampler           sampler      NA          NA   14        1
// diffuseMapSampler                 texture  float4          2d    0        1
// glossMapSampler                   texture  float4          2d    2        1
// shadowOccludeMapSampler           texture  float4          2d    3        1
// decalMapSampler                   texture  float4          2d    4        1
// volumeNoiseMapSampler             texture  float4          3d    5        1
// gradientMapSampler                texture  float4          2d    6        1
// VNE_DecalMapSampler               texture  float4          2d    7        1
// envMapSamplerCUBE                 texture  float4        cube    8        1
// sceneDepthSamplerScaled           texture  float4          2d    9        1
// sceneSpecularAccSampler           texture  float4          2d   10        1
// sceneNormalsSampler               texture  float4          2d   12        1
// sceneDiffuseAccSampler            texture  float4          2d   13        1
// sceneNormalsBentSampler           texture  float4          2d   14        1
// PER_BATCH                         cbuffer      NA          NA    0        1
// PER_INSTANCE                      cbuffer      NA          NA    1        1
// PER_FRAME                         cbuffer      NA          NA    3        1
// PER_MATERIAL                      cbuffer      NA          NA    4        1
// PER_LIGHT                         cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy w
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[2], immediateIndexed
dcl_constantbuffer cb1[3], immediateIndexed
dcl_constantbuffer cb3[224], immediateIndexed
dcl_constantbuffer cb4[221], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_sampler s12, mode_default
dcl_sampler s13, mode_default
dcl_sampler s14, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear centroid v3.xyw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.w
dcl_output o0.xyzw
dcl_temps 13
mul r0.x, cb3[223].z, cb4[9].x
mul r0.x, r0.x, l(0.000350)
div r0.x, r0.x, v3.w
div r0.yz, v3.xxyx, v3.wwww
mad r1.xyzw, r0.xxxx, l(0.000000, -1.000000, -0.866000, 0.500000), r0.yzyz
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r1.xyxx, t13.xyzw, s13
mul r3.xyz, r2.xyzx, cb3[1].wwww
sample_indexable(texture2d)(float,float,float,float) r0.w, r1.xyxx, t9.yzwx, s6
div r1.x, cb0[1].y, cb0[1].z
mad r0.w, r0.w, r1.x, -v3.w
mul r0.w, |r0.w|, l(50.000000)
min r0.w, r0.w, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r0.yzyy, t13.xyzw, s13
mul r4.xyz, r4.xyzx, cb3[1].wwww
div r5.xyz, r4.xyzx, cb3[1].wwww
mad r2.xyz, -r2.xyzx, cb3[1].wwww, r5.xyzx
mad r2.xyz, r0.wwww, r2.xyzx, r3.xyzx
add r2.xyz, r2.xyzx, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r1.zwzz, t13.xyzw, s13
sample_indexable(texture2d)(float,float,float,float) r0.w, r1.zwzz, t9.yzwx, s6
mad r0.w, r0.w, r1.x, -v3.w
mul r0.w, |r0.w|, l(50.000000)
min r0.w, r0.w, l(1.000000)
mul r1.yzw, r3.xxyz, cb3[1].wwww
mad r3.xyz, -r3.xyzx, cb3[1].wwww, r5.xyzx
mad r1.yzw, r0.wwww, r3.xxyz, r1.yyzw
add r1.yzw, r1.yyzw, r2.xxyz
mad r2.xyzw, r0.xxxx, l(0.866000, 0.500000, -1.414000, -1.414000), r0.yzyz
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r2.xyxx, t13.xyzw, s13
mul r6.xyz, r3.xyzx, cb3[1].wwww
mad r3.xyz, -r3.xyzx, cb3[1].wwww, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t9.yzwx, s6
mad r0.w, r0.w, r1.x, -v3.w
mul r0.w, |r0.w|, l(50.000000)
min r0.w, r0.w, l(1.000000)
mad r3.xyz, r0.wwww, r3.xyzx, r6.xyzx
add r1.yzw, r1.yyzw, r3.xxyz
sample_indexable(texture2d)(float,float,float,float) r0.w, r2.zwzz, t9.yzwx, s6
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.zwzz, t13.xyzw, s13
mad r0.w, r0.w, r1.x, -v3.w
mul r0.w, |r0.w|, l(50.000000)
min r0.w, r0.w, l(1.000000)
mul r3.xyz, r2.xyzx, cb3[1].wwww
mad r2.xyz, -r2.xyzx, cb3[1].wwww, r5.xyzx
mad r2.xyz, r0.wwww, r2.xyzx, r3.xyzx
mad r2.xyz, r1.yzwy, l(0.250000, 0.250000, 0.250000, 0.000000), r2.xyzx
mul r1.yzw, r1.yyzw, l(0.000000, 0.054500, 0.136250, 0.087750)
mad r1.yzw, r5.xxyz, l(0.000000, 0.233000, 0.455000, 0.649000), r1.yyzw
mad r3.xyzw, r0.xxxx, l(-1.414000, 1.414000, 1.414000, 1.414000), r0.yzyz
sample_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t9.yzwx, s6
mad r0.w, r0.w, r1.x, -v3.w
mul r0.w, |r0.w|, l(50.000000)
min r0.w, r0.w, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r3.xyxx, t13.xyzw, s13
mul r7.xyz, r6.xyzx, cb3[1].wwww
mad r6.xyz, -r6.xyzx, cb3[1].wwww, r5.xyzx
mad r6.xyz, r0.wwww, r6.xyzx, r7.xyzx
add r2.xyz, r2.xyzx, r6.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, r3.zwzz, t9.yzwx, s6
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zwzz, t13.xyzw, s13
mad r0.w, r0.w, r1.x, -v3.w
mul r0.w, |r0.w|, l(50.000000)
min r0.w, r0.w, l(1.000000)
mul r6.xyz, r3.xyzx, cb3[1].wwww
mad r3.xyz, -r3.xyzx, cb3[1].wwww, r5.xyzx
mad r3.xyz, r0.wwww, r3.xyzx, r6.xyzx
add r2.xyz, r2.xyzx, r3.xyzx
mad r3.xyzw, r0.xxxx, l(1.414000, -1.414000, -4.000000, 0.000000), r0.yzyz
sample_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t9.yzwx, s6
mad r0.w, r0.w, r1.x, -v3.w
mul r0.w, |r0.w|, l(50.000000)
min r0.w, r0.w, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r3.xyxx, t13.xyzw, s13
mad r7.xyz, -r6.xyzx, cb3[1].wwww, r5.xyzx
mul r6.xyz, r6.xyzx, cb3[1].wwww
mad r6.xyz, r0.wwww, r7.xyzx, r6.xyzx
add r2.xyz, r2.xyzx, r6.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, r3.zwzz, t9.yzwx, s6
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zwzz, t13.xyzw, s13
mad r0.w, r0.w, r1.x, -v3.w
mul r0.w, |r0.w|, l(50.000000)
min r0.w, r0.w, l(1.000000)
mad r6.xyz, -r3.xyzx, cb3[1].wwww, r5.xyzx
mul r3.xyz, r3.xyzx, cb3[1].wwww
mad r3.xyz, r0.wwww, r6.xyzx, r3.xyzx
mad r3.xyz, r2.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r3.xyzx
mad r1.yzw, r2.xxyz, l(0.000000, 0.071600, 0.000000, 0.000000), r1.yyzw
mad r2.xyzw, r0.xxxx, l(4.000000, 0.000000, 0.000000, 4.000000), r0.yzyz
mad r0.xw, r0.xxxx, l(0.000000, 0.000000, 0.000000, -4.000000), r0.yyyz
sample_indexable(texture2d)(float,float,float,float) r3.w, r2.xyxx, t9.yzwx, s6
mad r3.w, r3.w, r1.x, -v3.w
mul r3.w, |r3.w|, l(50.000000)
min r3.w, r3.w, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r2.xyxx, t13.xyzw, s13
mad r7.xyz, -r6.xyzx, cb3[1].wwww, r5.xyzx
mul r6.xyz, r6.xyzx, cb3[1].wwww
mad r6.xyz, r3.wwww, r7.xyzx, r6.xyzx
add r3.xyz, r3.xyzx, r6.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t9.xyzw, s6
sample_indexable(texture2d)(float,float,float,float) r2.yzw, r2.zwzz, t13.wxyz, s13
mad r2.x, r2.x, r1.x, -v3.w
mul r2.x, |r2.x|, l(50.000000)
min r2.x, r2.x, l(1.000000)
mad r6.xyz, -r2.yzwy, cb3[1].wwww, r5.xyzx
mul r2.yzw, r2.yyzw, cb3[1].wwww
mad r2.xyz, r2.xxxx, r6.xyzx, r2.yzwy
add r2.xyz, r2.xyzx, r3.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.w, r0.xwxx, t9.yzwx, s6
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r0.xwxx, t13.xyzw, s13
mad r0.x, r2.w, r1.x, -v3.w
mul r0.x, |r0.x|, l(50.000000)
min r0.x, r0.x, l(1.000000)
mad r5.xyz, -r3.xyzx, cb3[1].wwww, r5.xyzx
mul r3.xyz, r3.xyzx, cb3[1].wwww
mad r3.xyz, r0.xxxx, r5.xyzx, r3.xyzx
add r2.xyz, r2.xyzx, r3.xyzx
mad r1.xyz, r2.xyzx, l(0.038200, 0.000000, 0.000000, 0.000000), r1.yzwy
mul r1.xyz, r1.xyzx, cb3[1].wwww
mov r2.xyz, cb3[2].xyzx
mov r2.w, l(0.282090)
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r0.yzyy, t14.xyzw, s14
mad r3.xyzw, r3.xyzw, l(0.977200, 0.977200, 0.977200, 1.000000), l(-0.488600, -0.488600, -0.488600, 0.000000)
dp4 r0.x, r2.xyzw, r3.xyzw
mul_sat r0.x, r0.x, cb1[2].z
add r0.x, -r0.x, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r0.yzyy, t12.xyzw, s12
mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, cb3[2].xyzx, r2.xyzx
mul r1.w, r0.x, r0.w
mad r0.x, r0.w, r0.x, cb4[4].x
mov_sat r1.w, r1.w
dp3 r0.w, -v2.xyzx, -v2.xyzx
rsq r0.w, r0.w
mad r3.xyz, -v2.xyzx, r0.wwww, cb3[2].xyzx
mul r5.xyz, r0.wwww, -v2.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3_sat r0.w, r2.xyzx, r3.xyzx
log r0.w, r0.w
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v1.xyxx, t2.xyzw, s2
mul r6.xyzw, r3.wxyz, cb4[1].wxyz
mad r2.w, r6.x, l(10.000000), l(1.000000)
exp r2.w, r2.w
mul r0.w, r0.w, r2.w
mad r2.w, r2.w, l(0.125000), l(0.250000)
exp r0.w, r0.w
mul r0.w, r0.w, r2.w
mul r0.w, r1.w, r0.w
mul r7.xyz, cb5[0].wwww, cb5[0].xyzx
mul r7.xyz, r0.wwww, r7.xyzx
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r0.yzyy, t10.xyzw, s10
sample_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xwyz, s3
add r0.y, -r0.y, l(1.000000)
mad r7.xyz, r7.xyzx, r0.yyyy, r8.xyzx
mad r8.xyzw, v1.xyxy, l(0.500000, 0.500000, 0.500000, 0.500000), l(0.500000, 0.000000, 0.000000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r8.xyxx, t4.xyzw, s4
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r8.zwzz, t4.xyzw, s4
sample_indexable(texture2d)(float,float,float,float) r10.xyzw, v1.xyxx, t0.xyzw, s0
add r9.xyz, r9.xyzx, -r10.xyzx
mul r9.xyz, r9.xyzx, cb4[3].yyyy
mul r11.xyzw, v1.xyxy, l(0.500000, 0.500000, 8.000000, 8.000000)
sample_indexable(texture2d)(float,float,float,float) r12.xyz, r11.xyxx, t4.xyzw, s4
sample_indexable(texture2d)(float,float,float,float) r11.xyz, r11.zwzz, t7.xyzw, s9
add r12.xyz, -r10.xyzx, r12.xyzx
mad r9.xyz, r12.xyzx, cb4[3].xxxx, r9.xyzx
add r8.xyz, r8.xyzx, -r10.xyzx
mad r8.xyz, r8.xyzx, cb4[3].zzzz, r9.xyzx
mad r0.zw, v1.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r0.zwzz, t4.xyzw, s4
add r9.xyz, -r10.xyzx, r9.xyzx
mad r8.xyz, r9.xyzx, cb4[3].wwww, r8.xyzx
add_sat r8.xyz, r8.xyzx, r10.xyzx
mul r0.z, r10.w, v5.w
dp3 r0.w, r8.xyzx, l(0.330000, 0.590000, 0.110000, 0.000000)
mad r9.xyz, r8.xyzx, r0.wwww, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r9.xyz, cb4[4].zzzz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r8.xyz, r8.xyzx, r9.xyzx
sqrt r8.xyz, r8.xyzx
add r9.xyz, r8.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
div r4.xyz, r4.xyzx, r9.xyzx
add r0.w, l(1.000000), cb4[4].x
div_sat r0.x, r0.x, r0.w
mul r9.xyz, r0.xxxx, cb5[0].xyzx
mad r0.xyw, r9.xyxz, r0.yyyy, r4.xyxz
add r4.xyz, r0.xywx, cb4[2].xyzx
add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r4.xyz, cb4[0].wwww, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
dp3 r1.w, r5.xyzx, r2.xyzx
add r2.w, r1.w, r1.w
mad r5.xyz, r2.wwww, r2.xyzx, -r5.xyzx
mad r2.w, -r6.x, l(6.000000), l(6.000000)
sample_l_indexable(texturecube)(float,float,float,float) r5.xyzw, r5.xyzx, t8.xyzw, s5, r2.w
mul r2.w, r5.w, l(16.000000)
mul r5.xyz, r2.wwww, r5.xyzx
mad r4.xyz, r5.xyzx, r4.xyzx, r7.xyzx
mad r7.xyz, cb4[0].wwww, r0.xywx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r4.xyz, r5.xyzx, r7.xyzx, r4.xyzx
mov_sat r2.w, r1.w
add r1.w, -r1.w, l(1.000000)
mul r1.w, r1.w, r1.w
min r1.w, r1.w, l(1.000000)
add r1.w, r1.w, r1.w
min r1.w, r1.w, l(1.000000)
add r4.w, r2.w, l(0.000001)
add r2.w, -r2.w, l(1.001000)
log r2.w, r2.w
mul r2.w, r2.w, cb4[6].y
exp r2.w, r2.w
mad r2.w, cb4[6].z, r2.w, cb4[6].x
log r4.w, r4.w
mul r3.w, r3.w, cb4[9].y
mul r4.w, r4.w, r3.w
mad r3.w, r3.w, l(0.125000), l(0.250000)
exp r4.w, r4.w
mul r3.w, r3.w, r4.w
mul r5.xyz, r0.xywx, r3.wwww
mad r4.xyz, r5.xyzx, cb4[9].zzzz, r4.xyzx
mul r3.xyz, r3.xyzx, r4.xyzx
mul r3.xyz, r3.xyzx, cb4[1].xyzx
mul r3.xyz, r2.wwww, r3.xyzx
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb4[8].z
mul r2.w, r2.w, cb4[8].y
mul r2.xyz, r2.wwww, r2.xyzx
mad r2.xyz, r2.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), v4.xyzx
mul r2.xyz, r2.xyzx, cb4[8].zzzz
sample_indexable(texture3d)(float,float,float,float) r2.x, r2.xyzx, t5.xyzw, s7
mad r2.x, r2.x, cb4[8].x, v4.w
add r2.x, r2.x, -cb4[5].w
max r2.y, l(0.000010), cb4[5].x
min r2.y, r2.y, l(1.000000)
div r2.x, r2.x, r2.y
add_sat r2.x, r2.x, l(1.000000)
add r2.x, -r2.x, l(1.000000)
mov r2.yz, l(0,0.250000,0.750000,0)
sample_indexable(texture2d)(float,float,float,float) r2.z, r2.xzxx, t6.yzxw, s8
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.xyxx, t6.xyzw, s8
mul r2.x, l(8.000000), cb4[5].y
exp r2.x, r2.x
mul r4.xyz, r2.xxxx, r4.xyzx
mad r2.xyw, r11.xyxz, r2.xxxx, -r4.xyxz
mad r2.xyz, r2.zzzz, r2.xywx, r4.xyzx
add r2.xyz, -r8.xyzx, r2.xyzx
mul r2.w, r4.w, cb4[220].x
mul o0.w, r0.z, r4.w
mad r2.xyz, r2.wwww, r2.xyzx, r8.xyzx
mul r2.xyz, r2.xyzx, cb4[0].xyzx
mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
mul r0.z, r1.w, r1.w
mad r1.w, -r1.w, l(2.000000), l(3.000000)
mul r0.z, r0.z, r1.w
mul r0.z, r0.z, cb4[4].y
mul r0.xyz, r0.xywx, r0.zzzz
mad r0.xyz, r0.xyzx, r6.yzwy, r1.xyzx
mul o0.xyz, r0.xyzx, cb3[2].wwww
ret 
// Approximately 259 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer cb3
// {
//
//   float4 cb3[224];                   // Offset:    0 Size:  3584
//
// }
//
// cbuffer PER_BATCH
// {
//
//   float4 PS_ScreenSize;              // Offset:    0 Size:    16 [unused]
//   float4 PS_NearFarClipDist;         // Offset:   16 Size:    16
//   float4 ResInfoBump;                // Offset:   32 Size:    16 [unused]
//
// }
//
// cbuffer PER_INSTANCE
// {
//
//   float4 Ambient;                    // Offset:    0 Size:    16 [unused]
//   float4 AvgFogVolumeContrib;        // Offset:   16 Size:    16 [unused]
//   float4 AlphaTest;                  // Offset:   32 Size:    16
//   float4 SnowVolumeParams[2];        // Offset:   48 Size:    32 [unused]
//
// }
//
// cbuffer PER_MATERIAL
// {
//
//   float4 MatDifColor;                // Offset:    0 Size:    16
//   float4 MatSpecColor;               // Offset:   16 Size:    16
//   float4 MatEmissiveColor;           // Offset:   32 Size:    16
//   float4 __0WrinkleBlend0__1WrinkleBlend1__2WrinkleBlend2__3WrinkleBlend3;// Offset:   48 Size:    16
//   float3 __0LightWrapCoef__1RimStrength__2Melanin__3;// Offset:   64 Size:    12
//   float4 __0VNE_Width__1VNE_Glow__2__3VNE_Blend;// Offset:   80 Size:    16
//   float3 __0FresnelBias__1FresnelPower__2FresnelScale__3;// Offset:   96 Size:    12
//   float3 __0VNE_NoiseInfluence__1VNE_NormalInfluence__2VNE_Tiling__3;// Offset:  128 Size:    12
//   float3 __0ScatterRadius__1SecondarySpecGloss__2SecondarySpecStrength__3;// Offset:  144 Size:    12
//   float __0VNE_ColorBlend__1__2__3;  // Offset: 3520 Size:     4
//
// }
//
// cbuffer PER_LIGHT
// {
//
//   float4 LDiffuses0;                 // Offset:    0 Size:    16
//   float4 WorldLightsPos0;            // Offset:   16 Size:    16 [unused]
//   float4 ShadowChanMasks0;           // Offset:   32 Size:    16 [unused]
//   float4 LDiffuses1;                 // Offset:   48 Size:    16 [unused]
//   float4 WorldLightsPos1;            // Offset:   64 Size:    16 [unused]
//   float4 ShadowChanMasks1;           // Offset:   80 Size:    16 [unused]
//   float4 LDiffuses2;                 // Offset:   96 Size:    16 [unused]
//   float4 WorldLightsPos2;            // Offset:  112 Size:    16 [unused]
//   float4 ShadowChanMasks2;           // Offset:  128 Size:    16 [unused]
//   float4 LDiffuses3;                 // Offset:  144 Size:    16 [unused]
//   float4 WorldLightsPos3;            // Offset:  160 Size:    16 [unused]
//   float4 ShadowChanMasks3;           // Offset:  176 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// diffuseMapSampler_s               sampler      NA          NA    0        1
// glossMapSampler_s                 sampler      NA          NA    2        1
// shadowOccludeMapSampler_s         sampler      NA          NA    3        1
// decalMapSampler_s                 sampler      NA          NA    4        1
// envMapSamplerCUBE_s               sampler      NA          NA    5        1
// sceneDepthSamplerScaled_s         sampler      NA          NA    6        1
// volumeNoiseMapSampler_s           sampler      NA          NA    7        1
// gradientMapSampler_s              sampler      NA          NA    8        1
// VNE_DecalMapSampler_s             sampler      NA          NA    9        1
// sceneSpecularAccSampler_s         sampler      NA          NA   10        1
// sceneNormalsSampler_s             sampler      NA          NA   12        1
// sceneDiffuseAccSampler_s          sampler      NA          NA   13        1
// sceneNormalsBentSampler_s         sampler      NA          NA   14        1
// diffuseMapSampler                 texture  float4          2d    0        1
// glossMapSampler                   texture  float4          2d    2        1
// shadowOccludeMapSampler           texture  float4          2d    3        1
// decalMapSampler                   texture  float4          2d    4        1
// volumeNoiseMapSampler             texture  float4          3d    5        1
// gradientMapSampler                texture  float4          2d    6        1
// VNE_DecalMapSampler               texture  float4          2d    7        1
// envMapSamplerCUBE                 texture  float4        cube    8        1
// sceneDepthSamplerScaled           texture  float4          2d    9        1
// sceneSpecularAccSampler           texture  float4          2d   10        1
// sceneNormalsSampler               texture  float4          2d   12        1
// sceneDiffuseAccSampler            texture  float4          2d   13        1
// sceneNormalsBentSampler           texture  float4          2d   14        1
// PER_BATCH                         cbuffer      NA          NA    0        1
// PER_INSTANCE                      cbuffer      NA          NA    1        1
// cb3                               cbuffer      NA          NA    3        1
// PER_MATERIAL                      cbuffer      NA          NA    4        1
// PER_LIGHT                         cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy w
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb3[224], immediateIndexed
dcl_constantbuffer cb0[2], immediateIndexed
dcl_constantbuffer cb1[3], immediateIndexed
dcl_constantbuffer cb4[221], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_sampler s12, mode_default
dcl_sampler s13, mode_default
dcl_sampler s14, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.w
dcl_output o0.xyzw
dcl_temps 13
mul r0.x, cb3[223].z, cb4[9].x
mul r0.x, r0.x, l(0.000350)
div r0.x, r0.x, v3.w
div r0.yz, v3.xxyx, v3.wwww
mad r1.xyzw, r0.xxxx, l(0.000000, -1.000000, -0.866000, 0.500000), r0.yzyz
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r1.xyxx, t13.xyzw, s13
mul r3.xyz, r2.xyzx, cb3[1].wwww
sample_indexable(texture2d)(float,float,float,float) r0.w, r1.xyxx, t9.yzwx, s6
div r1.x, cb0[1].y, cb0[1].z
mad r0.w, r0.w, r1.x, -v3.w
mul r0.w, |r0.w|, l(50.000000)
min r0.w, r0.w, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r0.yzyy, t13.xyzw, s13
mul r4.xyz, r4.xyzx, cb3[1].wwww
div r5.xyz, r4.xyzx, cb3[1].wwww
mad r2.xyz, -r2.xyzx, cb3[1].wwww, r5.xyzx
mad r2.xyz, r0.wwww, r2.xyzx, r3.xyzx
add r2.xyz, r2.xyzx, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r1.zwzz, t13.xyzw, s13
sample_indexable(texture2d)(float,float,float,float) r0.w, r1.zwzz, t9.yzwx, s6
mad r0.w, r0.w, r1.x, -v3.w
mul r0.w, |r0.w|, l(50.000000)
min r0.w, r0.w, l(1.000000)
mul r1.yzw, r3.xxyz, cb3[1].wwww
mad r3.xyz, -r3.xyzx, cb3[1].wwww, r5.xyzx
mad r1.yzw, r0.wwww, r3.xxyz, r1.yyzw
add r1.yzw, r1.yyzw, r2.xxyz
mad r2.xyzw, r0.xxxx, l(0.866000, 0.500000, -1.414000, -1.414000), r0.yzyz
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r2.xyxx, t13.xyzw, s13
mul r6.xyz, r3.xyzx, cb3[1].wwww
mad r3.xyz, -r3.xyzx, cb3[1].wwww, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t9.yzwx, s6
mad r0.w, r0.w, r1.x, -v3.w
mul r0.w, |r0.w|, l(50.000000)
min r0.w, r0.w, l(1.000000)
mad r3.xyz, r0.wwww, r3.xyzx, r6.xyzx
add r1.yzw, r1.yyzw, r3.xxyz
sample_indexable(texture2d)(float,float,float,float) r0.w, r2.zwzz, t9.yzwx, s6
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.zwzz, t13.xyzw, s13
mad r0.w, r0.w, r1.x, -v3.w
mul r0.w, |r0.w|, l(50.000000)
min r0.w, r0.w, l(1.000000)
mul r3.xyz, r2.xyzx, cb3[1].wwww
mad r2.xyz, -r2.xyzx, cb3[1].wwww, r5.xyzx
mad r2.xyz, r0.wwww, r2.xyzx, r3.xyzx
mad r2.xyz, r1.yzwy, l(0.250000, 0.250000, 0.250000, 0.000000), r2.xyzx
mul r1.yzw, r1.yyzw, l(0.000000, 0.054500, 0.136250, 0.087750)
mad r1.yzw, r5.xxyz, l(0.000000, 0.233000, 0.455000, 0.649000), r1.yyzw
mad r3.xyz, r0.xxxx, l(-1.414000, 1.414000, 1.414000, 0.000000), r0.yzyy
sample_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t9.yzwx, s6
mad r0.w, r0.w, r1.x, -v3.w
mul r0.w, |r0.w|, l(50.000000)
min r0.w, r0.w, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r3.xyxx, t13.xyzw, s13
mul r7.xyz, r6.xyzx, cb3[1].wwww
mad r6.xyz, -r6.xyzx, cb3[1].wwww, r5.xyzx
mad r6.xyz, r0.wwww, r6.xyzx, r7.xyzx
add r2.xyz, r2.xyzx, r6.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, r3.zyzz, t9.yzwx, s6
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zyzz, t13.xyzw, s13
mad r0.w, r0.w, r1.x, -v3.w
mul r0.w, |r0.w|, l(50.000000)
min r0.w, r0.w, l(1.000000)
mul r6.xyz, r3.xyzx, cb3[1].wwww
mad r3.xyz, -r3.xyzx, cb3[1].wwww, r5.xyzx
mad r3.xyz, r0.wwww, r3.xyzx, r6.xyzx
add r2.xyz, r2.xyzx, r3.xyzx
mad r3.xyzw, r0.xxxx, l(1.414000, -1.414000, -4.000000, 0.000000), r0.yzyz
sample_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t9.yzwx, s6
mad r0.w, r0.w, r1.x, -v3.w
mul r0.w, |r0.w|, l(50.000000)
min r0.w, r0.w, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r3.xyxx, t13.xyzw, s13
mad r7.xyz, -r6.xyzx, cb3[1].wwww, r5.xyzx
mul r6.xyz, r6.xyzx, cb3[1].wwww
mad r6.xyz, r0.wwww, r7.xyzx, r6.xyzx
add r2.xyz, r2.xyzx, r6.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, r3.zwzz, t9.yzwx, s6
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zwzz, t13.xyzw, s13
mad r0.w, r0.w, r1.x, -v3.w
mul r0.w, |r0.w|, l(50.000000)
min r0.w, r0.w, l(1.000000)
mad r6.xyz, -r3.xyzx, cb3[1].wwww, r5.xyzx
mul r3.xyz, r3.xyzx, cb3[1].wwww
mad r3.xyz, r0.wwww, r6.xyzx, r3.xyzx
mad r3.xyz, r2.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r3.xyzx
mad r1.yzw, r2.xxyz, l(0.000000, 0.071600, 0.000000, 0.000000), r1.yyzw
mad r2.xyzw, r0.xxxx, l(4.000000, 0.000000, 0.000000, 4.000000), r0.yzyz
mad r0.xw, r0.xxxx, l(0.000000, 0.000000, 0.000000, -4.000000), r0.yyyz
sample_indexable(texture2d)(float,float,float,float) r3.w, r2.xyxx, t9.yzwx, s6
mad r3.w, r3.w, r1.x, -v3.w
mul r3.w, |r3.w|, l(50.000000)
min r3.w, r3.w, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r2.xyxx, t13.xyzw, s13
mad r7.xyz, -r6.xyzx, cb3[1].wwww, r5.xyzx
mul r6.xyz, r6.xyzx, cb3[1].wwww
mad r6.xyz, r3.wwww, r7.xyzx, r6.xyzx
add r3.xyz, r3.xyzx, r6.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t9.xyzw, s6
sample_indexable(texture2d)(float,float,float,float) r2.yzw, r2.zwzz, t13.wxyz, s13
mad r2.x, r2.x, r1.x, -v3.w
mul r2.x, |r2.x|, l(50.000000)
min r2.x, r2.x, l(1.000000)
mad r6.xyz, -r2.yzwy, cb3[1].wwww, r5.xyzx
mul r2.yzw, r2.yyzw, cb3[1].wwww
mad r2.xyz, r2.xxxx, r6.xyzx, r2.yzwy
add r2.xyz, r2.xyzx, r3.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.w, r0.xwxx, t9.yzwx, s6
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r0.xwxx, t13.xyzw, s13
mad r0.x, r2.w, r1.x, -v3.w
mul r0.x, |r0.x|, l(50.000000)
min r0.x, r0.x, l(1.000000)
mad r5.xyz, -r3.xyzx, cb3[1].wwww, r5.xyzx
mul r3.xyz, r3.xyzx, cb3[1].wwww
mad r3.xyz, r0.xxxx, r5.xyzx, r3.xyzx
add r2.xyz, r2.xyzx, r3.xyzx
mad r1.xyz, r2.xyzx, l(0.038200, 0.000000, 0.000000, 0.000000), r1.yzwy
mul r1.xyz, r1.xyzx, cb3[1].wwww
mov r2.xyz, cb3[2].xyzx
mov r2.w, l(0.282090)
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r0.yzyy, t14.xyzw, s14
mad r3.xyzw, r3.xyzw, l(0.977200, 0.977200, 0.977200, 1.000000), l(-0.488600, -0.488600, -0.488600, 0.000000)
dp4 r0.x, r2.xyzw, r3.xyzw
mul_sat r0.x, r0.x, cb1[2].z
add r0.x, -r0.x, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r0.yzyy, t12.xyzw, s12
mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, cb3[2].xyzx, r2.xyzx
mul r1.w, r0.x, r0.w
mad r0.x, r0.w, r0.x, cb4[4].x
mov_sat r1.w, r1.w
dp3 r0.w, -v2.xyzx, -v2.xyzx
rsq r0.w, r0.w
mad r3.xyz, -v2.xyzx, r0.wwww, cb3[2].xyzx
mul r5.xyz, r0.wwww, -v2.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3_sat r0.w, r2.xyzx, r3.xyzx
log r0.w, r0.w
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v1.xyxx, t2.xyzw, s2
mul r6.xyzw, r3.wxyz, cb4[1].wxyz
mad r7.xy, r6.xxxx, l(10.000000, -6.000000, 0.000000, 0.000000), l(1.000000, 6.000000, 0.000000, 0.000000)
exp r2.w, r7.x
mul r0.w, r0.w, r2.w
mad r2.w, r2.w, l(0.125000), l(0.250000)
exp r0.w, r0.w
mul r0.w, r0.w, r2.w
mul r0.w, r1.w, r0.w
mul r7.xzw, cb5[0].wwww, cb5[0].xxyz
mul r7.xzw, r0.wwww, r7.xxzw
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r0.yzyy, t10.xyzw, s10
sample_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t3.xwyz, s3
add r0.y, -r0.y, l(1.000000)
mad r7.xzw, r7.xxzw, r0.yyyy, r8.xxyz
mad r8.xyzw, v1.xyxy, l(0.500000, 0.500000, 0.500000, 0.500000), l(0.500000, 0.000000, 0.000000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r8.xyxx, t4.xyzw, s4
sample_indexable(texture2d)(float,float,float,float) r10.xyzw, v1.xyxx, t0.xyzw, s0
add r9.xyz, r9.xyzx, -r10.xyzx
mul r9.xyz, r9.xyzx, cb4[3].yyyy
mul r11.xyzw, v1.xyxy, l(0.500000, 0.500000, 8.000000, 8.000000)
sample_indexable(texture2d)(float,float,float,float) r12.xyz, r11.xyxx, t4.xyzw, s4
sample_indexable(texture2d)(float,float,float,float) r11.xyz, r11.zwzz, t7.xyzw, s9
add r12.xyz, -r10.xyzx, r12.xyzx
mad r9.xyz, r12.xyzx, cb4[3].xxxx, r9.xyzx
sample_indexable(texture2d)(float,float,float,float) r12.xyz, r8.zwzz, t4.xyzw, s4
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r8.xwxx, t4.xyzw, s4
add r8.xyz, -r10.xyzx, r8.xyzx
add r12.xyz, -r10.xyzx, r12.xyzx
mad r9.xyz, r12.xyzx, cb4[3].zzzz, r9.xyzx
mad r8.xyz, r8.xyzx, cb4[3].wwww, r9.xyzx
add_sat r8.xyz, r8.xyzx, r10.xyzx
mul r0.z, r10.w, v5.w
dp3 r0.w, r8.xyzx, l(0.330000, 0.590000, 0.110000, 0.000000)
mad r9.xyz, r8.xyzx, r0.wwww, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r9.xyz, cb4[4].zzzz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r8.xyz, r8.xyzx, r9.xyzx
sqrt r8.xyz, r8.xyzx
add r9.xyz, r8.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
div r4.xyz, r4.xyzx, r9.xyzx
add r0.w, l(1.000000), cb4[4].x
div_sat r0.x, r0.x, r0.w
mul r9.xyz, r0.xxxx, cb5[0].xyzx
mad r0.xyw, r9.xyxz, r0.yyyy, r4.xyxz
add r4.xyz, r0.xywx, cb4[2].xyzx
add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r4.xyz, cb4[0].wwww, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
dp3 r1.w, r5.xyzx, r2.xyzx
add r2.w, r1.w, r1.w
mad r5.xyz, r2.wwww, r2.xyzx, -r5.xyzx
sample_l_indexable(texturecube)(float,float,float,float) r5.xyzw, r5.xyzx, t8.xyzw, s5, r7.y
mul r2.w, r5.w, l(16.000000)
mul r5.xyz, r2.wwww, r5.xyzx
mad r4.xyz, r5.xyzx, r4.xyzx, r7.xzwx
mad r7.xyz, cb4[0].wwww, r0.xywx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r4.xyz, r5.xyzx, r7.xyzx, r4.xyzx
mov_sat r2.w, r1.w
add r1.w, -r1.w, l(1.000000)
mul r1.w, r1.w, r1.w
min r1.w, r1.w, l(1.000000)
add r1.w, r1.w, r1.w
min r1.w, r1.w, l(1.000000)
add r4.w, r2.w, l(0.000001)
add r2.w, -r2.w, l(1.001000)
log r2.w, r2.w
mul r2.w, r2.w, cb4[6].y
exp r2.w, r2.w
mad r2.w, cb4[6].z, r2.w, cb4[6].x
log r4.w, r4.w
mul r3.w, r3.w, cb4[9].y
mul r4.w, r4.w, r3.w
mad r3.w, r3.w, l(0.125000), l(0.250000)
exp r4.w, r4.w
mul r3.w, r3.w, r4.w
mul r5.xyz, r0.xywx, r3.wwww
mad r4.xyz, r5.xyzx, cb4[9].zzzz, r4.xyzx
mul r3.xyz, r3.xyzx, r4.xyzx
mul r3.xyz, r3.xyzx, cb4[1].xyzx
mul r3.xyz, r2.wwww, r3.xyzx
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb4[8].z
mul r2.w, r2.w, cb4[8].y
mul r2.xyz, r2.wwww, r2.xyzx
mad r2.xyz, r2.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), v4.xyzx
mul r2.xyz, r2.xyzx, cb4[8].zzzz
sample_indexable(texture3d)(float,float,float,float) r2.x, r2.xyzx, t5.xyzw, s7
mad r2.x, r2.x, cb4[8].x, v4.w
add r2.x, r2.x, -cb4[5].w
max r2.y, l(0.000010), cb4[5].x
min r2.y, r2.y, l(1.000000)
div r2.x, r2.x, r2.y
add_sat r2.x, r2.x, l(1.000000)
add r2.x, -r2.x, l(1.000000)
mov r2.yz, l(0,0.750000,0.250000,0)
sample_indexable(texture2d)(float,float,float,float) r2.y, r2.xyxx, t6.yxzw, s8
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.xzxx, t6.xyzw, s8
mul r2.x, l(8.000000), cb4[5].y
exp r2.x, r2.x
mul r4.xyz, r2.xxxx, r4.xyzx
mad r2.xzw, r11.xxyz, r2.xxxx, -r4.xxyz
mad r2.xyz, r2.yyyy, r2.xzwx, r4.xyzx
add r2.xyz, -r8.xyzx, r2.xyzx
mul r2.w, r4.w, cb4[220].x
mul o0.w, r0.z, r4.w
mad r2.xyz, r2.wwww, r2.xyzx, r8.xyzx
mul r2.xyz, r2.xyzx, cb4[0].xyzx
mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
mul r0.z, r1.w, r1.w
mad r1.w, r1.w, l(-2.000000), l(3.000000)
mul r0.z, r0.z, r1.w
mul r0.z, r0.z, cb4[4].y
mul r0.xyz, r0.xywx, r0.zzzz
mad r0.xyz, r0.xyzx, r6.yzwy, r1.xyzx
mul o0.xyz, r0.xyzx, cb3[2].wwww
ret 
// Approximately 257 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
