// Unverified light fix

cbuffer cb3 : register(b3)
{
  float4 cb3[3];
}


cbuffer PER_BATCH : register(b0)
{
  row_major float4x4 mLightView : packoffset(c0);
  float4 vAnimParams : packoffset(c4);
  float4 vCausticParams : packoffset(c5);
  float4 PS_WorldViewPos : packoffset(c6);
  float4 PS_NearFarClipDist : packoffset(c7);
  float4 g_fWaterLevel : packoffset(c8);
  float4 CausticSmoothSunDir : packoffset(c9);
  float4 CausticParams : packoffset(c10);
}

cbuffer PER_FRAME : register(b3)
{
  float4 g_PS_SunColor : packoffset(c1);
  float4 g_PS_SunLightDir : packoffset(c2);
}
SamplerState sceneDepthMapSampler_s : register(s0);
SamplerState wavesSampler_s : register(s1);
SamplerState causticsSampler_s : register(s2);
SamplerState sceneNormalsSampler_s : register(s12);
Texture2D<float4> sceneDepthMapSampler : register(t0);
Texture2D<float4> wavesSampler : register(t1);
Texture2D<float4> causticsSampler : register(t2);
Texture2D<float4> sceneNormalsSampler : register(t12);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  out float4 o0 : SV_Target0,

row_major matrix vp : TEXCOORD2,
row_major matrix ivp : TEXCOORD6

  )
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = sceneDepthMapSampler.Sample(sceneDepthMapSampler_s, v1.xy).x;
  r0.xyzw = r0.xxxx * v2.zxyz + PS_WorldViewPos.zxyz;

float4 stereo = StereoParams.Load(0);
float4 tmp = mul(vp, float4(r0.yzw, 1));
tmp.x -= stereo.x * (tmp.w - stereo.y);
tmp = mul(ivp, tmp);
r0.yzw = tmp / tmp.w;

  r1.x = dot(mLightView._m00_m01_m02, r0.yzw);
  r1.y = dot(mLightView._m10_m11_m12, r0.yzw);
  r1.xyzw = CausticParams.wwww * r1.xyxy;
  r2.xyzw = r1.zwzw * float4(2.400000e-004,2.400000e-004,2.000000e-004,2.000000e-004) + vAnimParams.xxyy;
  r2.xy = wavesSampler.Sample(wavesSampler_s, r2.xy).xy;
  r2.zw = wavesSampler.Sample(wavesSampler_s, r2.wz).xy;
  r2.xyzw = r2.yxyx + r2.wzwz;
  r2.xyzw = r2.xyzw * float4(4.000000e-002,4.000000e-002,4.000000e-002,4.000000e-002) + float4(-4.000000e-002,-4.000000e-002,-4.000000e-002,-4.000000e-002);
  r3.xyzw = r1.xyxy * float4(5.000000e-003,5.000000e-003,5.000000e-003,5.000000e-003) + vAnimParams.zzww;
  r1.xyzw = r1.zwzw * float4(2.000000e-002,2.000000e-002,2.000000e-002,2.000000e-002) + vAnimParams.zzww;
  r1.xyzw = r1.xyzw + r2.xyzw;
  r2.xyzw = r3.xyzw + r2.xyzw;
  r2.xy = wavesSampler.Sample(wavesSampler_s, r2.xy).xy;
  r2.zw = wavesSampler.Sample(wavesSampler_s, r2.zw).xy;
  r2.xy = r2.yx + r2.wz;
  r1.xy = wavesSampler.Sample(wavesSampler_s, r1.xy).xy;
  r1.zw = wavesSampler.Sample(wavesSampler_s, r1.zw).xy;
  r1.xy = r1.yx + r1.wz;
  r1.xy = r1.xy * float2(2.000000e+000,2.000000e+000) + r2.xy;
  r1.xy = float2(-3.000000e+000,-3.000000e+000) + r1.xy;
  r2.xyz = sceneNormalsSampler.Sample(sceneNormalsSampler_s, v1.xy).xyz;
  r2.xyz = r2.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r1.z = dot(r2.xyz, r2.xyz);
  r1.z = rsqrt(r1.z);
  r2.xy = r2.xy * r1.zz;
  r1.z = -r2.z * r1.z + 2.500000000e-001;
  r2.xy = r2.xy * float2(2.500000e-001,2.500000e-001) + r1.xy;
  r2.z = 1.000000000e+000;
  r1.x = dot(r2.xyz, r2.xyz);
  r1.x = rsqrt(r1.x);
  r1.xyw = r2.xyz * r1.xxx;
  r2.x = dot(cb3[2].xyz, r1.xyw);
  r2.y = -r2.x * r2.x + 1.000000000e+000;
  r2.y = -r2.y * 8.100000024e-001 + 1.000000000e+000;
  r2.z = sqrt(r2.y);
  r2.y = r2.y >= 0.000000000e+000;
  r2.x = r2.x * 8.999999762e-001 + r2.z;
  r2.xz = r2.xx * r1.xy;
  r2.xz = cb3[2].xy * float2(9.000000e-001,9.000000e-001) + -r2.xz;
  r2.xy = r2.yy ? r2.xz : 0;
  r3.xyzw = -r1.xyxy * float4(5.000000e-002,5.000000e-002,1.000000e-001,1.000000e-001) + r2.xyxy;
  r2.xy = r2.xy * float2(5.000000e-001,5.000000e-001) + float2(5.000000e-001,5.000000e-001);
  r2.x = causticsSampler.Sample(causticsSampler_s, r2.xy).x;
  r1.x = saturate(dot(r1.xyw, CausticSmoothSunDir.xyz));
  r3.xyzw = r3.xyzw * float4(5.000000e-001,5.000000e-001,5.000000e-001,5.000000e-001) + float4(5.000000e-001,5.000000e-001,5.000000e-001,5.000000e-001);
  r2.y = causticsSampler.Sample(causticsSampler_s, r3.xy).x;
  r2.z = causticsSampler.Sample(causticsSampler_s, r3.zw).x;
  r3.xyz = saturate(r2.xyz * float3(5.650000e+000,5.650000e+000,5.650000e+000) + float3(-4.660000e+000,-4.660000e+000,-4.660000e+000));
  r2.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) + -r2.xyz;
  r2.w = saturate(dot(r2.xyz, float3(2.500000e-001,2.500000e-001,2.500000e-001)));
  r3.xyz = r3.xyz * r3.xyz;
  r1.xyw = r3.xyz * r1.xxx;
  r1.xyw = cb3[1].xyz * r1.xyw;
  r1.xyw = float3(5.000000e-001,5.000000e-001,5.000000e-001) * r1.xyw;
  r3.x = cb3[2].w * vCausticParams.y;
  r2.xyz = r3.xxx * r1.xyw;
  r1.x = g_fWaterLevel.z + -r0.x;
  r1.x = r1.x >= 0.000000000e+000;
  r1.x = r1.x ? 1.000000 : 0;
  r1.x = max(r1.x, r1.z);
  r0.x = vCausticParams.w + -r0.x;
  r0.yzw = PS_WorldViewPos.xyz + -r0.yzw;
  r0.y = dot(r0.yzw, r0.yzw);
  r0.xy = float2(-2.885390e+000,7.500000e-002) * r0.xy;
  r0.y = saturate(vCausticParams.x / r0.y);
  r0.x = exp2(r0.x);
  r0.x = 1.000000000e+000 + -r0.x;
  r0.x = saturate(r0.x * r1.x);
  r0.x = r0.x * r0.y;
  o0.xyzw = r2.xyzw * r0.xxxx;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer PER_BATCH
// {
//
//   row_major float4x4 mLightView;     // Offset:    0 Size:    64
//   float4 vAnimParams;                // Offset:   64 Size:    16
//   float4 vCausticParams;             // Offset:   80 Size:    16
//   float4 PS_WorldViewPos;            // Offset:   96 Size:    16
//   float4 PS_NearFarClipDist;         // Offset:  112 Size:    16 [unused]
//   float4 g_fWaterLevel;              // Offset:  128 Size:    16
//   float4 CausticSmoothSunDir;        // Offset:  144 Size:    16
//   float4 CausticParams;              // Offset:  160 Size:    16
//
// }
//
// cbuffer PER_FRAME
// {
//
//   float4 g_PS_SunColor;              // Offset:   16 Size:    16
//   float4 g_PS_SunLightDir;           // Offset:   32 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sceneDepthMapSampler              sampler      NA          NA    0        1
// wavesSampler                      sampler      NA          NA    1        1
// causticsSampler                   sampler      NA          NA    2        1
// sceneNormalsSampler               sampler      NA          NA   12        1
// sceneDepthMapSampler              texture  float4          2d    0        1
// wavesSampler                      texture  float4          2d    1        1
// causticsSampler                   texture  float4          2d    2        1
// sceneNormalsSampler               texture  float4          2d   12        1
// PER_BATCH                         cbuffer      NA          NA    0        1
// PER_FRAME                         cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb3[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s12, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t12
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 4
sample_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t0.xyzw, s0
mad r0.xyzw, r0.xxxx, v2.zxyz, cb0[6].zxyz
dp3 r1.x, cb0[0].xyzx, r0.yzwy
dp3 r1.y, cb0[1].xyzx, r0.yzwy
mul r1.xyzw, r1.xyxy, cb0[10].wwww
mad r2.xyzw, r1.zwzw, l(0.000240, 0.000240, 0.000200, 0.000200), cb0[4].xxyy
sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r2.zw, r2.wzww, t1.zwxy, s1
add r2.xyzw, r2.wzwz, r2.yxyx
mad r2.xyzw, r2.xyzw, l(0.040000, 0.040000, 0.040000, 0.040000), l(-0.040000, -0.040000, -0.040000, -0.040000)
mad r3.xyzw, r1.xyxy, l(0.005000, 0.005000, 0.005000, 0.005000), cb0[4].zzww
mad r1.xyzw, r1.zwzw, l(0.020000, 0.020000, 0.020000, 0.020000), cb0[4].zzww
add r1.xyzw, r2.xyzw, r1.xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r2.zw, r2.zwzz, t1.zwxy, s1
add r2.xy, r2.wzww, r2.yxyy
sample_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.zw, r1.zwzz, t1.zwxy, s1
add r1.xy, r1.wzww, r1.yxyy
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), r2.xyxx
add r1.xy, r1.xyxx, l(-3.000000, -3.000000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t12.xyzw, s12
mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.z, r2.xyzx, r2.xyzx
rsq r1.z, r1.z
mul r2.xy, r1.zzzz, r2.xyxx
mad r1.z, -r2.z, r1.z, l(0.250000)
mad r2.xy, r2.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000), r1.xyxx
mov r2.z, l(1.000000)
dp3 r1.x, r2.xyzx, r2.xyzx
rsq r1.x, r1.x
mul r1.xyw, r1.xxxx, r2.xyxz
dp3 r2.x, cb3[2].xyzx, r1.xywx
mad r2.y, -r2.x, r2.x, l(1.000000)
mad r2.y, -r2.y, l(0.810000), l(1.000000)
sqrt r2.z, r2.y
ge r2.y, r2.y, l(0.000000)
mad r2.x, r2.x, l(0.900000), r2.z
mul r2.xz, r1.xxyx, r2.xxxx
mad r2.xz, cb3[2].xxyx, l(0.900000, 0.000000, 0.900000, 0.000000), -r2.xxzx
and r2.xy, r2.xzxx, r2.yyyy
mad r3.xyzw, -r1.xyxy, l(0.050000, 0.050000, 0.100000, 0.100000), r2.xyxy
mad r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t2.xyzw, s2
dp3_sat r1.x, r1.xywx, cb0[9].xyzx
mad r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), l(0.500000, 0.500000, 0.500000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r2.y, r3.xyxx, t2.yxzw, s2
sample_indexable(texture2d)(float,float,float,float) r2.z, r3.zwzz, t2.yzxw, s2
mad_sat r3.xyz, r2.xyzx, l(5.650000, 5.650000, 5.650000, 0.000000), l(-4.660000, -4.660000, -4.660000, 0.000000)
add r2.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
dp3_sat r2.w, r2.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
mul r3.xyz, r3.xyzx, r3.xyzx
mul r1.xyw, r1.xxxx, r3.xyxz
mul r1.xyw, r1.xyxw, cb3[1].xyxz
mul r1.xyw, r1.xyxw, l(0.500000, 0.500000, 0.000000, 0.500000)
mul r3.x, cb0[5].y, cb3[2].w
mul r2.xyz, r1.xywx, r3.xxxx
add r1.x, -r0.x, cb0[8].z
ge r1.x, r1.x, l(0.000000)
and r1.x, r1.x, l(0x3f800000)
max r1.x, r1.x, r1.z
add r0.x, -r0.x, cb0[5].w
add r0.yzw, -r0.yyzw, cb0[6].xxyz
dp3 r0.y, r0.yzwy, r0.yzwy
mul r0.xy, r0.xyxx, l(-2.885390, 0.075000, 0.000000, 0.000000)
div_sat r0.y, cb0[5].x, r0.y
exp r0.x, r0.x
add r0.x, -r0.x, l(1.000000)
mul_sat r0.x, r1.x, r0.x
mul r0.x, r0.y, r0.x
mul o0.xyzw, r0.xxxx, r2.xyzw
ret 
// Approximately 73 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer cb3
// {
//
//   float4 cb3[3];                     // Offset:    0 Size:    48
//
// }
//
// cbuffer PER_BATCH
// {
//
//   row_major float4x4 mLightView;     // Offset:    0 Size:    64
//   float4 vAnimParams;                // Offset:   64 Size:    16
//   float4 vCausticParams;             // Offset:   80 Size:    16
//   float4 PS_WorldViewPos;            // Offset:   96 Size:    16
//   float4 PS_NearFarClipDist;         // Offset:  112 Size:    16 [unused]
//   float4 g_fWaterLevel;              // Offset:  128 Size:    16
//   float4 CausticSmoothSunDir;        // Offset:  144 Size:    16
//   float4 CausticParams;              // Offset:  160 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sceneDepthMapSampler_s            sampler      NA          NA    0        1
// wavesSampler_s                    sampler      NA          NA    1        1
// causticsSampler_s                 sampler      NA          NA    2        1
// sceneNormalsSampler_s             sampler      NA          NA   12        1
// sceneDepthMapSampler              texture  float4          2d    0        1
// wavesSampler                      texture  float4          2d    1        1
// causticsSampler                   texture  float4          2d    2        1
// sceneNormalsSampler               texture  float4          2d   12        1
// PER_BATCH                         cbuffer      NA          NA    0        1
// cb3                               cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb3[3], immediateIndexed
dcl_constantbuffer cb0[11], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s12, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t12
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 4
sample_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t0.xyzw, s0
mad r0.xyzw, r0.xxxx, v2.zxyz, cb0[6].zxyz
dp3 r1.x, cb0[0].xyzx, r0.yzwy
dp3 r1.y, cb0[1].xyzx, r0.yzwy
mul r1.xyzw, r1.xyxy, cb0[10].wwww
mad r2.xyzw, r1.zwzw, l(0.000240, 0.000240, 0.000200, 0.000200), cb0[4].xxyy
sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r2.zw, r2.wzww, t1.zwxy, s1
add r2.xyzw, r2.wzwz, r2.yxyx
mad r2.xyzw, r2.xyzw, l(0.040000, 0.040000, 0.040000, 0.040000), l(-0.040000, -0.040000, -0.040000, -0.040000)
mad r3.xyzw, r1.xyxy, l(0.005000, 0.005000, 0.005000, 0.005000), cb0[4].zzww
mad r1.xyzw, r1.zwzw, l(0.020000, 0.020000, 0.020000, 0.020000), cb0[4].zzww
add r1.xyzw, r2.xyzw, r1.xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r2.zw, r2.zwzz, t1.zwxy, s1
add r2.xy, r2.wzww, r2.yxyy
sample_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.zw, r1.zwzz, t1.zwxy, s1
add r1.xy, r1.wzww, r1.yxyy
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), r2.xyxx
add r1.xy, r1.xyxx, l(-3.000000, -3.000000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t12.xyzw, s12
mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.z, r2.xyzx, r2.xyzx
rsq r1.z, r1.z
mul r2.xy, r1.zzzz, r2.xyxx
mad r1.z, -r2.z, r1.z, l(0.250000)
mad r2.xy, r2.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000), r1.xyxx
mov r2.z, l(1.000000)
dp3 r1.x, r2.xyzx, r2.xyzx
rsq r1.x, r1.x
mul r1.xyw, r1.xxxx, r2.xyxz
dp3 r2.x, cb3[2].xyzx, r1.xywx
mad r2.y, -r2.x, r2.x, l(1.000000)
mad r2.y, r2.y, l(-0.810000), l(1.000000)
sqrt r2.z, r2.y
ge r2.y, r2.y, l(0.000000)
mad r2.x, r2.x, l(0.900000), r2.z
mul r2.xz, r1.xxyx, r2.xxxx
mad r2.xz, cb3[2].xxyx, l(0.900000, 0.000000, 0.900000, 0.000000), -r2.xxzx
and r2.xy, r2.xzxx, r2.yyyy
mad r3.xyzw, r1.xyxy, l(-0.050000, -0.050000, -0.100000, -0.100000), r2.xyxy
mad r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t2.xyzw, s2
dp3_sat r1.x, r1.xywx, cb0[9].xyzx
mad r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), l(0.500000, 0.500000, 0.500000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r2.y, r3.xyxx, t2.yxzw, s2
sample_indexable(texture2d)(float,float,float,float) r2.z, r3.zwzz, t2.yzxw, s2
mad_sat r3.xyz, r2.xyzx, l(5.650000, 5.650000, 5.650000, 0.000000), l(-4.660000, -4.660000, -4.660000, 0.000000)
add r2.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
dp3_sat r2.w, r2.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
mul r3.xyz, r3.xyzx, r3.xyzx
mul r1.xyw, r1.xxxx, r3.xyxz
mul r1.xyw, r1.xyxw, cb3[1].xyxz
mul r1.xyw, r1.xyxw, l(0.500000, 0.500000, 0.000000, 0.500000)
mul r3.x, cb3[2].w, cb0[5].y
mul r2.xyz, r1.xywx, r3.xxxx
add r1.x, -r0.x, cb0[8].z
ge r1.x, r1.x, l(0.000000)
and r1.x, r1.x, l(0x3f800000)
max r1.x, r1.z, r1.x
add r0.yzw, -r0.yyzw, cb0[6].xxyz
add r3.x, -r0.x, cb0[5].w
dp3 r3.y, r0.yzwy, r0.yzwy
mul r0.xy, r3.xyxx, l(-2.885390, 0.075000, 0.000000, 0.000000)
exp r0.x, r0.x
div_sat r0.y, cb0[5].x, r0.y
add r0.x, -r0.x, l(1.000000)
mul_sat r0.x, r1.x, r0.x
mul r0.x, r0.y, r0.x
mul o0.xyzw, r0.xxxx, r2.xyzw
ret 
// Approximately 73 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
