// Fast travel decal

cbuffer PER_BATCH : register(b0)
{
  row_major float4x4 g_mViewProj : packoffset(c0);
  row_major float4x4 g_mInvLightProj : packoffset(c4);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : POSITION0,
  float2 v1 : TEXCOORD0,
  float4 v2 : COLOR0,
  out float4 o0 : SV_Position0,

out row_major matrix vp : TEXCOORD0

  )
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);

  r0.x = dot(g_mInvLightProj._m00_m01_m02_m03, v0.xyzw);
  r0.y = dot(g_mInvLightProj._m10_m11_m12_m13, v0.xyzw);
  r0.z = dot(g_mInvLightProj._m20_m21_m22_m23, v0.xyzw);
  r0.w = dot(g_mInvLightProj._m30_m31_m32_m33, v0.xyzw);
  r0.xyz = r0.xyz / r0.www;
  r0.w = 1.000000000e+000;
  o0.x = dot(g_mViewProj._m00_m01_m02_m03, r0.xyzw);
  o0.y = dot(g_mViewProj._m10_m11_m12_m13, r0.xyzw);
  o0.z = dot(g_mViewProj._m20_m21_m22_m23, r0.xyzw);
  o0.w = dot(g_mViewProj._m30_m31_m32_m33, r0.xyzw);

vp = g_mViewProj;

  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer PER_BATCH
// {
//
//   row_major float4x4 g_mViewProj;    // Offset:    0 Size:    64
//   row_major float4x4 g_mInvLightProj;// Offset:   64 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// PER_BATCH                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float       
// COLOR                    0   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[8], immediateIndexed
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
dcl_temps 1
dp4 r0.x, cb0[4].xyzw, v0.xyzw
dp4 r0.y, cb0[5].xyzw, v0.xyzw
dp4 r0.z, cb0[6].xyzw, v0.xyzw
dp4 r0.w, cb0[7].xyzw, v0.xyzw
div r0.xyz, r0.xyzx, r0.wwww
mov r0.w, l(1.000000)
dp4 o0.x, cb0[0].xyzw, r0.xyzw
dp4 o0.y, cb0[1].xyzw, r0.xyzw
dp4 o0.z, cb0[2].xyzw, r0.xyzw
dp4 o0.w, cb0[3].xyzw, r0.xyzw
ret 
// Approximately 11 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//   using 3Dmigoto v1.1.26 on Sat Jul 04 14:02:27 2015
//
//
// Buffer Definitions: 
//
// cbuffer PER_BATCH
// {
//
//   row_major float4x4 g_mViewProj;    // Offset:    0 Size:    64
//   row_major float4x4 g_mInvLightProj;// Offset:   64 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// PER_BATCH                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float       
// COLOR                    0   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[8], immediateIndexed
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
dcl_temps 1
dp4 r0.x, cb0[4].xyzw, v0.xyzw
dp4 r0.y, cb0[5].xyzw, v0.xyzw
dp4 r0.z, cb0[6].xyzw, v0.xyzw
dp4 r0.w, cb0[7].xyzw, v0.xyzw
div r0.xyz, r0.xyzx, r0.wwww
mov r0.w, l(1.000000)
dp4 o0.x, cb0[0].xyzw, r0.xyzw
dp4 o0.y, cb0[1].xyzw, r0.xyzw
dp4 o0.z, cb0[2].xyzw, r0.xyzw
dp4 o0.w, cb0[3].xyzw, r0.xyzw
ret 
// Approximately 11 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
