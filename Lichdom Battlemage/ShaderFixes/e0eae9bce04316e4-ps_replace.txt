// hand pixel shader 1/2 - should move fix to VS, but has decompile error

cbuffer cb3 : register(b3)
{
  float4 cb3[3];
}


cbuffer PER_INSTANCE : register(b1)
{
  float4 Ambient : packoffset(c0);
  float4 AvgFogVolumeContrib : packoffset(c1);
  float4 AlphaTest : packoffset(c2);
  float4 SnowVolumeParams[2] : packoffset(c3);
}

cbuffer PER_FRAME : register(b3)
{
  float4 g_PS_SunColor : packoffset(c1);
  float4 g_PS_SunLightDir : packoffset(c2);
  float4 g_PS_FogColor : packoffset(c3);
  float4 g_PS_ProjRatio : packoffset(c223);
}

cbuffer PER_MATERIAL : register(b4)
{
  float4 MatDifColor : packoffset(c0);
  float4 MatSpecColor : packoffset(c1);
  float4 MatEmissiveColor : packoffset(c2);
  float4 __0WrinkleBlend0__1WrinkleBlend1__2WrinkleBlend2__3WrinkleBlend3 : packoffset(c3);
  float3 __0LightWrapCoef__1RimStrength__2Melanin__3 : packoffset(c4);
  float4 __0VNE_Width__1VNE_Glow__2__3VNE_Blend : packoffset(c5);
  float3 __0FresnelBias__1FresnelPower__2FresnelScale__3 : packoffset(c6);
  float3 __0VNE_NoiseInfluence__1VNE_NormalInfluence__2VNE_Tiling__3 : packoffset(c8);
  float3 __0ScatterRadius__1SecondarySpecGloss__2SecondarySpecStrength__3 : packoffset(c9);
  float __0VNE_ColorBlend__1__2__3 : packoffset(c220);
}

cbuffer PER_LIGHT : register(b5)
{
  float4 LDiffuses0 : packoffset(c0);
  float4 WorldLightsPos0 : packoffset(c1);
  float4 ShadowChanMasks0 : packoffset(c2);
  float4 LDiffuses1 : packoffset(c3);
  float4 WorldLightsPos1 : packoffset(c4);
  float4 ShadowChanMasks1 : packoffset(c5);
  float4 LDiffuses2 : packoffset(c6);
  float4 WorldLightsPos2 : packoffset(c7);
  float4 ShadowChanMasks2 : packoffset(c8);
  float4 LDiffuses3 : packoffset(c9);
  float4 WorldLightsPos3 : packoffset(c10);
  float4 ShadowChanMasks3 : packoffset(c11);
}
SamplerState diffuseMapSampler_s : register(s0);
SamplerState shadowOccludeMapSampler_s : register(s3);
SamplerState decalMapSampler_s : register(s4);
SamplerState volumeNoiseMapSampler_s : register(s5);
SamplerState gradientMapSampler_s : register(s6);
SamplerState VNE_DecalMapSampler_s : register(s7);
SamplerState sceneNormalsSampler_s : register(s12);
SamplerState sceneDiffuseAccSampler_s : register(s13);
SamplerState sceneNormalsBentSampler_s : register(s14);
Texture2D<float4> diffuseMapSampler : register(t0);
Texture2D<float4> shadowOccludeMapSampler : register(t3);
Texture2D<float4> decalMapSampler : register(t4);
Texture3D<float4> volumeNoiseMapSampler : register(t5);
Texture2D<float4> gradientMapSampler : register(t6);
Texture2D<float4> VNE_DecalMapSampler : register(t7);
Texture2D<float4> sceneNormalsSampler : register(t12);
Texture2D<float4> sceneDiffuseAccSampler : register(t13);
Texture2D<float4> sceneNormalsBentSampler : register(t14);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  float4 v5 : TEXCOORD4,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
v3.x += stereo.x * (v3.w - stereo.y) / 2;

  r0.xyz = cb3[2].xyz;
  r0.w = 2.820900083e-001;
  r1.xy = v3.xy / v3.ww;
  r2.xyzw = sceneNormalsBentSampler.Sample(sceneNormalsBentSampler_s, r1.xy).xyzw;
  r2.xyzw = r2.xyzw * float4(9.772000e-001,9.772000e-001,9.772000e-001,1.000000e+000) + float4(-4.886000e-001,-4.886000e-001,-4.886000e-001,0.000000e+000);
  r0.x = dot(r0.xyzw, r2.xyzw);
  r0.x = saturate(AlphaTest.z * r0.x);
  r0.x = 1.000000000e+000 + -r0.x;
  r0.yzw = sceneNormalsSampler.Sample(sceneNormalsSampler_s, r1.xy).xyz;
  r0.yzw = r0.yzw * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r1.z = dot(r0.yzw, r0.yzw);
  r1.z = rsqrt(r1.z);
  r0.yzw = r1.zzz * r0.yzw;
  r1.z = dot(cb3[2].xyz, r0.yzw);
  r0.x = r1.z * r0.x + __0LightWrapCoef__1RimStrength__2Melanin__3.x;
  r1.z = __0LightWrapCoef__1RimStrength__2Melanin__3.x + 1.000000000e+000;
  r0.x = saturate(r0.x / r1.z);
  r2.xyz = LDiffuses0.xyz * r0.xxx;
  r0.x = shadowOccludeMapSampler.Sample(shadowOccludeMapSampler_s, r1.xy).w;
  r1.xyz = sceneDiffuseAccSampler.Sample(sceneDiffuseAccSampler_s, r1.xy).xyz;
  r0.x = 1.000000000e+000 + -r0.x;
  r2.xyz = r2.xyz * r0.xxx;
  r1.xyz = r1.xyz * cb3[1].www + r2.xyz;
  r1.xyz = MatEmissiveColor.xyz + r1.xyz;
  r0.x = 1.000000e+000 / __0VNE_NoiseInfluence__1VNE_NormalInfluence__2VNE_Tiling__3.z;
  r0.x = __0VNE_NoiseInfluence__1VNE_NormalInfluence__2VNE_Tiling__3.y * r0.x;
  r0.xyz = r0.yzw * r0.xxx;
  r0.xyz = r0.xyz * float3(1.000000e-001,1.000000e-001,1.000000e-001) + v4.xyz;
  r0.xyz = __0VNE_NoiseInfluence__1VNE_NormalInfluence__2VNE_Tiling__3.zzz * r0.xyz;
  r0.x = volumeNoiseMapSampler.Sample(volumeNoiseMapSampler_s, r0.xyz).x;
  r0.x = r0.x * __0VNE_NoiseInfluence__1VNE_NormalInfluence__2VNE_Tiling__3.x + v4.w;
  r0.x = -__0VNE_Width__1VNE_Glow__2__3VNE_Blend.w + r0.x;
  r0.y = max(9.999999747e-006, __0VNE_Width__1VNE_Glow__2__3VNE_Blend.x);
  r0.y = min(r0.y, 1.000000000e+000);
  r0.x = r0.x / r0.y;
  r0.x = saturate(1.000000000e+000 + r0.x);
  r0.x = 1.000000000e+000 + -r0.x;
  r0.yz = float2(2.500000e-001,7.500000e-001);
  r0.z = gradientMapSampler.Sample(gradientMapSampler_s, r0.xz).x;
  r2.xyzw = gradientMapSampler.Sample(gradientMapSampler_s, r0.xy).xyzw;
  r0.x = __0VNE_Width__1VNE_Glow__2__3VNE_Blend.y * 8.000000000e+000;
  r0.x = exp2(r0.x);
  r2.xyz = r2.xyz * r0.xxx;
  r3.xyzw = float4(5.000000e-001,5.000000e-001,8.000000e+000,8.000000e+000) * v1.xyxy;
  r4.xyz = VNE_DecalMapSampler.Sample(VNE_DecalMapSampler_s, r3.zw).xyz;
  r3.xyz = decalMapSampler.Sample(decalMapSampler_s, r3.xy).xyz;
  r0.xyw = r4.xyz * r0.xxx + -r2.xyz;
  r0.xyz = r0.zzz * r0.xyw + r2.xyz;
  r4.xyzw = diffuseMapSampler.Sample(diffuseMapSampler_s, v1.xy).xyzw;
  r2.xyz = -r4.xyz + r3.xyz;
  r3.xyzw = v1.xyxy * float4(5.000000e-001,5.000000e-001,5.000000e-001,5.000000e-001) + float4(5.000000e-001,0.000000e+000,0.000000e+000,5.000000e-001);
  r5.xyz = decalMapSampler.Sample(decalMapSampler_s, r3.xy).xyz;
  r3.xyz = decalMapSampler.Sample(decalMapSampler_s, r3.zw).xyz;
  r3.xyz = r3.xyz + -r4.xyz;
  r5.xyz = r5.xyz + -r4.xyz;
  r5.xyz = __0WrinkleBlend0__1WrinkleBlend1__2WrinkleBlend2__3WrinkleBlend3.yyy * r5.xyz;
  r2.xyz = r2.xyz * __0WrinkleBlend0__1WrinkleBlend1__2WrinkleBlend2__3WrinkleBlend3.xxx + r5.xyz;
  r2.xyz = r3.xyz * __0WrinkleBlend0__1WrinkleBlend1__2WrinkleBlend2__3WrinkleBlend3.zzz + r2.xyz;
  r3.xy = v1.xy * float2(5.000000e-001,5.000000e-001) + float2(5.000000e-001,5.000000e-001);
  r3.xyz = decalMapSampler.Sample(decalMapSampler_s, r3.xy).xyz;
  r3.xyz = r3.xyz + -r4.xyz;
  r2.xyz = r3.xyz * __0WrinkleBlend0__1WrinkleBlend1__2WrinkleBlend2__3WrinkleBlend3.www + r2.xyz;
  r2.xyz = saturate(r4.xyz + r2.xyz);
  r0.w = v5.w * r4.w;
  o0.w = r0.w * r2.w;
  r0.w = __0VNE_ColorBlend__1__2__3 * r2.w;
  r1.w = dot(r2.xyz, float3(3.300000e-001,5.900000e-001,1.100000e-001));
  r3.xyz = r2.xyz * r1.www + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r3.xyz = __0LightWrapCoef__1RimStrength__2Melanin__3.zzz * r3.xyz + float3(1.000000e+000,1.000000e+000,1.000000e+000);
  r2.xyz = r3.xyz * r2.xyz;
  r2.xyz = sqrt(r2.xyz);
  r0.xyz = -r2.xyz + r0.xyz;
  r0.xyz = r0.www * r0.xyz + r2.xyz;
  r0.xyz = r1.xyz * r0.xyz;
  o0.xyz = r0.xyz / cb3[1].www;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer PER_INSTANCE
// {
//
//   float4 Ambient;                    // Offset:    0 Size:    16 [unused]
//   float4 AvgFogVolumeContrib;        // Offset:   16 Size:    16 [unused]
//   float4 AlphaTest;                  // Offset:   32 Size:    16
//   float4 SnowVolumeParams[2];        // Offset:   48 Size:    32 [unused]
//
// }
//
// cbuffer PER_FRAME
// {
//
//   float4 g_PS_SunColor;              // Offset:   16 Size:    16
//   float4 g_PS_SunLightDir;           // Offset:   32 Size:    16
//   float4 g_PS_FogColor;              // Offset:   48 Size:    16 [unused]
//   float4 g_PS_ProjRatio;             // Offset: 3568 Size:    16 [unused]
//
// }
//
// cbuffer PER_MATERIAL
// {
//
//   float4 MatDifColor;                // Offset:    0 Size:    16 [unused]
//   float4 MatSpecColor;               // Offset:   16 Size:    16 [unused]
//   float4 MatEmissiveColor;           // Offset:   32 Size:    16
//   float4 __0WrinkleBlend0__1WrinkleBlend1__2WrinkleBlend2__3WrinkleBlend3;// Offset:   48 Size:    16
//   float3 __0LightWrapCoef__1RimStrength__2Melanin__3;// Offset:   64 Size:    12
//   float4 __0VNE_Width__1VNE_Glow__2__3VNE_Blend;// Offset:   80 Size:    16
//   float3 __0FresnelBias__1FresnelPower__2FresnelScale__3;// Offset:   96 Size:    12 [unused]
//   float3 __0VNE_NoiseInfluence__1VNE_NormalInfluence__2VNE_Tiling__3;// Offset:  128 Size:    12
//   float3 __0ScatterRadius__1SecondarySpecGloss__2SecondarySpecStrength__3;// Offset:  144 Size:    12 [unused]
//   float __0VNE_ColorBlend__1__2__3;  // Offset: 3520 Size:     4
//
// }
//
// cbuffer PER_LIGHT
// {
//
//   float4 LDiffuses0;                 // Offset:    0 Size:    16
//   float4 WorldLightsPos0;            // Offset:   16 Size:    16 [unused]
//   float4 ShadowChanMasks0;           // Offset:   32 Size:    16 [unused]
//   float4 LDiffuses1;                 // Offset:   48 Size:    16 [unused]
//   float4 WorldLightsPos1;            // Offset:   64 Size:    16 [unused]
//   float4 ShadowChanMasks1;           // Offset:   80 Size:    16 [unused]
//   float4 LDiffuses2;                 // Offset:   96 Size:    16 [unused]
//   float4 WorldLightsPos2;            // Offset:  112 Size:    16 [unused]
//   float4 ShadowChanMasks2;           // Offset:  128 Size:    16 [unused]
//   float4 LDiffuses3;                 // Offset:  144 Size:    16 [unused]
//   float4 WorldLightsPos3;            // Offset:  160 Size:    16 [unused]
//   float4 ShadowChanMasks3;           // Offset:  176 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// diffuseMapSampler                 sampler      NA          NA    0        1
// shadowOccludeMapSampler           sampler      NA          NA    3        1
// decalMapSampler                   sampler      NA          NA    4        1
// volumeNoiseMapSampler             sampler      NA          NA    5        1
// gradientMapSampler                sampler      NA          NA    6        1
// VNE_DecalMapSampler               sampler      NA          NA    7        1
// sceneNormalsSampler               sampler      NA          NA   12        1
// sceneDiffuseAccSampler            sampler      NA          NA   13        1
// sceneNormalsBentSampler           sampler      NA          NA   14        1
// diffuseMapSampler                 texture  float4          2d    0        1
// shadowOccludeMapSampler           texture  float4          2d    3        1
// decalMapSampler                   texture  float4          2d    4        1
// volumeNoiseMapSampler             texture  float4          3d    5        1
// gradientMapSampler                texture  float4          2d    6        1
// VNE_DecalMapSampler               texture  float4          2d    7        1
// sceneNormalsSampler               texture  float4          2d   12        1
// sceneDiffuseAccSampler            texture  float4          2d   13        1
// sceneNormalsBentSampler           texture  float4          2d   14        1
// PER_INSTANCE                      cbuffer      NA          NA    1        1
// PER_FRAME                         cbuffer      NA          NA    3        1
// PER_MATERIAL                      cbuffer      NA          NA    4        1
// PER_LIGHT                         cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xy w
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[3], immediateIndexed
dcl_constantbuffer cb3[3], immediateIndexed
dcl_constantbuffer cb4[221], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s12, mode_default
dcl_sampler s13, mode_default
dcl_sampler s14, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_input_ps linear v1.xy
dcl_input_ps linear centroid v3.xyw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.w
dcl_output o0.xyzw
dcl_temps 6
mov r0.xyz, cb3[2].xyzx
mov r0.w, l(0.282090)
div r1.xy, v3.xyxx, v3.wwww
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyxx, t14.xyzw, s14
mad r2.xyzw, r2.xyzw, l(0.977200, 0.977200, 0.977200, 1.000000), l(-0.488600, -0.488600, -0.488600, 0.000000)
dp4 r0.x, r0.xyzw, r2.xyzw
mul_sat r0.x, r0.x, cb1[2].z
add r0.x, -r0.x, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r0.yzw, r1.xyxx, t12.wxyz, s12
mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
dp3 r1.z, r0.yzwy, r0.yzwy
rsq r1.z, r1.z
mul r0.yzw, r0.yyzw, r1.zzzz
dp3 r1.z, cb3[2].xyzx, r0.yzwy
mad r0.x, r1.z, r0.x, cb4[4].x
add r1.z, l(1.000000), cb4[4].x
div_sat r0.x, r0.x, r1.z
mul r2.xyz, r0.xxxx, cb5[0].xyzx
sample_indexable(texture2d)(float,float,float,float) r0.x, r1.xyxx, t3.wxyz, s3
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t13.xyzw, s13
add r0.x, -r0.x, l(1.000000)
mul r2.xyz, r0.xxxx, r2.xyzx
mad r1.xyz, r1.xyzx, cb3[1].wwww, r2.xyzx
add r1.xyz, r1.xyzx, cb4[2].xyzx
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb4[8].z
mul r0.x, r0.x, cb4[8].y
mul r0.xyz, r0.xxxx, r0.yzwy
mad r0.xyz, r0.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), v4.xyzx
mul r0.xyz, r0.xyzx, cb4[8].zzzz
sample_indexable(texture3d)(float,float,float,float) r0.x, r0.xyzx, t5.xyzw, s5
mad r0.x, r0.x, cb4[8].x, v4.w
add r0.x, r0.x, -cb4[5].w
max r0.y, l(0.000010), cb4[5].x
min r0.y, r0.y, l(1.000000)
div r0.x, r0.x, r0.y
add_sat r0.x, r0.x, l(1.000000)
add r0.x, -r0.x, l(1.000000)
mov r0.yz, l(0,0.250000,0.750000,0)
sample_indexable(texture2d)(float,float,float,float) r0.z, r0.xzxx, t6.yzxw, s6
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r0.xyxx, t6.xyzw, s6
mul r0.x, l(8.000000), cb4[5].y
exp r0.x, r0.x
mul r2.xyz, r0.xxxx, r2.xyzx
mul r3.xyzw, v1.xyxy, l(0.500000, 0.500000, 8.000000, 8.000000)
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r3.zwzz, t7.xyzw, s7
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t4.xyzw, s4
mad r0.xyw, r4.xyxz, r0.xxxx, -r2.xyxz
mad r0.xyz, r0.zzzz, r0.xywx, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, v1.xyxx, t0.xyzw, s0
add r2.xyz, r3.xyzx, -r4.xyzx
mad r3.xyzw, v1.xyxy, l(0.500000, 0.500000, 0.500000, 0.500000), l(0.500000, 0.000000, 0.000000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r3.xyxx, t4.xyzw, s4
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zwzz, t4.xyzw, s4
add r3.xyz, -r4.xyzx, r3.xyzx
add r5.xyz, -r4.xyzx, r5.xyzx
mul r5.xyz, r5.xyzx, cb4[3].yyyy
mad r2.xyz, r2.xyzx, cb4[3].xxxx, r5.xyzx
mad r2.xyz, r3.xyzx, cb4[3].zzzz, r2.xyzx
mad r3.xy, v1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t4.xyzw, s4
add r3.xyz, -r4.xyzx, r3.xyzx
mad r2.xyz, r3.xyzx, cb4[3].wwww, r2.xyzx
add_sat r2.xyz, r2.xyzx, r4.xyzx
mul r0.w, r4.w, v5.w
mul o0.w, r2.w, r0.w
mul r0.w, r2.w, cb4[220].x
dp3 r1.w, r2.xyzx, l(0.330000, 0.590000, 0.110000, 0.000000)
mad r3.xyz, r2.xyzx, r1.wwww, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r3.xyz, cb4[4].zzzz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, r3.xyzx
sqrt r2.xyz, r2.xyzx
add r0.xyz, r0.xyzx, -r2.xyzx
mad r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
div o0.xyz, r0.xyzx, cb3[1].wwww
ret 
// Approximately 76 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer cb3
// {
//
//   float4 cb3[3];                     // Offset:    0 Size:    48
//
// }
//
// cbuffer PER_INSTANCE
// {
//
//   float4 Ambient;                    // Offset:    0 Size:    16 [unused]
//   float4 AvgFogVolumeContrib;        // Offset:   16 Size:    16 [unused]
//   float4 AlphaTest;                  // Offset:   32 Size:    16
//   float4 SnowVolumeParams[2];        // Offset:   48 Size:    32 [unused]
//
// }
//
// cbuffer PER_MATERIAL
// {
//
//   float4 MatDifColor;                // Offset:    0 Size:    16 [unused]
//   float4 MatSpecColor;               // Offset:   16 Size:    16 [unused]
//   float4 MatEmissiveColor;           // Offset:   32 Size:    16
//   float4 __0WrinkleBlend0__1WrinkleBlend1__2WrinkleBlend2__3WrinkleBlend3;// Offset:   48 Size:    16
//   float3 __0LightWrapCoef__1RimStrength__2Melanin__3;// Offset:   64 Size:    12
//   float4 __0VNE_Width__1VNE_Glow__2__3VNE_Blend;// Offset:   80 Size:    16
//   float3 __0FresnelBias__1FresnelPower__2FresnelScale__3;// Offset:   96 Size:    12 [unused]
//   float3 __0VNE_NoiseInfluence__1VNE_NormalInfluence__2VNE_Tiling__3;// Offset:  128 Size:    12
//   float3 __0ScatterRadius__1SecondarySpecGloss__2SecondarySpecStrength__3;// Offset:  144 Size:    12 [unused]
//   float __0VNE_ColorBlend__1__2__3;  // Offset: 3520 Size:     4
//
// }
//
// cbuffer PER_LIGHT
// {
//
//   float4 LDiffuses0;                 // Offset:    0 Size:    16
//   float4 WorldLightsPos0;            // Offset:   16 Size:    16 [unused]
//   float4 ShadowChanMasks0;           // Offset:   32 Size:    16 [unused]
//   float4 LDiffuses1;                 // Offset:   48 Size:    16 [unused]
//   float4 WorldLightsPos1;            // Offset:   64 Size:    16 [unused]
//   float4 ShadowChanMasks1;           // Offset:   80 Size:    16 [unused]
//   float4 LDiffuses2;                 // Offset:   96 Size:    16 [unused]
//   float4 WorldLightsPos2;            // Offset:  112 Size:    16 [unused]
//   float4 ShadowChanMasks2;           // Offset:  128 Size:    16 [unused]
//   float4 LDiffuses3;                 // Offset:  144 Size:    16 [unused]
//   float4 WorldLightsPos3;            // Offset:  160 Size:    16 [unused]
//   float4 ShadowChanMasks3;           // Offset:  176 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// diffuseMapSampler_s               sampler      NA          NA    0        1
// shadowOccludeMapSampler_s         sampler      NA          NA    3        1
// decalMapSampler_s                 sampler      NA          NA    4        1
// volumeNoiseMapSampler_s           sampler      NA          NA    5        1
// gradientMapSampler_s              sampler      NA          NA    6        1
// VNE_DecalMapSampler_s             sampler      NA          NA    7        1
// sceneNormalsSampler_s             sampler      NA          NA   12        1
// sceneDiffuseAccSampler_s          sampler      NA          NA   13        1
// sceneNormalsBentSampler_s         sampler      NA          NA   14        1
// diffuseMapSampler                 texture  float4          2d    0        1
// shadowOccludeMapSampler           texture  float4          2d    3        1
// decalMapSampler                   texture  float4          2d    4        1
// volumeNoiseMapSampler             texture  float4          3d    5        1
// gradientMapSampler                texture  float4          2d    6        1
// VNE_DecalMapSampler               texture  float4          2d    7        1
// sceneNormalsSampler               texture  float4          2d   12        1
// sceneDiffuseAccSampler            texture  float4          2d   13        1
// sceneNormalsBentSampler           texture  float4          2d   14        1
// PER_INSTANCE                      cbuffer      NA          NA    1        1
// cb3                               cbuffer      NA          NA    3        1
// PER_MATERIAL                      cbuffer      NA          NA    4        1
// PER_LIGHT                         cbuffer      NA          NA    5        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xy w
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb3[3], immediateIndexed
dcl_constantbuffer cb1[3], immediateIndexed
dcl_constantbuffer cb4[221], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s12, mode_default
dcl_sampler s13, mode_default
dcl_sampler s14, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_input_ps linear v1.xy
dcl_input_ps linear v3.xyw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.w
dcl_output o0.xyzw
dcl_temps 6
mov r0.xyz, cb3[2].xyzx
mov r0.w, l(0.282090)
div r1.xy, v3.xyxx, v3.wwww
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyxx, t14.xyzw, s14
mad r2.xyzw, r2.xyzw, l(0.977200, 0.977200, 0.977200, 1.000000), l(-0.488600, -0.488600, -0.488600, 0.000000)
dp4 r0.x, r0.xyzw, r2.xyzw
mul_sat r0.x, r0.x, cb1[2].z
add r0.x, -r0.x, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r0.yzw, r1.xyxx, t12.wxyz, s12
mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
dp3 r1.z, r0.yzwy, r0.yzwy
rsq r1.z, r1.z
mul r0.yzw, r0.yyzw, r1.zzzz
dp3 r1.z, cb3[2].xyzx, r0.yzwy
mad r0.x, r1.z, r0.x, cb4[4].x
add r1.z, l(1.000000), cb4[4].x
div_sat r0.x, r0.x, r1.z
mul r2.xyz, r0.xxxx, cb5[0].xyzx
sample_indexable(texture2d)(float,float,float,float) r0.x, r1.xyxx, t3.wxyz, s3
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t13.xyzw, s13
add r0.x, -r0.x, l(1.000000)
mul r2.xyz, r0.xxxx, r2.xyzx
mad r1.xyz, r1.xyzx, cb3[1].wwww, r2.xyzx
add r1.xyz, r1.xyzx, cb4[2].xyzx
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb4[8].z
mul r0.x, r0.x, cb4[8].y
mul r0.xyz, r0.xxxx, r0.yzwy
mad r0.xyz, r0.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), v4.xyzx
mul r0.xyz, r0.xyzx, cb4[8].zzzz
sample_indexable(texture3d)(float,float,float,float) r0.x, r0.xyzx, t5.xyzw, s5
mad r0.x, r0.x, cb4[8].x, v4.w
add r0.x, r0.x, -cb4[5].w
max r0.y, l(0.000010), cb4[5].x
min r0.y, r0.y, l(1.000000)
div r0.x, r0.x, r0.y
add_sat r0.x, r0.x, l(1.000000)
add r0.x, -r0.x, l(1.000000)
mov r0.yz, l(0,0.750000,0.250000,0)
sample_indexable(texture2d)(float,float,float,float) r0.y, r0.xyxx, t6.yxzw, s6
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r0.xzxx, t6.xyzw, s6
mul r0.x, l(8.000000), cb4[5].y
exp r0.x, r0.x
mul r2.xyz, r0.xxxx, r2.xyzx
mul r3.xyzw, v1.xyxy, l(0.500000, 0.500000, 8.000000, 8.000000)
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r3.zwzz, t7.xyzw, s7
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t4.xyzw, s4
mad r0.xzw, r4.xxyz, r0.xxxx, -r2.xxyz
mad r0.xyz, r0.yyyy, r0.xzwx, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, v1.xyxx, t0.xyzw, s0
add r2.xyz, r3.xyzx, -r4.xyzx
mad r3.xyzw, v1.xyxy, l(0.500000, 0.500000, 0.500000, 0.500000), l(0.500000, 0.000000, 0.000000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r3.xyxx, t4.xyzw, s4
add r5.xyz, -r4.xyzx, r5.xyzx
mul r5.xyz, r5.xyzx, cb4[3].yyyy
mad r2.xyz, r2.xyzx, cb4[3].xxxx, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r3.zwzz, t4.xyzw, s4
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xwxx, t4.xyzw, s4
add r3.xyz, -r4.xyzx, r3.xyzx
add r5.xyz, -r4.xyzx, r5.xyzx
mad r2.xyz, r5.xyzx, cb4[3].zzzz, r2.xyzx
mad r2.xyz, r3.xyzx, cb4[3].wwww, r2.xyzx
add_sat r2.xyz, r2.xyzx, r4.xyzx
mul r0.w, r4.w, v5.w
mul o0.w, r2.w, r0.w
mul r0.w, r2.w, cb4[220].x
dp3 r1.w, r2.xyzx, l(0.330000, 0.590000, 0.110000, 0.000000)
mad r3.xyz, r2.xyzx, r1.wwww, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r3.xyz, cb4[4].zzzz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, r3.xyzx
sqrt r2.xyz, r2.xyzx
add r0.xyz, r0.xyzx, -r2.xyzx
mad r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
div o0.xyz, r0.xyzx, cb3[1].wwww
ret 
// Approximately 75 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
