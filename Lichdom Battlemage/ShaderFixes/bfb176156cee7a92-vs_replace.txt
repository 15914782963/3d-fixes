
cbuffer PER_BATCH : register(b0)
{
  float4 g_ScreenSize : packoffset(c0);
}

cbuffer PER_INSTANCE : register(b1)
{
  row_major float4x4 CompMatrix : packoffset(c0);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main( 
  float4 v0 : POSITION0,
  float2 v1 : TEXCOORD0,
  float3 v2 : TEXCOORD1,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float3 o2 : TEXCOORD1)
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;

  o0.x = dot(CompMatrix._m00_m01_m02_m03, v0.xyzw);
  o0.y = dot(CompMatrix._m10_m11_m12_m13, v0.xyzw);
  o0.z = dot(CompMatrix._m20_m21_m22_m23, v0.xyzw);
  o0.w = dot(CompMatrix._m30_m31_m32_m33, v0.xyzw);
  r0.xy = g_ScreenSize.xy * v1.xy;
  o1.zw = float2(2.500000e-001,2.500000e-001) * r0.xy;
  o1.xy = v1.xy;
  o2.xyz = v2.xyz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer PER_BATCH
// {
//
//   float4 g_ScreenSize;               // Offset:    0 Size:    16
//
// }
//
// cbuffer PER_INSTANCE
// {
//
//   row_major float4x4 CompMatrix;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// PER_BATCH                         cbuffer      NA          NA    0        1
// PER_INSTANCE                      cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v2.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_temps 1
dp4 o0.x, cb1[0].xyzw, v0.xyzw
dp4 o0.y, cb1[1].xyzw, v0.xyzw
dp4 o0.z, cb1[2].xyzw, v0.xyzw
dp4 o0.w, cb1[3].xyzw, v0.xyzw
mul r0.xy, v1.xyxx, cb0[0].xyxx
mul o1.zw, r0.xxxy, l(0.000000, 0.000000, 0.250000, 0.250000)
mov o1.xy, v1.xyxx
mov o2.xyz, v2.xyzx
ret 
// Approximately 9 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//   using 3Dmigoto v1.1.26 on Sat Jul 04 14:02:21 2015
//
//
// Buffer Definitions: 
//
// cbuffer PER_BATCH
// {
//
//   float4 g_ScreenSize;               // Offset:    0 Size:    16
//
// }
//
// cbuffer PER_INSTANCE
// {
//
//   row_major float4x4 CompMatrix;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// PER_BATCH                         cbuffer      NA          NA    0        1
// PER_INSTANCE                      cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v2.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_temps 1
dp4 o0.x, cb1[0].xyzw, v0.xyzw
dp4 o0.y, cb1[1].xyzw, v0.xyzw
dp4 o0.z, cb1[2].xyzw, v0.xyzw
dp4 o0.w, cb1[3].xyzw, v0.xyzw
mul r0.xy, v1.xyxx, cb0[0].xyxx
mul o1.zw, r0.xxxy, l(0.000000, 0.000000, 0.250000, 0.250000)
mov o1.xy, v1.xyxx
mov o2.xyz, v2.xyzx
ret 
// Approximately 9 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
