// CRC32: CF7AAB42 | Unity headers extracted from PlaneExterior_SurfaceShader.shader
// Shader "Custom/NewSurfaceShader" {
//   Properties {
//    _Color ("Color", Color) = (1,1,1,1)
//    _MainTex ("Albedo (RGB)", 2D) = "white" { }
//    _Glossiness ("Smoothness", Range(0,1)) = 0.5
//    _Metallic ("Metallic", Range(0,1)) = 0
//    _base_albedo ("Base Color", Color) = (1,1,1,1)
//    _color_1 ("Accent Color", Color) = (0.5,0.5,0.5,1)
//    _colorscheme_sharpness ("Colorscheme Sharpness", Float) = 0.05
//   [Space(8)] [Header(Layer 1 ____________________________________________________________________________)] [Space(6)]  _albedo_layer1 ("Albedo Layer1", 2D) = "white" { }
//   [Space(6)]  _base_specgloss ("Specular Smoothness Layer1", 2D) = "black" { }
//   [NoScaleOffset]  _occlusion ("Occlusion (A)", 2D) = "white" { }
//   [NoScaleOffset]  _base_normals ("Normals Layer1", 2D) = "bump" { }
//   [Space(8)] [Header(Layer 2 ____________________________________________________________________________)] [Space(6)]  _albedo_layer2 ("Albedo Layer2", 2D) = "white" { }
//   [NoScaleOffset]  _specular_layer_1 ("Specular Smoothness Layer2", 2D) = "black" { }
//   [NoScaleOffset]  _normalmap_layer_1 ("Normals Layer2", 2D) = "bump" { }
//   [Space(8)] [Header(Layer 3 ____________________________________________________________________________)] [Space(6)]  _albedo_layer3 ("Albedo Layer3", 2D) = "white" { }
//   [NoScaleOffset]  _layer_3_specgloss ("Specular Smoothness Layer3", 2D) = "black" { }
//   [Space(8)] [Header(Mix and Splat Map ____________________________________________________________________________)] [Space(6)]  _mixmaps ("mixmaps", 2D) = "white" { }
//   [Space(8)] [Header(Moss ____________________________________________________________________________)] [Space(6)] [Toggle(EFFECT_BUMP)]  _EnableMoss ("Enable Moss", Float) = 0
//   [NoScaleOffset]  _MossTex ("Moss Albedo (RGB) Smoothness (A)", 2D) = "white" { }
//   [NoScaleOffset]  _MossNormalMap ("Moss Normal Map (GA) Occlusion (B)", 2D) = "bump" { }
//    _MossTiling ("Moss Tiling (XY)", Vector) = (1,1,0,0)
//   [Space(10)]  _MossNormalStrength ("Moss Normal Strength", Range(0,1)) = 0.75
//    _MossSpread ("Moss Spread", Range(0,1)) = 0
//   [Header(MossMask(taken from Moss Normal))]  _MossMaskTiling ("Moss Mask Tiling", Range(0,0.1)) = 0.03
//   [Space(5)]  _MossTransStrength ("Moss Translucency Strength", Float) = 10
//    _MossTransColor ("Moss Translucency Color", Color) = (0.73,0.85,0.41,1)
//   }
//   Fallback "Diffuse"
//   SubShader 1/1 {
//     LOD 200
//     Tags { "RenderType"="Opaque" }
//     Pass 1/3 {
//       Name "FORWARD"
//       Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//       GpuProgramID 47050
//       Program "fp" {
//         SubProgram "d3d9 " {
//           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "EFFECT_BUMP" "LIGHTMAP_OFF" "SHADOWS_SCREEN" }
//           Vector 14 [_LightColor0]
//           Float 24 [_MossMaskTiling]
//           Float 22 [_MossNormalStrength]
//           Float 20 [_MossSpread]
//           Vector 21 [_MossTiling]
//           Vector 16 [_MossTransColor]
//           Float 23 [_MossTransStrength]
//           Vector 0 [_WorldSpaceCameraPos]
//           Vector 1 [_WorldSpaceLightPos0]
//           Vector 17 [_base_albedo]
//           Vector 18 [_color_1]
//           Float 19 [_colorscheme_sharpness]
//           Vector 13 [unity_ColorSpaceDielectricSpec]
//           Vector 15 [unity_LightGammaCorrectionConsts]
//           Vector 4 [unity_SHAb]
//           Vector 3 [unity_SHAg]
//           Vector 2 [unity_SHAr]
//           Vector 5 [unity_SpecCube0_BoxMax]
//           Vector 6 [unity_SpecCube0_BoxMin]
//           Vector 8 [unity_SpecCube0_HDR]
//           Vector 7 [unity_SpecCube0_ProbePosition]
//           Vector 9 [unity_SpecCube1_BoxMax]
//           Vector 10 [unity_SpecCube1_BoxMin]
//           Vector 12 [unity_SpecCube1_HDR]
//           Vector 11 [unity_SpecCube1_ProbePosition]
//           SetTexture 0 [unity_SpecCube0] CUBE 0
//           SetTexture 1 [unity_SpecCube1] CUBE 1
//           SetTexture 2 [_ShadowMapTexture] 2D 2
//           SetTexture 3 [_albedo_layer1] 2D 3
//           SetTexture 4 [_albedo_layer2] 2D 4
//           SetTexture 5 [_base_normals] 2D 5
//           SetTexture 6 [_normalmap_layer_1] 2D 6
//           SetTexture 7 [_specular_layer_1] 2D 7
//           SetTexture 8 [_occlusion] 2D 8
//           SetTexture 9 [_base_specgloss] 2D 9
//           SetTexture 10 [_mixmaps] 2D 10
//           SetTexture 11 [_albedo_layer3] 2D 11
//           SetTexture 12 [_layer_3_specgloss] 2D 12
//           SetTexture 13 [_MossTex] 2D 13
//           SetTexture 14 [_MossNormalMap] 2D 14
//         }
//       }
//     }
//   }
// }
//
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    def c25, 0.5, -0.5, 1.25, 9.99999975e-005
    def c26, -24, 32, 0.75, 7
    def c27, 0.999989986, 0.00100000005, 31.622776, 10
    def c28, 0.967999995, 0.0299999993, 0, 0
    def c29, -0.5, 2, -1, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xy
    dcl_texcoord3 v3
    dcl_texcoord4 v4
    dcl_texcoord5 v5
    dcl_color_pp v6
    dcl_texcoord6_pp v7.xyz
    dcl_texcoord7 v8
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    dcl_2d s9
    dcl_2d s10
    dcl_2d s11
    dcl_2d s12
    dcl_2d s13
    dcl_2d s14

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15

texldl r31, c220.z, s15

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --stereo-sampler-ps=s15 --fix-unity-reflection --only-autofixed --ignore-register-errors Custom_NewSurfaceShader/fp/CF7AAB42.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mov r0.x, v3.w
    mov r0.y, v4.w
    mov r0.z, v5.w
    add r1.xyz, -r0, r30
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul_pp r2.xyz, r0.w, r1
    mul r3.xyz, r2.y, v4
    mad r3.xyz, v3, r2.x, r3
    mad_pp r3.xyz, v5, r2.z, r3
    texld_pp r4, v0, s3
    texld_pp r5, v0.zwzw, s4
    texld_pp r6, v1, s11
    texld_pp r7, v1.zwzw, s10
    texld_pp r8, v0, s10
    add_pp r7.xy, -r7, v6
    rcp r1.w, v6.w
    mul_sat_pp r7.xy, r1.w, r7
    add_pp r2.w, -r6.w, v6.z
    mul_sat_pp r1.w, r1.w, r2.w
    add_pp r2.w, r8.w, c29.x
    rcp r3.w, c19.x
    mul_sat_pp r2.w, r2.w, r3.w
    mov r8.xyz, c17
    add_pp r8.xyz, -r8, c18
    mad_pp r8.xyz, r2.w, r8, c17
    lrp_pp r9.xyz, r7.x, r4, r8
    lrp_pp r4.xyz, r7.y, r5, r9
    lrp_pp r5.xyz, r1.w, r6, r4
    texld_pp r4, v0, s9
    texld_pp r6, v0.zwzw, s7
    texld_pp r8, v1, s12
    add_sat_pp r2.w, r7.y, r7.x
    lrp_pp r7.zw, r2.w, r6.xywx, r4.xywx
    lrp_pp r4.xy, r1.w, r8.wxzw, r7.zwzw
    texld_pp r6, v2, s5
    mad_pp r6.xy, r6.wyzw, c29.y, c29.z
    dp2add_sat_pp r2.w, r6, r6, c29.w
    add_pp r2.w, -r2.w, -c29.z
    rsq_pp r2.w, r2.w
    rcp_pp r6.z, r2.w
    texld_pp r8, v0.zwzw, s6
    mad_pp r8.xy, r8.wyzw, c29.y, c29.z
    dp2add_sat_pp r2.w, r8, r8, c29.w
    add_pp r2.w, -r2.w, -c29.z
    rsq_pp r2.w, r2.w
    rcp_pp r8.z, r2.w
    mul_pp r2.w, r7.y, r7.x
    lrp r7.xyz, r2.w, r8, r6
    lrp r8.xyz, r1.w, r6, r7
    dp3 r1.w, r8, r8
    rsq r1.w, r1.w
    mul r6.xyz, r1.w, r8
    texld_pp r7, v2, s8
    mul r4.zw, c21.xyxy, v0.xyxy
    texld_pp r9, r4.zwzw, s13
    texld_pp r10, r4.zwzw, s14
    mad_pp r10.xy, r10.wyzw, c29.y, c29.z
    dp2add_sat_pp r2.w, r10, r10, c29.w
    add_pp r2.w, -r2.w, -c29.z
    rsq_pp r2.w, r2.w
    rcp_pp r7.z, r2.w
    mul r4.zw, r0.xyxz, c24.x
    texld_pp r11, r4.zwzw, s14
    mad_pp r11.xy, r11.wyzw, c29.y, c29.z
    dp2add_sat_pp r2.w, r11, r11, c29.w
    add_pp r2.w, -r2.w, -c29.z
    rsq_pp r2.w, r2.w
    rcp_pp r11.z, r2.w
    mov r7.xy, c29.w
    mad_pp r11.xyz, r11, c29.y, r7
    mov_pp r10.z, -c29.z
    add_pp r11.xyz, r10, r11
    nrm_pp r12.xyz, r11
    dp3 r7.x, v4, r12
    dp3 r7.y, v5, r12
    mov r11.xzw, c29
    add_sat_pp r2.w, -r11.z, -c20.x
    dp2add_pp r2.w, r7, c25, -r2.w
    add_sat_pp r3.w, -r4.x, c25.z
    mul_pp r2.w, r2.w, r3.w
    mov r7.xy, c26
    mad_pp r3.w, c20.x, r7.x, r7.y
    mul_sat_pp r2.w, r2.w, r3.w
    mul_pp r2.w, r2.w, r2.w
    lrp_pp r12.xyz, r2.w, r9, r5
    lrp_pp r3.w, r2.w, r9.w, r4.x
    mul r4.x, r2.w, c22.x
    mov_pp r10.w, r7.z
    mad r5.xyz, r8, -r1.w, r10.xyww
    mad r4.xzw, r4.x, r5.xyyz, r6.xyyz
    nrm_pp r5.xyz, r4.xzww
    lrp_pp r1.w, r2.w, c13.x, r4.y
    lrp_pp r4.x, r2.w, r9.w, r7.w
    nrm r6.xyz, r3
    dp3_sat r3.x, r5, r6
    add_pp r3.x, -r3.x, -c29.z
    mul_pp r3.x, r3.x, r3.x
    mad_pp r4.yzw, r3.x, c25.w, r12.xxyz
    mul r2.w, r2.w, r3.x
    texldp_pp r6, v8, s2
    dp3_pp r7.x, v3, r5
    dp3_pp r7.y, v4, r5
    dp3_pp r7.z, v5, r5
    dp3_pp r3.x, r7, c1
    max_pp r5.x, r3.x, c29.w
    mov_pp r7.w, -c29.z
    dp4_pp r3.x, c2, r7
    dp4_pp r3.y, c3, r7
    dp4_pp r3.z, c4, r7
    add_pp r3.xyz, r3, v7
    mul_pp r5.yzw, r6.x, c14.xxyz
    mul_pp r3.xyz, r4.x, r3
    dp3 r6.x, -r2, r7
    add r6.x, r6.x, r6.x
    mad_pp r6.xyz, r7, -r6.x, -r2
    if_lt -c7.w, r11.w
    nrm_pp r8.xyz, r6
    add r9.xyz, -r0, c5
    rcp r10.x, r8.x
    rcp r10.y, r8.y
    rcp r10.z, r8.z
    mul_pp r9.xyz, r9, r10
    add r12.xyz, -r0, c6
    mul_pp r10.xyz, r10, r12
    cmp_pp r9.xyz, -r8, r10, r9
    min_pp r6.w, r9.y, r9.x
    min_pp r7.w, r9.z, r6.w
    mov r9.xyz, c6
    add r9.xyz, r9, c5
    mad r10.xyz, r9, -r11.x, -c7
    add r10.xyz, r0, r10
    mad r8.xyz, r8, r7.w, r10
    mad_pp r8.xyz, r9, c29.x, r8
    else
    mov_pp r8.xyz, r6
    endif
    add_pp r6.w, -r3.w, -c29.z
    pow_pp r7.w, r6.w, c26.z
    mul_pp r8.w, r7.w, c26.w
    texldl_pp r9, r8, s0
    pow_pp r7.w, r9.w, c8.y
    mul_pp r7.w, r7.w, c8.x
    mul_pp r10.xyz, r9, r7.w
    mov r9.w, c6.w
    if_lt r9.w, c27.x
    if_lt -c11.w, r11.w
    nrm_pp r12.xyz, r6
    add r13.xyz, -r0, c9
    rcp r14.x, r12.x
    rcp r14.y, r12.y
    rcp r14.z, r12.z
    mul_pp r13.xyz, r13, r14
    add r15.xyz, -r0, c10
    mul_pp r14.xyz, r14, r15
    cmp_pp r13.xyz, -r12, r14, r13
    min_pp r9.w, r13.y, r13.x
    min_pp r10.w, r13.z, r9.w
    mov r13.xyz, c9
    add r13.xyz, r13, c10
    mad r11.xyw, r13.xyzz, -r11.x, -c11.xyzz
    add r0.xyz, r0, r11.xyww
    mad r0.xyz, r12, r10.w, r0
    mad_pp r8.xyz, r13, c29.x, r0
    else
    mov_pp r8.xyz, r6
    endif
    texldl_pp r8, r8, s1
    pow_pp r0.x, r8.w, c12.y
    mul_pp r0.x, r0.x, c12.x
    mul_pp r0.xyz, r8, r0.x
    mad r6.xyz, r7.w, r9, -r0
    mad_pp r10.xyz, c6.w, r6, r0
    endif
    mul_pp r0.xyz, r4.x, r10
    mul r6.xyz, r2.w, c16
    mad r6.xyz, r6, c23.x, -r11.z
    nrm_pp r8.xyz, r7
    add_pp r2.w, -r1.w, -c29.z
    mul_pp r4.xyz, r2.w, r4.yzww
    mad_pp r1.xyz, r1, r0.w, c1
    dp3_pp r0.w, r1, r1
    add r4.w, -r0.w, c27.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r4.w, c27.z, r0.w
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r8, r1
    max_pp r4.w, r0.w, c29.w
    dp3_pp r0.w, r8, r2
    max_pp r2.x, r0.w, c29.w
    dp3_pp r0.w, c1, r1
    max_pp r1.x, r0.w, c29.w
    mul_pp r0.w, r6.w, r6.w
    mul_pp r1.y, r0.w, c15.w
    mad_pp r0.w, r0.w, -c15.w, -r11.z
    mad_pp r1.z, r5.x, r0.w, r1.y
    mad_pp r0.w, r2.x, r0.w, r1.y
    mad r0.w, r1.z, r0.w, c25.w
    rcp_pp r0.w, r0.w
    add_pp r1.y, -r6.w, -c29.z
    mad_pp r1.y, r1.y, c28.x, c28.y
    log_pp r1.y, r1.y
    rcp r1.y, r1.y
    mul_pp r1.y, r1.y, c27.w
    mul_pp r1.z, r1.y, r1.y
    mad_pp r1.y, r1.y, r1.y, -c29.z
    mul_pp r1.y, r1.y, c15.y
    pow_pp r2.y, r4.w, r1.z
    mul_pp r1.y, r1.y, r2.y
    add_pp r1.z, -r5.x, -c29.z
    mul_pp r2.y, r1.z, r1.z
    mul_pp r2.y, r2.y, r2.y
    mul_pp r1.z, r1.z, r2.y
    add_pp r2.x, -r2.x, -c29.z
    mul_pp r2.y, r2.x, r2.x
    mul_pp r2.y, r2.y, r2.y
    mul_pp r2.x, r2.x, r2.y
    mul_pp r2.y, r1.x, r1.x
    dp2add_pp r2.y, r2.y, r6.w, c29.x
    mad_pp r1.z, r2.y, r1.z, -c29.z
    mad_pp r2.y, r2.y, r2.x, -c29.z
    mul_pp r1.z, r1.z, r2.y
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r5.x, r0.w
    mul_pp r0.w, r0.w, c15.x
    max_pp r1.y, r0.w, c29.w
    mul_pp r0.w, r5.x, r1.z
    add_pp r1.z, -r2.w, r3.w
    add_sat_pp r1.z, r1.z, -c29.z
    mul_pp r2.yzw, r0.w, r5
    mad_pp r2.yzw, r3.xxyz, r6.xxyz, r2
    mul_pp r3.xyz, r5.yzww, r1.y
    add_pp r0.w, -r1.x, -c29.z
    mul_pp r1.x, r0.w, r0.w
    mul_pp r1.x, r1.x, r1.x
    mul_pp r0.w, r0.w, r1.x
    lrp_pp r3.w, r0.w, -c29.z, r1.w
    mul_pp r3.xyz, r3.w, r3
    mad_pp r2.yzw, r4.xxyz, r2, r3.xxyz
    lrp_pp r0.w, r2.x, r1.z, r1.w
    mad_pp oC0.xyz, r0, r0.w, r2.yzww
    mov_pp oC0.w, -c29.z
