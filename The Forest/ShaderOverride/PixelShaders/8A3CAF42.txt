// CRC32: 8A3CAF42 | Unity headers extracted from AFS Tree Bark Lower Moss.shader
// Shader "AFS/Tree Bark Lower Moss" {
//   Properties {
//   [Header(Base and Detail Maps)] [Space]  _Color ("Color Variation", Color) = (0.9,0.5,0,0.1)
//    _MainTex ("Albedo (RGB) Smoothness (A)", 2D) = "white" { }
//   [NoScaleOffset] [Normal]  _BumpTex ("Normal Map", 2D) = "bump" { }
//   [NoScaleOffset]  _SpecGlossMap ("Detail Mask (G) Noise (B) Occlusion (A)", 2D) = "white" { }
//   [Space(5)]  _DetailAlbedoMap ("Detail Albedo x2", 2D) = "grey" { }
//   [NoScaleOffset] [Normal]  _DetailNormalMap ("Detail Normal Map", 2D) = "bump" { }
//   [Space]  _VertexAOStrength ("Brighten Vertex AO", Range(0,2)) = 1.3
//   [NoScaleOffset] [Space(5)] [Header(Moss)] [Space]  _MossTex ("Moss Albedo (RGB) Smoothness (A)", 2D) = "white" { }
//   [NoScaleOffset]  _MossNormalMap ("Moss Normal Map", 2D) = "bump" { }
//    _MossTiling ("Moss Tiling (XY)", Vector) = (1,1,0,0)
//   [Space(10)]  _MossNormalStrength ("Moss Normal Strength", Range(0,1)) = 0.75
//    _MossContrast ("Moss Density", Range(0,1)) = 0
//    _MossSpread ("Moss Spread", Range(0,1)) = 0
//    _MossHeight ("Moss Height", Range(0,100)) = 5
//   [Space(5)]  _MossTransStrength ("Moss Translucency Strength", Float) = 10
//    _MossTransColor ("Moss Translucency Color", Color) = (0.73,0.85,0.41,1)
//   }
//   Fallback "Diffuse"
//   SubShader 1/1 {
//     LOD 200
//     Tags { "RenderType"="Opaque" }
//     Pass 2/3 {
//       Name "FORWARD"
//       Tags { "LIGHTMODE"="ForwardAdd" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//       ZWrite Off
//       Blend One One
//       GpuProgramID 110402
//       Program "fp" {
//         SubProgram "d3d9 " {
//           Keywords { "SHADOWS_OFF" "SPOT" }
//           Matrix 0 [_LightMatrix0]
//           Vector 10 [_Color]
//           Vector 8 [_LightColor0]
//           Float 11 [_MossContrast]
//           Float 13 [_MossNormalStrength]
//           Vector 12 [_MossTiling]
//           Vector 4 [_WorldSpaceCameraPos]
//           Vector 5 [_WorldSpaceLightPos0]
//           Vector 7 [unity_ColorSpaceDielectricSpec]
//           Vector 6 [unity_ColorSpaceDouble]
//           Vector 9 [unity_LightGammaCorrectionConsts]
//           SetTexture 0 [_LightTexture0] 2D 0
//           SetTexture 1 [_LightTextureB0] 2D 1
//           SetTexture 2 [_MainTex] 2D 2
//           SetTexture 3 [_BumpTex] 2D 3
//           SetTexture 4 [_SpecGlossMap] 2D 4
//           SetTexture 5 [_DetailAlbedoMap] 2D 5
//           SetTexture 6 [_DetailNormalMap] 2D 6
//           SetTexture 7 [_MossTex] 2D 7
//           SetTexture 8 [_MossNormalMap] 2D 8
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    def c14, 0.5, -0.5, 9.99999975e-005, 0.00100000005
    def c15, 2, -1, 0, 1
    def c16, 31.622776, 0.967999995, 0.0299999993, 10
    dcl_texcoord v0
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.xyz
    dcl_texcoord3_pp v3.xyz
    dcl_texcoord4 v4.xyz
    dcl_color_pp v5.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15

texldl r31, c220.z, s15

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --stereo-sampler-ps=s15 --fix-unity-reflection --only-autofixed --ignore-register-errors AFS_Tree Bark Lower Moss/fp/8A3CAF42.txt
mov r30, c4
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    texld_pp r0, v0.zwzw, s5
    mul_pp r0.xyz, r0, c6
    texld_pp r1, v0, s4
    add_pp r0.w, -r1.y, c15.w
    mad_pp r0.xyz, r0, r1.y, r0.w
    texld_pp r2, v0, s2
    mad_pp r1.xyw, r2.xyzz, r0.xyzz, c10.xyzz
    mul_pp r0.xyz, r0, r2
    mad_pp r1.xyw, r1, c14.x, -r0.xyzz
    mul_pp r0.w, c10.w, v5.y
    mad_pp r2.xyz, r0.w, r1.xyww, r0
    mov r0.xy, c14
    mad r0.y, v5.x, c11.x, r0.y
    mad_sat r0.x, r0.y, c11.x, r0.x
    mul_pp r0.x, r1.z, r0.x
    mul_pp r0.x, r0.x, r0.x
    mul_pp r0.x, r0.x, r0.x
    mul r0.yz, c12.xxyw, v0.xxyw
    texld_pp r1, r0.yzzw, s7
    texld_pp r3, r0.yzzw, s8
    mad_pp r3.xy, r3.wyzw, c15.x, c15.y
    lrp_pp r4, r0.x, r1, r2
    mul_pp r0.x, r0.x, c13.x
    add_pp r0.y, -r4.w, c15.w
    add_pp r0.z, -r0.y, c15.w
    mad_pp r0.z, r0.z, c16.y, c16.z
    log_pp r0.z, r0.z
    rcp r0.z, r0.z
    mul_pp r0.z, r0.z, c16.w
    mul_pp r0.w, r0.z, r0.z
    mad_pp r0.z, r0.z, r0.z, c15.w
    mul_pp r0.z, r0.z, c9.y
    dp2add_sat_pp r1.x, r3, r3, c15.z
    add_pp r1.x, -r1.x, c15.w
    rsq_pp r1.x, r1.x
    rcp_pp r3.z, r1.x
    texld_pp r1, v0, s3
    mad_pp r1.xy, r1.wyzw, c15.x, c15.y
    dp2add_sat_pp r1.z, r1, r1, c15.z
    add_pp r1.z, -r1.z, c15.w
    rsq_pp r1.z, r1.z
    rcp_pp r1.z, r1.z
    texld_pp r2, v0.zwzw, s6
    mad_pp r2.xy, r2.wyzw, c15.x, c15.y
    dp2add_sat_pp r1.w, r2, r2, c15.z
    add_pp r2.xy, r1, r2
    add_pp r1.x, -r1.w, c15.w
    rsq_pp r1.x, r1.x
    rcp_pp r1.x, r1.x
    mul_pp r2.z, r1.x, r1.z
    dp3_pp r1.x, r2, r2
    rsq_pp r1.x, r1.x
    mad_pp r1.yzw, r2.xxyz, -r1.x, r3.xxyz
    mul_pp r2.xyz, r1.x, r2
    mad_pp r1.xyz, r0.x, r1.yzww, r2
    nrm_pp r2.xyz, r1
    dp3_pp r1.x, v1, r2
    dp3_pp r1.y, v2, r2
    dp3_pp r1.z, v3, r2
    nrm_pp r3.xyz, r1
    add r5.xyz, c5, -v4
    dp3 r0.x, r5, r5
    rsq r0.x, r0.x
    add r6.xyz, r30, -v4
    nrm_pp r7.xyz, r6
    mad_pp r6.xyz, r5, r0.x, r7
    mul_pp r5.xyz, r0.x, r5
    dp3_pp r0.x, r6, r6
    add r1.w, -r0.x, c14.w
    rsq_pp r0.x, r0.x
    cmp_pp r0.x, r1.w, c16.x, r0.x
    mul_pp r6.xyz, r0.x, r6
    dp3_pp r0.x, r3, r6
    dp3_pp r1.w, r3, r7
    max_pp r2.y, r1.w, c15.z
    dp3_pp r1.w, r5, r6
    dp3_pp r1.x, r1, r5
    max_pp r2.w, r1.x, c15.z
    max_pp r3.x, r1.w, c15.z
    max_pp r1.x, r0.x, c15.z
    pow_pp r3.y, r1.x, r0.w
    mul_pp r0.x, r0.z, r3.y
    mul_pp r0.z, r0.y, r0.y
    mul_pp r0.w, r0.z, c9.w
    mov r1.w, c15.w
    mad_pp r0.z, r0.z, -c9.w, r1.w
    mad_pp r1.x, r2.w, r0.z, r0.w
    mad_pp r0.z, r2.y, r0.z, r0.w
    add_pp r0.w, -r2.y, c15.w
    mad r0.z, r1.x, r0.z, c14.z
    rcp_pp r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    mul_pp r0.x, r2.w, r0.x
    mul_pp r0.x, r0.x, c9.x
    max_pp r1.x, r0.x, c15.z
    mad r5, v4.xyzx, c15.wwwz, c15.zzzw
    dp4 r0.x, c3, r5
    rcp r0.x, r0.x
    dp4 r6.x, c0, r5
    dp4 r6.y, c1, r5
    dp4 r6.z, c2, r5
    mad r0.xz, r6.xyyw, r0.x, c14.x
    dp3 r1.y, r6, r6
    texld_pp r5, r1.y, s1
    texld_pp r8, r0.xzzw, s0
    mul r0.x, r5.x, r8.w
    mul_pp r3.yzw, r0.x, c8.xxyz
    cmp_pp r3.yzw, -r6.z, c15.z, r3
    mul_pp r1.xyz, r1.x, r3.yzww
    add_pp r0.x, -r3.x, c15.w
    mul_pp r0.z, r3.x, r3.x
    dp2add_pp r0.y, r0.z, r0.y, c14.y
    mul_pp r0.z, r0.x, r0.x
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    add_pp r0.z, r1.w, -c7.x
    lrp_pp r2.y, r0.x, r1.w, c7.x
    mul_pp r1.xyz, r1, r2.y
    mul_pp r5.xy, r7.y, v2.xzzw
    mad_pp r5.xy, v1.xzzw, r7.x, r5
    mad_pp r5.xy, v3.xzzw, r7.z, r5
    dp2add_pp r0.x, r5, r5, c15.z
    rsq_pp r0.x, r0.x
    mul_pp r5.xy, r0.x, r5
    dp2add_sat_pp r0.x, r2.xzzw, r5, c15.z
    add_pp r0.x, -r0.x, c15.w
    mul_pp r0.x, r0.x, r0.x
    mad_pp r2.xyz, r0.x, c14.z, r4
    mul_pp r2.xyz, r0.z, r2
    mul_pp r0.x, r0.w, r0.w
    mul_pp r0.x, r0.x, r0.x
    mul_pp r0.x, r0.w, r0.x
    mad_pp r0.x, r0.y, r0.x, c15.w
    add_pp r0.z, -r2.w, c15.w
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.y, r0.y, r0.z, c15.w
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.x, r2.w, r0.x
    mul_pp r0.xyz, r0.x, r3.yzww
    mad_pp oC0.xyz, r2, r0, r1
    mov_pp oC0.w, c15.w
