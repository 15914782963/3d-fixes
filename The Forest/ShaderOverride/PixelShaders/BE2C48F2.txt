// CRC32: BE2C48F2 | Unity headers extracted from Lux Skin Deferred.shader
// Shader "Lux/Human/Skin Deferred" {
//   Properties {
//    _Color ("Color", Color) = (1,1,1,1)
//    _MainTex ("Albedo (RGB)", 2D) = "white" { }
//   [NoScaleOffset]  _SpecTex ("Smoothness (G) SSS Mask (B), AO (A)", 2D) = "gray" { }
//   [NoScaleOffset]  _BumpMap ("Bump Map", 2D) = "bump" { }
//   [Header(Bump Settings)] [Space(4)]  _SimpleBumpBias ("Diffuse Normal Map Blur Bias", Float) = 1.5
//   [Header(Preintegrated Skin Lighting)] [Space(4)]  _CurvatureInfluence ("Curvature Influence", Range(0,1)) = 0.5
//    _CurvatureScale ("Curvature Scale", Float) = 0.02
//   [Header(Damage)] [Space(4)] [Toggle(_SPECGLOSSMAP)]  _UseDamage ("Enable Damage", Float) = 0
//    _BloodColor ("Blood Color", Color) = (0.56,0.1,0,1)
//   [NoScaleOffset]  _BloodTex ("Blood Detail Map: Smoothness(G) Brightness(B) Mask(A)", 2D) = "black" { }
//    _BloodTiling ("Blood Detail Tiling", Float) = 5
//    _Sharpness ("Blood Spread", Range(0.5,8)) = 2
//   [NoScaleOffset] [Space(8)]  _BloodSplat ("Blood Splatmap: Top(R) Left(G) Right(B) Enemy(A)", 2D) = "white" { }
//   [Space(8)]  _Damage1 ("Damage Top (R)", Range(0,1)) = 0
//    _Damage2 ("Damage Left (G)", Range(0,1)) = 0
//    _Damage3 ("Damage Right (B)", Range(0,1)) = 0
//    _Damage4 ("Damage Enemy (A)", Range(0,1)) = 0
//   }
//   Fallback "Diffuse"
//   SubShader 1/1 {
//     LOD 200
//     Tags { "RenderType"="Opaque" }
//     Pass 2/3 {
//       Name "FORWARD"
//       Tags { "LIGHTMODE"="ForwardAdd" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//       ZWrite Off
//       Blend One One
//       GpuProgramID 120633
//       Program "fp" {
//         SubProgram "d3d9 " {
//           Keywords { "POINT" "SHADOWS_OFF" }
//           Matrix 0 [_LightMatrix0] 3
//           Vector 8 [_Color]
//           Float 11 [_CurvatureInfluence]
//           Float 10 [_CurvatureScale]
//           Vector 6 [_LightColor0]
//           Float 9 [_SimpleBumpBias]
//           Vector 3 [_WorldSpaceCameraPos]
//           Vector 4 [_WorldSpaceLightPos0]
//           Vector 5 [unity_ColorSpaceDielectricSpec]
//           Vector 7 [unity_LightGammaCorrectionConsts]
//           SetTexture 0 [_LightTexture0] 2D 0
//           SetTexture 1 [_BRDFTex] 2D 1
//           SetTexture 2 [_MainTex] 2D 2
//           SetTexture 3 [_BumpMap] 2D 3
//           SetTexture 4 [_SpecTex] 2D 4
//         }
//       }
//     }
//   }
// }
//
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    def c12, 2, -1, 0, 1
    def c13, 9.99999975e-006, 100000, 0.5, 1
    def c14, -5.55472994, -6.98316002, 9.99999975e-005, 3.14159274
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.xyz
    dcl_texcoord3_pp v3.xyz
    dcl_texcoord4 v4.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15

texldl r31, c220.z, s15

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --stereo-sampler-ps=s15 --fix-unity-reflection --only-autofixed --ignore-register-errors Lux_Human_Skin Deferred/fp/BE2C48F2.txt
mov r30, c3
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    texld_pp r0, v0, s3
    mad_pp r0.xy, r0.wyzw, c12.x, c12.y
    dp2add_sat_pp r0.w, r0, r0, c12.z
    add_pp r0.w, -r0.w, c12.w
    rsq_pp r0.w, r0.w
    rcp_pp r0.z, r0.w
    dp3_pp r1.x, v1, r0
    dp3_pp r1.y, v2, r0
    dp3_pp r1.z, v3, r0
    nrm_pp r0.xyz, r1
    add r2.xyz, r30, -v4
    nrm_pp r3.xyz, r2
    add r2.xyz, c4, -v4
    dp3 r0.w, r2, r2
    rsq r0.w, r0.w
    mad_pp r4.xyz, r2, r0.w, r3
    dp3_pp r1.w, r0, r3
    max_pp r2.w, r1.w, c12.z
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r3.xyz, r4
    dp3_pp r0.x, r0, r3
    dp3_pp r0.y, r2, r3
    max_pp r1.w, r0.y, c12.z
    max_pp r3.x, r0.x, c12.z
    mul r0.x, r3.x, r3.x
    texld_pp r3, v0, s4
    add_pp r0.y, -r3.y, c12.w
    mul_pp r0.y, r0.y, r0.y
    mad r0.z, r0.y, r0.y, c12.y
    mad_pp r0.x, r0.x, r0.z, c12.w
    mul r0.z, r0.x, c14.w
    mul r0.x, r0.x, r0.z
    rcp r0.x, r0.x
    mul_pp r0.z, r0.y, r0.y
    mul_pp r0.x, r0.x, r0.z
    dp3_pp r0.z, r1, r2
    max_pp r1.x, r0.z, c12.z
    mul_pp r0.z, r0.y, c13.z
    mad_pp r0.y, r0.y, -c13.z, c13.w
    mad_pp r0.w, r1.x, r0.y, r0.z
    mad_pp r0.y, r2.w, r0.y, r0.z
    mad r0.y, r0.w, r0.y, c14.z
    rcp_pp r0.y, r0.y
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.x, r1.x, r0.x
    mul_pp r0.x, r0.x, c7.x
    max_pp r1.y, r0.x, c12.z
    mad_pp r0.x, r1.w, c14.x, c14.y
    mul_pp r0.x, r1.w, r0.x
    exp_pp r0.x, r0.x
    max_pp r0.y, c5.x, c5.y
    max_pp r1.z, r0.y, c5.z
    add_pp r0.y, -r1.z, c12.w
    add_pp r0.z, -r0.y, c12.w
    mad_pp r0.x, r0.y, r0.x, r0.z
    mul_pp r0.x, r0.x, r1.y
    mad r4, v4.xyzx, c12.wwwz, c12.zzzw
    dp4 r5.x, c0, r4
    dp4 r5.y, c1, r4
    dp4 r5.z, c2, r4
    dp3 r0.z, r5, r5
    texld_pp r4, r0.z, s0
    mul_pp r1.yzw, r4.x, c6.xxyz
    mul_pp r0.xzw, r0.x, r1.yyzw
    mul_pp r0.xzw, r1.x, r0
    mov_sat_pp r1.x, c6.w
    mul_pp r0.xzw, r0, r1.x
    dsx r3.xyw, v4.xyzz
    dsy r4.xyz, v4
    add r3.xyw, r3_abs, r4_abs.xyzz
    max r4.xyz, c13.x, r3.xyww
    dp3 r1.x, r4, r4
    rsq r1.x, r1.x
    rcp r2.w, r1.x
    cmp r1.x, -r2.w, c13.y, r1.x
    mul r4.xyz, c12.wwzw, v0.xyxw
    mov r4.w, c9.x
    texldl_pp r4, r4, s3
    mad_pp r4.xy, r4.wyzw, c12.x, c12.y
    dp2add_sat_pp r2.w, r4, r4, c12.z
    add_pp r2.w, -r2.w, c12.w
    rsq_pp r2.w, r2.w
    rcp_pp r4.z, r2.w
    dp3_pp r5.x, v1, r4
    dp3_pp r5.y, v2, r4
    dp3_pp r5.z, v3, r4
    dsx_pp r3.xyw, r5.xyzz
    dsy_pp r4.xyz, r5
    dp3 r2.x, r5, r2
    mad_sat r2.x, r2.x, c13.z, c13.z
    add_pp r3.xyw, r3_abs, r4_abs.xyzz
    dp3_pp r3.x, r3.xyww, r3.xyww
    rsq_pp r3.x, r3.x
    rcp r3.x, r3.x
    mul r1.x, r1.x, r3.x
    mad_pp r1.x, r1.x, c10.x, -r3.z
    mad_pp r1.x, c11.x, r1.x, r3.z
    cmp_pp r2.y, -c11.x, r3.z, r1.x
    mov r2.zw, c12.z
    texldl_pp r2, r2, s1
    mul_pp r1.xyz, r1.yzww, r2
    texld r2, v0, s2
    mul_pp r2.xyz, r2, c8
    mul_pp r2.xyz, r0.y, r2
    mad_pp oC0.xyz, r2, r1, r0.xzww
    mov_pp oC0.w, c12.w
