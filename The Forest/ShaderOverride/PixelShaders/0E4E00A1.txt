// CRC32: 0E4E00A1 | Unity headers extracted from AFS Tree Leaves Tumbling.shader
// Shader "AFS/Tree Leaves Tumbling" {
//   Properties {
//   [Header(Base and Detail Maps)] [Space]  _Color ("Color Variation", Color) = (0.9,0.5,0,0.2)
//   [LM_Albedo] [LM_Transparency]  _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
//   [LM_TransparencyCutOff]  _Cutoff ("Alpha cutoff", Range(0,1)) = 0.3
//   [NoScaleOffset] [Space]  _BumpTransSpecMap ("Normal (GA) Trans(R) Smoothness(B)", 2D) = "bump" { }
//   [LM_Specular]  _SpecularReflectivity ("Specular Reflectivity", Color) = (0.2,0.2,0.2,1)
//    _TranslucencyColor ("Translucency Color", Color) = (0.73,0.85,0.41,1)
//    _TranslucencyViewDependency ("View dependency", Range(0,1)) = 0.7
//   [Space(5)] [Header(Cut Leaves)] [Space]  _CutHeight ("Cut Height", Range(0,100)) = 0
//   [Space(5)] [Header(Wind)] [Space]  _LeafTurbulence ("Leaf Turbulence", Range(0,1)) = 0.5
//    _TumbleStrength ("Tumble Strength", Range(0,1)) = 0.1
//    _TumbleFrequency ("Tumble Frequency", Range(0,4)) = 1
//   [Space(5)] [Header(Stippling and Wind Fading)] [Space]  _StippleNear ("Stipple Near", Range(0,600)) = 180
//    _StippleFar ("Stipple Far", Range(0,600)) = 200
//    _WindNear ("Wind Near", Range(0,600)) = 180
//    _WindFar ("Wind Far", Range(0,600)) = 200
//   [Space(5)] [Enum(Static,0,Falling,1)]  _TreeBendingMode ("Tree Bending Mode", Float) = 0
//   [HideInInspector] [Space(5)]  _Variation ("Variation", Float) = 0
//   }
//   SubShader 1/1 {
//     LOD 200
//     Tags { "IGNOREPROJECTOR"="true" "RenderType"="AFSTreeLeaf" }
//     Pass 1/4 {
//       Name "FORWARD"
//       Tags { "LIGHTMODE"="ForwardBase" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="AFSTreeLeaf" }
//       Cull Off
//       GpuProgramID 18664
//       Program "fp" {
//         SubProgram "d3d9 " {
//           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_OFF" }
//           Vector 15 [_Color]
//           Float 16 [_Cutoff]
//           Vector 13 [_LightColor0]
//           Vector 17 [_SpecularReflectivity]
//           Vector 0 [_WorldSpaceCameraPos]
//           Vector 1 [_WorldSpaceLightPos0]
//           Vector 14 [unity_LightGammaCorrectionConsts]
//           Vector 4 [unity_SHAb]
//           Vector 3 [unity_SHAg]
//           Vector 2 [unity_SHAr]
//           Vector 5 [unity_SpecCube0_BoxMax]
//           Vector 6 [unity_SpecCube0_BoxMin]
//           Vector 8 [unity_SpecCube0_HDR]
//           Vector 7 [unity_SpecCube0_ProbePosition]
//           Vector 9 [unity_SpecCube1_BoxMax]
//           Vector 10 [unity_SpecCube1_BoxMin]
//           Vector 12 [unity_SpecCube1_HDR]
//           Vector 11 [unity_SpecCube1_ProbePosition]
//           SetTexture 0 [unity_SpecCube0] CUBE 0
//           SetTexture 1 [unity_SpecCube1] CUBE 1
//           SetTexture 2 [_MainTex] 2D 2
//           SetTexture 3 [_BumpTransSpecMap] 2D 3
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    def c18, 0.5, 2, -1, 0
    def c19, 0.75, 7, 0.999989986, 0.00100000005
    def c20, 31.622776, 9.99999975e-005, 0.967999995, 0.0299999993
    def c21, 10, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_color_pp v4.yw
    dcl_texcoord4 v5
    dcl_texcoord5 v6.x
    dcl_texcoord6_pp v7.xyz
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15

texldl r31, c220.z, s15

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --stereo-sampler-ps=s15 --fix-unity-reflection --only-autofixed --ignore-register-errors AFS_Tree Leaves Tumbling/fp/0E4E00A1.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mov r0.x, v1.w
    mov r0.y, v2.w
    mov r0.z, v3.w
    add r1.xyz, -r0, r30
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul_pp r2.xyz, r0.w, r1
    texld_pp r3, v0, s2
    add r1.w, r3.w, -c16.x
    add r4, r1.w, -v6.x
    texkill r4
    texld_pp r4, v0, s3
    add_pp r5.xyz, r3, c15
    mul_pp r1.w, c15.w, v4.y
    mad_pp r5.xyz, r5, c18.x, -r3
    mad_pp r3.xyz, r1.w, r5, r3
    mad_pp r5.xy, r4.wyzw, c18.y, c18.z
    dp2add_sat_pp r1.w, r5, r5, c18.w
    add_pp r1.w, -r1.w, -c18.z
    rsq_pp r1.w, r1.w
    rcp_pp r5.z, r1.w
    mul r4.xyw, r4.x, v5.xyzz
    mad_pp r3.xyz, r4.xyww, v4.w, r3
    dp3_pp r6.x, v1, r5
    dp3_pp r6.y, v2, r5
    dp3_pp r6.z, v3, r5
    dp3_pp r1.w, r6, c1
    max_pp r2.w, r1.w, c18.w
    mov r6.w, -c18.z
    dp4_pp r5.x, c2, r6
    dp4_pp r5.y, c3, r6
    dp4_pp r5.z, c4, r6
    add_pp r4.xyw, r5.xyzz, v7.xyzz
    dp3 r1.w, -r2, r6
    add r1.w, r1.w, r1.w
    mad_pp r5.xyz, r6, -r1.w, -r2
    mov r7.xzw, c18
    if_lt -c7.w, r7.w
    nrm_pp r8.xyz, r5
    add r9.xyz, -r0, c5
    rcp r10.x, r8.x
    rcp r10.y, r8.y
    rcp r10.z, r8.z
    mul_pp r9.xyz, r9, r10
    add r11.xyz, -r0, c6
    mul_pp r10.xyz, r10, r11
    cmp_pp r9.xyz, -r8, r10, r9
    min_pp r1.w, r9.y, r9.x
    min_pp r3.w, r9.z, r1.w
    mov r9.xyz, c6
    add r9.xyz, r9, c5
    mad r10.xyz, r9, r7.x, -c7
    add r10.xyz, r0, r10
    mad r8.xyz, r8, r3.w, r10
    mad_pp r8.xyz, r9, -c18.x, r8
    else
    mov_pp r8.xyz, r5
    endif
    mad_pp r1.w, r4.z, -v5.w, -c18.z
    pow_pp r3.w, r1.w, c19.x
    mul_pp r8.w, r3.w, c19.y
    texldl_pp r9, r8, s0
    pow_pp r3.w, r9.w, c8.y
    mul_pp r3.w, r3.w, c8.x
    mul_pp r10.xyz, r9, r3.w
    mov r5.w, c6.w
    if_lt r5.w, c19.z
    if_lt -c11.w, r7.w
    nrm_pp r11.xyz, r5
    add r12.xyz, -r0, c9
    rcp r13.x, r11.x
    rcp r13.y, r11.y
    rcp r13.z, r11.z
    mul_pp r12.xyz, r12, r13
    add r14.xyz, -r0, c10
    mul_pp r13.xyz, r13, r14
    cmp_pp r12.xyz, -r11, r13, r12
    min_pp r5.w, r12.y, r12.x
    min_pp r6.w, r12.z, r5.w
    mov r12.xyz, c9
    add r12.xyz, r12, c10
    mad r7.xyw, r12.xyzz, r7.x, -c11.xyzz
    add r0.xyz, r0, r7.xyww
    mad r0.xyz, r11, r6.w, r0
    mad_pp r8.xyz, r12, -c18.x, r0
    else
    mov_pp r8.xyz, r5
    endif
    texldl_pp r5, r8, s1
    pow_pp r0.x, r5.w, c12.y
    mul_pp r0.x, r0.x, c12.x
    mul_pp r0.xyz, r5, r0.x
    mad r5.xyz, r3.w, r9, -r0
    mad_pp r10.xyz, c6.w, r5, r0
    endif
    mul_pp r0.xyz, r10, v4.w
    nrm_pp r5.xyz, r6
    max_pp r3.w, c17.x, c17.y
    max_pp r5.w, r3.w, c17.z
    add_pp r3.w, -r5.w, -c18.z
    mul_pp r3.xyz, r3.w, r3
    mad_pp r1.xyz, r1, r0.w, c1
    dp3_pp r0.w, r1, r1
    add r5.w, -r0.w, c19.w
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r5.w, c20.x, r0.w
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r5, r1
    max_pp r5.w, r0.w, c18.w
    dp3_pp r0.w, r5, r2
    max_pp r2.x, r0.w, c18.w
    dp3_pp r0.w, c1, r1
    max_pp r1.x, r0.w, c18.w
    mul_pp r0.w, r1.w, r1.w
    mul_pp r1.y, r0.w, c14.w
    mad_pp r0.w, r0.w, -c14.w, -r7.z
    mad_pp r1.z, r2.w, r0.w, r1.y
    mad_pp r0.w, r2.x, r0.w, r1.y
    mad r0.w, r1.z, r0.w, c20.y
    rcp_pp r0.w, r0.w
    add_pp r1.y, -r1.w, -c18.z
    mad_pp r1.y, r1.y, c20.z, c20.w
    log_pp r1.y, r1.y
    rcp r1.y, r1.y
    mul_pp r1.y, r1.y, c21.x
    mul_pp r1.z, r1.y, r1.y
    mad_pp r1.y, r1.y, r1.y, -c18.z
    mul_pp r1.y, r1.y, c14.y
    pow_pp r2.y, r5.w, r1.z
    mul_pp r1.y, r1.y, r2.y
    add_pp r1.z, -r2.w, -c18.z
    mul_pp r2.y, r1.z, r1.z
    mul_pp r2.y, r2.y, r2.y
    mul_pp r1.z, r1.z, r2.y
    add_pp r2.x, -r2.x, -c18.z
    mul_pp r2.y, r2.x, r2.x
    mul_pp r2.y, r2.y, r2.y
    mul_pp r2.x, r2.x, r2.y
    mul_pp r2.y, r1.x, r1.x
    dp2add_pp r1.w, r2.y, r1.w, -c18.x
    mad_pp r1.z, r1.w, r1.z, -c18.z
    mad_pp r1.w, r1.w, r2.x, -c18.z
    mul_pp r1.z, r1.w, r1.z
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r2.w, r0.w
    mul_pp r0.w, r0.w, c14.x
    mul_pp r1.y, r2.w, r1.z
    add_pp r1.z, -r3.w, -c18.z
    mad_sat_pp r1.z, r4.z, v5.w, r1.z
    mul_pp r2.yzw, r1.y, c13.xxyz
    mad_pp r2.yzw, r4.xxyw, v4.w, r2
    mul_pp r4.xyz, r0.w, c13
    cmp_pp r4.xyz, r0.w, r4, c18.w
    add_pp r0.w, -r1.x, -c18.z
    mul_pp r1.x, r0.w, r0.w
    mul_pp r1.x, r1.x, r1.x
    mul_pp r0.w, r0.w, r1.x
    lrp_pp r1.xyw, r0.w, -r7.z, c17.xyzz
    mul_pp r1.xyw, r1, r4.xyzz
    mad_pp r1.xyw, r3.xyzz, r2.yzzw, r1
    lrp_pp r3.xyz, r2.x, r1.z, c17
    mad_pp oC0.xyz, r0, r3, r1.xyww
    mov_pp oC0.w, -c18.z
