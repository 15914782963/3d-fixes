// CRC32: F7EB49E5 | Matched 2 variants of 1 shaders: Hidden/Internal-PrePassLighting
// 
//    Unity headers extracted from Internal-PrePassLighting.shader
//    Shader "Hidden/Internal-PrePassLighting" {
//      Properties {
//       _LightTexture0 ("", any) = "" {}
//       _LightTextureB0 ("", 2D) = "" {}
//       _ShadowMapTexture ("", any) = "" {}
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Pass 3/3 {
//          Tags { "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Fog { Mode Off }
//          Blend One One
//          Program "fp" {
//            SubProgram "d3d9 " {
// 1:           Keywords { "DIRECTIONAL" "SHADOWS_OFF" "SUNSHINE_FILTER_PCF_4x4" }
// 2:           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SUNSHINE_FILTER_PCF_4x4" }
//              Matrix 0 [sunshine_WorldToSunVP]
//              Matrix 4 [sunshine_CascadeRanges]
//              Matrix 8 [_CameraToWorld]
//              Matrix 12 [_WorldToCamera]
//              Vector 16 [_WorldSpaceCameraPos]
//              Vector 17 [_ProjectionParams]
//              Vector 18 [_ZBufferParams]
//              Vector 19 [sunshine_Lightmap_TexelSize]
//              Vector 20 [sunshine_ShadowParamsAndHalfTexel]
//              Vector 21 [sunshine_OvercastCoord]
//              Vector 22 [sunshine_OvercastVectorsUV]
//              Vector 23 [sunshine_ShadowCoordDepthStart]
//              Vector 24 [sunshine_ShadowToWorldScale]
//              Vector 25 [sunshine_CascadeNearRatiosSq]
//              Vector 26 [sunshine_CascadeFarRatiosSq]
//              Vector 27 [sunshine_ShadowFadeParams]
//              Float 28 [CaveAmount]
//              Vector 29 [_LightDir]
//              Vector 30 [_LightColor]
//              Vector 31 [_SkylightColor]
//              Vector 32 [_SunlightColor]
//              SetTexture 0 [_CameraNormalsTexture] 2D 0
//              SetTexture 1 [_CameraDepthTexture] 2D 1
//              SetTexture 2 [sunshine_Lightmap] 2D 2
//              SetTexture 3 [sunshine_OvercastMap] 2D 3
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    def c33, 2.00000000, -1.00000000, -0.81005859, -0.50000000
    def c34, 0.00000000, 1.00000000, 123456792.00000000, 0.50000000
    def c35, 0.84507048, 0.23000000, 0.00000000, 2.00000000
    def c36, 1.00000000, 0.00392157, 0.00001538, 0.00000006
    def c37, -1.00000000, 1.00000000, 2.00000000, 0.00000000
    def c38, 0.11108398, 0.79980469, 0.00000000, 0.05000000
    def c39, 0.25000000, 0.04000000, 0.05000000, 0.03000000
    def c40, 128.00000000, 0.21997070, 0.70703125, 0.07098389
    def c41, 5.00000000, 0.98000002, 0.02000000, 10.00000000
    dcl_texcoord0 v0.xyzw
    dcl_texcoord1 v1.xyz

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

// This variant is SHADOWS_SCREEN, meaning it's copying a shadow generated in
// Hidden/Internal-PrePassCollectShadows to the screen, so we discard the
// stereo adjustment from the VS and get the screen coordinates directly:
mov r20, v0
texldl r31, c220.z, s13
add r31.w, r20.w, -r31.y
mul r31.w, r31.w, c220.w
mad r20.x, -r31.w, r31.x, r20.x

    rcp r0.x, r20.w
    mul r6.xy, r20, r0.x
    texld r0.x, r6, s1
    mad r0.w, r0.x, c18.x, c18.y
    rcp r0.y, v1.z
    mul r0.y, r0, c17.z
    mul r0.xyz, v1, r0.y
    rcp r0.w, r0.w
    mul r2.xyz, r0, r0.w
    mov r2.w, c34.y


// This is a simplified version of the maths to find P.I[0,0] from MV.I and MVP
// For a detailed explanation of what we are doing here, see this thread:
// https://forums.geforce.com/default/topic/781954/3d-vision/dreamfall-chapters/post/4352670/#4352670

mov r30.x, c180.x
mov r30.y, c181.x
mov r30.z, c182.x
mov r30.w, c183.x
dp4 r30.x, r30, c190 // Calculate P[0,0]
rcp r30.x, r30.x // Calculate P.I[0,0]

add r31.w, r2.z, -r31.y // r31.w = depth - convergence
mul r31.w, r31.w, r31.x // r31.w = separation * (depth - convergence)
mad r2.x, -r31.w, r30.x, r2.x // X -= separation * (depth - convergence) * P.I[0,0]

    dp4 r8.x, r2, c8
    dp4 r8.y, r2, c9
    dp4 r9.x, r2, c10
    mov r6.z, c34.y
    mov r0.x, r8
    mov r0.y, r8
    mov r0.w, c34.y
    mov r0.z, r9.x
    dp4 r9.y, r0, c1
    dp4 r9.w, r0, c2
    dp4 r8.z, r0, c0
    mov r7.y, c34
    mov r1.x, r8.z
    mov r1.z, r9.w
    mov r1.y, r9
    add r0.xyz, r1, -c23
    mul r0.xyz, r0, c24
    dp3 r9.z, r0, r0
    mul r0.x, r9.z, c34.z
    frc r0.x, r0
    mul r0.x, -r0, c20.y
    add r0.x, r0, c34.y
    mad r1, -r9.z, r0.x, c26
    mad r0, r9.z, r0.x, -c25
    cmp r1, r1, c34.y, c34.x
    cmp r0, r0, c34.y, c34.x
    mul r0, r0, r1
    mul r1, r0.y, c5
    mad r1, r0.x, c4, r1
    mad r1, r0.z, c6, r1
    mad r0, r0.w, c7, r1
    mov r8.w, r9.y
    mad r0.xy, r0.zwzw, r8.zwzw, r0
    mad r0.xy, r0, c33.x, c33.y
    mul r0.zw, r0.xyxy, r0.xyxy
    add r0.z, r0, r0.w
    rsq r0.z, r0.z
    rcp r0.z, r0.z
    mad r0.z, r0, c35.x, c35.y
    rcp r0.z, r0.z
    mul r0.xy, r0, r0.z
    mul r0.xy, r0, c34.w
    add r0.xy, r0, -c20.zwzw
    add r0.xy, r0, c34.w
    mul r0.xy, r0, c19.zwzw
    frc r7.zw, r0.xyxy
    add r0.xy, -r7.zwzw, r0
    mov r6.w, r7.z
    mul r0.xy, r0, c19
    add r4.xy, r0, c20.zwzw
    mov r0.zw, c19.xyxy
    mad r1.xy, c35.w, r0.zwzw, r4
    texld r1, r1, s2
    dp4 r3.w, r1, c36
    add r1.xy, r4, c19
    texld r1, r1, s2
    mov r0.xy, c19
    mad r0.xy, c37.yzzw, r0, r4
    texld r0, r0, s2
    dp4 r3.z, r0, c36
    mov r0.xy, c19
    mad r0.xy, c37.zyzw, r0, r4
    texld r0, r0, s2
    dp4 r3.y, r0, c36
    dp4 r3.x, r1, c36
    mov r0.zw, c19.xyxy
    mad r1.xy, c35.zwzw, r0.zwzw, r4
    texld r1, r1, s2
    mov r0.xy, c19
    mad r0.xy, c33.yxzw, r0, r4
    texld r0, r0, s2
    dp4 r5.z, r0, c36
    mov r0.xy, c19
    add r3, r9.w, -r3
    add_pp r7.xz, -r7.zyww, c34.y
    dp4 r5.w, r1, c36
    mov r0.zw, c19.xyxy
    mad r1.xy, c37, r0.zwzw, r4
    mad r0.xy, c34, r0, r4
    texld r1, r1, s2
    dp4 r5.x, r1, c36
    cmp r1, r3, c34.y, c34.x
    mul_pp r1.zw, r1, r6
    texld r0, r0, s2
    dp4 r5.y, r0, c36
    add r0, r9.w, -r5
    cmp r0, r0, c34.y, c34.x
    mul_pp r0.zw, r0, r7.xyxy
    mul_pp r0.xy, r0, r7
    add_pp r1.z, r1, r1.w
    add_pp r0.z, r0, r0.w
    add_pp r5.w, r0.z, r1.z
    mul_pp r0.zw, r1.xyxy, r6
    add_pp r0.z, r0, r0.w
    add_pp r0.x, r0, r0.y
    add_pp r5.z, r0.x, r0
    mov r0.zw, c19.xyxy
    mad r1.xy, c35.wzzw, r0.zwzw, r4
    texld r1, r1, s2
    mov r0.xy, c19
    mad r0.xy, c34.yxzw, r0, r4
    texld r0, r0, s2
    dp4 r3.z, r0, c36
    mov r0.xy, c19
    mad r0.xy, c33, r0, r4
    dp4 r3.w, r1, c36
    mov r0.zw, c19.xyxy
    mad r1.xy, c37.yxzw, r0.zwzw, r4
    texld r0, r0, s2
    dp4 r3.y, r0, c36
    texld r1, r1, s2
    dp4 r3.x, r1, c36
    texld r1, r4, s2
    dp4 r4.w, r1, c36
    add r1.xy, r4, -c19
    mov r0.xy, c19
    mad r0.xy, c37.xwzw, r0, r4
    texld r0, r0, s2
    dp4 r4.z, r0, c36
    mov r0.xy, c19
    mad r0.xy, c37.wxzw, r0, r4
    texld r1, r1, s2
    texld r0, r0, s2
    add r3, r9.w, -r3
    dp4 r4.x, r1, c36
    cmp r1, r3, c34.y, c34.x
    mul_pp r1.zw, r6, r1
    dp4 r4.y, r0, c36
    add r0, r9.w, -r4
    cmp r0, r0, c34.y, c34.x
    mul_pp r0.xy, r7, r0
    mul_pp r0.zw, r7.xyxy, r0
    add_pp r0.x, r0, r0.y
    add_pp r1.z, r1, r1.w
    add_pp r0.z, r0, r0.w
    add_pp r5.y, r0.z, r1.z
    mul_pp r0.zw, r6, r1.xyxy
    add_pp r0.z, r0, r0.w
    add_pp r5.x, r0, r0.z
    texld r1, r6, s0
    mov_pp r0.x, r7.z
    mov_pp r0.w, r7
    mov_pp r0.yz, c34.y
    mul_pp r0, r0, r5
    dp4_pp r0.x, r0, c38.x
    add r0.y, r0.x, -c28.x
    mad_sat r0.x, -r9.z, c27.y, c27
    mad r0.x, r0, r0.y, c28
    add r3.x, -r0, c34.y
    mad_pp r0.xyz, r1, c33.x, c33.y
    mul r1.xy, r8.z, c22
    dp3_pp r0.w, r0, r0
    rsq_pp r1.z, r0.w
    mul_pp r0.xyz, r1.z, r0
    add r1.xy, r1, c21
    mad r1.xy, r9.y, c22.zwzw, r1
    texld r0.w, r1, s3
    dp3_pp r4.w, r0, -c29
    mul r3.w, r3.x, r0
    rcp_pp r0.w, r1.z
    abs_pp r1.x, r4.w
    cmp_pp r1.z, r4.w, r4.w, r1.x
    dp4 r1.x, r2, r2
    rsq r1.x, r1.x
    mul r3.xyz, r1.x, r2
    dp3_pp r5.x, r0, r3
    cmp_pp r5.y, -r5.x, c34.x, c34
    cmp_pp r5.x, r5, c34, c34.y
    add_pp r5.y, r5, -r5.x
    add_pp r0.w, r0, c33.z
    cmp r0.w, r0, c34.x, c34.y
    mov r8.z, r9.x
    add r4.xyz, r8, -c16
    dp3 r5.z, r4, r4
    rsq r5.z, r5.z
    add r2.w, r0, c33
    max_pp r1.y, r4.w, c34.x
    cmp_pp r1.y, -r2.w, r1, r1.z
    mul r1.y, r1, r3.w
    mul r1.xyz, r1.y, c30
    mul_pp r5.x, r4.w, r5.y
    cmp_pp r5.x, -r2.w, r4.w, r5
    mul_pp r3.xyz, r1, c38.yyzw
    mad r4.xyz, -r5.z, r4, -c29
    dp3 r4.w, r4, r4
    cmp_pp r1.xyz, r5.x, r1, r3
    mul_pp r3.xyz, r0, r5.y
    cmp_pp r0.xyz, -r2.w, r0, r3
    rsq r4.w, r4.w
    mul r4.xyz, r4.w, r4
    dp3_pp r0.x, r0, r4
    mul_pp r0.z, r1.w, c40.x
    mov r4.xyz, -c29
    mov r4.w, c34.x
    mov_sat r2.w, r3
    max_pp r0.x, r0, c34
    pow_pp r3, r0.x, r0.z
    dp3 r1.w, r2, r2
    mov_pp r0.x, r3
    rsq r0.z, r1.w
    mul r0.x, r0, r2.w
    mad_pp r0.y, r0, c34.w, c34.w
    dp4 r6.z, r4, c14
    dp4 r6.x, r4, c12
    dp4 r6.y, r4, c13
    mad r4.xyz, r2, -r0.z, r6
    dp3 r1.w, r4, r4
    rsq r1.w, r1.w
    mul r3.xyz, r1.w, r4
    mul r4.xyz, r0.z, r2
    mov_pp r2.xyz, c30
    dp3_pp r0.z, c40.yzww, r2
    mul r0.x, r0, r0.z
    dp3_sat r1.w, -r4, r3
    add r1.w, -r1, c34.y
    pow r2, r1.w, c41.x
    mov r1.w, r2.x
    mad r0.z, r0.y, c33.x, c33.y
    abs r0.z, r0
    mad r0.z, r0, c34.w, c34.w
    add r0.z, r0, -r0.y
    mad r0.y, r0.w, r0.z, r0
    mul_pp_sat r2.x, r5, c41.w
    mad r1.w, r1, c41.y, c41.z
    mul r1.w, r1, r2.x
    mul r1.w, r1, c41
    mov r2.xyz, c32
    mad r2.xyz, r2, c34.w, c34.w
    mul r2.xyz, r2, c31.z
    mad r0.y, r0, r0, c38.w
    mul r3.xyz, r2, c39.yzww
    mul r2.xyz, r0.y, c31
    mul_pp r0.w, r0.x, r1
    mad r2.xyz, r2, c39.x, r3
    add_pp r0.xyz, r1, r2
    mov_pp oC0, r0.wxyz
