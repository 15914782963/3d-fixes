// CRC32: 02DA89DD | Unity headers extracted from AFS Tree Leaves Tumbling VFACE.shader
// Shader "AFS/Tree Leaves Tumbling VFACE" {
//   Properties {
//   [Header(Base and Detail Maps)] [Space]  _Color ("Color Variation", Color) = (0.9,0.5,0,0.2)
//   [LM_Albedo] [LM_Transparency]  _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
//   [LM_TransparencyCutOff]  _Cutoff ("Alpha cutoff", Range(0,1)) = 0.3
//   [NoScaleOffset] [Space]  _BumpTransSpecMap ("Normal (GA) Trans(R) Smoothness(B)", 2D) = "bump" { }
//   [LM_Specular]  _SpecularReflectivity ("Specular Reflectivity", Color) = (0.2,0.2,0.2,1)
//    _TranslucencyStrength ("Translucency Strength", Range(0,1)) = 0.5
//   [Space(5)] [Header(Cut Leaves)] [Space]  _CutHeight ("Cut Height", Range(0,100)) = 0
//   [Space(5)] [Header(Wind)] [Space]  _LeafTurbulence ("Leaf Turbulence", Range(0,1)) = 0.5
//    _TumbleStrength ("Tumble Strength", Range(0,1)) = 0.1
//    _TumbleFrequency ("Tumble Frequency", Range(0,4)) = 1
//   [Space(5)] [Header(Stippling and Wind Fading)] [Space]  _StippleNear ("Stipple Near", Range(0,600)) = 180
//    _StippleFar ("Stipple Far", Range(0,600)) = 200
//    _WindNear ("Wind Near", Range(0,600)) = 180
//    _WindFar ("Wind Far", Range(0,600)) = 200
//   [Space(5)] [Enum(Static,0,Falling,1)]  _TreeBendingMode ("Tree Bending Mode", Float) = 0
//   [HideInInspector] [Space(5)]  _Variation ("Variation", Float) = 0
//   }
//   SubShader 1/1 {
//     LOD 200
//     Tags { "IGNOREPROJECTOR"="true" "RenderType"="AFSTreeLeaf" }
//     Pass 3/4 {
//       Name "DEFERRED"
//       Tags { "LIGHTMODE"="Deferred" "IGNOREPROJECTOR"="true" "RenderType"="AFSTreeLeaf" }
//       Cull Off
//       GpuProgramID 158727
//       Program "fp" {
//         SubProgram "d3d9 " {
//           Keywords { "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "LIGHTMAP_OFF" "UNITY_HDR_ON" }
//           Vector 13 [_Color]
//           Float 14 [_Cutoff]
//           Vector 1 [_ProjectionParams]
//           Vector 15 [_SpecularReflectivity]
//           Float 16 [_TranslucencyStrength]
//           Vector 0 [_WorldSpaceCameraPos]
//           Vector 4 [unity_SHAb]
//           Vector 3 [unity_SHAg]
//           Vector 2 [unity_SHAr]
//           Vector 5 [unity_SpecCube0_BoxMax]
//           Vector 6 [unity_SpecCube0_BoxMin]
//           Vector 8 [unity_SpecCube0_HDR]
//           Vector 7 [unity_SpecCube0_ProbePosition]
//           Vector 9 [unity_SpecCube1_BoxMax]
//           Vector 10 [unity_SpecCube1_BoxMin]
//           Vector 12 [unity_SpecCube1_HDR]
//           Vector 11 [unity_SpecCube1_ProbePosition]
//           SetTexture 0 [unity_SpecCube0] CUBE 0
//           SetTexture 1 [unity_SpecCube1] CUBE 1
//           SetTexture 2 [_MainTex] 2D 2
//           SetTexture 3 [_BumpTransSpecMap] 2D 3
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    def c17, 0, 0.75, 7, 0.999989986
    def c18, 1, -1, 0.5, 2
    dcl_texcoord v0.xy
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_color_pp v4.yw
    dcl_texcoord4 v5.x
    dcl_texcoord7_pp v6.xyz
    dcl vFace
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15

texldl r31, c220.z, s15

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --stereo-sampler-ps=s15 --fix-unity-reflection --only-autofixed --ignore-register-errors AFS_Tree Leaves Tumbling VFACE/fp/02DA89DD.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    cmp r0.x, vFace, c18.x, c18.y
    mov r1.x, v1.w
    mov r1.y, v2.w
    mov r1.z, v3.w
    add r0.yzw, -r1.xxyz, r30.xxyz
    nrm_pp r2.xyz, r0.yzww
    mul r0.x, r0.x, c1.x
    texld_pp r3, v0, s2
    add r0.y, r3.w, -c14.x
    add r4, r0.y, -v5.x
    texkill r4
    texld_pp r4, v0, s3
    add_pp r0.yzw, r3.xxyz, c13.xxyz
    mul_pp r1.w, c13.w, v4.y
    mad_pp r0.yzw, r0, c18.z, -r3.xxyz
    mad_pp r0.yzw, r1.w, r0, r3.xxyz
    mad_pp r3.xy, r4.wyzw, c18.w, c18.y
    dp2add_sat_pp r1.w, r3, r3, c17.x
    add_pp r1.w, -r1.w, c18.x
    rsq_pp r1.w, r1.w
    rcp_pp r3.z, r1.w
    mul_pp r3.xyz, r0.x, r3
    mul_pp r0.x, v4.w, v4.w
    mul_pp oC1.y, r4.x, r0.x
    dp3_pp r5.x, v1, r3
    dp3_pp r5.y, v2, r3
    dp3_pp r5.z, v3, r3
    mov_pp r5.w, c18.x
    dp4_pp r3.x, c2, r5
    dp4_pp r3.y, c3, r5
    dp4_pp r3.z, c4, r5
    add_pp r3.xyz, r3, v6
    mul_pp r3.xyz, r3, v4.w
    dp3 r0.x, -r2, r5
    add r0.x, r0.x, r0.x
    mad_pp r4.xyw, r5.xyzz, -r0.x, -r2.xyzz
    mov r6.xw, c17
    if_lt -c7.w, r6.x
    nrm_pp r7.xyz, r4.xyww
    add r8.xyz, -r1, c5
    rcp r9.x, r7.x
    rcp r9.y, r7.y
    rcp r9.z, r7.z
    mul_pp r8.xyz, r8, r9
    add r10.xyz, -r1, c6
    mul_pp r9.xyz, r9, r10
    cmp_pp r8.xyz, -r7, r9, r8
    min_pp r0.x, r8.y, r8.x
    min_pp r1.w, r8.z, r0.x
    mov r8.xyz, c6
    add r8.xyz, r8, c5
    mov r6.z, c18.z
    mad r9.xyz, r8, r6.z, -c7
    add r9.xyz, r1, r9
    mad r7.xyz, r7, r1.w, r9
    mad_pp r7.xyz, r8, -c18.z, r7
    else
    mov_pp r7.xyz, r4.xyww
    endif
    add_pp r0.x, -r4.z, c18.x
    pow_pp r1.w, r0.x, c17.y
    mul_pp r7.w, r1.w, c17.z
    texldl_pp r8, r7, s0
    pow_pp r0.x, r8.w, c8.y
    mul_pp r0.x, r0.x, c8.x
    mul_pp r9.xyz, r8, r0.x
    if_lt c6.w, r6.w
    if_lt -c11.w, r6.x
    nrm_pp r6.xyz, r4.xyww
    add r10.xyz, -r1, c9
    rcp r11.x, r6.x
    rcp r11.y, r6.y
    rcp r11.z, r6.z
    mul_pp r10.xyz, r10, r11
    add r12.xyz, -r1, c10
    mul_pp r11.xyz, r11, r12
    cmp_pp r10.xyz, -r6, r11, r10
    min_pp r1.w, r10.y, r10.x
    min_pp r2.w, r10.z, r1.w
    mov r10.xyz, c9
    add r10.xyz, r10, c10
    mov r11.z, c18.z
    mad r11.xyz, r10, r11.z, -c11
    add r1.xyz, r1, r11
    mad r1.xyz, r6, r2.w, r1
    mad_pp r7.xyz, r10, -c18.z, r1
    else
    mov_pp r7.xyz, r4.xyww
    endif
    texldl_pp r1, r7, s1
    pow_pp r2.w, r1.w, c12.y
    mul_pp r1.w, r2.w, c12.x
    mul_pp r1.xyz, r1, r1.w
    mad r4.xyw, r0.x, r8.xyzz, -r1.xyzz
    mad_pp r9.xyz, c6.w, r4.xyww, r1
    endif
    mul_pp r1.xyz, r9, v4.w
    max_pp r0.x, c15.x, c15.y
    max_pp r1.w, r0.x, c15.z
    add_pp r0.x, -r1.w, c18.x
    mul_pp r0.yzw, r0.x, r0
    dp3_pp r1.w, r5, r2
    add_pp r0.x, -r0.x, r4.z
    add_sat_pp r0.x, r0.x, c18.x
    add_pp r2.x, -r1.w, c18.x
    cmp_pp r1.w, r1.w, r2.x, c18.x
    mul_pp r2.x, r1.w, r1.w
    mul_pp r2.x, r2.x, r2.x
    mul_pp r1.w, r1.w, r2.x
    lrp_pp r2.xyz, r1.w, r0.x, c15
    mul_pp r1.xyz, r1, r2
    mad_pp oC3.xyz, r0.yzww, r3, r1
    mad_pp oC2.xyz, r5, c18.z, c18.z
    mov_pp oC0.w, v4.w
    mov_pp oC0.xyz, r0.yzww
    mov_pp oC1.x, c15.x
    mov_pp oC1.z, c16.x
    mov_pp oC1.w, r4.z
    mov_pp oC2.w, c17.x
    mov_pp oC3.w, c18.x
