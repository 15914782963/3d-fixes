// CRC32: CF928868 | Unity headers extracted from Lux Skin Deferred.shader
// Shader "Lux/Human/Skin Deferred" {
//   Properties {
//    _Color ("Main Color", Color) = (1,1,1,1)
//    _MainTex ("Base (RGB)", 2D) = "white" { }
//   [NoScaleOffset]  _SpecTex ("Specular (R) Smoothness (G) SSS Mask (B), AO (A)", 2D) = "gray" { }
//   [NoScaleOffset]  _BumpMap ("Normal Map", 2D) = "bump" { }
//   [Header(Bump Settings for Forward Rendering)] [Space(4)]  _BumpLod ("Skin Softness", Range(0,1)) = 1
//    _BumpBias ("Normal Map Blur Bias", Float) = 1.5
//   [Space(5)] [Header(Bump Settings for Deferred Rendering)] [Space(4)]  _SimpleBumpLod ("Simple Skin Softness", Range(0,1)) = 1
//    _SimpleBumpBias ("Simple Normal Map Blur Bias", Float) = 1.5
//   [Space(15)]  _tuneCurvature ("Skin Scattering Strength", Range(0,1)) = 1
//    _CurvatureScale ("Curvature Scale", Float) = 0.02
//    _CurvatureInfluence ("Curvature Influence", Range(0,1)) = 1
//   }
//   Fallback "Legacy Shaders/Diffuse"
//   SubShader 1/1 {
//     LOD 300
//     Tags { "RenderType"="Opaque" }
//     Pass 1/3 {
//       Name "FORWARD"
//       Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//       GpuProgramID 18909
//       Program "fp" {
//         SubProgram "d3d9 " {
//           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_OFF" }
//           Float 17 [_BumpBias]
//           Float 18 [_BumpLod]
//           Vector 19 [_Color]
//           Float 22 [_CurvatureInfluence]
//           Float 21 [_CurvatureScale]
//           Vector 14 [_LightColor0]
//           Vector 15 [_Lux_Skin_DeepSubsurface]
//           Vector 16 [_SubColor]
//           Vector 0 [_WorldSpaceCameraPos]
//           Vector 1 [_WorldSpaceLightPos0]
//           Float 20 [_tuneCurvature]
//           Vector 13 [unity_ColorSpaceDielectricSpec]
//           Vector 4 [unity_SHAb]
//           Vector 3 [unity_SHAg]
//           Vector 2 [unity_SHAr]
//           Vector 5 [unity_SpecCube0_BoxMax]
//           Vector 6 [unity_SpecCube0_BoxMin]
//           Vector 8 [unity_SpecCube0_HDR]
//           Vector 7 [unity_SpecCube0_ProbePosition]
//           Vector 9 [unity_SpecCube1_BoxMax]
//           Vector 10 [unity_SpecCube1_BoxMin]
//           Vector 12 [unity_SpecCube1_HDR]
//           Vector 11 [unity_SpecCube1_ProbePosition]
//           SetTexture 0 [unity_SpecCube0] CUBE 0
//           SetTexture 1 [unity_SpecCube1] CUBE 1
//           SetTexture 2 [_BRDFTex] 2D 2
//           SetTexture 3 [_MainTex] 2D 3
//           SetTexture 4 [_BumpMap] 2D 4
//           SetTexture 5 [_SpecTex] 2D 5
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    def c23, 2, -1, 0, 1
    def c24, 0.5, 0.75, 7, 0.999989986
    def c25, 3.14159274, -8.65616989, -9.27999973, 0
    def c26, -1, -0.0274999999, -0.572000027, 0.0219999999
    def c27, 1, 0.0425000004, 1.03999996, -0.0399999991
    def c28, -1.03999996, 1.03999996, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4_pp v4.xyz
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15

texldl r31, c220.z, s15

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --stereo-sampler-ps=s15 --fix-unity-reflection --only-autofixed --ignore-register-errors Lux_Human_Skin Deferred/fp/CF928868.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mov r0.x, v1.w
    mov r0.y, v2.w
    mov r0.z, v3.w
    add r1.xyz, -r0, r30
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul_pp r2.xyz, r0.w, r1
    texld_pp r3, v0, s3
    mul_pp r3.xyz, r3, c19
    texld_pp r4, v0, s4
    mad_pp r4.xy, r4.wyzw, c23.x, c23.y
    dp2add_sat_pp r1.w, r4, r4, c23.z
    add_pp r1.w, -r1.w, c23.w
    rsq_pp r1.w, r1.w
    rcp_pp r4.z, r1.w
    texld_pp r5, v0, s5
    mul r6.xyz, c23.wwzw, v0.xyxw
    mov r6.w, c17.x
    texldl_pp r6, r6, s4
    mad_pp r6.xy, r6.wyzw, c23.x, c23.y
    dp2add_sat_pp r1.w, r6, r6, c23.z
    add_pp r1.w, -r1.w, c23.w
    rsq_pp r1.w, r1.w
    rcp_pp r6.z, r1.w
    lrp_pp r7.xyz, c18.x, r6, r4
    dp3_pp r6.x, v1, r7
    dp3_pp r6.y, v2, r7
    dp3_pp r6.z, v3, r7
    dsx_pp r7.xyz, r6
    dsy_pp r8.xyz, r6
    add_pp r7.xyz, r7_abs, r8_abs
    dp3_pp r1.w, r7, r7
    rsq_pp r1.w, r1.w
    rcp r1.w, r1.w
    dsx r7.xyz, r0
    dsy r8.xyz, r0
    add r7.xyz, r7_abs, r8_abs
    dp3 r2.w, r7, r7
    rsq r2.w, r2.w
    mul r1.w, r1.w, r2.w
    mad r1.w, r1.w, c21.x, -r5.z
    mad r1.w, c22.x, r1.w, r5.z
    cmp r1.w, -c22.x, r5.z, r1.w
    mul_pp r7.y, r1.w, c20.x
    dp3_pp r8.x, v1, r4
    dp3_pp r8.y, v2, r4
    dp3_pp r8.z, v3, r4
    mov_pp r8.w, c23.w
    dp4_pp r4.x, c2, r8
    dp4_pp r4.y, c3, r8
    dp4_pp r4.z, c4, r8
    add_pp r4.xyz, r4, v4
    mul_pp r4.xyz, r5.w, r4
    dp3 r1.w, -r2, r8
    add r1.w, r1.w, r1.w
    mad_pp r9.xyz, r8, -r1.w, -r2
    mov r7.z, c23.z
    if_lt -c7.w, r7.z
    nrm_pp r10.xyz, r9
    add r11.xyz, -r0, c5
    rcp r12.x, r10.x
    rcp r12.y, r10.y
    rcp r12.z, r10.z
    mul_pp r11.xyz, r11, r12
    add r13.xyz, -r0, c6
    mul_pp r12.xyz, r12, r13
    cmp_pp r11.xyz, -r10, r12, r11
    min_pp r1.w, r11.y, r11.x
    min_pp r2.w, r11.z, r1.w
    mov r11.xyz, c6
    add r11.xyz, r11, c5
    mov r5.x, c24.x
    mad r12.xyz, r11, r5.x, -c7
    add r12.xyz, r0, r12
    mad r10.xyz, r10, r2.w, r12
    mad_pp r10.xyz, r11, -c24.x, r10
    else
    mov_pp r10.xyz, r9
    endif
    add_pp r1.w, -r5.y, c23.w
    pow_pp r2.w, r1.w, c24.y
    mul_pp r10.w, r2.w, c24.z
    texldl_pp r11, r10, s0
    pow_pp r2.w, r11.w, c8.y
    mul_pp r2.w, r2.w, c8.x
    mul_pp r12.xyz, r11, r2.w
    mov r13.xw, c24
    if_lt c6.w, r13.w
    if_lt -c11.w, r7.z
    nrm_pp r14.xyz, r9
    add r13.yzw, -r0.xxyz, c9.xxyz
    rcp r15.x, r14.x
    rcp r15.y, r14.y
    rcp r15.z, r14.z
    mul_pp r13.yzw, r13, r15.xxyz
    add r16.xyz, -r0, c10
    mul_pp r15.xyz, r15, r16
    cmp_pp r13.yzw, -r14.xxyz, r15.xxyz, r13
    min_pp r3.w, r13.z, r13.y
    min_pp r4.w, r13.w, r3.w
    mov r15.xyz, c9
    add r13.yzw, r15.xxyz, c10.xxyz
    mad r15.xyz, r13.yzww, r13.x, -c11
    add r0.xyz, r0, r15
    mad r0.xyz, r14, r4.w, r0
    mad_pp r10.xyz, r13.yzww, -c24.x, r0
    else
    mov_pp r10.xyz, r9
    endif
    texldl_pp r9, r10, s1
    pow_pp r0.x, r9.w, c12.y
    mul_pp r0.x, r0.x, c12.x
    mul_pp r0.xyz, r9, r0.x
    mad r9.xyz, r2.w, r11, -r0
    mad_pp r12.xyz, c6.w, r9, r0
    endif
    mul_pp r0.xyz, r5.w, r12
    nrm_pp r9.xyz, r8
    max_pp r2.w, c13.x, c13.y
    max_pp r3.w, r2.w, c13.z
    add_pp r2.w, -r3.w, c23.w
    mul_pp r3.xyz, r2.w, r3
    mul_pp r5.xyw, r2.w, r3.xyzz
    dp3_pp r3.w, r6, c1
    max_pp r4.w, r3.w, c23.z
    dp3_pp r6.x, r9, r2
    max_pp r7.z, r6.x, c23.z
    mad_pp r1.xyz, r1, r0.w, c1
    nrm_pp r6.xyz, r1
    dp3_pp r0.w, r9, r6
    max_pp r1.x, r0.w, c23.z
    mul_pp r0.w, r1.w, r1.w
    mul_pp r1.y, r0.w, r0.w
    mul r1.z, r1.x, r1.x
    mad r6.x, r0.w, r0.w, c23.y
    mad_pp r1.z, r1.z, r6.x, c23.w
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.xz, r1, c25.yyxw
    rcp r1.z, r1.z
    mul_pp r1.y, r1.z, r1.y
    mad_pp r1.z, r4.w, -r0.w, r4.w
    mad_pp r1.z, r1.z, r4.w, r0.w
    rsq_pp r1.z, r1.z
    rcp_pp r1.z, r1.z
    add_pp r1.z, r1.z, r4.w
    mad_pp r6.x, r7.z, -r0.w, r7.z
    mad_pp r0.w, r6.x, r7.z, r0.w
    rsq_pp r0.w, r0.w
    rcp_pp r0.w, r0.w
    add_pp r0.w, r0.w, r7.z
    mul_pp r0.w, r1.z, r0.w
    rcp_pp r0.w, r0.w
    add_pp r1.z, -r2.w, c23.w
    exp_pp r1.x, r1.x
    mad_pp r1.x, r2.w, r1.x, r1.z
    mov r6, c26
    mad_pp r6, r1.w, r6, c27
    mul_pp r1.z, r6.x, r6.x
    mul_pp r1.w, r7.z, c25.z
    exp_pp r1.w, r1.w
    min_pp r2.w, r1.w, r1.z
    mad_pp r1.z, r2.w, r6.x, r6.y
    mad_pp r1.zw, r1.z, c28.xyxy, r6
    mad_pp r6.xyz, c13, r1.z, r1.w
    mad_sat r7.x, r3.w, c24.x, c24.x
    texld_pp r7, r7, s2
    mov r8.xyz, c1
    mad_pp r8.xyz, r9, c15.y, r8
    dp3_sat_pp r1.z, r2, -r8
    mul_pp r1.w, r5.z, r5.z
    mul r1.z, r1.z, r1.w
    pow r2.x, r1.z, c15.x
    mul r1.z, r2.x, c15.z
    mul r2.xyz, r1.z, c16
    mul_pp r2.xyz, r2, c14
    mul_pp r5.xyz, r5.xyww, r7
    mad_pp r2.xyz, r5, c14, r2
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r1.xyz, r0.w, c14
    mad_pp r1.xyz, r1, r4.w, r2
    mad_pp r0.xyz, r0, r6, r1
    mad_pp oC0.xyz, r3, r4, r0
    mov_pp oC0.w, c23.w
