// CRC32: A014F4A9 | Unity headers extracted from Lux Skin Deferred.shader
// Shader "Lux/Human/Skin Deferred" {
//   Properties {
//    _Color ("Main Color", Color) = (1,1,1,1)
//    _MainTex ("Base (RGB)", 2D) = "white" { }
//   [NoScaleOffset]  _SpecTex ("Specular (R) Smoothness (G) SSS Mask (B), AO (A)", 2D) = "gray" { }
//   [NoScaleOffset]  _BumpMap ("Normal Map", 2D) = "bump" { }
//   [Header(Bump Settings for Forward Rendering)] [Space(4)]  _BumpLod ("Skin Softness", Range(0,1)) = 1
//    _BumpBias ("Normal Map Blur Bias", Float) = 1.5
//   [Space(5)] [Header(Bump Settings for Deferred Rendering)] [Space(4)]  _SimpleBumpLod ("Simple Skin Softness", Range(0,1)) = 1
//    _SimpleBumpBias ("Simple Normal Map Blur Bias", Float) = 1.5
//   [Space(15)]  _tuneCurvature ("Skin Scattering Strength", Range(0,1)) = 1
//    _CurvatureScale ("Curvature Scale", Float) = 0.02
//    _CurvatureInfluence ("Curvature Influence", Range(0,1)) = 1
//   [Header(Damage)] [Space(4)] [Toggle(_SPECGLOSSMAP)]  _UseDamage ("Enable Damage", Float) = 0
//    _BloodColor ("Blood Color", Color) = (0.56,0.1,0,1)
//   [NoScaleOffset]  _BloodTex ("Blood Detail Map: Smoothness(G) Brightness(B) Mask(A)", 2D) = "black" { }
//    _BloodTiling ("Blood Detail Tiling", Float) = 5
//    _Sharpness ("Blood Spread", Range(0.5,8)) = 2
//   [NoScaleOffset] [Space(8)]  _BloodSplat ("Blood Splatmap: Top(R) Left(G) Right(B) Enemy(A)", 2D) = "white" { }
//   [Space(8)]  _Damage1 ("Damage Top (R)", Range(0,1)) = 0
//    _Damage2 ("Damage Left (G)", Range(0,1)) = 0
//    _Damage3 ("Damage Right (B)", Range(0,1)) = 0
//    _Damage4 ("Damage Enemy (A)", Range(0,1)) = 0
//   }
//   Fallback "Legacy Shaders/VertexLit"
//   SubShader 1/1 {
//     LOD 300
//     Tags { "RenderType"="Opaque" }
//     Pass 3/3 {
//       Name "DEFERRED"
//       Tags { "LIGHTMODE"="Deferred" "RenderType"="Opaque" }
//       GpuProgramID 139180
//       Program "fp" {
//         SubProgram "d3d9 " {
//           Keywords { "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "LIGHTMAP_OFF" }
//           Vector 15 [_Color]
//           Float 18 [_CurvatureInfluence]
//           Float 17 [_CurvatureScale]
//           Float 13 [_SimpleBumpBias]
//           Float 14 [_SimpleBumpLod]
//           Vector 0 [_WorldSpaceCameraPos]
//           Float 16 [_tuneCurvature]
//           Vector 12 [unity_ColorSpaceDielectricSpec]
//           Vector 3 [unity_SHAb]
//           Vector 2 [unity_SHAg]
//           Vector 1 [unity_SHAr]
//           Vector 4 [unity_SpecCube0_BoxMax]
//           Vector 5 [unity_SpecCube0_BoxMin]
//           Vector 7 [unity_SpecCube0_HDR]
//           Vector 6 [unity_SpecCube0_ProbePosition]
//           Vector 8 [unity_SpecCube1_BoxMax]
//           Vector 9 [unity_SpecCube1_BoxMin]
//           Vector 11 [unity_SpecCube1_HDR]
//           Vector 10 [unity_SpecCube1_ProbePosition]
//           SetTexture 0 [unity_SpecCube0] CUBE 0
//           SetTexture 1 [unity_SpecCube1] CUBE 1
//           SetTexture 2 [_MainTex] 2D 2
//           SetTexture 3 [_BumpMap] 2D 3
//           SetTexture 4 [_SpecTex] 2D 4
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    def c19, 2, -1, 0, 1
    def c20, 0.5, 0.75, 7, 0.999989986
    def c21, -1, -0.0274999999, 1, 0.0425000004
    def c22, -9.27999973, 0.660000026, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord6_pp v4.xyz
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15

texldl r31, c220.z, s15

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --stereo-sampler-ps=s15 --fix-unity-reflection --only-autofixed --ignore-register-errors Lux_Human_Skin Deferred/fp/A014F4A9.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mov r0.x, v1.w
    mov r0.y, v2.w
    mov r0.z, v3.w
    add r1.xyz, -r0, r30
    nrm_pp r2.xyz, r1
    texld_pp r1, v0, s2
    mul_pp r1.xyz, r1, c15
    texld_pp r3, v0, s3
    mad_pp r3.xy, r3.wyzw, c19.x, c19.y
    dp2add_sat_pp r0.w, r3, r3, c19.z
    add_pp r0.w, -r0.w, c19.w
    rsq_pp r0.w, r0.w
    rcp_pp r3.z, r0.w
    texld_pp r4, v0, s4
    mul r5.xyz, c19.wwzw, v0.xyxw
    mov r5.w, c13.x
    texldl_pp r5, r5, s3
    mad_pp r5.xy, r5.wyzw, c19.x, c19.y
    dp2add_sat_pp r0.w, r5, r5, c19.z
    add_pp r0.w, -r0.w, c19.w
    rsq_pp r0.w, r0.w
    rcp_pp r5.z, r0.w
    lrp_pp r6.xyz, c14.x, r5, r3
    dp3_pp r3.x, v1, r6
    dp3_pp r3.y, v2, r6
    dp3_pp r3.z, v3, r6
    dsx_pp r5.xyz, r3
    dsy_pp r6.xyz, r3
    add_pp r5.xyz, r5_abs, r6_abs
    dp3_pp r0.w, r5, r5
    rsq_pp r0.w, r0.w
    rcp r0.w, r0.w
    dsx r5.xyz, r0
    dsy r6.xyz, r0
    add r5.xyz, r5_abs, r6_abs
    dp3 r1.w, r5, r5
    rsq r1.w, r1.w
    mul r0.w, r0.w, r1.w
    mad r0.w, r0.w, c17.x, -r4.z
    mad r0.w, c18.x, r0.w, r4.z
    cmp r0.w, -c18.x, r4.z, r0.w
    mul_pp oC1.z, r0.w, c16.x
    mov r3.w, c19.w
    dp4_pp r5.x, c1, r3
    dp4_pp r5.y, c2, r3
    dp4_pp r5.z, c3, r3
    add_pp r5.xyz, r5, v4
    mul_pp r5.xyz, r4.w, r5
    dp3 r0.w, -r2, r3
    add r0.w, r0.w, r0.w
    mad_pp r6.xyz, r3, -r0.w, -r2
    mov r7.zw, c19
    if_lt -c6.w, r7.z
    nrm_pp r8.xyz, r6
    add r9.xyz, -r0, c4
    rcp r10.x, r8.x
    rcp r10.y, r8.y
    rcp r10.z, r8.z
    mul_pp r9.xyz, r9, r10
    add r11.xyz, -r0, c5
    mul_pp r10.xyz, r10, r11
    cmp_pp r9.xyz, -r8, r10, r9
    min_pp r0.w, r9.y, r9.x
    min_pp r1.w, r9.z, r0.w
    mov r9.xyz, c5
    add r9.xyz, r9, c4
    mov r4.x, c20.x
    mad r10.xyz, r9, r4.x, -c6
    add r10.xyz, r0, r10
    mad r8.xyz, r8, r1.w, r10
    mad_pp r8.xyz, r9, -c20.x, r8
    else
    mov_pp r8.xyz, r6
    endif
    add_pp r0.w, -r4.y, c19.w
    pow_pp r1.w, r0.w, c20.y
    mul_pp r8.w, r1.w, c20.z
    texldl_pp r9, r8, s0
    pow_pp r1.w, r9.w, c7.y
    mul_pp r1.w, r1.w, c7.x
    mul_pp r10.xyz, r9, r1.w
    mov r11.xw, c20
    if_lt c5.w, r11.w
    if_lt -c10.w, r7.z
    nrm_pp r7.xyz, r6
    add r11.yzw, -r0.xxyz, c8.xxyz
    rcp r12.x, r7.x
    rcp r12.y, r7.y
    rcp r12.z, r7.z
    mul_pp r11.yzw, r11, r12.xxyz
    add r13.xyz, -r0, c9
    mul_pp r12.xyz, r12, r13
    cmp_pp r11.yzw, -r7.xxyz, r12.xxyz, r11
    min_pp r2.w, r11.z, r11.y
    min_pp r3.w, r11.w, r2.w
    mov r12.xyz, c8
    add r11.yzw, r12.xxyz, c9.xxyz
    mad r12.xyz, r11.yzww, r11.x, -c10
    add r0.xyz, r0, r12
    mad r0.xyz, r7, r3.w, r0
    mad_pp r8.xyz, r11.yzww, -c20.x, r0
    else
    mov_pp r8.xyz, r6
    endif
    texldl_pp r6, r8, s1
    pow_pp r0.x, r6.w, c11.y
    mul_pp r0.x, r0.x, c11.x
    mul_pp r0.xyz, r6, r0.x
    mad r6.xyz, r1.w, r9, -r0
    mad_pp r10.xyz, c5.w, r6, r0
    endif
    mul_pp r0.xyz, r4.w, r10
    add_pp r1.w, r7.w, -c12.x
    mul_pp r1.xyz, r1.w, r1
    dp3_pp r1.w, r3, r2
    mad_pp r2.xy, r0.w, c21, c21.zwzw
    mul_pp r0.w, r2.x, r2.x
    mul r2.z, r1.w, c22.x
    exp_pp r2.z, r2.z
    cmp_pp r1.w, r1.w, r2.z, c19.w
    min_pp r2.z, r1.w, r0.w
    mad_pp r0.w, r2.z, r2.x, r2.y
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.xyz, r1, r5, r0
    mad_pp oC2.xyz, r3, c20.x, c20.x
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC0.w, r4.w
    mov_pp oC0.xyz, r1
    mov_pp oC1.x, c12.x
    mov_pp oC1.yw, r4.xzzy
    mov_pp oC2.w, c22.y
    mov_pp oC3.w, c19.w
