// CRC32: 6737B920 | Unity headers extracted from Lux Skin Deferred.shader
// Shader "Lux/Human/Skin Deferred" {
//   Properties {
//    _Color ("Color", Color) = (1,1,1,1)
//    _MainTex ("Albedo (RGB)", 2D) = "white" { }
//   [NoScaleOffset]  _SpecTex ("Smoothness (G) SSS Mask (B), AO (A)", 2D) = "gray" { }
//   [NoScaleOffset]  _BumpMap ("Bump Map", 2D) = "bump" { }
//   [Header(Bump Settings)] [Space(4)]  _SimpleBumpBias ("Diffuse Normal Map Blur Bias", Float) = 1.5
//   [Header(Preintegrated Skin Lighting)] [Space(4)]  _CurvatureInfluence ("Curvature Influence", Range(0,1)) = 0.5
//    _CurvatureScale ("Curvature Scale", Float) = 0.02
//   [Header(Damage)] [Space(4)] [Toggle(_SPECGLOSSMAP)]  _UseDamage ("Enable Damage", Float) = 0
//    _BloodColor ("Blood Color", Color) = (0.56,0.1,0,1)
//   [NoScaleOffset]  _BloodTex ("Blood Detail Map: Smoothness(G) Brightness(B) Mask(A)", 2D) = "black" { }
//    _BloodTiling ("Blood Detail Tiling", Float) = 5
//    _Sharpness ("Blood Spread", Range(0.5,8)) = 2
//   [NoScaleOffset] [Space(8)]  _BloodSplat ("Blood Splatmap: Top(R) Left(G) Right(B) Enemy(A)", 2D) = "white" { }
//   [Space(8)]  _Damage1 ("Damage Top (R)", Range(0,1)) = 0
//    _Damage2 ("Damage Left (G)", Range(0,1)) = 0
//    _Damage3 ("Damage Right (B)", Range(0,1)) = 0
//    _Damage4 ("Damage Enemy (A)", Range(0,1)) = 0
//   }
//   Fallback "Diffuse"
//   SubShader 1/1 {
//     LOD 200
//     Tags { "RenderType"="Opaque" }
//     Pass 2/3 {
//       Name "FORWARD"
//       Tags { "LIGHTMODE"="ForwardAdd" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//       ZWrite Off
//       Blend One One
//       GpuProgramID 120633
//       Program "fp" {
//         SubProgram "d3d9 " {
//           Keywords { "LUX_AREALIGHTS" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "SHADOWS_SOFT" "SPOT" }
//           Matrix 4 [_LightMatrix0]
//           Vector 16 [_Color]
//           Float 19 [_CurvatureInfluence]
//           Float 18 [_CurvatureScale]
//           Vector 12 [_LightColor0]
//           Vector 10 [_LightShadowData]
//           Vector 15 [_Lux_Skin_DeepSubsurface]
//           Vector 0 [_ShadowOffsets0]
//           Vector 1 [_ShadowOffsets1]
//           Vector 2 [_ShadowOffsets2]
//           Vector 3 [_ShadowOffsets3]
//           Float 17 [_SimpleBumpBias]
//           Vector 14 [_SubColor]
//           Vector 8 [_WorldSpaceCameraPos]
//           Vector 9 [_WorldSpaceLightPos0]
//           Vector 11 [unity_ColorSpaceDielectricSpec]
//           Vector 13 [unity_LightGammaCorrectionConsts]
//           SetTexture 0 [_ShadowMapTexture] 2D 0
//           SetTexture 1 [_LightTexture0] 2D 1
//           SetTexture 2 [_LightTextureB0] 2D 2
//           SetTexture 3 [_BRDFTex] 2D 3
//           SetTexture 4 [_MainTex] 2D 4
//           SetTexture 5 [_BumpMap] 2D 5
//           SetTexture 6 [_SpecTex] 2D 6
//         }
//       }
//     }
//   }
// }
//
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    def c20, 2, -1, 0, 1
    def c21, 9.99999975e-006, 100000, 0.5, 0.25
    def c22, 8, 0.00048828125, 0.0390815809, 9.99999975e-005
    def c23, -5.55472994, -6.98316002, 0.5, 1
    def c24, 3.14159274, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.xyz
    dcl_texcoord3_pp v3.xyz
    dcl_texcoord4 v4.xyz
    dcl_texcoord5 v5
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15

texldl r31, c220.z, s15

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --stereo-sampler-ps=s15 --fix-unity-reflection --only-autofixed --ignore-register-errors Lux_Human_Skin Deferred/fp/6737B920.txt
mov r30, c8
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    add r0.xyz, c9, -v4
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul_pp r1.xyz, r0.w, r0
    add r2.xyz, r30, -v4
    dp3 r1.w, r2, r2
    rsq r1.w, r1.w
    mul_pp r3.xyz, r1.w, r2
    texld r4, v0, s4
    mul_pp r4.xyz, r4, c16
    texld_pp r5, v0, s5
    mad_pp r5.xy, r5.wyzw, c20.x, c20.y
    dp2add_sat_pp r2.w, r5, r5, c20.z
    add_pp r2.w, -r2.w, c20.w
    rsq_pp r2.w, r2.w
    rcp_pp r5.z, r2.w
    mul r6.xyz, c20.wwzw, v0.xyxw
    mov r6.w, c17.x
    texldl_pp r6, r6, s5
    mad_pp r6.xy, r6.wyzw, c20.x, c20.y
    dp2add_sat_pp r2.w, r6, r6, c20.z
    add_pp r2.w, -r2.w, c20.w
    rsq_pp r2.w, r2.w
    rcp_pp r6.z, r2.w
    dp3_pp r7.x, v1, r6
    dp3_pp r7.y, v2, r6
    dp3_pp r7.z, v3, r6
    texld_pp r6, v0, s6
    dsx_pp r8.xyz, r7
    dsy_pp r9.xyz, r7
    add_pp r8.xyz, r8_abs, r9_abs
    dp3_pp r2.w, r8, r8
    rsq_pp r2.w, r2.w
    rcp r2.w, r2.w
    dsx r8.xyz, v4
    dsy r9.xyz, v4
    add r8.xyz, r8_abs, r9_abs
    max r9.xyz, c21.x, r8
    dp3 r3.w, r9, r9
    rsq r3.w, r3.w
    rcp r4.w, r3.w
    cmp r3.w, -r4.w, c21.y, r3.w
    mul r2.w, r2.w, r3.w
    mad_pp r2.w, r2.w, c18.x, -r6.z
    mad_pp r2.w, c19.x, r2.w, r6.z
    cmp_pp r8.y, -c19.x, r6.z, r2.w
    mad r9, v4.xyzx, c20.wwwz, c20.zzzw
    dp4 r10.x, c4, r9
    dp4 r10.y, c5, r9
    dp4 r10.z, c6, r9
    dp4 r2.w, c7, r9
    rcp r2.w, r2.w
    mad r6.xz, r10.xyyw, r2.w, c21.z
    texld_pp r9, r6.xzzw, s1
    dp3 r2.w, r10, r10
    texld_pp r11, r2.w, s2
    mul r2.w, r9.w, r11.x
    cmp r2.w, -r10.z, c20.z, r2.w
    rcp r3.w, v5.w
    mad r9, v5, r3.w, c0
    texldp_pp r9, r9, s0
    mad r10, v5, r3.w, c1
    texldp_pp r10, r10, s0
    mad r11, v5, r3.w, c2
    texldp_pp r11, r11, s0
    mad r12, v5, r3.w, c3
    texldp_pp r12, r12, s0
    mov r3.w, c20.w
    mov_pp r9.y, r10.x
    mov_pp r9.z, r11.x
    mov_pp r9.w, r12.x
    lrp_pp r10, r9, r3.w, c10.x
    dp4_pp r3.w, r10, c21.w
    mul_pp r2.w, r2.w, r3.w
    dp3_pp r9.x, v1, r5
    dp3_pp r9.y, v2, r5
    dp3_pp r9.z, v3, r5
    mul_pp r5.xyz, r2.w, c12
    nrm_pp r10.xyz, r9
    max_pp r2.w, c11.x, c11.y
    max_pp r3.w, r2.w, c11.z
    add_pp r2.w, -r3.w, c20.w
    mul_pp r4.xyz, r2.w, r4
    add_pp r3.w, -r6.y, c20.w
    mov r4.w, c12.w
    if_lt c22.x, r4.w
    frc r5.w, c12.w
    add r6.x, -r5.w, c12.w
    mul r6.x, r6.x, c22.y
    frc r6.y, r6.x
    add r6.x, -r6.y, r6.x
    mul_pp r6.x, r6.x, c22.z
    add_pp r5.w, r5.w, r5.w
    dp3_pp r6.y, -r3, r10
    add_pp r6.y, r6.y, r6.y
    mad_pp r6.yzw, r10.xxyz, -r6.y, -r3.xxyz
    mul_sat r0.w, r0.w, r6.x
    mad_sat r0.w, r0.w, c21.z, r3.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, r3.w
    mul_pp r0.w, r0.w, r0.w
    dp3 r7.w, r0, r6.yzww
    mad r6.yzw, r7.w, r6, -r0.xxyz
    dp3 r7.w, r6.yzww, r6.yzww
    rsq r7.w, r7.w
    mul_sat r6.x, r6.x, r7.w
    mad r0.xyz, r6.yzww, r6.x, r0
    nrm_pp r6.xyz, r0
    dp3_pp r0.x, r10, r6
    max_pp r6.w, r0.x, c20.z
    mul_pp r0.x, r0.w, r5.w
    else
    dp3_pp r0.y, r9, r1
    max_pp r6.w, r0.y, c20.z
    mov_pp r6.xyz, r1
    mov_pp r0.x, c20.w
    endif
    if_ge c22.x, r4.w
    mov_sat_pp r0.x, c12.w
    endif
    mad_pp r0.yzw, r2.xxyz, r1.w, r6.xxyz
    nrm_pp r2.xyz, r0.yzww
    dp3_pp r0.y, r10, r2
    max_pp r1.w, r0.y, c20.z
    dp3_pp r0.y, r10, r3
    max_pp r4.w, r0.y, c20.z
    dp3_pp r0.y, r6, r2
    max_pp r2.x, r0.y, c20.z
    dp3 r0.y, r7, r1
    mad_sat r8.x, r0.y, c21.z, c21.z
    mov r8.zw, c20.z
    texldl_pp r8, r8, s3
    mad_pp r0.yzw, r7.xxyz, c15.y, r6.xxyz
    dp3_sat_pp r0.y, -r0.yzww, r3
    mul r0.y, r0.y, c11.y
    pow r1.x, r0.y, c15.x
    mul r0.y, r1.x, c15.z
    mul r0.yzw, r0.y, c14.xxyz
    mul_pp r0.yzw, r5.xxyz, r0
    add_pp r1.x, -r2.w, c20.w
    mad_pp r1.y, r2.x, c23.x, c23.y
    mul_pp r1.y, r2.x, r1.y
    exp_pp r1.y, r1.y
    mad_pp r1.x, r2.w, r1.y, r1.x
    mul_pp r1.y, r3.w, r3.w
    mul_pp r1.z, r1.y, c21.z
    mad_pp r2.x, r1.y, -c23.z, c23.w
    mad_pp r2.y, r6.w, r2.x, r1.z
    mad_pp r1.z, r4.w, r2.x, r1.z
    mad r1.z, r2.y, r1.z, c22.w
    rcp_pp r1.z, r1.z
    mul_pp r2.x, r1.y, r1.y
    mul r1.w, r1.w, r1.w
    mad r1.y, r1.y, r1.y, c20.y
    mad_pp r1.y, r1.w, r1.y, c20.w
    mul r1.w, r1.y, c24.x
    mul r1.y, r1.y, r1.w
    rcp r1.y, r1.y
    mul_pp r1.y, r1.y, r2.x
    mul_pp r1.y, r1.y, r1.z
    mul_pp r1.y, r6.w, r1.y
    mul_pp r1.y, r1.y, c13.x
    max_pp r2.x, r1.y, c20.z
    mul_pp r1.yzw, r5.xxyz, r8.xxyz
    mad_pp r0.yzw, r4.xxyz, r1, r0
    mul_pp r1.x, r1.x, r2.x
    mul_pp r1.xyz, r5, r1.x
    mul_pp r1.xyz, r6.w, r1
    mad_pp oC0.xyz, r1, r0.x, r0.yzww
    mov_pp oC0.w, c20.w
