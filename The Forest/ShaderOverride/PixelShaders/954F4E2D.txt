// CRC32: 954F4E2D | Matched 2 variants of 1 shaders: Hidden/Internal-PrePassLighting
// 
//    Unity headers extracted from Internal-PrePassLighting.shader
//    Shader "Hidden/Internal-PrePassLighting" {
//      Properties {
//       _LightTexture0 ("", any) = "" {}
//       _LightTextureB0 ("", 2D) = "" {}
//       _ShadowMapTexture ("", any) = "" {}
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Pass 2/3 {
//          Tags { "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Fog { Mode Off }
//          Blend One One
//          Program "fp" {
//            SubProgram "d3d9 " {
// 1:           Keywords { "DIRECTIONAL" "GI_OFF" "SHADOWS_OFF" "SKY_OCCLUSION_ON" "SUNSHINE_FILTER_PCF_4x4" }
// 2:           Keywords { "DIRECTIONAL" "GI_OFF" "SHADOWS_SCREEN" "SKY_OCCLUSION_ON" "SUNSHINE_FILTER_PCF_4x4" }
//              Matrix 0 [sunshine_WorldToSunVP]
//              Matrix 4 [sunshine_CascadeRanges]
//              Matrix 8 [_CameraToWorld]
//              Matrix 12 [_WorldToCamera]
//              Matrix 16 [_SkyshadowMatrix]
//              Matrix 20 [_SkyshadowProjectionMatrix]
//              Vector 24 [_WorldSpaceCameraPos]
//              Vector 25 [_ProjectionParams]
//              Vector 26 [_ScreenParams]
//              Vector 27 [_ZBufferParams]
//              Vector 28 [sunshine_Lightmap_TexelSize]
//              Vector 29 [sunshine_ShadowParamsAndHalfTexel]
//              Vector 30 [sunshine_OvercastCoord]
//              Vector 31 [sunshine_OvercastVectorsUV]
//              Vector 32 [sunshine_ShadowCoordDepthStart]
//              Vector 33 [sunshine_ShadowToWorldScale]
//              Vector 34 [sunshine_CascadeNearRatiosSq]
//              Vector 35 [sunshine_CascadeFarRatiosSq]
//              Vector 36 [sunshine_ShadowFadeParams]
//              Float 37 [CaveAmount]
//              Vector 38 [_LightDir]
//              Vector 39 [_LightColor]
//              Vector 40 [_SkylightColor]
//              Vector 41 [_SunlightColor]
//              SetTexture 0 [_CameraNormalsTexture] 2D 0
//              SetTexture 1 [_CameraDepthTexture] 2D 1
//              SetTexture 2 [sunshine_Lightmap] 2D 2
//              SetTexture 3 [sunshine_OvercastMap] 2D 3
//              SetTexture 4 [_UniformNoise] 2D 4
//              SetTexture 5 [_SkyshadowDepthTexture] 2D 5
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    def c42, 1.00000000, 0.00000000, 2.00000000, -1.00000000
    def c43, -0.81005859, -0.50000000, 128.00000000, 123456792.00000000
    def c44, 0.84507048, 0.23000000, 0.50000000, 0.11108398
    def c45, 1.00000000, 0.00392157, 0.00001538, 0.00000006
    def c46, 0.21997070, 0.70703125, 0.07098389, 5.00000000
    def c47, 0.98000002, 0.02000000, 10.00000000, 0.05000000
    def c48, 0.79980469, 0.00000000, 0.00390625, 3.50000000
    def c49, 0.04000000, 0.05000000, 0.03000000, -4.50000000
    defi i0, 9, 0, 1, 0
    def c50, 0.01200000, 40.00000000, -3.50000000, -2.50000000
    def c51, -1.50000000, 1.50000000, 2.50000000, 9.00000000
    def c52, 0.14285715, 1.00000000, 0.89999998, 0.10000000
    dcl_texcoord0 v0.xyzw
    dcl_texcoord1 v1.xyz

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

// This variant is SHADOWS_SCREEN, meaning it's copying a shadow generated in
// Hidden/Internal-PrePassCollectShadows to the screen, so we discard the
// stereo adjustment from the VS and get the screen coordinates directly:
mov r20, v0
texldl r31, c220.z, s13
add r31.w, r20.w, -r31.y
mul r31.w, r31.w, c220.w
mad r20.x, -r31.w, r31.x, r20.x

    rcp r0.x, r20.w
    mul r0.xy, r20, r0.x
    texld r1.x, r0, s1
    rcp r0.z, v1.z
    mov r4.w, c42.x
    mov r2.w, c42.x
    mad r0.w, r1.x, c27.x, c27.y
    mul r0.z, r0, c25
    mul r1.xyz, v1, r0.z
    rcp r0.z, r0.w
    mul r2.xyz, r1, r0.z


// This is a simplified version of the maths to find P.I[0,0] from MV.I and MVP
// For a detailed explanation of what we are doing here, see this thread:
// https://forums.geforce.com/default/topic/781954/3d-vision/dreamfall-chapters/post/4352670/#4352670

mov r30.x, c180.x
mov r30.y, c181.x
mov r30.z, c182.x
mov r30.w, c183.x
dp4 r30.x, r30, c190 // Calculate P[0,0]
rcp r30.x, r30.x // Calculate P.I[0,0]

add r31.w, r2.z, -r31.y // r31.w = depth - convergence
mul r31.w, r31.w, r31.x // r31.w = separation * (depth - convergence)
mad r2.x, -r31.w, r30.x, r2.x // X -= separation * (depth - convergence) * P.I[0,0]

    dp4 r3.w, r2, c9
    dp4 r3.z, r2, c10
    dp4 r4.x, r2, c8
    mov r4.y, r3.w
    mov r4.z, r3
    dp4 r5.x, r4, c2
    dp4 r0.z, r4, c0
    dp4 r3.x, r4, c1
    mov r1.z, r5.x
    mov r1.x, r0.z
    mov r1.y, r3.x
    add r1.xyz, r1, -c32
    mul r1.xyz, r1, c33
    dp3 r3.y, r1, r1
    mul r0.w, r3.y, c43
    frc r0.w, r0
    mul r0.w, -r0, c29.y
    add r0.w, r0, c42.x
    mad r6, -r3.y, r0.w, c35
    mad r1, r3.y, r0.w, -c34
    mov r0.w, r3.x
    cmp r1, r1, c42.x, c42.y
    cmp r6, r6, c42.x, c42.y
    mul r6, r1, r6
    mul r1, r6.y, c5
    mad r1, r6.x, c4, r1
    mad r1, r6.z, c6, r1
    mad r1, r6.w, c7, r1
    mad r1.xy, r1.zwzw, r0.zwzw, r1
    mad r1.xy, r1, c42.z, c42.w
    mul r1.zw, r1.xyxy, r1.xyxy
    add r0.w, r1.z, r1
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mad r0.w, r0, c44.x, c44.y
    rcp r0.w, r0.w
    mul r1.xy, r1, r0.w
    mul r1.xy, r1, c44.z
    add r1.xy, r1, -c29.zwzw
    add r1.xy, r1, c44.z
    mul r1.xy, r1, c28.zwzw
    frc r6.xy, r1
    add r1.xy, -r6, r1
    mul r1.xy, r1, c28
    add r1.xy, r1, c29.zwzw
    mov r1.zw, c28.xyxy
    mad r8.xy, c42.xzzw, r1.zwzw, r1
    mov r5.zw, c28.xyxy
    mad r7.xy, c42.z, r5.zwzw, r1
    texld r7, r7, s2
    texld r8, r8, s2
    dp4 r7.w, r7, c45
    dp4 r7.z, r8, c45
    add r8.xy, r1, c28
    mov r1.zw, c28.xyxy
    mad r7.xy, c42.zxzw, r1.zwzw, r1
    texld r9, r8, s2
    texld r8, r7, s2
    add_pp r6.zw, -r6.xyxy, c42.x
    dp4 r7.x, r9, c45
    dp4 r7.y, r8, c45
    mov r5.zw, c28.xyxy
    mad r8.xy, c42.yzzw, r5.zwzw, r1
    texld r8, r8, s2
    mov r1.zw, c28.xyxy
    mad r9.xy, c42.wzzw, r1.zwzw, r1
    add r7, r5.x, -r7
    texld r9, r9, s2
    dp4 r8.w, r8, c45
    mov r1.zw, c28.xyxy
    mad r8.xy, c42.yxzw, r1.zwzw, r1
    dp4 r8.z, r9, c45
    mov r5.zw, c28.xyxy
    mad r9.xy, c42.wxzw, r5.zwzw, r1
    texld r10, r9, s2
    texld r9, r8, s2
    dp4 r8.x, r10, c45
    dp4 r8.y, r9, c45
    add r9, r5.x, -r8
    cmp r8, r7, c42.x, c42.y
    mov r7.w, r6.x
    mov r7.z, c42.x
    mul_pp r5.zw, r8, r7
    cmp r9, r9, c42.x, c42.y
    mov r7.x, r6.z
    mov r7.y, c42.x
    mul_pp r1.zw, r9, r7.xyxy
    add_pp r0.w, r1.z, r1
    add_pp r5.y, r5.z, r5.w
    add_pp r5.w, r0, r5.y
    mul_pp r1.zw, r9.xyxy, r7.xyxy
    add_pp r0.w, r1.z, r1
    mul_pp r8.xy, r8, r7.zwzw
    add_pp r5.y, r8.x, r8
    mov r1.zw, c28.xyxy
    mad r9.xy, c42, r1.zwzw, r1
    mov r8.xy, c28
    mad r8.xy, c42.zyzw, r8, r1
    texld r8, r8, s2
    dp4 r8.w, r8, c45
    texld r9, r9, s2
    add_pp r5.z, r0.w, r5.y
    dp4 r8.z, r9, c45
    mov r8.xy, c28
    mad r9.xy, c42.zwzw, r8, r1
    mov r1.zw, c28.xyxy
    mad r8.xy, c42.xwzw, r1.zwzw, r1
    texld r10, r9, s2
    texld r9, r8, s2
    dp4 r8.y, r10, c45
    dp4 r8.x, r9, c45
    mov r1.zw, c28.xyxy
    mad r9.xy, c42.wyzw, r1.zwzw, r1
    texld r10, r1, s2
    texld r9, r9, s2
    dp4 r1.z, r9, c45
    add r8, r5.x, -r8
    add r9.xy, r1, -c28
    dp4 r1.w, r10, c45
    mov r9.zw, c28.xyxy
    mad r1.xy, c42.ywzw, r9.zwzw, r1
    texld r10, r9, s2
    texld r9, r1, s2
    cmp r8, r8, c42.x, c42.y
    dp4 r1.x, r10, c45
    dp4 r1.y, r9, c45
    add r1, r5.x, -r1
    cmp r1, r1, c42.x, c42.y
    mul_pp r5.xy, r7.zwzw, r8.zwzw
    mul_pp r1.zw, r7.xyxy, r1
    add_pp r0.w, r1.z, r1
    add_pp r5.x, r5, r5.y
    mul_pp r1.zw, r7, r8.xyxy
    add_pp r1.z, r1, r1.w
    mul_pp r1.xy, r7, r1
    add_pp r5.y, r0.w, r5.x
    add_pp r0.w, r1.x, r1.y
    add_pp r5.x, r0.w, r1.z
    mov_pp r1.x, r6.w
    mov_pp r1.w, r6.y
    mov_pp r1.yz, c42.x
    mul_pp r1, r1, r5
    dp4_pp r0.w, r1, c44.w
    add r1.x, r0.w, -c37
    mad_sat r0.w, -r3.y, c36.y, c36.x
    mad r0.w, r0, r1.x, c37.x
    texld r1, r0, s0
    add r5.w, -r0, c42.x
    mul r0.zw, r0.z, c31.xyxy
    add r5.xy, r0.zwzw, c30
    mad_pp r1.xyz, r1, c42.z, c42.w
    dp3_pp r0.z, r1, r1
    mad r3.xy, r3.x, c31.zwzw, r5
    texld r0.w, r3, s3
    rsq_pp r0.z, r0.z
    mul_pp r5.xyz, r0.z, r1
    dp3_pp r6.w, r5, -c38
    mul r5.w, r5, r0
    abs_pp r0.w, r6
    rcp_pp r0.z, r0.z
    add_pp r0.z, r0, c43.x
    cmp r0.z, r0, c42.y, c42.x
    cmp_pp r1.y, r6.w, r6.w, r0.w
    add r0.w, r0.z, c43.y
    max_pp r1.x, r6.w, c42.y
    cmp_pp r1.y, -r0.w, r1.x, r1
    dp4 r1.x, r2, r2
    rsq r2.w, r1.x
    mul r1.y, r5.w, r1
    mul r6.xyz, r2.w, r2
    mov r3.y, r3.w
    dp3_pp r3.w, r5, r6
    cmp_pp r6.x, -r3.w, c42.y, c42
    mov r3.x, r4
    add r3.xyz, r3, -c24
    dp3 r2.w, r3, r3
    rsq r2.w, r2.w
    mad r3.xyz, -r2.w, r3, -c38
    cmp_pp r3.w, r3, c42.y, c42.x
    add_pp r2.w, r6.x, -r3
    mul_pp r6.xyz, r5, r2.w
    dp3 r3.w, r3, r3
    rsq r3.w, r3.w
    cmp_pp r6.xyz, -r0.w, r5, r6
    mul r3.xyz, r3.w, r3
    dp3_pp r3.x, r3, r6
    mul r1.xyz, r1.y, c39
    mul_pp r2.w, r2, r6
    cmp_pp r0.w, -r0, r6, r2
    mul_pp r5.xyz, r1, c48.xxyw
    cmp_pp r1.xyz, r0.w, r1, r5
    mov r5.xyz, -c38
    max_pp r6.x, r3, c42.y
    mul_pp r1.w, r1, c43.z
    pow_pp r3, r6.x, r1.w
    mov_pp r2.w, r3.x
    mov_sat r1.w, r5
    mov r5.w, c42.y
    dp3 r3.x, r2, r2
    rsq r6.x, r3.x
    mul r1.w, r2, r1
    dp4 r3.z, r5, c14
    dp4 r3.y, r5, c13
    dp4 r3.x, r5, c12
    mad r3.xyz, r2, -r6.x, r3
    mov_pp r5.xyz, c39
    dp3_pp r2.w, c46, r5
    mul r2.xyz, r6.x, r2
    dp3 r3.w, r3, r3
    mul r1.w, r1, r2
    rsq r2.w, r3.w
    mul r3.xyz, r2.w, r3
    dp3_sat r2.x, -r2, r3
    mad_pp r3.w, r6.y, c44.z, c44.z
    mad r2.y, r3.w, c42.z, c42.w
    dp4 r3.z, r4, c18
    add r3.x, -r2, c42
    abs r3.y, r2
    pow r2, r3.x, c46.w
    mad r2.y, r3, c44.z, c44.z
    add r2.z, r2.y, -r3.w
    mul_pp_sat r2.y, r0.w, c47.z
    mad r0.w, r2.x, c47.x, c47.y
    mad r2.x, r0.z, r2.z, r3.w
    mul r0.w, r0, r2.y
    mul r0.z, r0.w, c47
    mad r0.w, r2.x, r2.x, c47
    dp4 r3.w, r4, c19
    dp4 r3.x, r4, c16
    dp4 r3.y, r4, c17
    mul_pp r1.w, r1, r0.z
    dp4 r0.z, r3, c22
    mul r2.xyz, r0.w, c40
    dp4 r0.w, r3, c21
    mad r4.z, r0, c44, c44
    mad r4.y, r0.w, c44.z, c44.z
    dp4 r0.w, r3, c20
    mov r3.xyz, c41
    mad r3.xyz, r3, c44.z, c44.z
    mul r3.xyz, r3, c40.z
    mov r0.z, c48
    mad r4.x, r0.w, c44.z, c44.z
    mul r0.zw, c26.xyxy, r0.z
    mul r0.xy, r0, r0.zwzw
    texld r0.xy, r0, s4
    mov r0.zw, r0.xyxy
    mul r3.xyz, r3, c49
    mov r4.w, c42.y
    mov r2.w, c42.y
    mov r3.w, c42.y
    loop aL, i0
    add r0.x, r0.w, r3.w
    add r5.y, r0.x, c49.w
    add r5.x, r0.z, c49.w
    mul r5.zw, r5.xyxy, c50.x
    mov r0.y, r5
    add r0.x, r0.z, c50.z
    mul r0.xy, r0, c50.x
    add r6.xy, r4, r0
    mul r0.xy, r0, r0
    add r0.x, r0, r0.y
    texld r6.x, r6, s5
    add r5.x, r4.z, -r6
    add r6.xy, r4, r5.zwzw
    mul r5.zw, r5, r5
    add r5.z, r5, r5.w
    max r6.z, r5.x, c42.y
    texld r5.x, r6, s5
    add r5.x, r4.z, -r5
    max r5.x, r5, c42.y
    rsq r5.z, r5.z
    rcp r5.z, r5.z
    mad r0.y, -r5.z, c52.x, c52
    mul_sat r5.x, r5, c50.y
    mad r5.x, r5, r0.y, r4.w
    rsq r0.x, r0.x
    rcp r4.w, r0.x
    mov r0.y, r5
    add r0.x, r0.z, c50.w
    mul r5.zw, r0.xyxy, c50.x
    mad r0.x, -r4.w, c52, c52.y
    mul_sat r6.x, r6.z, c50.y
    mad r4.w, r6.x, r0.x, r5.x
    add r0.xy, r4, r5.zwzw
    texld r0.x, r0, s5
    mul r5.zw, r5, r5
    add r0.y, r5.z, r5.w
    add r0.x, r4.z, -r0
    rsq r0.y, r0.y
    max r0.x, r0, c42.y
    rcp r0.y, r0.y
    mul_sat r0.x, r0, c50.y
    mad r0.y, -r0, c52.x, c52
    mad r4.w, r0.x, r0.y, r4
    mov r0.y, r5
    add r0.x, r0.z, c43.y
    mul r5.zw, r0.xyxy, c50.x
    mov r0.y, r5
    add r0.x, r0.z, c51
    mul r6.xy, r0, c50.x
    add r0.xy, r4, r5.zwzw
    add r7.xy, r4, r6
    mul r6.xy, r6, r6
    add r6.x, r6, r6.y
    texld r0.x, r0, s5
    texld r5.x, r7, s5
    mul r5.zw, r5, r5
    add r0.y, r5.z, r5.w
    add r5.x, r4.z, -r5
    rsq r6.x, r6.x
    max r5.x, r5, c42.y
    rcp r6.x, r6.x
    add r0.x, r4.z, -r0
    mul_sat r5.x, r5, c50.y
    mad r6.x, -r6, c52, c52.y
    mad r6.x, r5, r6, r4.w
    max r0.x, r0, c42.y
    rsq r0.y, r0.y
    rcp r5.x, r0.y
    mul_sat r4.w, r0.x, c50.y
    mov r0.y, r5
    add r0.x, r0.z, c44.z
    mul r5.zw, r0.xyxy, c50.x
    mad r0.x, -r5, c52, c52.y
    mad r4.w, r4, r0.x, r6.x
    add r0.xy, r4, r5.zwzw
    texld r0.x, r0, s5
    mul r5.zw, r5, r5
    add r0.y, r5.z, r5.w
    add r0.x, r4.z, -r0
    rsq r0.y, r0.y
    max r0.x, r0, c42.y
    rcp r0.y, r0.y
    mul_sat r0.x, r0, c50.y
    mad r0.y, -r0, c52.x, c52
    mad r4.w, r0.x, r0.y, r4
    mov r0.y, r5
    add r0.x, r0.z, c51.z
    mul r5.zw, r0.xyxy, c50.x
    mov r0.y, r5
    add r0.x, r0.z, c51.y
    mul r6.xy, r0, c50.x
    add r0.xy, r4, r5.zwzw
    add r7.xy, r4, r6
    texld r0.x, r0, s5
    mul r5.zw, r5, r5
    add r0.y, r5.z, r5.w
    rsq r0.y, r0.y
    rcp r5.z, r0.y
    mul r6.xy, r6, r6
    texld r5.x, r7, s5
    add r6.x, r6, r6.y
    add r5.x, r4.z, -r5
    rsq r6.x, r6.x
    max r5.x, r5, c42.y
    rcp r6.x, r6.x
    add r0.x, r4.z, -r0
    mov r0.y, r5
    mul_sat r5.x, r5, c50.y
    mad r6.x, -r6, c52, c52.y
    mad r6.x, r5, r6, r4.w
    max r0.x, r0, c42.y
    mul_sat r4.w, r0.x, c50.y
    add r0.x, r0.z, c48.w
    mul r5.xy, r0, c50.x
    mad r0.x, -r5.z, c52, c52.y
    mad r4.w, r4, r0.x, r6.x
    add r0.xy, r4, r5
    texld r0.x, r0, s5
    mul r5.xy, r5, r5
    add r0.y, r5.x, r5
    add r0.x, r4.z, -r0
    rsq r0.y, r0.y
    max r0.x, r0, c42.y
    rcp r0.y, r0.y
    mul_sat r0.x, r0, c50.y
    mad r0.y, -r0, c52.x, c52
    mad r4.w, r0.x, r0.y, r4
    add r2.w, r2, c51
    add r3.w, r3, c42.x
    endloop
    rcp r0.x, r2.w
    mad r2.w, -r4, r0.x, c42.x
    pow r0, r2.w, c51.y
    add r0.x, r0, c42.w
    mad r0.x, r0, c52.z, c52.y
    mad r0.y, r0.x, c52.z, c52.w
    mul r3.xyz, r3, r0.y
    mad r0.xyz, r2, r0.x, r3
    add_pp oC0.xyz, r1, r0
    mov_pp oC0.w, r1
