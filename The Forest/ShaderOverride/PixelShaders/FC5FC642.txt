// CRC32: FC5FC642 | Unity headers extracted from Internal-PrePassLighting.shader
// Shader "Hidden/Internal-PrePassLighting" {
//   Properties {
//    _LightTexture0 ("", any) = "" {}
//    _LightTextureB0 ("", 2D) = "" {}
//    _ShadowMapTexture ("", any) = "" {}
//   }
//   Fallback Off
//   SubShader 1/1 {
//     Pass 2/3 {
//       Tags { "SHADOWSUPPORT"="true" }
//       ZWrite Off
//       Fog { Mode Off }
//       Blend One One
//       Program "fp" {
//         SubProgram "d3d9 " {
//           Keywords { "GI_OFF" "POINT_COOKIE" "SHADOWS_OFF" "SKY_OCCLUSION_ON" "SUNSHINE_FILTER_PCF_4x4" }
//           Matrix 0 [_CameraToWorld]
//           Matrix 4 [_WorldToCamera]
//           Matrix 8 [_LightMatrix0]
//           Matrix 12 [_SkyshadowMatrix]
//           Matrix 16 [_SkyshadowProjectionMatrix]
//           Vector 20 [_WorldSpaceCameraPos]
//           Vector 21 [_ProjectionParams]
//           Vector 22 [_ScreenParams]
//           Vector 23 [_ZBufferParams]
//           Vector 24 [_LightPos]
//           Vector 25 [_LightColor]
//           Vector 26 [_SkylightColor]
//           Vector 27 [_SunlightColor]
//           SetTexture 0 [_CameraNormalsTexture] 2D 0
//           SetTexture 1 [_CameraDepthTexture] 2D 1
//           SetTexture 2 [_LightTextureB0] 2D 2
//           SetTexture 3 [_LightTexture0] CUBE 3
//           SetTexture 4 [_UniformNoise] 2D 4
//           SetTexture 5 [_SkyshadowDepthTexture] 2D 5
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_cube s3
    dcl_2d s4
    dcl_2d s5
    def c28, 1.00000000, 2.00000000, -1.00000000, -0.81005859
    def c29, 0.00000000, 1.00000000, -0.50000000, 128.00000000
    def c30, 0.21997070, 0.70703125, 0.07098389, 5.00000000
    def c31, 0.98000002, 0.02000000, 10.00000000, 0.50000000
    def c32, 0.79980469, 0.00000000, 0.05000000, 0.00390625
    def c33, 0.04000000, 0.05000000, 0.03000000, 3.50000000
    defi i0, 9, 0, 1, 0
    def c34, -4.50000000, 0.01200000, 40.00000000, -3.50000000
    def c35, -2.50000000, -1.50000000, 1.50000000, 2.50000000
    def c36, 0.14285715, 1.00000000, 9.00000000, 0.89999998
    def c37, 0.89999998, 0.10000000, 0, 0
    dcl_texcoord0 v0.xyzw
    dcl_texcoord1 v1.xyz

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

    rcp r0.x, v0.w
    mul r5.xy, v0, r0.x
    texld r0.x, r5, s1
    mad r0.w, r0.x, c23.x, c23.y
    rcp r0.y, v1.z
    mul r0.y, r0, c21.z
    mov r2.w, c28.x
    mul r0.xyz, v1, r0.y
    rcp r0.w, r0.w
    mul r2.xyz, r0, r0.w

// This is a simplified version of the maths to find P.I[0,0] from MV.I and MVP
// Assumes the game is storing matrix columns in registers (highly likely)
// c180 is the inverse of the MV matrix (From DX9Settings.ini)
// c190 is the MVP matrix (From DX9Settings.ini)

// Transpose first component of the MV.I matrix regs into r30:
mov r30.x, c180.x
mov r30.y, c181.x
mov r30.z, c182.x
mov r30.w, c183.x
dp4 r30.x, r30, c190 // Calculate P[0,0]
rcp r30.x, r30.x // Calculate P.I[0,0]

// This is a variation of the stereo-correction formula for view-space coords:
texldl r31, c220.z, s13 // r31.x = separation, r31.y = convergence
add r31.w, r2.z, -r31.y // r31.w = depth - convergence
mul r31.w, r31.w, r31.x // r31.w = separation * (depth - convergence)
mad r2.x, r31.w, r30.x, r2.x // X += separation * (depth - convergence) * P.I[0,0]

    dp4 r3.z, r2, c2
    dp4 r3.x, r2, c0
    dp4 r3.y, r2, c1
    dp4 r4.w, r2, r2
    rsq r4.w, r4.w
    mul r6.xyz, r4.w, r2
    mov_pp r6.w, c28.x
    mov r0.z, r3
    mov r0.x, r3
    mov r0.y, r3
    add r1.xyz, r0, -c24
    dp3 r0.w, r1, r1
    rsq r3.w, r0.w
    add r0.xyz, r0, -c20
    mul r4.xyz, r3.w, r1
    dp3 r1.w, r0, r0
    rsq r1.x, r1.w
    mad r0.xyz, -r1.x, r0, -r4
    dp3 r3.w, r0, r0
    texld r1, r5, s0
    mad_pp r1.xyz, r1, c28.y, c28.z
    dp3_pp r2.w, r1, r1
    rsq_pp r2.w, r2.w
    mul_pp r1.xyz, r2.w, r1
    dp3_pp r5.z, -r4, r1
    dp3_pp r4.w, r1, r6
    rsq r3.w, r3.w
    mul r6.xyz, r3.w, r0
    rcp_pp r0.x, r2.w
    add_pp r0.x, r0, c28.w
    cmp r2.w, r0.x, c29.x, c29.y
    add r3.w, r2, c29.z
    mov r4.xyz, -r4
    cmp_pp r0.y, -r4.w, c29.x, c29
    cmp_pp r0.z, r4.w, c29.x, c29.y
    add_pp r4.w, r0.y, -r0.z
    mul_pp r0.xyz, r1, r4.w
    cmp_pp r0.xyz, -r3.w, r1, r0
    dp3_pp r0.x, r6, r0
    max_pp r0.z, r0.x, c29.x
    abs_pp r1.x, r5.z
    mov_pp r6.x, r3
    mov_pp r6.y, r3
    mov_pp r6.z, r3
    dp4 r1.z, r6, c10
    dp4 r1.y, r6, c9
    cmp_pp r1.x, r5.z, r5.z, r1
    max_pp r0.x, r5.z, c29
    cmp_pp r7.x, -r3.w, r0, r1
    mul r0.x, r0.w, c24.w
    dp4 r1.x, r6, c8
    texld r0.w, r1, s3
    texld r0.x, r0.x, s2
    mul r5.w, r0.x, r0
    mul_pp r0.x, r1.w, c29.w
    mul_pp r1.w, r4, r5.z
    pow_pp r6, r0.z, r0.x
    mul r0.w, r5, r7.x
    mul r1.xyz, r0.w, c25
    mul_pp r0.xzw, r1.xyyz, c32.xyxy
    cmp_pp r1.w, -r3, r5.z, r1
    cmp_pp r1.xyz, r1.w, r1, r0.xzww
    mov r4.w, c29.x
    mov_pp r0.z, r6.x
    mov_sat r0.x, r5.w
    mul r0.x, r0.z, r0
    dp3 r0.z, r2, r2
    dp4 r6.z, r4, c6
    dp4 r6.y, r4, c5
    dp4 r6.x, r4, c4
    mov_pp r4.xyz, c25
    rsq r0.z, r0.z
    mad r6.xyz, r2, -r0.z, r6
    mad_pp r4.w, r0.y, c31, c31
    dp3_pp r0.w, c30, r4
    dp3 r3.w, r6, r6
    rsq r4.x, r3.w
    mul r3.w, r0.x, r0
    mul r0.xyz, r0.z, r2
    mul r4.xyz, r4.x, r6
    dp3_sat r0.x, -r0, r4
    mad r0.y, r4.w, c28, c28.z
    add r2.x, -r0, c28
    abs r2.y, r0
    pow r0, r2.x, c30.w
    mad r0.y, r2, c31.w, c31.w
    add r0.z, r0.y, -r4.w
    mul_pp_sat r0.y, r1.w, c31.z
    mad r0.x, r0, c31, c31.y
    mul r0.x, r0, r0.y
    mad r0.y, r2.w, r0.z, r4.w
    mul r0.x, r0, c31.z
    mad r0.y, r0, r0, c32.z
    mul_pp r1.w, r3, r0.x
    mov r3.w, c28.x
    mul r2.xyz, r0.y, c26
    dp4 r0.w, r3, c15
    dp4 r0.z, r3, c14
    dp4 r0.x, r3, c12
    dp4 r0.y, r3, c13
    dp4 r2.w, r0, c18
    dp4 r3.x, r0, c17
    dp4 r0.y, r0, c16
    mad r4.z, r2.w, c31.w, c31.w
    mov r0.x, c32.w
    mad r4.y, r3.x, c31.w, c31.w
    mul r3.xy, c22, r0.x
    mul r3.xy, r5, r3
    mad r4.x, r0.y, c31.w, c31.w
    mov r0.xyz, c27
    mad r0.xyz, r0, c31.w, c31.w
    texld r5.xy, r3, s4
    mul r3.xyz, r0, c26.z
    mov r0.zw, r5.xyxy
    mul r3.xyz, r3, c33
    mov r4.w, c29.x
    mov r2.w, c29.x
    mov r3.w, c29.x
    loop aL, i0
    add r0.x, r0.w, r3.w
    add r5.y, r0.x, c34.x
    add r5.x, r0.z, c34
    mul r6.xy, r5, c34.y
    mov r0.y, r5
    add r0.x, r0.z, c34.w
    mul r5.zw, r0.xyxy, c34.y
    add r0.xy, r4, r5.zwzw
    texld r0.x, r0, s5
    add r5.x, r4.z, -r0
    add r0.xy, r4, r6
    texld r0.x, r0, s5
    add r6.z, r4, -r0.x
    mul r0.xy, r6, r6
    max r6.x, r6.z, c29
    add r0.x, r0, r0.y
    rsq r6.y, r0.x
    mul r0.xy, r5.zwzw, r5.zwzw
    add r0.x, r0, r0.y
    rcp r5.z, r6.y
    max r5.x, r5, c29
    mad r0.y, -r5.z, c36.x, c36
    mul_sat r6.x, r6, c34.z
    mad r6.x, r6, r0.y, r4.w
    rsq r0.x, r0.x
    rcp r4.w, r0.x
    mov r0.y, r5
    add r0.x, r0.z, c35
    mul r5.zw, r0.xyxy, c34.y
    mad r0.x, -r4.w, c36, c36.y
    mul_sat r5.x, r5, c34.z
    mad r4.w, r5.x, r0.x, r6.x
    add r0.xy, r4, r5.zwzw
    texld r0.x, r0, s5
    mul r5.zw, r5, r5
    add r0.y, r5.z, r5.w
    add r0.x, r4.z, -r0
    rsq r0.y, r0.y
    max r0.x, r0, c29
    rcp r0.y, r0.y
    mul_sat r0.x, r0, c34.z
    mad r0.y, -r0, c36.x, c36
    mad r4.w, r0.x, r0.y, r4
    mov r0.y, r5
    add r0.x, r0.z, c29.z
    mul r5.zw, r0.xyxy, c34.y
    add r6.xy, r4, r5.zwzw
    mov r0.y, r5
    add r0.x, r0.z, c35.y
    mul r6.zw, r0.xyxy, c34.y
    add r0.xy, r4, r6.zwzw
    texld r0.x, r0, s5
    mul r6.zw, r6, r6
    add r0.y, r6.z, r6.w
    add r0.x, r4.z, -r0
    rsq r0.y, r0.y
    max r0.x, r0, c29
    rcp r0.y, r0.y
    mul_sat r0.x, r0, c34.z
    mad r0.y, -r0, c36.x, c36
    mad r4.w, r0.x, r0.y, r4
    texld r0.x, r6, s5
    mul r5.zw, r5, r5
    add r0.y, r5.z, r5.w
    rsq r0.y, r0.y
    rcp r6.x, r0.y
    add r0.x, r4.z, -r0
    max r0.x, r0, c29
    mul_sat r5.x, r0, c34.z
    mov r0.y, r5
    add r0.x, r0.z, c31.w
    mul r5.zw, r0.xyxy, c34.y
    mad r0.x, -r6, c36, c36.y
    mad r4.w, r5.x, r0.x, r4
    add r0.xy, r4, r5.zwzw
    texld r0.x, r0, s5
    mul r5.zw, r5, r5
    add r0.y, r5.z, r5.w
    add r0.x, r4.z, -r0
    rsq r0.y, r0.y
    max r0.x, r0, c29
    rcp r0.y, r0.y
    mul_sat r0.x, r0, c34.z
    mad r0.y, -r0, c36.x, c36
    mad r4.w, r0.x, r0.y, r4
    mov r0.y, r5
    add r0.x, r0.z, c35.w
    mul r5.zw, r0.xyxy, c34.y
    add r6.xy, r4, r5.zwzw
    mul r5.zw, r5, r5
    mov r0.y, r5
    add r0.x, r0.z, c35.z
    mul r6.zw, r0.xyxy, c34.y
    add r0.xy, r4, r6.zwzw
    texld r0.x, r0, s5
    mul r6.zw, r6, r6
    add r0.y, r6.z, r6.w
    add r0.x, r4.z, -r0
    rsq r0.y, r0.y
    max r0.x, r0, c29
    rcp r0.y, r0.y
    mul_sat r0.x, r0, c34.z
    mad r0.y, -r0, c36.x, c36
    mad r4.w, r0.x, r0.y, r4
    add r0.y, r5.z, r5.w
    rsq r0.y, r0.y
    rcp r5.w, r0.y
    texld r0.x, r6, s5
    add r0.x, r4.z, -r0
    max r0.x, r0, c29
    mul_sat r5.z, r0.x, c34
    mov r0.y, r5
    add r0.x, r0.z, c33.w
    mul r5.xy, r0, c34.y
    mad r0.x, -r5.w, c36, c36.y
    mad r4.w, r5.z, r0.x, r4
    add r0.xy, r4, r5
    texld r0.x, r0, s5
    mul r5.xy, r5, r5
    add r0.y, r5.x, r5
    add r0.x, r4.z, -r0
    rsq r0.y, r0.y
    max r0.x, r0, c29
    rcp r0.y, r0.y
    mul_sat r0.x, r0, c34.z
    mad r0.y, -r0, c36.x, c36
    mad r4.w, r0.x, r0.y, r4
    add r2.w, r2, c36.z
    add r3.w, r3, c28.x
    endloop
    rcp r0.x, r2.w
    mad r2.w, -r4, r0.x, c28.x
    pow r0, r2.w, c35.z
    add r0.x, r0, c28.z
    mad r0.x, r0, c36.w, c36.y
    mad r0.y, r0.x, c37.x, c37
    mul r3.xyz, r3, r0.y
    mad r0.xyz, r2, r0.x, r3
    add_pp oC0.xyz, r1, r0
    mov_pp oC0.w, r1
