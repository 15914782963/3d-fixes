// CRC32: 1BB0890D | Matched 2 variants of 1 shaders: Lux/Human/Skin Deferred
//
//    Unity headers extracted from Lux Skin Deferred.shader
//    Shader "Lux/Human/Skin Deferred" {
//      Properties {
//       _Color ("Color", Color) = (1,1,1,1)
//       _MainTex ("Albedo (RGB)", 2D) = "white" { }
//      [NoScaleOffset]  _SpecTex ("Smoothness (G) SSS Mask (B), AO (A)", 2D) = "gray" { }
//      [NoScaleOffset]  _BumpMap ("Bump Map", 2D) = "bump" { }
//      [Header(Bump Settings)] [Space(4)]  _SimpleBumpBias ("Diffuse Normal Map Blur Bias", Float) = 1.5
//      [Header(Preintegrated Skin Lighting)] [Space(4)]  _CurvatureInfluence ("Curvature Influence", Range(0,1)) = 0.5
//       _CurvatureScale ("Curvature Scale", Float) = 0.02
//      [Header(Damage)] [Space(4)] [Toggle(_SPECGLOSSMAP)]  _UseDamage ("Enable Damage", Float) = 0
//       _BloodColor ("Blood Color", Color) = (0.56,0.1,0,1)
//      [NoScaleOffset]  _BloodTex ("Blood Detail Map: Smoothness(G) Brightness(B) Mask(A)", 2D) = "black" { }
//       _BloodTiling ("Blood Detail Tiling", Float) = 5
//       _Sharpness ("Blood Spread", Range(0.5,8)) = 2
//      [NoScaleOffset] [Space(8)]  _BloodSplat ("Blood Splatmap: Top(R) Left(G) Right(B) Enemy(A)", 2D) = "white" { }
//      [Space(8)]  _Damage1 ("Damage Top (R)", Range(0,1)) = 0
//       _Damage2 ("Damage Left (G)", Range(0,1)) = 0
//       _Damage3 ("Damage Right (B)", Range(0,1)) = 0
//       _Damage4 ("Damage Enemy (A)", Range(0,1)) = 0
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 3/3 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "RenderType"="Opaque" }
//          GpuProgramID 155815
//          Program "fp" {
//            SubProgram "d3d9 " {
// 2:           Keywords { "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "LIGHTMAP_OFF" "LUX_AREALIGHTS" "_SPECGLOSSMAP" }
// 1:           Keywords { "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "LIGHTMAP_OFF" "_SPECGLOSSMAP" }
//              Vector 17 [_BloodColor]
//              Float 23 [_BloodTiling]
//              Vector 13 [_Color]
//              Float 16 [_CurvatureInfluence]
//              Float 15 [_CurvatureScale]
//              Float 19 [_Damage1]
//              Float 20 [_Damage2]
//              Float 21 [_Damage3]
//              Float 22 [_Damage4]
//              Float 18 [_Sharpness]
//              Float 14 [_SimpleBumpBias]
//              Vector 0 [_WorldSpaceCameraPos]
//              Vector 12 [unity_ColorSpaceDielectricSpec]
//              Vector 3 [unity_SHAb]
//              Vector 2 [unity_SHAg]
//              Vector 1 [unity_SHAr]
//              Vector 4 [unity_SpecCube0_BoxMax]
//              Vector 5 [unity_SpecCube0_BoxMin]
//              Vector 7 [unity_SpecCube0_HDR]
//              Vector 6 [unity_SpecCube0_ProbePosition]
//              Vector 8 [unity_SpecCube1_BoxMax]
//              Vector 9 [unity_SpecCube1_BoxMin]
//              Vector 11 [unity_SpecCube1_HDR]
//              Vector 10 [unity_SpecCube1_ProbePosition]
//              SetTexture 0 [unity_SpecCube0] CUBE 0
//              SetTexture 1 [unity_SpecCube1] CUBE 1
//              SetTexture 2 [_MainTex] 2D 2
//              SetTexture 3 [_BumpMap] 2D 3
//              SetTexture 4 [_SpecTex] 2D 4
//              SetTexture 5 [_BloodTex] 2D 5
//              SetTexture 6 [_BloodSplat] 2D 6
//            }
//          }
//        }
//      }
//    }
//
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    def c24, 2, -1, 0, 1
    def c25, 9.99999975e-006, 100000, 0.5, 0.75
    def c26, 7, 0.999989986, 0.660000026, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord6_pp v4.xyz
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15

texldl r31, c220.z, s15

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --stereo-sampler-ps=s15 --fix-unity-reflection --only-autofixed --ignore-register-errors Lux_Human_Skin Deferred/fp/1BB0890D.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mov r0.x, v1.w
    mov r0.y, v2.w
    mov r0.z, v3.w
    add r1.xyz, -r0, r30
    nrm_pp r2.xyz, r1
    texld r1, v0, s2
    mul_pp r1.xyz, r1, c13
    texld_pp r3, v0, s3
    mad_pp r3.xy, r3.wyzw, c24.x, c24.y
    dp2add_sat_pp r0.w, r3, r3, c24.z
    add_pp r0.w, -r0.w, c24.w
    rsq_pp r0.w, r0.w
    rcp_pp r3.z, r0.w
    mul r4.xyz, c24.wwzw, v0.xyxw
    mov r4.w, c14.x
    texldl_pp r4, r4, s3
    mad_pp r4.xy, r4.wyzw, c24.x, c24.y
    dp2add_sat_pp r0.w, r4, r4, c24.z
    add_pp r0.w, -r0.w, c24.w
    rsq_pp r0.w, r0.w
    rcp_pp r4.z, r0.w
    dp3_pp r5.x, v1, r4
    dp3_pp r5.y, v2, r4
    dp3_pp r5.z, v3, r4
    texld_pp r4, v0, s4
    dsx_pp r6.xyz, r5
    dsy_pp r7.xyz, r5
    add_pp r6.xyz, r6_abs, r7_abs
    dp3_pp r0.w, r6, r6
    rsq_pp r0.w, r0.w
    rcp r0.w, r0.w
    dsx r6.xyz, r0
    dsy r7.xyz, r0
    add r6.xyz, r6_abs, r7_abs
    max r7.xyz, c25.x, r6
    dp3 r1.w, r7, r7
    rsq r1.w, r1.w
    rcp r2.w, r1.w
    cmp r1.w, -r2.w, c25.y, r1.w
    mul r0.w, r0.w, r1.w
    mad_pp r0.w, r0.w, c15.x, -r4.z
    mad_pp r0.w, c16.x, r0.w, r4.z
    cmp_pp oC1.z, -c16.x, r4.z, r0.w
    mul r6.xy, c23.x, v0
    texld_pp r6, r6, s5
    texld_pp r7, v0, s6
    mov_pp r8.x, c19.x
    mov_pp r8.y, c20.x
    mov_pp r8.z, c21.x
    mov_pp r8.w, c22.x
    mad_pp r9, r8, c24.x, c24.w
    mul_pp r7, r7, r9
    mul_pp r7, r6.w, r7
    mad_sat_pp r7, r7, -c24.x, c24.w
    add_pp r7, -r7, r8
    mul_sat_pp r7, r7, c18.x
    dp4_sat_pp r0.w, r7, c24.w
    mad_pp r6.xzw, c17.xyyz, r6.z, -r1.xyyz
    mad_pp r1.xyz, r0.w, r6.xzww, r1
    lrp_pp r1.w, r0.w, r6.y, r4.y
    dp3_pp r6.x, v1, r3
    dp3_pp r6.y, v2, r3
    dp3_pp r6.z, v3, r3
    mov r6.w, c24.w
    dp4_pp r3.x, c1, r6
    dp4_pp r3.y, c2, r6
    dp4_pp r3.z, c3, r6
    add_pp r3.xyz, r3, v4
    mul_pp r3.xyz, r4.w, r3
    dp3 r0.w, -r2, r6
    add r0.w, r0.w, r0.w
    mad_pp r7.xyz, r6, -r0.w, -r2
    mov r8.z, c24.z
    if_lt -c6.w, r8.z
    nrm_pp r9.xyz, r7
    add r8.xyw, -r0.xyzz, c4.xyzz
    rcp r10.x, r9.x
    rcp r10.y, r9.y
    rcp r10.z, r9.z
    mul_pp r8.xyw, r8, r10.xyzz
    add r11.xyz, -r0, c5
    mul_pp r10.xyz, r10, r11
    cmp_pp r8.xyw, -r9.xyzz, r10.xyzz, r8
    min_pp r0.w, r8.y, r8.x
    min_pp r2.w, r8.w, r0.w
    mov r10.xyz, c5
    add r8.xyw, r10.xyzz, c4.xyzz
    mov r10.z, c25.z
    mad r10.xyz, r8.xyww, r10.z, -c6
    add r10.xyz, r0, r10
    mad r9.xyz, r9, r2.w, r10
    mad_pp r9.xyz, r8.xyww, -c25.z, r9
    else
    mov_pp r9.xyz, r7
    endif
    add_pp r0.w, -r1.w, c24.w
    pow_pp r2.w, r0.w, c25.w
    mul_pp r9.w, r2.w, c26.x
    texldl_pp r10, r9, s0
    pow_pp r0.w, r10.w, c7.y
    mul_pp r0.w, r0.w, c7.x
    mul_pp r8.xyw, r10.xyzz, r0.w
    mov r2.w, c5.w
    if_lt r2.w, c26.y
    if_lt -c10.w, r8.z
    nrm_pp r11.xyz, r7
    add r12.xyz, -r0, c8
    rcp r13.x, r11.x
    rcp r13.y, r11.y
    rcp r13.z, r11.z
    mul_pp r12.xyz, r12, r13
    add r14.xyz, -r0, c9
    mul_pp r13.xyz, r13, r14
    cmp_pp r12.xyz, -r11, r13, r12
    min_pp r2.w, r12.y, r12.x
    min_pp r3.w, r12.z, r2.w
    mov r12.xyz, c8
    add r12.xyz, r12, c9
    mov r8.z, c25.z
    mad r13.xyz, r12, r8.z, -c10
    add r0.xyz, r0, r13
    mad r0.xyz, r11, r3.w, r0
    mad_pp r9.xyz, r12, -c25.z, r0
    else
    mov_pp r9.xyz, r7
    endif
    texldl_pp r7, r9, s1
    pow_pp r0.x, r7.w, c11.y
    mul_pp r0.x, r0.x, c11.x
    mul_pp r0.xyz, r7, r0.x
    mad r7.xyz, r0.w, r10, -r0
    mad_pp r8.xyw, c5.w, r7.xyzz, r0.xyzz
    endif
    mul_pp r0.xyz, r4.w, r8.xyww
    max_pp r0.w, c12.x, c12.y
    max_pp r2.w, r0.w, c12.z
    add_pp r0.w, -r2.w, c24.w
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r2.x, r6, r2
    add_pp r0.w, -r0.w, c24.w
    add_sat_pp r0.w, r0.w, r1.w
    add_pp r2.y, -r2.x, c24.w
    cmp_pp r2.x, r2.x, r2.y, c24.w
    mul_pp r2.y, r2.x, r2.x
    mul_pp r2.y, r2.y, r2.y
    mul_pp r2.x, r2.x, r2.y
    lrp_pp r4.xyw, r2.x, r0.w, c12.xyzz
    mul_pp r0.xyz, r0, r4.xyww
    mad_pp r0.xyz, r1, r3, r0
    mad_pp oC2.xyz, r5, c25.z, c25.z
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC0.xyz, r1
    mov_pp oC0.w, c24.w
    mov_pp oC1.x, c12.x
    mov_pp oC1.y, r4.z
    mov_pp oC1.w, r1.w
    mov_pp oC2.w, c26.z
    mov_pp oC3.w, c24.w
