// CRC32: 910A20D0 | Unity headers extracted from Internal-PrePassLighting.shader
// Shader "Hidden/Internal-PrePassLighting" {
//   Properties {
//    _LightTexture0 ("", any) = "" {}
//    _LightTextureB0 ("", 2D) = "" {}
//    _ShadowMapTexture ("", any) = "" {}
//   }
//   Fallback Off
//   SubShader 1/1 {
//     Pass 2/3 {
//       Tags { "SHADOWSUPPORT"="true" }
//       ZWrite Off
//       Fog { Mode Off }
//       Blend One One
//       Program "fp" {
//         SubProgram "d3d9 " {
//           Keywords { "GI_ON" "POINT_COOKIE" "SHADOWS_OFF" "SKY_OCCLUSION_OFF" "SUNSHINE_FILTER_PCF_4x4" }
//           Matrix 0 [_CameraToWorld]
//           Matrix 4 [_WorldToCamera]
//           Matrix 8 [_LightMatrix0]
//           Matrix 12 [_GIMatrix]
//           Matrix 16 [_GIProjectionMatrix]
//           Vector 20 [_WorldSpaceCameraPos]
//           Vector 21 [_ProjectionParams]
//           Vector 22 [_ScreenParams]
//           Vector 23 [_ZBufferParams]
//           Vector 24 [_LightPos]
//           Vector 25 [_LightColor]
//           Vector 26 [_SkylightColor]
//           Float 27 [_GIGain]
//           SetTexture 0 [_CameraNormalsTexture] 2D 0
//           SetTexture 1 [_CameraDepthTexture] 2D 1
//           SetTexture 2 [_LightTextureB0] 2D 2
//           SetTexture 3 [_LightTexture0] CUBE 3
//           SetTexture 4 [_UniformNoise] 2D 4
//           SetTexture 5 [_GIDepthTexture] 2D 5
//           SetTexture 6 [_GIFluxTexture] 2D 6
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_cube s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    def c28, 2.00000000, -1.00000000, -0.81005859, 1.00000000
    def c29, 0.00000000, 1.00000000, -0.50000000, 128.00000000
    def c30, 0.21997070, 0.70703125, 0.07098389, 5.00000000
    def c31, 0.98000002, 0.02000000, 10.00000000, 0.50000000
    def c32, 0.79980469, 0.00000000, 0.05000000, 0.25000000
    def c33, 0.00390625, -5.50000000, 0.01500000, -0.99000001
    defi i0, 11, 0, 1, 0
    def c34, 0.00000000, -2.00000000, 100.00000000, 0.10000000
    def c35, -4.50000000, -3.50000000, -2.50000000, -1.50000000
    def c36, 1.50000000, 2.50000000, 3.50000000, 4.50000000
    def c37, 11.00000000, 155.00000000, 0, 0
    dcl_texcoord0 v0.xyzw
    dcl_texcoord1 v1.xyz

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

    rcp r0.x, v0.w
    mul r5.xy, v0, r0.x
    texld r0.x, r5, s1
    mad r0.w, r0.x, c23.x, c23.y
    rcp r0.y, v1.z
    mul r0.y, r0, c21.z
    mov r2.w, c28
    texld r4, r5, s0
    mul r0.xyz, v1, r0.y
    rcp r0.w, r0.w
    mul r2.xyz, r0, r0.w

// This is a simplified version of the maths to find P.I[0,0] from MV.I and MVP
// Assumes the game is storing matrix columns in registers (highly likely)
// c180 is the inverse of the MV matrix (From DX9Settings.ini)
// c190 is the MVP matrix (From DX9Settings.ini)

// Transpose first component of the MV.I matrix regs into r30:
mov r30.x, c180.x
mov r30.y, c181.x
mov r30.z, c182.x
mov r30.w, c183.x
dp4 r30.x, r30, c190 // Calculate P[0,0]
rcp r30.x, r30.x // Calculate P.I[0,0]

// This is a variation of the stereo-correction formula for view-space coords:
texldl r31, c220.z, s13 // r31.x = separation, r31.y = convergence
add r31.w, r2.z, -r31.y // r31.w = depth - convergence
mul r31.w, r31.w, r31.x // r31.w = separation * (depth - convergence)
mad r2.x, r31.w, r30.x, r2.x // X += separation * (depth - convergence) * P.I[0,0]

    dp4 r3.z, r2, c2
    dp4 r3.x, r2, c0
    dp4 r3.y, r2, c1
    mov r0.z, r3
    mov r0.x, r3
    mov r0.y, r3
    add r1.xyz, r0, -c24
    dp3 r0.w, r1, r1
    rsq r3.w, r0.w
    mul r6.xyz, r3.w, r1
    dp4 r3.w, r2, r2
    add r0.xyz, r0, -c20
    dp3 r1.w, r0, r0
    rsq r1.x, r1.w
    mad r0.xyz, -r1.x, r0, -r6
    dp3 r1.x, r0, r0
    rsq r1.w, r1.x
    mad_pp r1.xyz, r4, c28.x, c28.y
    dp3_pp r2.w, r1, r1
    rsq_pp r2.w, r2.w
    mul_pp r1.xyz, r2.w, r1
    mul r7.xyz, r1.w, r0
    rsq r3.w, r3.w
    mul r4.xyz, r3.w, r2
    dp3_pp r3.w, r1, r4
    rcp_pp r1.w, r2.w
    add_pp r1.w, r1, c28.z
    cmp r2.w, r1, c29.x, c29.y
    dp3_pp r5.w, -r6, r1
    add r5.z, r2.w, c29
    cmp_pp r0.y, r3.w, c29.x, c29
    cmp_pp r0.x, -r3.w, c29, c29.y
    add_pp r6.w, r0.x, -r0.y
    mul_pp r0.xyz, r1, r6.w
    cmp_pp r4.xyz, -r5.z, r1, r0
    abs_pp r1.w, r5
    cmp_pp r0.y, r5.w, r5.w, r1.w
    max_pp r0.x, r5.w, c29
    cmp_pp r0.y, -r5.z, r0.x, r0
    mul r0.x, r0.w, c24.w
    mov_pp r1.x, r3
    mov_pp r1.y, r3
    mov_pp r1.z, r3
    mov_pp r1.w, c28
    dp4 r8.z, r1, c10
    dp4 r8.x, r1, c8
    dp4 r8.y, r1, c9
    mul_pp r1.w, r6, r5
    cmp_pp r1.w, -r5.z, r5, r1
    mul_pp r5.w, r4, c29
    texld r0.w, r8, s3
    texld r0.x, r0.x, s2
    mul r3.w, r0.x, r0
    dp3_pp r0.w, r7, r4
    max_pp r5.z, r0.w, c29.x
    mul r0.x, r3.w, r0.y
    mul r0.xyz, r0.x, c25
    mul_pp r1.xyz, r0, c32.xxyw
    cmp_pp r1.xyz, r1.w, r0, r1
    mov r0.xyz, -r6
    mov r0.w, c29.x
    dp4 r6.z, r0, c6
    dp4 r6.y, r0, c5
    dp4 r6.x, r0, c4
    dp3 r0.x, r2, r2
    rsq r4.w, r0.x
    mad r6.xyz, r2, -r4.w, r6
    pow_pp r0, r5.z, r5.w
    mul r2.xyz, r4.w, r2
    dp3 r0.y, r6, r6
    mov r4.w, c29.x
    mov_pp r0.w, r0.x
    rsq r0.y, r0.y
    mul r0.xyz, r0.y, r6
    dp3_sat r0.y, -r2, r0
    mov_sat r0.x, r3.w
    add r2.x, -r0.y, c28.w
    mul r3.w, r0, r0.x
    pow r0, r2.x, c30.w
    mov_pp r2.xyz, c25
    dp3_pp r0.y, c30, r2
    mov r0.z, r0.x
    mul r0.x, r3.w, r0.y
    mad r0.y, r0.z, c31.x, c31
    mul_pp_sat r0.z, r1.w, c31
    mul r0.y, r0, r0.z
    mad_pp r0.w, r4.y, c31, c31
    mad r0.z, r0.w, c28.x, c28.y
    mul r0.y, r0, c31.z
    mul_pp r1.w, r0.x, r0.y
    abs r0.z, r0
    mad r0.x, r0.z, c31.w, c31.w
    add r2.x, r0, -r0.w
    mad r0.w, r2, r2.x, r0
    dp4 r0.z, r4, c14
    dp4 r0.x, r4, c12
    dp4 r0.y, r4, c13
    dp3 r2.y, r0, r0
    rsq r2.x, r2.y
    mov r3.w, c28
    mul r4.xyz, r2.x, r0
    mad r0.w, r0, r0, c32.z
    mul r2.xyz, r0.w, c26
    dp4 r0.w, r3, c15
    dp4 r0.x, r3, c12
    dp4 r0.y, r3, c13
    dp4 r0.z, r3, c14
    dp4 r3.x, r0, c18
    dp4 r3.y, r0, c17
    mad r3.z, r3.x, c31.w, c31.w
    mov r3.x, c33
    mul r5.zw, c22.xyxy, r3.x
    dp4 r0.z, r0, c16
    mul r5.xy, r5, r5.zwzw
    texld r0.xy, r5, s4
    mad r3.x, r0.z, c31.w, c31.w
    mul r2.xyz, r2, c32.w
    mad r3.y, r3, c31.w, c31.w
    mov r0.zw, r0.xyxy
    mov_pp r5.xyz, c29.x
    mov r3.w, c29.x
    mov r4.w, c29.x
    loop aL, i0
    add r0.x, r4.w, r0.z
    add r0.y, r0.x, c33
    mov r6.x, r0.y
    add r6.y, r0.w, c33
    mad r6.xy, r6, c33.z, r3
    mov r7.xy, r6
    mov r7.z, c29.x
    texldl r0.x, r7.xyzz, s5
    add r5.w, r0.x, c33
    cmp r6.z, -r5.w, r0.x, c29.x
    add r7.xyz, r3, -r6
    dp3 r0.x, r7, r7
    rsq r5.w, r0.x
    mul r7.xyz, r5.w, r7
    mov r7.xy, -r7
    dp3_sat r0.x, r7, r4
    dp3 r6.z, r7, c34.xxyw
    add r6.w, -r0.x, c28
    mad r0.x, r2.w, r6.w, r0
    add_sat r6.w, r6.z, c31
    mov r6.z, c28.w
    texldl r6.xyz, r6.xyzz, s6
    mul r6.xyz, r6, r6.w
    rcp r5.w, r5.w
    mul r6.xyz, r6, r0.x
    max r5.w, r5, c33.z
    mov r7.x, r0.y
    add r7.y, r0.w, c35.x
    mad r7.xy, r7, c33.z, r3
    mov r8.xy, r7
    mov r8.z, c29.x
    texldl r0.x, r8.xyzz, s5
    add r6.w, r0.x, c33
    cmp r7.z, -r6.w, r0.x, c29.x
    mul r0.x, r5.w, c34.z
    mul r0.x, r5.w, r0
    add r8.xyz, r3, -r7
    dp3 r5.w, r8, r8
    rsq r5.w, r5.w
    mul r8.xyz, r5.w, r8
    mad r0.x, r0, c34.z, c34.w
    rcp r0.x, r0.x
    mul r6.xyz, r6, r0.x
    add_pp r5.xyz, r5, r6
    mov r8.xy, -r8
    dp3_sat r0.x, r4, r8
    dp3 r6.x, r8, c34.xxyw
    add r6.y, -r0.x, c28.w
    rcp r5.w, r5.w
    mad r0.x, r2.w, r6.y, r0
    add_sat r6.w, r6.x, c31
    mov r6.xy, r7
    mov r6.z, c28.w
    texldl r6.xyz, r6.xyzz, s6
    mul r6.xyz, r6, r6.w
    mul r6.xyz, r6, r0.x
    max r5.w, r5, c33.z
    mov r7.x, r0.y
    add r7.y, r0.w, c35
    mad r7.xy, r7, c33.z, r3
    mov r8.xy, r7
    mov r8.z, c29.x
    texldl r0.x, r8.xyzz, s5
    add r6.w, r0.x, c33
    cmp r7.z, -r6.w, r0.x, c29.x
    mul r0.x, r5.w, c34.z
    mul r0.x, r5.w, r0
    add r8.xyz, r3, -r7
    dp3 r5.w, r8, r8
    rsq r5.w, r5.w
    mul r8.xyz, r5.w, r8
    mad r0.x, r0, c34.z, c34.w
    rcp r0.x, r0.x
    mul r6.xyz, r6, r0.x
    add_pp r5.xyz, r5, r6
    mov r8.xy, -r8
    dp3_sat r0.x, r4, r8
    dp3 r6.x, r8, c34.xxyw
    add r6.y, -r0.x, c28.w
    rcp r5.w, r5.w
    mad r0.x, r2.w, r6.y, r0
    add_sat r6.w, r6.x, c31
    mov r6.xy, r7
    mov r6.z, c28.w
    texldl r6.xyz, r6.xyzz, s6
    mul r6.xyz, r6, r6.w
    mul r6.xyz, r6, r0.x
    max r5.w, r5, c33.z
    mov r7.x, r0.y
    add r7.y, r0.w, c35.z
    mad r7.xy, r7, c33.z, r3
    mov r8.xy, r7
    mov r8.z, c29.x
    texldl r0.x, r8.xyzz, s5
    add r6.w, r0.x, c33
    cmp r7.z, -r6.w, r0.x, c29.x
    mul r0.x, r5.w, c34.z
    mul r0.x, r5.w, r0
    add r8.xyz, r3, -r7
    dp3 r5.w, r8, r8
    rsq r5.w, r5.w
    mul r8.xyz, r5.w, r8
    mad r0.x, r0, c34.z, c34.w
    rcp r0.x, r0.x
    mul r6.xyz, r6, r0.x
    add_pp r5.xyz, r5, r6
    mov r8.xy, -r8
    dp3_sat r0.x, r4, r8
    dp3 r6.x, r8, c34.xxyw
    add r6.y, -r0.x, c28.w
    rcp r5.w, r5.w
    mad r0.x, r2.w, r6.y, r0
    add_sat r6.w, r6.x, c31
    mov r6.xy, r7
    mov r6.z, c28.w
    texldl r6.xyz, r6.xyzz, s6
    mul r6.xyz, r6, r6.w
    mul r6.xyz, r6, r0.x
    max r5.w, r5, c33.z
    mov r7.x, r0.y
    add r7.y, r0.w, c35.w
    mad r7.xy, r7, c33.z, r3
    mov r8.xy, r7
    mov r8.z, c29.x
    texldl r0.x, r8.xyzz, s5
    add r6.w, r0.x, c33
    cmp r7.z, -r6.w, r0.x, c29.x
    mul r0.x, r5.w, c34.z
    mul r0.x, r5.w, r0
    add r8.xyz, r3, -r7
    dp3 r5.w, r8, r8
    rsq r5.w, r5.w
    mul r8.xyz, r5.w, r8
    mad r0.x, r0, c34.z, c34.w
    rcp r0.x, r0.x
    mul r6.xyz, r6, r0.x
    add_pp r5.xyz, r5, r6
    mov r8.xy, -r8
    dp3_sat r0.x, r4, r8
    dp3 r6.x, r8, c34.xxyw
    add r6.y, -r0.x, c28.w
    rcp r5.w, r5.w
    mad r0.x, r2.w, r6.y, r0
    add_sat r6.w, r6.x, c31
    mov r6.xy, r7
    mov r6.z, c28.w
    texldl r6.xyz, r6.xyzz, s6
    mul r6.xyz, r6, r6.w
    mul r6.xyz, r6, r0.x
    max r5.w, r5, c33.z
    mov r7.x, r0.y
    add r7.y, r0.w, c29.z
    mad r7.xy, r7, c33.z, r3
    mov r8.xy, r7
    mov r8.z, c29.x
    texldl r0.x, r8.xyzz, s5
    add r6.w, r0.x, c33
    cmp r7.z, -r6.w, r0.x, c29.x
    mul r0.x, r5.w, c34.z
    mul r0.x, r5.w, r0
    add r8.xyz, r3, -r7
    dp3 r5.w, r8, r8
    rsq r5.w, r5.w
    mul r8.xyz, r5.w, r8
    mad r0.x, r0, c34.z, c34.w
    rcp r0.x, r0.x
    mul r6.xyz, r6, r0.x
    add_pp r5.xyz, r5, r6
    mov r8.xy, -r8
    dp3_sat r0.x, r4, r8
    dp3 r6.x, r8, c34.xxyw
    add r6.y, -r0.x, c28.w
    rcp r5.w, r5.w
    mad r0.x, r2.w, r6.y, r0
    add_sat r6.w, r6.x, c31
    mov r6.xy, r7
    mov r6.z, c28.w
    texldl r6.xyz, r6.xyzz, s6
    mul r6.xyz, r6, r6.w
    mul r6.xyz, r6, r0.x
    max r5.w, r5, c33.z
    mov r7.x, r0.y
    add r7.y, r0.w, c31.w
    mad r7.xy, r7, c33.z, r3
    mov r8.xy, r7
    mov r8.z, c29.x
    texldl r0.x, r8.xyzz, s5
    add r6.w, r0.x, c33
    cmp r7.z, -r6.w, r0.x, c29.x
    mul r0.x, r5.w, c34.z
    mul r0.x, r5.w, r0
    add r8.xyz, r3, -r7
    dp3 r5.w, r8, r8
    rsq r5.w, r5.w
    mul r8.xyz, r5.w, r8
    mad r0.x, r0, c34.z, c34.w
    rcp r0.x, r0.x
    mul r6.xyz, r6, r0.x
    add_pp r5.xyz, r5, r6
    mov r8.xy, -r8
    dp3_sat r0.x, r4, r8
    dp3 r6.x, r8, c34.xxyw
    add r6.y, -r0.x, c28.w
    rcp r5.w, r5.w
    mad r0.x, r2.w, r6.y, r0
    add_sat r6.w, r6.x, c31
    mov r6.xy, r7
    mov r6.z, c28.w
    texldl r6.xyz, r6.xyzz, s6
    mul r6.xyz, r6, r6.w
    mul r6.xyz, r6, r0.x
    max r5.w, r5, c33.z
    mov r7.x, r0.y
    add r7.y, r0.w, c36.x
    mad r7.xy, r7, c33.z, r3
    mov r8.xy, r7
    mov r8.z, c29.x
    texldl r0.x, r8.xyzz, s5
    add r6.w, r0.x, c33
    cmp r7.z, -r6.w, r0.x, c29.x
    mul r0.x, r5.w, c34.z
    mul r0.x, r5.w, r0
    add r8.xyz, r3, -r7
    dp3 r5.w, r8, r8
    rsq r5.w, r5.w
    mul r8.xyz, r5.w, r8
    mad r0.x, r0, c34.z, c34.w
    rcp r0.x, r0.x
    mul r6.xyz, r6, r0.x
    add_pp r5.xyz, r5, r6
    mov r8.xy, -r8
    dp3_sat r0.x, r4, r8
    dp3 r6.x, r8, c34.xxyw
    add r6.y, -r0.x, c28.w
    rcp r5.w, r5.w
    mad r0.x, r2.w, r6.y, r0
    add_sat r6.w, r6.x, c31
    mov r6.xy, r7
    mov r6.z, c28.w
    texldl r6.xyz, r6.xyzz, s6
    mul r6.xyz, r6, r6.w
    mul r6.xyz, r6, r0.x
    max r5.w, r5, c33.z
    mov r7.x, r0.y
    add r7.y, r0.w, c36
    mad r7.xy, r7, c33.z, r3
    mov r8.xy, r7
    mov r8.z, c29.x
    texldl r0.x, r8.xyzz, s5
    add r6.w, r0.x, c33
    cmp r7.z, -r6.w, r0.x, c29.x
    mul r0.x, r5.w, c34.z
    mul r0.x, r5.w, r0
    add r8.xyz, r3, -r7
    dp3 r5.w, r8, r8
    rsq r5.w, r5.w
    mul r8.xyz, r5.w, r8
    mad r0.x, r0, c34.z, c34.w
    rcp r0.x, r0.x
    mul r6.xyz, r6, r0.x
    add_pp r5.xyz, r5, r6
    mov r8.xy, -r8
    dp3_sat r0.x, r4, r8
    dp3 r6.x, r8, c34.xxyw
    add r6.y, -r0.x, c28.w
    rcp r5.w, r5.w
    mad r0.x, r2.w, r6.y, r0
    add_sat r6.w, r6.x, c31
    mov r6.xy, r7
    mov r6.z, c28.w
    texldl r6.xyz, r6.xyzz, s6
    mul r6.xyz, r6, r6.w
    mul r6.xyz, r6, r0.x
    max r5.w, r5, c33.z
    mov r7.x, r0.y
    add r7.y, r0.w, c36.z
    mad r7.xy, r7, c33.z, r3
    mov r8.xy, r7
    mov r8.z, c29.x
    texldl r0.x, r8.xyzz, s5
    add r6.w, r0.x, c33
    cmp r7.z, -r6.w, r0.x, c29.x
    mul r0.x, r5.w, c34.z
    mul r0.x, r5.w, r0
    add r8.xyz, r3, -r7
    dp3 r5.w, r8, r8
    rsq r5.w, r5.w
    mul r8.xyz, r5.w, r8
    mad r0.x, r0, c34.z, c34.w
    rcp r0.x, r0.x
    mul r6.xyz, r6, r0.x
    add_pp r5.xyz, r5, r6
    mov r8.xy, -r8
    dp3_sat r0.x, r4, r8
    dp3 r6.x, r8, c34.xxyw
    add r6.y, -r0.x, c28.w
    mad r6.w, r2, r6.y, r0.x
    add_sat r0.x, r6, c31.w
    mov r6.xy, r7
    mov r6.z, c28.w
    texldl r6.xyz, r6.xyzz, s6
    mul r6.xyz, r6, r0.x
    add r0.x, r0.w, c36.w
    mad r7.xy, r0.yxzw, c33.z, r3
    rcp r0.y, r5.w
    mul r6.xyz, r6, r6.w
    mov r8.xy, r7
    mov r8.z, c29.x
    texldl r0.x, r8.xyzz, s5
    add r5.w, r0.x, c33
    cmp r7.z, -r5.w, r0.x, c29.x
    add r8.xyz, r3, -r7
    max r0.y, r0, c33.z
    mul r0.x, r0.y, c34.z
    mul r0.x, r0.y, r0
    mad r0.y, r0.x, c34.z, c34.w
    dp3 r5.w, r8, r8
    rsq r0.x, r5.w
    mul r8.xyz, r0.x, r8
    mov r8.xy, -r8
    rcp r0.y, r0.y
    mul r6.xyz, r6, r0.y
    rcp r0.y, r0.x
    dp3_sat r5.w, r4, r8
    add r0.x, -r5.w, c28.w
    mov r7.z, c28.w
    max r0.y, r0, c33.z
    mad r0.x, r2.w, r0, r5.w
    mul r5.w, r0.y, c34.z
    mul r0.y, r0, r5.w
    dp3 r6.w, r8, c34.xxyw
    mad r0.y, r0, c34.z, c34.w
    add_sat r5.w, r6, c31
    texldl r7.xyz, r7.xyzz, s6
    mul r7.xyz, r7, r5.w
    rcp r0.y, r0.y
    mul r7.xyz, r7, r0.x
    mul r7.xyz, r7, r0.y
    add_pp r5.xyz, r5, r6
    add_pp r5.xyz, r5, r7
    add r3.w, r3, c37.x
    add r4.w, r4, c28
    endloop
    rcp_pp r0.x, r3.w
    mov r0.y, c27.x
    mul r0.y, c37, r0
    mul_pp r3.xyz, r5, r0.x
    mul_pp r0.xyz, r3, r0.y
    add r0.xyz, r2, r0
    add_pp oC0.xyz, r1, r0
    mov_pp oC0.w, r1
