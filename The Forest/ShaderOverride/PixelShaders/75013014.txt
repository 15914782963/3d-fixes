// CRC32: 75013014 | Unity headers extracted from Internal-PrePassLighting.shader
// Shader "Hidden/Internal-PrePassLighting" {
//   Properties {
//    _LightTexture0 ("", any) = "" {}
//    _LightTextureB0 ("", 2D) = "" {}
//    _ShadowMapTexture ("", any) = "" {}
//   }
//   Fallback Off
//   SubShader 1/1 {
//     Pass 2/3 {
//       Tags { "SHADOWSUPPORT"="true" }
//       ZWrite Off
//       Fog { Mode Off }
//       Blend One One
//       Program "fp" {
//         SubProgram "d3d9 " {
//           Keywords { "DIRECTIONAL_COOKIE" "GI_OFF" "SHADOWS_SCREEN" "SKY_OCCLUSION_ON" "SUNSHINE_FILTER_PCF_4x4" }
//           Matrix 0 [_CameraToWorld]
//           Matrix 4 [_WorldToCamera]
//           Matrix 8 [_LightMatrix0]
//           Matrix 12 [_SkyshadowMatrix]
//           Matrix 16 [_SkyshadowProjectionMatrix]
//           Vector 20 [_WorldSpaceCameraPos]
//           Vector 21 [_ProjectionParams]
//           Vector 22 [_ScreenParams]
//           Vector 23 [_ZBufferParams]
//           Vector 24 [_LightShadowData]
//           Vector 25 [unity_ShadowFadeCenterAndType]
//           Vector 26 [_LightDir]
//           Vector 27 [_LightColor]
//           Vector 28 [_SkylightColor]
//           Vector 29 [_SunlightColor]
//           SetTexture 0 [_CameraNormalsTexture] 2D 0
//           SetTexture 1 [_CameraDepthTexture] 2D 1
//           SetTexture 2 [_ShadowMapTexture] 2D 2
//           SetTexture 3 [_LightTexture0] 2D 3
//           SetTexture 4 [_UniformNoise] 2D 4
//           SetTexture 5 [_SkyshadowDepthTexture] 2D 5
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    def c30, 1.00000000, 2.00000000, -1.00000000, -0.81005859
    def c31, 0.00000000, 1.00000000, -0.50000000, 128.00000000
    def c32, 0.21997070, 0.70703125, 0.07098389, 5.00000000
    def c33, 0.98000002, 0.02000000, 10.00000000, 0.50000000
    def c34, 0.79980469, 0.00000000, 0.05000000, 0.00390625
    def c35, 0.04000000, 0.05000000, 0.03000000, 3.50000000
    defi i0, 9, 0, 1, 0
    def c36, -4.50000000, 0.01200000, 40.00000000, -3.50000000
    def c37, -2.50000000, -1.50000000, 1.50000000, 2.50000000
    def c38, 0.14285715, 1.00000000, 9.00000000, 0.89999998
    def c39, 0.89999998, 0.10000000, 0, 0
    dcl_texcoord0 v0.xyzw
    dcl_texcoord1 v1.xyz

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

// This variant is SHADOWS_SCREEN, meaning it's copying a shadow generated in
// Hidden/Internal-PrePassCollectShadows to the screen, so we discard the
// stereo adjustment from the VS and get the screen coordinates directly:
mov r20, v0
texldl r31, c220.z, s13
add r31.w, r20.w, -r31.y
mul r31.w, r31.w, c220.w
mad r20.x, -r31.w, r31.x, r20.x

    rcp r0.x, r20.w
    mul r5.xy, r20, r0.x
    texld r0, r5, s0
    mad_pp r1.xyz, r0, c30.y, c30.z
    texld r0.x, r5, s1
    mad r1.w, r0.x, c23.x, c23.y
    rcp r0.y, v1.z
    mul r0.y, r0, c21.z
    mul r0.xyz, v1, r0.y
    rcp r1.w, r1.w
    mul r2.xyz, r0, r1.w
    mov r2.w, c30.x


// This is a simplified version of the maths to find P.I[0,0] from MV.I and MVP
// For a detailed explanation of what we are doing here, see this thread:
// https://forums.geforce.com/default/topic/781954/3d-vision/dreamfall-chapters/post/4352670/#4352670

mov r30.x, c180.x
mov r30.y, c181.x
mov r30.z, c182.x
mov r30.w, c183.x
dp4 r30.x, r30, c190 // Calculate P[0,0]
rcp r30.x, r30.x // Calculate P.I[0,0]

add r31.w, r2.z, -r31.y // r31.w = depth - convergence
mul r31.w, r31.w, r31.x // r31.w = separation * (depth - convergence)
mad r2.x, -r31.w, r30.x, r2.x // X -= separation * (depth - convergence) * P.I[0,0]

    dp4 r3.x, r2, c0
    dp4 r0.y, r2, r2
    dp4 r4.w, r2, c2
    dp4 r2.w, r2, c1
    dp3_pp r0.x, r1, r1
    rsq_pp r3.y, r0.x
    mul_pp r1.xyz, r3.y, r1
    rsq r0.y, r0.y
    mul r0.xyz, r0.y, r2
    dp3_pp r0.x, r1, r0
    cmp_pp r3.z, r0.x, c31.x, c31.y
    cmp_pp r1.w, -r0.x, c31.x, c31.y
    add_pp r1.w, r1, -r3.z
    mul_pp r6.xyz, r1, r1.w
    mov r4.z, r4.w
    mov r4.x, r3
    mov r4.y, r2.w
    add r0.xyz, r4, -c20
    dp3 r3.z, r0, r0
    rsq r3.z, r3.z
    mad r0.xyz, -r3.z, r0, -c26
    rcp_pp r3.y, r3.y
    add_pp r3.z, r3.y, c30.w
    cmp r5.z, r3, c31.x, c31.y
    add r5.w, r5.z, c31.z
    cmp_pp r6.xyz, -r5.w, r1, r6
    dp3 r3.y, r0, r0
    rsq r3.y, r3.y
    mul r0.xyz, r3.y, r0
    dp3_pp r0.x, r0, r6
    dp3_pp r1.x, r1, -c26
    mul_pp r3.z, r0.w, c31.w
    max_pp r3.y, r0.x, c31.x
    pow_pp r0, r3.y, r3.z
    mov_pp r6.x, r0
    dp3 r0.x, r2, r2
    rsq r6.z, r0.x
    mov r0.w, c31.x
    mov r0.xyz, -c26
    dp4 r3.w, r0, c6
    dp4 r3.y, r0, c4
    dp4 r3.z, r0, c5
    mad r0.xyz, r2, -r6.z, r3.yzww
    add r4.xyz, -r4, c25
    dp3 r0.w, r4, r4
    dp3 r3.y, r0, r0
    rsq r3.y, r3.y
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r0.xyz, r3.y, r0
    mul r4.xyz, r6.z, r2
    dp3_sat r3.y, -r4, r0
    add r0.w, -r2.z, r0
    mad r2.z, r0.w, c25.w, r2
    mov r3.z, r4.w
    mov_pp r0.z, r4.w
    mov r3.w, c30.x
    mov_pp r0.x, r3
    mov_pp r0.y, r2.w
    mov_pp r0.w, c30.x
    dp4 r2.x, r0, c8
    dp4 r2.y, r0, c9
    mad_sat r0.y, r2.z, c24.z, c24.w
    add r2.z, -r3.y, c30.x
    texld r0.x, r5, s2
    mov r3.y, r2.w
    texld r0.w, r2, s3
    add_sat r0.x, r0, r0.y
    mul r2.x, r0, r0.w
    pow r0, r2.z, c32.w
    mul_pp r0.y, r1.w, r1.x
    cmp_pp r0.w, -r5, r1.x, r0.y
    mad r1.y, r0.x, c33.x, c33
    mov_pp r0.xyz, c27
    mov_sat r2.y, r2.x
    dp3_pp r0.x, c32, r0
    mul_pp_sat r1.z, r0.w, c33
    mul r0.y, r1, r1.z
    mul r2.y, r6.x, r2
    mad_pp r1.y, r6, c33.w, c33.w
    mul r0.x, r2.y, r0
    mul r0.y, r0, c33.z
    mul_pp r1.w, r0.x, r0.y
    mad r0.y, r1, c30, c30.z
    abs_pp r0.x, r1
    abs r0.z, r0.y
    cmp_pp r0.y, r1.x, r1.x, r0.x
    max_pp r0.x, r1, c31
    cmp_pp r0.x, -r5.w, r0, r0.y
    mad r0.y, r0.z, c33.w, c33.w
    add r1.x, r0.y, -r1.y
    mul r0.x, r2, r0
    mad r2.x, r5.z, r1, r1.y
    mul r0.xyz, r0.x, c27
    mul_pp r1.xyz, r0, c34.xxyw
    cmp_pp r1.xyz, r0.w, r0, r1
    mad r2.x, r2, r2, c34.z
    dp4 r0.w, r3, c15
    dp4 r0.z, r3, c14
    dp4 r0.x, r3, c12
    dp4 r0.y, r3, c13
    dp4 r2.w, r0, c18
    dp4 r3.x, r0, c17
    dp4 r0.y, r0, c16
    mad r4.z, r2.w, c33.w, c33.w
    mov r0.x, c34.w
    mad r4.y, r3.x, c33.w, c33.w
    mul r3.xy, c22, r0.x
    mul r3.xy, r5, r3
    mad r4.x, r0.y, c33.w, c33.w
    mov r0.xyz, c29
    mad r0.xyz, r0, c33.w, c33.w
    texld r5.xy, r3, s4
    mul r3.xyz, r0, c28.z
    mul r2.xyz, r2.x, c28
    mov r0.zw, r5.xyxy
    mul r3.xyz, r3, c35
    mov r4.w, c31.x
    mov r2.w, c31.x
    mov r3.w, c31.x
    loop aL, i0
    add r0.x, r0.w, r3.w
    add r5.y, r0.x, c36.x
    add r5.x, r0.z, c36
    mul r6.xy, r5, c36.y
    mov r0.y, r5
    add r0.x, r0.z, c36.w
    mul r5.zw, r0.xyxy, c36.y
    add r0.xy, r4, r5.zwzw
    texld r0.x, r0, s5
    add r5.x, r4.z, -r0
    add r0.xy, r4, r6
    texld r0.x, r0, s5
    add r6.z, r4, -r0.x
    mul r0.xy, r6, r6
    max r6.x, r6.z, c31
    add r0.x, r0, r0.y
    rsq r6.y, r0.x
    mul r0.xy, r5.zwzw, r5.zwzw
    add r0.x, r0, r0.y
    rcp r5.z, r6.y
    max r5.x, r5, c31
    mad r0.y, -r5.z, c38.x, c38
    mul_sat r6.x, r6, c36.z
    mad r6.x, r6, r0.y, r4.w
    rsq r0.x, r0.x
    rcp r4.w, r0.x
    mov r0.y, r5
    add r0.x, r0.z, c37
    mul r5.zw, r0.xyxy, c36.y
    mad r0.x, -r4.w, c38, c38.y
    mul_sat r5.x, r5, c36.z
    mad r4.w, r5.x, r0.x, r6.x
    add r0.xy, r4, r5.zwzw
    texld r0.x, r0, s5
    mul r5.zw, r5, r5
    add r0.y, r5.z, r5.w
    add r0.x, r4.z, -r0
    rsq r0.y, r0.y
    max r0.x, r0, c31
    rcp r0.y, r0.y
    mul_sat r0.x, r0, c36.z
    mad r0.y, -r0, c38.x, c38
    mad r4.w, r0.x, r0.y, r4
    mov r0.y, r5
    add r0.x, r0.z, c31.z
    mul r5.zw, r0.xyxy, c36.y
    add r6.xy, r4, r5.zwzw
    mov r0.y, r5
    add r0.x, r0.z, c37.y
    mul r6.zw, r0.xyxy, c36.y
    add r0.xy, r4, r6.zwzw
    texld r0.x, r0, s5
    mul r6.zw, r6, r6
    add r0.y, r6.z, r6.w
    add r0.x, r4.z, -r0
    rsq r0.y, r0.y
    max r0.x, r0, c31
    rcp r0.y, r0.y
    mul_sat r0.x, r0, c36.z
    mad r0.y, -r0, c38.x, c38
    mad r4.w, r0.x, r0.y, r4
    texld r0.x, r6, s5
    mul r5.zw, r5, r5
    add r0.y, r5.z, r5.w
    rsq r0.y, r0.y
    rcp r6.x, r0.y
    add r0.x, r4.z, -r0
    max r0.x, r0, c31
    mul_sat r5.x, r0, c36.z
    mov r0.y, r5
    add r0.x, r0.z, c33.w
    mul r5.zw, r0.xyxy, c36.y
    mad r0.x, -r6, c38, c38.y
    mad r4.w, r5.x, r0.x, r4
    add r0.xy, r4, r5.zwzw
    texld r0.x, r0, s5
    mul r5.zw, r5, r5
    add r0.y, r5.z, r5.w
    add r0.x, r4.z, -r0
    rsq r0.y, r0.y
    max r0.x, r0, c31
    rcp r0.y, r0.y
    mul_sat r0.x, r0, c36.z
    mad r0.y, -r0, c38.x, c38
    mad r4.w, r0.x, r0.y, r4
    mov r0.y, r5
    add r0.x, r0.z, c37.w
    mul r5.zw, r0.xyxy, c36.y
    add r6.xy, r4, r5.zwzw
    mul r5.zw, r5, r5
    mov r0.y, r5
    add r0.x, r0.z, c37.z
    mul r6.zw, r0.xyxy, c36.y
    add r0.xy, r4, r6.zwzw
    texld r0.x, r0, s5
    mul r6.zw, r6, r6
    add r0.y, r6.z, r6.w
    add r0.x, r4.z, -r0
    rsq r0.y, r0.y
    max r0.x, r0, c31
    rcp r0.y, r0.y
    mul_sat r0.x, r0, c36.z
    mad r0.y, -r0, c38.x, c38
    mad r4.w, r0.x, r0.y, r4
    add r0.y, r5.z, r5.w
    rsq r0.y, r0.y
    rcp r5.w, r0.y
    texld r0.x, r6, s5
    add r0.x, r4.z, -r0
    max r0.x, r0, c31
    mul_sat r5.z, r0.x, c36
    mov r0.y, r5
    add r0.x, r0.z, c35.w
    mul r5.xy, r0, c36.y
    mad r0.x, -r5.w, c38, c38.y
    mad r4.w, r5.z, r0.x, r4
    add r0.xy, r4, r5
    texld r0.x, r0, s5
    mul r5.xy, r5, r5
    add r0.y, r5.x, r5
    add r0.x, r4.z, -r0
    rsq r0.y, r0.y
    max r0.x, r0, c31
    rcp r0.y, r0.y
    mul_sat r0.x, r0, c36.z
    mad r0.y, -r0, c38.x, c38
    mad r4.w, r0.x, r0.y, r4
    add r2.w, r2, c38.z
    add r3.w, r3, c30.x
    endloop
    rcp r0.x, r2.w
    mad r2.w, -r4, r0.x, c30.x
    pow r0, r2.w, c37.z
    add r0.x, r0, c30.z
    mad r0.x, r0, c38.w, c38.y
    mad r0.y, r0.x, c39.x, c39
    mul r3.xyz, r3, r0.y
    mad r0.xyz, r2, r0.x, r3
    add_pp oC0.xyz, r1, r0
    mov_pp oC0.w, r1
