// CRC32: DE2FEA45 | Matched 10 variants of 1 shaders: The Forest/Water
// 
//      Unity headers extracted from Water.shader
//      Shader "The Forest/Water" {
//        Properties {
//         DebugColor ("Debug Color", Color) = (1,1,1,0)
//         DebugTexture ("Debug Texture", 2D) = "black" { }
//         DebugValue1 ("Debug Value 1", Range(0,1)) = 1
//         DebugValue2 ("Debug Value 2", Range(0,1)) = 1
//         DebugValue3 ("Debug Value 3", Range(0,10)) = 1
//         DebugValue4 ("Debug Value 4", Range(0,10)) = 1
//         DebugValue5 ("Debug Value 5", Range(0,100)) = 1
//         DebugValue6 ("Debug Value 6", Range(0,100)) = 1
//         DebugTime ("Debug Time", Range(0,1)) = 1
//        [Toggle(DISPLACEMENT)]  Displacement ("Displacement", Float) = 1
//         LODMax ("LOD Max", Range(1,16)) = 8
//         LODFade ("LOD Fade", Range(1,8000)) = 2000
//         TerrainResolution ("Terrain Resolution", Float) = 1000
//         TerrainTexture ("Terrain Texture", 2D) = "black" { }
//        [Toggle]  ReflectBackfaceNormals ("Reflect Backface Normals", Float) = 1
//         NormalDistortion ("Normal Distortion", Range(0,2)) = 1
//         Waves1Tiling ("Waves 1 Tiling", Range(0,1000)) = 0
//         Waves1Amplitude ("Waves 1 Amplitude", Range(0,10)) = 0
//         Waves1Bump ("Waves 1 Bump", Range(0,1)) = 0
//         Waves1SpeedX ("Waves 1 Speed X", Range(-10,10)) = 0
//         Waves1SpeedY ("Waves 1 Speed Y", Range(-10,10)) = 0
//        [Normal]  Waves1Normal ("Waves 1 Normal", 2D) = "black" { }
//         Waves1Height ("Waves 1 Height", 2D) = "black" { }
//         Waves2Tiling ("Waves 2 Tiling", Range(0,1000)) = 0
//         Waves2Amplitude ("Waves 2 Amplitude", Range(0,10)) = 0
//         Waves2Bump ("Waves 2 Bump", Range(0,1)) = 0
//         Waves2SpeedX ("Waves 2 Speed X", Range(-10,10)) = 0
//         Waves2SpeedY ("Waves 2 Speed Y", Range(-10,10)) = 0
//        [Normal]  Waves2Normal ("Waves 2 Normal", 2D) = "black" { }
//         Waves2Height ("Waves 2 Height", 2D) = "black" { }
//         Waves3Tiling ("Waves 3 Tiling", Range(0,1000)) = 0
//         Waves3Amplitude ("Waves 3 Amplitude", Range(0,10)) = 0
//         Waves3Bump ("Waves 3 Bump", Range(0,1)) = 0
//         Waves3SpeedX ("Waves 3 Speed X", Range(-10,10)) = 0
//         Waves3SpeedY ("Waves 3 Speed Y", Range(-10,10)) = 0
//        [Normal]  Waves3Normal ("Waves 3 Normal", 2D) = "black" { }
//         Waves3Height ("Waves 3 Height", 2D) = "black" { }
//         Waves4Tiling ("Waves 4 Tiling", Range(0,1000)) = 0
//         Waves4Amplitude ("Waves 4 Amplitude", Range(0,10)) = 0
//         Waves4Bump ("Waves 4 Bump", Range(0,1)) = 0
//         Waves4SpeedX ("Waves 4 Speed X", Range(-10,10)) = 0
//         Waves4SpeedY ("Waves 4 Speed Y", Range(-10,10)) = 0
//        [Normal]  Waves4Normal ("Waves 4 Normal", 2D) = "black" { }
//        [HideInInspector]  Waves4Height ("Waves 4 Height", 2D) = "black" { }
//        [KeywordEnum(Realtime, Cubemap)]  CameraReflection ("Camera", Float) = 0
//         CameraReflectionStrength ("Camera Reflection Strenght", Range(0,1)) = 1
//         CameraReflectionDistortion ("Camera Reflection Distortion", Range(0,4)) = 1
//         CameraReflectionCubemapDistortion ("Camera Cubemap Distortion", Range(0,4)) = 1
//         CameraReflectionColor ("Camera Reflection Color", Color) = (1,1,1,0)
//         CameraReflectionTexture ("Camera Reflection Texture", 2D) = "black" { }
//         CameraReflectionCubemap ("Camera Cubemap", CUBE) = "black" { }
//         CameraRefractionDistortion ("Camera Refraction Distortion", Range(0,4)) = 1
//         CameraRefractionColor ("Camera Refraction Color", Color) = (1,1,1,0)
//        [PerRendererData]  CameraRefractionTexture ("Camera Refraction Texture", 2D) = "black" { }
//         FresnelPower ("Fresnel Power", Range(0,10)) = 5
//         FresnelBias ("Fresnel Bias", Range(0,1)) = 0.255
//         AmbientPower ("Ambient Power", Range(0,2)) = 0.5
//         AmbientBias ("Ambient Bias", Range(0,1)) = 0.5
//         SpecularColor ("Specular Color", Color) = (1,1,1,0)
//         SpecularPower ("Specular Power", Range(0,10)) = 4
//         SubsurfaceScatteringScale ("Subsurface Scattering Scale", Range(0,10)) = 1
//         SubsurfaceScatteringPower ("Subsurface Scattering Power", Range(0,10)) = 4
//         SubsurfaceScatteringHorizon ("Subsurface Scattering Horizon", Range(0,10)) = 3
//         HorizonColor ("Horizon Color", Color) = (1,1,1,0)
//         HorizonScale ("Horizon Scale", Range(0,10)) = 8
//         HorizonPower ("Horizon Power", Range(0,10)) = 0.5
//         BlendTexture ("Blend Texture", 2D) = "black" { }
//         BlendTiling ("Blend Tiling", Range(0,50)) = 5
//         BlendDistortion ("Blend Distortion", Range(0,10)) = 0.1
//         BlendScale ("Blend Scale", Range(0,5)) = 1
//         BlendFade ("Blend Fade", Range(0,5)) = 1
//        }
//        SubShader 1/1 {
//          Tags { "QUEUE"="Transparent-101" "RenderType"="Opaque" }
//          GrabPass {
//           }
//          Pass 2/2 {
//            Name "FORWARD"
//            Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Transparent-101" "RenderType"="Opaque" }
//            ZWrite Off
//            Blend SrcAlpha One
//            ColorMask RGB
//            GpuProgramID 90104
//            Program "vp" {
//              SubProgram "d3d9 " {
// 040:           Keywords { "CAMERAREFLECTION_CUBEMAP" "DIRECTIONAL" }
// 200:           Keywords { "CAMERAREFLECTION_CUBEMAP" "DIRECTIONAL_COOKIE" }
// 020:           Keywords { "CAMERAREFLECTION_CUBEMAP" "POINT" }
// 100:           Keywords { "CAMERAREFLECTION_CUBEMAP" "POINT_COOKIE" }
// 080:           Keywords { "CAMERAREFLECTION_CUBEMAP" "SPOT" }
// 002:           Keywords { "CAMERAREFLECTION_REALTIME" "DIRECTIONAL" }
// 010:           Keywords { "CAMERAREFLECTION_REALTIME" "DIRECTIONAL_COOKIE" }
// 001:           Keywords { "CAMERAREFLECTION_REALTIME" "POINT" }
// 008:           Keywords { "CAMERAREFLECTION_REALTIME" "POINT_COOKIE" }
// 004:           Keywords { "CAMERAREFLECTION_REALTIME" "SPOT" }
//                Bind "vertex" Vertex
//                Bind "normal" Normal
//                Bind "tangent" TexCoord4
//                Matrix 7 [_Object2World] 3
//                Matrix 10 [_World2Object] 3
//                Matrix 4 [glstate_matrix_modelview0] 3
//                Matrix 0 [glstate_matrix_mvp]
//                Vector 13 [_ProjectionParams]
//                Vector 14 [_ScreenParams]
//              }
//            }
//          }
//        }
//      }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    def c15, 0.5, 0, 0, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_position o0
    dcl_texcoord o1.xyz
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord3 o4.xyz
    dcl_texcoord4 o5
    dcl_texcoord5 o6

def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    dp4 r0.x, c6, v0
    mov o6.x, -r0.x
    dp4 o4.x, c7, v0
    dp4 o4.y, c8, v0
    dp4 o4.z, c9, v0
    dp4 r0.y, c1, v0
    mul r1.x, r0.y, c13.x
    mul r1.w, r1.x, c15.x
    dp4 r0.x, c0, v0
    dp4 r0.w, c3, v0

mov o0, r0 // Relocated from line 144 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I /home/ian/3d-fixes/The Forest/ --auto-fix-vertex-halo --only-autofixed --ignore-register-errors The Forest_Water/vp/DE2FEA45.txt
texldl r31, c220.z, s0
add r31.w, r0.w, -r31.y
mad r0.x, r31.w, r31.x, r0.x

    mul r1.xz, r0.xyww, c15.x
    mad o5.xy, r1.z, c14.zwzw, r1.xwzw
    dp4 r0.z, c2, v0

//     mov o0, r0 // Relocated to line 141 with shadertool.py
mov o0.z, r0.z // Inserted by shadertool.py

    mov o5.zw, r0
    dp3 r0.z, c7, v1
    dp3 r0.x, c8, v1
    dp3 r0.y, c9, v1
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul r0.xyz, r0.w, r0
    mov o1.x, r0.z
    mul r1.xyz, c11.zxyw, v2.y
    mad r1.xyz, c10.zxyw, v2.x, r1
    mad r1.xyz, c12.zxyw, v2.z, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul r1.xyz, r0.w, r1
    mul r2.xyz, r0, r1
    mad r2.xyz, r1.zxyw, r0.yzxw, -r2
    mul r2.xyz, r2, v1.w
    mov o1.y, r2.x
    mov o1.z, r1.y
    mov o2.x, r0.x
    mov o3.x, r0.y
    mov o2.y, r2.y
    mov o3.y, r2.z
    mov o2.z, r1.z
    mov o3.z, r1.x
    mov o6.yzw, c15.y
