// CRC32: 7D783B49 | Matched 2 variants of 2 shaders: Lux/Standard Specular Outline, Standard (Specular setup)
// 
//    Unity headers extracted from LuxStandardSpecular_Outline.shader
//    Shader "Lux/Standard Specular Outline" {
//      Properties {
//       _Color ("Color", Color) = (1,1,1,1)
//       _MainTex ("Albedo", 2D) = "white" { }
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//       _Glossiness ("Smoothness", Range(0,1)) = 0.5
//       _SpecColor ("Specular", Color) = (0.2,0.2,0.2,1)
//       _SpecGlossMap ("Specular", 2D) = "white" { }
//       _BumpScale ("Scale", Float) = 1
//       _BumpMap ("Normal Map", 2D) = "bump" { }
//       _Parallax ("Height Scale", Range(0.005,0.08)) = 0.02
//       _ParallaxMap ("Height Map", 2D) = "black" { }
//       _OcclusionStrength ("Strength", Range(0,1)) = 1
//       _OcclusionMap ("Occlusion", 2D) = "white" { }
//       _EmissionColor ("Color", Color) = (0,0,0,1)
//       _EmissionMap ("Emission", 2D) = "white" { }
//       _EmissionScaleUI ("_EmissionScaleUI", Range(0,1)) = 1
//       _EmissionColorUI ("_EmissionColorUI", Color) = (0,0,0,1)
//       _DetailMask ("Detail Mask", 2D) = "white" { }
//       _DetailOcclusionHeightMap ("Detail Mask (G) AO (B) Height (A)", 2D) = "white" { }
//       _DetailAlbedoMap ("Detail Albedo x2", 2D) = "grey" { }
//       _DetailNormalMapScale ("Scale", Float) = 1
//       _DetailNormalMap ("Normal Map", 2D) = "bump" { }
//       _DetailScaleFactor ("Detail Scale Factor", Vector) = (1,1,0,0)
//      [Enum(UV0,0,UV1,1)]  _UVSec ("UV Set for secondary textures", Float) = 0
//       _AmbientStrength ("AmbientStrength", Range(0,1)) = 1
//       _AmbientGroundStrength ("AmbientGroundStrength", Range(0,1)) = 1
//      [Enum(None,0,VertexColor.Alpha,1)]  _MaskAmbientStrength ("Mask Ambient Strength", Float) = 0
//      [Enum(Disabled,0,Enabled,1)]  _UseWaterFlow ("Enable Water Flow", Float) = 0
//       _WaterSpecular ("WaterSpecular", Color) = (0.25,0.25,0.25,1)
//       _Lux_WaterFloodlevel ("Lux Water Flood Level", Vector) = (0,0,0,0)
//       _WetnessWorldNormalDamp ("Wetness WorldNormal Damp", Range(0,1)) = 0.5
//       _WetnessHeightMapInfluence ("Wetness HeightMap Influence", Range(0,1)) = 1
//       _WetnessSharpness ("Wetness Sharpness ", Range(1,4)) = 2
//       _WetnessSmoothness ("Wetness Shmoothness ", Range(0,1)) = 0.9
//       _WaterBumpMap ("Water Normalmap", 2D) = "bump" { }
//       _WaterBumpScale ("Water Normalmap Scale", Float) = 1
//       _FlowSpeed ("Water Flow Speed", Float) = 1
//       _FlowHeightScale ("Water Flow Height Scale", Float) = 1
//       _FlowRefraction ("Water Flow Refraction", Range(0,0.5)) = 0.02
//       _WaterBumpDistance ("Water Bump Distance", Float) = 50
//       _WaterBumpFadeRange ("Water Bump Fade Range", Float) = 10
//      [Enum(Disabled,0,Enabled,1)]  _UseFoam ("Enable Foam", Float) = 0
//       _FlowMap ("FlowMap (RGB) Mask(A)", 2D) = "bump" { }
//       _FlowMapDir ("Flow Direction (UV)", Vector) = (1,1,0,0)
//       _FoamMap ("Foam (RGB)", 2D) = "black" { }
//       _FoamMapTiling ("Foam Map Tiling", Float) = 1
//       _FlowStrength ("Flow Strength", Range(0.01,5)) = 1
//       _Interval ("Flow Interval", Range(0.01,0.2)) = 0.1
//       _BaseDir ("Flow Base Dir (U,V) Strength (Z)", Vector) = (1,0,0.1,0)
//      [Enum(Disabled,0,Enabled,1)]  _UseWorldNormalProjection ("Enable World Normal projected Texturing", Float) = 0
//      [Enum(World normal based,0,Based on texture input,1)]  _WnMaskMode ("Mask Mode", Float) = 0
//      [Enum(Use UVs,0,Use Planar Projection,1)]  _WnProjectionMode ("Choose Projection", Float) = 0
//       _WnAlbedoSmoothness ("Albedo (RGB) Smoothness(A)", 2D) = "white" { }
//       _WnBump ("Normal (RGB) Mask(A)", 2D) = "bump" { }
//       _WnMipBias ("Mip Bias", Range(1,3)) = 1
//       _WnSpecular ("Specular", Color) = (0.25,0.25,0.25,1)
//       _WnTiling ("Scale", Float) = 1
//       _WnFaceNormalDamp ("Face Normal Damp", Range(0,1)) = 1
//       _WnThreshold ("Threshold", Range(-0.5,1)) = 0.75
//       _WnSharpness ("Sharpness", Range(0.001,1)) = 0.1
//       _OutlineColor ("Outline Color", Color) = (0,0,0,1)
//       _Outline ("Outline Cutoff", Range(0,1)) = 0.4
//      [HideInInspector]  _Mode ("__mode", Float) = 0
//      [HideInInspector]  _SrcBlend ("__src", Float) = 1
//      [HideInInspector]  _DstBlend ("__dst", Float) = 0
//      [HideInInspector]  _ZWrite ("__zw", Float) = 1
//      }
//      SubShader 1/1 {
//        LOD 300
//        Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }
//        Pass 4/4 {
//          Name "SHADOWCASTER"
//          Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
//          GpuProgramID 244501
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "SHADOWS_DEPTH" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Matrix 8 [_Object2World] 3
//              Matrix 11 [_World2Object] 3
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [unity_MatrixVP]
//              Vector 14 [_WorldSpaceLightPos0]
//              Vector 15 [unity_LightShadowBias]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from StandardSpecular.shader
//    Shader "Standard (Specular setup)" {
//      Properties {
//       _Color ("Color", Color) = (1,1,1,1)
//       _MainTex ("Albedo", 2D) = "white" { }
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//       _Glossiness ("Smoothness", Range(0,1)) = 0.5
//       _SpecColor ("Specular", Color) = (0.2,0.2,0.2,1)
//       _SpecGlossMap ("Specular", 2D) = "white" { }
//       _BumpScale ("Scale", Float) = 1
//       _BumpMap ("Normal Map", 2D) = "bump" { }
//       _Parallax ("Height Scale", Range(0.005,0.08)) = 0.02
//       _ParallaxMap ("Height Map", 2D) = "black" { }
//       _OcclusionStrength ("Strength", Range(0,1)) = 1
//       _OcclusionMap ("Occlusion", 2D) = "white" { }
//       _EmissionColor ("Color", Color) = (0,0,0,1)
//       _EmissionMap ("Emission", 2D) = "white" { }
//       _DetailMask ("Detail Mask", 2D) = "white" { }
//       _DetailAlbedoMap ("Detail Albedo x2", 2D) = "grey" { }
//       _DetailNormalMapScale ("Scale", Float) = 1
//       _DetailNormalMap ("Normal Map", 2D) = "bump" { }
//      [Enum(UV0,0,UV1,1)]  _UVSec ("UV Set for secondary textures", Float) = 0
//      [HideInInspector]  _Mode ("__mode", Float) = 0
//      [HideInInspector]  _SrcBlend ("__src", Float) = 1
//      [HideInInspector]  _DstBlend ("__dst", Float) = 0
//      [HideInInspector]  _ZWrite ("__zw", Float) = 1
//      }
//      Fallback "VertexLit"
//      SubShader 1/2 {
//        LOD 300
//        Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }
//        Pass 3/4 {
//          Name "SHADOWCASTER"
//          Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
//          GpuProgramID 163686
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "SHADOWS_DEPTH" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Matrix 8 [_Object2World] 3
//              Matrix 11 [_World2Object] 3
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [unity_MatrixVP]
//              Vector 14 [_WorldSpaceLightPos0]
//              Vector 15 [unity_LightShadowBias]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord o0
    dcl_position o1

def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    abs r0.x, c15.z
    slt r0.x, -r0.x, r0.x
    mul r0.yzw, c12.xxyz, v1.y
    mad r0.yzw, c11.xxyz, v1.x, r0
    mad r0.yzw, c13.xxyz, v1.z, r0
    nrm r1.xyz, r0.yzww
    mad r2, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r3.x, c8, r2
    dp4 r3.y, c9, r2
    dp4 r3.z, c10, r2
    mad r0.yzw, r3.xxyz, -c14.w, c14.xxyz
    nrm r4.xyz, r0.yzww
    dp3 r0.y, r1, r4
    mad r0.y, r0.y, -r0.y, c16.x
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    mul r0.y, r0.y, c15.z
    mad r1.xyz, r1, -r0.y, r3
    mov r1.w, c16.x
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    dp4 r1.x, c0, r2
    dp4 r1.y, c1, r2
    dp4 r1.z, c2, r2
    dp4 r1.w, c3, r2
    lrp r2, r0.x, r3, r1

mov o1, r2 // Relocated from line 191 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --auto-fix-vertex-halo --add-fog-on-sm3-update --only-autofixed ./Lux_Standard Specular Outline/vp/7D783B49.txt
texldl r31, c220.z, s0
add r31.w, r2.w, -r31.y
mad r2.x, r31.w, r31.x, r2.x

    rcp r0.x, r2.w
    mul_sat r0.x, r0.x, c15.x
    add r0.x, r0.x, r2.z
    max r0.y, r0.x, c16.y
    lrp r2.z, c15.y, r0.y, r0.x
    mov o0, r2

//     mov o1, r2 // Relocated to line 185 with shadertool.py
mov o1.z, r2 // Inserted by shadertool.py

