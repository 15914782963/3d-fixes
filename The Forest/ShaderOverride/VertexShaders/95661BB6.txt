// CRC32: 95661BB6 | Matched 156 variants of 1 shaders: Hidden/Internal-PrePassLighting
// 
//                                          Unity headers extracted from Internal-PrePassLighting.shader
//                                          Shader "Hidden/Internal-PrePassLighting" {
//                                            Properties {
//                                             _LightTexture0 ("", any) = "" { }
//                                             _LightTextureB0 ("", 2D) = "" { }
//                                             _ShadowMapTexture ("", any) = "" { }
//                                            }
//                                            Fallback Off
//                                            SubShader 1/1 {
// 00000000000000000000000000fffffffffffff:     Pass 1/3 {
// 0000000000000fffffffffffff0000000000000:     Pass 2/3 {
// fffffffffffff00000000000000000000000000:     Pass 3/3 {
//                                                Tags { "SHADOWSUPPORT"="true" }
//                                                ZWrite Off
//                                                Fog { Mode Off }
// 00000000000000000000000000fffffffffffff:       Blend DstColor Zero
// ffffffffffffffffffffffffff0000000000000:       Blend One One
// 00000000000000000000000000fffffffffffff:       GpuProgramID 1343
// fffffffffffff00000000000000000000000000:       GpuProgramID 189300
// 0000000000000fffffffffffff0000000000000:       GpuProgramID 95640
//                                                Program "vp" {
//                                                  SubProgram "d3d9 " {
// 000000000000200000000000020000000000002:           Keywords { "DIRECTIONAL" "SHADOWS_OFF" "SUNSHINE_DISABLED" }
// 001000000000000100000000000010000000000:           Keywords { "DIRECTIONAL" "SHADOWS_OFF" "SUNSHINE_FILTER_HARD" }
// 000000800000000000080000000000008000000:           Keywords { "DIRECTIONAL" "SHADOWS_OFF" "SUNSHINE_FILTER_PCF_2x2" }
// 000000000400000000000040000000000004000:           Keywords { "DIRECTIONAL" "SHADOWS_OFF" "SUNSHINE_FILTER_PCF_3x3" }
// 000000000004000000000000400000000000040:           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SUNSHINE_DISABLED" }
// 020000000000002000000000000200000000000:           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SUNSHINE_FILTER_HARD" }
// 000010000000000001000000000000100000000:           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SUNSHINE_FILTER_PCF_2x2" }
// 000000008000000000000800000000000080000:           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SUNSHINE_FILTER_PCF_3x3" }
// 000000000001000000000000100000000000010:           Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "SUNSHINE_DISABLED" }
// 008000000000000800000000000080000000000:           Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "SUNSHINE_FILTER_HARD" }
// 000004000000000000400000000000040000000:           Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "SUNSHINE_FILTER_PCF_2x2" }
// 000000002000000000000200000000000020000:           Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "SUNSHINE_FILTER_PCF_3x3" }
// 000000000008000000000000800000000000080:           Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "SUNSHINE_DISABLED" }
// 040000000000004000000000000400000000000:           Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "SUNSHINE_FILTER_HARD" }
// 000020000000000002000000000000200000000:           Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "SUNSHINE_FILTER_PCF_2x2" }
// 000000010000000000001000000000000100000:           Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "SUNSHINE_FILTER_PCF_3x3" }
// 000000000080000000000008000000000000800:           Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "SUNSHINE_DISABLED" }
// 400000000000040000000000004000000000000:           Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "SUNSHINE_FILTER_HARD" }
// 000200000000000020000000000002000000000:           Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "SUNSHINE_FILTER_PCF_2x2" }
// 000000100000000000010000000000001000000:           Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "SUNSHINE_FILTER_PCF_3x3" }
// 000000000010000000000001000000000000100:           Keywords { "POINT" "SHADOWS_CUBE" "SUNSHINE_DISABLED" }
// 080000000000008000000000000800000000000:           Keywords { "POINT" "SHADOWS_CUBE" "SUNSHINE_FILTER_HARD" }
// 000040000000000004000000000000400000000:           Keywords { "POINT" "SHADOWS_CUBE" "SUNSHINE_FILTER_PCF_2x2" }
// 000000020000000000002000000000000200000:           Keywords { "POINT" "SHADOWS_CUBE" "SUNSHINE_FILTER_PCF_3x3" }
// 000000000000100000000000010000000000001:           Keywords { "POINT" "SHADOWS_OFF" "SUNSHINE_DISABLED" }
// 000800000000000080000000000008000000000:           Keywords { "POINT" "SHADOWS_OFF" "SUNSHINE_FILTER_HARD" }
// 000000400000000000040000000000004000000:           Keywords { "POINT" "SHADOWS_OFF" "SUNSHINE_FILTER_PCF_2x2" }
// 000000000200000000000020000000000002000:           Keywords { "POINT" "SHADOWS_OFF" "SUNSHINE_FILTER_PCF_3x3" }
// 000000000100000000000010000000000001000:           Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "SUNSHINE_DISABLED" }
// 800000000000080000000000008000000000000:           Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "SUNSHINE_FILTER_HARD" }
// 000400000000000040000000000004000000000:           Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "SUNSHINE_FILTER_PCF_2x2" }
// 000000200000000000020000000000002000000:           Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "SUNSHINE_FILTER_PCF_3x3" }
// 000000000020000000000002000000000000200:           Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SUNSHINE_DISABLED" }
// 100000000000010000000000001000000000000:           Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SUNSHINE_FILTER_HARD" }
// 000080000000000008000000000000800000000:           Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SUNSHINE_FILTER_PCF_2x2" }
// 000000040000000000004000000000000400000:           Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SUNSHINE_FILTER_PCF_3x3" }
// 000000000000800000000000080000000000008:           Keywords { "POINT_COOKIE" "SHADOWS_OFF" "SUNSHINE_DISABLED" }
// 004000000000000400000000000040000000000:           Keywords { "POINT_COOKIE" "SHADOWS_OFF" "SUNSHINE_FILTER_HARD" }
// 000002000000000000200000000000020000000:           Keywords { "POINT_COOKIE" "SHADOWS_OFF" "SUNSHINE_FILTER_PCF_2x2" }
// 000000001000000000000100000000000010000:           Keywords { "POINT_COOKIE" "SHADOWS_OFF" "SUNSHINE_FILTER_PCF_3x3" }
// 000000000040000000000004000000000000400:           Keywords { "SHADOWS_DEPTH" "SHADOWS_NATIVE" "SHADOWS_SOFT" "SPOT" "SUNSHINE_DISABLED" }
// 200000000000020000000000002000000000000:           Keywords { "SHADOWS_DEPTH" "SHADOWS_NATIVE" "SHADOWS_SOFT" "SPOT" "SUNSHINE_FILTER_HARD" }
// 000100000000000010000000000001000000000:           Keywords { "SHADOWS_DEPTH" "SHADOWS_NATIVE" "SHADOWS_SOFT" "SPOT" "SUNSHINE_FILTER_PCF_2x2" }
// 000000080000000000008000000000000800000:           Keywords { "SHADOWS_DEPTH" "SHADOWS_NATIVE" "SHADOWS_SOFT" "SPOT" "SUNSHINE_FILTER_PCF_3x3" }
// 000000000002000000000000200000000000020:           Keywords { "SHADOWS_DEPTH" "SHADOWS_NATIVE" "SPOT" "SUNSHINE_DISABLED" }
// 010000000000001000000000000100000000000:           Keywords { "SHADOWS_DEPTH" "SHADOWS_NATIVE" "SPOT" "SUNSHINE_FILTER_HARD" }
// 000008000000000000800000000000080000000:           Keywords { "SHADOWS_DEPTH" "SHADOWS_NATIVE" "SPOT" "SUNSHINE_FILTER_PCF_2x2" }
// 000000004000000000000400000000000040000:           Keywords { "SHADOWS_DEPTH" "SHADOWS_NATIVE" "SPOT" "SUNSHINE_FILTER_PCF_3x3" }
// 000000000000400000000000040000000000004:           Keywords { "SHADOWS_OFF" "SPOT" "SUNSHINE_DISABLED" }
// 002000000000000200000000000020000000000:           Keywords { "SHADOWS_OFF" "SPOT" "SUNSHINE_FILTER_HARD" }
// 000001000000000000100000000000010000000:           Keywords { "SHADOWS_OFF" "SPOT" "SUNSHINE_FILTER_PCF_2x2" }
// 000000000800000000000080000000000008000:           Keywords { "SHADOWS_OFF" "SPOT" "SUNSHINE_FILTER_PCF_3x3" }
//                                                    Bind "vertex" Vertex
//                                                    Bind "normal" Normal
//                                                    Matrix 4 [glstate_matrix_modelview0] 3
//                                                    Matrix 0 [glstate_matrix_mvp]
//                                                    Float 9 [_LightAsQuad]
//                                                    Vector 7 [_ProjectionParams]
//                                                    Vector 8 [_ScreenParams]
//                                                  }
//                                                }
//                                              }
//                                            }
//                                          }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    def c10, 0.5, -1, 1, -999
    dcl_position v0
    dcl_normal v1
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz

// Extra output to pass the FOV to pixel shaders:
dcl_texcoord5 o5.x

def c220, 0, 1, 0.0625, 1
dcl_2d s0

    // Rearranged to simplify shader:
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    dp4 r0.w, c3, v0
    mov o0, r0 // moved up before the stereo correction

// Determine if drawing a full screen quad by testing if output position w == 1.
// Seems to be more reliable than an input position test:
if_eq r0.w, c220.y
	mov r23.x, c220.y // Set flag to indicate we are drawing a full-screen quad

	// TODO: If copied in inverse projection matrix is not valid, use
	// MV+MVP matrices copied from elsewhere
else
	mov r23.x, c220.x // Clear flag to indicate we are drawing a light in the scene

	// TODO: If copied in inverse projection matrix is not valid, calculate
	// it from the MV+MVP matrices passed into this shader, like Unity 4
endif

// Use inverse projection matrix copied from directional lighting shader by default:
mov r30.x, c170.x

mov o5.x, r30.x // Copy P.I[0,0] to pixel shaders

if_eq r23.x, c220.x
	// Apply stereo correction to screen coords stored in texcoord:
	texldl r31, c220.z, s0
	add r31.w, r0.w, -r31.y
	mul r31.w, r31.w, r31.x
	add r0.x, r0.x, r31.w
endif

    mul r1.x, r0.y, c7.x
    mul r1.w, r1.x, c10.x
    mul r1.xz, r0.xyww, c10.x
    mad o1.xy, r1.z, c8.zwzw, r1.xwzw
    mov r1.w, c10.w
    slt r1.x, r1.w, c9.x
    slt r1.y, -v1_abs.z, v1_abs.z
    lrp r2.x, r1.x, c9.x, r1.y
    dp4 r1.x, c4, v0
    dp4 r1.y, c5, v0
    dp4 r1.z, c6, v0

if_eq r23.x, c220.x
	// Apply view-space stereo correction to ray:
	mad r1.x, r31.w, r30.x, r1.x
endif

    mul r2.yzw, r1.xxyz, c10.xyyz
    mad r1.xyz, r1, -c10.yyzw, v1
    mad o2.xyz, r2.x, r1, r2.yzww
    mov o1.zw, r0
