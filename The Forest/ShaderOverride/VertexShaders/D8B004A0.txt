// CRC32: D8B004A0 | Unity headers extracted from FurFX 2.0 20Layer.shader
// Shader "FurFX/2.0/FurFX 20 Layer" {
//   Properties {
//    _Color ("Color (RGB)", Color) = (1,1,1,1)
//    _SpecColor ("Specular Material Color (RGB)", Color) = (1,1,1,1)
//    _BonusAmbient ("Bonus Ambient", Color) = (0,0,0,1)
//    _Shininess ("Shininess", Range(0.01,10)) = 8
//    _Gloss ("Gloss", Range(0,3)) = 1
//    _RimColor ("Rim Color", Color) = (0,0,0,0)
//    _RimPower ("Rim Power", Range(0.5,8)) = 4
//    _FurLength ("Fur Length", Range(0.0002,0.5)) = 0.05
//    _MainTex ("Base (RGB) Mask(A)", 2D) = "white" {}
//    _BumpMap ("Normalmap", 2D) = "bump" {}
//    _NoiseTex ("Noise (RGB)", 2D) = "white" {}
//    _Cube ("Reflection Map", CUBE) = "" {}
//    _ReflColor ("Reflection Color (RGB)", Color) = (1,1,1,1)
//    _Reflection ("Reflection Power", Range(0,1)) = 0
//    _ReflMinLevel ("Reflection Minimal Length", Range(0,1)) = 0
//    _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.2
//    _HairHardness ("Fur Hardness", Range(0.1,1)) = 1
//    _HairThinness ("Fur Thinness", Range(0.01,10)) = 2
//    _HairShading ("Fur Shading", Range(0,1)) = 0.25
//    _HairColoring ("Fur Coloring", Range(0,1)) = 0.1
//    _SkinAlpha ("Mask Alpha Factor", Range(0,1)) = 0.5
//    _ForceGlobal ("Force Global", Vector) = (0,0,0,0)
//    _ForceLocal ("Force Local", Vector) = (0,0,0,0)
//   }
//   Fallback "VertexLit"
//   SubShader 1/1 {
//     LOD 200
//     Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//     UsePass "VertexLit/SHADOWCOLLECTOR"
//     UsePass "VertexLit/SHADOWCASTER"
//     Pass 73/126 {
//       Name "FORWARD"
//       Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//       ColorMask RGB
//       Program "vp" {
//         SubProgram "d3d9 " {
//           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_ON" "LIGHTMAP_ON" "SHADOWS_SCREEN" }
//           Bind "vertex" Vertex
//           Bind "normal" Normal
//           Bind "texcoord" TexCoord0
//           Bind "texcoord1" TexCoord1
//           Bind "tangent" TexCoord2
//           Matrix 0 [glstate_matrix_projection]
//           Matrix 4 [glstate_matrix_mvp]
//           Matrix 8 [_Object2World]
//           Matrix 12 [_World2Object]
//           Vector 16 [_WorldSpaceCameraPos]
//           Vector 17 [_ProjectionParams]
//           Vector 18 [_ScreenParams]
//           Vector 19 [unity_Scale]
//           Float 20 [_FurLength]
//           Vector 21 [_ForceGlobal]
//           Vector 22 [_ForceLocal]
//           Float 23 [_HairHardness]
//           Vector 24 [unity_LightmapST]
//           Vector 25 [_MainTex_ST]
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    def c26, 1, -1, 0.600000024, 0.360000014
    def c27, 2, 0.5, 0, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord v3
    dcl_texcoord1 v4

def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    mov r0, c21
    min r0, c26.x, r0
    max r0, r0, c26.y
    mov r1, c22
    min r1, c26.x, r1
    max r1, r1, c26.y
    dp4 r2.z, r0, c14
    dp4 r2.y, r0, c13
    dp4 r2.x, r0, c12
    mov r0.w, c26.x
    dp4 r0.z, r1, c2
    dp4 r0.y, r1, c1
    dp4 r0.x, r1, c0
    add r0.xyz, r2, r0
    mul r1.xyz, v2, c20.x
    mul r1.xyz, r1, c23.x
    mov r1.w, v0
    mul r0.xyz, r0, c20.x
    mad r1.xyz, r1, c26.z, v0
    mad r1.xyz, r0, c26.w, r1
    mov r0.xyz, c16
    dp4 r2.w, r1, c7
    dp4 r2.z, r1, c6
    dp4 r3.z, r0, c14
    dp4 r3.x, r0, c12
    dp4 r3.y, r0, c13
    mad r0.xyz, r3, c19.w, -r1
    dp3 r0.w, v2, -r0
    dp4 r2.x, r1, c4
    dp4 r2.y, r1, c5

mov o0, r2 // Relocated from line 61 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-vertex-halo --only-autofixed --ignore-parse-errors D8B004A0.txt
texldl r5, c220.z, s0
add r5.w, r2.w, -r5.y
mad r2.x, r5.w, r5.x, r2.x

    mul r4.xyz, r2.xyww, c27.y
    mul r3.xyz, v2, r0.w
    mad r1.xyz, -r3, c27.x, -r0
    mul r4.y, r4, c17.x
    mov r3.xyz, v1
    dp3 o2.z, r1, c10
    dp3 o2.y, r1, c9
    dp3 o2.x, r1, c8
    mul r3.xyz, v2.zxyw, r3.yzxw
    mov r1.xyz, v1
    mad r1.xyz, v2.yzxw, r1.zxyw, -r3
    mul r1.xyz, r1, v1.w
    dp3 o3.y, r0, r1
    mul r1.xyz, v2, c19.w
    mad o6.xy, r4.z, c18.zwzw, r4

//     mov o0, r2 // Relocated to line 46 with shadertool.py
    mov o6.zw, r2
    mov o3.z, -r0.w
    dp3 o3.x, r0, v1
    dp3 o4.z, r1, c10
    dp3 o4.y, r1, c9
    dp3 o4.x, r1, c8
    mad o1.xy, v3, c25, c25.zwzw
    mad o5.xy, v4, c24, c24.zwzw

// approximately 54 instruction slots used
