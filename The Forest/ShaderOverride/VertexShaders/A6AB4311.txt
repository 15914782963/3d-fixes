// CRC32: A6AB4311 | Unity headers extracted from Rain.shader
// Shader "The Forest/Rain" {
//   Properties {
//    _MainTex ("Base (RGB)", 2D) = "white" {}
//    _Displacement ("Displacement Map", 2D) = "bump" {}
//    _RefractAmount ("Refraction Amount", Range(0,1)) = 0.1
//    _Tint ("Shadow Tint", Color) = (1,1,1,0.02)
//    _Glint ("Light Tint", Color) = (1,1,1,0.2)
//   }
//   Fallback "Particles/Additive"
//   SubShader 1/1 {
//     Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//     GrabPass {
//       Name "BASE"
//       "ParticleScene"
//      }
//     Pass 1/1 {
//       Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent" "RenderType"="Transparent" }
//       ZWrite Off
//       Cull Off
//       Blend SrcAlpha OneMinusSrcAlpha
//       AlphaTest Greater 0.01
//       ColorMask RGB
//       Program "vp" {
//         SubProgram "d3d9 " {
//           Bind "vertex" Vertex
//           Bind "texcoord" TexCoord0
//           Matrix 0 [glstate_matrix_modelview0]
//           Matrix 4 [glstate_matrix_mvp]
//           Matrix 8 [sunshine_CameraVToSunVP]
//           Vector 12 [_ProjectionParams]
//           Vector 13 [_ScreenParams]
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    def c14, 0.5, 0, 0, 0
    dcl_position v0
    dcl_texcoord v1

dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2
dcl_position o3


def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    dp4 r0.w, v0, c7
    dp4 r0.z, v0, c6
    dp4 r0.x, v0, c4
    dp4 r0.y, v0, c5

mov o3, r0 // Relocated from line 16 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-vertex-halo --only-autofixed --ignore-parse-errors A6AB4311.txt
texldl r2, c220.z, s0
add r2.w, r0.w, -r2.y
mad r0.x, r2.w, r2.x, r0.x

    mul r1.xyz, r0.xyww, c14.x

//     mov o3, r0 // Relocated to line 15 with shadertool.py
    mov o1.zw, r0
    mul r1.y, r1, c12.x
    dp4 r0.w, v0, c3
    dp4 r0.z, v0, c2
    dp4 r0.x, v0, c0
    dp4 r0.y, v0, c1
    mad o1.xy, r1.z, c13.zwzw, r1
    dp4 o2.w, r0, c11
    dp4 o2.z, r0, c10
    dp4 o2.y, r0, c9
    dp4 o2.x, r0, c8
    mov o0.xy, v1

// approximately 18 instruction slots used
