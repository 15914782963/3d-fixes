// CRC32: C83ED7A9 | Matched 2 variants of 1 shaders: Lux/Standard Specular Outline
// 
//    Unity headers extracted from LuxStandardSpecular_Outline.shader
//    Shader "Lux/Standard Specular Outline" {
//      Properties {
//       _Color ("Color", Color) = (1,1,1,1)
//       _MainTex ("Albedo", 2D) = "white" { }
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//       _Glossiness ("Smoothness", Range(0,1)) = 0.5
//       _SpecColor ("Specular", Color) = (0.2,0.2,0.2,1)
//       _SpecGlossMap ("Specular", 2D) = "white" { }
//       _BumpScale ("Scale", Float) = 1
//       _BumpMap ("Normal Map", 2D) = "bump" { }
//       _Parallax ("Height Scale", Range(0.005,0.08)) = 0.02
//       _ParallaxMap ("Height Map", 2D) = "black" { }
//       _OcclusionStrength ("Strength", Range(0,1)) = 1
//       _OcclusionMap ("Occlusion", 2D) = "white" { }
//       _EmissionColor ("Color", Color) = (0,0,0,1)
//       _EmissionMap ("Emission", 2D) = "white" { }
//       _EmissionScaleUI ("_EmissionScaleUI", Range(0,1)) = 1
//       _EmissionColorUI ("_EmissionColorUI", Color) = (0,0,0,1)
//       _DetailMask ("Detail Mask", 2D) = "white" { }
//       _DetailOcclusionHeightMap ("Detail Mask (G) AO (B) Height (A)", 2D) = "white" { }
//       _DetailAlbedoMap ("Detail Albedo x2", 2D) = "grey" { }
//       _DetailNormalMapScale ("Scale", Float) = 1
//       _DetailNormalMap ("Normal Map", 2D) = "bump" { }
//       _DetailScaleFactor ("Detail Scale Factor", Vector) = (1,1,0,0)
//      [Enum(UV0,0,UV1,1)]  _UVSec ("UV Set for secondary textures", Float) = 0
//       _AmbientStrength ("AmbientStrength", Range(0,1)) = 1
//       _AmbientGroundStrength ("AmbientGroundStrength", Range(0,1)) = 1
//      [Enum(None,0,VertexColor.Alpha,1)]  _MaskAmbientStrength ("Mask Ambient Strength", Float) = 0
//      [Enum(Disabled,0,Enabled,1)]  _UseWaterFlow ("Enable Water Flow", Float) = 0
//       _WaterSpecular ("WaterSpecular", Color) = (0.25,0.25,0.25,1)
//       _Lux_WaterFloodlevel ("Lux Water Flood Level", Vector) = (0,0,0,0)
//       _WetnessWorldNormalDamp ("Wetness WorldNormal Damp", Range(0,1)) = 0.5
//       _WetnessHeightMapInfluence ("Wetness HeightMap Influence", Range(0,1)) = 1
//       _WetnessSharpness ("Wetness Sharpness ", Range(1,4)) = 2
//       _WetnessSmoothness ("Wetness Shmoothness ", Range(0,1)) = 0.9
//       _WaterBumpMap ("Water Normalmap", 2D) = "bump" { }
//       _WaterBumpScale ("Water Normalmap Scale", Float) = 1
//       _FlowSpeed ("Water Flow Speed", Float) = 1
//       _FlowHeightScale ("Water Flow Height Scale", Float) = 1
//       _FlowRefraction ("Water Flow Refraction", Range(0,0.5)) = 0.02
//       _WaterBumpDistance ("Water Bump Distance", Float) = 50
//       _WaterBumpFadeRange ("Water Bump Fade Range", Float) = 10
//      [Enum(Disabled,0,Enabled,1)]  _UseFoam ("Enable Foam", Float) = 0
//       _FlowMap ("FlowMap (RGB) Mask(A)", 2D) = "bump" { }
//       _FlowMapDir ("Flow Direction (UV)", Vector) = (1,1,0,0)
//       _FoamMap ("Foam (RGB)", 2D) = "black" { }
//       _FoamMapTiling ("Foam Map Tiling", Float) = 1
//       _FlowStrength ("Flow Strength", Range(0.01,5)) = 1
//       _Interval ("Flow Interval", Range(0.01,0.2)) = 0.1
//       _BaseDir ("Flow Base Dir (U,V) Strength (Z)", Vector) = (1,0,0.1,0)
//      [Enum(Disabled,0,Enabled,1)]  _UseWorldNormalProjection ("Enable World Normal projected Texturing", Float) = 0
//      [Enum(World normal based,0,Based on texture input,1)]  _WnMaskMode ("Mask Mode", Float) = 0
//      [Enum(Use UVs,0,Use Planar Projection,1)]  _WnProjectionMode ("Choose Projection", Float) = 0
//       _WnAlbedoSmoothness ("Albedo (RGB) Smoothness(A)", 2D) = "white" { }
//       _WnBump ("Normal (RGB) Mask(A)", 2D) = "bump" { }
//       _WnMipBias ("Mip Bias", Range(1,3)) = 1
//       _WnSpecular ("Specular", Color) = (0.25,0.25,0.25,1)
//       _WnTiling ("Scale", Float) = 1
//       _WnFaceNormalDamp ("Face Normal Damp", Range(0,1)) = 1
//       _WnThreshold ("Threshold", Range(-0.5,1)) = 0.75
//       _WnSharpness ("Sharpness", Range(0.001,1)) = 0.1
//       _OutlineColor ("Outline Color", Color) = (0,0,0,1)
//       _Outline ("Outline Cutoff", Range(0,1)) = 0.4
//      [HideInInspector]  _Mode ("__mode", Float) = 0
//      [HideInInspector]  _SrcBlend ("__src", Float) = 1
//      [HideInInspector]  _DstBlend ("__dst", Float) = 0
//      [HideInInspector]  _ZWrite ("__zw", Float) = 1
//      }
//      SubShader 1/1 {
//        LOD 300
//        Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }
//        Pass 3/4 {
//          Name "FORWARD_DELTA"
//          Tags { "LIGHTMODE"="ForwardAdd" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
//          ZWrite Off
//          Fog {
//             Color (0,0,0,0)
//            }
//          Blend [_SrcBlend] One
//          GpuProgramID 173978
//          Program "vp" {
//            SubProgram "d3d9 " {
// 2:           Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "_ALPHATEST_ON" }
// 1:           Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Bind "texcoord1" TexCoord1
//              Bind "tangent" TexCoord4
//              Matrix 11 [_LightMatrix0] 2
//              Matrix 4 [_Object2World]
//              Matrix 8 [_World2Object] 3
//              Matrix 0 [glstate_matrix_mvp]
//              Vector 16 [_DetailAlbedoMap_ST]
//              Vector 15 [_MainTex_ST]
//              Float 17 [_UVSec]
//              Vector 13 [_WorldSpaceCameraPos]
//              Vector 14 [_WorldSpaceLightPos0]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    def c18, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_color v5
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xy
    dcl_texcoord7 o7
    dcl_color o8

def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

texldl r31, c220.z, s0

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --add-fog-on-sm3-update --only-autofixed ./Lux_Standard Specular Outline/vp/C83ED7A9.txt
mov r30, c13
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -r30
    mul r1.xyz, c9, v1.y
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul o4.xyz, r1, v4.w
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    mad r0.xyz, r0, -c14.w, c14
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z
    mov o7, c18.x
    mov o8, v5
