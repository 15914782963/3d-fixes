// CRC32: F99E7207 | Matched 2 variants of 1 shaders: The Forest/Alloy Foliage 2-Sided TouchBending
// 
//    Unity headers extracted from Alloy Foliage 2-Sided TouchBending.shader
//    Shader "The Forest/Alloy Foliage 2-Sided TouchBending" {
//      Properties {
//       _Cutoff ("Alpha cutoff", Range(0,1)) = 0.5
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _AmbientBoost ("AmbientBoost", Range(0,200)) = 7.5
//       _AOStrength ("AO Strength", Range(0,1)) = 0.5
//       _Smoothness ("Smoothness", Range(0.01,1)) = 0.5
//       _Shininess ("Shininess", Range(0,1)) = 0.5
//       _MainTex ("Base (RGB) Trans (A)", 2D) = "white" {}
//       _BumpTransSpecMap ("Normal (GA) Trans(R) Spec(B)", 2D) = "bump" {}
//       _Rsrm ("Radially-Symmetric Reflection Map", 2D) = "black" {}
//       _TouchBendingPosition ("TouchBendingPosition", Vector) = (0,0,0,0)
//       _TouchBendingForce ("TouchBendingForce", Vector) = (0,0,0,0)
//      }
//      Fallback "Transparent/Cutout/Diffuse"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="AtsFoliageTouchBending" }
//        Pass 4/4 {
//          Name "PREPASS"
//          Tags { "LIGHTMODE"="PrePassFinal" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="AtsFoliageTouchBending" }
//          ZWrite Off
//          Cull Off
//          Program "vp" {
//            SubProgram "d3d9 " {
// 1:           Keywords { "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" "LIGHTMAP_OFF" }
// 2:           Keywords { "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" "LIGHTMAP_OFF" }
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Bind "tangent" TexCoord2
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Matrix 8 [_World2Object]
//              Matrix 12 [_RotMatrix]
//              Vector 16 [_Time]
//              Vector 17 [_WorldSpaceCameraPos]
//              Vector 18 [_ProjectionParams]
//              Vector 19 [_ScreenParams]
//              Vector 20 [unity_Scale]
//              Vector 21 [_Wind]
//              Float 22 [_AfsWaveSize]
//              Vector 23 [_TouchBendingPosition]
//              Vector 24 [_TouchBendingForce]
//              Vector 25 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    dcl_position o0
    dcl_texcoord o1
    dcl_color o2
    dcl_texcoord1 o3
    dcl_texcoord2 o4
    dcl_texcoord3 o5
    dcl_texcoord4 o6
    dcl_texcoord5 o7
    def c26, 6.40884876, -3.14159274, -0.161616161, 0.00833330024
    def c27, -0.000198409994, 0.25, 2, -0.5
    def c28, 1.97500002, 0.792999983, 0.375, 0.284999996
    def c29, 2, -1, 3, 0.150000006
    def c30, 0.100000001, 0, 10, 1
    def c31, 0.5, 0, 0, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord v3
    dcl_color v5

def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    mov r4.w, v0
    dp4 r0.y, v0, c6
    dp4 r0.x, v0, c4
    add r0.z, r0.x, r0.y
    add r0.w, r0.z, c16.y
    mul r0.w, r0, c22.x
    mul r0.z, r0, c22.x
    frc r0.w, r0
    frc r0.z, r0
    mad r1.xy, r0.zwzw, c26.x, c26.y
    mul r0.zw, r1.xyxy, r1.xyxy
    mul r1.zw, r0, r1.xyxy
    mad r2.xy, r1.zwzw, c26.z, r1
    mul r1.xy, r1.zwzw, r0.zwzw
    mul r0.zw, r1.xyxy, r0
    mad r1.zw, r1.xyxy, c26.w, r2.xyxy
    mad r2.xy, r0.zwzw, c27.x, r1.zwzw
    add r0.z, v5.x, r2.x
    mov r0.w, r0.z
    add r1.x, v5.y, r0.z
    mov r0.z, r0.y
    dp4 r0.y, v0, c5
    dp3 r0.z, r0, r1.x
    add r0.xy, r0.zwzw, c16.y
    mul r0, r0.xxyy, c28
    frc r0, r0
    mad r0, r0, c27.z, c27.w
    frc r0, r0
    mad r0, r0, c29.x, c29.y
    abs r1, r0
    mad r0, -r1, c29.x, c29.z
    mul r1, r1, r1
    mul r0, r1, r0
    add r1.xy, r0.xzzw, r0.ywzw
    mul r0.xyz, r1.y, c21
    slt r1.zw, -v2.xyxz, v2.xyxz
    slt r2.zw, v2.xyxz, -v2.xyxz
    add r2.zw, r1, -r2
    mul r0.w, v5.y, c30.x
    mul r1.zw, r0.w, v2.xyxz
    mul r3.xz, r1.zyww, r2.zyww
    add r0.w, r2.y, c27.y
    mov r2.w, c30
    mul r3.y, v5.z, c29.w
    mul r0.xyz, v5.z, r0
    mad r0.xyz, r1.xyxw, r3, r0
    mul r1.xyz, v5.z, c21
    mad r0.xyz, r0, c21.w, v0
    mul r1.xyz, r1, c21.w
    mad r1.xyz, r1, r0.w, r0
    mul r0.xyz, v5.z, c24
    mad r1.xyz, r0, c24.w, r1
    add r0.xyz, r1, -c23
    mov r0.w, c30.y
    dp4 r2.z, r0, c14
    dp4 r2.x, r0, c12
    dp4 r2.y, r0, c13
    add r2.xyz, r2, c23
    add r0.x, v5, c30.w
    add r2.xyz, r2, -r1
    mul r0.x, v5.z, r0
    mul r0.xyz, r0.x, r2
    mad r4.xyz, r0, c30.z, r1
    dp4 r0.w, r4, c3
    dp4 r0.z, r4, c2
    dp4 r0.x, r4, c0
    dp4 r0.y, r4, c1

mov o0, r0 // Relocated from line 89 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-vertex-halo --only-autofixed --ignore-parse-errors F99E7207.txt
texldl r6, c220.z, s0
add r6.w, r0.w, -r6.y
mad r0.x, r6.w, r6.x, r0.x

    mul r1.xyz, r0.xyww, c31.x

//     mov o0, r0 // Relocated to line 88 with shadertool.py
    mul r1.y, r1, c18.x
    dp3 r0.y, v1, v1
    rsq r0.y, r0.y
    dp3 r0.x, v2, v2
    mul r3.xyz, r0.y, v1
    rsq r0.x, r0.x
    mad o4.xy, r1.z, c19.zwzw, r1
    mul r1.xyz, r0.x, v2
    mul r2.xyz, r1.zxyw, r3.yzxw
    mov o4.zw, r0
    mad r0.xyz, r1.yzxw, r3.zxyw, -r2
    mov r2.xyz, c17
    dp4 r5.x, r2, c8
    dp4 r5.y, r2, c9
    dp4 r5.z, r2, c10
    mad r2.xyz, r5, c20.w, -r4
    mul r4.xyz, r0, v1.w
    dp3 r0.z, r1, c4
    dp3 r5.xy, r1, c6
    dp3 r0.w, -r2, c4
    dp3 r0.y, r4, c4
    dp3 r0.x, r3, c4
    mul o5, r0, c20.w
    dp3 r0.z, r1, c5
    dp3 r0.w, -r2, c5
    dp3 r0.y, r4, c5
    dp3 r0.x, r3, c5
    mul o6, r0, c20.w
    slt r0.x, r5, c30.y
    max r0.x, -r0, r0
    dp3 o1.z, r1, r2
    slt r1.x, c30.y, r0
    dp3 r0.x, r3, c6
    dp3 r0.w, -r2, c6
    dp3 r0.y, r4, c6
    mov r0.z, r5.y
    mul o7, r0, c20.w
    add r0.x, -r1, c30.w
    dp3 o1.y, r2, r4
    dp3 o1.x, r2, r3
    mov o2, v5
    add o3.z, r1.x, -r0.x
    mad o3.xy, v3, c25, c25.zwzw

// approximately 112 instruction slots used
