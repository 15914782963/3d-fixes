// CRC32: F6D29B3B | Matched 2 variants of 2 shaders: AFS/Tree Bark Tumbling, AFS/Tree Bark Tumbling Moss
// 
//    Unity headers extracted from AFS Tree Bark Tumbling.shader
//    Shader "AFS/Tree Bark Tumbling" {
//      Properties {
//      [Header(Base and Detail Maps)] [Space]  _Color ("Color Variation", Color) = (0.9,0.5,0,0.1)
//       _MainTex ("Albedo (RGB) Occlusion(A)", 2D) = "white" { }
//      [NoScaleOffset] [Normal]  _BumpTex ("Normal Map", 2D) = "bump" { }
//      [NoScaleOffset]  _SpecGlossMap ("Specular (RGB) Smoothness (A)", 2D) = "black" { }
//      [Space(5)]  _DetailAlbedoMap ("Detail Albedo x2", 2D) = "grey" { }
//      [NoScaleOffset]  _DetailNormalMap ("Detail Normal Map", 2D) = "bump" { }
//      [Space]  _VertexAOStrength ("Brighten Vertex AO", Range(0,2)) = 1
//      [Space(5)] [Header(Wind)] [Space]  _LeafTurbulence ("Leaf Turbulence", Range(0,1)) = 0.5
//      [Space(5)] [Header(Stippling and Wind Fading)] [Space]  _StippleNear ("Stipple Near", Range(0,600)) = 180
//       _StippleFar ("Stipple Far", Range(0,600)) = 200
//       _WindNear ("Wind Near", Range(0,600)) = 180
//       _WindFar ("Wind Far", Range(0,600)) = 200
//      [Space(5)] [Enum(Static,0,Falling,1)]  _TreeBendingMode ("Tree Bending Mode", Float) = 0
//      [Space(10)] [Toggle(_SPECGLOSSMAP)]  _FlipTanget ("Flip Tangent", Float) = 0
//      [HideInInspector] [Space(10)]  _Variation ("Variation", Float) = 0
//      }
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="AFSTreeBark" }
//        Pass 4/4 {
//          Name "CASTER"
//          Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="AFSTreeBark" }
//          Cull Off
//          GpuProgramID 248101
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "SHADOWS_CUBE" }
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "normal" Normal
//              Bind "texcoord1" TexCoord1
//              Matrix 4 [_Object2World] 3
//              Matrix 7 [_World2Object] 3
//              Matrix 0 [glstate_matrix_mvp]
//              Vector 13 [_AfsTimeFrequency]
//              Vector 22 [_FallingDir]
//              Vector 21 [_FallingWind]
//              Float 14 [_LeafTurbulence]
//              Vector 11 [_LightPositionRange]
//              Float 16 [_StippleFar]
//              Float 15 [_StippleNear]
//              Float 23 [_TreeBendingMode]
//              Float 17 [_Variation]
//              Vector 12 [_Wind]
//              Float 19 [_WindFar]
//              Float 18 [_WindNear]
//              Vector 20 [_WindStrengthTrees]
//              Vector 10 [_WorldSpaceCameraPos]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from AFS Tree Bark Tumbling Moss.shader
//    Shader "AFS/Tree Bark Tumbling Moss" {
//      Properties {
//      [Header(Base and Detail Maps)] [Space]  _Color ("Color Variation", Color) = (0.9,0.5,0,0.1)
//       _MainTex ("Albedo (RGB) Smoothness (A)", 2D) = "white" { }
//      [NoScaleOffset] [Normal]  _BumpTex ("Normal Map", 2D) = "bump" { }
//      [NoScaleOffset]  _SpecGlossMap ("Detail Mask (G) Noise (B) Occlusion (A)", 2D) = "white" { }
//       _DetailAlbedoMap ("Detail Albedo x2", 2D) = "grey" { }
//      [NoScaleOffset] [Normal]  _DetailNormalMap ("Detail Normal Map", 2D) = "bump" { }
//      [Space]  _VertexAOStrength ("Brighten Vertex AO", Range(0,2)) = 1.3
//      [NoScaleOffset] [Space(5)] [Header(Moss)] [Space]  _MossTex ("Moss Albedo (RGB) Smoothness (A)", 2D) = "white" { }
//      [NoScaleOffset]  _MossNormalMap ("Moss Normal Map (GA) Occlusion (B)", 2D) = "bump" { }
//       _MossTiling ("Moss Tiling (XY)", Vector) = (1,1,0,0)
//      [Space(10)]  _MossNormalStrength ("Moss Normal Strength", Range(0,1)) = 0.75
//       _MossContrast ("Moss Density", Range(0,1)) = 0
//       _MossSpread ("Moss Spread", Range(0,1)) = 0
//       _MossHeight ("Moss Height", Range(0,100)) = 5
//      [Space(5)]  _MossTransStrength ("Moss Translucency Strength", Float) = 10
//       _MossTransColor ("Moss Translucency Color", Color) = (0.73,0.85,0.41,1)
//      [Space(5)] [Header(Wind)] [Space]  _LeafTurbulence ("Leaf Turbulence", Range(0,1)) = 0.5
//      [Space(5)] [Header(Stippling and Wind Fading)] [Space]  _StippleNear ("Stipple Near", Range(0,600)) = 180
//       _StippleFar ("Stipple Far", Range(0,600)) = 200
//       _WindNear ("Wind Near", Range(0,600)) = 180
//       _WindFar ("Wind Far", Range(0,600)) = 200
//      [Space(5)] [Enum(Static,0,Falling,1)]  _TreeBendingMode ("Tree Bending Mode", Float) = 0
//      [Space(10)] [Toggle(_SPECGLOSSMAP)]  _FlipTangent ("Flip Tangent", Float) = 0
//      [HideInInspector] [Space(10)]  _Variation ("Variation (set by Script)", Float) = 0
//      }
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="AFSTreeBark" }
//        Pass 4/4 {
//          Name "CASTER"
//          Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="AFSTreeBark" }
//          Cull Off
//          GpuProgramID 250541
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "SHADOWS_CUBE" }
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "normal" Normal
//              Bind "texcoord1" TexCoord1
//              Matrix 4 [_Object2World] 3
//              Matrix 7 [_World2Object] 3
//              Matrix 0 [glstate_matrix_mvp]
//              Vector 13 [_AfsTimeFrequency]
//              Vector 22 [_FallingDir]
//              Vector 21 [_FallingWind]
//              Float 14 [_LeafTurbulence]
//              Vector 11 [_LightPositionRange]
//              Float 16 [_StippleFar]
//              Float 15 [_StippleNear]
//              Float 23 [_TreeBendingMode]
//              Float 17 [_Variation]
//              Vector 12 [_Wind]
//              Float 19 [_WindFar]
//              Float 18 [_WindNear]
//              Vector 20 [_WindStrengthTrees]
//              Vector 10 [_WorldSpaceCameraPos]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    def c24, 0, 0.800000012, 2, 3
    def c25, 0.330000013, 0.75, 0.375, 0.193000004
    def c26, 1.97500002, 0.792999983, 0.300000012, 0
    def c27, -1, 0.100000001, -0.5, 2
    dcl_position v0
    dcl_normal v1
    dcl_texcoord1 v2
    dcl_color v3
    dcl_texcoord o0.xyz
    dcl_position o1
    dcl_color o2

def c220, 0, 1, 0.0625, 0.5
dcl_2d s3

texldl r31, c220.z, s3

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --stereo-sampler-vs=s3 --auto-fix-vertex-halo --fix-unity-reflection --add-fog-on-sm3-update --only-autofixed ./AFS_Tree Bark Tumbling/vp/F6D29B3B.txt
mov r30, c10
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xy, -r0.xzzw, r30.xzzw
    mul r1.xy, r1, r1
    add r0.w, r1.y, r1.x
    mov r1.xw, c27
    add r1.x, r1.x, c23.x
    sge r1.x, -r1_abs.x, r1_abs.x
    mov r2.w, c4.w
    add r1.y, r2.w, c6.w
    mul r1.y, r1.y, c27.y
    frc r1.y, r1.y
    add r1.y, r1.y, c27.z
    add r1.z, r1_abs.y, r1_abs.y
    mad r1.y, r1_abs.y, -r1.w, c17.x
    mad r1.y, r1.x, r1.y, r1.z
    mov r1.z, c19.x
    mov r1.w, c18.x
    mul r2.x, r1.z, r1.z
    mad r1.z, r1.z, -r1.z, r0.w
    mad r1.w, r1.w, r1.w, -r2.x
    rcp r1.w, r1.w
    mul_sat r1.z, r1.w, r1.z
    if_lt c24.x, r1.z
    mul r1.zw, r1.z, c20.xyxy
    mov r2.xyz, c7
    dp3 r2.x, r2, c12
    mov r3.xyz, c8
    dp3 r2.y, r3, c12
    mov r3.xyz, c9
    dp3 r2.z, r3, c12
    nrm r3.xyz, r2
    add r2.y, r1.y, v3.x
    add r2.z, r2.y, v3.y
    dp3 r2.x, v0, r2.z
    add r4.x, r1.y, c13.x
    mov r5.y, c24.y
    mad r4.y, c13.x, r5.y, r1.y
    add r2.zw, r4.xyxy, -c27.z
    frc r2.zw, r2
    mad r2.zw, r2, c27.w, c27.x
    mul r4.xy, r2_abs.zwzw, r2_abs.zwzw
    mad r2.zw, r2_abs, -c24.z, c24.w
    mul r2.zw, r2, r4.xyxy
    mad r2.z, r2.w, r2.w, r2.z
    add r2.z, r2.z, c24.w
    mul r2.z, r2.z, c25.x
    mul r1.zw, r1, r2.z
    add r2, r2.xxyy, c13.y
    add r3.w, c25.y, v3.x
    mul r4.xy, r3.w, c25.zwzw
    mov r4.zw, c13
    mad r4.zw, r3.w, -c25, r4
    mad r4.zw, c14.x, r4, r4.xyxy
    mov r4.xy, c26
    mul r2, r2, r4
    frc r2, r2
    mad r2, r2, c27.w, c27.z
    frc r2, r2
    mad r2, r2, c27.w, c27.x
    mul r4, r2_abs, r2_abs
    mad r2, r2_abs, -c24.z, c24.w
    mul r2, r2, r4
    add r2.xy, r2.ywzw, r2.xzzw
    dp3 r2.w, v0, v0
    rsq r2.w, r2.w
    rcp r2.w, r2.w
    mul r3.w, c27.y, v3.y
    mul r4.xy, r3.w, v1.xzzw
    slt r4.zw, -v1.xyxz, v1.xyxz
    slt r5.xy, v1.xzzw, -v1.xzzw
    add r4.zw, r4, -r5.xyxy
    mul r4.xz, r4.zyww, r4.xyyw
    mul r4.y, r2.y, v2.y
    mov r2.z, c26.z
    mad r2.xyz, r2.xzxw, r4, r4.y
    mad r2.xyz, r2, r1.w, v0
    mul r3.xyz, r3, v2.x
    mad r2.xyz, r3, r1.z, r2
    nrm r3.xyz, r2
    mul r2.xyz, r2.w, r3
    else
    mov r2.xyz, v0
    endif
    dp3 r1.z, r2, r2
    rsq r1.z, r1.z
    rcp r1.z, r1.z
    mov r3.xyz, c7
    dp3 r3.x, r3, c22
    mov r4.xyz, c8
    dp3 r3.y, r4, c22
    mov r4.xyz, c9
    dp3 r3.z, r4, c22
    nrm r4.xyz, r3
    mul r3.xyz, r4, v2.x
    mad r3.xyz, r3, -c21.z, r2
    nrm r4.xyz, r3
    mad r3.xyz, r4, r1.z, -r2
    mad r2.xyz, r1.x, r3, r2
    add r0.xyz, -r0, r30
    nrm r3.xyz, r0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, c7, v1.x, r0
    mad r0.xyz, c9, v1.z, r0
    nrm r4.xyz, r0
    dp3 r0.x, r4, r3
    mov r0.y, c15.x
    mov r0.z, c16.x
    mul r1.x, r0.y, r0.y
    mad r0.y, r0.y, -r0.y, r0.w
    mad r0.z, r0.z, r0.z, -r1.x
    rcp r0.z, r0.z
    mul_sat r0.y, r0.z, r0.y
    mad r0.x, r0.x, -r0.x, -c27.x
    mad o2.z, r0.x, r0.y, r0.y
    mov r2.w, v0.w
    dp4 r0.x, c4, r2
    dp4 r0.y, c5, r2
    dp4 r0.z, c6, r2
    add o0.xyz, r0, -c11
    dp4 o1.x, c0, r2
    dp4 o1.y, c1, r2
    dp4 o1.z, c2, r2
    dp4 o1.w, c3, r2
    mov o2.xw, v3
    mov o2.y, r1.y
