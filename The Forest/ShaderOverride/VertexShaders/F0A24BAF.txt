// CRC32: F0A24BAF | Matched 8 variants of 1 shaders: Lux/Standard Specular Custom Ambient Water Flow
// 
//     Unity headers extracted from LuxStandardSpecular_CustomAmbientWaterFlow.shader
//     Shader "Lux/Standard Specular Custom Ambient Water Flow" {
//       Properties {
//        _Color ("Color", Color) = (1,1,1,1)
//        _MainTex ("Albedo", 2D) = "white" { }
//        _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//        _Glossiness ("Smoothness", Range(0,1)) = 0.5
//        _SpecColor ("Specular", Color) = (0.2,0.2,0.2,1)
//        _SpecGlossMap ("Specular", 2D) = "white" { }
//        _BumpScale ("Scale", Float) = 1
//        _BumpMap ("Normal Map", 2D) = "bump" { }
//        _Parallax ("Height Scale", Range(0.005,0.08)) = 0.02
//        _ParallaxMap ("Height Map", 2D) = "black" { }
//        _OcclusionStrength ("Strength", Range(0,1)) = 1
//        _OcclusionMap ("Occlusion", 2D) = "white" { }
//        _EmissionColor ("Color", Color) = (0,0,0,1)
//        _EmissionMap ("Emission", 2D) = "white" { }
//        _EmissionScaleUI ("_EmissionScaleUI", Range(0,1)) = 1
//        _EmissionColorUI ("_EmissionColorUI", Color) = (0,0,0,1)
//        _DetailMask ("Detail Mask", 2D) = "white" { }
//        _DetailOcclusionHeightMap ("Detail Mask (G) AO (B) Height (A)", 2D) = "white" { }
//        _DetailAlbedoMap ("Detail Albedo x2", 2D) = "grey" { }
//        _DetailNormalMapScale ("Scale", Float) = 1
//        _DetailNormalMap ("Normal Map", 2D) = "bump" { }
//        _DetailScaleFactor ("Detail Scale Factor", Vector) = (1,1,0,0)
//       [Enum(UV0,0,UV1,1)]  _UVSec ("UV Set for secondary textures", Float) = 0
//       [Enum(Disabled,0,Enabled,1)]  _VertexColorBlending ("Texture Blending by Vertex Color", Float) = 0
//        _Main2Tex ("Albedo2", 2D) = "white" { }
//        _Glossiness2 ("Smoothness", Range(0,1)) = 0.5
//        _SpecColor2 ("Specular", Color) = (0.2,0.2,0.2,1)
//        _SpecGloss2Map ("SpecularGloss2", 2D) = "black" { }
//        _Bump2Map ("Normal Map2", 2D) = "bump" { }
//        _DetailOcclusionHeight2Map ("Detail Mask (G) AO (B) Height (A)", 2D) = "white" { }
//        _MixMapScaleFactor ("Scale Factor", Vector) = (1,1,0,0)
//        _WetnessMultiplier ("Wetness HeightMap Influence Multiplier", Range(0,4)) = 1
//        _AmbientStrength ("AmbientStrength", Range(0,1)) = 1
//        _AmbientGroundStrength ("AmbientGroundStrength", Range(0,1)) = 1
//       [Enum(None,0,VertexColor.Alpha,1)]  _MaskAmbientStrength ("Mask Ambient Strength", Float) = 0
//       [Enum(Disabled,0,Enabled,1)]  _UseWaterFlow ("Enable Water Flow", Float) = 0
//        _WaterSpecular ("WaterSpecular", Color) = (0.25,0.25,0.25,1)
//        _Lux_WaterFloodlevel ("Lux Water Flood Level", Vector) = (0,0,0,0)
//        _WetnessWorldNormalDamp ("Wetness WorldNormal Damp", Range(0,1)) = 0.5
//        _WetnessHeightMapInfluence ("Wetness HeightMap Influence", Range(0,1)) = 1
//        _WetnessSharpness ("Wetness Sharpness ", Range(1,4)) = 2
//        _WetnessSmoothness ("Wetness Shmoothness ", Range(0,1)) = 0.9
//        _WaterBumpMap ("Water Normalmap", 2D) = "bump" { }
//        _WaterBumpScale ("Water Normalmap Scale", Float) = 1
//        _FlowSpeed ("Water Flow Speed", Float) = 1
//        _FlowHeightScale ("Water Flow Height Scale", Float) = 1
//        _FlowRefraction ("Water Flow Refraction", Range(0,0.5)) = 0.02
//        _WaterBumpDistance ("Water Bump Distance", Float) = 50
//        _WaterBumpFadeRange ("Water Bump Fade Range", Float) = 10
//       [Enum(Disabled,0,Enabled,1)]  _UseFoam ("Enable Foam", Float) = 0
//        _FlowMap ("FlowMap (RGB) Mask(A)", 2D) = "bump" { }
//        _FlowMapDir ("Flow Direction (UV)", Vector) = (1,1,0,0)
//        _FoamMap ("Foam (RGB)", 2D) = "black" { }
//        _FoamMapTiling ("Foam Map Tiling", Float) = 1
//        _FlowStrength ("Flow Strength", Range(0.01,5)) = 1
//        _Interval ("Flow Interval", Range(0.01,0.2)) = 0.1
//        _BaseDir ("Flow Base Dir (U,V) Strength (Z)", Vector) = (1,0,0.1,0)
//       [Enum(Disabled,0,Enabled,1)]  _UseWorldNormalProjection ("Enable World Normal projected Texturing", Float) = 0
//       [Enum(World normal based,0,Based on texture input,1)]  _WnMaskMode ("Mask Mode", Float) = 0
//       [Enum(Use UVs,0,Use Planar Projection,1)]  _WnProjectionMode ("Choose Projection", Float) = 0
//        _WnAlbedoSmoothness ("Albedo (RGB) Smoothness(A)", 2D) = "white" { }
//        _WnBump ("Normal (RGB) Mask(A)", 2D) = "bump" { }
//        _WnMipBias ("Mip Bias", Range(1,3)) = 1
//        _WnSpecular ("Specular", Color) = (0.22,0.22,0.22,1)
//        _WnTiling ("Scale", Float) = 1
//        _WnFaceNormalDamp ("Face Normal Damp", Range(0,1)) = 1
//        _WnThreshold ("Threshold", Range(-0.5,1)) = 0.75
//        _WnSharpness ("Sharpness", Range(0.001,1)) = 0.1
//        _WnNormalStrength ("Underlaying Normal Strength", Range(0,1)) = 1
//       [HideInInspector]  _Mode ("__mode", Float) = 0
//       [HideInInspector]  _SrcBlend ("__src", Float) = 1
//       [HideInInspector]  _DstBlend ("__dst", Float) = 0
//       [HideInInspector]  _ZWrite ("__zw", Float) = 1
//       }
//       Fallback "VertexLit"
//       SubShader 1/1 {
//         LOD 300
//         Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }
//         Pass 1/4 {
//           Name "FORWARD"
//           Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
//           ZWrite [_ZWrite]
//           Blend [_SrcBlend] [_DstBlend]
//           GpuProgramID 28828
//           Program "vp" {
//             SubProgram "d3d9 " {
// 80:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_DETAIL_MULX2" "_LUX_PLANARPROJECTION" "_LUX_WNPROJECTION" "_NORMALMAP" "_SPECGLOSSMAP" }
// 40:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_DETAIL_MULX2" "_LUX_WNPROJECTION" "_NORMALMAP" "_SPECGLOSSMAP" }
// 04:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_DETAIL_MULX2" "_LUX_WNPROJECTION" "_NORMALMAP" }
// 20:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_DETAIL_MULX2" "_NORMALMAP" "_SPECGLOSSMAP" }
// 02:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_DETAIL_MULX2" "_NORMALMAP" }
// 10:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_LUX_WNPROJECTION" "_NORMALMAP" "_SPECGLOSSMAP" }
// 01:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_LUX_WNPROJECTION" "_NORMALMAP" }
// 08:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_NORMALMAP" "_SPECGLOSSMAP" }
//               Bind "vertex" Vertex
//               Bind "color" Color
//               Bind "normal" Normal
//               Bind "texcoord" TexCoord0
//               Bind "texcoord1" TexCoord1
//               Bind "tangent" TexCoord4
//               Matrix 8 [_Object2World] 3
//               Matrix 11 [_World2Object] 3
//               Matrix 4 [glstate_matrix_mvp]
//               Vector 26 [_DetailAlbedoMap_ST]
//               Vector 25 [_MainTex_ST]
//               Vector 15 [_ProjectionParams]
//               Vector 16 [_ScreenParams]
//               Float 27 [_UVSec]
//               Vector 14 [_WorldSpaceCameraPos]
//               Vector 20 [unity_4LightAtten0]
//               Vector 17 [unity_4LightPosX0]
//               Vector 18 [unity_4LightPosY0]
//               Vector 19 [unity_4LightPosZ0]
//               Vector 0 [unity_LightColor0]
//               Vector 1 [unity_LightColor1]
//               Vector 2 [unity_LightColor2]
//               Vector 3 [unity_LightColor3]
//               Vector 23 [unity_SHBb]
//               Vector 22 [unity_SHBg]
//               Vector 21 [unity_SHBr]
//               Vector 24 [unity_SHC]
//             }
//           }
//         }
//       }
//     }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    def c28, 0.5, 0, 1, 0.25
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_color v5
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord7 o8
    dcl_texcoord8 o9
    dcl_color o10

def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    mad o1.xy, v2, c25, c25.zwzw
    abs r0.x, c27.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c26.xyxy, c26
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add o2.xyz, r0, -c14
    dp3 r1.x, c8, v4
    dp3 r1.y, c9, v4
    dp3 r1.z, c10, v4
    nrm r2.xyz, r1
    mul r1.xyz, c12, v1.y
    mad r1.xyz, c11, v1.x, r1
    mad r1.xyz, c13, v1.z, r1
    nrm r3.xyz, r1
    mul r1.xyz, r2.yzxw, r3.zxyw
    mad r1.xyz, r3.yzxw, r2.zxyw, -r1
    mov o3.xyz, r2
    mul o4.xyz, r1, v4.w
    add r1, -r0.x, c17
    mov o9.xyz, r0
    add r2, -r0.y, c18
    add r0, -r0.z, c19
    mul r4, r3.y, r2
    mul r2, r2, r2
    mad r2, r1, r1, r2
    mad r1, r1, r3.x, r4
    mad r1, r0, r3.z, r1
    mad r0, r0, r0, r2
    rsq r2.x, r0.x
    rsq r2.y, r0.y
    rsq r2.z, r0.z
    rsq r2.w, r0.w
    mov r4.z, c28.z
    mad r0, r0, c20, r4.z
    mul r1, r1, r2
    max r1, r1, c28.y
    rcp r2.x, r0.x
    rcp r2.y, r0.y
    rcp r2.z, r0.z
    rcp r2.w, r0.w
    mul r0, r1, r2
    mul r1.xyz, r0.y, c1
    mad r1.xyz, c0, r0.x, r1
    mad r0.xyz, c2, r0.z, r1
    mad r0.xyz, c3, r0.w, r0
    mul r0.w, r3.y, r3.y
    mad r0.w, r3.x, r3.x, -r0.w
    mul r1, r3.yzzx, r3.xyzz
    mov o5.xyz, r3
    dp4 r2.x, c21, r1
    dp4 r2.y, c22, r1
    dp4 r2.z, c23, r1
    mad r1.xyz, c24, r0.w, r2
    add o6.xyz, r0, r1
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    dp4 r0.w, c7, v0
    mov o0, r0

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --auto-fix-vertex-halo --add-fog-on-sm3-update --only-autofixed ./Lux_Standard Specular Custom Ambient Water Flow/vp/F0A24BAF.txt
texldl r31, c220.z, s0
add r31.w, r0.w, -r31.y
mad r0.x, r31.w, r31.x, r0.x

    mul r1.xz, r0.xyww, c28.x
    mul r0.x, r0.y, c15.x
    mul r1.w, r0.x, c28.x
    mad r0.xy, r1.z, c16.zwzw, r1.xwzw
    mov o7, r0
    rcp r0.z, r0.w
    mul r1.xy, r0, c16
    mul r0.xy, r1, c28.w
    mul r0.xy, r0.z, r0
    mov o2.w, r0.y
    mov o9.w, r0.x
    mov o3.w, c28.y
    mov o4.w, c28.y
    mov o5.w, c28.y
    mov o6.w, c28.y
    mov o8, c28.y
    mov o10, v5
