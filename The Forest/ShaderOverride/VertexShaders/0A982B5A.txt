// CRC32: 0A982B5A | Unity headers extracted from Skin Base Lighting Sunshine.shader
// Shader "Sunshine/Skin Base Lighting Sunshine" {
//   Properties {
//    _Color ("RGB Translucency A F0", Color) = (1,0.2,0,1)
//    _MainTex ("Albedo (RGB) Micro Intensity (A)", 2D) = "white" {}
//    AOsaturation ("AO Saturation", Range(0,1)) = 0.5
//    _NormalMap ("NormalMap", 2D) = "bump" {}
//    _Microstructure ("Microstructure", 2D) = "bump" {}
//    _MicrostructureTile ("Microstructure tile", Float) = 0
//    _SpecularMap ("SpecularMap (R=F0 G=Thickness B=AO A=Roughness", 2D) = "white" {}
//    beckmannTex ("Beckman", 2D) = "white" {}
//    Roughness ("Roughness", Range(0.0001,0.99)) = 0.5
//    SpecularIntensity ("Specular Intensity", Range(0,1)) = 1
//    Albedo ("Albedo", Range(0,1)) = 1
//   }
//   Fallback Off
//   SubShader 1/1 {
//     Tags { "QUEUE"="Geometry" "RenderType"="Opaque" "OnlySkin"="true" }
//     Pass 1/2 {
//       Name "FORWARD"
//       Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "QUEUE"="Geometry" "RenderType"="Opaque" "OnlySkin"="true" }
//       Program "vp" {
//         SubProgram "d3d9 " {
//           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_ON" "SHADOWS_SCREEN" "SUNSHINE_FILTER_PCF_4x4" }
//           Bind "vertex" Vertex
//           Bind "normal" Normal
//           Bind "texcoord" TexCoord0
//           Bind "texcoord1" TexCoord1
//           Bind "tangent" TexCoord2
//           Matrix 0 [glstate_matrix_modelview0]
//           Matrix 4 [glstate_matrix_mvp]
//           Matrix 8 [_Object2World]
//           Matrix 16 [sunshine_CameraVToSunVP]
//           Vector 20 [_ProjectionParams]
//           Vector 21 [_ScreenParams]
//           Vector 22 [unity_Scale]
//           Vector 23 [unity_LightmapST]
//           Vector 24 [_MainTex_ST]
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    def c25, 0.5, 0, 0, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord v3
    dcl_texcoord1 v4

def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    mov r0.xyz, v1
    mul r1.xyz, v2.zxyw, r0.yzxw
    mov r0.xyz, v1
    mad r0.xyz, v2.yzxw, r0.zxyw, -r1
    mul r0.xyz, r0, v1.w
    dp3 r1.y, r0, c8
    dp3 r2.y, r0, c10
    dp4 r1.w, v0, c3
    dp4 r0.w, v0, c7
    dp3 r1.x, v1, c8
    dp3 r1.z, v2, c8
    mul o3.xyz, r1, c22.w
    dp3 r1.y, r0, c9
    dp4 r0.z, v0, c6
    dp3 r1.x, v1, c9
    dp3 r1.z, v2, c9
    dp4 r0.x, v0, c4
    dp4 r0.y, v0, c5
    mul o4.xyz, r1, c22.w

mov o0, r0 // Relocated from line 44 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-vertex-halo --only-autofixed --ignore-parse-errors 0A982B5A.txt
texldl r3, c220.z, s0
add r3.w, r0.w, -r3.y
mad r0.x, r3.w, r3.x, r0.x

    mul r1.xyz, r0.xyww, c25.x
    mul r1.y, r1, c20.x
    mad o7.xy, r1.z, c21.zwzw, r1
    dp4 r1.z, v0, c2
    dp4 r1.x, v0, c0
    dp4 r1.y, v0, c1
    dp3 r2.x, v1, c10
    dp3 r2.z, v2, c10
    mul o5.xyz, r2, c22.w

//     mov o0, r0 // Relocated to line 35 with shadertool.py
    dp4 o2.w, r1, c19
    dp4 o2.z, r1, c18
    dp4 o2.y, r1, c17
    dp4 o2.x, r1, c16
    mov o7.zw, r0
    mad o1.xy, v3, c24, c24.zwzw
    mad o6.xy, v4, c23, c23.zwzw

// approximately 36 instruction slots used
