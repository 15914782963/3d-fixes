// CRC32: 52021A3C | Matched 3 variants of 3 shaders: Bumped Specular, CandelaSSRR/PBS/Bumped Specular PBS SSR, FurFX/2.0/FurFX 20 Layer
// 
//    Unity headers extracted from Normal-BumpSpec.shader
//    Shader "Bumped Specular" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _SpecColor ("Specular Color", Color) = (0.5,0.5,0.5,1)
//       _Shininess ("Shininess", Range(0.03,1)) = 0.078125
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" {}
//       _BumpMap ("Normalmap", 2D) = "bump" {}
//      }
//      Fallback "Specular"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Bind "tangent" TexCoord2
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Matrix 8 [_World2Object]
//              Vector 12 [_WorldSpaceCameraPos]
//              Vector 13 [_ProjectionParams]
//              Vector 14 [_ScreenParams]
//              Vector 15 [_WorldSpaceLightPos0]
//              Vector 16 [unity_SHAr]
//              Vector 17 [unity_SHAg]
//              Vector 18 [unity_SHAb]
//              Vector 19 [unity_SHBr]
//              Vector 20 [unity_SHBg]
//              Vector 21 [unity_SHBb]
//              Vector 22 [unity_SHC]
//              Vector 23 [unity_Scale]
//              Vector 24 [_MainTex_ST]
//              Vector 25 [_BumpMap_ST]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from Candela Bumped Specular PBS.shader
//    Shader "CandelaSSRR/PBS/Bumped Specular PBS SSR" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _SpecColor ("Specular Color", Color) = (0.5,0.5,0.5,1)
//       _SpecInt ("Specular Intensity", Float) = 1
//       _Shininess ("Shininess", Range(0.03,1)) = 1
//       _MainTex ("Base (RGB)", 2D) = "white" {}
//       _Reflectivity ("Reflectivity (A)", 2D) = "white" {}
//       _SpecTex ("Specular (RGB) Roughness(A)", 2D) = "white" {}
//       _BH ("Bump Height", Range(0,3)) = 1
//       _BumpMap ("Normalmap", 2D) = "bump" {}
//      }
//      Fallback "Specular"
//      SubShader 1/1 {
//        Tags { "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Bind "tangent" TexCoord2
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Matrix 8 [_World2Object]
//              Vector 12 [_WorldSpaceCameraPos]
//              Vector 13 [_ProjectionParams]
//              Vector 14 [_ScreenParams]
//              Vector 15 [_WorldSpaceLightPos0]
//              Vector 16 [unity_SHAr]
//              Vector 17 [unity_SHAg]
//              Vector 18 [unity_SHAb]
//              Vector 19 [unity_SHBr]
//              Vector 20 [unity_SHBg]
//              Vector 21 [unity_SHBb]
//              Vector 22 [unity_SHC]
//              Vector 23 [unity_Scale]
//              Vector 24 [_MainTex_ST]
//              Vector 25 [_BumpMap_ST]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from FurFX 2.0 20Layer.shader
//    Shader "FurFX/2.0/FurFX 20 Layer" {
//      Properties {
//       _Color ("Color (RGB)", Color) = (1,1,1,1)
//       _SpecColor ("Specular Material Color (RGB)", Color) = (1,1,1,1)
//       _BonusAmbient ("Bonus Ambient", Color) = (0,0,0,1)
//       _Shininess ("Shininess", Range(0.01,10)) = 8
//       _Gloss ("Gloss", Range(0,3)) = 1
//       _RimColor ("Rim Color", Color) = (0,0,0,0)
//       _RimPower ("Rim Power", Range(0.5,8)) = 4
//       _FurLength ("Fur Length", Range(0.0002,0.5)) = 0.05
//       _MainTex ("Base (RGB) Mask(A)", 2D) = "white" {}
//       _BumpMap ("Normalmap", 2D) = "bump" {}
//       _NoiseTex ("Noise (RGB)", 2D) = "white" {}
//       _Cube ("Reflection Map", CUBE) = "" {}
//       _ReflColor ("Reflection Color (RGB)", Color) = (1,1,1,1)
//       _Reflection ("Reflection Power", Range(0,1)) = 0
//       _ReflMinLevel ("Reflection Minimal Length", Range(0,1)) = 0
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.2
//       _HairHardness ("Fur Hardness", Range(0.1,1)) = 1
//       _HairThinness ("Fur Thinness", Range(0.01,10)) = 2
//       _HairShading ("Fur Shading", Range(0,1)) = 0.25
//       _HairColoring ("Fur Coloring", Range(0,1)) = 0.1
//       _SkinAlpha ("Mask Alpha Factor", Range(0,1)) = 0.5
//       _ForceGlobal ("Force Global", Vector) = (0,0,0,0)
//       _ForceLocal ("Force Local", Vector) = (0,0,0,0)
//      }
//      Fallback "VertexLit"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//        UsePass "VertexLit/SHADOWCOLLECTOR"
//        UsePass "VertexLit/SHADOWCASTER"
//        Pass 1/126 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutout" }
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Bind "tangent" TexCoord2
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Matrix 8 [_World2Object]
//              Vector 12 [_WorldSpaceCameraPos]
//              Vector 13 [_ProjectionParams]
//              Vector 14 [_ScreenParams]
//              Vector 15 [_WorldSpaceLightPos0]
//              Vector 16 [unity_SHAr]
//              Vector 17 [unity_SHAg]
//              Vector 18 [unity_SHAb]
//              Vector 19 [unity_SHBr]
//              Vector 20 [unity_SHBg]
//              Vector 21 [unity_SHBb]
//              Vector 22 [unity_SHC]
//              Vector 23 [unity_Scale]
//              Vector 24 [_MainTex_ST]
//              Vector 25 [_BumpMap_ST]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    def c26, 1, 0.5, 0, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord v3

dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2
dcl_texcoord3 o3
dcl_texcoord4 o4
dcl_position o5


def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    mul r1.xyz, v2, c23.w
    dp3 r2.w, r1, c5
    dp3 r0.x, r1, c4
    dp3 r0.z, r1, c6
    mov r0.y, r2.w
    mov r0.w, c26.x
    mul r1, r0.xyzz, r0.yzzx
    dp4 r2.z, r0, c18
    dp4 r2.y, r0, c17
    dp4 r2.x, r0, c16
    mul r0.w, r2, r2
    mad r0.w, r0.x, r0.x, -r0
    dp4 r0.z, r1, c21
    dp4 r0.y, r1, c20
    dp4 r0.x, r1, c19
    mul r1.xyz, r0.w, c22
    add r0.xyz, r2, r0
    add o2.xyz, r0, r1
    mov r0.w, c26.x
    mov r0.xyz, c12
    dp4 r1.z, r0, c10
    dp4 r1.y, r0, c9
    dp4 r1.x, r0, c8
    mad r3.xyz, r1, c23.w, -v0
    mov r0.xyz, v1
    mul r1.xyz, v2.zxyw, r0.yzxw
    mov r0.xyz, v1
    mad r1.xyz, v2.yzxw, r0.zxyw, -r1
    mul r2.xyz, r1, v1.w
    mov r0, c10
    dp4 r4.z, c15, r0
    mov r0, c9
    dp4 r4.y, c15, r0
    mov r1, c8
    dp4 r4.x, c15, r1
    dp4 r0.w, v0, c3
    dp4 r0.z, v0, c2
    dp4 r0.x, v0, c0
    dp4 r0.y, v0, c1

mov o5, r0 // Relocated from line 63 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-vertex-halo --only-autofixed --ignore-parse-errors 52021A3C.txt
texldl r5, c220.z, s0
add r5.w, r0.w, -r5.y
mad r0.x, r5.w, r5.x, r0.x

    mul r1.xyz, r0.xyww, c26.y
    mul r1.y, r1, c13.x
    dp3 o1.y, r4, r2
    dp3 o3.y, r2, r3
    dp3 o1.z, v2, r4
    dp3 o1.x, r4, v1
    dp3 o3.z, v2, r3
    dp3 o3.x, v1, r3
    mad o4.xy, r1.z, c14.zwzw, r1

//     mov o5, r0 // Relocated to line 54 with shadertool.py
    mov o4.zw, r0
    mad o0.zw, v3.xyxy, c25.xyxy, c25
    mad o0.xy, v3, c24, c24.zwzw

// approximately 52 instruction slots used
