// CRC32: F49A61E0 | Matched 4 variants of 1 shaders: Relief Pack/WaterShader
// 
//    Unity headers extracted from WaterShader.shader
//    Shader "Relief Pack/WaterShader" {
//      Properties {
//       TERRAIN_LayerReflection ("Layer reflection (water independent)", Range(0,2)) = 1
//       TERRAIN_FresnelPow ("Fresnel Pow", Range(0.5,32)) = 2
//       TERRAIN_FresnelOffset ("Fresnel Offset", Range(0,0.9)) = 0.2
//       TERRAIN_LayerWetStrength ("Layer wetness", Range(0,1)) = 1
//       TERRAIN_WaterLevelSlopeDamp ("Water level slope damp", Range(0.25,8)) = 4
//       TERRAIN_ExtrudeHeight ("Extrude Height", Range(0.001,0.08)) = 0.02
//       _SpecColor ("Specular Color (RGBA)", Color) = (0.5,0.5,0.5,1)
//       _Shininess ("Shininess", Range(0.01,1)) = 0.5
//       TERRAIN_WaterSpecularity ("Water Shininess (Specularity)", Range(0.01,1)) = 0.5
//       _MainTex ("Texture", 2D) = "white" {}
//       _BumpMap ("Bumpmap", 2D) = "bump" {}
//       _HeightMap ("Heightmap", 2D) = "black" {}
//       TERRAIN_FlowingMap ("Flowingmap (water bumps)", 2D) = "gray" {}
//       TERRAIN_RippleMap ("Ripplemap", 2D) = "gray" {}
//       TERRAIN_RippleScale ("Ripple scale", Float) = 1
//       TERRAIN_WaterLevel ("Water Level", Range(0,2)) = 0.5
//       TERRAIN_WaterColor ("Water Color", Color) = (1,1,1,1)
//       TERRAIN_WaterEdge ("Water Edge", Range(1,4)) = 1
//       TERRAIN_WaterOpacity ("Water Opacity", Range(0,1)) = 0.5
//       TERRAIN_WaterGloss ("Water Gloss", Range(0,1)) = 1
//       TERRAIN_DropletsSpeed ("Droplets speed", Float) = 15
//       TERRAIN_RainIntensity ("Rain intensity", Range(0,1)) = 1
//       TERRAIN_WetDropletsStrength ("Rain on wet", Range(0,1)) = 0
//       TERRAIN_Refraction ("Refraction", Range(0,0.04)) = 0.02
//       TERRAIN_WetRefraction ("Wet refraction", Range(0,1)) = 1
//       TERRAIN_Flow ("Flow", Range(0,1)) = 0.1
//       TERRAIN_FlowScale ("Flow Scale", Float) = 1
//       TERRAIN_FlowSpeed ("Flow Speed", Range(0,3)) = 0.25
//       TERRAIN_WetSpecularity ("Wet gloss", Range(0,1)) = 0.1
//       TERRAIN_WetReflection ("Wet reflection", Range(0,2)) = 0.5
//       _ReflectionMap ("ReflectionMap", 2D) = "gray" {}
//       TERRAIN_ReflColorA ("Reflection Color Hi", Color) = (1,1,1,1)
//       TERRAIN_ReflColorB ("Reflection Color Low", Color) = (1,1,1,1)
//       TERRAIN_ReflDistortion ("Reflection distortion", Range(0,0.1)) = 0.05
//       TERRAIN_ReflectionRotSpeed ("Reflection Rot Speed", Range(0,2)) = 0.3
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "RenderType"="Opaque" }
//        Pass 4/4 {
//          Name "PREPASS"
//          Tags { "LIGHTMODE"="PrePassFinal" "RenderType"="Opaque" }
//          ZWrite Off
//          Program "vp" {
//            SubProgram "d3d9 " {
// 1:           Keywords { "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" "LIGHTMAP_ON" "RTP_PM_SHADING" }
// 4:           Keywords { "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" "LIGHTMAP_ON" "RTP_SIMPLE_SHADING" }
// 2:           Keywords { "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" "LIGHTMAP_ON" "RTP_PM_SHADING" }
// 8:           Keywords { "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" "LIGHTMAP_ON" "RTP_SIMPLE_SHADING" }
//              Bind "vertex" Vertex
//              Bind "color" Color
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Bind "texcoord1" TexCoord1
//              Bind "tangent" TexCoord2
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Matrix 8 [_World2Object]
//              Vector 12 [_Time]
//              Vector 13 [_WorldSpaceCameraPos]
//              Vector 14 [_ProjectionParams]
//              Vector 15 [_ScreenParams]
//              Vector 16 [unity_Scale]
//              Float 17 [TERRAIN_ReflectionRotSpeed]
//              Vector 18 [unity_LightmapST]
//              Vector 19 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_color o3
    dcl_texcoord2 o4
    dcl_texcoord3 o5
    dcl_texcoord4 o6
    def c20, 1, 2, 0.159154907, 0.5
    def c21, 6.28318501, -3.14159298, 0, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord v3
    dcl_texcoord1 v4
    dcl_color v5

def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    mov r1.w, c20.x
    mov r1.xyz, c13
    dp4 r0.z, r1, c10
    dp4 r0.x, r1, c8
    dp4 r0.y, r1, c9
    mad r1.xyz, r0, c16.w, -v0
    dp3 r0.zw, v2, r1
    mul r0.xyz, -r0.z, v2
    mad r2.xyz, -r0, c20.y, -r1
    mov r1.w, c12.x
    mul r0.x, c17, r1.w
    mad r0.x, r0, c20.z, c20.w
    frc r1.w, r0.x
    mov o2.z, r0.w
    dp3 r0.z, r2, c6
    dp3 r0.x, r2, c4
    dp3 r0.y, r2, c5
    dp3 r0.y, r0, r0
    rsq r0.y, r0.y
    mad r1.w, r1, c21.x, c21.y
    sincos r2.xy, r1.w
    mul r3.xy, r0.y, r0.xzzw
    mul r0.xy, r3, r2.yxzw
    add r2.w, r0.x, r0.y
    mov r2.y, -r2
    dp3 o2.x, r1, v1
    dp4 r0.w, v0, c3
    mov r0.xyz, v1
    mul r3.xy, r3, r2
    mul r2.xyz, v2.zxyw, r0.yzxw
    mov r0.xyz, v1
    mad r0.xyz, v2.yzxw, r0.zxyw, -r2
    mul r0.xyz, r0, v1.w
    dp3 o2.y, r1, r0
    add r2.z, r3.x, r3.y
    mov r1.z, c10.y
    mov r1.x, c8.y
    mov r1.y, c9
    dp3 r2.y, r0, r1
    dp3 r2.x, v1, r1
    dp4 r0.z, v0, c2
    dp4 r0.x, v0, c0
    dp4 r0.y, v0, c1

mov o0, r0 // Relocated from line 65 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-vertex-halo --only-autofixed --ignore-parse-errors F49A61E0.txt
texldl r4, c220.z, s0
add r4.w, r0.w, -r4.y
mad r0.x, r4.w, r4.x, r0.x

    mul r1.xyz, r0.xyww, c20.w
    mul r1.y, r1, c14.x
    mad o4.xy, r2.zwzw, c20.w, c20.w
    mov o4.zw, r2.xyxy
    mad o5.xy, r1.z, c15.zwzw, r1

//     mov o0, r0 // Relocated to line 60 with shadertool.py
    mov o3, v5
    mov o5.zw, r0
    mad o1.xy, v3, c19, c19.zwzw
    mad o6.xy, v4, c18, c18.zwzw

// approximately 60 instruction slots used
