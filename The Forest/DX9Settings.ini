[General]

; This game uses s13 in a few shaders, so use s15 instead:
DefPSSampler = 15

; UseRenderedShaders=true is nearly always useful, because it trims the
; list of shaders seen while hunting down to just those active in the
; current scene.  Disable this only if you get crashes during hunting.
UseRenderedShaders=true

; DumpAll will generate ASM text files for every shader seen by the game.
; This is usually worth doing once, but not useful for every run.
DumpAll=true


; Constant registers that will arrive in Vertex and Pixel Shaders, as
; c200.  The constants below will be assigned, based on the key preset.
DefVSConst1 = 200
DefPSConst1 = 200

; The PresetKeysList specifies which KEYs will be used.
; Multiple keys lists are supported.
; Note that the KEY sections are in hexadecimal
PresetsKeysList = 0;1;2;3;4;5;6;7;8;9;A;B;C;D;100;101;

; Mouse stops working after alt+tabbing and other times:
InitMouse = false

; Allows textures to be cycled with Up/Down - use to hunt menu text CRC32
bCalcTexCRCatStart = true

; Less crashes when reloading shaders:
OverrideMethod = 2

; Force square surfaces (shadow maps) to be mono:
DefSquareSurfaceMode = 2


[KEY100]
; [ selects a convergence preset of 0.4 - crafting book lined up with mouse cursor
Key = 219
Presets = 100;
Type = 1
[PRES100]
UseSepSettings = true
SaveSepSettings = true
Convergence = 0x3ecccccd
UseByDef = true
[KEY101]
; ] selects a convergence preset of 2.5 - inventory closer to mouse cursor
Key = 221
Presets = 101;
Type = 1
[PRES101]
UseSepSettings = true
SaveSepSettings = true
Convergence = 0x40200000


; Number row on keyboard sets UI depth to various values between screen depth
; and separation. `~ (left of 1 on US keyboards) sets screen depth, 1-9 sets
; septh in 10% multiples and 0 sets depth to 99.5% separation (default).
; Note that the KEY%X on these sections is in hexadecimal, hence we use KEYA
; for the tenth key entry and so on.
;
; NOTE: Most of the UI is already at a good depth in this game. This hopefully
; only adjusts the HUD icons for the camp, in-progress buildings & material
; prompts that were originally drawn at screen depth.
[KEY0]
Key = 192
Presets = 0;
Type = 1
[PRES0]
Const3 = 0x00000000
[KEY1]
Key = 49
Presets = 1;
Type = 1
[PRES1]
Const3 = 0x3dcccccd
[KEY2]
Key = 50
Presets = 2;
Type = 1
[PRES2]
Const3 = 0x3e4ccccd
[KEY3]
Key = 51
Presets = 3;
Type = 1
[PRES3]
Const3 = 0x3e99999a
[KEY4]
Key = 52
Presets = 4;
Type = 1
[PRES4]
Const3 = 0x3ecccccd
[KEY5]
Key = 53
Presets = 5;
Type = 1
[PRES5]
Const3 = 0x3f000000
[KEY6]
Key = 54
Presets = 6;
Type = 1
[PRES6]
Const3 = 0x3f19999a
[KEY7]
Key = 55
Presets = 7;
Type = 1
[PRES7]
Const3 = 0x3f333333
[KEY8]
Key = 56
Presets = 8;
Type = 1
[PRES8]
Const3 = 0x3f4ccccd
[KEY9]
Key = 57
Presets = 9;
Type = 1
[PRES9]
Const3 = 0x3f666666
[KEYA]
Key = 48
Presets = A;
Type = 1
[PRESA]
Const3 = 0x3f7eb852
UseByDef = true

; U toggles Const1
[KEYB]
Key = 85
Presets = B;C;
Type = 1
[PRESB]
Const1 = 0x3f800000
[PRESC]
Const1 = 0x00000000

; I toggles Const2
[KEYC]
Key = 73
Presets = D;E;
Type = 1
[PRESD]
Const2 = 0x3f800000
[PRESE]
Const2 = 0x00000000

; O toggles Const3
[KEYD]
Key = 79
Presets = F;10;
Type = 1
[PRESF]
Const3 = 0x3f800000
[PRES10]
Const3 = 0x00000000


; Copy MV+MVP matrices from various sources in case of drawing a full-screen
; lighting effect (e.g. physical lighting effect such as specular highlights
; and environment reflections) while directional lighting is not active:

; [VSC72ED75E]
; ; "Particles/Additive_Layer"
; UseMatrix = true
; GetMatrixFromReg = 4
; NO - Unity 5 only passes in three cols, so inverting it with Helix mod won't work! InverseMatrix = true
; GetConst2FromReg = 0
; [VSAD105294]
; ; Matched 3 variants of 3 shaders: Particles/Additive, Particles/Alpha Blended, Particles/Multiply
; UseMatrix = true
; GetMatrixFromReg = 4
; NO - Unity 5 only passes in three cols, so inverting it with Helix mod won't work! InverseMatrix = true
; GetConst2FromReg = 0


; Copy inverse projection matrix from directional lighting shaders:
[VS00933666]
; Hidden/Internal-PrePassCollectShadows PCF_5x5
GetConst3FromReg = 4
PresIndex = 16
[VS678DC18B]
; Hidden/Internal-PrePassCollectShadows
GetConst3FromReg = 4
PresIndex = 16

[PRES10]
; PRES10 (hexadecimal) is PresIndex 16 (decimal)
; Signifies that the inverse projection matrix is currently valid
Const4 = 0x3f800000

; Copy inverse projection matrix into other lighting shaders:
[VS05F7E52C]
; Matched 624 variants of 6 shaders: Hidden/Internal-DeferredShading, Hidden/Internal-DeferredShading AFS Grass, Hidden/Internal-DeferredShading AFS Grass Sunshine, Hidden/Internal-PrePassLighting, Hidden/Sunshine-DeferredShading, Hidden/Sunshine-PrePassLighting
SetConst3ToReg = 170
; UseMatrix = true
; MatrixReg = 180
; SetConst2ToReg = 190
[VS95661BB6]
; Matched 156 variants of 1 shaders: Hidden/Internal-PrePassLighting
SetConst3ToReg = 170
; UseMatrix = true
; MatrixReg = 180
; SetConst2ToReg = 190


[VS4131EBF7]
; Shader already uses s0, so use s1 instead:
DefVSSampler = 258

[VS99C87EE0]
; Shader already uses s0, so use s1 instead:
DefVSSampler = 258

[VSAD4CEEBE]
; Shader already uses s0, so use s1 instead:
DefVSSampler = 258

[VSF8142B5A]
; Shader already uses s0, so use s1 instead:
DefVSSampler = 258
