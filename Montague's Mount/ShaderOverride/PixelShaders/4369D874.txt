// Spot lights on dock
// Fix based on Mike_Ar69's Might & Magic X fix

    ps_3_0
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    def c24, 2, -1, 0, 128
    def c25, 0, 1, 0.25, 0
    def c26, 0.219970703, 0.70703125, 0.0709838867, 0
    dcl_texcoord v0
    dcl_texcoord1 v1.xyz

// -0.025 is an approximation - once again I can't find a value that looks good
// at all distances:
def c220, -1.0, -0.025, 0.0625, 0.5
dcl_2d s13
dcl vPos.xy

// Alternate to Mike's fix, same effect:
//mov r30, v0
//texldl r24, c220.z, s13
//add r24.y, r30.w, -r24.y
//mul r24.x, r24.x, r24.y
//mul r24.x, r24.x, c220.w
//add r30.x, r30.x, r24.x
//    rcp r0.x, r30.w
//    mul r7.xy, r30, r0.x
// Unlike the other similar lights in this game, this change from Mike does
// make a significant difference. Alternatively, applying 1/2 correction
// formula to v0 seems to have an identical effect.
mov r11.xy, vPos.xy
rcp r11.z, c210.x
rcp r11.w, c210.y
mul r11.xy, r11.xy, r11.zw
mul r11.zw, r11.zw, c220.ww
add r7.xy, r11.xy, r11.zw
    texld r0.x, r7, s1
    mad r0.w, r0.x, c14.x, c14.y

// This seems to eliminate the jump at a certain distance from the shadows,
// seems like it's affecting the offset in the cascading levels, which would
// suggest that the profile hack should not have adjusted v1
mov r29.xyz, v1.xyz
texldl r24, c220.z, s13
add r24.y, r29.w, -r24.y
mul r24.x, r24.x, r24.y
add r29.x, r29.x, -r24.x

    rcp r0.y, r29.z
    mul r0.y, r0, c13.z
    mov r2.w, c25.y
    mov r1.z, c25.y
    mul r0.xyz, r29, r0.y
    rcp r0.w, r0.w
    mul r1.xyw, r0.xyzz, r0.w

texldl r24, c220.z, s13
add r24.y, r1.w, -r24.y
mul r24.x, r24.x, r24.y
mul r24.x, r24.x, c220.y
add r1.x, r1.x, -r24.x

    dp4 r0.w, r1.xywz, c6
    dp4 r2.x, r1.xywz, c4
    dp4 r3.y, r1.xywz, c5
    mov r2.y, r3
    mov r2.z, r0.w
    dp4 r0.x, r2, c3
    rcp r4.w, r0.x
    dp4 r6.z, r2, c2
    dp4 r6.y, r2, c1
    dp4 r6.x, r2, c0
    mad r0.xyz, r6, r4.w, c23
    mov r3.z, r0.w
    mov r3.x, r2
    add r4.xyz, -r3, c17
    texld r0.x, r0, s4
    add r1.xyz, r3, -c12
    dp3 r3.w, r4, r4
    rsq r0.z, r3.w
    dp3 r0.y, r1, r1
    mul r4.xyz, r0.z, r4
    rsq r0.y, r0.y
    mad r5.xyz, -r0.y, r1, r4
    mad r1.xyz, r6, r4.w, c21
    mov_pp r0.w, r0.x
    mad r0.xyz, r6, r4.w, c22
    texld r0.x, r0, s4
    texld r1.x, r1, s4
    mov_pp r0.z, r0.x
    mov_pp r0.y, r1.x
    mad r1.xyz, r6, r4.w, c20
    mov r0.x, c15
    add r4.w, c25.y, -r0.x
    texld r0.x, r1, s4
    mad r0, r0, r4.w, c15.x
    dp4_pp r4.w, r0, c25.z
    dp3 r1.x, r5, r5
    add r0.xyz, -r3, c16
    rsq r0.w, r1.x
    mul r1.xyz, r0.w, r5
    dp3 r3.x, r0, r0
    texld r0, r7, s0
    rsq r3.x, r3.x
    rcp r3.y, r3.x
    mad_pp r0.xyz, r0, c24.x, c24.y
    add r3.z, -r1.w, r3.y
    dp3_pp r3.x, r0, r0
    rsq_pp r3.y, r3.x
    mul_pp r0.xyz, r3.y, r0
    dp3_pp r1.x, r1, r0
    mad r3.x, r3.z, c16.w, r1.w
    dp3_pp r0.x, r4, r0
    mad_sat r1.w, r3.x, c15.z, c15
    add_sat r3.y, r4.w, r1.w
    dp4 r4.w, r2, c11
    mul_pp r0.w, r0, c24
    max_pp r3.z, r1.x, c24
    pow_pp r1, r3.z, r0.w
    cmp r1.y, r4.w, c25.x, c25
    dp4 r5.z, r2, c10
    dp4 r5.x, r2, c8
    dp4 r5.y, r2, c9
    mov r5.w, r4
    texldp r0.w, r5, s2
    mul r2.x, r3.w, c17.w
    mul r0.w, r0, r1.y
    texld r2.x, r2.x, s3
    mul r0.w, r0, r2.x
    mul r1.w, r0, r3.y
    mov_pp r2.x, r1
    mov_sat r0.w, r1
    mov_pp r1.xyz, c18
    max_pp r0.x, r0, c24.z
    dp3_pp r1.x, c26, r1
    mul r0.w, r2.x, r0
    mul r0.w, r0, r1.x
    mad r0.y, r3.x, c19.z, c19.w
    add_sat r1.x, -r0.y, c25.y
    mul r0.x, r1.w, r0
    mul r0.xyz, r0.x, c18
    mul_pp oC0, r0, r1.x

// approximately 93 instruction slots used (8 texture, 85 arithmetic)
