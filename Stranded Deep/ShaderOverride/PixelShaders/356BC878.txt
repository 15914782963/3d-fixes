// CRC32: 356BC878 | Unity headers extracted from Internal-PrePassLighting.shader
// Shader "Hidden/Internal-PrePassLighting" {
//   Properties {
//    _LightTexture0 ("", any) = "" {}
//    _LightTextureB0 ("", 2D) = "" {}
//    _ShadowMapTexture ("", any) = "" {}
//   }
//   Fallback Off
//   SubShader 1/1 {
//     Pass 2/3 {
//       Tags { "ShadowSupport"="True" }
//       ZWrite Off
//       Fog { Mode Off }
//       Blend One One
//       Program "fp" {
//         SubProgram "d3d9 " {
//           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
//           Matrix 0 [_CameraToWorld]
//           Vector 4 [_WorldSpaceCameraPos]
//           Vector 5 [_ProjectionParams]
//           Vector 6 [_ZBufferParams]
//           Vector 7 [_LightShadowData]
//           Vector 8 [unity_ShadowFadeCenterAndType]
//           Vector 9 [_LightDir]
//           Vector 10 [_LightColor]
//           Vector 11 [unity_LightmapFade]
//           SetTexture 0 [_CameraNormalsTexture] 2D 0
//           SetTexture 1 [_CameraDepthTexture] 2D 1
//           SetTexture 2 [_ShadowMapTexture] 2D 2
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    def c12, 1.00000000, 2.00000000, -1.00000000, 0.00000000
    def c13, 128.00000000, 0.21997070, 0.70703125, 0.07098389
    dcl_texcoord0 v0.xyzw
    dcl_texcoord1 v1.xyz

// Extra input from VS with P.I[0,0]:
dcl_texcoord5 v5.x

def c220, 0, 1, 0.0625, 0.5
dcl_2d s12

    rcp r0.x, v0.w
    mul r3.xy, v0, r0.x
    texld r0.x, r3, s1
    mad r0.w, r0.x, c6.x, c6.y
    rcp r0.y, v1.z
    mul r0.y, r0, c5.z
    mov r2.z, c12.x
    mul r0.xyz, v1, r0.y
    rcp r0.w, r0.w
    mul r2.xyw, r0.xyzz, r0.w // r2.w has depth

texldl r31, c220.z, s12 // r31.x = separation, r31.y = convergence
add r31.w, r2.w, -r31.y // r31.w = depth - convergence
mul r31.w, r31.w, r31.x // r31.w = separation * (depth - convergence)
mad r2.x, -r31.w, v5.x, r2.x // X -= separation * (depth - convergence) * P.I[0,0]

    dp4 r1.z, r2.xywz, c2
    dp4 r1.x, r2.xywz, c0
    dp4 r1.y, r2.xywz, c1
    add r2.xyz, r1, -c4
    dp3 r0.x, r2, r2
    rsq r1.w, r0.x
    texld r0, r3, s0
    mad r2.xyz, -r1.w, r2, -c9
    dp3 r1.w, r2, r2
    add r1.xyz, -r1, c8
    dp3 r1.x, r1, r1
    mad_pp r0.xyz, r0, c12.y, c12.z
    rsq r3.z, r1.w
    dp3_pp r3.w, r0, r0
    rsq_pp r1.w, r3.w
    mul r2.xyz, r3.z, r2
    mul_pp r0.xyz, r1.w, r0
    dp3_pp r1.w, r2, r0
    dp3_pp r0.x, r0, -c9
    rsq r1.x, r1.x
    max_pp r2.x, r1.w, c12.w
    mul_pp r0.w, r0, c13.x
    rcp r2.y, r1.x
    pow_pp r1, r2.x, r0.w
    mov_pp r1.w, r1.x
    add r0.w, -r2, r2.y
    mad r0.w, r0, c8, r2
    mad r0.y, r0.w, c11.z, c11.w
    mad_sat r1.y, r0.w, c7.z, c7.w
    texld r1.x, r3, s2
    add_sat r2.x, r1, r1.y
    mov_pp r1.xyz, c10
    max_pp r0.x, r0, c12.w
    dp3_pp r1.x, c13.yzww, r1
    mul r1.w, r1, r2.x
    mul r1.w, r1, r1.x
    mul r0.x, r2, r0
    add_sat r0.y, -r0, c12.x
    mul r1.xyz, r0.x, c10
    mul_pp oC0, r1, r0.y
