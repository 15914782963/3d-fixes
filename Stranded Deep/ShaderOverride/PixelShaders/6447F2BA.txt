// CRC32: 6447F2BA | Unity headers extracted from BEAMTeamVolumetricFog.shader
// Shader "BEAM Team/Post Effects/Volumetric Fog" {
//   Properties {
//    _MainTex ("Base (RGB)", 2D) = "black" {}
//   }
//   Fallback Off
//   SubShader 1/1 {
//     Pass 1/1 {
//       ZTest Always
//       ZWrite Off
//       Cull Off
//       Fog { Mode Off }
//       Program "fp" {
//         SubProgram "d3d9 " {
//           Keywords { "CAUSTICS_ON" "INTRO" "WATER_BELOW" }
//           Matrix 0 [sunshine_WorldToSunVP]
//           Matrix 4 [sunshine_CascadeRanges]
//           Matrix 8 [_InverseViewMatrix]
//           Vector 12 [_Time]
//           Vector 13 [_WorldSpaceCameraPos]
//           Vector 14 [_ZBufferParams]
//           Vector 15 [sunshine_ShadowParamsAndHalfTexel]
//           Vector 16 [sunshine_OvercastCoord]
//           Vector 17 [sunshine_OvercastVectorsUV]
//           Vector 18 [sunshine_ShadowCoordDepthStart]
//           Vector 19 [sunshine_ShadowToWorldScale]
//           Vector 20 [sunshine_CascadeNearRatiosSq]
//           Vector 21 [sunshine_CascadeFarRatiosSq]
//           Vector 22 [sunshine_ShadowFadeParams]
//           Vector 23 [_SunColor]
//           Float 24 [_SunFade]
//           Float 25 [_BelowVisibility]
//           Vector 26 [_WaterSunColor]
//           Vector 27 [_UnderwaterColor]
//           SetTexture 0 [_CameraDepthNormalsTexture] 2D 0
//           SetTexture 1 [_CameraDepthTexture] 2D 1
//           SetTexture 2 [_MainTex] 2D 2
//           SetTexture 3 [_CausticsBump] 2D 3
//           SetTexture 4 [sunshine_Lightmap] 2D 4
//           SetTexture 5 [sunshine_OvercastMap] 2D 5
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    def c28, 2, 0, 1, -0.5
    def c29, 0.399902344, 0, -0.149902344, 0.5
    def c30, 0.600097656, 0.899902344, 1, 1.20000005
    def c31, 0.700195313, 0.300048828, 0.000900049985, -0
    def c32, 0.119995117, 0.0499877892, 0.00499999989, 0.00999999978
    def c33, 0.200000003, 0.00149956997, -0, 0.0999755934
    def c34, 0.00299914996, -0, 0.199951172, 0.00599829014
    def c35, 0.0199999996, 0.0299999993, 0.150000006, 0.799804688
    def c36, 0.0299975593, -0, 0.0599999987, 0.0799999982
    def c37, 0.038979739, -0, 0.100000001, 0.454101563
    def c38, 0.00749999983, 0.0149999997, 5.5, 6
    def c39, 6.3984375, 6, 4.19921875, -1
    def c40, 3.55539989, 0, -1.77769995, 1
    def c41, 123456792, 1, 0.799804688, 0.600097656
    def c42, 1, 0.00392156979, 1.53799992e-005, 5.99999979e-008
    dcl_texcoord v0.xy
    dcl_texcoord2 v1.xyz
    dcl_texcoord3 v2.xyz

def c220, 0, 1, 0.0625, 0.5
dcl_2d s12
texldl r31, c220.z, s12

    mov r0.w, c25.x
    mul r1.w, c29, r0
    texld r0.x, v0, s1
    dp3_pp r0.y, v1, v1
    rsq_pp r0.y, r0.y
    mad r0.x, r0, c14, c14.y
    rcp r0.x, r0.x
    mul r1.xyz, r0.x, v2
    mul_pp r3.xyz, r0.y, v1
    add r2.xyz, r1, c13 // r2 now has the world coordinates

// UNVERIFIED FIX

// In order to fix the depth of the highlights on the sand of the water
// caustics and the underwater shadows, we need to apply a stereo correction to
// r2, which is in world-coordinates, but we need either view-space or
// projection-space coordinates to apply a stereo correction.
// This shader has the inverse view matrix already, so we can use that and it's
// inverse (in c170 thanks to Helix mod) to change between world-space and
// view-space, but we still need part of the inverse projection matrix to be
// able to correct view-space coords, so we use the same technique that we used
// to fix Unity shadows to calculate it.

// Calculate P.I[0,0] required for stereo corrections in view-space:
// Transpose first component of MV.I matrix into r30:
mov r30.x, c180.x
mov r30.y, c181.x
mov r30.z, c182.x
mov r30.w, c183.x
dp4 r30.x, r30, c190 // Calculate P[0,0]
rcp r30.x, r30.x // Calculate P.I[0,0]

// Convert r2 to view-space coords:
mov r29.xyz, r2
mov r29.w, c220.y
dp4 r28.x, r29, c170
dp4 r28.y, r29, c171
dp4 r28.z, r29, c172
dp4 r28.w, r29, c173

// Apply view-space stereo correction formula:
add r31.w, r28.z, r31.y // I'm not sure why I'm adding and not subtracting, but it lines it up perfectly!
mul r31.w, r31.w, r31.x
mad r28.x, r31.w, r30.x, r28.x

// Convert back to world-space coords:
dp4 r2.x, r28, c8
dp4 r2.y, r28, c9
dp4 r2.z, r28, c10

    rcp_pp r0.x, -r3.y
    mul_pp r0.x, -r2.y, r0
    mad r4.xyz, -r3, r0.x, r2
    mul_pp r6.xyz, r4, c32.x
    add r0.w, -r2.y, r6.y
    mov r0.x, c12.z
    mul r2.w, c30, r0.x
    mul r5.zw, r2.w, c36.w
    mul_pp r0.xy, r6.xzzw, c32.y
    mul_pp r4.xy, r6.xzzw, c33.w
    add r9.xy, r6.xzzw, c38.y
    add r9.zw, r6.xyxz, c38.x
    mul r8.xy, -r2.w, c35
    mul r5.xy, -r2.w, c32.zwzw
    mad r0.xy, r2.w, c31.zwzw, r0
    add r0.xy, r0, r5
    texld r0.xyz, r0, s3
    mul r0.xyz, r0, c33.x
    mov r7.x, r5.z
    mul r10.xy, r2.w, c32.wzzw
    mul r8.zw, r2.w, c35.xyyx
    mov r7.w, r5
    abs r0.w, r0
    rcp r1.w, r1.w
    mul_sat r1.w, r0, r1
    add r1.w, -r1, c28.z
    rcp_pp r0.w, r0.z
    mul_pp r3.w, r1, c33
    mul_pp r4.zw, r0.xyxy, r0.w
    mul_pp r4.zw, r4, r3.w
    mad r4.xy, r2.w, c33.yzzw, r4
    add r4.xy, r4, -r4.zwzw
    add r4.xy, r4, r10
    texld r4.xyz, r4, s3
    mul r4.xyz, r4, c33.x
    add_pp r4.xyz, r0, r4
    rcp_pp r0.x, r4.z
    mul_pp r0.zw, r4.xyxy, r0.x
    mul_pp r0.xy, r6.xzzw, c34.z
    mul_pp r0.zw, r3.w, r0
    mad r0.xy, r2.w, c34, r0
    add r0.xy, r0, -r0.zwzw
    add r0.xy, r0, r8
    texld r0.xyz, r0, s3
    mul r0.xyz, r0, c33.x
    add_pp r4.xyz, r4, r0
    rcp_pp r0.x, r4.z
    mul_pp r0.zw, r4.xyxy, r0.x
    mul_pp r0.xy, r6.xzzw, c29.w
    mul_pp r0.zw, r3.w, r0
    mad r0.xy, r2.w, c34.wyzw, r0
    add r0.xy, r0, -r0.zwzw
    add r0.xy, r0, r8.zwzw
    texld r0.xyz, r0, s3
    mul r0.xyz, r0, c35.z
    add_pp r4.xyz, r4, r0
    rcp_pp r0.x, r4.z
    mul_pp r0.zw, r4.xyxy, r0.x
    mul_pp r0.xy, r6.xzzw, c35.w
    mul_pp r0.zw, r3.w, r0
    mad r0.xy, r2.w, c36, r0
    add r0.xy, r0, -r0.zwzw
    mul r0.zw, -r2.w, c36.z
    mov r7.z, r0
    add r0.xy, r0, r7.zwzw
    texld r0.xyz, r0, s3
    mul r0.xyz, r0, c35.z
    add_pp r4.xyz, r4, r0
    rcp_pp r0.x, r4.z
    mul_pp r0.xy, r4, r0.x
    mul_pp r4.xy, r3.w, r0
    mad r0.xy, r2.w, c37, r6.xzzw
    add r0.xy, r0, -r4
    mov r7.y, r0.w
    add r0.xy, r0, r7
    texld r0.z, r0, s3
    mul r0.w, r0.z, c37.z
    mul_pp r4.xy, r9, c32.y
    mad r4.xy, r2.w, c31.zwzw, r4
    add r0.xy, r5, r4
    add_pp r4.w, r4.z, r0
    texld r0.xyz, r0, s3
    mul r4.xyz, r0, c33.x
    pow_pp r0, r4.w, c37.w
    rcp_pp r0.y, r4.z
    mul_pp r5.zw, r4.xyxy, r0.y
    mul_pp r0.zw, r9.xyxy, c33.w
    mul_pp r5.zw, r3.w, r5
    mad r0.zw, r2.w, c33.xyyz, r0
    add r0.zw, r0, -r5
    mov_pp r4.w, r0.x
    add r0.xy, r10, r0.zwzw
    texld r0.xyz, r0, s3
    mul r0.xyz, r0, c33.x
    add_pp r6.xyz, r4, r0
    mul_pp r5.zw, r9, c32.y
    mad r0.xy, r2.w, c31.zwzw, r5.zwzw
    rcp_pp r0.z, r6.z
    mul_pp r4.xy, r6, r0.z
    add r0.xy, r5, r0
    texld r0.xyz, r0, s3
    mul r5.xyz, r0, c33.x
    mul_pp r0.xy, r9, c34.z
    add_pp r0.w, -r4, c28.z
    mul_pp r4.xy, r3.w, r4
    mad r0.xy, r2.w, c34, r0
    add r4.zw, r0.xyxy, -r4.xyxy
    rcp_pp r0.z, r5.z
    mul_pp r4.xy, r5, r0.z
    mul_pp r0.xy, r9.zwzw, c33.w
    mul_pp r4.xy, r3.w, r4
    mad r0.xy, r2.w, c33.yzzw, r0
    add r0.xy, r0, -r4
    add r4.xy, r8, r4.zwzw
    add r0.xy, r10, r0
    texld r4.xyz, r4, s3
    texld r0.xyz, r0, s3
    mul r4.xyz, r4, c33.x
    add_pp r4.xyz, r6, r4
    mul r0.xyz, r0, c33.x
    add_pp r0.xyz, r5, r0
    rcp_pp r5.x, r4.z
    mul_pp r6.xy, r4, r5.x
    rcp_pp r4.w, r0.z
    mul_pp r5.zw, r0.xyxy, r4.w
    mul_pp r5.xy, r9.zwzw, c34.z
    mul_pp r6.zw, r9.xyxy, c29.w
    mul_pp r5.zw, r3.w, r5
    mad r5.xy, r2.w, c34, r5
    add r5.xy, r5, -r5.zwzw
    add r5.xy, r8, r5
    texld r5.xyz, r5, s3
    mul r5.xyz, r5, c33.x
    add_pp r5.xyz, r0, r5
    mad r6.zw, r2.w, c34.xywy, r6
    mul_pp r6.xy, r3.w, r6
    add r6.xy, r6.zwzw, -r6
    rcp_pp r4.w, r5.z
    mul_pp r6.zw, r5.xyxy, r4.w
    add r6.xy, r8.zwzw, r6
    texld r0.xyz, r6, s3
    mul r0.xyz, r0, c35.z
    add_pp r0.xyz, r4, r0
    mul_pp r6.xy, r9.zwzw, c29.w
    mul_pp r6.zw, r3.w, r6
    mad r6.xy, r2.w, c34.wyzw, r6
    add r6.xy, r6, -r6.zwzw
    add r4.xy, r8.zwzw, r6
    rcp_pp r4.w, r0.z
    mul_pp r6.xy, r0, r4.w
    texld r4.xyz, r4, s3
    mul r4.xyz, r4, c35.z
    add_pp r4.xyz, r5, r4
    rcp_pp r4.w, r4.z
    mul_pp r5.zw, r4.xyxy, r4.w
    mul_pp r5.xy, r9, c35.w
    mul_pp r5.zw, r3.w, r5
    mad r5.xy, r2.w, c36, r5
    mul_pp r6.xy, r3.w, r6
    add r6.xy, r5, -r6
    add r6.xy, r7.zwzw, r6
    mul_pp r5.xy, r9.zwzw, c35.w
    mad r5.xy, r2.w, c36, r5
    add r5.xy, r5, -r5.zwzw
    add r5.xy, r7.zwzw, r5
    texld r6.xyz, r6, s3
    mul r6.xyz, r6, c35.z
    texld r5.xyz, r5, s3
    mul r5.xyz, r5, c35.z
    add_pp r4.xyz, r4, r5
    add_pp r0.xyz, r0, r6
    rcp_pp r5.x, r0.z
    mul_pp r0.xy, r0, r5.x
    rcp_pp r4.w, r4.z
    mul_pp r4.xy, r4, r4.w
    mad r5.xy, r2.w, c37, r9
    mul_pp r0.xy, r3.w, r0
    add r0.xy, r5, -r0
    add r0.xy, r7, r0
    texld r5.z, r0, s3
    mad r5.xy, r2.w, c37, r9.zwzw
    mov r2.w, c28.z
    mul_pp r4.xy, r3.w, r4
    add r4.xy, r5, -r4
    add r4.xy, r7, r4
    texld r6.z, r4, s3
    mul r0.y, r5.z, c37.z
    mul r0.x, r6.z, c37.z
    add_pp r0.x, r4.z, r0
    pow_pp r5, r0.x, c37.w
    dp4 r3.w, r2, c2
    dp4 r8.x, r2, c0
    dp4 r2.x, r2, c1
    mov_pp r0.x, r5
    add_pp r0.y, r0.z, r0
    pow_pp r4, r0.y, c37.w
    mov_pp r0.y, r4.x
    add_pp r0.y, -r0, c28.z
    add_pp r0.x, -r0, c28.z
    mul r4.xyz, r0.wxyw, c38.z
    pow_sat r0, r4.x, c38.w
    mov r4.x, r0
    pow_sat r0, r4.y, c38.w
    mov r4.y, r0
    pow_sat r0, r4.z, c38.w
    mov r5.y, r2.x
    mov r8.y, r2.x
    mov r5.z, r3.w
    mov r5.x, r8
    add r5.xyz, r5, -c18
    mul r5.xyz, r5, c19
    dp3 r2.z, r5, r5
    mul r0.x, r2.z, c41
    frc r0.x, r0
    mul r0.w, -r0.x, c15.y
    mov r4.z, r0
    mul_pp r0.xyz, r4, c23
    texld r4.xyz, v0, s0
    mad r6.xyz, r4, c40.xxyw, c40.zzww
    add r2.w, r0, c28.z
    mad r4, -r2.z, r2.w, c21
    mul_pp r5.xyz, r0, c39
    mad r0, r2.z, r2.w, -c20
    dp3 r2.w, r6, r6
    rcp r2.w, r2.w
    mul r2.w, r2, c28.x
    mul r7.xy, r2.w, r6
    add r7.z, r2.w, c39.w
    cmp r4, r4, c28.z, c28.y
    cmp r0, r0, c28.z, c28.y
    mul r0, r0, r4
    mul r4, r0.y, c5
    mad r4, r0.x, c4, r4
    mad r4, r0.z, c6, r4
    dp3 r6.z, r7, c10
    dp3 r6.x, r7, c8
    dp3 r6.y, r7, c9
    dp3 r0.y, r6, r6
    rsq r0.x, r0.y
    mul r6.xyz, r0.x, r6
    mad r0, r0.w, c7, r4
    dp3 r2.w, -r3, r6
    mad r0.xy, r0.zwzw, r8, r0
    texld r0, r0, s4
    dp4 r0.w, r0, c42
    max r2.w, r2, c28.y
    mul r4.xyz, r5, r2.w
    mul r0.xyz, r4, r1.w
    mul r4.xyz, r0, c24.x
    add r0.w, r3, -r0
    cmp r0.x, r0.w, c28.z, c28.y
    mad_sat r0.y, -r2.z, c22, c22.x
    mul r0.zw, r8.x, c17.xyxy
    mad r2.z, -r0.x, r0.y, c28
    add r0.xy, r0.zwzw, c16
    dp3 r0.z, r1, r1
    mad r0.xy, r2.x, c17.zwzw, r0
    rsq r1.w, r0.z
    texld r0.w, r0, s5
    mul r0.xyz, r1.w, -r1
    mad r1.x, -r2.z, r0.w, c28.z
    dp3_pp r0.w, r0, r3
    dp3_pp r0.x, r0, c28.ywyw
    mul r1.x, -r1, c15
    add r1.x, r1, c28.z
    mad_pp r0.w, r0, c31.x, c31.y
    mul r2.z, r1.x, r1.x
    mul r0.w, r0, r0
    mul r1.xyz, r0.w, c26
    add_sat_pp r2.x, r0, c29.w
    texld r0, v0, s2
    add_pp r1.xyz, r1, c27
    mul r1.xyz, r1, r2.x
    mad_pp r3.xyz, r4, r2.z, r0
    mul r4.xyz, r1, c28.x
    mov r2.x, c24
    add r2.x, c28.z, -r2
    mov_pp r1.xyz, c30
    mad_pp r1.xyz, r2.x, c29, r1
    rcp r1.w, r1.w
    rcp r2.x, c25.x
    mul_sat r2.x, r1.w, r2
    mov r1.w, c25.x
    mul r1.w, c28.x, r1
    add_pp r4.xyz, r4, -r3
    rcp r1.x, r1.x
    rcp r1.y, r1.y
    rcp r1.z, r1.z
    mul_sat r1.xyz, r2.x, r1
    mad_pp r3.xyz, r1, r4, r3
    add r1.x, r2.y, r1.w
    rcp r1.y, r1.w
    mul_sat r1.y, r1.x, r1
    add_sat r1.x, -r2.y, c28
    mul_pp r2.xyz, r3, r1.y
    max r1.x, r1, c28.y
    mad_pp r2.xyz, r2, c41.yzww, -r0
    mul r1.x, r1, r1
    mad_pp oC0.xyz, r1.x, r2, r0
    mov_pp oC0.w, r0

// approximately 322 instruction slots used (23 texture, 299 arithmetic)
