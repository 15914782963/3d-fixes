// CRC32: D992D72E | Unity headers extracted from BEAMTeamVolumetricFog.shader
// Shader "BEAM Team/Post Effects/Volumetric Fog" {
//   Properties {
//    _MainTex ("Base (RGB)", 2D) = "black" {}
//   }
//   Fallback Off
//   SubShader 1/1 {
//     Pass 1/1 {
//       ZTest Always
//       ZWrite Off
//       Cull Off
//       Fog { Mode Off }
//       Program "fp" {
//         SubProgram "d3d9 " {
//           Keywords { "CAUSTICS_ON" "INGAME" "WATER_BELOW" }
//           Matrix 0 [sunshine_WorldToSunVP]
//           Matrix 4 [sunshine_CascadeRanges]
//           Matrix 8 [_InverseViewMatrix]
//           Vector 12 [_WorldSpaceCameraPos]
//           Vector 13 [_ZBufferParams]
//           Vector 14 [sunshine_ShadowParamsAndHalfTexel]
//           Vector 15 [sunshine_OvercastCoord]
//           Vector 16 [sunshine_OvercastVectorsUV]
//           Vector 17 [sunshine_ShadowCoordDepthStart]
//           Vector 18 [sunshine_ShadowToWorldScale]
//           Vector 19 [sunshine_CascadeNearRatiosSq]
//           Vector 20 [sunshine_CascadeFarRatiosSq]
//           Vector 21 [sunshine_ShadowFadeParams]
//           Vector 22 [_SunColor]
//           Float 23 [_SunFade]
//           Float 24 [_BelowVisibility]
//           Vector 25 [_WaterSunColor]
//           Vector 26 [_UnderwaterColor]
//           SetTexture 0 [_CameraDepthNormalsTexture] 2D 0
//           SetTexture 1 [_CameraDepthTexture] 2D 1
//           SetTexture 2 [_MainTex] 2D 2
//           SetTexture 3 [_CausticsBump] 2D 3
//           SetTexture 4 [sunshine_Lightmap] 2D 4
//           SetTexture 5 [sunshine_OvercastMap] 2D 5
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    def c27, 2.00000000, 0.00000000, 1.00000000, -0.50000000
    def c28, 0.39990234, 0.00000000, -0.14990234, 0.50000000
    def c29, 0.60009766, 0.89990234, 1.00000000, 0.11999512
    def c30, 0.70019531, 0.30004883, 0.25000000, 0.00750000
    def c31, 0.01500000, 4.00000000, 3.80078125, 2.40039063
    def c32, 3.55539989, 0.00000000, -1.77769995, 1.00000000
    def c33, -1.00000000, 123456792.00000000, 0, 0
    def c34, 1.00000000, 0.00392157, 0.00001538, 0.00000006
    def c35, 0.39990234, 0.79980469, 1.00000000, 0
    dcl_texcoord0 v0.xy
    dcl_texcoord2 v1.xyz
    dcl_texcoord3 v2.xyz

def c220, 0, 1, 0.0625, 0.5
dcl_2d s12
texldl r31, c220.z, s12

    texld r0.x, v0, s1 // _CameraDepthTexture
    mad r0.x, r0, c13, c13.y // _ZBufferParams
    rcp r0.x, r0.x
    mul r2.xyz, r0.x, v2
    add r0.xyz, r2, c12 // _WorldSpaceCameraPos

// In order to fix the depth of the highlights on the sand of the water
// caustics and the underwater shadows, we need to apply a stereo correction to
// r0, which is in world-coordinates, but we need either view-space or
// projection-space coordinates to apply a stereo correction.
// This shader has the inverse view matrix already, so we can use that and it's
// inverse (in c170 thanks to Helix mod) to change between world-space and
// view-space, but we still need part of the inverse projection matrix to be
// able to correct view-space coords, so we use the same technique that we used
// to fix Unity shadows to calculate it.

// Calculate P.I[0,0] required for stereo corrections in view-space:
// Transpose first component of MV.I matrix into r30:
mov r30.x, c180.x
mov r30.y, c181.x
mov r30.z, c182.x
mov r30.w, c183.x
dp4 r30.x, r30, c190 // Calculate P[0,0]
rcp r30.x, r30.x // Calculate P.I[0,0]

// Convert r0 to view-space coords:
mov r29.xyz, r0
mov r29.w, c220.y
dp4 r28.x, r29, c170
dp4 r28.y, r29, c171
dp4 r28.z, r29, c172
dp4 r28.w, r29, c173

// Apply view-space stereo correction formula:
add r31.w, r28.z, r31.y // I'm not sure why I'm adding and not subtracting, but it lines it up perfectly!
mul r31.w, r31.w, r31.x
mad r28.x, r31.w, r30.x, r28.x

// Convert back to world-space coords:
dp4 r0.x, r28, c8
dp4 r0.y, r28, c9
dp4 r0.z, r28, c10



    mov r0.w, c27.z
    dp4 r4.x, r0, c0
    dp4 r2.w, r0, c2
    dp4 r0.w, r0, c1
    mov r4.y, r0.w
    mov r1.x, r4
    mov r1.y, r0.w
    mov r1.z, r2.w
    add r1.xyz, r1, -c17
    mul r1.xyz, r1, c18
    dp3 r4.z, r1, r1
    mul r1.x, r4.z, c33.y
    frc r1.x, r1
    mul r1.x, -r1, c14.y
    add r1.x, r1, c27.z
    mad r3, -r4.z, r1.x, c20
    mad r1, r4.z, r1.x, -c19
    cmp r3, r3, c27.z, c27.y
    cmp r1, r1, c27.z, c27.y
    mul r1, r1, r3
    mul r3, r1.y, c5
    mad r3, r1.x, c4, r3
    mad r3, r1.z, c6, r3
    mad r1, r1.w, c7, r3
    mad r1.xy, r1.zwzw, r4, r1
    texld r1, r1, s4
    dp4 r1.x, r1, c34
    add r1.x, r2.w, -r1
    dp3_pp r1.w, v1, v1
    rsq_pp r1.w, r1.w
    mul_pp r3.xyz, r1.w, v1
    mad_sat r1.y, -r4.z, c21, c21.x
    cmp r1.x, r1, c27.z, c27.y
    mad r1.z, -r1.x, r1.y, c27
    mul r1.xy, r4.x, c16
    add r1.xy, r1, c15
    mad r1.xy, r0.w, c16.zwzw, r1
    texld r0.w, r1, s5
    mad r1.y, -r1.z, r0.w, c27.z
    rcp_pp r1.x, -r3.y
    mul_pp r0.w, -r0.y, r1.x
    mul r1.w, -r1.y, c14.x
    mad r1.xyz, -r3, r0.w, r0
    mul_pp r6.xyz, r1, c29.w
    mul_pp r1.xy, r6.xzzw, c27.x
    add r0.x, r1.w, c27.z
    add r5.xy, r1, c30.w
    mul r0.z, r0.x, r0.x
    texld r0.x, r5, s3
    texld r4.x, r1, s3
    add r1.xy, r1, c31.x
    texld r1.x, r1, s3
    mov r4.z, r1.x
    texld r5.x, r6.xzzw, s3
    add r1.xy, r6.xzzw, c31.x
    add r0.w, -r0.y, r6.y
    mov r4.y, r0.x
    texld r0.x, r1, s3
    mov r5.z, r0.x
    abs r0.x, r0.w
    add r6.xy, r6.xzzw, c30.w
    texld r1.x, r6, s3
    mov r5.y, r1.x
    mov r0.w, c24.x
    texld r1.xyz, v0, s0
    mad r1.xyz, r1, c32.xxyw, c32.zzww
    mul r0.w, c30.z, r0
    rcp r0.w, r0.w
    mul_sat r0.x, r0, r0.w
    dp3 r1.z, r1, r1
    add r0.x, -r0, c27.z
    add r4.xyz, r4, -r5
    mad r4.xyz, r0.x, r4, r5
    mul_sat r1.w, r0.x, c27.x
    rcp r0.w, r1.z
    mul r0.w, r0, c27.x
    dp3 r0.x, r2, r2
    rsq r0.x, r0.x
    mul r2.xyz, r0.x, -r2
    mul r5.xy, r0.w, r1
    add r5.z, r0.w, c33.x
    dp3 r1.z, r5, c10
    dp3 r1.x, r5, c8
    dp3 r1.y, r5, c9
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul r1.xyz, r0.w, r1
    dp3 r0.w, -r3, r1
    mov_pp r5.xyz, c22
    max r0.w, r0, c27.y
    mul r0.w, r0, r1
    add r4.xyz, r4, r4
    mul_pp r5.xyz, c31.yzww, r5
    mul r1.xyz, r4, r5
    mul r0.w, r0, c23.x
    mul r4.xyz, r1, r0.w
    texld r1, v0, s2
    dp3_pp r0.w, r2, r3
    mad r3.xyz, r4, r0.z, r1
    mad_pp r0.w, r0, c30.x, c30.y
    mul r0.z, r0.w, r0.w
    dp3_pp r0.w, r2, c27.ywyw
    mul r2.xyz, r0.z, c25
    add_pp_sat r0.z, r0.w, c28.w
    add_pp r2.xyz, r2, c26
    mul r4.xyz, r2, r0.z
    mov r0.z, c23.x
    add r0.z, c27, -r0
    mov_pp r2.xyz, c29
    mad_pp r2.xyz, r0.z, c28, r2
    rcp r0.x, r0.x
    rcp r0.z, c24.x
    mul_sat r0.z, r0.x, r0
    mov r0.x, c24
    mul r0.x, c27, r0
    mad r4.xyz, r4, c27.x, -r3
    rcp r2.x, r2.x
    rcp r2.y, r2.y
    rcp r2.z, r2.z
    mul_sat r2.xyz, r0.z, r2
    rcp r0.z, r0.x
    add r0.x, r0.y, r0
    mul_sat r0.z, r0.x, r0
    mad r2.xyz, r2, r4, r3
    add_sat r0.x, -r0.y, c27
    mul_pp r2.xyz, r2, r0.z
    max r0.x, r0, c27.y
    mad_pp r2.xyz, r2, c35, -r1
    mul r0.x, r0, r0
    mad_pp oC0.xyz, r0.x, r2, r1
    mov_pp oC0.w, r1
