// CRC32: 01C17B3B | Unity headers extracted from Glass - Bumped Specular Forward.shader
// Shader "Beam Team/Standard/Transparent/Glass - Bumped Specular Forward" {
//   Properties {
//    _Color ("Glass Color (RGB) Transparency (A)", Color) = (1,1,1,1)
//    _MainTex ("Diffuse Albedo (NOT IN USE)", 2D) = "white" { }
//    _SpecTex ("Specular Albedo (RGB) Gloss (A)", 2D) = "white" { }
//    _BumpTex ("Normal Map", 2D) = "bump" { }
//   }
//   Fallback Off
//   SubShader 1/1 {
//     Tags { "QUEUE"="Transparent+550" "FORCENOSHADOWCASTING"="true" "RenderType"="Transparent" }
//     Pass 1/2 {
//       Name "FORWARD"
//       Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent+550" "FORCENOSHADOWCASTING"="true" "RenderType"="Transparent" }
//       ZWrite Off
//       Blend One OneMinusSrcAlpha
//       ColorMask RGB
//       GpuProgramID 20791
//       Program "fp" {
//         SubProgram "d3d9 " {
//           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "LIGHTMAP_OFF" "SUNSHINE_DISABLED" }
//           Vector 12 [_Color]
//           Vector 10 [_LightColor0]
//           Vector 0 [_WorldSpaceCameraPos]
//           Vector 1 [_WorldSpaceLightPos0]
//           Vector 11 [unity_LightGammaCorrectionConsts]
//           Vector 2 [unity_SpecCube0_BoxMax]
//           Vector 3 [unity_SpecCube0_BoxMin]
//           Vector 5 [unity_SpecCube0_HDR]
//           Vector 4 [unity_SpecCube0_ProbePosition]
//           Vector 6 [unity_SpecCube1_BoxMax]
//           Vector 7 [unity_SpecCube1_BoxMin]
//           Vector 9 [unity_SpecCube1_HDR]
//           Vector 8 [unity_SpecCube1_ProbePosition]
//           SetTexture 0 [unity_SpecCube0] CUBE 0
//           SetTexture 1 [unity_SpecCube1] CUBE 1
//           SetTexture 2 [_BumpTex] 2D 2
//           SetTexture 3 [_SpecTex] 2D 3
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    def c13, 2, -1, 0, 1
    def c14, 0.5, 0.75, 7, 0.999989986
    def c15, 0.00100000005, 31.622776, 9.99999975e-005, 10
    def c16, 0.967999995, 0.0299999993, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3

def c220, 0, 1, 0.0625, 0.5
dcl_2d s15

texldl r31, c220.z, s15

// Unity reflection/specular fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I ../.. --stereo-sampler-ps=s15 --fix-unity-reflection --only-autofixed --ignore-register-errors Beam Team_Standard_Transparent_Glass - Bumped Specular Forward/fp/01C17B3B.txt
mov r30, c0
mov r29, c220.x
mul r29.x, r31.x, -r31.y
dp4 r28.x, c180, r29
dp4 r28.y, c181, r29
dp4 r28.z, c182, r29
dp4 r28.w, c183, r29
dp4 r29.x, c190, r28
dp4 r29.y, c191, r28
dp4 r29.z, c192, r28
add r30.xyz, r30, -r29

    mov r0.x, v1.w
    mov r0.y, v2.w
    mov r0.z, v3.w
    add r1.xyz, -r0, r30
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul_pp r2.xyz, r0.w, r1
    texld_pp r3, v0, s2
    mad_pp r3.xy, r3.wyzw, c13.x, c13.y
    dp2add_sat_pp r1.w, r3, r3, c13.z
    add_pp r1.w, -r1.w, c13.w
    rsq_pp r1.w, r1.w
    rcp_pp r3.z, r1.w
    nrm_pp r4.xyz, r3
    texld_pp r3, v0, s3
    dp3_pp r5.x, v1, r4
    dp3_pp r5.y, v2, r4
    dp3_pp r5.z, v3, r4
    dp3_pp r1.w, r5, c1
    max_pp r2.w, r1.w, c13.z
    add_pp r1.w, -r3.w, c13.w
    dp3_pp r4.x, -r2, r5
    add_pp r4.x, r4.x, r4.x
    mad_pp r4.xyz, r5, -r4.x, -r2
    mov r6.zw, c13
    if_lt -c4.w, r6.z
    nrm_pp r7.xyz, r4
    add r8.xyz, -r0, c2
    rcp r9.x, r7.x
    rcp r9.y, r7.y
    rcp r9.z, r7.z
    mul_pp r8.xyz, r8, r9
    add r10.xyz, -r0, c3
    mul_pp r9.xyz, r9, r10
    cmp_pp r8.xyz, -r7, r9, r8
    min_pp r4.w, r8.y, r8.x
    min_pp r5.w, r8.z, r4.w
    mov r8.xyz, c3
    add r8.xyz, r8, c2
    mov r6.x, c14.x
    mad r9.xyz, r8, r6.x, -c4
    add r9.xyz, r0, r9
    mad r7.xyz, r7, r5.w, r9
    mad_pp r7.xyz, r8, -c14.x, r7
    else
    mov_pp r7.xyz, r4
    endif
    pow_pp r4.w, r1.w, c14.y
    mul_pp r7.w, r4.w, c14.z
    texldl_pp r8, r7, s0
    pow_pp r4.w, r8.w, c5.y
    mul_pp r4.w, r4.w, c5.x
    mul_pp r9.xyz, r8, r4.w
    mov r10.xw, c14
    if_lt c3.w, r10.w
    if_lt -c8.w, r6.z
    nrm_pp r6.xyz, r4
    add r10.yzw, -r0.xxyz, c6.xxyz
    rcp r11.x, r6.x
    rcp r11.y, r6.y
    rcp r11.z, r6.z
    mul_pp r10.yzw, r10, r11.xxyz
    add r12.xyz, -r0, c7
    mul_pp r11.xyz, r11, r12
    cmp_pp r10.yzw, -r6.xxyz, r11.xxyz, r10
    min_pp r5.w, r10.z, r10.y
    min_pp r8.w, r10.w, r5.w
    mov r11.xyz, c6
    add r10.yzw, r11.xxyz, c7.xxyz
    mad r11.xyz, r10.yzww, r10.x, -c8
    add r0.xyz, r0, r11
    mad r0.xyz, r6, r8.w, r0
    mad_pp r7.xyz, r10.yzww, -c14.x, r0
    else
    mov_pp r7.xyz, r4
    endif
    texldl_pp r7, r7, s1
    pow_pp r0.x, r7.w, c9.y
    mul_pp r0.x, r0.x, c9.x
    mul_pp r0.xyz, r7, r0.x
    mad r4.xyz, r4.w, r8, -r0
    mad_pp r9.xyz, c3.w, r4, r0
    endif
    nrm_pp r0.xyz, r5
    max_pp r4.x, r3.x, r3.y
    max_pp r5.x, r4.x, r3.z
    add_pp r4.x, -r5.x, c13.w
    add_pp r4.y, -r4.x, c13.w
    mad_pp oC0.w, c12.w, r4.x, r4.y
    mad_pp r1.xyz, r1, r0.w, c1
    dp3_pp r0.w, r1, r1
    add r4.x, -r0.w, c15.x
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r4.x, c15.y, r0.w
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r0, r1
    max_pp r4.x, r0.w, c13.z
    dp3_pp r0.x, r0, r2
    max_pp r2.x, r0.x, c13.z
    dp3_pp r0.x, c1, r1
    mul_pp r0.y, r1.w, r1.w
    mul_pp r0.z, r0.y, c11.w
    mad_pp r0.y, r0.y, -c11.w, r6.w
    mad_pp r0.w, r2.w, r0.y, r0.z
    mad_pp r0.y, r2.x, r0.y, r0.z
    mad r0.y, r0.w, r0.y, c15.z
    rcp_pp r0.y, r0.y
    add_pp r0.z, -r1.w, c13.w
    mad_pp r0.z, r0.z, c16.x, c16.y
    log_pp r0.z, r0.z
    rcp r0.z, r0.z
    mul_pp r0.z, r0.z, c15.w
    mul_pp r0.w, r0.z, r0.z
    mad_pp r0.z, r0.z, r0.z, c13.w
    mul_pp r0.z, r0.z, c11.y
    pow_pp r1.x, r4.x, r0.w
    mul_pp r0.z, r0.z, r1.x
    mul_pp r0.y, r0.z, r0.y
    mul_pp r0.y, r2.w, r0.y
    mul_pp r0.y, r0.y, c11.x
    add_sat_pp r0.z, r3.w, r4.y
    mul_pp r1.xyz, r0.y, c10
    cmp_pp r1.xyz, r0.y, r1, c13.z
    add_pp r0.y, -r0.x, c13.w
    cmp_pp r0.x, r0.x, r0.y, c13.w
    mul_pp r0.y, r0.x, r0.x
    mul_pp r0.y, r0.y, r0.y
    mul_pp r0.x, r0.x, r0.y
    lrp_pp r2.yzw, r0.x, c13.w, r3.xxyz
    add_pp r0.x, -r2.x, c13.w
    mul_pp r0.y, r0.x, r0.x
    mul_pp r0.y, r0.y, r0.y
    mul_pp r0.x, r0.x, r0.y
    lrp_pp r4.xyz, r0.x, r0.z, r3
    mul_pp r0.xyz, r4, r9
    mad_pp r0.xyz, r1, r2.yzww, r0
    add_pp oC0.xyz, r0, c12
