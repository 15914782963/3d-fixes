// CRC32: 67DFA1A0 | Matched 2 variants of 1 shaders: BEAM Team/Post Effects/Volumetric Fog
// 
//    Unity headers extracted from BEAMTeamVolumetricFog.shader
//    Shader "BEAM Team/Post Effects/Volumetric Fog" {
//      Properties {
//       _MainTex ("Base (RGB)", 2D) = "black" {}
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Pass 1/1 {
//          ZTest Always
//          ZWrite Off
//          Cull Off
//          Fog { Mode Off }
//          Program "fp" {
//            SubProgram "d3d9 " {
// 1:           Keywords { "CAUSTICS_ON" "INGAME" "WATER_ABOVE" }
// 2:           Keywords { "CAUSTICS_ON" "INTRO" "WATER_ABOVE" }
//              Matrix 0 [sunshine_WorldToSunVP]
//              Matrix 4 [sunshine_CascadeRanges]
//              Matrix 8 [_InverseViewMatrix]
//              Vector 12 [_WorldSpaceCameraPos]
//              Vector 13 [_ZBufferParams]
//              Vector 14 [sunshine_ShadowParamsAndHalfTexel]
//              Vector 15 [sunshine_OvercastCoord]
//              Vector 16 [sunshine_OvercastVectorsUV]
//              Vector 17 [sunshine_ShadowCoordDepthStart]
//              Vector 18 [sunshine_ShadowToWorldScale]
//              Vector 19 [sunshine_CascadeNearRatiosSq]
//              Vector 20 [sunshine_CascadeFarRatiosSq]
//              Vector 21 [sunshine_ShadowFadeParams]
//              Vector 22 [_SunColor]
//              Float 23 [_SunFade]
//              Float 24 [_StormFade]
//              Float 25 [_AboveVisibility]
//              Vector 26 [_WaterColor]
//              Vector 27 [_WaterSunColor]
//              Float 28 [_WaterHeight]
//              SetTexture 0 [_CameraDepthNormalsTexture] 2D 0
//              SetTexture 1 [_CameraDepthTexture] 2D 1
//              SetTexture 2 [_MainTex] 2D 2
//              SetTexture 3 [_CausticsBump] 2D 3
//              SetTexture 4 [sunshine_Lightmap] 2D 4
//              SetTexture 5 [sunshine_OvercastMap] 2D 5
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    ps_3_0
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    def c29, 0.00000000, 2.71828198, 0.25000000, 1.00000000
    def c30, 0.25000000, 0.05029297, 0.00000000, -0.50000000
    def c31, 0.60009766, 0.89990234, 1.00000000, 0.85009766
    def c32, 0.70019531, 0.30004883, 0.50000000, 1.50000000
    def c33, 0.11999512, 2.00000000, 0.00750000, 0.01500000
    def c34, 4.00000000, 3.80078125, 2.40039063, -1.00000000
    def c35, 3.55539989, 0.00000000, -1.77769995, 1.00000000
    def c36, 123456792.00000000, 2.00000000, 1.59960938, 1.45019531
    def c37, 1.00000000, 0.00392157, 0.00001538, 0.00000006
    dcl_texcoord0 v0.xy
    dcl_texcoord2 v1.xyz
    dcl_texcoord3 v2.xyz

def c220, 0, 1, 0.0625, 0.5
dcl_2d s12
texldl r31, c220.z, s12

    texld r0.x, v0, s1 // _CameraDepthTexture
    mad r0.x, r0, c13, c13.y // _ZBufferParams
    rcp r0.x, r0.x
    mul r3.xyz, r0.x, v2
    add r2.xyz, r3, c12 // _WorldSpaceCameraPos


// In order to fix the depth of the highlights on the sand of the water
// caustics and the underwater shadows, we need to apply a stereo correction to
// r2, which is in world-coordinates, but we need either view-space or
// projection-space coordinates to apply a stereo correction.
// This shader has the inverse view matrix already, so we can use that and it's
// inverse (in c170 thanks to Helix mod) to change between world-space and
// view-space, but we still need part of the inverse projection matrix to be
// able to correct view-space coords, so we use the same technique that we used
// to fix Unity shadows to calculate it.

// Calculate P.I[0,0] required for stereo corrections in view-space:
// Transpose first component of MV.I matrix into r30:
mov r30.x, c180.x
mov r30.y, c181.x
mov r30.z, c182.x
mov r30.w, c183.x
dp4 r30.x, r30, c190 // Calculate P[0,0]
rcp r30.x, r30.x // Calculate P.I[0,0]

// Convert r2 to view-space coords:
mov r29.xyz, r2
mov r29.w, c220.y
dp4 r28.x, r29, c170
dp4 r28.y, r29, c171
dp4 r28.z, r29, c172
dp4 r28.w, r29, c173

// Apply view-space stereo correction formula:
add r31.w, r28.z, r31.y // I'm not sure why I'm adding and not subtracting, but it lines it up perfectly!
mul r31.w, r31.w, r31.x
mad r28.x, r31.w, r30.x, r28.x

// Convert back to world-space coords:
dp4 r2.x, r28, c8
dp4 r2.y, r28, c9
dp4 r2.z, r28, c10


    mov r2.w, c29
    dp4 r4.x, r2, c0
    dp4 r3.w, r2, c2
    dp4 r2.w, r2, c1
    mov r4.y, r2.w
    mov r0.z, r3.w
    mov r0.x, r4
    mov r0.y, r2.w
    add r0.xyz, r0, -c17
    mul r0.xyz, r0, c18
    dp3 r4.z, r0, r0
    mul r0.x, r4.z, c36
    frc r0.x, r0
    mul r0.x, -r0, c14.y
    add r0.x, r0, c29.w
    mad r1, -r4.z, r0.x, c20
    mad r0, r4.z, r0.x, -c19
    cmp r1, r1, c29.w, c29.x
    cmp r0, r0, c29.w, c29.x
    mul r0, r0, r1
    mul r1, r0.y, c5
    mad r1, r0.x, c4, r1
    mad r1, r0.z, c6, r1
    mad r0, r0.w, c7, r1
    mad r0.xy, r0.zwzw, r4, r0
    texld r0, r0, s4
    dp4 r0.x, r0, c37
    mul r0.zw, r4.x, c16.xyxy
    add r0.x, r3.w, -r0
    add r1.xy, r0.zwzw, c15
    mad r1.xy, r2.w, c16.zwzw, r1
    mad_sat r0.y, -r4.z, c21, c21.x
    cmp r0.x, r0, c29.w, c29
    mad r1.z, -r0.x, r0.y, c29.w
    texld r1.w, r1, s5
    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mul_pp r0.yzw, r0.x, v1.xxyz
    rcp_pp r0.x, -r0.z
    mul_pp r0.x, -r2.y, r0
    mad r1.w, -r1.z, r1, c29
    mad r1.xyz, -r0.yzww, r0.x, r2
    mul_pp r4.xyz, r1, c33.x
    mul_pp r1.xy, r4.xzzw, c33.y
    mul r0.x, -r1.w, c14
    add r0.x, r0, c29.w
    add r6.xy, r1, c33.z
    mul r2.w, r0.x, r0.x
    texld r0.x, r6, s3
    texld r5.x, r1, s3
    add r1.xy, r1, c33.w
    texld r1.x, r1, s3
    mov r5.z, r1.x
    add r1.xy, r4.xzzw, c33.z
    mov r5.y, r0.x
    texld r0.x, r1, s3
    texld r1.xyz, v0, s0
    mad r1.xyz, r1, c35.xxyw, c35.zzww
    dp3 r1.z, r1, r1
    texld r6.x, r4.xzzw, s3
    mov r6.y, r0.x
    add r7.xy, r4.xzzw, c33.w
    texld r0.x, r7, s3
    mov r6.z, r0.x
    rcp r1.z, r1.z
    mul r0.x, r1.z, c33.y
    mul r4.xz, r0.x, r1.xyyw
    add r4.w, r0.x, c34
    mov r0.x, c25
    dp3 r1.z, r4.xzww, c10
    dp3 r1.x, r4.xzww, c8
    dp3 r1.y, r4.xzww, c9
    dp3 r1.w, r1, r1
    rsq r3.w, r1.w
    add r1.w, -r2.y, r4.y
    mul r1.xyz, r3.w, r1
    dp3 r3.w, -r0.yzww, r1
    mul r0.x, c29.z, r0
    rcp r4.x, r0.x
    abs r1.w, r1
    mul_sat r1.w, r1, r4.x
    add r5.xyz, r5, -r6
    add r1.w, -r1, c29
    mad r4.xyz, r1.w, r5, r6
    add r1.xyz, r4, r4
    mov_pp r4.xyz, c22
    mul_pp r4.xyz, c34, r4
    max r3.w, r3, c29.x
    mul_sat r1.w, r1, c33.y
    mul r1.w, r3, r1
    mul r4.xyz, r1, r4
    mul r3.w, r1, c23.x
    texld r1, v0, s2
    mul r4.xyz, r4, r3.w
    mad r5.xyz, r4, r2.w, r1
    min_pp r0.x, r0, c12.y
    dp3 r2.w, -r3, -r3
    max_pp r4.y, r0.x, c29.x
    mov_pp r4.xz, c12
    add r4.xyz, -r2, r4
    rsq r2.x, r2.w
    mul r3.xyz, r2.x, -r3
    dp3_pp r0.w, r3, r0.yzww
    rcp_pp r0.x, r4.y
    mul_pp r0.x, -r2.y, r0
    dp3_pp r2.x, r3, c30.zwzw
    mad_pp r0.w, r0, c32.x, c32.y
    mul r0.w, r0, r0
    mul r0.xyz, r4, r0.x
    mul r3.xyz, r0.w, c27
    add_pp_sat r2.x, r2, c32.z
    mul r3.xyz, r3, r2.x
    dp3 r0.w, r0, r0
    mul r0.xyz, r3, c32.w
    add_pp r0.xyz, r0, c26
    add r4.xyz, r0, -r5
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    rcp r2.x, c25.x
    mul r2.x, -r0.w, r2
    mov r0.w, c23.x
    mov_pp r2.z, c24.x
    mov_pp r0.xyz, c31
    mad_pp r0.xyz, c30, r2.z, r0
    mov_pp r2.z, c24.x
    add_pp r3.xyz, -r0, c31.zyww
    add_pp r2.z, c29.w, -r2
    add r0.w, c29, -r0
    mul r0.w, r0, r2.z
    mad_pp r3.xyz, r0.w, r3, r0
    pow_sat r0, c29.y, r2.x
    rcp r3.x, r3.x
    rcp r3.y, r3.y
    rcp r3.z, r3.z
    add r0.x, -r0, c29.w
    mul_sat r0.xyz, r0.x, r3
    mad r3.xyz, r0, r4, r5
    mul r4.xyz, r3, c23.x
    mul r4.xyz, r4, c36.yzww
    add r0.xyz, -r0, c29.w
    add_sat r0.w, -r2.y, c28.x
    add_pp r4.xyz, r4, -r3
    mad_pp r2.xyz, r0, r4, r3
    max r0.x, r0.w, c29
    add_pp r2.xyz, r2, -r1
    mul r0.x, r0, r0
    mad_pp oC0.xyz, r0.x, r2, r1
    mov_pp oC0.w, r1
