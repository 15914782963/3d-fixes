// CRC32: B2C70A18 | Unity headers extracted from Ocean Underwater.shader
// Shader "Beam Team/Ocean/Ocean Underwater Surface" {
//   Properties {
//    _Bump ("Bump (RGB)", 2D) = "bump" {}
//    _UnderwaterRefraction ("Refraction", 2D) = "" {}
//    _UnderwaterReflectionLevel ("Refraction: Amount of distortion", Float) = 0.4
//    _Tile ("UV Tiling", Float) = 1
//    _SunSpec ("Sun Spec", Float) = 1000
//   }
//   Fallback Off
//   SubShader 1/1 {
//     Tags { "QUEUE"="Geometry" "RenderType"="Opaque" }
//     Pass 1/1 {
//       Tags { "QUEUE"="Geometry" "RenderType"="Opaque" }
//       Fog { Mode Off }
//       Program "vp" {
//         SubProgram "d3d9 " {
//           Bind "vertex" Vertex
//           Bind "normal" Normal
//           Bind "tangent" TexCoord2
//           Matrix 0 [glstate_matrix_mvp]
//           Matrix 4 [_Object2World]
//           Matrix 8 [_World2Object]
//           Vector 12 [_WorldSpaceCameraPos]
//           Vector 13 [_ProjectionParams]
//           Vector 14 [_ScreenParams]
//           Vector 15 [unity_Scale]
//           Vector 16 [_MainTex_TexelSize]
//           Float 17 [_FourierSize]
//           Float 18 [_WaterHeight]
//           Vector 19 [_SunPosition]
//           SetTexture 0 [_Map3] 2D 0
//           SetTexture 1 [_Map4] 2D 1
//           SetTexture 2 [_Map0] 2D 2
//         }
//       }
//     }
//   }
// }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_tangent v2
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord2 o2
    dcl_texcoord3 o3
    dcl_texcoord4 o4
    dcl_texcoord5 o5
    def c20, 3.20000005, 0.5, 0, 1
    def c21, 0, 2, 0, 0
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

def c220, 0, 1, 0.0625, 0.5
dcl_2d s3

    mov r2.w, v0
    mov r2.z, c20
    dp4 r0.x, v0, c4
    dp4 r0.y, v0, c6
    mul r2.xy, r0, c17.x
    texldl r0, r2.xyzz, s0
    mul r1, r0, c20.x
    add r1.zw, r1.xyxy, r1
    texldl r0, r2.xyzz, s1
    mad r1.zw, r0.xyxy, c20.x, r1
    texldl r1.x, r2.xyzz, s2
    mad r0.xz, r0.zyww, c20.x, r1.zyww
    add r0.y, r1.x, c18.x
    add r4.xyz, v0, r0
    mov r2.xyz, r4
    dp4 r1.w, r2, c3
    dp4 r1.x, r2, c0
    dp4 r1.y, r2, c1

mov o0, r1 // Relocated from line 79 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-vertex-halo --add-fog-on-sm3-update --only-autofixed --ignore-register-errors B2C70A18.txt
texldl r8, c220.z, s3
add r8.w, r1.w, -r8.y
mad r1.x, r8.w, r8.x, r1.x

    mul r0.xyz, r1.xyww, c20.y
    mul r0.y, r0, c13.x
    dp4 r1.z, r2, c2
    mad r0.xy, r0.z, c14.zwzw, r0
    dp4 r3.z, r2, c6
    dp4 r3.y, r2, c5
    dp4 r3.x, r2, c4
    mov r2.x, c20.z
    mov r0.zw, r1
    mov r5.xyz, r4
    mov r7.xy, r4.xzzw
    if_lt c16.y, r2.x
      add r7.y, -r7, c20.w
    endif
    mov r2.xyz, v2
    mul r4.xyz, v1.zxyw, r2.yzxw
    mov r2.xyz, v2
    mad r4.xyz, v1.yzxw, r2.zxyw, -r4
    mov r2.xyz, c12
    mov r2.w, c20
    dp4 r6.z, r2, c10
    dp4 r6.x, r2, c8
    dp4 r6.y, r2, c9
    mad r5.xyz, r6, c15.w, -r5
    mov r2.w, c20
    dp3 r2.y, r5, r4
    dp3 r2.x, r5, v2
    dp3 r2.z, v1, r5
    add r5.xyz, r2, c21.xxyw
    mov r2.x, -c19
    mov r2.y, c19
    mov r2.z, -c19
    dp4 r6.z, r2, c10
    dp4 r6.x, r2, c8
    dp4 r6.y, r2, c9
    dp3 r2.w, r5, r5
    rsq r2.w, r2.w
    dp3 r2.y, r4, r6
    dp3 r2.x, v2, r6
    dp3 r2.z, v1, r6
    dp3 r3.w, r2, r2
    rsq r3.w, r3.w
    mul r2.xyz, r3.w, r2
    mul o4.xyz, r2.w, r5
    mov o5.xyz, -r2

//     mov o0, r1 // Relocated to line 34 with shadertool.py
mov o0.z, r1.z // Inserted by shadertool.py

    mov o1, r0
    mov o2.xyz, r3
    mul o3.xy, r7, c17.x

// approximately 72 instruction slots used (6 texture, 66 arithmetic)
