// CRC32: ADBF63E5 | Matched 7 variants of 7 shaders: BEAM Team/Skylight/Imposter/Imposter - Billboard Diffuse, BEAM Team/Skylight/Imposter/Imposter - Stippling, BEAM Team/Skylight/Normal/Diffuse, BEAM Team/Skylight/Normal/Emissive - Diffuse, BEAM Team/Skylight/Transparent/Cutout - Diffuse, BEAM Team/Skylight/Transparent/Cutout - Diffuse Double Sided, BEAM Team/Skylight/Transparent/Cutout - Emissive - Diffuse
// 
//    Unity headers extracted from Imposter - Finished Billboard.shader
//    Shader "BEAM Team/Skylight/Imposter/Imposter - Billboard Diffuse" {
//      Properties {
//       _Color ("Diffuse Color", Color) = (1,1,1,1)
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//       _MainTex ("Diffuse Albedo (RGB) Alpha (A)", 2D) = "white" {}
//      }
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "ForceNoShadowCasting"="true" "QUEUE"="Transparent-150" "IGNOREPROJECTOR"="true" "RenderType"="ImposterTransparentCutout" }
//        Pass 1/2 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "ForceNoShadowCasting"="true" "QUEUE"="Transparent-150" "IGNOREPROJECTOR"="true" "RenderType"="ImposterTransparentCutout" }
//          Cull Off
//          ColorMask RGB
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "SUNSHINE_DISABLED" "VERTEXLIGHT_ON" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_WorldSpaceCameraPos]
//              Vector 9 [_ProjectionParams]
//              Vector 10 [_ScreenParams]
//              Vector 11 [unity_4LightPosX0]
//              Vector 12 [unity_4LightPosY0]
//              Vector 13 [unity_4LightPosZ0]
//              Vector 14 [unity_4LightAtten0]
//              Vector 15 [unity_LightColor0]
//              Vector 16 [unity_LightColor1]
//              Vector 17 [unity_LightColor2]
//              Vector 18 [unity_LightColor3]
//              Vector 19 [unity_SHAr]
//              Vector 20 [unity_SHAg]
//              Vector 21 [unity_SHAb]
//              Vector 22 [unity_SHBr]
//              Vector 23 [unity_SHBg]
//              Vector 24 [unity_SHBb]
//              Vector 25 [unity_SHC]
//              Vector 26 [unity_Scale]
//              Vector 27 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from Imposter - Stippling.shader
//    Shader "BEAM Team/Skylight/Imposter/Imposter - Stippling" {
//      Properties {
//       _Color ("Color", Color) = (1,1,1,1)
//       _MainTex ("Texture", 2D) = "white" {}
//       _Cutoff ("Alpha cutoff", Range(0,1)) = 0.5
//       _Stippling ("Stippling", Range(0,1)) = 0
//       _StipplingNoise ("Alpha (A)", 2D) = "white" {}
//      }
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "ForceNoShadowCasting"="true" "QUEUE"="Transparent-150" "IGNOREPROJECTOR"="true" "RenderType"="ImposterTransparentCutout" }
//        Pass 1/2 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "ForceNoShadowCasting"="true" "QUEUE"="Transparent-150" "IGNOREPROJECTOR"="true" "RenderType"="ImposterTransparentCutout" }
//          Cull Off
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "SUNSHINE_DISABLED" "VERTEXLIGHT_ON" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_WorldSpaceCameraPos]
//              Vector 9 [_ProjectionParams]
//              Vector 10 [_ScreenParams]
//              Vector 11 [unity_4LightPosX0]
//              Vector 12 [unity_4LightPosY0]
//              Vector 13 [unity_4LightPosZ0]
//              Vector 14 [unity_4LightAtten0]
//              Vector 15 [unity_LightColor0]
//              Vector 16 [unity_LightColor1]
//              Vector 17 [unity_LightColor2]
//              Vector 18 [unity_LightColor3]
//              Vector 19 [unity_SHAr]
//              Vector 20 [unity_SHAg]
//              Vector 21 [unity_SHAb]
//              Vector 22 [unity_SHBr]
//              Vector 23 [unity_SHBg]
//              Vector 24 [unity_SHBb]
//              Vector 25 [unity_SHC]
//              Vector 26 [unity_Scale]
//              Vector 27 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from Normal - Diffuse.shader
//    Shader "BEAM Team/Skylight/Normal/Diffuse" {
//      Properties {
//       _Color ("Diffuse Albedo", Color) = (1,1,1,1)
//       _MainTex ("Diffuse Albedo (RGB) Alpha (A)", 2D) = "white" {}
//      }
//      Fallback "VertexLit"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "ForceNoShadowCasting"="true" "QUEUE"="Geometry" "RenderType"="Opaque" }
//        Pass 1/2 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "ForceNoShadowCasting"="true" "QUEUE"="Geometry" "RenderType"="Opaque" }
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "SUNSHINE_DISABLED" "VERTEXLIGHT_ON" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_WorldSpaceCameraPos]
//              Vector 9 [_ProjectionParams]
//              Vector 10 [_ScreenParams]
//              Vector 11 [unity_4LightPosX0]
//              Vector 12 [unity_4LightPosY0]
//              Vector 13 [unity_4LightPosZ0]
//              Vector 14 [unity_4LightAtten0]
//              Vector 15 [unity_LightColor0]
//              Vector 16 [unity_LightColor1]
//              Vector 17 [unity_LightColor2]
//              Vector 18 [unity_LightColor3]
//              Vector 19 [unity_SHAr]
//              Vector 20 [unity_SHAg]
//              Vector 21 [unity_SHAb]
//              Vector 22 [unity_SHBr]
//              Vector 23 [unity_SHBg]
//              Vector 24 [unity_SHBb]
//              Vector 25 [unity_SHC]
//              Vector 26 [unity_Scale]
//              Vector 27 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from Emissive - Diffuse.shader
//    Shader "BEAM Team/Skylight/Normal/Emissive - Diffuse" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _Multiplier ("Emission Multiplier", Range(0,100)) = 1
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" {}
//       _EmissionTex ("Emission Map (A)", 2D) = "white" {}
//      }
//      Fallback "VertexLit"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "ForceNoShadowCasting"="true" "QUEUE"="Geometry" "RenderType"="Opaque" }
//        Pass 1/2 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "ForceNoShadowCasting"="true" "QUEUE"="Geometry" "RenderType"="Opaque" }
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "SUNSHINE_DISABLED" "VERTEXLIGHT_ON" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_WorldSpaceCameraPos]
//              Vector 9 [_ProjectionParams]
//              Vector 10 [_ScreenParams]
//              Vector 11 [unity_4LightPosX0]
//              Vector 12 [unity_4LightPosY0]
//              Vector 13 [unity_4LightPosZ0]
//              Vector 14 [unity_4LightAtten0]
//              Vector 15 [unity_LightColor0]
//              Vector 16 [unity_LightColor1]
//              Vector 17 [unity_LightColor2]
//              Vector 18 [unity_LightColor3]
//              Vector 19 [unity_SHAr]
//              Vector 20 [unity_SHAg]
//              Vector 21 [unity_SHAb]
//              Vector 22 [unity_SHBr]
//              Vector 23 [unity_SHBg]
//              Vector 24 [unity_SHBb]
//              Vector 25 [unity_SHC]
//              Vector 26 [unity_Scale]
//              Vector 27 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from Cutout - Diffuse.shader
//    Shader "BEAM Team/Skylight/Transparent/Cutout - Diffuse" {
//      Properties {
//       _Color ("Diffuse Color", Color) = (1,1,1,1)
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//       _MainTex ("Diffuse Albedo (RGB) Alpha (A)", 2D) = "white" {}
//      }
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "ForceNoShadowCasting"="true" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//        Pass 1/2 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "ForceNoShadowCasting"="true" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//          ColorMask RGB
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "SUNSHINE_DISABLED" "VERTEXLIGHT_ON" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_WorldSpaceCameraPos]
//              Vector 9 [_ProjectionParams]
//              Vector 10 [_ScreenParams]
//              Vector 11 [unity_4LightPosX0]
//              Vector 12 [unity_4LightPosY0]
//              Vector 13 [unity_4LightPosZ0]
//              Vector 14 [unity_4LightAtten0]
//              Vector 15 [unity_LightColor0]
//              Vector 16 [unity_LightColor1]
//              Vector 17 [unity_LightColor2]
//              Vector 18 [unity_LightColor3]
//              Vector 19 [unity_SHAr]
//              Vector 20 [unity_SHAg]
//              Vector 21 [unity_SHAb]
//              Vector 22 [unity_SHBr]
//              Vector 23 [unity_SHBg]
//              Vector 24 [unity_SHBb]
//              Vector 25 [unity_SHC]
//              Vector 26 [unity_Scale]
//              Vector 27 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from Cutout - Diffuse Double Sided.shader
//    Shader "BEAM Team/Skylight/Transparent/Cutout - Diffuse Double Sided" {
//      Properties {
//       _Color ("Diffuse Color", Color) = (1,1,1,1)
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//       _MainTex ("Diffuse Albedo (RGB) Alpha (A)", 2D) = "white" {}
//      }
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "ForceNoShadowCasting"="true" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//        Pass 1/2 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "ForceNoShadowCasting"="true" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//          Cull Off
//          ColorMask RGB
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "SUNSHINE_DISABLED" "VERTEXLIGHT_ON" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_WorldSpaceCameraPos]
//              Vector 9 [_ProjectionParams]
//              Vector 10 [_ScreenParams]
//              Vector 11 [unity_4LightPosX0]
//              Vector 12 [unity_4LightPosY0]
//              Vector 13 [unity_4LightPosZ0]
//              Vector 14 [unity_4LightAtten0]
//              Vector 15 [unity_LightColor0]
//              Vector 16 [unity_LightColor1]
//              Vector 17 [unity_LightColor2]
//              Vector 18 [unity_LightColor3]
//              Vector 19 [unity_SHAr]
//              Vector 20 [unity_SHAg]
//              Vector 21 [unity_SHAb]
//              Vector 22 [unity_SHBr]
//              Vector 23 [unity_SHBg]
//              Vector 24 [unity_SHBb]
//              Vector 25 [unity_SHC]
//              Vector 26 [unity_Scale]
//              Vector 27 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from Cutout - Emissive - Diffuse.shader
//    Shader "BEAM Team/Skylight/Transparent/Cutout - Emissive - Diffuse" {
//      Properties {
//       _Color ("Diffuse Color", Color) = (1,1,1,1)
//       _Multiplier ("Emission Multiplier", Range(0.01,100)) = 1
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//       _MainTex ("Diffuse Albedo (RGB) Alpha (A)", 2D) = "white" {}
//       _EmissionTex ("Emission Map (A)", 2D) = "white" {}
//      }
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "ForceNoShadowCasting"="true" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//        Pass 1/2 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "ForceNoShadowCasting"="true" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//          ColorMask RGB
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "SUNSHINE_DISABLED" "VERTEXLIGHT_ON" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Vector 8 [_WorldSpaceCameraPos]
//              Vector 9 [_ProjectionParams]
//              Vector 10 [_ScreenParams]
//              Vector 11 [unity_4LightPosX0]
//              Vector 12 [unity_4LightPosY0]
//              Vector 13 [unity_4LightPosZ0]
//              Vector 14 [unity_4LightAtten0]
//              Vector 15 [unity_LightColor0]
//              Vector 16 [unity_LightColor1]
//              Vector 17 [unity_LightColor2]
//              Vector 18 [unity_LightColor3]
//              Vector 19 [unity_SHAr]
//              Vector 20 [unity_SHAg]
//              Vector 21 [unity_SHAb]
//              Vector 22 [unity_SHBr]
//              Vector 23 [unity_SHBg]
//              Vector 24 [unity_SHBb]
//              Vector 25 [unity_SHC]
//              Vector 26 [unity_Scale]
//              Vector 27 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    def c28, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2

def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    mul r4.xyz, v1, c26.w
    dp3 r4.w, r4, c5
    dp3 r5.x, r4, c4
    dp3 r4.x, r4, c6
    dp4 r6.zw, v0, c5
    add r2, -r6.z, c12
    dp4 r7.x, v0, c4
    mul r3, r4.w, r2
    add r0, -r7.x, c11
    dp4 r6.xy, v0, c6
    mul r2, r2, r2
    mov r5.y, r4.w
    mov r5.z, r4.x
    mov r5.w, c28.x
    mad r3, r5.x, r0, r3
    mad r2, r0, r0, r2
    add r0, -r6.x, c13
    mad r2, r0, r0, r2
    mad r0, r4.x, r0, r3
    mul r3, r2, c14
    rsq r2.x, r2.x
    rsq r2.y, r2.y
    rsq r2.w, r2.w
    rsq r2.z, r2.z
    mul r0, r0, r2
    add r2, r3, c28.x
    dp4 r3.z, r5, c21
    dp4 r3.y, r5, c20
    dp4 r3.x, r5, c19
    rcp r2.x, r2.x
    rcp r2.y, r2.y
    rcp r2.w, r2.w
    rcp r2.z, r2.z
    max r0, r0, c28.y
    mul r0, r0, r2
    mul r2.xyz, r0.y, c16
    mad r2.xyz, r0.x, c15, r2
    mad r0.xyz, r0.z, c17, r2
    mad r2.xyz, r0.w, c18, r0
    mul r0, r5.xyzz, r5.yzzx
    mul r2.w, r4, r4
    dp4 r5.w, r0, c24
    dp4 r5.z, r0, c23
    dp4 r5.y, r0, c22
    mad r2.w, r5.x, r5.x, -r2
    mul r0.xyz, r2.w, c25
    add r3.xyz, r3, r5.yzww
    add r5.yzw, r3.xxyz, r0.xxyz
    dp4 r0.w, v0, c3
    dp4 r0.z, v0, c2
    dp4 r0.x, v0, c0
    dp4 r0.y, v0, c1

mov o0, r0 // Relocated from line 73 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-vertex-halo --add-fog-on-sm3-update --only-autofixed --ignore-register-errors ADBF63E5.txt
texldl r8, c220.z, s0
add r8.w, r0.w, -r8.y
mad r0.x, r8.w, r8.x, r0.x

    mul r3.xyz, r0.xyww, c28.z
    add o5.xyz, r5.yzww, r2
    mov r2.x, r3
    mul r2.y, r3, c9.x
    mov r7.y, r6.w
    mov r7.z, r6.y
    mad o7.xy, r3.z, c10.zwzw, r2

//     mov o0, r0 // Relocated to line 66 with shadertool.py
    mov o2, r1
    mov o3, r1
    mov o7.zw, r0
    mov o4.z, r4.x
    mov o4.y, r4.w
    mov o4.x, r5
    add o6.xyz, -r7, c8
    mad o1.xy, v2, c27, c27.zwzw

// approximately 68 instruction slots used
