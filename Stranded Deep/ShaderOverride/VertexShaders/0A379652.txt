// CRC32: 0A379652 | Matched 4 variants of 1 shaders: BEAM Team/Skylight/Transparent/Glass - Bumped Specular Transparent
// 
//    Unity headers extracted from Glass - Bumped Specular Transparent.shader
//    Shader "BEAM Team/Skylight/Transparent/Glass - Bumped Specular Transparent" {
//      Properties {
//       _Color ("Glass Color (RGB) Transparency (A)", Color) = (1,1,1,1)
//       _NormalStrength ("Normal Map Strength", Range(0,128)) = 64
//       _MainTex ("Diffuse Albedo (NOT IN USE)", 2D) = "white" {}
//       _SpecTex ("Specular Albedo (RGB) Gloss (A)", 2D) = "white" {}
//       _BumpMap ("Normal Map", 2D) = "bump" {}
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Tags { "ForceNoShadowCasting"="true" "QUEUE"="Transparent+550" "RenderType"="Ocean" }
//        Pass 1/2 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "ForceNoShadowCasting"="true" "QUEUE"="Transparent+550" "RenderType"="Ocean" }
//          Blend One OneMinusSrcAlpha
//          Program "vp" {
//            SubProgram "d3d9 " {
// 8:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "SUNSHINE_FILTER_HARD" }
// 4:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "SUNSHINE_FILTER_PCF_2x2" }
// 2:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "SUNSHINE_FILTER_PCF_3x3" }
// 1:           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" "SUNSHINE_FILTER_PCF_4x4" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Bind "tangent" TexCoord2
//              Matrix 0 [glstate_matrix_modelview0]
//              Matrix 4 [glstate_matrix_mvp]
//              Matrix 8 [_Object2World]
//              Matrix 12 [_World2Object]
//              Matrix 16 [sunshine_CameraVToSunVP]
//              Vector 20 [_WorldSpaceCameraPos]
//              Vector 21 [_ProjectionParams]
//              Vector 22 [_ScreenParams]
//              Vector 23 [_WorldSpaceLightPos0]
//              Vector 24 [unity_SHAr]
//              Vector 25 [unity_SHAg]
//              Vector 26 [unity_SHAb]
//              Vector 27 [unity_SHBr]
//              Vector 28 [unity_SHBg]
//              Vector 29 [unity_SHBb]
//              Vector 30 [unity_SHC]
//              Vector 31 [unity_Scale]
//              Vector 32 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord7 o8
    def c33, 0.5, 1, 0, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord v3

def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    mov o2, r0
    mul r2.xyz, v2, c31.w
    dp3 r3.w, r2, c9
    dp3 r1.x, r2, c8
    dp3 r1.z, r2, c10
    mov r1.y, r3.w
    mul r2, r1.xyzz, r1.yzzx
    mov r1.w, c33.y
    dp4 r3.z, r1, c26
    dp4 r3.y, r1, c25
    dp4 r3.x, r1, c24
    mul r1.y, r3.w, r3.w
    dp4 r4.z, r2, c29
    dp4 r4.y, r2, c28
    dp4 r4.x, r2, c27
    add r2.xyz, r3, r4
    mad r1.x, r1, r1, -r1.y
    mul r3.xyz, r1.x, c30
    dp4 r0.w, v0, c3
    dp4 r0.z, v0, c2
    dp4 r0.x, v0, c0
    dp4 r0.y, v0, c1
    mov r1.xyz, v1
    add o6.xyz, r2, r3
    mul r2.xyz, v2.zxyw, r1.yzxw
    mov r1.xyz, v1
    mad r2.xyz, v2.yzxw, r1.zxyw, -r2
    mul r3.xyz, r2, v1.w
    mov r2, c12
    mov r1, c14
    dp4 r4.z, c23, r1
    mov r1, c13
    dp4 r4.y, c23, r1
    dp4 r4.x, c23, r2
    mov r1.xyz, c20
    mov r1.w, c33.y
    dp4 r2.z, r1, c14
    dp4 r2.x, r1, c12
    dp4 r2.y, r1, c13
    mad r5.xyz, r2, c31.w, -v0
    dp4 r1.w, v0, c7
    dp4 r1.z, v0, c6
    dp3 o5.y, r4, r3
    dp4 r1.x, v0, c4
    dp4 r1.y, v0, c5

mov o0, r1 // Relocated from line 72 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i --auto-fix-vertex-halo --add-fog-on-sm3-update --only-autofixed 0A379652.txt
texldl r6, c220.z, s0
add r6.w, r1.w, -r6.y
mad r1.x, r6.w, r6.x, r1.x

    mul r2.xyz, r1.xyww, c33.x
    dp3 o7.y, r3, r5
    mov r3.y, -r2
    mov r3.x, r2
    mul r2.y, r2, c21.x
    add o3.xy, r3, r2.z
    dp3 o5.z, v2, r4
    dp3 o5.x, r4, v1
    dp3 o7.z, v2, r5
    dp3 o7.x, v1, r5
    mad o8.xy, r2.z, c22.zwzw, r2

//     mov o0, r1 // Relocated to line 61 with shadertool.py
    mov o3.zw, r1
    dp4 o4.w, r0, c19
    dp4 o4.z, r0, c18
    dp4 o4.y, r0, c17
    dp4 o4.x, r0, c16
    mov o8.zw, r1
    mad o1.xy, v3, c32, c32.zwzw

// approximately 64 instruction slots used
