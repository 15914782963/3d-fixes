// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed ed3fa3cc84c08d36-ps.txt
// 3DMigoto: ed3fa3cc84c08d36 | Matched 2 variants of 1 shaders: p0/Reflective/Bumped Specular SMap Wet
//
//       Unity headers extracted from p0_Reflective_Bumped Specular SMap Wet
//       Shader "p0/Reflective/Bumped Specular SMap Wet" {
//         CustomEditor "FresnelMaterialEditor"
//         Fallback "Reflective/Bumped Diffuse"
//         SubShader 1/1 {
//           LOD 400
//           Tags { "RenderType"="Opaque" }
//           Pass 6/6 {
//             Name "META"
//             Tags { "LIGHTMODE"="META" "RenderType"="Opaque" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from p0_Reflective_Bumped Specular SMap Wet:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 66 4 0
//      undeciphered1a: 5
// 2:   Keywords { "Rain" }
//      undeciphered2: 1 4 3 4 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 384
//      Float 72 [_WetDropAlbedo]
//      Vector 176 [_Color]
//      Vector 192 [_ReflectColor]
//      Vector 224 [_CycleLength] 3
//      Vector 240 [_SpecVals] 3
//      Vector 256 [_DefVals] 3
//      Float 288 [_BumpTiling]
//      Float 292 [_WetDropNorm]
//      Float 296 [_RippleTexScale]
//      Float 352 [unity_OneOverOutputBoost]
//      Float 356 [unity_MaxOutputValue]
//      Float 360 [unity_UseLinearSpace]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityMetaPass" 48
//      VectorBool 16 [unity_MetaFragmentControl] 4
//      SetTexture 0 [_BumpMap] 2D 2
//      SetTexture 1 [_RippleTexture] 2D 0
//      SetTexture 2 [_MainTex] 2D 1
//      SetTexture 3 [_Cube] CUBE 3
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityMetaPass" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:24:41 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[23], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 7
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed ed3fa3cc84c08d36-ps.txt

mul r5.w, -r5.x, r5.y
mad r6.xyz, -r5.wwww, cb10[0].xyzw, cb1[4].xyzw

mul r0.xyzw, v1.xyxy, cb0[18].xxzz
sample r1.xyzw, r0.zwzz, t1.xyzw, s0
sample r0.xyzw, r0.xyxx, t0.xyzw, s2
mad r0.xy, r0.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r0.w, r1.w, cb0[14].z
mad r0.w, cb1[0].w, cb0[14].y, r0.w
div r0.w, r0.w, cb0[14].z
ge r1.w, r0.w, -r0.w
frc r0.w, |r0.w|
movc r0.w, r1.w, r0.w, -r0.w
mad_sat r0.w, -r0.w, cb0[14].z, cb0[14].x
mul r0.w, r1.x, r0.w
add r1.x, -r1.x, l(1.000000)
mad r2.xy, r1.yzyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.x, r0.w, r1.x
mul r0.w, r0.w, cb0[4].z
mul r1.x, r1.x, cb0[18].y
mov r2.z, l(1.000000)
dp3 r1.y, r2.xyzx, r2.xyzx
rsq r1.y, r1.y
dp2 r1.z, r0.xyxx, r0.xyxx
min r1.z, r1.z, l(1.000000)
add r1.z, -r1.z, l(1.000000)
sqrt r0.z, r1.z
mad r1.yzw, r2.xxyz, r1.yyyy, -r0.xxyz
mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
dp3 r1.x, v2.xyzx, r0.xyzx
dp3 r1.y, v3.xyzx, r0.xyzx
dp3 r1.z, v4.xyzx, r0.xyzx
mov r2.x, v2.w
mov r2.y, v3.w
mov r2.z, v4.w
add r2.xyz, -r2.xyzx, r6.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
dp3 r1.w, -r2.xyzx, r1.xyzx
add r1.w, r1.w, r1.w
mad r1.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
sample r1.xyzw, r1.xyzx, t3.xyzw, s3
sample r3.xyzw, v1.xyxx, t2.xyzw, s1
mul r1.xyz, r1.xyzx, r3.wwww
mul r3.xyz, r3.xyzx, cb0[11].xyzx
mad r3.xyz, r0.wwww, -r3.xyzx, r3.xyzx
mul r1.xyz, r1.xyzx, cb0[12].xyzx
mul r4.xyz, r2.yyyy, v3.xyzx
mad r2.xyw, v2.xyxz, r2.xxxx, r4.xyxz
mad r2.xyz, v4.xyzx, r2.zzzz, r2.xywx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.x, r2.xyzx, r0.xyzx
add r0.x, -r0.x, l(1.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, l(0.500000)
mad r0.y, cb0[15].y, r0.x, cb0[15].x
mad r0.x, cb0[16].y, r0.x, cb0[16].x
mul r0.xzw, r0.xxxx, r3.xxyz
log r0.xzw, r0.xxzw
mul r0.y, r0.y, l(0.500000)
mul r1.xyz, r0.yyyy, r1.xyzx
mad r2.xyz, r1.xyzx, l(0.305306017, 0.305306017, 0.305306017, 0.000000), l(0.682171106, 0.682171106, 0.682171106, 0.000000)
mad r2.xyz, r1.xyzx, r2.xyzx, l(0.0125228781, 0.0125228781, 0.0125228781, 0.000000)
mul r2.xyz, r1.xyzx, r2.xyzx
ne r0.y, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[22].z
movc r1.xyz, r0.yyyy, r1.xyzx, r2.xyzx
mul r1.xyz, r1.xyzx, l(0.0103092780, 0.0103092780, 0.0103092780, 0.000000)
max r0.y, r1.y, r1.x
max r1.w, r1.z, l(0.020000)
max r0.y, r0.y, r1.w
mul r0.y, r0.y, l(255.000000)
round_pi r0.y, r0.y
mul r2.w, r0.y, l(0.00392156886)
div r2.xyz, r1.xyzx, r2.wwww
mov_sat r0.y, cb0[22].x
mul r0.xyz, r0.xzwx, r0.yyyy
exp r0.xyz, r0.xyzx
min r0.xyz, r0.xyzx, cb0[22].yyyy
mov r0.w, l(1.000000)
movc r0.xyzw, cb2[1].xxxx, r0.xyzw, l(0,0,0,0)
movc o0.xyzw, cb2[1].yyyy, r2.xyzw, r0.xyzw
ret
// Approximately 0 instruction slots used