// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a2c78d66caf22ad5-ps.txt
// 3DMigoto: a2c78d66caf22ad5 | Matched 2 variants of 1 shaders: p0/Reflective/Bumped Specular SMap Wet
//
//       Unity headers extracted from p0_Reflective_Bumped Specular SMap Wet
//       Shader "p0/Reflective/Bumped Specular SMap Wet" {
//         CustomEditor "FresnelMaterialEditor"
//         Fallback "Reflective/Bumped Diffuse"
//         SubShader 1/1 {
//           LOD 400
//           Tags { "RenderType"="Opaque" }
//           Pass 6/6 {
//             Name "META"
//             Tags { "LIGHTMODE"="META" "RenderType"="Opaque" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from p0_Reflective_Bumped Specular SMap Wet:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 179 4 16
//      undeciphered1a: 7
// 2:   Keywords { "EDITOR_VISUALIZATION" "Rain" }
// 1:   Keywords { "EDITOR_VISUALIZATION" }
//      undeciphered2: 1 4 3 4 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 432
//      Float 64 [_WetDropSpecular]
//      Float 72 [_WetDropAlbedo]
//      Vector 176 [_Color]
//      Float 208 [_Specularness]
//      Vector 224 [_CycleLength] 3
//      Vector 256 [_DefVals] 3
//      Float 288 [_BumpTiling]
//      Float 292 [_WetDropNorm]
//      Float 296 [_RippleTexScale]
//      ScalarInt 352 [_CheckPureMetal]
//      ScalarInt 356 [_CheckAlbedo]
//      Vector 368 [_AlbedoCompareColor]
//      Float 384 [_AlbedoMinLuminance]
//      Float 388 [_AlbedoMaxLuminance]
//      Float 392 [_AlbedoHueTolerance]
//      Float 396 [_AlbedoSaturationTolerance]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityMetaPass" 48
//      ScalarInt 32 [unity_VisualizationMode]
//      SetTexture 0 [_BumpMap] 2D 3
//      SetTexture 1 [_RippleTexture] 2D 0
//      SetTexture 2 [_MainTex] 2D 1
//      SetTexture 3 [_SpecMap] 2D 2
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityMetaPass" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:14:42 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[25], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a2c78d66caf22ad5-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r0.xyz, -r0.xyzx, r8.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyz, r0.yyyy, v3.xyzx
mad r0.xyw, v2.xyxz, r0.xxxx, r1.xyxz
mad r0.xyz, v4.xyzx, r0.zzzz, r0.xywx
mul r1.xyzw, v1.xyxy, cb0[18].xxzz
sample r2.xyzw, r1.xyxx, t0.xyzw, s3
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r2.z, r0.w
sample r1.xyzw, r1.zwzz, t1.xyzw, s0
mul r0.w, r1.w, cb0[14].z
mad r0.w, cb1[0].w, cb0[14].y, r0.w
div r0.w, r0.w, cb0[14].z
ge r1.w, r0.w, -r0.w
frc r0.w, |r0.w|
movc r0.w, r1.w, r0.w, -r0.w
mad_sat r0.w, -r0.w, cb0[14].z, cb0[14].x
sample r3.xyzw, v1.xyxx, t2.xyzw, s1
mul r3.xyz, r3.xyzx, cb0[11].xyzx
sample r4.xyzw, v1.xyxx, t3.xyzw, s2
mul r1.w, r4.x, cb0[13].x
mad r5.xy, r1.yzyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r0.w, r1.x, r0.w
mul r1.yz, r0.wwww, cb0[4].xxzx
mad r2.w, -r4.x, cb0[13].x, l(1.000000)
mad r1.y, r1.y, r2.w, r1.w
mad r3.xyz, r1.zzzz, -r3.xyzx, r3.xyzx
mov r5.z, l(1.000000)
dp3 r1.z, r5.xyzx, r5.xyzx
rsq r1.z, r1.z
add r1.x, -r1.x, l(1.000000)
mul r0.w, r0.w, r1.x
mul r0.w, r0.w, cb0[18].y
mad r1.xzw, r5.xxyz, r1.zzzz, -r2.xxyz
mad r1.xzw, r0.wwww, r1.xxzw, r2.xxyz
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.x, r0.xyzx, r1.xzwx
add r0.x, -r0.x, l(1.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, l(0.500000)
mad r0.x, cb0[16].y, r0.x, cb0[16].x
mul r2.xyz, r0.xxxx, r3.xyzx
if_z cb2[2].x
  ge r0.yzw, l(0.000000, 0.040450, 0.040450, 0.040450), r2.xxyz
  mul r1.xzw, r2.xxyz, l(0.0773993805, 0.000000, 0.0773993805, 0.0773993805)
  lt r4.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mad r5.xyz, r3.xyzx, r0.xxxx, l(0.055000, 0.055000, 0.055000, 0.000000)
  mul r5.xyz, r5.xyzx, l(0.947867334, 0.947867334, 0.947867334, 0.000000)
  log r5.xyz, r5.xyzx
  mul r5.xyz, r5.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
  exp r5.xyz, r5.xyzx
  log r6.xyz, r2.xyzx
  mul r6.xyz, r6.xyzx, l(2.200000, 2.200000, 2.200000, 0.000000)
  exp r6.xyz, r6.xyzx
  movc r4.xyz, r4.xyzx, r5.xyzx, r6.xyzx
  movc r4.xyz, r0.yzwy, r1.xzwx, r4.xyzx
  mad r0.y, r1.y, l(0.305306017), l(0.682171106)
  mad r0.y, r1.y, r0.y, l(0.0125228781)
  mul r0.y, r0.y, r1.y
  dp3 r0.y, r0.yyyy, l(0.333300, 0.333300, 0.333300, 0.000000)
  ge r0.y, r0.y, l(0.450000)
  dp3 r0.z, r4.xyzx, l(0.212672904, 0.715152204, 0.072175, 0.000000)
  dp3 r0.w, r4.xyzx, l(0.333300, 0.333300, 0.333300, 0.000000)
  movc r0.z, cb0[22].y, r0.z, r0.w
  ine r0.w, cb0[22].x, l(0)
  and r0.w, r0.y, r0.w
  ne r1.x, r0.z, l(0.000000)
  and r0.w, r0.w, r1.x
  if_z r0.w
    if_z cb0[22].y
      ge r0.w, r0.z, l(0.012000)
      or r0.y, r0.w, r0.y
      ge r0.w, l(0.900000), r0.z
      and r0.y, r0.w, r0.y
      mov r4.w, l(0)
      movc o0.xyzw, r0.yyyy, r4.xyzw, l(1.000000,0,0,1.000000)
    else
      ge r0.y, r0.z, cb0[24].x
      ge r0.z, cb0[24].y, r0.z
      and r0.y, r0.z, r0.y
      if_nz r0.y
        lt r0.yz, r2.yyxy, r2.zzzz
        and r0.y, r0.z, r0.y
        if_nz r0.y
          ne r0.y, r2.z, l(0.000000)
          lt r0.w, r2.y, r2.x
          movc r0.w, r0.w, r2.y, r2.x
          mad r0.w, r3.z, r0.x, -r0.w
          ne r1.x, r0.w, l(0.000000)
          div r5.z, r0.w, r2.z
          mad r1.z, r3.x, r0.x, -r2.y
          div r0.w, r1.z, r0.w
          add r5.y, r0.w, l(4.000000)
          add r6.y, r1.z, l(4.000000)
          mov r6.z, l(0)
          movc r5.yz, r1.xxxx, r5.yyzy, r6.yyzy
          mul r0.w, r5.y, l(0.166666672)
          lt r1.x, r5.y, l(36.000000)
          mad r1.z, r5.y, l(0.166666672), l(1.000000)
          movc r5.x, r1.x, r1.z, r0.w
          and r0.yw, r0.yyyy, r5.xxxz
        else
          lt r1.x, r2.x, r2.y
          if_nz r1.x
            ne r1.x, r2.y, l(0.000000)
            movc r0.z, r0.z, r2.x, r2.z
            mad r0.z, r3.y, r0.x, -r0.z
            ne r1.z, r0.z, l(0.000000)
            div r5.z, r0.z, r2.y
            mad r1.w, r3.z, r0.x, -r2.x
            div r0.z, r1.w, r0.z
            add r5.y, r0.z, l(2.000000)
            add r6.y, r1.w, l(2.000000)
            mov r6.z, l(0)
            movc r5.yz, r1.zzzz, r5.yyzy, r6.yyzy
            mul r0.z, r5.y, l(0.166666672)
            lt r1.z, r5.y, l(36.000000)
            mad r1.w, r5.y, l(0.166666672), l(1.000000)
            movc r5.x, r1.z, r1.w, r0.z
            and r0.yw, r1.xxxx, r5.xxxz
          else
            ne r0.z, r2.x, l(0.000000)
            lt r1.x, r2.z, r2.y
            movc r1.x, r1.x, r2.z, r2.y
            mad r1.x, r3.x, r0.x, -r1.x
            ne r1.z, r1.x, l(0.000000)
            div r5.z, r1.x, r2.x
            mad r3.y, r3.y, r0.x, -r2.z
            div r5.y, r3.y, r1.x
            mov r3.z, l(0)
            movc r3.yz, r1.zzzz, r5.yyzy, r3.yyzy
            mul r0.x, r3.y, l(0.166666672)
            lt r1.x, r3.y, l(36.000000)
            mad r1.z, r3.y, l(0.166666672), l(1.000000)
            movc r3.x, r1.x, r1.z, r0.x
            and r0.yw, r0.zzzz, r3.xxxz
          endif
        endif
        lt r0.xz, cb0[23].yyxy, cb0[23].zzzz
        and r0.x, r0.z, r0.x
        if_nz r0.x
          ne r0.x, cb0[23].z, l(0.000000)
          min r0.z, cb0[23].y, cb0[23].x
          add r0.z, -r0.z, cb0[23].z
          ne r1.x, r0.z, l(0.000000)
          div r3.z, r0.z, cb0[23].z
          add r1.z, -cb0[23].y, cb0[23].x
          div r0.z, r1.z, r0.z
          add r3.y, r0.z, l(4.000000)
          add r5.y, r1.z, l(4.000000)
          mov r5.z, l(0)
          movc r3.yz, r1.xxxx, r3.yyzy, r5.yyzy
          mul r0.z, r3.y, l(0.166666672)
          lt r1.x, r3.y, l(36.000000)
          mad r1.z, r3.y, l(0.166666672), l(1.000000)
          movc r3.x, r1.x, r1.z, r0.z
          and r0.xz, r0.xxxx, r3.xxzx
        else
          lt r1.x, cb0[23].x, cb0[23].y
          if_nz r1.x
            ne r1.x, cb0[23].y, l(0.000000)
            min r1.z, cb0[23].x, cb0[23].z
            add r1.z, -r1.z, cb0[23].y
            ne r1.w, r1.z, l(0.000000)
            div r3.z, r1.z, cb0[23].y
            add r3.x, -cb0[23].x, cb0[23].z
            div r1.z, r3.x, r1.z
            add r3.y, r1.z, l(2.000000)
            add r5.y, r3.x, l(2.000000)
            mov r5.z, l(0)
            movc r3.yz, r1.wwww, r3.yyzy, r5.yyzy
            mul r1.z, r3.y, l(0.166666672)
            lt r1.w, r3.y, l(36.000000)
            mad r3.y, r3.y, l(0.166666672), l(1.000000)
            movc r3.x, r1.w, r3.y, r1.z
            and r0.xz, r1.xxxx, r3.xxzx
          else
            ne r1.x, cb0[23].x, l(0.000000)
            min r1.z, cb0[23].z, cb0[23].y
            add r1.z, -r1.z, cb0[23].x
            ne r1.w, r1.z, l(0.000000)
            div r3.z, r1.z, cb0[23].x
            add r5.y, -cb0[23].z, cb0[23].y
            div r3.y, r5.y, r1.z
            mov r5.z, l(0)
            movc r3.yz, r1.wwww, r3.yyzy, r5.yyzy
            mul r1.z, r3.y, l(0.166666672)
            lt r1.w, r3.y, l(36.000000)
            mad r3.y, r3.y, l(0.166666672), l(1.000000)
            movc r3.x, r1.w, r3.y, r1.z
            and r0.xz, r1.xxxx, r3.xxzx
          endif
        endif
        add r1.xz, r0.zzxz, -cb0[24].wwzw
        lt r1.xw, r1.xxxz, r0.wwwy
        add r0.xz, r0.zzxz, cb0[24].wwzw
        lt r0.xw, r0.wwwy, r0.xxxz
        and r0.x, r0.x, r1.x
        add r1.x, r1.z, l(1.000000)
        lt r1.x, r1.x, r0.y
        or r1.x, r1.x, r1.w
        and r0.x, r0.x, r1.x
        add r0.z, r0.z, l(-1.000000)
        lt r0.y, r0.y, r0.z
        or r0.y, r0.y, r0.w
        and r0.x, r0.y, r0.x
        mov r4.w, l(0)
        movc o0.xyzw, r0.xxxx, r4.xyzw, l(1.000000,0,0,1.000000)
      else
        mov o0.xyzw, l(1.000000,0,0,1.000000)
      endif
    endif
  else
    mov o0.xyzw, l(1.000000,1.000000,0,1.000000)
  endif
else
  ieq r0.x, cb2[2].x, l(1)
  mad r0.yzw, r2.xxyz, l(0.000000, 0.305306017, 0.305306017, 0.305306017), l(0.000000, 0.682171106, 0.682171106, 0.682171106)
  mad r0.yzw, r2.xxyz, r0.yyzw, l(0.000000, 0.0125228781, 0.0125228781, 0.0125228781)
  mul r0.yzw, r0.yyzw, r2.xxyz
  mad r1.x, r1.y, l(0.305306017), l(0.682171106)
  mad r1.x, r1.y, r1.x, l(0.0125228781)
  mul r1.x, r1.x, r1.y
  dp3 r1.x, r1.xxxx, l(0.333300, 0.333300, 0.333300, 0.000000)
  ge r1.yzw, r1.xxxx, l(0.000000, 0.020000, 0.070000, 0.450000)
  ge r3.xyz, l(0.070000, 0.220000, 1.000000, 0.000000), r1.xxxx
  and r1.xyz, r1.yzwy, r3.xyzx
  or r1.x, r1.y, r1.x
  dp3 r0.y, r0.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  eq r0.y, r0.y, l(0.000000)
  mov r2.w, l(0)
  movc r3.xyzw, r0.yyyy, r2.xyzw, l(1.000000,1.000000,0,1.000000)
  movc r3.xyzw, cb0[22].xxxx, r3.xyzw, r2.xyzw
  movc r3.xyzw, r1.zzzz, r3.xyzw, l(1.000000,0,0,1.000000)
  movc r1.xyzw, r1.xxxx, r2.xyzw, r3.xyzw
  and o0.xyzw, r0.xxxx, r1.xyzw
endif
ret
// Approximately 0 instruction slots used