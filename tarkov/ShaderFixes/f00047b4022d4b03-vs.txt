// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed f00047b4022d4b03-vs.txt
// 3DMigoto: f00047b4022d4b03 | Matched 2 variants of 2 shaders: Nature/SpeedTree, Nature/SpeedTreeEFT
//
// 1:    Unity headers extracted from Nature_SpeedTree
// 2:    Unity headers extracted from Nature_SpeedTreeEFT
// 1:    Shader "Nature/SpeedTree" {
// 2:    Shader "Nature/SpeedTreeEFT" {
//         CustomEditor "SpeedTreeMaterialInspector"
//         Fallback "Transparent/Cutout/VertexLit"
//         SubShader 1/2 {
//           LOD 400
//           Tags { "DisableBatching"="LodFading" "IGNOREPROJECTOR"="true" "QUEUE"="Geometry" "RenderType"="Opaque" }
//           Pass 7/8 {
//             Tags { "DisableBatching"="LodFading" "IGNOREPROJECTOR"="true" "LIGHTMODE"="SHADOWCASTER" "QUEUE"="Geometry" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
// 1: Unity 5.3 headers extracted from Nature_SpeedTree:
// 2: Unity 5.3 headers extracted from Nature_SpeedTreeEFT:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201609010 175 0 3
//      undeciphered1a: 6
//      Keywords { "SHADOWS_DEPTH" "LOD_FADE_PERCENTAGE" "GEOM_TYPE_FROND" }
//      undeciphered2: 1 0 6 0 0 0
//      undeciphered3: 59 5 0 0 1 2 3 4 4 5 5 6
// 1:   ConstBuffer "$Globals" 64
// 2:   ConstBuffer "$Globals" 80
//      Float 32 [_WindQuality]
//      Float 36 [_WindEnabled]
//      ConstBuffer "UnityLighting" 752
//      Vector 0 [_WorldSpaceLightPos0]
//      ConstBuffer "UnityShadows" 416
//      Vector 80 [unity_LightShadowBias]
//      ConstBuffer "UnityPerDraw" 160
//      Vector 128 [unity_LODFade]
//      Matrix 0 [unity_ObjectToWorld]
//      ConstBuffer "UnityPerFrame" 384
//      Matrix 272 [unity_MatrixVP]
//      ConstBuffer "SpeedTreeWind" 256
//      Vector 0 [_ST_WindVector]
//      Vector 16 [_ST_WindGlobal]
//      Vector 32 [_ST_WindBranch]
//      Vector 48 [_ST_WindBranchTwitch]
//      Vector 64 [_ST_WindBranchWhip]
//      Vector 80 [_ST_WindBranchAnchor]
//      Vector 96 [_ST_WindBranchAdherences]
//      Vector 112 [_ST_WindTurbulences]
//      Vector 224 [_ST_WindFrondRipple]
//      Vector 240 [_ST_WindAnimation]
//      BindCB "$Globals" 0
//      BindCB "UnityLighting" 1
//      BindCB "UnityShadows" 2
//      BindCB "UnityPerDraw" 3
//      BindCB "UnityPerFrame" 4
//      BindCB "SpeedTreeWind" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:25:02 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xyz
// TEXCOORD                 2   xyzw        5     NONE   float    y
// TEXCOORD                 3   xy          6     NONE   float
// COLOR                    0   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy
//
vs_4_0
dcl_constantbuffer cb0[3], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_constantbuffer cb2[6], immediateIndexed
dcl_constantbuffer cb3[9], immediateIndexed
dcl_constantbuffer cb4[21], immediateIndexed
dcl_constantbuffer cb5[16], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input v3.xyzw
dcl_input v4.xyz
dcl_input v5.y
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_temps 7

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.x, cb0[2].y, cb0[2].x
ge r0.y, l(0.000000), r0.x
dp3 r1.x, cb5[0].xyzx, cb3[0].xyzx
dp3 r1.y, cb5[0].xyzx, cb3[1].xyzx
dp3 r1.z, cb5[0].xyzx, cb3[2].xyzx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r0.zw, r0.zzzz, r1.xxxz
movc r0.yz, r0.yyyy, l(0,0,0,0), r0.zzwz
add r1.xyz, -v0.xyzx, v4.xyzx
mad r1.xyz, cb3[8].xxxx, r1.xyzx, v0.xyzx
eq r0.w, r0.x, l(5.000000)
lt r1.w, v3.x, l(0.500000)
and r1.w, r1.w, l(0x3f400000)
add r2.x, v3.y, cb5[14].x
mad r1.w, r2.x, cb5[14].z, r1.w
add r1.w, r1.w, l(0.500000)
frc r1.w, r1.w
mad r1.w, r1.w, l(2.000000), l(-1.000000)
mul r2.x, |r1.w|, |r1.w|
mad r1.w, -|r1.w|, l(2.000000), l(3.000000)
mad r1.w, r2.x, r1.w, l(-0.500000)
mul r1.w, r1.w, v5.y
dp2 r1.w, cb5[14].yyyy, r1.wwww
mad r2.xyz, r1.wwww, v2.xyzx, r1.xyzx
movc r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
ge r1.w, r0.x, l(3.000000)
if_nz r1.w
  if_nz r0.w
    dp3 r2.x, cb5[5].xyzx, cb3[0].xyzx
    dp3 r2.y, cb5[5].xyzx, cb3[1].xyzx
    dp3 r2.z, cb5[5].xyzx, cb3[2].xyzx
    dp3 r0.w, r2.xyzx, r2.xyzx
    rsq r0.w, r0.w
    mul r2.xyz, r0.wwww, r2.xyzx
    mul r3.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r3.xyz, r3.xyzx
    mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r3.xyz, r3.xyzx, v3.zzzz
    add r0.w, cb3[3].y, cb3[3].x
    add r0.w, r0.w, cb5[2].x
    add r4.x, r0.w, v3.w
    mad r4.y, r0.w, cb5[3].y, v3.w
    mul r1.w, r4.x, cb5[3].y
    mul r4.z, r1.w, l(0.500000)
    add r4.w, r4.x, -v3.z
    add r4.xyzw, r4.xyzw, l(0.500000, 0.500000, 0.500000, 1.500000)
    frc r4.xyzw, r4.xyzw
    mad r4.xyzw, r4.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
    mul r5.xyzw, |r4.xyzw|, |r4.xyzw|
    mad r4.xyzw, -|r4.xyzw|, l(2.000000, 2.000000, 2.000000, 2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
    mad r4.xyzw, r5.xyzw, r4.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
    add r4.xyzw, r4.xyzw, r4.xyzw
    mul r5.w, r4.z, r4.y
    lt r1.w, r5.w, l(0.000000)
    mov r5.y, -r5.w
    mov r5.xz, l(-1.000000,0,1.000000,0)
    movc r5.xy, r1.wwww, r5.xyxx, r5.zwzz
    mad r1.w, -r4.y, r4.z, r5.x
    mad r1.w, r5.y, r1.w, r5.w
    add r2.w, -r1.w, r5.x
    mad r1.w, r5.y, r2.w, r1.w
    mul r1.w, r1.w, cb5[3].x
    add r2.w, -cb5[0].w, l(1.000000)
    add r3.w, -cb5[3].x, l(1.000000)
    mul r3.w, r3.w, r4.x
    mad r1.w, r1.w, r2.w, r3.w
    mad r2.w, r4.w, cb5[4].x, l(1.000000)
    mul r1.w, r1.w, r2.w
    mul r3.xyz, r1.wwww, r3.xyzx
    mad r3.xyz, r3.xyzx, cb5[2].yyyy, r1.xyzx
    mad r4.x, r0.w, l(0.100000), v3.w
    mul r0.w, cb5[7].x, cb5[15].x
    mad r4.y, r0.w, l(0.100000), v3.w
    add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    frc r4.xy, r4.xyxx
    mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
    mul r5.xy, |r4.xyxx|, |r4.xyxx|
    mad r4.xy, -|r4.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
    mad r4.xy, r5.xyxx, r4.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    add r4.xy, r4.xyxx, r4.xyxx
    mul r4.xy, r4.xyxx, r4.xyxx
    mul r0.w, r4.x, r4.y
    mad r0.w, -r0.w, cb5[7].x, l(1.000000)
    mul r1.w, r4.w, cb5[0].w
    mad r0.w, r1.w, cb5[4].x, r0.w
    mad r2.xyz, r2.xyzx, cb5[5].wwww, -r3.xyzx
    mul r2.xyz, r2.xyzx, cb5[6].yyyy
    mul r2.xyz, r0.wwww, r2.xyzx
    mad r1.xyz, r2.xyzx, v3.zzzz, r3.xyzx
  else
    mul r2.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r2.xyz, r2.xyzx
    mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r2.xyz, r2.xyzx, v3.zzzz
    add r0.w, cb3[3].y, cb3[3].x
    add r0.w, r0.w, cb5[2].x
    add r3.x, r0.w, v3.w
    mad r3.y, r0.w, cb5[3].y, v3.w
    mul r0.w, r3.x, cb5[3].y
    mul r3.z, r0.w, l(0.500000)
    add r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    frc r3.xyz, r3.xyzx
    mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r4.xyz, |r3.xyzx|, |r3.xyzx|
    mad r3.xyz, -|r3.xyzx|, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
    mad r3.xyz, r4.xyzx, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    add r3.xyz, r3.xyzx, r3.xyzx
    mul r4.w, r3.z, r3.y
    lt r0.w, r4.w, l(0.000000)
    mov r4.y, -r4.w
    mov r4.xz, l(-1.000000,0,1.000000,0)
    movc r4.xy, r0.wwww, r4.xyxx, r4.zwzz
    mad r0.w, -r3.y, r3.z, r4.x
    mad r0.w, r4.y, r0.w, r4.w
    add r1.w, -r0.w, r4.x
    mad r0.w, r4.y, r1.w, r0.w
    mul r0.w, r0.w, cb5[3].x
    add r1.w, -cb5[0].w, l(1.000000)
    add r2.w, -cb5[3].x, l(1.000000)
    mul r2.w, r2.w, r3.x
    mad r0.w, r0.w, r1.w, r2.w
    mul r2.xyz, r0.wwww, r2.xyzx
    mad r1.xyz, r2.xyzx, cb5[2].yyyy, r1.xyzx
  endif
endif
lt r0.x, l(0.000000), r0.x
dp3 r0.w, r1.xyzx, r1.xyzx
sqrt r0.w, r0.w
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb5[1].z
mad r1.w, -r1.w, l(0.250000), r1.y
max r1.w, r1.w, l(0.000000)
mul r1.w, r1.w, cb5[1].z
ne r2.x, r1.w, l(0.000000)
log r2.y, r1.w
mul r2.y, r2.y, cb5[1].w
exp r2.y, r2.y
movc r1.w, r2.x, r2.y, r1.w
add r2.x, cb3[3].x, cb5[1].x
mad r2.y, cb5[1].x, l(0.800000), cb3[3].y
add r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
frc r2.xy, r2.xyxx
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.zw, |r2.xxxy|, |r2.xxxy|
mad r2.xy, -|r2.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mad r2.xy, r2.zwzz, r2.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r2.xy, r2.xyxx, r2.xyxx
mad r2.x, r2.y, r2.y, r2.x
div r2.y, cb5[6].x, cb5[1].z
mad r2.x, cb5[1].y, r2.x, r2.y
mul r1.w, r1.w, r2.x
mad r2.xz, r0.yyzy, r1.wwww, r1.xxzx
mov r2.y, r1.y
dp3 r0.y, r2.xyzx, r2.xyzx
rsq r0.y, r0.y
mul r2.xyz, r0.yyyy, r2.xyzx
mul r0.yzw, r0.wwww, r2.xxyz
movc r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
mul r1.xyzw, r0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb3[2].xyzw, r0.zzzz, r1.xyzw
mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
ne r1.x, cb2[5].z, l(0.000000)
mul r1.yzw, v2.yyyy, cb3[1].xxyz
mad r1.yzw, cb3[0].xxyz, v2.xxxx, r1.yyzw
mad r1.yzw, cb3[2].xxyz, v2.zzzz, r1.yyzw
dp3 r2.x, r1.yzwy, r1.yzwy
rsq r2.x, r2.x
mul r1.yzw, r1.yyzw, r2.xxxx
mad r2.xyz, -r0.xyzx, cb1[0].wwww, cb1[0].xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
dp3 r2.x, r1.yzwy, r2.xyzx
mad r2.x, -r2.x, r2.x, l(1.000000)
sqrt r2.x, r2.x
mul r2.x, r2.x, cb2[5].z
mad r1.yzw, -r1.yyzw, r2.xxxx, r0.xxyz
movc r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
mul r1.xyzw, r0.yyyy, cb4[18].xyzw
mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw

// Relocated to here with asmtool.py
mov o0.xyw, r0.xyxw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed f00047b4022d4b03-vs.txt
ne r6.w, r0.w, l(1.0)
if_nz r6.w
  add r6.w, r0.w, -r6.y
  mad r0.x, r6.w, r6.x, r0.x
endif

div r1.x, cb2[5].x, r0.w
min r1.x, r1.x, l(0.000000)
max r1.x, r1.x, l(-1.000000)
add r0.z, r0.z, r1.x
min r1.x, r0.w, r0.z
add r1.x, -r0.z, r1.x
mad o0.z, cb2[5].y, r1.x, r0.z

// mov o0.xyw, r0.xyxw // Relocated from here with asmtool.py

mov o1.xy, v3.xyxx
ret
// Approximately 0 instruction slots used