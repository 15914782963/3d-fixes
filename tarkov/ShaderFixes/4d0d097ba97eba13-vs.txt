// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 4d0d097ba97eba13-vs.txt
// 3DMigoto: 4d0d097ba97eba13 | Matched 2 variants of 1 shaders: Nature/SpeedTreeEFT
//
//       Unity headers extracted from Nature_SpeedTreeEFT
//       Shader "Nature/SpeedTreeEFT" {
//         CustomEditor "SpeedTreeMaterialInspector"
//         Fallback "Transparent/Cutout/VertexLit"
//         SubShader 1/2 {
//           LOD 400
//           Tags { "DisableBatching"="LodFading" "IGNOREPROJECTOR"="true" "QUEUE"="Geometry" "RenderType"="Opaque" }
//           Pass 1/8 {
//             Name "FORWARD"
//             Tags { "DisableBatching"="LodFading" "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Nature_SpeedTreeEFT:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201609010 202 0 5
//      undeciphered1a: 9
// 1:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_EXP" "VERTEXLIGHT_ON" "LOD_FADE_PERCENTAGE" "INSTANCING_ON" "GEOM_TYPE_BRANCH_DETAIL" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" }
// 2:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_EXP2" "VERTEXLIGHT_ON" "LOD_FADE_PERCENTAGE" "INSTANCING_ON" "GEOM_TYPE_BRANCH_DETAIL" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" }
//      undeciphered2: 1 0 9 0 0 0
//      undeciphered3: 191 7 0 0 7 8 1 2 3 4 4 5 5 6 2 1
//      ConstBuffer "$Globals" 128
//      Float 64 [_WindQuality]
//      Float 68 [_WindEnabled]
//      Vector 80 [_HueVariation]
//      Vector 96 [_Color]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 752
//      Vector 32 [unity_4LightPosX0]
//      Vector 48 [unity_4LightPosY0]
//      Vector 64 [unity_4LightPosZ0]
//      Vector 80 [unity_4LightAtten0]
//      Vector 96 [unity_LightColor0]
//      Vector 112 [unity_LightColor1]
//      Vector 128 [unity_LightColor2]
//      Vector 144 [unity_LightColor3]
//      Vector 160 [unity_LightColor4]
//      Vector 176 [unity_LightColor5]
//      Vector 192 [unity_LightColor6]
//      Vector 208 [unity_LightColor7]
//      Vector 656 [unity_SHBr]
//      Vector 672 [unity_SHBg]
//      Vector 688 [unity_SHBb]
//      Vector 704 [unity_SHC]
//      ConstBuffer "UnityPerDraw" 160
//      Vector 144 [unity_WorldTransformParams]
//      ConstBuffer "UnityPerFrame" 384
//      Matrix 272 [unity_MatrixVP]
//      ConstBuffer "UnityDrawCallInfo" 16
//      ScalarInt 0 [unity_BaseInstanceID]
//      ConstBuffer "UnityInstancing_PerDraw0" 6400
//      Matrix 0 [unity_ObjectToWorldArray0]
//      Matrix 64 [unity_ObjectToWorldArray1]
//      Matrix 128 [unity_ObjectToWorldArray2]
//      Matrix 192 [unity_ObjectToWorldArray3]
//      Matrix 256 [unity_ObjectToWorldArray4]
//      Matrix 320 [unity_ObjectToWorldArray5]
//      Matrix 384 [unity_ObjectToWorldArray6]
//      Matrix 448 [unity_ObjectToWorldArray7]
//      Matrix 512 [unity_ObjectToWorldArray8]
//      Matrix 576 [unity_ObjectToWorldArray9]
//      Matrix 640 [unity_ObjectToWorldArray10]
//      Matrix 704 [unity_ObjectToWorldArray11]
//      Matrix 768 [unity_ObjectToWorldArray12]
//      Matrix 832 [unity_ObjectToWorldArray13]
//      Matrix 896 [unity_ObjectToWorldArray14]
//      Matrix 960 [unity_ObjectToWorldArray15]
//      Matrix 1024 [unity_ObjectToWorldArray16]
//      Matrix 1088 [unity_ObjectToWorldArray17]
//      Matrix 1152 [unity_ObjectToWorldArray18]
//      Matrix 1216 [unity_ObjectToWorldArray19]
//      Matrix 1280 [unity_ObjectToWorldArray20]
//      Matrix 1344 [unity_ObjectToWorldArray21]
//      Matrix 1408 [unity_ObjectToWorldArray22]
//      Matrix 1472 [unity_ObjectToWorldArray23]
//      Matrix 1536 [unity_ObjectToWorldArray24]
//      Matrix 1600 [unity_ObjectToWorldArray25]
//      Matrix 1664 [unity_ObjectToWorldArray26]
//      Matrix 1728 [unity_ObjectToWorldArray27]
//      Matrix 1792 [unity_ObjectToWorldArray28]
//      Matrix 1856 [unity_ObjectToWorldArray29]
//      Matrix 1920 [unity_ObjectToWorldArray30]
//      Matrix 1984 [unity_ObjectToWorldArray31]
//      Matrix 2048 [unity_ObjectToWorldArray32]
//      Matrix 2112 [unity_ObjectToWorldArray33]
//      Matrix 2176 [unity_ObjectToWorldArray34]
//      Matrix 2240 [unity_ObjectToWorldArray35]
//      Matrix 2304 [unity_ObjectToWorldArray36]
//      Matrix 2368 [unity_ObjectToWorldArray37]
//      Matrix 2432 [unity_ObjectToWorldArray38]
//      Matrix 2496 [unity_ObjectToWorldArray39]
//      Matrix 2560 [unity_ObjectToWorldArray40]
//      Matrix 2624 [unity_ObjectToWorldArray41]
//      Matrix 2688 [unity_ObjectToWorldArray42]
//      Matrix 2752 [unity_ObjectToWorldArray43]
//      Matrix 2816 [unity_ObjectToWorldArray44]
//      Matrix 2880 [unity_ObjectToWorldArray45]
//      Matrix 2944 [unity_ObjectToWorldArray46]
//      Matrix 3008 [unity_ObjectToWorldArray47]
//      Matrix 3072 [unity_ObjectToWorldArray48]
//      Matrix 3136 [unity_ObjectToWorldArray49]
//      ConstBuffer "UnityInstancing_PerDraw1" 800
//      Float 0 [unity_LODFadeArray0]
//      Float 4 [unity_LODFadeArray1]
//      Float 8 [unity_LODFadeArray2]
//      Float 12 [unity_LODFadeArray3]
//      Float 16 [unity_LODFadeArray4]
//      Float 20 [unity_LODFadeArray5]
//      Float 24 [unity_LODFadeArray6]
//      Float 28 [unity_LODFadeArray7]
//      Float 32 [unity_LODFadeArray8]
//      Float 36 [unity_LODFadeArray9]
//      Float 40 [unity_LODFadeArray10]
//      Float 44 [unity_LODFadeArray11]
//      Float 48 [unity_LODFadeArray12]
//      Float 52 [unity_LODFadeArray13]
//      Float 56 [unity_LODFadeArray14]
//      Float 60 [unity_LODFadeArray15]
//      Float 64 [unity_LODFadeArray16]
//      Float 68 [unity_LODFadeArray17]
//      Float 72 [unity_LODFadeArray18]
//      Float 76 [unity_LODFadeArray19]
//      Float 80 [unity_LODFadeArray20]
//      Float 84 [unity_LODFadeArray21]
//      Float 88 [unity_LODFadeArray22]
//      Float 92 [unity_LODFadeArray23]
//      Float 96 [unity_LODFadeArray24]
//      Float 100 [unity_LODFadeArray25]
//      Float 104 [unity_LODFadeArray26]
//      Float 108 [unity_LODFadeArray27]
//      Float 112 [unity_LODFadeArray28]
//      Float 116 [unity_LODFadeArray29]
//      Float 120 [unity_LODFadeArray30]
//      Float 124 [unity_LODFadeArray31]
//      Float 128 [unity_LODFadeArray32]
//      Float 132 [unity_LODFadeArray33]
//      Float 136 [unity_LODFadeArray34]
//      Float 140 [unity_LODFadeArray35]
//      Float 144 [unity_LODFadeArray36]
//      Float 148 [unity_LODFadeArray37]
//      Float 152 [unity_LODFadeArray38]
//      Float 156 [unity_LODFadeArray39]
//      Float 160 [unity_LODFadeArray40]
//      Float 164 [unity_LODFadeArray41]
//      Float 168 [unity_LODFadeArray42]
//      Float 172 [unity_LODFadeArray43]
//      Float 176 [unity_LODFadeArray44]
//      Float 180 [unity_LODFadeArray45]
//      Float 184 [unity_LODFadeArray46]
//      Float 188 [unity_LODFadeArray47]
//      Float 192 [unity_LODFadeArray48]
//      Float 196 [unity_LODFadeArray49]
//      ConstBuffer "SpeedTreeWind" 256
//      Vector 0 [_ST_WindVector]
//      Vector 16 [_ST_WindGlobal]
//      Vector 32 [_ST_WindBranch]
//      Vector 48 [_ST_WindBranchTwitch]
//      Vector 64 [_ST_WindBranchWhip]
//      Vector 80 [_ST_WindBranchAnchor]
//      Vector 96 [_ST_WindBranchAdherences]
//      Vector 112 [_ST_WindTurbulences]
//      Vector 240 [_ST_WindAnimation]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityPerDraw" 3
//      BindCB "UnityPerFrame" 4
//      BindCB "UnityDrawCallInfo" 5
//      BindCB "UnityInstancing_PerDraw0" 6
//      BindCB "UnityInstancing_PerDraw1" 7
//      BindCB "SpeedTreeWind" 8
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:03:35 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xyz
// TEXCOORD                 2   xyzw        5     NONE   float   xyz
// TEXCOORD                 3   xy          6     NONE   float
// COLOR                    0   xyzw        7     NONE   float   x  w
// SV_InstanceID            0   x           8   INSTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 8      w        5     NONE   float      w
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 6   xyz         7     NONE   float   xyz
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// SV_InstanceID            0   x           9     NONE    uint   x
//
vs_4_0
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[10], immediateIndexed
dcl_constantbuffer cb4[21], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_constantbuffer cb6[200], dynamicIndexed
dcl_constantbuffer cb7[50], dynamicIndexed
dcl_constantbuffer cb8[16], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xyzw
dcl_input v4.xyz
dcl_input v5.xyz
dcl_input v7.xw
dcl_input_sgv v8.x, instance_id
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output o5.w
dcl_output o6.xyz
dcl_output o7.xyz
dcl_output o8.xyzw
dcl_output o9.x
dcl_temps 10

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw

iadd r0.x, v8.x, cb5[0].x
mul o4.xyz, v7.xxxx, cb0[6].xyzx
ishl r0.y, r0.x, l(2)
add r0.z, cb6[r0.y + 3].y, cb6[r0.y + 3].x
add r0.w, r0.z, cb6[r0.y + 3].z
frc r0.w, r0.w
add r1.x, v0.x, v2.y
add r1.x, r1.x, v2.x
frc r1.x, r1.x
mad r0.w, r1.x, l(0.500000), r0.w
add r0.w, r0.w, l(-0.300000)
mul_sat o5.z, r0.w, cb0[5].w
eq r0.w, v7.w, l(0.000000)
movc o6.z, r0.w, v5.z, l(2.500000)
mul r0.w, cb0[4].y, cb0[4].x
ge r1.x, l(0.000000), r0.w
if_nz r1.x
  mov r1.xyz, l(0,0,0,0)
  mov r2.xy, l(0,0,0,0)
else
  dp3 r3.x, cb8[0].xyzx, cb6[r0.y + 0].xyzx
  dp3 r3.y, cb8[0].xyzx, cb6[r0.y + 1].xyzx
  dp3 r3.z, cb8[0].xyzx, cb6[r0.y + 2].xyzx
  dp3 r1.w, r3.xyzx, r3.xyzx
  rsq r1.w, r1.w
  mul r2.xy, r1.wwww, r3.xzxx
  dp3 r3.x, cb8[5].xyzx, cb6[r0.y + 0].xyzx
  dp3 r3.y, cb8[5].xyzx, cb6[r0.y + 1].xyzx
  dp3 r3.z, cb8[5].xyzx, cb6[r0.y + 2].xyzx
  dp3 r1.w, r3.xyzx, r3.xyzx
  rsq r1.w, r1.w
  mul r3.xyz, r1.wwww, r3.xyzx
  mul r1.xyz, r3.xyzx, cb8[5].wwww
endif
add r3.xyz, -v0.xyzx, v4.xyzx
mad r3.xyz, cb7[r0.x + 0].xxxx, r3.xyzx, v0.xyzx
ge r0.x, r0.w, l(3.000000)
if_nz r0.x
  eq r0.x, r0.w, l(5.000000)
  if_nz r0.x
    mul r4.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r4.xyz, r4.xyzx
    mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r4.xyz, r4.xyzx, v3.zzzz
    add r0.x, r0.z, cb8[2].x
    add r5.x, r0.x, v3.w
    mad r5.y, r0.x, cb8[3].y, v3.w
    mul r1.w, r5.x, cb8[3].y
    mul r5.z, r1.w, l(0.500000)
    add r5.w, r5.x, -v3.z
    add r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 1.500000)
    frc r5.xyzw, r5.xyzw
    mad r5.xyzw, r5.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
    mul r6.xyzw, |r5.xyzw|, |r5.xyzw|
    mad r5.xyzw, -|r5.xyzw|, l(2.000000, 2.000000, 2.000000, 2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
    mad r5.xyzw, r6.xyzw, r5.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
    add r5.xyzw, r5.xyzw, r5.xyzw
    mul r6.w, r5.z, r5.y
    lt r1.w, r6.w, l(0.000000)
    mov r6.y, -r6.w
    mov r6.xz, l(-1.000000,0,1.000000,0)
    movc r2.zw, r1.wwww, r6.xxxy, r6.zzzw
    mad r1.w, -r5.y, r5.z, r2.z
    mad r1.w, r2.w, r1.w, r6.w
    add r2.z, -r1.w, r2.z
    mad r1.w, r2.w, r2.z, r1.w
    mul r1.w, r1.w, cb8[3].x
    add r2.z, -cb8[0].w, l(1.000000)
    add r2.w, -cb8[3].x, l(1.000000)
    mul r2.w, r2.w, r5.x
    mad r1.w, r1.w, r2.z, r2.w
    mad r2.z, r5.w, cb8[4].x, l(1.000000)
    mul r1.w, r1.w, r2.z
    mul r4.xyz, r1.wwww, r4.xyzx
    mad r4.xyz, r4.xyzx, cb8[2].yyyy, r3.xyzx
    mad r5.x, r0.x, l(0.100000), v3.w
    mul r0.x, cb8[7].x, cb8[15].x
    mad r5.y, r0.x, l(0.100000), v3.w
    add r2.zw, r5.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
    frc r2.zw, r2.zzzw
    mad r2.zw, r2.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
    mul r5.xy, |r2.zwzz|, |r2.zwzz|
    mad r2.zw, -|r2.zzzw|, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
    mad r2.zw, r5.xxxy, r2.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
    add r2.zw, r2.zzzw, r2.zzzw
    mul r2.zw, r2.zzzw, r2.zzzw
    mul r0.x, r2.z, r2.w
    mad r0.x, -r0.x, cb8[7].x, l(1.000000)
    mul r1.w, r5.w, cb8[0].w
    mad r0.x, r1.w, cb8[4].x, r0.x
    add r1.xyz, r1.xyzx, -r4.xyzx
    mul r1.xyz, r1.xyzx, cb8[6].yyyy
    mul r1.xyz, r0.xxxx, r1.xyzx
    mad r3.xyz, r1.xyzx, v3.zzzz, r4.xyzx
  else
    mul r1.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r1.xyz, r1.xyzx
    mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r1.xyz, r1.xyzx, v3.zzzz
    add r0.x, r0.z, cb8[2].x
    add r4.x, r0.x, v3.w
    mad r4.y, r0.x, cb8[3].y, v3.w
    mul r0.x, r4.x, cb8[3].y
    mul r4.z, r0.x, l(0.500000)
    add r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    frc r4.xyz, r4.xyzx
    mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r5.xyz, |r4.xyzx|, |r4.xyzx|
    mad r4.xyz, -|r4.xyzx|, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
    mad r4.xyz, r5.xyzx, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    add r4.xyz, r4.xyzx, r4.xyzx
    mul r5.w, r4.z, r4.y
    lt r0.x, r5.w, l(0.000000)
    mov r5.y, -r5.w
    mov r5.xz, l(-1.000000,0,1.000000,0)
    movc r0.xz, r0.xxxx, r5.xxyx, r5.zzwz
    mad r1.w, -r4.y, r4.z, r0.x
    mad r1.w, r0.z, r1.w, r5.w
    add r0.x, r0.x, -r1.w
    mad r0.x, r0.z, r0.x, r1.w
    mul r0.x, r0.x, cb8[3].x
    add r0.z, -cb8[0].w, l(1.000000)
    add r1.w, -cb8[3].x, l(1.000000)
    mul r1.w, r1.w, r4.x
    mad r0.x, r0.x, r0.z, r1.w
    mul r1.xyz, r0.xxxx, r1.xyzx
    mad r3.xyz, r1.xyzx, cb8[2].yyyy, r3.xyzx
  endif
endif
lt r0.x, l(0.000000), r0.w
dp3 r0.z, r3.xyzx, r3.xyzx
sqrt r0.z, r0.z
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb8[1].z
mad r0.w, -r0.w, l(0.250000), r3.y
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb8[1].z
ne r1.x, r0.w, l(0.000000)
log r1.y, r0.w
mul r1.y, r1.y, cb8[1].w
exp r1.y, r1.y
movc r0.w, r1.x, r1.y, r0.w
add r1.x, cb8[1].x, cb6[r0.y + 3].x
mad r1.y, cb8[1].x, l(0.800000), cb6[r0.y + 3].y
add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
frc r1.xy, r1.xyxx
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.zw, |r1.xxxy|, |r1.xxxy|
mad r1.xy, -|r1.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mad r1.xy, r1.zwzz, r1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r1.xy, r1.xyxx, r1.xyxx
mad r1.x, r1.y, r1.y, r1.x
div r1.y, cb8[6].x, cb8[1].z
mad r1.x, cb8[1].y, r1.x, r1.y
mul r0.w, r0.w, r1.x
mad r1.xz, r2.xxyx, r0.wwww, r3.xxzx
mov r1.y, r3.y
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r1.xyz, r0.zzzz, r1.xyzx
movc r0.xzw, r0.xxxx, r1.xxyz, r3.xxyz
mul r1.xyzw, r0.zzzz, cb6[r0.y + 1].xyzw
mad r1.xyzw, cb6[r0.y + 0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb6[r0.y + 2].xyzw, r0.wwww, r1.xyzw
add r2.xyzw, r1.xyzw, cb6[r0.y + 3].xyzw
mul r3.xyzw, r2.yyyy, cb4[18].xyzw
mad r3.xyzw, cb4[17].xyzw, r2.xxxx, r3.xyzw
mad r3.xyzw, cb4[19].xyzw, r2.zzzz, r3.xyzw
mad r2.xyzw, cb4[20].xyzw, r2.wwww, r3.xyzw
mad r0.xzw, cb6[r0.y + 3].xxyz, v0.wwww, r1.xxyz
mul r1.xyzw, v2.yyyy, cb6[r0.y + 1].xyzz
mad r1.xyzw, cb6[r0.y + 0].xyzz, v2.xxxx, r1.xyzw
mad r1.xyzw, cb6[r0.y + 2].xyzz, v2.zzzz, r1.xyzw
dp3 r3.x, r1.xywx, r1.xywx
rsq r3.x, r3.x
mul r1.xyzw, r1.xyzw, r3.xxxx
mul r3.xyz, v1.yyyy, cb6[r0.y + 1].yzxy
mad r3.xyz, cb6[r0.y + 0].yzxy, v1.xxxx, r3.xyzx
mad r3.xyz, cb6[r0.y + 2].yzxy, v1.zzzz, r3.xyzx
dp3 r0.y, r3.xyzx, r3.xyzx
rsq r0.y, r0.y
mul r3.xyz, r0.yyyy, r3.xyzx
mul r0.y, v1.w, cb3[9].w
mul r4.xyz, r1.wxyw, r3.xyzx
mad r4.xyz, r1.ywxy, r3.yzxy, -r4.xyzx
mul r4.xyz, r0.yyyy, r4.xyzx
add r5.xyzw, -r0.xxxx, cb2[2].xyzw
add r6.xyzw, -r0.zzzz, cb2[3].xyzw
add r7.xyzw, -r0.wwww, cb2[4].xyzw
mul r8.xyzw, r6.xyzw, r6.xyzw
mad r8.xyzw, r5.xyzw, r5.xyzw, r8.xyzw
mad r8.xyzw, r7.xyzw, r7.xyzw, r8.xyzw
max r8.xyzw, r8.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
mul r6.xyzw, r1.yyyy, r6.xyzw
mad r5.xyzw, r5.xyzw, r1.xxxx, r6.xyzw
mad r5.xyzw, r7.xyzw, r1.wwzw, r5.xyzw
rsq r6.xyzw, r8.xyzw
mul r5.xyzw, r5.xyzw, r6.xyzw
max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r6.xyzw, r8.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r6.xyzw
mul r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyz, r5.yyyy, cb2[7].xyzx
mad r6.xyz, cb2[6].xyzx, r5.xxxx, r6.xyzx
mad r5.xyz, cb2[8].xyzx, r5.zzzz, r6.xyzx
mad r5.xyz, cb2[9].xyzx, r5.wwww, r5.xyzx
mad r6.xyz, r5.xyzx, l(0.305306017, 0.305306017, 0.305306017, 0.000000), l(0.682171106, 0.682171106, 0.682171106, 0.000000)
mad r6.xyz, r5.xyzx, r6.xyzx, l(0.0125228781, 0.0125228781, 0.0125228781, 0.000000)
mul r7.xyzw, r1.ywzx, r1.xyzw
dp4 r8.x, cb2[41].xyzw, r7.xyzw
dp4 r8.y, cb2[42].xyzw, r7.xyzw
dp4 r8.z, cb2[43].xyzw, r7.xyzw
mul r0.y, r1.y, r1.y
mad r0.y, r1.x, r1.x, -r0.y
mad r7.xyz, cb2[44].xyzx, r0.yyyy, r8.xyzx
mad o7.xyz, r5.xyzx, r6.xyzx, r7.xyzx

// Relocated to here with asmtool.py
mov o0.xyzw, r2.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 4d0d097ba97eba13-vs.txt
ne r9.w, r2.w, l(1.0)
if_nz r9.w
  add r9.w, r2.w, -r9.y
  mad r2.x, r9.w, r9.x, r2.x
endif

mul r5.xz, r2.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mul r0.y, r2.y, cb1[5].x
mul r5.w, r0.y, l(0.500000)
add o8.xy, r5.zzzz, r5.xwxx

// mov o0.xyzw, r2.xyzw // Relocated from here with asmtool.py

mov o1.x, r3.z
mov o1.y, r4.x
mov o1.z, r1.x
mov o1.w, r0.x
mov o2.x, r3.x
mov o2.y, r4.y
mov o2.z, r1.y
mov o2.w, r0.z
mov o3.x, r3.y
mov o3.y, r4.z
mov o3.z, r1.w
mov o3.w, r0.w
mov o4.w, cb0[6].w
mov o5.xy, v3.xyxx
mov o5.w, r2.z
mov o8.zw, r2.zzzw
mov o6.xy, v5.xyxx
mov o9.x, v8.x
ret
// Approximately 0 instruction slots used