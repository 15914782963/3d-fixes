// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 4a16a62bf35ad1a6-ps.txt
// 3DMigoto: 4a16a62bf35ad1a6 |    Unity headers extracted from Relief Pack - Bonus Shaders_Water_ FlowMap
//    Shader "Relief Pack - Bonus Shaders/Water/ FlowMap" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "RenderType"="Opaque" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "RenderType"="Opaque" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Relief Pack - Bonus Shaders_Water_ FlowMap:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 138 5 2
//   undeciphered1a: 6
//   Keywords { "DIRECTIONAL" "FOG_EXP2" "RTP_SIMPLE_SHADING" }
//   undeciphered2: 1 5 5 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 32 [_LightColor0]
//   Vector 64 [_Color]
//   Float 80 [_GlossMin]
//   Float 84 [_GlossMax]
//   Float 88 [_Metalness]
//   Float 96 [TERRAIN_LayerWetStrength]
//   Float 100 [TERRAIN_WaterLevelSlopeDamp]
//   Float 144 [TERRAIN_WaterLevel]
//   Vector 160 [TERRAIN_WaterColor]
//   Float 176 [TERRAIN_WaterEdge]
//   Float 184 [TERRAIN_WaterGloss]
//   Float 188 [TERRAIN_WetGloss]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_HeightMap] 2D 3
//   SetTexture 1 [TERRAIN_FlowingMap] 2D 4
//   SetTexture 2 [_MainTex] 2D 1
//   SetTexture 3 [_BumpMap] 2D 2
//   SetTexture 4 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:03:13 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 6     zw        1     NONE   float
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// COLOR                    0   xyzw        6     NONE   float     z
// TEXCOORD                 5   xyzw        7     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.z
dcl_input_ps linear v7.zw
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 4a16a62bf35ad1a6-ps.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, r7.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
sample r2.xyzw, v1.xyxx, t0.xyzw, s3
dp2 r1.w, v7.zwzz, v7.zwzz
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r1.w, r1.w
add r1.w, -r1.w, l(1.000000)
mul r2.xy, v1.xyxx, l(0.125000, 0.125000, 0.000000, 0.000000)
sample r3.xyzw, r2.xyxx, t1.xyzw, s4
add r2.x, -cb0[6].x, l(1.000000)
dp2 r2.x, r3.wwww, r2.xxxx
mad_sat r2.x, v6.z, l(2.000000), -r2.x
mul_sat r1.w, r1.w, cb0[6].y
dp2_sat r2.x, cb0[6].xxxx, r2.xxxx
add r2.y, r2.x, l(-1.000000)
add r1.w, -r1.w, r2.y
mad r1.w, r1.w, l(2.000000), cb0[9].x
max r1.w, r1.w, l(0.000000)
min r1.w, r1.w, l(2.000000)
add r2.y, -r2.x, l(1.000000)
mad_sat r2.x, -r2.y, r2.w, r2.x
add r1.w, -r2.w, r1.w
mul_sat r1.w, r1.w, cb0[11].x
mul r1.w, r1.w, r1.w
sample r3.xyzw, v1.xyxx, t2.xyzw, s1
mul r2.yzw, r3.xxyz, cb0[4].xxyz
add r3.xyz, r2.yzwy, r2.yzwy
add r4.x, -cb0[5].x, cb0[5].y
mad r3.w, r3.w, r4.x, cb0[5].x
add r4.x, -r3.w, cb0[11].w
mad r3.w, r2.x, r4.x, r3.w
add r4.x, -r3.w, cb0[11].z
mad r3.w, r1.w, r4.x, r3.w
mul r4.x, r1.w, cb0[10].w
mad r2.yzw, -r2.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), cb0[10].xxyz
mad r2.yzw, r4.xxxx, r2.yyzw, r3.xxyz
sample r4.xyzw, v1.xyxx, t3.xyzw, s2
mad r3.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.x, r3.xyxx, r3.xyxx
min r4.x, r4.x, l(1.000000)
add r4.x, -r4.x, l(1.000000)
sqrt r3.z, r4.x
add r4.xyz, -r3.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mad r3.xyz, r1.wwww, r4.xyzx, r3.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
add r1.w, r2.x, r2.x
min r1.w, r1.w, l(1.000000)
mad r1.w, -r1.w, l(0.300000), l(1.000000)
mul r4.xyz, r1.wwww, r2.yzwy
eq r2.x, cb4[0].x, l(1.000000)
if_nz r2.x
  eq r2.x, cb4[0].y, l(1.000000)
  mul r5.xyz, v5.yyyy, cb4[2].xyzx
  mad r5.xyz, cb4[1].xyzx, v5.xxxx, r5.xyzx
  mad r5.xyz, cb4[3].xyzx, v5.zzzz, r5.xyzx
  add r5.xyz, r5.xyzx, cb4[4].xyzx
  movc r5.xyz, r2.xxxx, r5.xyzx, v5.xyzx
  add r5.xyz, r5.xyzx, -cb4[6].xyzx
  mul r5.yzw, r5.xxyz, cb4[5].xxyz
  mad r2.x, r5.y, l(0.250000), l(0.750000)
  mad r4.w, cb4[0].z, l(0.500000), l(0.750000)
  max r5.x, r2.x, r4.w
  sample r5.xyzw, r5.xzwx, t4.xyzw, s0
else
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.x, r5.xyzw, cb2[45].xyzw
dp3 r5.x, v2.xyzx, r3.xyzx
dp3 r5.y, v3.xyzx, r3.xyzx
dp3 r5.z, v4.xyzx, r3.xyzx
mul r3.xyz, r2.xxxx, cb0[2].xyzx
dp3 r2.x, r5.xyzx, r5.xyzx
rsq r2.x, r2.x
mul r5.xyz, r2.xxxx, r5.xyzx
mad r2.xyz, r2.yzwy, r1.wwww, l(-0.220916301, -0.220916301, -0.220916301, 0.000000)
mad r2.xyz, cb0[5].zzzz, r2.xyzx, l(0.220916301, 0.220916301, 0.220916301, 0.000000)
mad r1.w, -cb0[5].z, l(0.779083729), l(0.779083729)
mul r4.xyz, r1.wwww, r4.xyzx
add r1.w, -r3.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r5.xyzx, r1.xyzx
dp3_sat r1.x, r5.xyzx, cb2[0].xyzx
dp3_sat r1.y, r5.xyzx, r0.xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r1.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r1.x, l(1.000000)
mul r1.z, r0.z, r0.z
mul r1.z, r1.z, r1.z
mul r0.z, r0.z, r1.z
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.z, -|r0.w|, l(1.000000)
mul r2.w, r1.z, r1.z
mul r2.w, r2.w, r2.w
mul r1.z, r1.z, r2.w
mad r0.y, r0.y, r1.z, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
mad r1.z, -r1.w, r1.w, l(1.000000)
mad r1.w, |r0.w|, r1.z, r0.z
mad r1.z, r1.x, r1.z, r0.z
mul r0.w, |r0.w|, r1.z
mad r0.w, r1.x, r1.w, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.z, r1.y, r0.z, -r1.y
mad r1.y, r1.z, r1.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.y, r1.y, r1.y, l(1.000000012E-007)
div r0.z, r0.z, r1.y
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
max r0.z, r0.z, l(0.000100)
sqrt r0.z, r0.z
mul r0.yz, r1.xxxx, r0.yyzy
dp3 r0.w, r2.xyzx, r2.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r3.xyzx
mul r0.yzw, r3.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r3.xyzx, r0.xxxx, r2.xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad r0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
div r0.w, v2.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb3[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used