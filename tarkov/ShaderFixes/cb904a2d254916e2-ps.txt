// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed cb904a2d254916e2-ps.txt
// 3DMigoto: cb904a2d254916e2 |    Unity headers extracted from Decal_Deferred DecalShader Diffuse+Normals Cutout
//    Shader "Decal/Deferred DecalShader Diffuse+Normals Cutout" {
//      SubShader 1/1 {
//        Pass 1/1 {
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Decal_Deferred DecalShader Diffuse+Normals Cutout:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 124 7 6
//   undeciphered1a: 10
//   undeciphered2: 1 7 7 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 128
//   Float 64 [_SpecSmoothness]
//   Float 68 [_NormalPower]
//   Vector 80 [_Color]
//   Vector 96 [_SpecularColor]
//   Float 112 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   ConstBuffer "UnityLighting" 752
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityPerDraw" 160
//   Matrix 0 [unity_ObjectToWorld]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_CameraDepthTexture] 2D 4
//   SetTexture 1 [_NormalsCopy] 2D 5
//   SetTexture 2 [_MainTex] 2D 2
//   SetTexture 3 [_BumpMap] 2D 3
//   SetTexture 4 [unity_SpecCube0] CUBE 0
//   SetTexture 5 [unity_SpecCube1] CUBE -1
//   SetTexture 6 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//   BindCB "UnityLighting" 3
//   BindCB "UnityPerDraw" 4
//   BindCB "UnityReflectionProbes" 5
//   BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:20:18 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// SV_POSITION              0   xyzw        3      POS   float
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// NORMAL                   0   xyz         6     NONE   float   xyz
// TANGENT                  0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[41], immediateIndexed
dcl_constantbuffer cb4[4], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v4.xyw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed cb904a2d254916e2-ps.txt

mul r10.w, -r10.x, r10.y
mad r11.xyz, -r10.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.x, cb1[5].z, v5.z
mul r0.xyz, r0.xxxx, v5.xyzx
div r1.xy, v4.xyxx, v4.wwww
sample r2.xyzw, r1.xyxx, t0.xyzw, s4
mad r0.w, cb1[7].x, r2.x, cb1[7].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r2.xyz, r0.yyyy, cb2[19].xyzx
mad r0.xyw, cb2[18].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb2[20].xyzx, r0.zzzz, r0.xywx
add r0.xyz, r0.xyzx, cb2[21].xyzx
mov r2.x, v0.w
mov r2.y, v1.w
mov r2.z, v2.w
add r2.xyz, -r0.xyzx, r2.xyzx
dp3 r3.x, v0.xyzx, r2.xyzx
dp3 r3.y, v1.xyzx, r2.xyzx
dp3 r3.z, v2.xyzx, r2.xyzx
add r2.xyz, -|r3.xyzx|, v6.xyzx
lt r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
or r0.w, r2.y, r2.x
or r0.w, r2.z, r0.w
discard_nz r0.w
sample r1.xyzw, r1.xyxx, t1.xyzw, s5
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r1.xyzx, v1.xyzx
add r0.w, r0.w, l(-0.800000)
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
div r2.xy, r3.xzxx, v6.xzxx
add r2.xy, r2.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
add r2.zw, -v7.xxxy, v7.zzzw
mad r2.xy, r2.xyxx, r2.zwzz, v7.xyxx
sample r3.xyzw, r2.xyxx, t2.xyzw, s2
add r0.w, r3.w, -cb0[7].x
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
mul r3.xyzw, r3.xyzw, cb0[5].xyzw
sample r2.xyzw, r2.xyxx, t3.xyzw, s3
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r0.w, r0.w
mul r2.yzw, r2.yyyy, -v2.xxyz
mad r2.xyz, r2.xxxx, -v0.xyzx, r2.yzwy
mad r2.xyz, r0.wwww, v1.xyzx, r2.xyzx
mad o2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mul o2.w, r3.w, cb0[4].y
mul o1.w, r3.w, cb0[6].w
mul r2.xyz, r0.yyyy, cb4[1].xyzx
mad r2.xyz, cb4[0].xyzx, r0.xxxx, r2.xyzx
mad r2.xyz, cb4[2].xyzx, r0.zzzz, r2.xyzx
add r2.xyz, r2.xyzx, cb4[3].xyzx
add r2.xyz, -r2.xyzx, r11.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
add r0.w, -cb0[4].x, l(1.000000)
add r0.w, -r0.w, l(1.000000)
dp3 r2.w, -r2.xyzx, r1.xyzx
add r2.w, r2.w, r2.w
mad r2.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
eq r2.w, cb6[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb6[0].y, l(1.000000)
  mul r4.xyz, r0.yyyy, cb6[2].xyzx
  mad r4.xyz, cb6[1].xyzx, r0.xxxx, r4.xyzx
  mad r4.xyz, cb6[3].xyzx, r0.zzzz, r4.xyzx
  add r4.xyz, r4.xyzx, cb6[4].xyzx
  movc r4.xyz, r2.wwww, r4.xyzx, r0.xyzx
  add r4.xyz, r4.xyzx, -cb6[6].xyzx
  mul r4.yzw, r4.xxyz, cb6[5].xxyz
  mul r2.w, r4.y, l(0.250000)
  mul r4.y, cb6[0].z, l(0.500000)
  mad r5.x, -cb6[0].z, l(0.500000), l(0.250000)
  max r2.w, r2.w, r4.y
  min r4.x, r5.x, r2.w
  sample r5.xyzw, r4.xzwx, t6.xyzw, s1
  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r6.xyzw, r6.xyzx, t6.xyzw, s1
  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r4.xyzw, r4.xyzx, t6.xyzw, s1
  mov r1.w, l(1.000000)
  dp4 r5.x, r5.xyzw, r1.xyzw
  dp4 r5.y, r6.xyzw, r1.xyzw
  dp4 r5.z, r4.xyzw, r1.xyzw
else
  mov r1.w, l(1.000000)
  dp4 r5.x, cb3[38].xyzw, r1.xyzw
  dp4 r5.y, cb3[39].xyzw, r1.xyzw
  dp4 r5.z, cb3[40].xyzw, r1.xyzw
endif
max r1.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r1.xyz, r1.xyzx
mul r1.xyz, r1.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r1.xyz, r1.xyzx
mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r1.w, l(0.000000), cb5[2].w
if_nz r1.w
  dp3 r1.w, r2.xyzx, r2.xyzx
  rsq r1.w, r1.w
  mul r4.xyz, r1.wwww, r2.xyzx
  add r5.xyz, -r0.xyzx, cb5[0].xyzx
  div r5.xyz, r5.xyzx, r4.xyzx
  add r6.xyz, -r0.xyzx, cb5[1].xyzx
  div r6.xyz, r6.xyzx, r4.xyzx
  lt r7.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r4.xyzx
  movc r5.xyz, r7.xyzx, r5.xyzx, r6.xyzx
  min r1.w, r5.y, r5.x
  min r1.w, r5.z, r1.w
  add r5.xyz, r0.xyzx, -cb5[2].xyzx
  mad r4.xyz, r4.xyzx, r1.wwww, r5.xyzx
else
  mov r4.xyz, r2.xyzx
endif
mad r1.w, -r0.w, l(0.700000), l(1.700000)
mul r0.w, r0.w, r1.w
mul r0.w, r0.w, l(6.000000)
sample_l r4.xyzw, r4.xyzx, t4.xyzw, s0, r0.w
add r1.w, r4.w, l(-1.000000)
mad r1.w, cb5[3].w, r1.w, l(1.000000)
mul r1.w, r1.w, cb5[3].x
mul r5.xyz, r4.xyzx, r1.wwww
lt r2.w, cb5[1].w, l(0.999990)
if_nz r2.w
  lt r2.w, l(0.000000), cb5[6].w
  if_nz r2.w
    dp3 r2.w, r2.xyzx, r2.xyzx
    rsq r2.w, r2.w
    mul r6.xyz, r2.wwww, r2.xyzx
    add r7.xyz, -r0.xyzx, cb5[4].xyzx
    div r7.xyz, r7.xyzx, r6.xyzx
    add r8.xyz, -r0.xyzx, cb5[5].xyzx
    div r8.xyz, r8.xyzx, r6.xyzx
    lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
    movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
    min r2.w, r7.y, r7.x
    min r2.w, r7.z, r2.w
    add r0.xyz, r0.xyzx, -cb5[6].xyzx
    mad r2.xyz, r6.xyzx, r2.wwww, r0.xyzx
  endif
  sample_l r0.xyzw, r2.xyzx, t5.xyzw, s0, r0.w
  add r0.w, r0.w, l(-1.000000)
  mad r0.w, cb5[7].w, r0.w, l(1.000000)
  mul r0.w, r0.w, cb5[7].x
  mul r0.xyz, r0.xyzx, r0.wwww
  mad r2.xyz, r1.wwww, r4.xyzx, -r0.xyzx
  mad r5.xyz, cb5[1].wwww, r2.xyzx, r0.xyzx
endif
mul r0.xyz, r5.xyzx, cb0[6].xyzx
mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
exp o3.xyz, -r0.xyzx
mov o0.xyzw, r3.xyzw
mov o1.xyz, cb0[6].xyzx
mov o3.w, r3.w
ret
// Approximately 0 instruction slots used