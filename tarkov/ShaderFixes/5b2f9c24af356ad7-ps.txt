// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5b2f9c24af356ad7-ps.txt
// 3DMigoto: 5b2f9c24af356ad7 |    Unity headers extracted from Hidden_AreaLight
//    Shader "Hidden/AreaLight" {
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry-1" }
// 1:     Pass 3/7 {
// 2:     Pass 5/7 {
// 4:     Pass 7/7 {
//          Tags { "QUEUE"="Geometry-1" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hidden_AreaLight:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 570 8 42
//   undeciphered1a: 19
//   Keywords { "SHADOWCUBEPLANES" "SPECULAR" "AMBIENT" "INVERTEDSHADOWCUBEPLANES" "SPOTLIGHT" }
//   undeciphered2: 1 8 3 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 672
//   Vector 80 [_LightDir]
//   Vector 96 [_LightPos]
//   Vector 112 [_LightColor]
//   Float 228 [_Hardness]
//   Float 368 [_AtanFov]
//   Vector 384 [_ShadowPlanes0]
//   Vector 400 [_ShadowPlanes1]
//   Vector 416 [_ShadowPlanes2]
//   Vector 432 [_ShadowPlanes3]
//   Vector 448 [_ShadowPlanes4]
//   Vector 464 [_ShadowPlanes5]
//   Vector 480 [_InvertedShadowPlanes0]
//   Vector 496 [_InvertedShadowPlanes1]
//   Vector 512 [_InvertedShadowPlanes2]
//   Vector 528 [_InvertedShadowPlanes3]
//   Vector 544 [_InvertedShadowPlanes4]
//   Vector 560 [_InvertedShadowPlanes5]
//   Float 576 [_ShadowPlaneFeather]
//   Float 580 [_InvertedShadowPlaneFeather]
//   Float 656 [_SpecularScale]
//   Matrix 240 [_ShadowProjectionMatrix]
//   Matrix 592 [_LightVerts]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_CameraGBufferTexture0] 2D 4
//   SetTexture 2 [_CameraGBufferTexture1] 2D 5
//   SetTexture 3 [_CameraGBufferTexture2] 2D 6
//   SetTexture 4 [_AmpDiffAmpSpecFresnel] 2D 3
//   SetTexture 5 [_TransformInv_Diffuse] 2D 1
//   SetTexture 6 [_TransformInv_Specular] 2D 2
//   SetTexture 7 [_AOTex_PrismAO] 2D 7
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:05:25 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[42], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 21
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r19.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5b2f9c24af356ad7-ps.txt

mul r19.w, -r19.x, r19.y
mad r20.xyz, -r19.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.x, cb1[5].z, v2.z
mul r0.xyz, r0.xxxx, v2.xyzx
div r1.xy, v1.xyxx, v1.wwww
sample r2.xyzw, r1.xyxx, t0.xyzw, s0
mad r0.w, cb1[7].x, r2.x, cb1[7].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r2.xyz, r0.yyyy, cb2[19].xyzx
mad r0.xyw, cb2[18].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb2[20].xyzx, r0.zzzz, r0.xywx
add r0.xyz, r0.xyzx, cb2[21].xyzx
sample r2.xyzw, r1.xyxx, t1.xyzw, s4
sample r3.xyzw, r1.xyxx, t3.xyzw, s6
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r0.w, r0.xyzx, cb0[24].xyzx
add r0.w, -r0.w, cb0[24].w
add r0.w, r0.w, l(0.000100)
add r1.zw, cb0[36].xxxy, cb0[36].xxxy
add r0.w, r0.w, cb0[36].x
div r1.zw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.zzzw
mul_sat r0.w, r0.w, r1.z
mad r2.w, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r2.w
dp3 r2.w, r0.xyzx, cb0[25].xyzx
add r2.w, -r2.w, cb0[25].w
add r2.w, r2.w, l(0.000100)
add r2.w, r2.w, cb0[36].x
mul_sat r2.w, r1.z, r2.w
mad r3.w, r2.w, l(-2.000000), l(3.000000)
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, r3.w
mul r0.w, r0.w, r2.w
dp3 r2.w, r0.xyzx, cb0[26].xyzx
add r2.w, -r2.w, cb0[26].w
add r2.w, r2.w, l(0.000100)
add r2.w, r2.w, cb0[36].x
mul_sat r2.w, r1.z, r2.w
mad r3.w, r2.w, l(-2.000000), l(3.000000)
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, r3.w
mul r0.w, r0.w, r2.w
dp3 r2.w, r0.xyzx, cb0[27].xyzx
add r2.w, -r2.w, cb0[27].w
add r2.w, r2.w, l(0.000100)
add r2.w, r2.w, cb0[36].x
mul_sat r2.w, r1.z, r2.w
mad r3.w, r2.w, l(-2.000000), l(3.000000)
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, r3.w
mul r0.w, r0.w, r2.w
dp3 r2.w, r0.xyzx, cb0[28].xyzx
add r2.w, -r2.w, cb0[28].w
add r2.w, r2.w, l(0.000100)
add r2.w, r2.w, cb0[36].x
mul_sat r2.w, r1.z, r2.w
mad r3.w, r2.w, l(-2.000000), l(3.000000)
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, r3.w
mul r0.w, r0.w, r2.w
dp3 r2.w, r0.xyzx, cb0[29].xyzx
add r2.w, -r2.w, cb0[29].w
add r2.w, r2.w, l(0.000100)
add r2.w, r2.w, cb0[36].x
mul_sat r1.z, r1.z, r2.w
mad r2.w, r1.z, l(-2.000000), l(3.000000)
mul r1.z, r1.z, r1.z
mul r1.z, r1.z, r2.w
mul r0.w, r0.w, r1.z
dp3 r1.z, r0.xyzx, cb0[30].xyzx
add r1.z, -r1.z, cb0[30].w
add r1.z, r1.z, l(0.000100)
add r1.z, r1.z, cb0[36].y
mul_sat r1.z, r1.w, r1.z
mad r2.w, r1.z, l(-2.000000), l(3.000000)
mul r1.z, r1.z, r1.z
mul r1.z, r1.z, r2.w
dp3 r2.w, r0.xyzx, cb0[31].xyzx
add r2.w, -r2.w, cb0[31].w
add r2.w, r2.w, l(0.000100)
add r2.w, r2.w, cb0[36].y
mul_sat r2.w, r1.w, r2.w
mad r3.w, r2.w, l(-2.000000), l(3.000000)
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, r3.w
mul r1.z, r1.z, r2.w
dp3 r2.w, r0.xyzx, cb0[32].xyzx
add r2.w, -r2.w, cb0[32].w
add r2.w, r2.w, l(0.000100)
add r2.w, r2.w, cb0[36].y
mul_sat r2.w, r1.w, r2.w
mad r3.w, r2.w, l(-2.000000), l(3.000000)
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, r3.w
mul r1.z, r1.z, r2.w
dp3 r2.w, r0.xyzx, cb0[33].xyzx
add r2.w, -r2.w, cb0[33].w
add r2.w, r2.w, l(0.000100)
add r2.w, r2.w, cb0[36].y
mul_sat r2.w, r1.w, r2.w
mad r3.w, r2.w, l(-2.000000), l(3.000000)
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, r3.w
mul r1.z, r1.z, r2.w
dp3 r2.w, r0.xyzx, cb0[34].xyzx
add r2.w, -r2.w, cb0[34].w
add r2.w, r2.w, l(0.000100)
add r2.w, r2.w, cb0[36].y
mul_sat r2.w, r1.w, r2.w
mad r3.w, r2.w, l(-2.000000), l(3.000000)
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, r3.w
mul r1.z, r1.z, r2.w
dp3 r2.w, r0.xyzx, cb0[35].xyzx
add r2.w, -r2.w, cb0[35].w
add r2.w, r2.w, l(0.000100)
add r2.w, r2.w, cb0[36].y
mul_sat r1.w, r1.w, r2.w
mad r2.w, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.w
mad r1.z, -r1.z, r1.w, l(1.000000)
mul r0.w, r0.w, r1.z
ne r1.z, r0.w, l(0.000000)
if_nz r1.z
  mul r4.xyzw, r0.yyyy, cb0[16].xyzw
  mad r4.xyzw, cb0[15].xyzw, r0.xxxx, r4.xyzw
  mad r4.xyzw, cb0[17].xyzw, r0.zzzz, r4.xyzw
  add r4.xyzw, r4.xyzw, cb0[18].xyzw
  div r4.xyz, r4.xyzx, r4.wwww
  ge r1.zw, |r4.xxxy|, l(0.000000, 0.000000, 1.000000, 1.000000)
  and r1.zw, r1.zzzw, l(0, 0, 0x3f800000, 0x3f800000)
  dp2 r1.z, r1.zwzz, r1.zwzz
  eq r1.z, r1.z, l(0.000000)
  add r4.xy, |r4.xyxx|, l(-0.600000, -0.600000, 0.000000, 0.000000)
  max r4.xy, r4.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  dp2 r1.w, r4.xyxx, r4.xyxx
  sqrt r1.w, r1.w
  mad r2.w, cb0[14].y, l(100.000000), l(1.000000)
  add r1.w, r1.w, l(0.0999999940)
  add r1.w, r1.w, r1.w
  min r1.w, r1.w, l(1.000000)
  mad r3.w, r1.w, l(-2.000000), l(3.000000)
  mul r1.w, r1.w, r1.w
  mad r1.w, -r3.w, r1.w, l(1.000000)
  max r1.w, r1.w, l(0.000000)
  mul r1.w, r1.w, r2.w
  add r2.w, cb0[23].x, l(-1.000000)
  add r3.w, r4.z, l(-1.000000)
  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  mul_sat r2.w, r2.w, r3.w
  mad r3.w, r2.w, l(-2.000000), l(3.000000)
  mul r2.w, r2.w, r2.w
  mul r2.w, r2.w, r3.w
  min r2.w, r2.w, l(1.000000)
  mul_sat r1.w, r1.w, r2.w
  and r1.z, r1.w, r1.z
  ne r1.w, r1.z, l(0.000000)
  if_nz r1.w
    sample r4.xyzw, r1.xyxx, t2.xyzw, s5
    max r1.w, r4.w, l(0.010000)
    min r1.w, r1.w, l(0.930000)
    add r5.x, -r1.w, l(1.000000)
    add r4.yzw, -r0.xxyz, r20.xxyz
    dp3 r1.w, r4.yzwy, r4.yzwy
    rsq r1.w, r1.w
    mul r4.yzw, r1.wwww, r4.yyzw
    dp3 r1.w, r4.yzwy, -cb0[5].xyzx
    mad r4.yzw, cb0[5].xxyz, r1.wwww, r4.yyzw
    dp3 r2.w, r4.yzwy, r4.yzwy
    rsq r2.w, r2.w
    mul r4.yzw, r2.wwww, r4.yyzw
    mul r6.xyz, r4.zwyz, -cb0[5].zxyz
    mad r6.xyz, -cb0[5].yzxy, r4.wyzw, -r6.xyzx
    dp3 r2.w, r6.xyzx, r6.xyzx
    rsq r2.w, r2.w
    mul r6.xyz, r2.wwww, r6.xyzx
    add r7.xz, -r0.zzzz, cb0[39].xxyx
    add r8.xyz, -r0.xxxx, cb0[37].xyzx
    add r9.xyz, -r0.yyyy, cb0[38].xzyx
    add r10.xw, -r0.zzzz, cb0[39].zzzw
    add r10.y, -r0.x, cb0[37].w
    add r10.z, -r0.y, cb0[38].w
    mov r7.y, r8.x
    mov r7.w, r9.x
    dp3 r11.x, r7.ywxy, r4.yzwy
    dp3 r2.w, r7.ywxy, r6.xyzx
    dp3 r11.y, r7.ywxy, -cb0[5].xyzx
    mov r7.x, r8.y
    mov r7.y, r9.z
    dp3 r8.x, r7.xyzx, r4.yzwy
    dp3 r3.w, r7.xyzx, r6.xyzx
    dp3 r8.y, r7.xyzx, -cb0[5].xyzx
    mov r9.x, r8.z
    mov r9.z, r10.x
    dp3 r7.x, r9.xyzx, r4.yzwy
    dp3 r5.z, r9.xyzx, r6.xyzx
    dp3 r7.y, r9.xyzx, -cb0[5].xyzx
    dp3 r9.x, r10.yzwy, r4.yzwy
    dp3 r4.y, r10.yzwy, r6.xyzx
    dp3 r9.y, r10.yzwy, -cb0[5].xyzx
    add r4.z, -|r1.w|, l(1.000000)
    sqrt r4.z, r4.z
    mad r4.w, |r1.w|, l(-0.0187292993), l(0.074261)
    mad r4.w, r4.w, |r1.w|, l(-0.212114394)
    mad r4.w, r4.w, |r1.w|, l(1.57072878)
    mul r5.w, r4.z, r4.w
    mad r5.w, r5.w, l(-2.000000), l(3.14159274)
    lt r1.w, r1.w, -r1.w
    and r1.w, r1.w, r5.w
    mad r1.w, r4.w, r4.z, r1.w
    mul r5.y, r1.w, l(0.636942625)
    sample r6.xyzw, r5.xyxx, t4.xyzw, s3
    sample r10.xyzw, r5.xyxx, t5.xyzw, s1
    dp2 r12.x, r11.xyxx, r10.xwxx
    mul r12.y, r2.w, r10.z
    mov r13.x, r10.y
    mov r13.yw, l(0,1.000000,0,1.000000)
    dp2 r12.z, r11.xyxx, r13.xyxx
    dp2 r14.x, r8.xyxx, r10.xwxx
    mul r14.y, r3.w, r10.z
    dp2 r14.z, r8.xyxx, r13.xyxx
    dp2 r15.x, r7.xyxx, r10.xwxx
    mul r15.y, r5.z, r10.z
    dp2 r15.z, r7.xyxx, r13.xyxx
    dp2 r16.x, r9.xyxx, r10.xwxx
    mul r16.y, r4.y, r10.z
    dp2 r16.z, r9.xyxx, r13.xyxx
    lt r1.w, l(0.000000), r12.z
    and r4.z, r1.w, l(1)
    lt r4.w, l(0.000000), r14.z
    movc r1.w, r1.w, l(3), l(2)
    movc r1.w, r4.w, r1.w, r4.z
    lt r4.z, l(0.000000), r15.z
    iadd r4.w, r1.w, l(4)
    movc r1.w, r4.z, r4.w, r1.w
    lt r4.z, l(0.000000), r16.z
    iadd r4.w, r1.w, l(8)
    movc r1.w, r4.z, r4.w, r1.w
    switch r1.w
      case l(0)
      mov r10.xyz, r16.xyzx
      mov r1.w, l(0)
      break
      case l(1)
      mul r17.xyz, r12.zzzz, r14.xyzx
      mad r14.xyz, -r14.zzzz, r12.xyzx, r17.xyzx
      mul r17.xyz, r12.zzzz, r16.xyzx
      mad r15.xyz, -r16.zzzz, r12.xyzx, r17.xyzx
      mov r10.xyz, r16.xyzx
      mov r1.w, l(3)
      break
      case l(2)
      mul r17.xyz, r12.xyzx, r14.zzzz
      mad r12.xyz, -r12.zzzz, r14.xyzx, r17.xyzx
      mul r17.xyz, r14.zzzz, r15.xyzx
      mad r15.xyz, -r15.zzzz, r14.xyzx, r17.xyzx
      mov r10.xyz, r16.xyzx
      mov r1.w, l(3)
      break
      case l(3)
      mul r17.xyz, r14.zzzz, r15.xyzx
      mad r15.xyz, -r15.zzzz, r14.xyzx, r17.xyzx
      mul r17.xyz, r12.zzzz, r16.xyzx
      mad r10.xyz, -r16.zzzz, r12.xyzx, r17.xyzx
      mov r1.w, l(4)
      break
      case l(4)
      mul r17.xyz, r15.zzzz, r16.xyzx
      mad r12.xyz, -r16.zzzz, r15.xyzx, r17.xyzx
      mul r17.xyz, r14.xyzx, r15.zzzz
      mad r14.xyz, -r14.zzzz, r15.xyzx, r17.xyzx
      mov r10.xyz, r16.xyzx
      mov r1.w, l(3)
      break
      case l(5)
      mov r10.xyz, r16.xyzx
      mov r1.w, l(0)
      break
      case l(6)
      mul r17.xyz, r12.xyzx, r14.zzzz
      mad r12.xyz, -r12.zzzz, r14.xyzx, r17.xyzx
      mul r17.xyz, r15.zzzz, r16.xyzx
      mad r10.xyz, -r16.zzzz, r15.xyzx, r17.xyzx
      mov r1.w, l(4)
      break
      case l(7)
      mul r17.xyz, r12.zzzz, r16.xyzx
      mad r17.xyz, -r16.zzzz, r12.xyzx, r17.xyzx
      mul r18.xyz, r15.zzzz, r16.xyzx
      mad r10.xyz, -r16.zzzz, r15.xyzx, r18.xyzx
      mov r16.xyz, r17.xyzx
      mov r1.w, l(5)
      break
      case l(8)
      mul r17.xyz, r12.xyzx, r16.zzzz
      mad r12.xyz, -r12.zzzz, r16.xyzx, r17.xyzx
      mul r17.xyz, r15.xyzx, r16.zzzz
      mad r14.xyz, -r15.zzzz, r16.xyzx, r17.xyzx
      mov r15.xyz, r16.xyzx
      mov r10.xyz, r16.xyzx
      mov r1.w, l(3)
      break
      case l(9)
      mul r17.xyz, r12.zzzz, r14.xyzx
      mad r14.xyz, -r14.zzzz, r12.xyzx, r17.xyzx
      mul r17.xyz, r15.xyzx, r16.zzzz
      mad r15.xyz, -r15.zzzz, r16.xyzx, r17.xyzx
      mov r10.xyz, r16.xyzx
      mov r1.w, l(4)
      break
      case l(10)
      mov r10.xyz, r16.xyzx
      mov r1.w, l(0)
      break
      case l(11)
      mul r17.xyz, r15.xyzx, r16.zzzz
      mad r10.xyz, -r15.zzzz, r16.xyzx, r17.xyzx
      mul r17.xyz, r14.zzzz, r15.xyzx
      mad r15.xyz, -r15.zzzz, r14.xyzx, r17.xyzx
      mov r1.w, l(5)
      break
      case l(12)
      mul r17.xyz, r14.xyzx, r15.zzzz
      mad r14.xyz, -r14.zzzz, r15.xyzx, r17.xyzx
      mul r17.xyz, r12.xyzx, r16.zzzz
      mad r12.xyz, -r12.zzzz, r16.xyzx, r17.xyzx
      mov r10.xyz, r16.xyzx
      mov r1.w, l(4)
      break
      case l(13)
      mul r17.xyz, r14.xyzx, r15.zzzz
      mad r17.xyz, -r14.zzzz, r15.xyzx, r17.xyzx
      mul r18.xyz, r12.zzzz, r14.xyzx
      mad r14.xyz, -r14.zzzz, r12.xyzx, r18.xyzx
      mov r10.xyz, r15.xyzx
      mov r1.w, l(5)
      mov r15.xyz, r17.xyzx
      break
      case l(14)
      mul r17.xyz, r12.xyzx, r16.zzzz
      mad r17.xyz, -r12.zzzz, r16.xyzx, r17.xyzx
      mul r18.xyz, r12.xyzx, r14.zzzz
      mad r12.xyz, -r12.zzzz, r14.xyzx, r18.xyzx
      mov r10.xyz, r16.xyzx
      mov r16.xyz, r17.xyzx
      mov r1.w, l(5)
      break
      case l(15)
      mov r10.xyz, r16.xyzx
      mov r1.w, l(4)
      break
    endswitch
    if_nz r1.w
      dp3 r4.z, r12.xyzx, r12.xyzx
      rsq r4.z, r4.z
      mul r12.xyz, r4.zzzz, r12.xyzx
      dp3 r4.z, r14.xyzx, r14.xyzx
      rsq r4.z, r4.z
      mul r14.xyz, r4.zzzz, r14.xyzx
      dp3 r4.z, r15.xyzx, r15.xyzx
      rsq r4.z, r4.z
      mul r15.xyz, r4.zzzz, r15.xyzx
      dp3 r4.z, r10.xyzx, r10.xyzx
      rsq r4.z, r4.z
      mul r10.xyz, r4.zzzz, r10.xyzx
      ieq r17.xyz, r1.wwww, l(3, 4, 5, 0)
      dp3 r4.z, r16.xyzx, r16.xyzx
      rsq r4.z, r4.z
      mul r18.xyz, r4.zzzz, r16.xyzx
      movc r18.xyz, r17.yyyy, r12.xyzx, r18.xyzx
      movc r10.xyz, r17.xxxx, r12.xyzx, r10.xyzx
      movc r16.xyz, r17.xxxx, r16.xyzx, r18.xyzx
      dp3 r4.z, r12.xyzx, r14.xyzx
      max r4.z, r4.z, l(-0.999900)
      add r4.w, -|r4.z|, l(1.000000)
      sqrt r4.w, r4.w
      mad r5.w, |r4.z|, l(-0.0187292993), l(0.074261)
      mad r5.w, r5.w, |r4.z|, l(-0.212114394)
      mad r5.w, r5.w, |r4.z|, l(1.57072878)
      mul r6.w, r4.w, r5.w
      mad r6.w, r6.w, l(-2.000000), l(3.14159274)
      lt r4.z, r4.z, -r4.z
      and r4.z, r4.z, r6.w
      mad r4.z, r5.w, r4.w, r4.z
      sincos r4.w, null, r4.z
      div r4.z, r4.z, r4.w
      mul r4.w, r12.y, r14.x
      mad r4.w, r12.x, r14.y, -r4.w
      dp3 r5.w, r14.xyzx, r15.xyzx
      max r5.w, r5.w, l(-0.999900)
      add r6.w, -|r5.w|, l(1.000000)
      sqrt r6.w, r6.w
      mad r7.z, |r5.w|, l(-0.0187292993), l(0.074261)
      mad r7.z, r7.z, |r5.w|, l(-0.212114394)
      mad r7.z, r7.z, |r5.w|, l(1.57072878)
      mul r7.w, r6.w, r7.z
      mad r7.w, r7.w, l(-2.000000), l(3.14159274)
      lt r5.w, r5.w, -r5.w
      and r5.w, r5.w, r7.w
      mad r5.w, r7.z, r6.w, r5.w
      sincos r6.w, null, r5.w
      div r5.w, r5.w, r6.w
      mul r6.w, r14.y, r15.x
      mad r6.w, r14.x, r15.y, -r6.w
      mul r5.w, r5.w, r6.w
      mad r4.z, r4.z, r4.w, r5.w
      dp3 r4.w, r15.xyzx, r10.xyzx
      max r4.w, r4.w, l(-0.999900)
      add r5.w, -|r4.w|, l(1.000000)
      sqrt r5.w, r5.w
      mad r6.w, |r4.w|, l(-0.0187292993), l(0.074261)
      mad r6.w, r6.w, |r4.w|, l(-0.212114394)
      mad r6.w, r6.w, |r4.w|, l(1.57072878)
      mul r7.z, r5.w, r6.w
      mad r7.z, r7.z, l(-2.000000), l(3.14159274)
      lt r4.w, r4.w, -r4.w
      and r4.w, r4.w, r7.z
      mad r4.w, r6.w, r5.w, r4.w
      sincos r5.w, null, r4.w
      div r4.w, r4.w, r5.w
      mul r5.w, r10.x, r15.y
      mad r5.w, r15.x, r10.y, -r5.w
      mad r4.z, r4.w, r5.w, r4.z
      uge r1.w, r1.w, l(4)
      dp3 r4.w, r10.xyzx, r16.xyzx
      max r4.w, r4.w, l(-0.999900)
      add r5.w, -|r4.w|, l(1.000000)
      sqrt r5.w, r5.w
      mad r6.w, |r4.w|, l(-0.0187292993), l(0.074261)
      mad r6.w, r6.w, |r4.w|, l(-0.212114394)
      mad r6.w, r6.w, |r4.w|, l(1.57072878)
      mul r7.z, r5.w, r6.w
      mad r7.z, r7.z, l(-2.000000), l(3.14159274)
      lt r4.w, r4.w, -r4.w
      and r4.w, r4.w, r7.z
      mad r4.w, r6.w, r5.w, r4.w
      sincos r5.w, null, r4.w
      div r4.w, r4.w, r5.w
      mul r5.w, r10.y, r16.x
      mad r5.w, r10.x, r16.y, -r5.w
      mad r4.w, r4.w, r5.w, r4.z
      movc r1.w, r1.w, r4.w, r4.z
      dp3 r4.z, r16.xyzx, r12.xyzx
      max r4.z, r4.z, l(-0.999900)
      add r4.w, -|r4.z|, l(1.000000)
      sqrt r4.w, r4.w
      mad r5.w, |r4.z|, l(-0.0187292993), l(0.074261)
      mad r5.w, r5.w, |r4.z|, l(-0.212114394)
      mad r5.w, r5.w, |r4.z|, l(1.57072878)
      mul r6.w, r4.w, r5.w
      mad r6.w, r6.w, l(-2.000000), l(3.14159274)
      lt r4.z, r4.z, -r4.z
      and r4.z, r4.z, r6.w
      mad r4.z, r5.w, r4.w, r4.z
      sincos r4.w, null, r4.z
      div r4.z, r4.z, r4.w
      mul r4.w, r12.x, r16.y
      mad r4.w, r16.x, r12.y, -r4.w
      mad r4.z, r4.z, r4.w, r1.w
      movc r1.w, r17.z, r4.z, r1.w
      mul r1.w, r1.w, l(0.159150)
      max r1.w, r1.w, l(0.000000)
    else
      mov r1.w, l(0)
    endif
    mul r1.w, r6.x, r1.w
    sample r10.xyzw, r5.xyxx, t6.xyzw, s2
    dp2 r12.x, r11.xyxx, r10.xwxx
    mul r12.y, r2.w, r10.z
    mov r13.z, r10.y
    dp2 r12.z, r11.xyxx, r13.zwzz
    dp2 r11.x, r8.xyxx, r10.xwxx
    mul r11.y, r3.w, r10.z
    dp2 r11.z, r8.xyxx, r13.zwzz
    dp2 r8.x, r7.xyxx, r10.xwxx
    mul r8.y, r5.z, r10.z
    dp2 r8.z, r7.xyxx, r13.zwzz
    dp2 r5.x, r9.xyxx, r10.xwxx
    mul r5.y, r4.y, r10.z
    dp2 r5.z, r9.xyxx, r13.zwzz
    lt r2.w, l(0.000000), r12.z
    and r3.w, r2.w, l(1)
    lt r4.y, l(0.000000), r11.z
    movc r2.w, r2.w, l(3), l(2)
    movc r2.w, r4.y, r2.w, r3.w
    lt r3.w, l(0.000000), r8.z
    iadd r4.y, r2.w, l(4)
    movc r2.w, r3.w, r4.y, r2.w
    lt r3.w, l(0.000000), r5.z
    iadd r4.y, r2.w, l(8)
    movc r2.w, r3.w, r4.y, r2.w
    switch r2.w
      case l(0)
      mov r4.yzw, r5.xxyz
      mov r2.w, l(0)
      break
      case l(1)
      mul r7.xyz, r11.xyzx, r12.zzzz
      mad r11.xyz, -r11.zzzz, r12.xyzx, r7.xyzx
      mul r7.xyz, r5.xyzx, r12.zzzz
      mad r8.xyz, -r5.zzzz, r12.xyzx, r7.xyzx
      mov r4.yzw, r5.xxyz
      mov r2.w, l(3)
      break
      case l(2)
      mul r7.xyz, r12.xyzx, r11.zzzz
      mad r12.xyz, -r12.zzzz, r11.xyzx, r7.xyzx
      mul r7.xyz, r8.xyzx, r11.zzzz
      mad r8.xyz, -r8.zzzz, r11.xyzx, r7.xyzx
      mov r4.yzw, r5.xxyz
      mov r2.w, l(3)
      break
      case l(3)
      mul r7.xyz, r8.xyzx, r11.zzzz
      mad r8.xyz, -r8.zzzz, r11.xyzx, r7.xyzx
      mul r7.xyz, r5.xyzx, r12.zzzz
      mad r4.yzw, -r5.zzzz, r12.xxyz, r7.xxyz
      mov r2.w, l(4)
      break
      case l(4)
      mul r7.xyz, r5.xyzx, r8.zzzz
      mad r12.xyz, -r5.zzzz, r8.xyzx, r7.xyzx
      mul r7.xyz, r11.xyzx, r8.zzzz
      mad r11.xyz, -r11.zzzz, r8.xyzx, r7.xyzx
      mov r4.yzw, r5.xxyz
      mov r2.w, l(3)
      break
      case l(5)
      mov r4.yzw, r5.xxyz
      mov r2.w, l(0)
      break
      case l(6)
      mul r7.xyz, r12.xyzx, r11.zzzz
      mad r12.xyz, -r12.zzzz, r11.xyzx, r7.xyzx
      mul r7.xyz, r5.xyzx, r8.zzzz
      mad r4.yzw, -r5.zzzz, r8.xxyz, r7.xxyz
      mov r2.w, l(4)
      break
      case l(7)
      mul r7.xyz, r5.xyzx, r12.zzzz
      mad r7.xyz, -r5.zzzz, r12.xyzx, r7.xyzx
      mul r9.xyz, r5.xyzx, r8.zzzz
      mad r4.yzw, -r5.zzzz, r8.xxyz, r9.xxyz
      mov r5.xyz, r7.xyzx
      mov r2.w, l(5)
      break
      case l(8)
      mul r7.xyz, r12.xyzx, r5.zzzz
      mad r12.xyz, -r12.zzzz, r5.xyzx, r7.xyzx
      mul r7.xyz, r8.xyzx, r5.zzzz
      mad r11.xyz, -r8.zzzz, r5.xyzx, r7.xyzx
      mov r8.xyz, r5.xyzx
      mov r4.yzw, r5.xxyz
      mov r2.w, l(3)
      break
      case l(9)
      mul r7.xyz, r11.xyzx, r12.zzzz
      mad r11.xyz, -r11.zzzz, r12.xyzx, r7.xyzx
      mul r7.xyz, r8.xyzx, r5.zzzz
      mad r8.xyz, -r8.zzzz, r5.xyzx, r7.xyzx
      mov r4.yzw, r5.xxyz
      mov r2.w, l(4)
      break
      case l(10)
      mov r4.yzw, r5.xxyz
      mov r2.w, l(0)
      break
      case l(11)
      mul r7.xyz, r8.xyzx, r5.zzzz
      mad r4.yzw, -r8.zzzz, r5.xxyz, r7.xxyz
      mul r7.xyz, r8.xyzx, r11.zzzz
      mad r8.xyz, -r8.zzzz, r11.xyzx, r7.xyzx
      mov r2.w, l(5)
      break
      case l(12)
      mul r7.xyz, r11.xyzx, r8.zzzz
      mad r11.xyz, -r11.zzzz, r8.xyzx, r7.xyzx
      mul r7.xyz, r12.xyzx, r5.zzzz
      mad r12.xyz, -r12.zzzz, r5.xyzx, r7.xyzx
      mov r4.yzw, r5.xxyz
      mov r2.w, l(4)
      break
      case l(13)
      mul r7.xyz, r11.xyzx, r8.zzzz
      mad r7.xyz, -r11.zzzz, r8.xyzx, r7.xyzx
      mul r9.xyz, r11.xyzx, r12.zzzz
      mad r11.xyz, -r11.zzzz, r12.xyzx, r9.xyzx
      mov r4.yzw, r8.xxyz
      mov r2.w, l(5)
      mov r8.xyz, r7.xyzx
      break
      case l(14)
      mul r7.xyz, r12.xyzx, r5.zzzz
      mad r7.xyz, -r12.zzzz, r5.xyzx, r7.xyzx
      mul r9.xyz, r12.xyzx, r11.zzzz
      mad r12.xyz, -r12.zzzz, r11.xyzx, r9.xyzx
      mov r4.yzw, r5.xxyz
      mov r5.xyz, r7.xyzx
      mov r2.w, l(5)
      break
      case l(15)
      mov r4.yzw, r5.xxyz
      mov r2.w, l(4)
      break
    endswitch
    if_nz r2.w
      dp3 r3.w, r12.xyzx, r12.xyzx
      rsq r3.w, r3.w
      mul r7.xyz, r3.wwww, r12.xyzx
      dp3 r3.w, r11.xyzx, r11.xyzx
      rsq r3.w, r3.w
      mul r9.xyz, r3.wwww, r11.xyzx
      dp3 r3.w, r8.xyzx, r8.xyzx
      rsq r3.w, r3.w
      mul r8.xyz, r3.wwww, r8.xyzx
      dp3 r3.w, r4.yzwy, r4.yzwy
      rsq r3.w, r3.w
      mul r4.yzw, r3.wwww, r4.yyzw
      ieq r10.xyz, r2.wwww, l(3, 4, 5, 0)
      dp3 r3.w, r5.xyzx, r5.xyzx
      rsq r3.w, r3.w
      mul r11.xyz, r3.wwww, r5.xyzx
      movc r11.xyz, r10.yyyy, r7.xyzx, r11.xyzx
      movc r4.yzw, r10.xxxx, r7.xxyz, r4.yyzw
      movc r5.xyz, r10.xxxx, r5.xyzx, r11.xyzx
      dp3 r3.w, r7.xyzx, r9.xyzx
      max r3.w, r3.w, l(-0.999900)
      add r5.w, -|r3.w|, l(1.000000)
      sqrt r5.w, r5.w
      mad r6.x, |r3.w|, l(-0.0187292993), l(0.074261)
      mad r6.x, r6.x, |r3.w|, l(-0.212114394)
      mad r6.x, r6.x, |r3.w|, l(1.57072878)
      mul r6.w, r5.w, r6.x
      mad r6.w, r6.w, l(-2.000000), l(3.14159274)
      lt r3.w, r3.w, -r3.w
      and r3.w, r3.w, r6.w
      mad r3.w, r6.x, r5.w, r3.w
      sincos r5.w, null, r3.w
      div r3.w, r3.w, r5.w
      mul r5.w, r7.y, r9.x
      mad r5.w, r7.x, r9.y, -r5.w
      dp3 r6.x, r9.xyzx, r8.xyzx
      max r6.x, r6.x, l(-0.999900)
      add r6.w, -|r6.x|, l(1.000000)
      sqrt r6.w, r6.w
      mad r7.w, |r6.x|, l(-0.0187292993), l(0.074261)
      mad r7.w, r7.w, |r6.x|, l(-0.212114394)
      mad r7.w, r7.w, |r6.x|, l(1.57072878)
      mul r8.w, r6.w, r7.w
      mad r8.w, r8.w, l(-2.000000), l(3.14159274)
      lt r6.x, r6.x, -r6.x
      and r6.x, r6.x, r8.w
      mad r6.x, r7.w, r6.w, r6.x
      sincos r6.w, null, r6.x
      div r6.x, r6.x, r6.w
      mul r6.w, r8.x, r9.y
      mad r6.w, r9.x, r8.y, -r6.w
      mul r6.x, r6.w, r6.x
      mad r3.w, r3.w, r5.w, r6.x
      dp3 r5.w, r8.xyzx, r4.yzwy
      max r5.w, r5.w, l(-0.999900)
      add r6.x, -|r5.w|, l(1.000000)
      sqrt r6.x, r6.x
      mad r6.w, |r5.w|, l(-0.0187292993), l(0.074261)
      mad r6.w, r6.w, |r5.w|, l(-0.212114394)
      mad r6.w, r6.w, |r5.w|, l(1.57072878)
      mul r7.w, r6.x, r6.w
      mad r7.w, r7.w, l(-2.000000), l(3.14159274)
      lt r5.w, r5.w, -r5.w
      and r5.w, r5.w, r7.w
      mad r5.w, r6.w, r6.x, r5.w
      sincos r6.x, null, r5.w
      div r5.w, r5.w, r6.x
      mul r6.x, r4.y, r8.y
      mad r6.x, r8.x, r4.z, -r6.x
      mad r3.w, r5.w, r6.x, r3.w
      uge r2.w, r2.w, l(4)
      dp3 r4.w, r4.yzwy, r5.xyzx
      max r4.w, r4.w, l(-0.999900)
      add r5.w, -|r4.w|, l(1.000000)
      sqrt r5.w, r5.w
      mad r6.x, |r4.w|, l(-0.0187292993), l(0.074261)
      mad r6.x, r6.x, |r4.w|, l(-0.212114394)
      mad r6.x, r6.x, |r4.w|, l(1.57072878)
      mul r6.w, r5.w, r6.x
      mad r6.w, r6.w, l(-2.000000), l(3.14159274)
      lt r4.w, r4.w, -r4.w
      and r4.w, r4.w, r6.w
      mad r4.w, r6.x, r5.w, r4.w
      sincos r5.w, null, r4.w
      div r4.w, r4.w, r5.w
      mul r4.z, r4.z, r5.x
      mad r4.y, r4.y, r5.y, -r4.z
      mad r4.y, r4.w, r4.y, r3.w
      movc r2.w, r2.w, r4.y, r3.w
      dp3 r3.w, r5.xyzx, r7.xyzx
      max r3.w, r3.w, l(-0.999900)
      add r4.y, -|r3.w|, l(1.000000)
      sqrt r4.y, r4.y
      mad r4.z, |r3.w|, l(-0.0187292993), l(0.074261)
      mad r4.z, r4.z, |r3.w|, l(-0.212114394)
      mad r4.z, r4.z, |r3.w|, l(1.57072878)
      mul r4.w, r4.y, r4.z
      mad r4.w, r4.w, l(-2.000000), l(3.14159274)
      lt r3.w, r3.w, -r3.w
      and r3.w, r3.w, r4.w
      mad r3.w, r4.z, r4.y, r3.w
      sincos r4.y, null, r3.w
      div r3.w, r3.w, r4.y
      mul r4.y, r7.x, r5.y
      mad r4.y, r5.x, r7.y, -r4.y
      mad r3.w, r3.w, r4.y, r2.w
      movc r2.w, r10.z, r3.w, r2.w
      mul r2.w, r2.w, l(0.159150)
      max r2.w, r2.w, l(0.000000)
    else
      mov r2.w, l(0)
    endif
    mul r2.w, r6.y, r2.w
    add r3.w, -r4.x, l(1.000000)
    mad r3.w, r3.w, r6.z, r4.x
    mul r2.w, r2.w, cb0[41].x
    mul r2.w, r3.w, r2.w
    mul r2.w, r2.w, l(3.14159274)
    mad r2.yzw, r1.wwww, r2.xxyz, r2.wwww
    mul r2.yzw, r1.zzzz, r2.yyzw
    mul r4.xyz, r0.wwww, cb0[7].xyzx
    mul r2.yzw, r2.yyzw, r4.xxyz
  else
    mov r2.yzw, l(0,0,0,0)
  endif
else
  mov r2.yzw, l(0,0,0,0)
endif
sample r1.xyzw, r1.xyxx, t7.xyzw, s7
add r0.xyz, -r0.xyzx, cb0[6].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r0.w, -r1.x, l(1.000000)
add r1.x, r1.x, r1.x
mul r1.x, r2.x, r1.x
mad r1.x, r1.x, r2.x, l(1.000000)
dp3 r1.y, r2.yzwy, l(0.220000, 0.707000, 0.071000, 0.000000)
dp3 r0.x, r3.xyzx, r0.xyzx
mul_sat r0.x, r0.x, r1.y
add r0.y, -r0.w, r1.x
mad r0.x, r0.x, r0.y, r0.w
mul o0.xyzw, r0.xxxx, r2.yzww
ret
// Approximately 0 instruction slots used