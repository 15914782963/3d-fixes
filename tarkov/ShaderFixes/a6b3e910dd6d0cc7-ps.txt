// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a6b3e910dd6d0cc7-ps.txt
// 3DMigoto: a6b3e910dd6d0cc7 | Matched 2 variants of 1 shaders: p0/Detailed Bumped Specular
//
//       Unity headers extracted from p0_Detailed Bumped Specular
//       Shader "p0/Detailed Bumped Specular" {
//         CustomEditor "FresnelMaterialEditor"
//         Fallback "Specular"
//         SubShader 1/1 {
//           LOD 400
//           Tags { "RenderType"="Opaque" }
//           Pass 6/6 {
//             Name "META"
//             Tags { "LIGHTMODE"="META" "RenderType"="Opaque" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from p0_Detailed Bumped Specular:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 33 3 0
//      undeciphered1a: 3
// 2:   Keywords { "Rain" }
//      undeciphered2: 1 3 3 3 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 192
//      Vector 64 [_Color]
//      Vector 112 [_DefVals] 3
//      Float 124 [unity_OneOverOutputBoost]
//      Float 128 [unity_MaxOutputValue]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityMetaPass" 48
//      VectorBool 16 [unity_MetaFragmentControl] 4
//      SetTexture 0 [_MainTex] 2D 0
//      SetTexture 1 [_BumpMap] 2D 1
//      SetTexture 2 [_BumpMap2] 2D 2
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityMetaPass" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:15:13 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_output o0.xyzw
dcl_temps 5
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a6b3e910dd6d0cc7-ps.txt

mul r3.w, -r3.x, r3.y
mad r4.xyz, -r3.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v3.w
mov r0.y, v4.w
mov r0.z, v5.w
add r0.xyz, -r0.xyzx, r4.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyz, r0.yyyy, v4.xyzx
mad r0.xyw, v3.xyxz, r0.xxxx, r1.xyxz
mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
sample r1.xyzw, v2.xyxx, t2.xyzw, s2
add r1.xz, -r1.wwyw, l(1.000000, 0.000000, 1.000000, 0.000000)
sample r2.xyzw, v1.zwzz, t1.xyzw, s1
add r2.xz, -r2.wwyw, l(1.000000, 0.000000, 1.000000, 0.000000)
add r2.xz, r2.xxzx, r2.xxzx
mad r1.xz, -r2.xxzx, r1.xxzx, l(1.000000, 0.000000, 1.000000, 0.000000)
add r2.xz, r2.wwyw, r2.wwyw
lt r2.yw, r2.wwwy, l(0.000000, 0.500000, 0.000000, 0.500000)
mul r1.yw, r1.wwwy, r2.xxxz
movc r1.xy, r2.ywyy, r1.ywyy, r1.xzxx
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r1.xyxx, r1.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r1.z, r0.w
dp3 r0.x, r0.xyzx, r1.xyzx
add r0.x, -r0.x, l(1.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, l(0.500000)
mad r0.x, cb0[7].y, r0.x, cb0[7].x
sample r1.xyzw, v1.xyxx, t0.xyzw, s0
mul r0.yzw, r1.xxyz, cb0[4].xxyz
mul r0.xyz, r0.xxxx, r0.yzwy
log r0.xyz, r0.xyzx
mov_sat r0.w, cb0[7].w
mul r0.xyz, r0.xyzx, r0.wwww
exp r0.xyz, r0.xyzx
min r0.xyz, r0.xyzx, cb0[8].xxxx
mov r0.w, l(1.000000)
movc r0.xyzw, cb2[1].xxxx, r0.xyzw, l(0,0,0,0)
movc o0.xyzw, cb2[1].yyyy, l(0,0,0,0.0235294122), r0.xyzw
ret
// Approximately 0 instruction slots used