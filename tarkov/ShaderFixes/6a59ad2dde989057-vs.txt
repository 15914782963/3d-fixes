// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 6a59ad2dde989057-vs.txt
// 3DMigoto: 6a59ad2dde989057 |    Unity headers extracted from Custom_MuzzleSmoke
//    Shader "Custom/MuzzleSmoke" {
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/1 {
//          Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_MuzzleSmoke:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201609010 38 0 0
//   undeciphered1a: 3
//   undeciphered2: 1 0 4 0 0 0
//   undeciphered3: 29 4 0 0 3 4 4 5 2 1
//   ConstBuffer "$Globals" 64
//   Float 40 [_Width]
//   Float 44 [_UVYScale]
//   Float 48 [_DiffusionStrength]
//   Float 52 [_StartFade]
//   Float 56 [_EndFade]
//   Float 60 [_End]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityPerDraw" 160
//   Matrix 0 [unity_ObjectToWorld]
//   ConstBuffer "UnityPerFrame" 384
//   Matrix 80 [glstate_matrix_projection]
//   Matrix 144 [unity_MatrixV]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:07:25 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// COLOR                    0   xyzw        3     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
// COLOR                    0     z         1     NONE   float     z
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_constantbuffer cb3[13], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyz
dcl_input v3.w
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_output o2.xyzw
dcl_temps 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xy, v2.yyyy, cb3[10].xyxx
mad r0.xy, cb3[9].xyxx, v2.xxxx, r0.xyxx
mad r0.xy, cb3[11].xyxx, v2.zzzz, r0.xyxx
dp2 r0.z, r0.xyxx, r0.xyxx
rsq r0.z, r0.z
mul r0.xy, r0.zzzz, r0.xyxx
mov r0.z, -r0.y
mul r0.xy, r0.zxzz, v1.xxxx
mul r0.z, v1.z, v1.z
mad r0.z, r0.z, cb0[3].x, cb0[2].z
mul r1.xyzw, v0.yyyy, cb3[10].xyzw
mad r1.xyzw, cb3[9].xyzw, v0.xxxx, r1.xyzw
mad r1.xyzw, cb3[11].xyzw, v0.zzzz, r1.xyzw
mad r1.xyzw, cb3[12].xyzw, v0.wwww, r1.xyzw
mad r0.xy, r0.xyxx, r0.zzzz, r1.xyxx
mul r2.xyzw, r0.yyyy, cb3[6].xyzw
mad r0.xyzw, cb3[5].xyzw, r0.xxxx, r2.xyzw
mad r0.xyzw, cb3[7].xyzw, r1.zzzz, r0.xyzw
mad r0.xyzw, cb3[8].xyzw, r1.wwww, r0.xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 6a59ad2dde989057-vs.txt
ne r3.w, r0.w, l(1.0)
if_nz r3.w
  add r3.w, r0.w, -r3.y
  mad r0.x, r3.w, r3.x, r0.x
endif

div_sat r0.z, v1.z, cb0[3].y
mul r0.z, r0.z, v3.w
add r1.x, -v1.z, cb0[3].w
div_sat r1.x, r1.x, cb0[3].z
mul o1.z, r0.z, r1.x
max o1.x, v1.x, l(0.000000)
mul o1.y, v1.y, cb0[2].w
mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o2.w, r0.w
add o2.xy, r1.zzzz, r1.xwxx
mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb2[3].xyzw
mul r0.y, r0.y, cb3[10].z
mad r0.x, cb3[9].z, r0.x, r0.y
mad r0.x, cb3[11].z, r0.z, r0.x
mad r0.x, cb3[12].z, r0.w, r0.x
mov o2.z, -r0.x
ret
// Approximately 0 instruction slots used