// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed d61cab620f385953-vs.txt
// 3DMigoto: d61cab620f385953 | Matched 16 variants of 2 shaders: Nature/SpeedTree, Nature/SpeedTreeEFT
//
// 00ff:    Unity headers extracted from Nature_SpeedTree
// ff00:    Unity headers extracted from Nature_SpeedTreeEFT
// 00ff:    Shader "Nature/SpeedTree" {
// ff00:    Shader "Nature/SpeedTreeEFT" {
//            CustomEditor "SpeedTreeMaterialInspector"
//            Fallback "Transparent/Cutout/VertexLit"
//            SubShader 1/2 {
//              LOD 400
//              Tags { "DisableBatching"="LodFading" "IGNOREPROJECTOR"="true" "QUEUE"="Geometry" "RenderType"="Opaque" }
//              Pass 4/8 {
//                Name "PREPASS"
//                Tags { "DisableBatching"="LodFading" "IGNOREPROJECTOR"="true" "LIGHTMODE"="PREPASSFINAL" "QUEUE"="Geometry" "RenderType"="Opaque" }
//                ZWrite Off
//                Program "vp" {
//                  SubProgram "d3d11" {
//                  }
//                }
//              }
//            }
//          }
//
// 00ff: Unity 5.3 headers extracted from Nature_SpeedTree:
// ff00: Unity 5.3 headers extracted from Nature_SpeedTreeEFT:
//         API d3d11
//         Shader model vs_4_0
//         undeciphered1: 201609010 181 0 4
//         undeciphered1a: 6
// 1010:   Keywords { "FOG_EXP" "LOD_FADE_CROSSFADE" "GEOM_TYPE_BRANCH_DETAIL" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" }
// 0101:   Keywords { "FOG_EXP" "LOD_FADE_CROSSFADE" "GEOM_TYPE_BRANCH_DETAIL" "EFFECT_HUE_VARIATION" }
// 2020:   Keywords { "FOG_EXP" "UNITY_HDR_ON" "LOD_FADE_CROSSFADE" "GEOM_TYPE_BRANCH_DETAIL" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" }
// 0202:   Keywords { "FOG_EXP" "UNITY_HDR_ON" "LOD_FADE_CROSSFADE" "GEOM_TYPE_BRANCH_DETAIL" "EFFECT_HUE_VARIATION" }
// 4040:   Keywords { "FOG_EXP2" "LOD_FADE_CROSSFADE" "GEOM_TYPE_BRANCH_DETAIL" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" }
// 0404:   Keywords { "FOG_EXP2" "LOD_FADE_CROSSFADE" "GEOM_TYPE_BRANCH_DETAIL" "EFFECT_HUE_VARIATION" }
// 8080:   Keywords { "FOG_EXP2" "UNITY_HDR_ON" "LOD_FADE_CROSSFADE" "GEOM_TYPE_BRANCH_DETAIL" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" }
// 0808:   Keywords { "FOG_EXP2" "UNITY_HDR_ON" "LOD_FADE_CROSSFADE" "GEOM_TYPE_BRANCH_DETAIL" "EFFECT_HUE_VARIATION" }
//         undeciphered2: 1 0 6 0 0 0
//         undeciphered3: 47 5 0 0 1 2 3 4 5 6 2 1
// 00ff:   ConstBuffer "$Globals" 128
// ff00:   ConstBuffer "$Globals" 144
//         Float 64 [_WindQuality]
//         Float 68 [_WindEnabled]
//         Vector 80 [_HueVariation]
//         Vector 96 [_Color]
//         ConstBuffer "UnityPerCamera" 144
//         Vector 80 [_ProjectionParams]
//         Vector 96 [_ScreenParams]
//         ConstBuffer "UnityLighting" 752
//         Vector 608 [unity_SHAr]
//         Vector 624 [unity_SHAg]
//         Vector 640 [unity_SHAb]
//         Vector 656 [unity_SHBr]
//         Vector 672 [unity_SHBg]
//         Vector 688 [unity_SHBb]
//         Vector 704 [unity_SHC]
//         ConstBuffer "UnityPerDraw" 160
//         Matrix 0 [unity_ObjectToWorld]
//         ConstBuffer "UnityPerFrame" 384
//         Matrix 272 [unity_MatrixVP]
//         ConstBuffer "SpeedTreeWind" 256
//         Vector 0 [_ST_WindVector]
//         Vector 16 [_ST_WindGlobal]
//         Vector 32 [_ST_WindBranch]
//         Vector 48 [_ST_WindBranchTwitch]
//         Vector 64 [_ST_WindBranchWhip]
//         Vector 80 [_ST_WindBranchAnchor]
//         Vector 96 [_ST_WindBranchAdherences]
//         Vector 112 [_ST_WindTurbulences]
//         Vector 240 [_ST_WindAnimation]
//         BindCB "$Globals" 0
//         BindCB "UnityPerCamera" 1
//         BindCB "UnityLighting" 2
//         BindCB "UnityPerDraw" 3
//         BindCB "UnityPerFrame" 4
//         BindCB "SpeedTreeWind" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:21:43 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float
// TEXCOORD                 2   xyzw        5     NONE   float   xyz
// TEXCOORD                 3   xy          6     NONE   float
// COLOR                    0   xyzw        7     NONE   float   x  w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 8      w        1     NONE   float      w
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyz         8     NONE   float   xyz
//
vs_4_0
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[4], immediateIndexed
dcl_constantbuffer cb4[21], immediateIndexed
dcl_constantbuffer cb5[16], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input v3.xyzw
dcl_input v5.xyz
dcl_input v7.xw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o1.w
dcl_output o2.xyzw
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xyz
dcl_temps 7

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

mul o2.xyz, v7.xxxx, cb0[6].xyzx
add r0.x, cb3[3].y, cb3[3].x
add r0.y, r0.x, cb3[3].z
add r0.z, v0.x, v2.y
add r0.z, r0.z, v2.x
frc r0.yz, r0.yyzy
mad r0.y, r0.z, l(0.500000), r0.y
add r0.y, r0.y, l(-0.300000)
mul_sat o3.z, r0.y, cb0[5].w
eq r0.y, v7.w, l(0.000000)
movc o4.z, r0.y, v5.z, l(2.500000)
mul r0.y, cb0[4].y, cb0[4].x
ge r0.z, l(0.000000), r0.y
dp3 r1.x, cb5[0].xyzx, cb3[0].xyzx
dp3 r1.y, cb5[0].xyzx, cb3[1].xyzx
dp3 r1.z, cb5[0].xyzx, cb3[2].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xy, r0.wwww, r1.xzxx
movc r0.zw, r0.zzzz, l(0,0,0,0), r1.xxxy
ge r1.x, r0.y, l(3.000000)
if_nz r1.x
  eq r1.x, r0.y, l(5.000000)
  if_nz r1.x
    dp3 r1.x, cb5[5].xyzx, cb3[0].xyzx
    dp3 r1.y, cb5[5].xyzx, cb3[1].xyzx
    dp3 r1.z, cb5[5].xyzx, cb3[2].xyzx
    dp3 r1.w, r1.xyzx, r1.xyzx
    rsq r1.w, r1.w
    mul r1.xyz, r1.wwww, r1.xyzx
    mul r2.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r2.xyz, r2.xyzx
    mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r2.xyz, r2.xyzx, v3.zzzz
    add r1.w, r0.x, cb5[2].x
    add r3.x, r1.w, v3.w
    mad r3.y, r1.w, cb5[3].y, v3.w
    mul r2.w, r3.x, cb5[3].y
    mul r3.z, r2.w, l(0.500000)
    add r3.w, r3.x, -v3.z
    add r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 1.500000)
    frc r3.xyzw, r3.xyzw
    mad r3.xyzw, r3.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
    mul r4.xyzw, |r3.xyzw|, |r3.xyzw|
    mad r3.xyzw, -|r3.xyzw|, l(2.000000, 2.000000, 2.000000, 2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
    mad r3.xyzw, r4.xyzw, r3.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
    add r3.xyzw, r3.xyzw, r3.xyzw
    mul r4.w, r3.z, r3.y
    lt r2.w, r4.w, l(0.000000)
    mov r4.y, -r4.w
    mov r4.xz, l(-1.000000,0,1.000000,0)
    movc r4.xy, r2.wwww, r4.xyxx, r4.zwzz
    mad r2.w, -r3.y, r3.z, r4.x
    mad r2.w, r4.y, r2.w, r4.w
    add r3.y, -r2.w, r4.x
    mad r2.w, r4.y, r3.y, r2.w
    mul r2.w, r2.w, cb5[3].x
    add r3.y, -cb5[0].w, l(1.000000)
    add r3.z, -cb5[3].x, l(1.000000)
    mul r3.x, r3.z, r3.x
    mad r2.w, r2.w, r3.y, r3.x
    mad r3.x, r3.w, cb5[4].x, l(1.000000)
    mul r2.w, r2.w, r3.x
    mul r2.xyz, r2.wwww, r2.xyzx
    mad r2.xyz, r2.xyzx, cb5[2].yyyy, v0.xyzx
    mad r3.x, r1.w, l(0.100000), v3.w
    mul r1.w, cb5[7].x, cb5[15].x
    mad r3.y, r1.w, l(0.100000), v3.w
    add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    frc r3.xy, r3.xyxx
    mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
    mul r4.xy, |r3.xyxx|, |r3.xyxx|
    mad r3.xy, -|r3.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
    mad r3.xy, r4.xyxx, r3.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    add r3.xy, r3.xyxx, r3.xyxx
    mul r3.xy, r3.xyxx, r3.xyxx
    mul r1.w, r3.x, r3.y
    mad r1.w, -r1.w, cb5[7].x, l(1.000000)
    mul r2.w, r3.w, cb5[0].w
    mad r1.w, r2.w, cb5[4].x, r1.w
    mad r1.xyz, r1.xyzx, cb5[5].wwww, -r2.xyzx
    mul r1.xyz, r1.xyzx, cb5[6].yyyy
    mul r1.xyz, r1.wwww, r1.xyzx
    mad r1.xyz, r1.xyzx, v3.zzzz, r2.xyzx
  else
    mul r2.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r2.xyz, r2.xyzx
    mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r2.xyz, r2.xyzx, v3.zzzz
    add r0.x, r0.x, cb5[2].x
    add r3.x, r0.x, v3.w
    mad r3.y, r0.x, cb5[3].y, v3.w
    mul r0.x, r3.x, cb5[3].y
    mul r3.z, r0.x, l(0.500000)
    add r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    frc r3.xyz, r3.xyzx
    mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r4.xyz, |r3.xyzx|, |r3.xyzx|
    mad r3.xyz, -|r3.xyzx|, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
    mad r3.xyz, r4.xyzx, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    add r3.xyz, r3.xyzx, r3.xyzx
    mul r4.w, r3.z, r3.y
    lt r0.x, r4.w, l(0.000000)
    mov r4.y, -r4.w
    mov r4.xz, l(-1.000000,0,1.000000,0)
    movc r4.xy, r0.xxxx, r4.xyxx, r4.zwzz
    mad r0.x, -r3.y, r3.z, r4.x
    mad r0.x, r4.y, r0.x, r4.w
    add r1.w, -r0.x, r4.x
    mad r0.x, r4.y, r1.w, r0.x
    mul r0.x, r0.x, cb5[3].x
    add r1.w, -cb5[0].w, l(1.000000)
    add r2.w, -cb5[3].x, l(1.000000)
    mul r2.w, r2.w, r3.x
    mad r0.x, r0.x, r1.w, r2.w
    mul r2.xyz, r0.xxxx, r2.xyzx
    mad r1.xyz, r2.xyzx, cb5[2].yyyy, v0.xyzx
  endif
else
  mov r1.xyz, v0.xyzx
endif
lt r0.x, l(0.000000), r0.y
dp3 r0.y, r1.xyzx, r1.xyzx
sqrt r0.y, r0.y
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb5[1].z
mad r1.w, -r1.w, l(0.250000), r1.y
max r1.w, r1.w, l(0.000000)
mul r1.w, r1.w, cb5[1].z
ne r2.x, r1.w, l(0.000000)
log r2.y, r1.w
mul r2.y, r2.y, cb5[1].w
exp r2.y, r2.y
movc r1.w, r2.x, r2.y, r1.w
add r2.x, cb3[3].x, cb5[1].x
mad r2.y, cb5[1].x, l(0.800000), cb3[3].y
add r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
frc r2.xy, r2.xyxx
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.zw, |r2.xxxy|, |r2.xxxy|
mad r2.xy, -|r2.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mad r2.xy, r2.zwzz, r2.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r2.xy, r2.xyxx, r2.xyxx
mad r2.x, r2.y, r2.y, r2.x
div r2.y, cb5[6].x, cb5[1].z
mad r2.x, cb5[1].y, r2.x, r2.y
mul r1.w, r1.w, r2.x
mad r2.xz, r0.zzwz, r1.wwww, r1.xxzx
mov r2.y, r1.y
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
mul r0.yzw, r0.yyyy, r2.xxyz
movc r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
mul r1.xyzw, r0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb3[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r0.xyzw, cb3[3].xyzw
mul r2.xyz, r1.yyyy, cb4[18].xywx
mad r2.xyz, cb4[17].xywx, r1.xxxx, r2.xyzx
mad r2.xyz, cb4[19].xywx, r1.zzzz, r2.xyzx
mad r2.xyz, cb4[20].xywx, r1.wwww, r2.xyzx
mov r3.xz, l(0.500000,0,0.500000,0)
mov r3.y, cb1[5].x
mul r4.xyz, r2.xyzx, r3.xyzx
mul r4.w, r4.y, l(0.500000)
add r2.xy, r4.zzzz, r4.xwxx
mul r4.xy, cb1[6].xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
mul o5.xy, r2.xyxx, r4.xyxx
mul r4.xyzw, r1.yyyy, cb4[18].xyzw
mad r4.xyzw, cb4[17].xyzw, r1.xxxx, r4.xyzw
mad r4.xyzw, cb4[19].xyzw, r1.zzzz, r4.xyzw
mad r1.xyzw, cb4[20].xyzw, r1.wwww, r4.xyzw
mad o1.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx

// Relocated to here with asmtool.py
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed d61cab620f385953-vs.txt
ne r6.w, r1.w, l(1.0)
if_nz r6.w
  add r6.w, r1.w, -r6.y
  mad r1.x, r6.w, r6.x, r1.x
endif

mul r0.xyz, r3.xyzx, r1.xywx
mul r0.w, r0.y, l(0.500000)
add o6.xy, r0.zzzz, r0.xwxx
mul r0.xyz, v2.yyyy, cb3[1].xyzx
mad r0.xyz, cb3[0].xyzx, v2.xxxx, r0.xyzx
mad r0.xyz, cb3[2].xyzx, v2.zzzz, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mov r0.w, l(1.000000)
dp4 r3.x, cb2[38].xyzw, r0.xyzw
dp4 r3.y, cb2[39].xyzw, r0.xyzw
dp4 r3.z, cb2[40].xyzw, r0.xyzw
mul r4.xyzw, r0.yzzx, r0.xyzz
dp4 r5.x, cb2[41].xyzw, r4.xyzw
dp4 r5.y, cb2[42].xyzw, r4.xyzw
dp4 r5.z, cb2[43].xyzw, r4.xyzw
mul r0.y, r0.y, r0.y
mad r0.x, r0.x, r0.x, -r0.y
mad r0.xyz, cb2[44].xyzx, r0.xxxx, r5.xyzx
add r0.xyz, r0.xyzx, r3.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max o8.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)

// mov o0.xyzw, r1.xyzw // Relocated from here with asmtool.py

mov o1.w, r1.z
mov o2.w, cb0[6].w
mov o6.zw, r1.zzzw
mov o7.xyzw, l(0,0,0,0)
mov o3.xy, v3.xyxx
mov o4.xy, v5.xyxx
mov o5.z, r2.z
ret
// Approximately 0 instruction slots used