// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 63fbf91e6dce711f-ps.txt
// 3DMigoto: 63fbf91e6dce711f |    Unity headers extracted from EFT_Glass
//    Shader "EFT/Glass" {
//      Fallback "Reflective/VertexLit"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent" "RenderType"="Transparent" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from EFT_Glass:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 46 2 0
//   undeciphered1a: 4
//   Keywords { "DIRECTIONAL" "_WEATHER_DEFINED" }
//   undeciphered2: 1 3 2 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 272
//   Float 176 [_ReflectionBottomShade]
//   Vector 180 [_SunDirection] 3
//   Float 192 [_CubemapNightMultiplier]
//   Float 196 [_CubemapDayMultiplier]
//   Vector 224 [_ReflectColor]
//   Float 240 [_Specular]
//   Float 244 [_FresPow]
//   Float 248 [_FresAdd]
//   Float 252 [_GlobalReflectionStrength]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_Cube] CUBE 2
//   SetTexture 2 [_MyGlobalReflectionProbe] CUBE 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:06:35 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 5     zw        1     NONE   float
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_output o0.xyzw
dcl_temps 6
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 63fbf91e6dce711f-ps.txt

mul r4.w, -r4.x, r4.y
mad r5.xyz, -r4.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v4.xyzx, r5.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.x, r0.xyzx, v3.xyzx
add r0.x, -r0.x, l(1.000000)
log r0.x, r0.x
mul r0.x, r0.x, cb0[15].y
exp r0.x, r0.x
add r0.x, r0.x, cb0[15].z
sample r1.xyzw, v1.xyxx, t0.xyzw, s1
mul r0.x, r0.x, r1.w
mul r0.x, r0.x, cb0[15].x
mul r0.yzw, r0.xxxx, cb0[14].xxyz
max r1.x, r0.z, r0.y
max r1.x, r0.w, r1.x
add r1.x, -r1.x, l(1.000000)
add_sat r1.x, -r1.x, l(1.000000)
mad r1.xyz, -r0.xxxx, cb0[14].xyzx, r1.xxxx
add r2.xyz, v4.xyzx, -r5.xyzx
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, r2.xyzx
dp3 r0.x, v3.xyzx, v3.xyzx
rsq r0.x, r0.x
mul r3.xyz, r0.xxxx, v3.xyzx
dp3 r0.x, r3.xyzx, -r2.xyzx
add r0.x, -|r0.x|, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
mad r0.xyz, r0.xxxx, r1.xyzx, r0.yzwy
dp3 r0.w, r2.xyzx, r3.xyzx
add r0.w, r0.w, r0.w
mad r1.xyz, r3.xyzx, -r0.wwww, r2.xyzx
sample_l r2.xyzw, r1.xyzx, t2.xyzw, s0, l(6.000000)
add_sat r0.w, r1.y, cb0[11].x
mul r1.xyz, r0.wwww, r2.xyzx
mul r1.xyz, r1.xyzx, l(0.720000, 0.720000, 0.720000, 0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
sample r1.xyzw, v2.xyzx, t1.xyzw, s2
mul r1.xyz, r1.xyzx, cb0[14].xyzx
mad r0.xyz, r0.xyzx, cb0[15].wwww, r1.xyzx
mad r0.w, cb0[11].z, l(0.500000), l(0.500000)
add r1.x, -cb0[12].y, cb0[12].x
mad_sat r0.w, r0.w, r1.x, cb0[12].y
mul r0.xyz, r0.wwww, r0.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xyz, r0.xyzx, l(60000.000000, 60000.000000, 60000.000000, 0.000000)
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used