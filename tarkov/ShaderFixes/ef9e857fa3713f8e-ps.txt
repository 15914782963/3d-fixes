// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed ef9e857fa3713f8e-ps.txt
// 3DMigoto: ef9e857fa3713f8e | Matched 2 variants of 1 shaders: Custom/Vert Paint SoftCutout Decal
//
//       Unity headers extracted from Custom_Vert Paint SoftCutout Decal
//       Shader "Custom/Vert Paint SoftCutout Decal" {
//         Fallback "Transparent/Cutout/Diffuse"
//         SubShader 1/1 {
//           Pass 1/2 {
//             Name "DEFERRED"
//             Tags { "LIGHTMODE"="DEFERRED" "QUEUE"="Geometry+5" "RenderType"="Opaque" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Custom_Vert Paint SoftCutout Decal:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 126 13 6
//      undeciphered1a: 11
// 2:   Keywords { "Rain" }
//      undeciphered2: 1 10 5 9 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 256
//      Float 64 [_BlendStrength]
//      Float 68 [_AlphaStrength]
//      Vector 80 [_Color0]
//      Vector 96 [_Color1]
//      Vector 112 [_Color2]
//      Float 192 [_FresnelDiffuse0]
//      Float 196 [_FresnelDiffuse1]
//      Float 200 [_FresnelDiffuse2]
//      Float 204 [_FresnelSpecular0]
//      Float 208 [_FresnelSpecular1]
//      Float 212 [_FresnelSpecular2]
//      Float 216 [_Specular0]
//      Float 220 [_Specular1]
//      Float 224 [_Specular2]
//      Float 228 [_Smoothness0]
//      Float 232 [_Smoothness1]
//      Float 236 [_Smoothness2]
//      Float 240 [_ReflectionStrength]
//      Float 244 [_Cutoff]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 752
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      ConstBuffer "UnityReflectionProbes" 128
//      Vector 0 [unity_SpecCube0_BoxMax]
//      Vector 16 [unity_SpecCube0_BoxMin]
//      Vector 32 [unity_SpecCube0_ProbePosition]
//      Vector 48 [unity_SpecCube0_HDR]
//      Vector 64 [unity_SpecCube1_BoxMax]
//      Vector 80 [unity_SpecCube1_BoxMin]
//      Vector 96 [unity_SpecCube1_ProbePosition]
//      Vector 112 [unity_SpecCube1_HDR]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_Heights] 2D 2
//      SetTexture 1 [_MainTex0] 2D 3
//      SetTexture 2 [_MainTex1] 2D 4
//      SetTexture 3 [_MainTex2] 2D 5
//      SetTexture 4 [_BumpMap0] 2D 6
//      SetTexture 5 [_BumpMap1] 2D 7
//      SetTexture 6 [_BumpMap2] 2D 8
//      SetTexture 7 [unity_SpecCube0] CUBE 0
//      SetTexture 8 [unity_SpecCube1] CUBE -1
//      SetTexture 9 [unity_ProbeVolumeSH] 3D 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityReflectionProbes" 3
//      BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:25:00 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// COLOR                    0   xyzw        6     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed ef9e857fa3713f8e-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v4.xyxx, t0.xyzw, s2
sample r1.xyzw, v4.zwzz, t0.xyzw, s2
sample r2.xyzw, v5.xyxx, t0.xyzw, s2
sample r3.xyzw, v5.zwzz, t0.xyzw, s2
mov r2.x, r0.x
mov r2.y, r1.y
mul r0.xyz, r2.xyzx, v6.xyzx
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, cb0[4].xxxx
exp r0.xyz, r0.xyzx
add r0.w, r0.y, r0.x
add r0.w, r0.z, r0.w
div r0.xyz, r0.xyzx, r0.wwww
add r0.w, r3.w, v6.w
add r0.w, r0.w, l(-0.100000)
log r0.w, r0.w
mul r0.w, r0.w, cb0[4].y
exp r0.w, r0.w
min r1.w, r0.w, l(1.000000)
add r0.w, r1.w, -cb0[15].y
lt r0.w, l(-0.000000), r0.w
discard_nz r0.w
sample r2.xyzw, v4.xyxx, t1.xyzw, s3
mul r2.xyzw, r2.xyzw, cb0[5].xyzw
sample r3.xyzw, v4.zwzz, t2.xyzw, s4
mul r3.xyzw, r3.xyzw, cb0[6].xyzw
mul r3.xyzw, r0.yyyy, r3.xyzw
mad r2.xyzw, r2.xyzw, r0.xxxx, r3.xyzw
sample r3.xyzw, v5.xyxx, t3.xyzw, s5
mul r3.xyzw, r3.xyzw, cb0[7].xyzw
mad r2.xyzw, r3.xyzw, r0.zzzz, r2.xyzw
sample r3.xyzw, v4.xyxx, t4.xyzw, s6
sample r4.xyzw, v4.zwzz, t5.xyzw, s7
mul r3.xz, r0.yyyy, r4.wwyw
mad r3.xy, r3.wyww, r0.xxxx, r3.xzxx
sample r4.xyzw, v5.xyxx, t6.xyzw, s8
mad r3.xy, r4.wyww, r0.zzzz, r3.xyxx
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r3.xyxx, r3.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r3.z, r0.w
dp3 r4.x, v1.xyzx, r3.xyzx
dp3 r4.y, v2.xyzx, r3.xyzx
dp3 r4.z, v3.xyzx, r3.xyzx
mad o2.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov r3.x, v1.w
mov r3.y, v2.w
mov r3.z, v3.w
add r5.xyz, -r3.xyzx, r12.xyzx
dp3 r0.w, r5.xyzx, r5.xyzx
rsq r0.w, r0.w
mul r5.xyz, r0.wwww, r5.xyzx
dp3 r0.w, r5.xyzx, r4.xyzx
mov r6.x, cb0[12].w
mov r6.yz, cb0[13].xxyx
dp3 r6.x, r0.xyzx, r6.xyzx
dp3 r6.y, r0.xyzx, cb0[12].xyzx
mad r6.xy, -r0.wwww, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r6.xy, r6.xyxx, r6.xyxx
mul r6.xy, r6.xyxx, r6.xyxx
mul r1.xyz, r2.xyzx, r6.yyyy
dp3 r0.w, r0.xyzx, cb0[14].yzwy
mov r2.xy, cb0[13].zwzz
mov r2.z, cb0[14].x
dp3 r0.x, r0.xyzx, r2.xyzx
mul r0.x, r0.x, r2.w
mul r0.xyz, r6.xxxx, r0.xxxx
add o1.w, -r0.w, r1.w
add r0.w, -r0.w, l(1.000000)
mul r2.x, r0.z, cb0[15].x
add r0.w, -r0.w, l(1.000000)
dp3 r2.y, -r5.xyzx, r4.xyzx
add r2.y, r2.y, r2.y
mad r2.yzw, r4.xxyz, -r2.yyyy, -r5.xxyz
eq r3.w, cb4[0].x, l(1.000000)
if_nz r3.w
  eq r3.w, cb4[0].y, l(1.000000)
  mul r5.xyz, v2.wwww, cb4[2].xyzx
  mad r5.xyz, cb4[1].xyzx, v1.wwww, r5.xyzx
  mad r5.xyz, cb4[3].xyzx, v3.wwww, r5.xyzx
  add r5.xyz, r5.xyzx, cb4[4].xyzx
  movc r5.xyz, r3.wwww, r5.xyzx, r3.xyzx
  add r5.xyz, r5.xyzx, -cb4[6].xyzx
  mul r5.yzw, r5.xxyz, cb4[5].xxyz
  mul r3.w, r5.y, l(0.250000)
  mul r5.y, cb4[0].z, l(0.500000)
  mad r6.y, -cb4[0].z, l(0.500000), l(0.250000)
  max r3.w, r3.w, r5.y
  min r5.x, r6.y, r3.w
  sample r7.xyzw, r5.xzwx, t9.xyzw, s1
  add r6.yzw, r5.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r8.xyzw, r6.yzwy, t9.xyzw, s1
  add r5.xyz, r5.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r5.xyzw, r5.xyzx, t9.xyzw, s1
  mov r4.w, l(1.000000)
  dp4 r7.x, r7.xyzw, r4.xyzw
  dp4 r7.y, r8.xyzw, r4.xyzw
  dp4 r7.z, r5.xyzw, r4.xyzw
else
  mov r4.w, l(1.000000)
  dp4 r7.x, cb2[38].xyzw, r4.xyzw
  dp4 r7.y, cb2[39].xyzw, r4.xyzw
  dp4 r7.z, cb2[40].xyzw, r4.xyzw
endif
max r4.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r4.xyz, r4.xyzx
mul r4.xyz, r4.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r4.xyz, r4.xyzx
mad r4.xyz, r4.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r3.w, l(0.000000), cb3[2].w
if_nz r3.w
  dp3 r3.w, r2.yzwy, r2.yzwy
  rsq r3.w, r3.w
  mul r5.xyz, r2.yzwy, r3.wwww
  add r6.yzw, -r3.xxyz, cb3[0].xxyz
  div r6.yzw, r6.yyzw, r5.xxyz
  add r7.xyz, -r3.xyzx, cb3[1].xyzx
  div r7.xyz, r7.xyzx, r5.xyzx
  lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
  movc r6.yzw, r8.xxyz, r6.yyzw, r7.xxyz
  min r3.w, r6.z, r6.y
  min r3.w, r6.w, r3.w
  add r6.yzw, r3.xxyz, -cb3[2].xxyz
  mad r5.xyz, r5.xyzx, r3.wwww, r6.yzwy
else
  mov r5.xyz, r2.yzwy
endif
mad r3.w, -r0.w, l(0.700000), l(1.700000)
mul r0.w, r0.w, r3.w
mul r0.w, r0.w, l(6.000000)
sample_l r5.xyzw, r5.xyzx, t7.xyzw, s0, r0.w
add r3.w, r5.w, l(-1.000000)
mad r3.w, cb3[3].w, r3.w, l(1.000000)
mul r3.w, r3.w, cb3[3].x
mul r6.yzw, r5.xxyz, r3.wwww
lt r4.w, cb3[1].w, l(0.999990)
if_nz r4.w
  lt r4.w, l(0.000000), cb3[6].w
  if_nz r4.w
    dp3 r4.w, r2.yzwy, r2.yzwy
    rsq r4.w, r4.w
    mul r7.xyz, r2.yzwy, r4.wwww
    add r8.xyz, -r3.xyzx, cb3[4].xyzx
    div r8.xyz, r8.xyzx, r7.xyzx
    add r9.xyz, -r3.xyzx, cb3[5].xyzx
    div r9.xyz, r9.xyzx, r7.xyzx
    lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
    movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
    min r4.w, r8.y, r8.x
    min r4.w, r8.z, r4.w
    add r3.xyz, r3.xyzx, -cb3[6].xyzx
    mad r2.yzw, r7.xxyz, r4.wwww, r3.xxyz
  endif
  sample_l r7.xyzw, r2.yzwy, t8.xyzw, s0, r0.w
  add r0.w, r7.w, l(-1.000000)
  mad r0.w, cb3[7].w, r0.w, l(1.000000)
  mul r0.w, r0.w, cb3[7].x
  mul r2.yzw, r7.xxyz, r0.wwww
  mad r3.xyz, r3.wwww, r5.xyzx, -r2.yzwy
  mad r6.yzw, cb3[1].wwww, r3.xxyz, r2.yyzw
endif
mul r2.xyz, r2.xxxx, r6.yzwy
mad r2.xyz, r1.xyzx, r4.xyzx, r2.xyzx
mul r2.xyz, r6.xxxx, r2.xyzx
exp o3.xyz, -r2.xyzx
mov o0.xyzw, r1.xyzw
mov o1.xyz, r0.xyzx
mov o2.w, r1.w
mov o3.w, r1.w
ret
// Approximately 0 instruction slots used