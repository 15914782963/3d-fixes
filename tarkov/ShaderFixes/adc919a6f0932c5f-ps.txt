// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed adc919a6f0932c5f-ps.txt
// 3DMigoto: adc919a6f0932c5f |    Unity headers extracted from Relief Pack - Bonus Shaders_Water_2 Layers VertexPaint FlowMap
//    Shader "Relief Pack - Bonus Shaders/Water/2 Layers VertexPaint FlowMap" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "RenderType"="Opaque" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "RenderType"="Opaque" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Relief Pack - Bonus Shaders_Water_2 Layers VertexPaint FlowMap:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 259 14 2
//   undeciphered1a: 8
//   Keywords { "POINT" "RTP_PM_SHADING" }
//   undeciphered2: 1 11 4 11 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 320
//   Vector 32 [_LightColor0]
//   Vector 128 [_Color]
//   Float 144 [_Metalness]
//   Float 148 [_GlossMin]
//   Float 152 [_GlossMax]
//   Vector 160 [_Color2]
//   Float 176 [_Metalness2]
//   Float 180 [_GlossMin2]
//   Float 184 [_GlossMax2]
//   Float 208 [TERRAIN_WetGloss]
//   Float 212 [TERRAIN_LayerWetStrength]
//   Float 216 [TERRAIN_WaterLevelSlopeDamp]
//   Float 220 [TERRAIN_ExtrudeHeight]
//   Float 228 [TERRAIN_DropletsSpeed]
//   Float 232 [TERRAIN_RainIntensity]
//   Float 236 [TERRAIN_WetDropletsStrength]
//   Float 240 [TERRAIN_Refraction]
//   Float 244 [TERRAIN_WetRefraction]
//   Float 248 [TERRAIN_Flow]
//   Float 252 [TERRAIN_FlowScale]
//   Float 256 [TERRAIN_RippleScale]
//   Float 260 [TERRAIN_FlowSpeed]
//   Float 264 [TERRAIN_FlowSpeedMap]
//   Float 268 [TERRAIN_WaterLevel]
//   Vector 272 [TERRAIN_WaterColor]
//   Float 288 [TERRAIN_WaterEdge]
//   Float 292 [TERRAIN_WaterGloss]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_HeightMap] 2D 4
//   SetTexture 1 [_HeightMap2] 2D 7
//   SetTexture 2 [TERRAIN_FlowingMap] 2D 10
//   SetTexture 3 [_FlowMap] 2D 8
//   SetTexture 4 [TERRAIN_RippleMap] 2D 9
//   SetTexture 5 [_MainTex] 2D 2
//   SetTexture 6 [_MainTex2] 2D 5
//   SetTexture 7 [_BumpMap] 2D 3
//   SetTexture 8 [_BumpMap2] 2D 6
//   SetTexture 9 [_LightTexture0] 2D 1
//   SetTexture 10 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:16:19 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 6     zw        1     NONE   float
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// COLOR                    0   xyzw        6     NONE   float   x z
// TEXCOORD                 5   xyzw        7     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[19], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xz
dcl_input_ps linear v7.zw
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed adc919a6f0932c5f-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v5.xyzx, r9.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mul r3.xyz, r2.yyyy, v3.xyzx
mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
sample r4.xyzw, v1.xyxx, t0.xyzw, s4
sample r5.xyzw, v1.xyxx, t1.xwyz, s7
mul r1.w, cb0[13].w, l(0.500000)
mad r2.w, r4.w, cb0[13].w, -r1.w
dp3 r3.w, r3.xyzx, r3.xyzx
rsq r3.w, r3.w
mul r3.xy, r3.wwww, r3.xyxx
mad r3.z, r3.z, r3.w, l(0.420000)
div r3.xy, r3.xyxx, r3.zzzz
mad r3.zw, r2.wwww, r3.xxxy, v1.xxxy
mad r1.w, r5.y, cb0[13].w, -r1.w
mad r3.xy, r1.wwww, r3.xyxx, v1.xyxx
mov r5.x, r4.w
add r4.xy, r5.xyxx, l(0.010000, 0.010000, 0.000000, 0.000000)
mad r4.zw, v6.xxxx, l(0.000000, 0.000000, 1.000000, -1.000000), l(0.000000, 0.000000, 0.000000, 1.000000)
mul r4.xy, r4.xyxx, r4.zwzz
mul r4.xy, r4.xyxx, r4.xyxx
mul r4.xy, r4.xyxx, r4.xyxx
mul r4.xy, r4.xyxx, r4.xyxx
dp2 r1.w, r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
div r4.xy, r4.xyxx, r1.wwww
dp2 r1.w, r4.xyxx, r5.xyxx
add r3.xy, -r3.zwzz, r3.xyxx
mad r3.xy, r4.yyyy, r3.xyxx, r3.zwzz
dp2 r2.w, v7.zwzz, v7.zwzz
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r2.w, r2.w
add r2.w, -r2.w, l(1.000000)
mul r3.zw, v1.xxxy, l(0.000000, 0.000000, 0.125000, 0.125000)
sample r5.xyzw, r3.zwzz, t2.xyzw, s10
add r3.z, -cb0[13].y, l(1.000000)
dp2 r3.z, r5.wwww, r3.zzzz
mad_sat r3.z, v6.z, l(2.000000), -r3.z
mul_sat r2.w, r2.w, cb0[13].z
dp2 r3.z, cb0[13].yyyy, r3.zzzz
add_sat r3.w, r3.z, l(-1.000000)
mad r4.z, -r2.w, l(4.000000), l(1.000000)
max r4.z, r4.z, l(0.000000)
mul r3.w, r3.w, r4.z
mul r4.z, r3.w, cb0[14].z
mov_sat r3.z, r3.z
add r4.w, r3.z, l(-1.000000)
add r2.w, -r2.w, r4.w
mad r2.w, r2.w, l(2.000000), cb0[16].w
max r2.w, r2.w, l(0.000000)
min r2.w, r2.w, l(2.000000)
add r4.w, -r3.z, l(1.000000)
mad_sat r3.z, -r4.w, r1.w, r3.z
mul r4.w, r3.z, r3.z
mul r4.w, r4.w, cb0[15].z
add r1.w, -r1.w, r2.w
mul_sat r1.w, r1.w, cb0[18].x
mul r1.w, r1.w, r1.w
mad r2.w, -r1.w, l(0.500000), l(1.000000)
add r5.xy, r3.xyxx, -v1.xyxx
mad r5.xy, r2.wwww, r5.xyxx, v1.xyxx
mul r5.xy, r5.xyxx, cb0[15].wwww
mul r2.w, cb1[0].x, l(4.000000)
frc r2.w, r2.w
add r5.z, r2.w, r2.w
frc r5.z, r5.z
mad r5.w, r5.z, l(2.000000), l(-1.000000)
mul r6.xy, v7.zwzz, l(4.000000, 4.000000, 0.000000, 0.000000)
max r6.xy, r6.xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
min r6.xy, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r6.xy, r6.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
sample r7.xyzw, r5.xyxx, t3.xyzw, s8
mad r7.xyzw, r7.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
add r6.zw, -r7.zzzw, r7.xxxy
mad r6.zw, v6.xxxx, r6.zzzw, r7.zzzw
mov r7.xw, cb0[16].zzzz
mov r7.yz, l(0,1.000000,-1.000000,0)
mul r6.zw, r6.zzzw, r7.xxxy
mad r6.xy, r6.zwzz, r7.zwzz, r6.xyxx
mul r5.xy, r5.xyxx, cb0[15].wwww
mul r6.z, cb0[15].w, cb0[16].y
mul r6.xy, r6.zzzz, r6.xyxx
mad r6.zw, r5.zzzz, r6.xxxy, r5.xxxy
sample r7.xyzw, r6.zwzz, t2.xyzw, s10
mad r6.zw, r7.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mad r2.w, r2.w, l(2.000000), l(0.500000)
frc r2.w, r2.w
mul r7.xy, r6.xyxx, r2.wwww
mad r5.xy, r7.xyxx, l(1.100000, 1.100000, 0.000000, 0.000000), r5.xyxx
sample r7.xyzw, r5.xyxx, t2.xyzw, s10
mad r5.xy, r7.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
add r5.xy, -r6.zwzz, r5.xyxx
mad r5.xy, |r5.wwww|, r5.xyxx, r6.zwzz
mul r2.w, r1.w, r4.w
mul r2.w, r3.z, r2.w
mul r5.xy, r2.wwww, r5.xyxx
mul r5.zw, r6.xxxy, r5.xxxy
mul r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.100000, 0.100000)
div r5.zw, r5.zzzw, cb0[15].wwww
mad r5.zw, v1.xxxy, cb0[16].xxxx, r5.zzzw
sample r6.xyzw, r5.zwzz, t4.xyzw, s9
mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r2.w, cb1[0].x, cb0[14].y, r6.w
frc r2.w, r2.w
add r4.w, r6.z, r2.w
add r4.w, r4.w, l(-1.000000)
mad r4.z, r4.z, l(0.800000), l(0.200000)
add_sat r2.w, -r2.w, r4.z
mul r2.w, r6.z, r2.w
mul r4.w, r4.w, l(9.000000)
max r4.w, r4.w, l(0.000000)
min r4.w, r4.w, l(3.000000)
mul r4.w, r4.w, l(3.141500)
sincos r4.w, null, r4.w
mul r2.w, r2.w, r4.w
mul r6.xy, r2.wwww, r6.xyxx
add r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.250000, 0.250000)
sample r7.xyzw, r5.zwzz, t4.xyzw, s9
mad r5.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mad r2.w, cb1[0].x, cb0[14].y, r7.w
frc r2.w, r2.w
add r4.w, r7.z, r2.w
add r4.w, r4.w, l(-1.000000)
add_sat r2.w, -r2.w, r4.z
mul r2.w, r7.z, r2.w
mul r4.z, r4.w, l(9.000000)
max r4.z, r4.z, l(0.000000)
min r4.z, r4.z, l(3.000000)
mul r4.z, r4.z, l(3.141500)
sincos r4.z, null, r4.z
mul r2.w, r2.w, r4.z
mul r4.zw, r2.wwww, r5.zzzw
mul r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.350000, 0.350000)
mad r4.zw, r6.xxxy, l(0.000000, 0.000000, 0.350000, 0.350000), r4.zzzw
mul r2.w, r3.w, l(4.000000)
add r3.w, -cb0[14].w, l(1.000000)
mad r3.w, r1.w, r3.w, cb0[14].w
mul r2.w, r2.w, r3.w
mad r4.zw, r4.zzzw, r2.wwww, r5.xxxy
mul r5.xy, r4.zwzz, cb0[15].xxxx
max r2.w, r1.w, cb0[15].y
mad r3.xy, r5.xyxx, r2.wwww, r3.xyxx
sample r5.xyzw, r3.xyxx, t5.xyzw, s2
add r6.xyz, cb0[8].xyzx, cb0[8].xyzx
mul r6.yzw, r5.xxyz, r6.xxyz
add r2.w, -cb0[9].y, cb0[9].z
mad r6.x, r5.w, r2.w, cb0[9].y
sample r5.xyzw, r3.xyxx, t6.xyzw, s5
add r7.xyz, cb0[10].xyzx, cb0[10].xyzx
mul r7.yzw, r5.xxyz, r7.xxyz
add r2.w, -cb0[11].y, cb0[11].z
mad r7.x, r5.w, r2.w, cb0[11].y
mul r5.xyzw, r4.yyyy, r7.xyzw
mad r5.xyzw, r4.xxxx, r6.xyzw, r5.xyzw
mul r2.w, r4.y, cb0[11].x
mad r2.w, r4.x, cb0[9].x, r2.w
add r3.w, -r5.x, cb0[13].x
mad r3.w, r3.z, r3.w, r5.x
add r5.x, -r3.w, cb0[18].y
mad r3.w, r1.w, r5.x, r3.w
mul r5.x, r1.w, cb0[17].w
add r6.xyz, -r5.yzwy, cb0[17].xyzx
mad r5.xyz, r5.xxxx, r6.xyzx, r5.yzwy
sample r6.xyzw, r3.xyxx, t7.xyzw, s3
sample r7.xyzw, r3.xyxx, t8.xyzw, s6
mul r3.xy, r4.yyyy, r7.wyww
mad r3.xy, r6.wyww, r4.xxxx, r3.xyxx
mad r6.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r3.x, r6.xyxx, r6.xyxx
min r3.x, r3.x, l(1.000000)
add r3.x, -r3.x, l(1.000000)
sqrt r6.z, r3.x
add r7.xyz, -r6.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mad r6.xyz, r1.wwww, r7.xyzx, r6.xyzx
add r6.xy, r4.zwzz, r6.xyxx
dp3 r1.w, r6.xyzx, r6.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r6.xyzx
add r1.w, r3.z, r3.z
min r1.w, r1.w, l(1.000000)
mad r1.w, -r1.w, l(0.300000), l(1.000000)
mul r3.xyz, r1.wwww, r5.xyzx
mul r6.xyz, v5.yyyy, cb0[5].xyzx
mad r6.xyz, cb0[4].xyzx, v5.xxxx, r6.xyzx
mad r6.xyz, cb0[6].xyzx, v5.zzzz, r6.xyzx
add r6.xyz, r6.xyzx, cb0[7].xyzx
eq r4.w, cb3[0].x, l(1.000000)
if_nz r4.w
  eq r4.w, cb3[0].y, l(1.000000)
  mul r7.xyz, v5.yyyy, cb3[2].xyzx
  mad r7.xyz, cb3[1].xyzx, v5.xxxx, r7.xyzx
  mad r7.xyz, cb3[3].xyzx, v5.zzzz, r7.xyzx
  add r7.xyz, r7.xyzx, cb3[4].xyzx
  movc r7.xyz, r4.wwww, r7.xyzx, v5.xyzx
  add r7.xyz, r7.xyzx, -cb3[6].xyzx
  mul r7.yzw, r7.xxyz, cb3[5].xxyz
  mad r4.w, r7.y, l(0.250000), l(0.750000)
  mad r5.w, cb3[0].z, l(0.500000), l(0.750000)
  max r7.x, r4.w, r5.w
  sample r7.xyzw, r7.xzwx, t10.xyzw, s0
else
  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r4.w, r7.xyzw, cb2[45].xyzw
dp3 r5.w, r6.xyzx, r6.xyzx
sample r6.xyzw, r5.wwww, t9.xyzw, s1
mul r4.w, r4.w, r6.x
dp3 r6.x, v2.xyzx, r4.xyzx
dp3 r6.y, v3.xyzx, r4.xyzx
dp3 r6.z, v4.xyzx, r4.xyzx
mul r4.xyz, r4.wwww, cb0[2].xyzx
dp3 r4.w, r6.xyzx, r6.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, r6.xyzx
mad r5.xyz, r5.xyzx, r1.wwww, l(-0.220916301, -0.220916301, -0.220916301, 0.000000)
mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916301, 0.220916301, 0.220916301, 0.000000)
mad r1.w, -r2.w, l(0.779083729), l(0.779083729)
mul r3.xyz, r1.wwww, r3.xyzx
add r1.w, -r3.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r6.xyzx, r2.xyzx
dp3_sat r2.x, r6.xyzx, r1.xyzx
dp3_sat r2.y, r6.xyzx, r0.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
add r0.y, r0.x, r0.x
mul r0.y, r0.x, r0.y
mad r0.y, r0.y, r1.w, l(-0.500000)
add r0.z, -r2.x, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
mad r1.x, -r1.w, r1.w, l(1.000000)
mad r1.y, |r0.w|, r1.x, r0.z
mad r1.x, r2.x, r1.x, r0.z
mul r0.w, |r0.w|, r1.x
mad r0.w, r2.x, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r2.y, r0.z, -r2.y
mad r1.x, r1.x, r2.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
max r0.z, r0.z, l(0.000100)
sqrt r0.z, r0.z
mul r0.yz, r2.xxxx, r0.yyzy
dp3 r0.w, r5.xyzx, r5.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r4.xyzx
mul r0.yzw, r4.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used