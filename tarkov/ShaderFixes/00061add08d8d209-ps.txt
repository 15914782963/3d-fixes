// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 00061add08d8d209-ps.txt
// 3DMigoto: 00061add08d8d209 |    Unity headers extracted from RainyShaders_Reflect Bumped Specular Alpha Distort Rainy
//    Shader "RainyShaders/Reflect Bumped Specular Alpha Distort Rainy" {
//      Fallback "RainyShaders/Reflect Bumped Specular Alpha Rainy"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "QUEUE"="Transparent+10" "RenderType"="Transparent" }
//        Pass 4/4 {
//          Name "META"
//          Tags { "LIGHTMODE"="META" "QUEUE"="Transparent+10" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from RainyShaders_Reflect Bumped Specular Alpha Distort Rainy:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 57 7 0
//   undeciphered1a: 5
//   undeciphered2: 1 6 3 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 176
//   Vector 64 [_Color]
//   Vector 80 [_ReflectColor]
//   Float 100 [_RainPower]
//   Float 104 [_RainSpeed]
//   Float 108 [_RainTilingY]
//   Float 112 [_RainTilingX]
//   Float 116 [_fallow]
//   Float 120 [_level]
//   Float 124 [_Distort]
//   Float 128 [_WaterContrast]
//   Float 132 [unity_OneOverOutputBoost]
//   Float 136 [unity_MaxOutputValue]
//   Float 140 [unity_UseLinearSpace]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityMetaPass" 48
//   VectorBool 16 [unity_MetaFragmentControl] 4
//   SetTexture 0 [_RainGradient] 2D 3
//   SetTexture 1 [_RainFlow] 2D 2
//   SetTexture 2 [_MainTex] 2D 0
//   SetTexture 3 [_BumpMap] 2D 1
//   SetTexture 4 [_Cube] CUBE 4
//   SetTexture 5 [_MyGrabTexture] 2D 5
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityMetaPass" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sun Jul 14 23:53:29 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyw
dcl_output o0.xyzw
dcl_temps 7
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 00061add08d8d209-ps.txt

mul r5.w, -r5.x, r5.y
mad r6.xyz, -r5.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r0.xyz, -r0.xyzx, r6.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyz, r0.yyyy, v3.xyzx
mad r1.xyz, v2.xyzx, r0.xxxx, r1.xyzx
mad r1.xyz, v4.xyzx, r0.zzzz, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mad r0.w, -r1.z, r0.w, l(1.000000)
mad r0.w, r0.w, cb0[7].y, cb0[7].z
mad r1.x, cb1[0].y, cb0[6].z, v1.y
add r1.z, r1.x, l(0.300000)
mov r1.y, v1.x
mul r1.zw, r1.yyyz, l(0.000000, 0.000000, 0.800000, 0.800000)
sample r2.xyzw, r1.yxyy, t0.xyzw, s3
sample r1.xyzw, r1.zwzz, t0.xyzw, s3
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.x, cb1[0].y, l(0.100000)
mul r2.x, r2.x, cb0[6].z
mad r2.y, v1.y, cb0[6].w, r2.x
mul r2.x, v1.x, cb0[7].x
sample r2.xyzw, r2.xyxx, t1.xyzw, s2
mul r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r1.xyzw, cb0[6].yyyy
mad r1.xy, r1.xyxx, cb0[6].yyyy, v1.xyxx
sample r1.xyzw, r1.xyxx, t2.xyzw, s0
mad r3.xy, r2.xyxx, l(0.200000, 0.200000, 0.000000, 0.000000), v1.zwzz
sample r3.xyzw, r3.xyxx, t3.xyzw, s1
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r3.w, r3.xyxx, r3.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r3.z, r3.w
dp3 r4.x, v2.xyzx, r3.xyzx
dp3 r4.y, v3.xyzx, r3.xyzx
dp3 r4.z, v4.xyzx, r3.xyzx
mad r3.xyz, r3.yyyy, cb0[7].wwww, v5.xywx
mad r3.xyz, r2.xywx, l(0.200000, 0.200000, 0.200000, 0.000000), r3.xyzx
div r3.xy, r3.xyxx, r3.zzzz
sample r3.xyzw, r3.xyxx, t5.xyzw, s5
dp3 r2.w, -r0.xyzx, r4.xyzx
add r2.w, r2.w, r2.w
mad r0.xyz, r4.xyzx, -r2.wwww, -r0.xyzx
sample r4.xyzw, r0.xyzx, t4.xyzw, s4
mul r0.xyz, r1.wwww, r4.xyzx
mul r1.xyz, r1.xyzx, cb0[4].xyzx
log r1.xyz, r1.xyzx
mul r0.xyz, r0.xyzx, cb0[5].xyzx
mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
mad r0.xyz, r2.xyzx, cb0[8].xxxx, r0.xyzx
mad r2.xyz, r0.xyzx, l(0.305306017, 0.305306017, 0.305306017, 0.000000), l(0.682171106, 0.682171106, 0.682171106, 0.000000)
mad r2.xyz, r0.xyzx, r2.xyzx, l(0.0125228781, 0.0125228781, 0.0125228781, 0.000000)
mul r2.xyz, r0.xyzx, r2.xyzx
ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[8].w
movc r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
mul r0.xyz, r0.xyzx, l(0.0103092780, 0.0103092780, 0.0103092780, 0.000000)
max r0.w, r0.y, r0.x
max r1.w, r0.z, l(0.020000)
max r0.w, r0.w, r1.w
mul r0.w, r0.w, l(255.000000)
round_pi r0.w, r0.w
mul r2.w, r0.w, l(0.00392156886)
div r2.xyz, r0.xyzx, r2.wwww
mov_sat r0.x, cb0[8].y
mul r0.xyz, r1.xyzx, r0.xxxx
exp r0.xyz, r0.xyzx
min r0.xyz, r0.xyzx, cb0[8].zzzz
mov r0.w, l(1.000000)
movc r0.xyzw, cb2[1].xxxx, r0.xyzw, l(0,0,0,0)
movc o0.xyzw, cb2[1].yyyy, r2.xyzw, r0.xyzw
ret
// Approximately 0 instruction slots used