// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a0fc7897c2b250a7-ps.txt
// 3DMigoto: a0fc7897c2b250a7 |    Unity headers extracted from Sandbox_VolumetricLight
//    Shader "Sandbox/VolumetricLight" {
//      SubShader 1/1 {
//        LOD 100
//        Tags { "RenderType"="Opaque" }
//        Pass 4/5 {
//          Tags { "RenderType"="Opaque" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Sandbox_VolumetricLight:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 112 4 1
//   undeciphered1a: 9
//   Keywords { "SPOT" "SHADOWS_DEPTH" "NOISE" }
//   undeciphered2: 1 6 3 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 592
//   Vector 64 [_LightPos]
//   Vector 80 [_LightColor]
//   Vector 432 [_CameraForward] 3
//   Vector 448 [_VolumetricLight]
//   Vector 464 [_MieG]
//   Vector 480 [_NoiseData]
//   Vector 496 [_NoiseVelocity]
//   ScalarInt 532 [_SampleCount]
//   Float 536 [_CosAngle]
//   Vector 544 [_ConeAxis]
//   Vector 560 [_ConeApex]
//   Float 576 [_PlaneD]
//   Matrix 304 [_MyLightMatrix0]
//   Matrix 368 [_MyWorld2Shadow]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_DitherTexture] 2D 5
//   SetTexture 2 [_LightTexture0] 2D 2
//   SetTexture 3 [_LightTextureB0] 2D 1
//   SetTexture 4 [_NoiseTexture] 3D 4
//   SetTexture 5 [_ShadowMapTexture] 2D 3
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityShadows" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:14:28 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[37], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[25], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_comparison
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a0fc7897c2b250a7-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.xy, v1.xyxx, v1.wwww
sample r0.xyzw, r0.xyxx, t0.xyzw, s0
add r0.yzw, v2.xxyz, -r10.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
sqrt r1.x, r1.x
div r0.yzw, r0.yyzw, r1.xxxx
mad r1.yzw, r0.yyzw, l(0.000000, 0.001000, 0.001000, 0.001000), v2.xxyz
dp3 r2.x, cb0[34].xyzx, r0.yzwy
dp3 r2.y, cb0[34].xyzx, r1.yzwy
add r2.y, r2.y, cb0[36].x
div r2.y, -r2.y, r2.x
lt r2.z, r2.y, l(0.000000)
movc r2.y, r2.z, l(100000.000000), r2.y
add r1.yzw, r1.yyzw, -cb0[35].xxyz
dp3 r2.z, r0.yzwy, r0.yzwy
dp3 r2.w, r1.yzwy, cb0[34].xyzx
dp3 r3.x, r1.yzwy, r0.yzwy
dp3 r1.y, r1.yzwy, r1.yzwy
mul r1.z, cb0[33].z, cb0[33].z
mul r1.w, r1.z, r2.z
mad r1.w, r2.x, r2.x, -r1.w
mul r2.z, r1.z, r3.x
mad r2.z, r2.w, r2.x, -r2.z
add r2.z, r2.z, r2.z
mul r1.y, r1.z, r1.y
mad r1.y, r2.w, r2.w, -r1.y
mul r1.y, r1.w, r1.y
mul r1.y, r1.y, l(4.000000)
mad r1.y, r2.z, r2.z, -r1.y
lt r1.z, l(0.000000), r1.y
sqrt r3.y, r1.y
lt r1.y, l(0.000000), r1.w
lt r3.z, r1.w, l(0.000000)
iadd r1.y, -r1.y, r3.z
itof r1.y, r1.y
mov r3.x, -r3.y
mad r3.xy, r1.yyyy, r3.xyxx, -r2.zzzz
add r1.y, r1.w, r1.w
div r1.yw, r3.xxxy, r1.yyyy
mad r2.xz, r2.xxxx, r1.yywy, r2.wwww
lt r2.xz, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xxzx
lt r3.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r1.ywyy
and r2.xz, r2.xxzx, r3.xxyx
and r3.xy, r2.xzxx, l(0x3f800000, 0x3f800000, 0, 0)
movc r2.xz, r2.xxzx, l(0,0,0,0), l(10000.000000,0,10000.000000,0)
mad r1.yw, r1.yyyw, r3.xxxy, r2.xxxz
movc r1.yz, r1.zzzz, r1.yywy, l(0,10000.000000,10000.000000,0)
mad r0.x, cb1[7].z, r0.x, cb1[7].w
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
dp3 r1.w, cb0[27].xyzx, r0.yzwy
div r0.x, r0.x, r1.w
add r0.x, -r1.x, r0.x
min r1.x, r1.z, r1.y
min r1.x, r1.x, r2.y
min r0.x, r0.x, r1.x
round_ni r1.xy, v0.xyxx
mul r1.xy, r1.xyxx, l(0.125000, 0.125000, 0.000000, 0.000000)
ge r1.zw, r1.xxxy, -r1.xxxy
frc r1.xy, |r1.xyxx|
movc r1.xy, r1.zwzz, r1.xyxx, -r1.xyxx
add r1.xy, r1.xyxx, l(0.062500, 0.062500, 0.000000, 0.000000)
sample r1.xyzw, r1.xyxx, t1.xyzw, s5
itof r1.x, cb0[33].y
div r0.x, r0.x, r1.x
mul r1.xyz, r0.xxxx, r0.yzwy
mad r1.xyz, r1.xyzx, r1.wwww, v2.xyzx
add r2.xyz, -r1.xyzx, r10.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
sqrt r1.w, r1.w
mul r1.w, r1.w, cb0[28].y
mul r1.w, r1.w, l(0.500000)
add r2.x, -cb2[24].x, l(1.000000)
mul r3.xz, cb0[31].xxyx, cb1[0].yyyy
mul r2.yz, r0.xxxx, cb0[28].xxyx
mov r3.y, l(0)
mov r4.xyz, l(0,0,0,0)
mov r5.xyz, r1.xyzx
mov r2.w, r1.w
mov r3.w, l(0)
loop
  ige r4.w, r3.w, cb0[33].y
  breakc_nz r4.w
  add r6.xyz, -r5.xyzx, cb0[4].xyzx
  mul r7.xyz, r5.yyyy, cb0[20].xywx
  mad r7.xyz, cb0[19].xywx, r5.xxxx, r7.xyzx
  mad r7.xyz, cb0[21].xywx, r5.zzzz, r7.xyzx
  add r7.xyz, r7.xyzx, cb0[22].xywx
  div r7.xy, r7.xyxx, r7.zzzz
  sample_b r8.xyzw, r7.xyxx, t2.xyzw, s2, l(-8.000000)
  lt r4.w, r7.z, l(0.000000)
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r8.w
  dp3 r5.w, r6.xyzx, r6.xyzx
  mul r5.w, r5.w, cb0[4].w
  sample r6.xyzw, r5.wwww, t3.xyzw, s1
  mul r4.w, r4.w, r6.x
  mul r6.xyzw, r5.yyyy, cb0[24].xyzw
  mad r6.xyzw, cb0[23].xyzw, r5.xxxx, r6.xyzw
  mad r6.xyzw, cb0[25].xyzw, r5.zzzz, r6.xyzw
  add r6.xyzw, r6.xyzw, cb0[26].xyzw
  div r6.xyz, r6.xyzx, r6.wwww
  sample_c_lz r5.w, r6.xyxx, t5.xxxx, s3, r6.z
  mad_sat r5.w, r5.w, r2.x, cb2[24].x
  mul r4.w, r4.w, r5.w
  mad r6.xyz, r5.xyzx, cb0[30].xxxx, r3.xyzx
  frc r6.xyz, r6.xyzx
  sample r6.xyzw, r6.xyzx, t4.xyzw, s4
  add_sat r5.w, r6.x, -cb0[30].z
  mul_sat r5.w, r5.w, cb0[30].y
  mul r6.x, r2.y, r5.w
  mad r2.w, r2.z, r5.w, r2.w
  mul r4.w, r4.w, r6.x
  mul r5.w, r2.w, l(-1.442695)
  exp r5.w, r5.w
  mul r4.w, r4.w, r5.w
  add r6.xyz, r5.xyzx, -cb0[4].xyzx
  dp3 r5.w, r6.xyzx, r6.xyzx
  rsq r5.w, r5.w
  mul r6.xyz, r5.wwww, r6.xyzx
  dp3 r5.w, r6.xyzx, -r0.yzwy
  mad r5.w, -cb0[29].z, r5.w, cb0[29].y
  log r5.w, r5.w
  mul r5.w, r5.w, l(1.500000)
  exp r5.w, r5.w
  div r5.w, cb0[29].x, r5.w
  mul r5.w, r5.w, cb0[29].w
  mad r4.xyz, r4.wwww, r5.wwww, r4.xyzx
  mad r5.xyz, r0.yzwy, r0.xxxx, r5.xyzx
  iadd r3.w, r3.w, l(1)
endloop
mul r0.xyz, r4.xyzx, cb0[5].xyzx
max o0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used