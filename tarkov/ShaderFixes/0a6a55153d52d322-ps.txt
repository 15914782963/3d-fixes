// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0a6a55153d52d322-ps.txt
// 3DMigoto: 0a6a55153d52d322 | Matched 4 variants of 1 shaders: Custom/Glass2
//
//       Unity headers extracted from Custom_Glass2
//       Shader "Custom/Glass2" {
//         SubShader 1/1 {
//           LOD 300
//           Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//           Pass 2/6 {
//             Name "FORWARD"
//             Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent" "RenderType"="Transparent" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Custom_Glass2:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 66 6 2
//      undeciphered1a: 5
// 4:   Keywords { "SPOT" "FOG_EXP" "GAMMA" "HDR" }
// 1:   Keywords { "SPOT" "FOG_EXP" "GAMMA" "LDR" }
// 8:   Keywords { "SPOT" "FOG_EXP" "HDR" "LINEAR" }
// 2:   Keywords { "SPOT" "FOG_EXP" "LDR" "LINEAR" }
//      undeciphered2: 1 6 5 6 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 992
//      Vector 32 [_LightColor0]
//      Vector 128 [_Color]
//      Vector 176 [_DefVals] 3
//      Matrix 64 [unity_WorldToLight]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 752
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 720 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityFog" 32
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_MainTex] 2D 3
//      SetTexture 1 [_TransparentTex] 2D 4
//      SetTexture 2 [_BumpMap] 2D 5
//      SetTexture 3 [_LightTexture0] 2D 1
//      SetTexture 4 [_LightTextureB0] 2D 2
//      SetTexture 5 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityFog" 3
//      BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sun Jul 14 23:54:54 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 5     z         1     NONE   float
// TEXCOORD                 7      w        1     NONE   float      w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyzw        6     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 7
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0a6a55153d52d322-ps.txt

mul r5.w, -r5.x, r5.y
mad r6.xyz, -r5.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r1.xyz, -v5.xyzx, r6.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r2.xyz, r1.yyyy, v3.xyzx
mad r1.xyw, v2.xyxz, r1.xxxx, r2.xyxz
mad r1.xyz, v4.xyzx, r1.zzzz, r1.xywx
sample r2.xyzw, v1.xyxx, t0.xyzw, s3
mul r2.xyz, r2.xyzx, cb0[8].xyzx
sample r3.xyzw, v1.xyxx, t1.xyzw, s4
mul o0.w, r3.x, cb0[8].w
sample r3.xyzw, v1.xyxx, t2.xyzw, s5
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r3.xyxx, r3.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r3.z, r0.w
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r1.xyzx, r3.xyzx
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, r0.w
mad r0.w, cb0[11].y, r0.w, cb0[11].x
mul r1.xyz, r0.wwww, r2.xyzx
mul r2.xyzw, v5.yyyy, cb0[5].xyzw
mad r2.xyzw, cb0[4].xyzw, v5.xxxx, r2.xyzw
mad r2.xyzw, cb0[6].xyzw, v5.zzzz, r2.xyzw
add r2.xyzw, r2.xyzw, cb0[7].xyzw
eq r0.w, cb4[0].x, l(1.000000)
if_nz r0.w
  eq r0.w, cb4[0].y, l(1.000000)
  mul r4.xyz, v5.yyyy, cb4[2].xyzx
  mad r4.xyz, cb4[1].xyzx, v5.xxxx, r4.xyzx
  mad r4.xyz, cb4[3].xyzx, v5.zzzz, r4.xyzx
  add r4.xyz, r4.xyzx, cb4[4].xyzx
  movc r4.xyz, r0.wwww, r4.xyzx, v5.xyzx
  add r4.xyz, r4.xyzx, -cb4[6].xyzx
  mul r4.yzw, r4.xxyz, cb4[5].xxyz
  mad r0.w, r4.y, l(0.250000), l(0.750000)
  mad r1.w, cb4[0].z, l(0.500000), l(0.750000)
  max r4.x, r0.w, r1.w
  sample r4.xyzw, r4.xzwx, t5.xyzw, s0
else
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r0.w, r4.xyzw, cb2[45].xyzw
lt r1.w, l(0.000000), r2.z
and r1.w, r1.w, l(0x3f800000)
div r4.xy, r2.xyxx, r2.wwww
add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample r4.xyzw, r4.xyxx, t3.xyzw, s1
mul r1.w, r1.w, r4.w
dp3 r2.x, r2.xyzx, r2.xyzx
sample r2.xyzw, r2.xxxx, t4.xyzw, s2
mul r1.w, r1.w, r2.x
mul r0.w, r0.w, r1.w
dp3 r2.x, v2.xyzx, r3.xyzx
dp3 r2.y, v3.xyzx, r3.xyzx
dp3 r2.z, v4.xyzx, r3.xyzx
mul r3.xyz, r0.wwww, cb0[2].xyzx
dp3 r0.x, r2.xyzx, r0.xyzx
max r0.x, r0.x, l(0.000000)
mul r0.yzw, r1.xxyz, r3.xxyz
mul r0.xyz, r0.xxxx, r0.yzwy
div r0.w, v1.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb3[1].y
exp r0.w, -r0.w
min r0.w, r0.w, l(1.000000)
mul o0.xyz, r0.xyzx, r0.wwww
ret
// Approximately 0 instruction slots used