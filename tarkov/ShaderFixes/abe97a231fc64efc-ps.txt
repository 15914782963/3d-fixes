// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed abe97a231fc64efc-ps.txt
// 3DMigoto: abe97a231fc64efc |    Unity headers extracted from Hidden_Custom Global Fog
//    Shader "Hidden/Custom Global Fog" {
//      SubShader 1/1 {
//        Pass 1/1 {
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hidden_Custom Global Fog:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 63 2 8
//   undeciphered1a: 7
//   undeciphered2: 1 2 2 2 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 384
//   Float 32 [_GFogStrength]
//   Float 36 [_GFogY]
//   Float 40 [_GFogMax]
//   Float 44 [_GFogStart]
//   Vector 48 [_GFogColor]
//   Vector 64 [_GFogFuncVals]
//   Vector 80 [_GFogTopFuncVals]
//   Float 336 [_BlendType]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_MainTex] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:15:56 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[22], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed abe97a231fc64efc-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s0
mad r0.x, cb1[7].x, r0.x, cb1[7].y
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
mul r0.xyz, r0.xxxx, v2.xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
div r0.y, -r0.y, r0.x
min r0.x, r0.x, cb0[2].z
add r0.z, cb0[2].y, -r8.y
mad r1.y, r0.x, r0.y, r0.z
mad r0.x, r0.y, cb0[2].w, r0.z
lt r0.z, l(0.000000), r0.y
min r0.w, r1.y, r0.x
max r0.x, r1.y, r0.x
movc r1.x, r0.z, r0.w, r0.x
max r0.xz, r1.xxyx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r1.zw, r0.xxxz, cb0[4].zzzz
log r1.zw, r1.zzzw
mul r1.zw, r1.zzzw, cb0[4].yyyy
mul r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.693147182, 0.693147182)
mad r0.xz, cb0[4].xxxx, r0.xxzx, -r1.zzwz
max r1.xy, r1.xyxx, cb0[5].xxxx
mul r1.zw, r1.xxxy, r1.xxxy
mad r1.xy, r1.zwzz, cb0[5].yyyy, r1.xyxx
mad r0.xz, r1.xxyx, cb0[5].zzzz, r0.xxzx
add r0.x, -r0.x, r0.z
mul r0.x, r0.x, cb0[2].x
div r0.x, r0.x, |r0.y|
sqrt r0.x, |r0.x|
min r0.x, r0.x, l(1.000000)
sample r1.xyzw, v1.xyxx, t1.xyzw, s1
mul r2.xyzw, r0.xxxx, cb0[3].xyzw
eq r0.y, cb0[21].x, l(1.000000)
if_nz r0.y
  max o0.xyzw, r1.xyzw, r2.xyzw
  ret
endif
eq r0.y, cb0[21].x, l(2.000000)
if_nz r0.y
  add r3.xyzw, -r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  mad r4.xyzw, -cb0[3].xyzw, r0.xxxx, l(1.000000, 1.000000, 1.000000, 1.000000)
  mad o0.xyzw, -r3.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  ret
endif
eq r0.y, cb0[21].x, l(3.000000)
if_nz r0.y
  lt r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r1.xyzw
  and r3.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  add r4.xyzw, r1.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
  mad r4.xyzw, -r4.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
  mad r5.xyzw, -cb0[3].xyzw, r0.xxxx, l(1.000000, 1.000000, 1.000000, 1.000000)
  mad r4.xyzw, -r4.xyzw, r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  ge r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r1.xyzw
  and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  mul r6.xyzw, r1.xyzw, r2.xyzw
  add r6.xyzw, r6.xyzw, r6.xyzw
  mul r5.xyzw, r5.xyzw, r6.xyzw
  mad o0.xyzw, r3.xyzw, r4.xyzw, r5.xyzw
  ret
endif
eq r0.y, cb0[21].x, l(4.000000)
if_nz r0.y
  lt r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r2.xyzw
  and r3.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  add r4.xyzw, -r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  mad r5.xyzw, cb0[3].xyzw, r0.xxxx, l(-0.500000, -0.500000, -0.500000, -0.500000)
  add r5.xyzw, -r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  mad r4.xyzw, -r4.xyzw, r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  ge r2.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r2.xyzw
  and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  mad r5.xyzw, cb0[3].xyzw, r0.xxxx, l(0.500000, 0.500000, 0.500000, 0.500000)
  mul r5.xyzw, r1.xyzw, r5.xyzw
  mul r2.xyzw, r2.xyzw, r5.xyzw
  mad o0.xyzw, r3.xyzw, r4.xyzw, r2.xyzw
  ret
endif
add r2.xyzw, -r1.xyzw, cb0[3].xyzw
mad o0.xyzw, r0.xxxx, r2.xyzw, r1.xyzw
ret
// Approximately 0 instruction slots used