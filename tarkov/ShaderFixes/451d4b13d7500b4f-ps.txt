// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 451d4b13d7500b4f-ps.txt
// 3DMigoto: 451d4b13d7500b4f | Matched 4 variants of 1 shaders: Custom/WireNetting
//
//       Unity headers extracted from Custom_WireNetting
//       Shader "Custom/WireNetting" {
//         SubShader 1/1 {
//           LOD 300
//           Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//           Pass 2/6 {
//             Name "FORWARD"
//             Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent" "RenderType"="Transparent" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Custom_WireNetting:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 55 5 2
//      undeciphered1a: 4
// 4:   Keywords { "DIRECTIONAL_COOKIE" "FOG_EXP" "GAMMA" "HDR" }
// 1:   Keywords { "DIRECTIONAL_COOKIE" "FOG_EXP" "GAMMA" "LDR" }
// 8:   Keywords { "DIRECTIONAL_COOKIE" "FOG_EXP" "HDR" "LINEAR" }
// 2:   Keywords { "DIRECTIONAL_COOKIE" "FOG_EXP" "LDR" "LINEAR" }
//      undeciphered2: 1 5 5 5 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 1024
//      Vector 32 [_LightColor0]
//      Vector 128 [_Color]
//      Vector 176 [_DefVals] 3
//      Matrix 64 [unity_WorldToLight]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 752
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 720 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityFog" 32
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_MainTex] 2D 2
//      SetTexture 1 [_TransparentTex] 2D 3
//      SetTexture 2 [_BumpMap] 2D 4
//      SetTexture 3 [_LightTexture0] 2D 1
//      SetTexture 4 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityFog" 3
//      BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:02:33 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy
// TEXCOORD                 6     z         2     NONE   float
// TEXCOORD                 8      w        2     NONE   float      w
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 7   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 6
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 451d4b13d7500b4f-ps.txt

mul r4.w, -r4.x, r4.y
mad r5.xyz, -r4.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v6.xyzx, r5.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyz, r0.yyyy, v4.xyzx
mad r0.xyw, v3.xyxz, r0.xxxx, r1.xyxz
mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
sample r1.xyzw, v1.xyxx, t0.xyzw, s2
mul r1.xyz, r1.xyzx, cb0[8].xyzx
sample r2.xyzw, v2.xyxx, t1.xyzw, s3
mul o0.w, r2.x, cb0[8].w
sample r2.xyzw, v1.zwzz, t2.xyzw, s4
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r2.z, r0.w
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.x, r0.xyzx, r2.xyzx
add r0.x, -r0.x, l(1.000000)
mul r0.x, r0.x, r0.x
mad r0.x, cb0[11].y, r0.x, cb0[11].x
mul r0.xyz, r0.xxxx, r1.xyzx
mul r1.xy, v6.yyyy, cb0[5].xyxx
mad r1.xy, cb0[4].xyxx, v6.xxxx, r1.xyxx
mad r1.xy, cb0[6].xyxx, v6.zzzz, r1.xyxx
add r1.xy, r1.xyxx, cb0[7].xyxx
eq r0.w, cb4[0].x, l(1.000000)
if_nz r0.w
  eq r0.w, cb4[0].y, l(1.000000)
  mul r3.xyz, v6.yyyy, cb4[2].xyzx
  mad r3.xyz, cb4[1].xyzx, v6.xxxx, r3.xyzx
  mad r3.xyz, cb4[3].xyzx, v6.zzzz, r3.xyzx
  add r3.xyz, r3.xyzx, cb4[4].xyzx
  movc r3.xyz, r0.wwww, r3.xyzx, v6.xyzx
  add r3.xyz, r3.xyzx, -cb4[6].xyzx
  mul r3.yzw, r3.xxyz, cb4[5].xxyz
  mad r0.w, r3.y, l(0.250000), l(0.750000)
  mad r1.z, cb4[0].z, l(0.500000), l(0.750000)
  max r3.x, r0.w, r1.z
  sample r3.xyzw, r3.xzwx, t4.xyzw, s0
else
  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r0.w, r3.xyzw, cb2[45].xyzw
sample r1.xyzw, r1.xyxx, t3.xyzw, s1
mul r0.w, r0.w, r1.w
dp3 r1.x, v3.xyzx, r2.xyzx
dp3 r1.y, v4.xyzx, r2.xyzx
dp3 r1.z, v5.xyzx, r2.xyzx
mul r2.xyz, r0.wwww, cb0[2].xyzx
dp3 r0.w, r1.xyzx, cb2[0].xyzx
max r0.w, r0.w, l(0.000000)
mul r0.xyz, r0.xyzx, r2.xyzx
mul r0.xyz, r0.wwww, r0.xyzx
div r0.w, v2.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb3[1].y
exp r0.w, -r0.w
min r0.w, r0.w, l(1.000000)
mul o0.xyz, r0.xyzx, r0.wwww
ret
// Approximately 0 instruction slots used