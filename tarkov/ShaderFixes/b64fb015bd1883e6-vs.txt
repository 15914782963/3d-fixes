// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed b64fb015bd1883e6-vs.txt
// 3DMigoto: b64fb015bd1883e6 | Matched 6 variants of 1 shaders: FX/Water4
//
//        Unity headers extracted from FX_Water4
//        Shader "FX/Water4" {
//          Fallback "Transparent/Diffuse"
//          SubShader 3/3 {
//            LOD 200
//            Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//            Pass 1/1 {
//              Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//              ZWrite Off
//              Program "vp" {
//                SubProgram "d3d11" {
//                }
//              }
//            }
//          }
//        }
//
//     Unity 5.3 headers extracted from FX_Water4:
//       API d3d11
//       Shader model vs_4_0
//       undeciphered1: 201609010 156 0 1
//       undeciphered1a: 8
// 02:   Keywords { "FOG_EXP" "HDR" "LINEAR" }
// 10:   Keywords { "FOG_EXP" "Rain" "HDR" "LINEAR" }
// 04:   Keywords { "FOG_EXP2" "HDR" "LINEAR" }
// 20:   Keywords { "FOG_EXP2" "Rain" "HDR" "LINEAR" }
// 01:   Keywords { "HDR" "LINEAR" }
// 08:   Keywords { "Rain" "HDR" "LINEAR" }
//       undeciphered2: 1 0 4 0 0 0
//       undeciphered3: 1 1 0 0
//       ConstBuffer "$Globals" 1072
//       Vector 176 [TOD_SunSkyColor] 3
//       Vector 192 [TOD_MoonSkyColor] 3
//       Vector 320 [TOD_GroundColor] 3
//       Vector 352 [TOD_MoonHaloColor] 3
//       Vector 416 [TOD_LocalSunDirection] 3
//       Vector 432 [TOD_LocalMoonDirection] 3
//       Float 460 [TOD_Contrast]
//       Float 468 [TOD_ScatteringBrightness]
//       Float 472 [TOD_Fogginess]
//       Float 476 [TOD_MoonHaloPower]
//       Vector 560 [TOD_kBetaMie] 3
//       Vector 576 [TOD_kSun]
//       Vector 592 [TOD_k4PI]
//       Vector 608 [TOD_kRadius]
//       Vector 624 [TOD_kScale]
//       Vector 640 [_Density]
//       Float 656 [_GFogStrength]
//       Float 660 [_GFogY]
//       Float 664 [_GFogMax]
//       Float 668 [_GFogStart]
//       Vector 688 [_GFogFuncVals]
//       Vector 704 [_GFogTopFuncVals]
//       Vector 928 [_BumpTiling]
//       Vector 944 [_BumpDirection]
//       ConstBuffer "UnityPerCamera" 144
//       Vector 0 [_Time]
//       Vector 64 [_WorldSpaceCameraPos] 3
//       ConstBuffer "UnityPerDraw" 160
//       Matrix 0 [unity_ObjectToWorld]
//       ConstBuffer "UnityPerFrame" 384
//       Matrix 272 [unity_MatrixVP]
//       BindCB "$Globals" 0
//       BindCB "UnityPerCamera" 1
//       BindCB "UnityPerDraw" 2
//       BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:17:27 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float
// NORMAL                   0   xyz         2     NONE   float
// TEXCOORD                 0   xyzw        3     NONE   float
// TEXCOORD                 1   xyzw        4     NONE   float
// TEXCOORD                 2   xyzw        5     NONE   float
// TEXCOORD                 3   xyzw        6     NONE   float
// COLOR                    0   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   x           4     NONE   float   x
//
vs_4_0
dcl_constantbuffer cb0[60], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_constantbuffer cb3[24], immediateIndexed
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.x
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed b64fb015bd1883e6-vs.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

mul r0.xyz, v0.yyyy, cb2[1].xyzx
mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
mad r1.xyzw, cb1[0].xxxx, cb0[59].xyzw, r0.xzxz
mul o2.xyzw, r1.xyzw, cb0[58].xyzw
add r0.xyz, r0.xyzx, -r9.xyzx
mul r1.xyzw, v0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb2[3].xyzw
mul r2.xyzw, r1.yyyy, cb3[18].xyzw
mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
dp3 r0.w, r0.xyzx, r0.xyzx
sqrt r1.x, r0.w
add r1.y, r0.y, cb0[40].y
mul r1.y, r1.y, cb0[40].x
max r1.y, r1.y, l(0.000000)
add r1.y, r1.y, l(1.000000)
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
mul r1.y, r1.y, r1.x
mul r1.y, r1.y, cb0[40].z
min r1.y, r1.y, l(10.000000)
mul r1.y, r1.y, l(-1.442695)
exp r1.y, r1.y
add r1.y, -r1.y, l(1.000000)
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r0.xyzx
mad r0.w, r0.y, r0.w, l(0.031250)
lt r1.zw, l(0.000000, 0.000000, 0.031250, -0.031250), r2.yyyy
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, l(8.000000)
movc r0.w, r1.z, r2.y, r0.w
and r2.w, r0.w, r1.w
mul r0.w, r1.y, cb0[39].x
add r3.y, cb0[38].x, cb0[39].w
mul r1.z, r2.w, r2.w
mad r1.z, r1.z, cb0[38].y, cb0[38].w
add r1.z, r1.z, -cb0[38].y
sqrt r1.z, r1.z
mad r1.z, -cb0[38].x, r2.w, r1.z
mul r1.w, -cb0[39].w, cb0[39].z
mul r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.0416666679, 1.442695)
exp r1.w, r1.w
mul r3.w, r2.w, r3.y
div r3.w, r3.w, r3.y
add r3.w, -r3.w, l(1.000000)
mad r4.x, r3.w, l(5.250000), l(-6.800000)
mad r4.x, r3.w, r4.x, l(3.830000)
mad r4.x, r3.w, r4.x, l(0.459000)
mad r3.w, r3.w, r4.x, l(-0.002870)
mul r3.w, r3.w, l(1.442695)
exp r3.w, r3.w
mul r1.w, r1.w, r3.w
mul r0.w, r0.w, r1.z
mul r4.xyz, r1.zzzz, r2.xwzx
mov r3.xz, l(0,0,0,0)
mad r3.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
add r4.xyz, cb0[37].wwww, cb0[37].xyzx
mov r5.xyz, r3.xyzx
mov r6.xyz, l(0,0,0,0)
mov r3.w, l(0)
loop
  ige r4.w, r3.w, l(24)
  breakc_nz r4.w
  dp3 r4.w, r5.xyzx, r5.xyzx
  sqrt r4.w, r4.w
  div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
  add r4.w, -r4.w, cb0[38].x
  mul r4.w, r4.w, cb0[39].z
  mul r4.w, r4.w, l(1.442695)
  exp r4.w, r4.w
  mul r6.w, r0.w, r4.w
  dp3 r7.x, r2.xwzx, r5.xyzx
  dp3 r7.y, cb0[26].xyzx, r5.xyzx
  mad r7.y, -r7.y, r5.w, l(1.000000)
  mad r7.z, r7.y, l(5.250000), l(-6.800000)
  mad r7.z, r7.y, r7.z, l(3.830000)
  mad r7.z, r7.y, r7.z, l(0.459000)
  mad r7.y, r7.y, r7.z, l(-0.002870)
  mul r7.y, r7.y, l(1.442695)
  exp r7.y, r7.y
  mad r5.w, -r7.x, r5.w, l(1.000000)
  mad r7.x, r5.w, l(5.250000), l(-6.800000)
  mad r7.x, r5.w, r7.x, l(3.830000)
  mad r7.x, r5.w, r7.x, l(0.459000)
  mad r5.w, r5.w, r7.x, l(-0.002870)
  mul r5.w, r5.w, l(1.442695)
  exp r5.w, r5.w
  mul r5.w, r5.w, l(0.250000)
  mad r5.w, r7.y, l(0.250000), -r5.w
  mul r4.w, r4.w, r5.w
  mad r4.w, r1.w, l(0.250000), r4.w
  mul r7.xyz, r4.xyzx, -r4.wwww
  mul r7.xyz, r7.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
  exp r7.xyz, r7.xyzx
  mad r6.xyz, r7.xyzx, r6.wwww, r6.xyzx
  mad r5.xyz, r2.xwzx, r1.zzzz, r5.xyzx
  iadd r3.w, r3.w, l(1)
endloop
mul r3.xyz, r6.xyzx, cb0[11].xyzx
mul r4.xyz, r3.xyzx, cb0[36].xyzx
mul r3.xyz, r3.xyzx, cb0[36].wwww
mul_sat r0.w, r2.y, l(-0.800000)
mad r1.z, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.z
dp3 r1.z, cb0[26].xyzx, r2.xyzx
mul r1.w, r1.z, r1.z
mad r1.w, r1.w, l(0.750000), l(0.750000)
mad r2.w, r1.z, r1.z, l(1.000000)
mul r2.w, r2.w, cb0[35].x
mad r1.z, cb0[35].z, r1.z, cb0[35].y
log r1.z, r1.z
mul r1.z, r1.z, l(1.500000)
exp r1.z, r1.z
div r1.z, r2.w, r1.z
mul r3.xyz, r3.xyzx, r1.zzzz
mad r3.xyz, r1.wwww, r4.xyzx, r3.xyzx
mad r4.xyz, r2.yyyy, -cb0[12].xyzx, cb0[12].xyzx
add r3.xyz, r3.xyzx, r4.xyzx
dp3 r1.z, r2.xyzx, cb0[27].xyzx
max r1.z, r1.z, l(0.000000)
log r1.z, r1.z
mul r1.z, r1.z, cb0[29].w
exp r1.z, r1.z
mad r2.xyz, cb0[22].xyzx, r1.zzzz, r3.xyzx
add r1.z, r2.y, r2.x
add r1.z, r2.z, r1.z
mad r3.xyz, r1.zzzz, l(0.333000, 0.333000, 0.333000, 0.000000), -r2.xyzx
mad r2.xyz, cb0[29].zzzz, r3.xyzx, r2.xyzx
add r3.xyz, -r2.xyzx, cb0[20].xyzx
mad r2.xyz, r0.wwww, r3.xyzx, r2.xyzx
mul r2.xyz, r2.xyzx, cb0[29].yyyy
log r2.xyz, r2.xyzx
mul r2.xyz, r2.xyzx, cb0[28].wwww
exp r2.xyz, r2.xyzx
mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000012E-007, -1.000000012E-007, -1.000000012E-007, 0.000000)
max o3.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
div r0.w, -r0.y, r1.x
min r1.x, r1.x, cb0[41].z
add r1.z, cb0[41].y, -r9.y
mad r2.y, r1.x, r0.w, r1.z
mad r1.x, r0.w, cb0[41].w, r1.z
lt r1.z, l(0.000000), r0.w
min r1.w, r2.y, r1.x
max r1.x, r2.y, r1.x
movc r2.x, r1.z, r1.w, r1.x
max r1.xz, r2.xxyx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r2.zw, r1.xxxz, cb0[43].zzzz
log r2.zw, r2.zzzw
mul r2.zw, r2.zzzw, cb0[43].yyyy
mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.693147182, 0.693147182)
mad r1.xz, cb0[43].xxxx, r1.xxzx, -r2.zzwz
max r2.xy, r2.xyxx, cb0[44].xxxx
mul r2.zw, r2.xxxy, r2.xxxy
mad r2.xy, r2.zwzz, cb0[44].yyyy, r2.xyxx
mad r1.xz, r2.xxyx, cb0[44].zzzz, r1.xxzx
add r1.x, -r1.x, r1.z
mul r1.x, r1.x, cb0[41].x
div r0.w, r1.x, |r0.w|
sqrt r0.w, |r0.w|
min o4.x, r0.w, l(1.000000)
mov o1.xyz, r0.xyzx
mov o1.w, l(1.000000)
mov o3.w, r1.y
ret
// Approximately 0 instruction slots used