// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed de19f273de9afa21-ps.txt
// 3DMigoto: de19f273de9afa21 | Matched 2 variants of 1 shaders: p0/Reflective/Bumped Color Specular SMap
//
//       Unity headers extracted from p0_Reflective_Bumped Color Specular SMap
//       Shader "p0/Reflective/Bumped Color Specular SMap" {
//         CustomEditor "FresnelMaterialEditor"
//         Fallback "Reflective/Bumped Diffuse"
//         SubShader 1/1 {
//           Tags { "RenderType"="Opaque" }
//           Pass 5/5 {
//             Name "DEFERRED"
//             Tags { "LIGHTMODE"="DEFERRED" "RenderType"="Opaque" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from p0_Reflective_Bumped Color Specular SMap:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 150 9 4
//      undeciphered1a: 11
// 2:   Keywords { "Rain" "SKINNEDMESHMATERIAL" "USERAIN" "FAKERIPPLELIGHT" }
// 1:   Keywords { "Rain" "USERAIN" "FAKERIPPLELIGHT" }
//      undeciphered2: 1 6 4 6 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 336
//      Vector 48 [_SpecColor]
//      Float 64 [_WetDropSpecular]
//      Float 68 [_WetDropGlossness]
//      Float 72 [_WetDropAlbedo]
//      Float 76 [_WetDropNormal]
//      Vector 80 [_EnvironmentRippleCycle] 3
//      Vector 128 [_LocalRain] 3
//      Vector 144 [_LocalRainAverage] 3
//      Float 156 [_RainIntensity]
//      Float 160 [_RainIntensityRippleScale]
//      Float 164 [_RippleTexScale]
//      Float 168 [_RippleFakeLightIntensityOffset]
//      Float 176 [_RippleFakeLightIntensity]
//      Vector 192 [_Color]
//      Vector 208 [_ReflectColor]
//      Float 224 [_Specularness]
//      Float 228 [_Glossness]
//      Float 236 [_NdotLOffset]
//      Vector 240 [_SpecVals] 3
//      Vector 256 [_DefVals] 3
//      Float 268 [_BumpTiling]
//      Vector 272 [_SunDirection] 3
//      Float 284 [_NightRippleFakeLightOffset]
//      Float 288 [_SkinnedMeshMaterial]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 752
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_MainTex] 2D 2
//      SetTexture 1 [_SpecMap] 2D 3
//      SetTexture 2 [_BumpMap] 2D 4
//      SetTexture 3 [_RippleTexture] 2D 1
//      SetTexture 4 [_Cube] CUBE 5
//      SetTexture 5 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:22:43 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 6   xyzw        7     NONE   float
// TEXCOORD                 7   xyz         8     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[19], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed de19f273de9afa21-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.y, v2.w
mov r0.z, v3.w
mov r0.w, v4.w
add r1.xyz, -r0.yzwy, r12.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
dp3 r0.x, v6.xyzx, v6.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, v6.xyzx
sample r3.xyzw, v1.xyxx, t0.xyzw, s2
mul r3.xyz, r3.xyzx, cb0[12].xyzx
mul r0.x, r3.w, cb0[14].y
sample r4.xyzw, v1.xyxx, t1.xyzw, s3
mul r4.yzw, r4.xxyz, cb0[3].xxyz
mul r1.w, r4.x, cb0[14].x
mul r5.xy, v1.xyxx, cb0[16].wwww
sample r5.xyzw, r5.xyxx, t2.xyzw, s4
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r5.xyxx, r5.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r5.z, r2.w
lt r2.w, l(0.000000), cb0[18].x
if_nz r2.w
  dp3 r2.w, v5.xyzx, cb0[8].xyzx
  max r2.w, r2.w, l(0.000000)
  dp3 r5.w, v5.xyzx, cb0[9].xyzx
  max r5.w, r5.w, l(0.000000)
  add r2.w, r2.w, r5.w
  min r2.w, r2.w, l(1.000000)
  mul_sat r5.w, cb0[9].w, cb0[10].x
  mul r2.w, r2.w, r5.w
  div r6.xy, v1.xyxx, cb0[10].yyyy
  sample r6.xyzw, r6.xyxx, t3.xyzw, s1
  mad r5.w, r6.w, cb0[5].y, cb0[5].x
  div r5.w, r5.w, cb0[5].y
  ge r6.w, r5.w, -r5.w
  frc r5.w, |r5.w|
  movc r5.w, r6.w, r5.w, -r5.w
  mad_sat r5.w, -r5.w, cb0[5].y, l(1.000000)
  mul r5.w, r6.x, r5.w
  mul r6.x, r5.w, cb0[5].z
  mad r6.yz, r6.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  mad_sat r5.w, r5.w, cb0[5].z, l(-0.500000)
  mul r6.yz, r5.wwww, r6.yyzy
  mul r7.xy, r6.yzyy, l(7.000000, 7.000000, 0.000000, 0.000000)
  mul r5.w, r6.x, l(0.350000)
  mul r6.xyzw, r5.wwww, cb0[4].yxzw
  mul r6.xyzw, r2.wwww, r6.xyzw
  mad r2.w, -r3.w, cb0[14].y, l(1.000000)
  mad r2.w, r6.x, r2.w, r0.x
  mad r6.x, -r4.x, cb0[14].x, l(1.000000)
  mad r8.w, r6.y, r6.x, r1.w
  mad r6.xyz, r6.zzzz, -r3.xyzx, r3.xyzx
  mov r7.z, l(1.000000)
  dp3 r7.w, r7.xyzx, r7.xyzx
  rsq r7.w, r7.w
  mad r7.xyz, r7.xyzx, r7.wwww, -r5.xyzx
  mad r7.xyz, r6.wwww, r7.xyzx, r5.xyzx
else
  dp3 r6.w, v5.xyzx, cb0[8].xyzx
  max r6.w, r6.w, l(0.000000)
  dp3 r7.w, v5.xyzx, cb0[9].xyzx
  max r7.w, r7.w, l(0.000000)
  add r6.w, r6.w, r7.w
  min r6.w, r6.w, l(1.000000)
  mul_sat r7.w, cb0[9].w, cb0[10].x
  mul r6.w, r6.w, r7.w
  div r9.xy, v1.xyxx, cb0[10].yyyy
  sample r9.xyzw, r9.xyxx, t3.xyzw, s1
  mad r7.w, r9.w, cb0[5].y, cb0[5].x
  div r7.w, r7.w, cb0[5].y
  ge r9.w, r7.w, -r7.w
  frc r7.w, |r7.w|
  movc r7.w, r9.w, r7.w, -r7.w
  mad_sat r7.w, -r7.w, cb0[5].y, l(1.000000)
  mul r7.w, r9.x, r7.w
  mul r5.w, r7.w, cb0[5].z
  mad r9.xy, r9.yzyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mad_sat r7.w, r7.w, cb0[5].z, l(-0.500000)
  mul r9.xy, r7.wwww, r9.xyxx
  mul r9.xy, r9.xyxx, l(7.000000, 7.000000, 0.000000, 0.000000)
  mul r10.xyzw, r5.wwww, cb0[4].yxzw
  mul r10.xyzw, r6.wwww, r10.xyzw
  mad r6.w, -r3.w, cb0[14].y, l(1.000000)
  mad r2.w, r10.x, r6.w, r0.x
  mad r0.x, -r4.x, cb0[14].x, l(1.000000)
  mad r8.w, r10.y, r0.x, r1.w
  mad r6.xyz, r10.zzzz, -r3.xyzx, r3.xyzx
  mov r9.z, l(1.000000)
  dp3 r0.x, r9.xyzx, r9.xyzx
  rsq r0.x, r0.x
  mad r3.xyz, r9.xyzx, r0.xxxx, -r5.xyzx
  mad r7.xyz, r10.wwww, r3.xyzx, r5.xyzx
endif
dp3 r9.x, v2.xyzx, r7.xyzx
dp3 r9.y, v3.xyzx, r7.xyzx
dp3 r9.z, v4.xyzx, r7.xyzx
dp3 r0.x, -cb0[17].xyzx, -cb0[17].xyzx
rsq r0.x, r0.x
mul r3.xyz, r0.xxxx, -cb0[17].xyzx
dp3 r0.x, r9.xyzx, r3.xyzx
max r0.x, r0.x, l(0.000000)
add_sat r0.x, r0.x, cb0[14].w
add_sat r1.w, cb0[17].w, -cb0[17].y
dp2 r3.x, r7.xyxx, r7.xyxx
sqrt r3.x, r3.x
lt r3.y, l(0.000000), r7.x
lt r3.x, l(0.320000), r3.x
and r3.xy, r3.xyxx, l(1, 1, 0, 0)
imul null, r3.x, r3.x, r3.y
add r3.y, r5.w, -cb0[10].z
round_pi r3.y, r3.y
mul r0.x, r0.x, r3.y
mul r0.x, r0.x, cb0[11].x
mul r0.x, r1.w, r0.x
itof r1.w, r3.x
mul r0.x, r0.x, r1.w
dp3 r1.w, -r1.xyzx, r9.xyzx
add r1.w, r1.w, r1.w
mad r1.xyz, r9.xyzx, -r1.wwww, -r1.xyzx
sample r1.xyzw, r1.xyzx, t4.xyzw, s5
mul r1.xyz, r3.wwww, r1.xyzx
mul r1.xyz, r1.xyzx, cb0[13].xyzx
dp3 r1.w, r2.xyzx, r7.xyzx
add r1.w, -r1.w, l(1.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, l(0.500000)
mad r2.x, cb0[15].y, r1.w, cb0[15].x
mul r2.x, r2.x, l(0.500000)
mad r1.w, cb0[16].y, r1.w, cb0[16].x
mul r3.xyz, r1.wwww, r6.xyzx
mul r1.w, r2.x, r2.w
mad r1.xyz, r1.xyzx, r2.xxxx, r0.xxxx
eq r0.x, cb3[0].x, l(1.000000)
if_nz r0.x
  eq r0.x, cb3[0].y, l(1.000000)
  mul r2.xyz, v3.wwww, cb3[2].xyzx
  mad r2.xyz, cb3[1].xyzx, v2.wwww, r2.xyzx
  mad r2.xyz, cb3[3].xyzx, v4.wwww, r2.xyzx
  add r2.xyz, r2.xyzx, cb3[4].xyzx
  movc r0.xyz, r0.xxxx, r2.xyzx, r0.yzwy
  add r0.xyz, r0.xyzx, -cb3[6].xyzx
  mul r0.yzw, r0.xxyz, cb3[5].xxyz
  mul r0.y, r0.y, l(0.250000)
  mul r2.x, cb3[0].z, l(0.500000)
  mad r2.y, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.y, r2.x
  min r0.x, r2.y, r0.y
  sample r2.xyzw, r0.xzwx, t5.xyzw, s0
  add r5.xyz, r0.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r5.xyzw, r5.xyzx, t5.xyzw, s0
  add r0.xyz, r0.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r0.xyzw, r0.xyzx, t5.xyzw, s0
  mov r9.w, l(1.000000)
  dp4 r2.x, r2.xyzw, r9.xyzw
  dp4 r2.y, r5.xyzw, r9.xyzw
  dp4 r2.z, r0.xyzw, r9.xyzw
else
  mov r9.w, l(1.000000)
  dp4 r2.x, cb2[38].xyzw, r9.xyzw
  dp4 r2.y, cb2[39].xyzw, r9.xyzw
  dp4 r2.z, cb2[40].xyzw, r9.xyzw
endif
add r0.xyz, r2.xyzx, v8.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r8.xyz, r1.wwww, r4.yzwy
mad o2.xyz, r9.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
exp o3.xyz, -r0.xyzx
mov o0.xyz, r3.xyzx
mov o0.w, l(1.000000)
mov o1.xyzw, r8.xyzw
mov o2.w, l(1.000000)
mov o3.w, l(1.000000)
ret
// Approximately 0 instruction slots used