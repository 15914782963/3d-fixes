// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 1d6630cddbc9ab6d-vs.txt
// 3DMigoto: 1d6630cddbc9ab6d |    Unity headers extracted from Nature_SpeedTree Billboard
//    Shader "Nature/SpeedTree Billboard" {
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 2/2 {
//        LOD 400
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//        Pass 1/6 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" "SHADOWSUPPORT"="true" }
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Nature_SpeedTree Billboard:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201609010 51 0 0
//   undeciphered1a: 5
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "EFFECT_BUMP" }
//   undeciphered2: 1 0 7 0 0 0
//   undeciphered3: 25 3 0 0 3 4 4 5
//   ConstBuffer "$Globals" 112
//   Vector 80 [_Color]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 752
//   Vector 656 [unity_SHBr]
//   Vector 672 [unity_SHBg]
//   Vector 688 [unity_SHBb]
//   Vector 704 [unity_SHC]
//   ConstBuffer "UnityPerDraw" 160
//   Vector 144 [unity_WorldTransformParams]
//   Matrix 0 [unity_ObjectToWorld]
//   Matrix 64 [unity_WorldToObject]
//   ConstBuffer "UnityPerFrame" 384
//   Matrix 272 [unity_MatrixVP]
//   ConstBuffer "UnityBillboardPerCamera" 48
//   Vector 0 [unity_BillboardNormal] 3
//   Vector 16 [unity_BillboardTangent] 3
//   Vector 32 [unity_BillboardCameraParams]
//   ConstBuffer "UnityBillboardPerBatch" 288
//   Vector 0 [unity_BillboardInfo]
//   Vector 16 [unity_BillboardSize]
//   Vector 32 [unity_BillboardImageTexCoords0]
//   Vector 48 [unity_BillboardImageTexCoords1]
//   Vector 64 [unity_BillboardImageTexCoords2]
//   Vector 80 [unity_BillboardImageTexCoords3]
//   Vector 96 [unity_BillboardImageTexCoords4]
//   Vector 112 [unity_BillboardImageTexCoords5]
//   Vector 128 [unity_BillboardImageTexCoords6]
//   Vector 144 [unity_BillboardImageTexCoords7]
//   Vector 160 [unity_BillboardImageTexCoords8]
//   Vector 176 [unity_BillboardImageTexCoords9]
//   Vector 192 [unity_BillboardImageTexCoords10]
//   Vector 208 [unity_BillboardImageTexCoords11]
//   Vector 224 [unity_BillboardImageTexCoords12]
//   Vector 240 [unity_BillboardImageTexCoords13]
//   Vector 256 [unity_BillboardImageTexCoords14]
//   Vector 272 [unity_BillboardImageTexCoords15]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityBillboardPerCamera" 5
//   BindCB "UnityBillboardPerBatch" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sun Jul 14 23:57:19 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyz
// NORMAL                   0   xyz         3     NONE   float
// TANGENT                  0   xyzw        4     NONE   float
// COLOR                    0   xyzw        5     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[10], immediateIndexed
dcl_constantbuffer cb4[21], immediateIndexed
dcl_constantbuffer cb5[3], immediateIndexed
dcl_constantbuffer cb6[18], dynamicIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output o6.xyz
dcl_output o7.xyzw
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.x, v1.x, l(-0.500000)
mul r0.x, r0.x, cb6[1].x
mul r0.x, r0.x, v2.x
mul r0.xyz, r0.xxxx, cb5[1].xyzx
mad r1.x, v1.y, cb6[1].y, cb6[1].z
mad r0.w, r1.x, v2.y, r0.y
add r0.xyz, r0.xwzx, v0.xyzx
mul r1.xyzw, r0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb3[2].xyzw, r0.zzzz, r1.xyzw
add r0.xyzw, r0.xyzw, cb3[3].xyzw
mul r1.xyzw, r0.yyyy, cb4[18].xyzw
mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 1d6630cddbc9ab6d-vs.txt
ne r5.w, r1.w, l(1.0)
if_nz r5.w
  add r5.w, r1.w, -r5.y
  mad r1.x, r5.w, r5.x, r1.x
endif

mov o1.w, r0.x
mul r2.xyz, cb3[1].yzxy, cb5[1].yyyy
mad r2.xyz, cb3[0].yzxy, cb5[1].xxxx, r2.xyzx
mad r2.xyz, cb3[2].yzxy, cb5[1].zzzz, r2.xyzx
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, r2.xyzx
mov o1.x, r2.z
dp3 r3.x, cb5[0].xyzx, cb3[4].xyzx
dp3 r3.y, cb5[0].xyzx, cb3[5].xyzx
dp3 r3.z, cb5[0].xyzx, cb3[6].xyzx
dp3 r0.x, r3.xyzx, r3.xyzx
rsq r0.x, r0.x
mul r3.xyzw, r0.xxxx, r3.xyzz
mul r4.xyz, r2.xyzx, r3.wxyw
mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
mul r4.xyz, r4.xyzx, -cb3[9].wwww
mov o1.y, r4.x
mov o1.z, r3.x
mov o2.w, r0.y
mov o3.w, r0.z
mov o2.x, r2.x
mov o3.x, r2.y
mov o2.y, r4.y
mov o3.y, r4.z
mov o2.z, r3.y
mov o3.z, r3.w
mov o4.xyzw, cb0[5].xyzw
add r0.x, v2.z, cb5[2].w
mad r0.x, r0.x, cb6[0].y, l(0.500000)
round_ni r0.x, r0.x
div r0.x, r0.x, cb6[0].x
ge r0.y, r0.x, -r0.x
frc r0.x, |r0.x|
movc r0.x, r0.y, r0.x, -r0.x
mul r0.x, r0.x, cb6[0].x
ftou r0.x, r0.x
lt r0.y, cb6[r0.x + 2].w, l(0.000000)
mad r0.zw, -cb6[r0.x + 2].zzzw, v1.yyyx, cb6[r0.x + 2].xxxy
mad r2.xy, cb6[r0.x + 2].zwzz, v1.xyxx, cb6[r0.x + 2].xyxx
movc o5.xy, r0.yyyy, r0.zwzz, r2.xyxx
mov o5.z, l(0)
mul r0.x, r3.y, r3.y
mad r0.x, r3.x, r3.x, -r0.x
mul r2.xyzw, r3.ywzx, r3.xyzw
dp4 r3.x, cb2[41].xyzw, r2.xyzw
dp4 r3.y, cb2[42].xyzw, r2.xyzw
dp4 r3.z, cb2[43].xyzw, r2.xyzw
mad o6.xyz, cb2[44].xyzx, r0.xxxx, r3.xyzx
mul r0.x, r1.y, cb1[5].x
mul r0.w, r0.x, l(0.500000)
mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mov o7.zw, r1.zzzw
add o7.xy, r0.zzzz, r0.xwxx
ret
// Approximately 0 instruction slots used