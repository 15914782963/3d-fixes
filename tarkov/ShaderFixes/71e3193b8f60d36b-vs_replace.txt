// 3DMigoto: 71e3193b8f60d36b |    Unity headers extracted from Custom_multiFlare
//    Shader "Custom/multiFlare" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "QUEUE"="Transparent+1001" "RenderType"="Transparent" }
//        Pass 1/1 {
//          Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "QUEUE"="Transparent+1001" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_multiFlare:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201609010 67 0 1
//   undeciphered1a: 7
//   undeciphered2: 1 1 4 1 0 0
//   undeciphered3: 159 6 0 0 1 2 3 4 4 5 7 8 2 1
//   ConstBuffer "$Globals" 64
//   Float 32 [_FallofShift]
//   Float 36 [_FallofStrength]
//   Float 40 [_DepthOffset]
//   Float 52 [_VisibilityCheckerSize]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityPerDraw" 160
//   Matrix 0 [unity_ObjectToWorld]
//   ConstBuffer "UnityPerFrame" 384
//   Matrix 80 [glstate_matrix_projection]
//   Matrix 272 [unity_MatrixVP]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

// ---- Created with 3Dmigoto v1.3.16 on Mon Jul 15 00:08:17 2019
Texture2D<float4> t0 : register(t0);

SamplerState s0_s : register(s0);


// Unity constant buffers reconstructed with DarkStarSword's hlsltool.py:
// hlsltool.py --reconstruct-unity-cbuffers --in-place 71e3193b8f60d36b-vs_replace.txt

cbuffer UnityPerFrame : register(b3) {
  row_major matrix glstate_matrix_projection : packoffset(c5);
  row_major matrix unity_MatrixVP : packoffset(c17);
}

cbuffer UnityPerDraw : register(b2) {
  row_major matrix unity_ObjectToWorld : packoffset(c0);
}

cbuffer UnityPerCamera : register(b1) {
  float3 _WorldSpaceCameraPos : packoffset(c4);
}

cbuffer Globals : register(b0) {
  float _FallofShift : packoffset(c2);
  float _FallofStrength : packoffset(c2.y);
  float _DepthOffset : packoffset(c2.z);
  float _VisibilityCheckerSize : packoffset(c3.y);
}




// 3Dmigoto declarations
#define cmp -


void main(
  float4 v0 : POSITION0,
  float4 v1 : NORMAL0,
  float4 v2 : TEXCOORD0,
  float4 v3 : TEXCOORD1,
  float4 v4 : TEXCOORD2,
  float2 v5 : TEXCOORD3,
  float4 v6 : TANGENT0,
  float4 v7 : COLOR0,
  out float4 o0 : SV_POSITION0,
  out float2 o1 : TEXCOORD0,
  out float2 p1 : TEXCOORD1,
  out float4 o2 : COLOR0)
{
  const float4 icb[] = { { -0.668000, -0.632000, 0, 0},
                              { -0.359000, -0.839000, 0, 0},
                              { -0.175000, -0.498000, 0, 0},
                              { 0.612000, -0.636000, 0, 0},
                              { -0.444000, -0.297000, 0, 0},
                              { 0.151000, -0.402000, 0, 0},
                              { 0.205000, -0.849000, 0, 0},
                              { 0.847000, -0.317000, 0, 0},
                              { -0.858000, -0.263000, 0, 0},
                              { -0.098000, -0.041000, 0, 0},
                              { 0.297000, 0.093000, 0, 0},
                              { 0.517000, -0.220000, 0, 0},
                              { -0.839000, 0.031000, 0, 0},
                              { -0.824000, 0.361000, 0, 0},
                              { -0.507000, 0.076000, 0, 0},
                              { 0.002000, 0.423000, 0, 0},
                              { 0.351000, 0.497000, 0, 0},
                              { 0.756000, 0.108000, 0, 0},
                              { 0.766000, 0.524000, 0, 0},
                              { -0.124000, 0.878000, 0, 0},
                              { -0.536000, 0.724000, 0, 0},
                              { 0.288000, 0.895000, 0, 0},
                              { -0.373000, 0.397000, 0, 0} };
  float4 r0,r1,r2,r3,r4,r5,r6;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = unity_ObjectToWorld[1].xyzw * v0.yyyy;
  r0.xyzw = unity_ObjectToWorld[0].xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = unity_ObjectToWorld[2].xyzw * v0.zzzz + r0.xyzw;
  r0.xyzw = unity_ObjectToWorld[3].xyzw * v0.wwww + r0.xyzw;
  r1.xyz = _WorldSpaceCameraPos.xyz + -r0.xyz;
  r1.w = dot(r1.xyz, r1.xyz);
  r1.w = rsqrt(r1.w);
  r1.xyz = r1.xyz * r1.www;
  r0.xyz = r1.xyz * _DepthOffset + r0.xyz;
  r1.xyzw = unity_MatrixVP[1].xyzw * r0.yyyy;
  r1.xyzw = unity_MatrixVP[0].xyzw * r0.xxxx + r1.xyzw;
  r1.xyzw = unity_MatrixVP[2].xyzw * r0.zzzz + r1.xyzw;
  r0.xyzw = unity_MatrixVP[3].xyzw * r0.wwww + r1.xyzw;
  r0.z = r0.w + -r0.z;
  r1.xyz = r0.xyz / r0.www;
  r2.xy = r1.xy * float2(0.5,0.5) + float2(0.5,0.5);
  r3.x = glstate_matrix_projection[0].x;
  r3.y = glstate_matrix_projection[1].y;
  r3.zw = _VisibilityCheckerSize * r3.xy;
  r3.zw = r3.zw / r1.zz;
  r2.z = 1 + -r2.y;
  r1.w = 0;
  r2.y = 0;
  while (true) {
    r2.w = cmp((int)r2.y >= 23);
    if (r2.w != 0) break;
    r4.xy = icb[r2.y+0].xy * r3.zw + r2.xz;
    r4.xyzw = t0.SampleLevel(s0_s, r4.xy, 0).xyzw;
    r2.w = 1 + -r4.x;
    r2.w = cmp(r1.z < r2.w);
    r2.w = r2.w ? 1.000000 : 0;
    r1.w = r2.w + r1.w;
    r2.y = (int)r2.y + 1;
  }
  r1.z = 0.0434782617 * r1.w;
  r1.xy = _FallofShift + -abs(r1.xy);
  r1.xy = saturate(_FallofStrength * r1.xy);
  r1.x = r1.x * r1.y;
  r1.y = -v1.x + r0.z;
  r1.y = saturate(v1.y * r1.y);
  r1.yw = v6.xy * r1.yy + float2(1,1);
  r2.xy = v1.zz * r0.xy;
  r2.zw = r2.xy / r0.ww;
  r2.z = dot(r2.zw, r2.zw);
  r2.z = -v6.z + r2.z;
  r2.z = saturate(-abs(r2.z) * v6.w + 1);
  r4.x = -r0.z;
  r4.y = 0;
  r5.xyzw = r0.yxxy * v1.zzzz + r4.xyxy;
  r0.x = dot(r5.xy, r5.xy);
  r0.x = rsqrt(r0.x);
  r6.xy = r5.xy * r0.xx;
  r6.z = -r6.y;
  r6.xyzw = v3.xxyy * r6.xyzx;
  r0.xy = r6.xy + r6.zw;
  r0.xy = r0.xy * r0.zz;
  r2.w = cmp(v2.x >= 0);
  r3.z = cmp(v2.y < 0);
  r3.w = dot(r5.zw, r5.zw);
  r3.w = rsqrt(r3.w);
  r5.xy = r5.zw * r3.ww;
  r5.z = -r5.y;
  r5.xyzw = v3.xxyy * r5.xyzx;
  r4.yz = r5.xy + r5.zw;
  r4.yz = r4.yz * r0.zz;
  r5.xy = v3.xy * r0.zz;
  r3.zw = r3.zz ? r4.yz : r5.xy;
  r0.xy = r2.ww ? r3.zw : r0.xy;
  r0.xy = r0.xy * r1.zz;
  r0.xy = r0.xy * r1.yy;
  o0.xy = r0.xy * r3.xy + r2.xy;
  r3.xyzw = v7.xyzw * r1.wwww;
  r3.xyzw = r3.xyzw * r1.xxxx;
  r2.xyzw = r3.xyzw * r2.zzzz;
  r2.xyzw = v7.wwww * r2.xyzw;
  o2.xyzw = r2.xyzw * r1.zzzz;
  r0.x = cmp(v7.w < 0.00499999989);
  r0.y = r4.x + r0.w;
  o0.z = r0.x ? 1 : r0.y;
  o0.w = r0.w;
  o1.xy = v2.xy;
  p1.y = 0;
  p1.x = r1.z;
  return;
}
