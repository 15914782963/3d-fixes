// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9191ee3f35520962-ps.txt
// 3DMigoto: 9191ee3f35520962 | Matched 8 variants of 1 shaders: Hidden/TubeLight
//
//        Unity headers extracted from Hidden_TubeLight
//        Shader "Hidden/TubeLight" {
//          SubShader 1/1 {
//            Tags { "QUEUE"="Geometry-1" }
//     1:     Pass 2/4 {
//     2:     Pass 3/4 {
//     4:     Pass 4/4 {
//              Tags { "QUEUE"="Geometry-1" }
//              ZWrite Off
//              Program "fp" {
//                SubProgram "d3d11" {
//                }
//              }
//            }
//          }
//        }
//
//     Unity 5.3 headers extracted from Hidden_TubeLight:
//       API d3d11
//       Shader model ps_4_0
//       undeciphered1: 201609010 133 4 2
//       undeciphered1a: 7
// 80:   Keywords { "AMBIENT" "NEGATIVE" "INVERTEDSHADOWCUBEPLANES" "OPTICCAMERA" "SCENEVIEWCAMERA" }
// 20:   Keywords { "AMBIENT" "NEGATIVE" "INVERTEDSHADOWCUBEPLANES" "OPTICCAMERA" }
// 40:   Keywords { "AMBIENT" "NEGATIVE" "INVERTEDSHADOWCUBEPLANES" "SCENEVIEWCAMERA" }
// 10:   Keywords { "AMBIENT" "NEGATIVE" "INVERTEDSHADOWCUBEPLANES" }
// 08:   Keywords { "NEGATIVE" "INVERTEDSHADOWCUBEPLANES" "OPTICCAMERA" "SCENEVIEWCAMERA" }
// 02:   Keywords { "NEGATIVE" "INVERTEDSHADOWCUBEPLANES" "OPTICCAMERA" }
// 04:   Keywords { "NEGATIVE" "INVERTEDSHADOWCUBEPLANES" "SCENEVIEWCAMERA" }
// 01:   Keywords { "NEGATIVE" "INVERTEDSHADOWCUBEPLANES" }
//       undeciphered2: 1 4 3 4 0 0
//       undeciphered3: 0 0
//       ConstBuffer "$Globals" 448
//       Vector 96 [_LightPos]
//       Vector 112 [_LightColor]
//       Vector 304 [_InvertedShadowPlanes0]
//       Vector 320 [_InvertedShadowPlanes1]
//       Vector 336 [_InvertedShadowPlanes2]
//       Vector 352 [_InvertedShadowPlanes3]
//       Vector 368 [_InvertedShadowPlanes4]
//       Vector 384 [_InvertedShadowPlanes5]
//       Float 404 [_InvertedShadowPlaneFeather]
//       Float 416 [_LightRadius]
//       Float 420 [_LightLength]
//       Vector 432 [_LightAxis]
//       ConstBuffer "UnityPerCamera" 144
//       Vector 64 [_WorldSpaceCameraPos] 3
//       Vector 80 [_ProjectionParams]
//       Vector 112 [_ZBufferParams]
//       ConstBuffer "UnityPerCameraRare" 352
//       Matrix 288 [unity_CameraToWorld]
//       SetTexture 0 [_CameraDepthTexture] 2D 0
//       SetTexture 1 [_CameraGBufferTexture0] 2D 1
//       SetTexture 2 [_CameraGBufferTexture1] 2D 2
//       SetTexture 3 [_CameraGBufferTexture2] 2D 3
//       BindCB "$Globals" 0
//       BindCB "UnityPerCamera" 1
//       BindCB "UnityPerCameraRare" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:12:33 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[28], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9191ee3f35520962-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.x, cb1[5].z, v2.z
mul r0.xyz, r0.xxxx, v2.xyzx
div r1.xy, v1.xyxx, v1.wwww
sample r2.xyzw, r1.xyxx, t0.xyzw, s0
mad r0.w, cb1[7].x, r2.x, cb1[7].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r2.xyz, r0.yyyy, cb2[19].xyzx
mad r0.xyw, cb2[18].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb2[20].xyzx, r0.zzzz, r0.xywx
add r0.xyz, r0.xyzx, cb2[21].xyzx
dp3 r0.w, r0.xyzx, cb0[19].xyzx
add r0.w, -r0.w, cb0[19].w
add r0.w, r0.w, l(0.000100)
add r1.z, cb0[25].y, cb0[25].y
add r0.w, r0.w, cb0[25].y
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
mul_sat r0.w, r0.w, r1.z
mad r1.w, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.w
dp3 r1.w, r0.xyzx, cb0[20].xyzx
add r1.w, -r1.w, cb0[20].w
add r1.w, r1.w, l(0.000100)
add r1.w, r1.w, cb0[25].y
mul_sat r1.w, r1.z, r1.w
mad r2.x, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.x
mul r0.w, r0.w, r1.w
dp3 r1.w, r0.xyzx, cb0[21].xyzx
add r1.w, -r1.w, cb0[21].w
add r1.w, r1.w, l(0.000100)
add r1.w, r1.w, cb0[25].y
mul_sat r1.w, r1.z, r1.w
mad r2.x, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.x
mul r0.w, r0.w, r1.w
dp3 r1.w, r0.xyzx, cb0[22].xyzx
add r1.w, -r1.w, cb0[22].w
add r1.w, r1.w, l(0.000100)
add r1.w, r1.w, cb0[25].y
mul_sat r1.w, r1.z, r1.w
mad r2.x, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.x
mul r0.w, r0.w, r1.w
dp3 r1.w, r0.xyzx, cb0[23].xyzx
add r1.w, -r1.w, cb0[23].w
add r1.w, r1.w, l(0.000100)
add r1.w, r1.w, cb0[25].y
mul_sat r1.w, r1.z, r1.w
mad r2.x, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.x
mul r0.w, r0.w, r1.w
dp3 r1.w, r0.xyzx, cb0[24].xyzx
add r1.w, -r1.w, cb0[24].w
add r1.w, r1.w, l(0.000100)
add r1.w, r1.w, cb0[25].y
mul_sat r1.z, r1.z, r1.w
mad r1.w, r1.z, l(-2.000000), l(3.000000)
mul r1.z, r1.z, r1.z
mul r1.z, r1.z, r1.w
mad r0.w, -r0.w, r1.z, l(1.000000)
ne r1.z, r0.w, l(0.000000)
if_nz r1.z
  sample r2.xyzw, r1.xyxx, t1.xyzw, s1
  sample r3.xyzw, r1.xyxx, t2.xyzw, s2
  sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  dp3 r1.w, r1.xyzx, r1.xyzx
  rsq r1.w, r1.w
  mul r1.xyz, r1.wwww, r1.xyzx
  mad r3.xyz, cb0[27].xyzx, cb0[26].yyyy, cb0[6].xyzx
  add r4.xyz, r0.xyzx, -r8.xyzx
  dp3 r1.w, r4.xyzx, r4.xyzx
  rsq r1.w, r1.w
  mul r5.xyz, r1.wwww, r4.xyzx
  dp3 r2.w, -r5.xyzx, r1.xyzx
  add r4.w, r2.w, r2.w
  mad r1.xyz, r1.xyzx, -r4.wwww, -r5.xyzx
  add r5.xyz, -r0.xyzx, cb0[6].xyzx
  add r0.xyz, -r0.xyzx, r3.xyzx
  dp3 r3.x, r5.xyzx, r5.xyzx
  dp3 r3.y, r0.xyzx, r0.xyzx
  add r6.xyz, -r5.xyzx, r0.xyzx
  dp3 r3.z, r1.xyzx, r5.xyzx
  dp3 r4.w, r1.xyzx, r6.xyzx
  dp3 r5.w, r5.xyzx, r6.xyzx
  dp3 r6.w, r6.xyzx, r6.xyzx
  mad r3.z, r3.z, r4.w, -r5.w
  mad r4.w, -r4.w, r4.w, r6.w
  div_sat r3.z, r3.z, r4.w
  mad r6.xyz, r6.xyzx, r3.zzzz, r5.xyzx
  dp3 r3.z, r6.xyzx, r1.xyzx
  mad r1.xyz, r3.zzzz, r1.xyzx, -r6.xyzx
  dp3 r3.z, r1.xyzx, r1.xyzx
  sqrt r3.xyz, r3.xyzx
  div_sat r3.z, cb0[26].x, r3.z
  mad r1.xyz, r1.xyzx, r3.zzzz, r6.xyzx
  dp3 r3.z, r1.xyzx, r1.xyzx
  sqrt r3.z, r3.z
  div r1.xyz, r1.xyzx, r3.zzzz
  dp3 r0.x, r5.xyzx, r0.xyzx
  mad r0.x, r3.x, r3.y, r0.x
  mul r0.x, r0.x, cb0[6].w
  mul r0.x, r0.x, l(0.500000)
  sqrt r0.x, r0.x
  mad r0.y, r0.x, l(4.000000), l(1.000000)
  mul r0.y, r0.y, r0.y
  div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  add r0.y, r0.y, l(-0.040000)
  mul r0.y, r0.y, l(1.04166675)
  ge r0.x, r0.x, l(1.000000)
  mul r3.xyz, r0.yyyy, cb0[7].xyzx
  mul r0.yzw, r0.wwww, r3.xxyz
  movc r0.xyz, r0.xxxx, l(0,0,0,0), r0.yzwy
  dp3 r0.x, r0.xyzx, l(0.220000, 0.707000, 0.071000, 0.000000)
  add r0.y, -r3.w, l(1.000000)
  mad r3.xyz, -r4.xyzx, r1.wwww, r1.xyzx
  dp3 r0.z, r3.xyzx, r3.xyzx
  max r0.z, r0.z, l(0.001000)
  rsq r0.z, r0.z
  mul r3.xyz, r0.zzzz, r3.xyzx
  max r0.z, r2.w, l(0.000000)
  dp3 r0.w, r1.xyzx, r3.xyzx
  max r0.w, r0.w, l(0.000000)
  add r0.z, -r0.z, l(1.000000)
  mul r1.x, r0.z, r0.z
  mul r1.x, r1.x, r1.x
  mul r0.z, r0.z, r1.x
  mul r0.w, r0.w, r0.w
  dp2 r0.y, r0.wwww, r0.yyyy
  add r0.y, r0.y, l(-0.500000)
  mad r0.y, r0.y, r0.z, l(1.000000)
  mul r0.x, r0.y, -r0.x
  mul o0.xyz, r0.xxxx, r2.xyzx
  mov o0.w, l(1.000000)
else
  mov o0.xyzw, l(0,0,0,0)
endif
ret
// Approximately 0 instruction slots used