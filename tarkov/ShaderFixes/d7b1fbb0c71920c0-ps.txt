// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d7b1fbb0c71920c0-ps.txt
// 3DMigoto: d7b1fbb0c71920c0 | Matched 4 variants of 1 shaders: p0/Reflective/Bumped Specular SMap Parallax
//
//       Unity headers extracted from p0_Reflective_Bumped Specular SMap Parallax
//       Shader "p0/Reflective/Bumped Specular SMap Parallax" {
//         CustomEditor "FresnelMaterialEditor"
//         Fallback "Reflective/Bumped Diffuse"
//         SubShader 1/1 {
//           Tags { "RenderType"="Opaque" }
//           Pass 3/5 {
//             Name "PREPASS"
//             Tags { "LIGHTMODE"="PREPASSBASE" "RenderType"="Opaque" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from p0_Reflective_Bumped Specular SMap Parallax:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 84 5 2
//      undeciphered1a: 4
// 8:   Keywords { "Rain" "SKINNEDMESHMATERIAL" "USERAIN" "FAKERIPPLELIGHT" }
// 4:   Keywords { "Rain" "SKINNEDMESHMATERIAL" "USERAIN" }
// 2:   Keywords { "Rain" "USERAIN" "FAKERIPPLELIGHT" }
// 1:   Keywords { "Rain" "USERAIN" }
//      undeciphered2: 1 4 2 4 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 320
//      Float 64 [_WetDropSpecular]
//      Float 76 [_WetDropNormal]
//      Vector 80 [_EnvironmentRippleCycle] 3
//      Vector 128 [_LocalRain] 3
//      Vector 144 [_LocalRainAverage] 3
//      Float 156 [_RainIntensity]
//      Float 160 [_RainIntensityRippleScale]
//      Float 164 [_RippleTexScale]
//      Float 224 [_Specularness]
//      Float 268 [_BumpTiling]
//      Float 288 [_SkinnedMeshMaterial]
//      Float 292 [_Parallax]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      SetTexture 0 [_ParallaxMap] 2D 3
//      SetTexture 1 [_SpecMap] 2D 1
//      SetTexture 2 [_BumpMap] 2D 2
//      SetTexture 3 [_RippleTexture] 2D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:21:55 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[19], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 6
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d7b1fbb0c71920c0-ps.txt

mul r4.w, -r4.x, r4.y
mad r5.xyz, -r4.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r0.xyz, -r0.xyzx, r5.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyz, r0.yyyy, v3.xyzx
mad r0.xyw, v2.xyxz, r0.xxxx, r1.xyxz
mad r0.xyz, v4.xyzx, r0.zzzz, r0.xywx
sample r1.xyzw, v1.xyxx, t0.xyzw, s3
mul r0.w, cb0[18].y, l(0.500000)
mad r0.w, r1.x, cb0[18].y, -r0.w
dp3 r1.x, r0.xyzx, r0.xyzx
rsq r1.x, r1.x
mul r0.xy, r0.xyxx, r1.xxxx
mad r0.z, r0.z, r1.x, l(0.420000)
div r0.xy, r0.xyxx, r0.zzzz
mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
sample r1.xyzw, r0.xyxx, t1.xyzw, s1
mul r0.z, r1.x, cb0[14].x
mul r1.yz, r0.xxyx, cb0[16].wwww
sample r2.xyzw, r1.yzyy, t2.xyzw, s2
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r2.z, r0.w
lt r0.w, l(0.000000), cb0[18].x
if_nz r0.w
  dp3 r0.w, v5.xyzx, cb0[8].xyzx
  max r0.w, r0.w, l(0.000000)
  dp3 r1.y, v5.xyzx, cb0[9].xyzx
  max r1.y, r1.y, l(0.000000)
  add r0.w, r0.w, r1.y
  min r0.w, r0.w, l(1.000000)
  mul_sat r1.y, cb0[9].w, cb0[10].x
  mul r0.w, r0.w, r1.y
  div r1.yz, r0.xxyx, cb0[10].yyyy
  sample r3.xyzw, r1.yzyy, t3.xyzw, s0
  mad r1.y, r3.w, cb0[5].y, cb0[5].x
  div r1.y, r1.y, cb0[5].y
  ge r1.z, r1.y, -r1.y
  frc r1.y, |r1.y|
  movc r1.y, r1.z, r1.y, -r1.y
  mad_sat r1.y, -r1.y, cb0[5].y, l(1.000000)
  mul r1.y, r3.x, r1.y
  mul r1.z, r1.y, cb0[5].z
  mad r3.xy, r3.yzyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mad_sat r1.y, r1.y, cb0[5].z, l(-0.500000)
  mul r1.yw, r1.yyyy, r3.xxxy
  mul r3.xy, r1.ywyy, l(7.000000, 7.000000, 0.000000, 0.000000)
  mul r1.y, r1.z, l(0.350000)
  mul r1.yz, r1.yyyy, cb0[4].xxwx
  mul r1.yz, r0.wwww, r1.yyzy
  mad r0.w, -r1.x, cb0[14].x, l(1.000000)
  mad o0.w, r1.y, r0.w, r0.z
  mov r3.z, l(1.000000)
  dp3 r0.w, r3.xyzx, r3.xyzx
  rsq r0.w, r0.w
  mad r3.xyz, r3.xyzx, r0.wwww, -r2.xyzx
  mad r1.yzw, r1.zzzz, r3.xxyz, r2.xxyz
else
  dp3 r0.w, v5.xyzx, cb0[8].xyzx
  max r0.w, r0.w, l(0.000000)
  dp3 r2.w, v5.xyzx, cb0[9].xyzx
  max r2.w, r2.w, l(0.000000)
  add r0.w, r0.w, r2.w
  min r0.w, r0.w, l(1.000000)
  mul_sat r2.w, cb0[9].w, cb0[10].x
  mul r0.w, r0.w, r2.w
  div r0.xy, r0.xyxx, cb0[10].yyyy
  sample r3.xyzw, r0.xyxx, t3.xyzw, s0
  mad r0.x, r3.w, cb0[5].y, cb0[5].x
  div r0.x, r0.x, cb0[5].y
  ge r0.y, r0.x, -r0.x
  frc r0.x, |r0.x|
  movc r0.x, r0.y, r0.x, -r0.x
  mad_sat r0.x, -r0.x, cb0[5].y, l(1.000000)
  mul r0.x, r3.x, r0.x
  mul r0.y, r0.x, cb0[5].z
  mad r3.xy, r3.yzyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mad_sat r0.x, r0.x, cb0[5].z, l(-0.500000)
  mul r3.xy, r0.xxxx, r3.xyxx
  mul r3.xy, r3.xyxx, l(7.000000, 7.000000, 0.000000, 0.000000)
  mul r0.xy, r0.yyyy, cb0[4].xwxx
  mul r0.xy, r0.wwww, r0.xyxx
  mad r0.w, -r1.x, cb0[14].x, l(1.000000)
  mad o0.w, r0.x, r0.w, r0.z
  mov r3.z, l(1.000000)
  dp3 r0.x, r3.xyzx, r3.xyzx
  rsq r0.x, r0.x
  mad r0.xzw, r3.xxyz, r0.xxxx, -r2.xxyz
  mad r1.yzw, r0.yyyy, r0.xxzw, r2.xxyz
endif
dp3 r0.x, v2.xyzx, r1.yzwy
dp3 r0.y, v3.xyzx, r1.yzwy
dp3 r0.z, v4.xyzx, r1.yzwy
mad o0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
ret
// Approximately 0 instruction slots used