// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 6405153301e09c98-vs.txt
// 3DMigoto: 6405153301e09c98 |    Unity headers extracted from p0_TransparentBilboard
//    Shader "p0/TransparentBilboard" {
//      SubShader 1/1 {
//        Tags { "LIGHTMODE"="Vertex" "QUEUE"="Transparent+1" "RenderType"="Transparent" }
//        Pass 1/1 {
//          Tags { "LIGHTMODE"="Vertex" "QUEUE"="Transparent+1" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from p0_TransparentBilboard:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201609010 53 0 1
//   undeciphered1a: 5
//   undeciphered2: 1 0 5 0 0 0
//   undeciphered3: 25 3 0 0 3 4 4 5
//   ConstBuffer "$Globals" 80
//   Vector 32 [_Color]
//   Float 48 [_Distance]
//   Float 56 [_BlinkSpeed]
//   Float 60 [_BlinkMinAlpha]
//   Float 64 [_LightMultyplier]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 16 [_SinTime]
//   Vector 96 [_ScreenParams]
//   ConstBuffer "UnityLighting" 752
//   Vector 96 [unity_LightColor0]
//   Vector 112 [unity_LightColor1]
//   Vector 128 [unity_LightColor2]
//   Vector 144 [unity_LightColor3]
//   Vector 160 [unity_LightColor4]
//   Vector 176 [unity_LightColor5]
//   Vector 192 [unity_LightColor6]
//   Vector 208 [unity_LightColor7]
//   Vector 224 [unity_LightPosition0]
//   Vector 240 [unity_LightPosition1]
//   Vector 256 [unity_LightPosition2]
//   Vector 272 [unity_LightPosition3]
//   Vector 288 [unity_LightPosition4]
//   Vector 304 [unity_LightPosition5]
//   Vector 320 [unity_LightPosition6]
//   Vector 336 [unity_LightPosition7]
//   Vector 352 [unity_LightAtten0]
//   Vector 368 [unity_LightAtten1]
//   Vector 384 [unity_LightAtten2]
//   Vector 400 [unity_LightAtten3]
//   Vector 416 [unity_LightAtten4]
//   Vector 432 [unity_LightAtten5]
//   Vector 448 [unity_LightAtten6]
//   Vector 464 [unity_LightAtten7]
//   ConstBuffer "UnityPerDraw" 160
//   Matrix 0 [unity_ObjectToWorld]
//   ConstBuffer "UnityPerFrame" 384
//   Vector 0 [glstate_lightmodel_ambient]
//   Matrix 80 [glstate_matrix_projection]
//   Matrix 144 [unity_MatrixV]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityPerFrame" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:06:35 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xy          2     NONE   float   xy
// COLOR                    0   xyzw        3     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
// COLOR                    0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[5], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[27], dynamicIndexed
dcl_constantbuffer cb3[4], immediateIndexed
dcl_constantbuffer cb4[13], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, cb3[0].yyyy, cb4[10].xyzw
mad r0.xyzw, cb4[9].xyzw, cb3[0].xxxx, r0.xyzw
mad r0.xyzw, cb4[11].xyzw, cb3[0].zzzz, r0.xyzw
mad r0.xyzw, cb4[12].xyzw, cb3[0].wwww, r0.xyzw
mul r1.xyzw, cb3[1].yyyy, cb4[10].xyzw
mad r1.xyzw, cb4[9].xyzw, cb3[1].xxxx, r1.xyzw
mad r1.xyzw, cb4[11].xyzw, cb3[1].zzzz, r1.xyzw
mad r1.xyzw, cb4[12].xyzw, cb3[1].wwww, r1.xyzw
mul r2.xyzw, cb3[2].yyyy, cb4[10].xyzw
mad r2.xyzw, cb4[9].xyzw, cb3[2].xxxx, r2.xyzw
mad r2.xyzw, cb4[11].xyzw, cb3[2].zzzz, r2.xyzw
mad r2.xyzw, cb4[12].xyzw, cb3[2].wwww, r2.xyzw
mul r3.xyzw, cb3[3].yyyy, cb4[10].xyzw
mad r3.xyzw, cb4[9].xyzw, cb3[3].xxxx, r3.xyzw
mad r3.xyzw, cb4[11].xyzw, cb3[3].zzzz, r3.xyzw
mad r3.xyzw, cb4[12].xyzw, cb3[3].wwww, r3.xyzw
mul r1.xyzw, r1.xyzw, v0.yyyy
mad r0.xyzw, r0.xyzw, v0.xxxx, r1.xyzw
mad r0.xyzw, r2.xyzw, v0.zzzz, r0.xyzw
mad r0.xyzw, r3.xyzw, v0.wwww, r0.xyzw
mov r1.xy, v2.xyxx
mov r1.zw, l(0,0,0.100000,0)
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, r0.yyyy, cb4[6].xyzw
mad r1.xyzw, cb4[5].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb4[7].xyzw, r0.zzzz, r1.xyzw
mad r1.xyzw, cb4[8].xyzw, r0.wwww, r1.xyzw

// Relocated to here with asmtool.py
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 6405153301e09c98-vs.txt
ne r5.w, r1.w, l(1.0)
if_nz r5.w
  add r5.w, r1.w, -r5.y
  mad r1.x, r5.w, r5.x, r1.x
endif

div r2.xyz, r1.xywx, r1.wwww
mad r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
div r3.xy, l(0.500000, 0.500000, 0.000000, 0.000000), cb1[6].xyxx
add r2.w, -r2.y, l(1.000000)
add o3.xy, r2.xwxx, r3.xyxx
add o3.z, -r1.z, r1.w
add r2.xyw, cb4[0].xyxz, cb4[0].xyxz
mov r3.xyz, r2.xywx
mov r0.w, l(0)
loop
  ige r3.w, r0.w, l(4)
  breakc_nz r3.w
  mad r4.xyz, -r0.xyzx, cb2[r0.w + 14].wwww, cb2[r0.w + 14].xyzx
  dp3 r3.w, r4.xyzx, r4.xyzx
  mad r3.w, r3.w, cb2[r0.w + 22].z, l(1.000000)
  div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  mad r3.xyz, cb2[r0.w + 6].xyzx, r3.wwww, r3.xyzx
  iadd r0.w, r0.w, l(1)
endloop
mad r0.x, v0.y, l(5.000000), v0.x
mad r0.x, -v0.z, l(20.000000), r0.x
add r0.x, r0.x, cb1[0].x
mad r0.x, cb1[1].x, cb1[1].y, r0.x
mul r0.x, r0.x, cb0[3].z
sincos r0.x, null, r0.x
add r0.x, r0.x, cb0[3].w
lt r0.y, l(0.000000), r0.x
movc r0.x, r0.y, r0.x, -r0.x
add r2.xyw, r3.xyxz, l(-1.000000, -1.000000, 0.000000, -1.000000)
mad r3.xyz, cb0[4].xxxx, r2.xywx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyzw, r0.xxxx, cb0[2].xyzw
mov r3.w, l(1.000000)
mul r3.xyzw, r3.xyzw, r4.xyzw
mul_sat r0.w, -r0.z, cb0[3].x
mov r0.xyz, l(1.000000,1.000000,1.000000,0)
mul o2.xyzw, r0.xyzw, r3.xyzw

// mov o0.xyzw, r1.xyzw // Relocated from here with asmtool.py

mov o3.w, r2.z
mov o1.xy, v1.xyxx
ret
// Approximately 0 instruction slots used