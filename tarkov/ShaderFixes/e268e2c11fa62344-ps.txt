// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e268e2c11fa62344-ps.txt
// 3DMigoto: e268e2c11fa62344 | Matched 3 variants of 1 shaders: Hidden/AreaLight
//
//       Unity headers extracted from Hidden_AreaLight
//       Shader "Hidden/AreaLight" {
//         SubShader 1/1 {
//           Tags { "QUEUE"="Geometry-1" }
//    1:     Pass 3/7 {
//    2:     Pass 5/7 {
//    4:     Pass 7/7 {
//             Tags { "QUEUE"="Geometry-1" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Hidden_AreaLight:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 315 4 23
//      undeciphered1a: 9
// 4:   Keywords { "SHADOWCUBEPLANES" "AMBIENT" "OPTICCAMERA" "SCENEVIEWCAMERA" }
// 1:   Keywords { "SHADOWCUBEPLANES" "AMBIENT" "OPTICCAMERA" }
// 2:   Keywords { "SHADOWCUBEPLANES" "AMBIENT" "SCENEVIEWCAMERA" }
//      undeciphered2: 1 4 3 4 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 672
//      Vector 80 [_LightDir]
//      Vector 112 [_LightColor]
//      Float 228 [_Hardness]
//      Vector 384 [_ShadowPlanes0]
//      Vector 400 [_ShadowPlanes1]
//      Vector 416 [_ShadowPlanes2]
//      Vector 432 [_ShadowPlanes3]
//      Vector 448 [_ShadowPlanes4]
//      Vector 464 [_ShadowPlanes5]
//      Float 576 [_ShadowPlaneFeather]
//      Matrix 304 [_ClipCube]
//      Matrix 592 [_LightVerts]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      Vector 112 [_ZBufferParams]
//      ConstBuffer "UnityPerCameraRare" 352
//      Matrix 288 [unity_CameraToWorld]
//      SetTexture 0 [_CameraDepthTexture] 2D 0
//      SetTexture 1 [_CameraGBufferTexture0] 2D 3
//      SetTexture 2 [_AmpDiffAmpSpecFresnel] 2D 2
//      SetTexture 3 [_TransformInv_Diffuse] 2D 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerCameraRare" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:23:20 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[40], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e268e2c11fa62344-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.x, cb1[5].z, v2.z
mul r0.xyz, r0.xxxx, v2.xyzx
div r1.xy, v1.xyxx, v1.wwww
sample r2.xyzw, r1.xyxx, t0.xyzw, s0
mad r0.w, cb1[7].x, r2.x, cb1[7].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r2.xyz, r0.yyyy, cb2[19].xyzx
mad r0.xyw, cb2[18].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb2[20].xyzx, r0.zzzz, r0.xywx
add r0.xyz, r0.xyzx, cb2[21].xyzx
dp3 r0.w, r0.xyzx, cb0[24].xyzx
add r0.w, -r0.w, cb0[24].w
add r0.w, r0.w, l(0.000100)
add r1.z, cb0[36].x, cb0[36].x
add r0.w, r0.w, cb0[36].x
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
mul_sat r0.w, r0.w, r1.z
mad r1.w, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.w
dp3 r1.w, r0.xyzx, cb0[25].xyzx
add r1.w, -r1.w, cb0[25].w
add r1.w, r1.w, l(0.000100)
add r1.w, r1.w, cb0[36].x
mul_sat r1.w, r1.z, r1.w
mad r2.x, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.x
mul r0.w, r0.w, r1.w
dp3 r1.w, r0.xyzx, cb0[26].xyzx
add r1.w, -r1.w, cb0[26].w
add r1.w, r1.w, l(0.000100)
add r1.w, r1.w, cb0[36].x
mul_sat r1.w, r1.z, r1.w
mad r2.x, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.x
mul r0.w, r0.w, r1.w
dp3 r1.w, r0.xyzx, cb0[27].xyzx
add r1.w, -r1.w, cb0[27].w
add r1.w, r1.w, l(0.000100)
add r1.w, r1.w, cb0[36].x
mul_sat r1.w, r1.z, r1.w
mad r2.x, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.x
mul r0.w, r0.w, r1.w
dp3 r1.w, r0.xyzx, cb0[28].xyzx
add r1.w, -r1.w, cb0[28].w
add r1.w, r1.w, l(0.000100)
add r1.w, r1.w, cb0[36].x
mul_sat r1.w, r1.z, r1.w
mad r2.x, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.x
mul r0.w, r0.w, r1.w
dp3 r1.w, r0.xyzx, cb0[29].xyzx
add r1.w, -r1.w, cb0[29].w
add r1.w, r1.w, l(0.000100)
add r1.w, r1.w, cb0[36].x
mul_sat r1.z, r1.z, r1.w
mad r1.w, r1.z, l(-2.000000), l(3.000000)
mul r1.z, r1.z, r1.z
mul r1.z, r1.z, r1.w
mul r0.w, r0.w, r1.z
ne r1.z, r0.w, l(0.000000)
if_nz r1.z
  mul r2.xyzw, r0.yyyy, cb0[20].xyzw
  mad r2.xyzw, cb0[19].xyzw, r0.xxxx, r2.xyzw
  mad r2.xyzw, cb0[21].xyzw, r0.zzzz, r2.xyzw
  add r2.xyzw, r2.xyzw, cb0[22].xyzw
  div r2.xyz, r2.xyzx, r2.wwww
  ge r1.zw, |r2.xxxy|, l(0.000000, 0.000000, 1.000000, 1.000000)
  and r1.zw, r1.zzzw, l(0, 0, 0x3f800000, 0x3f800000)
  dp2 r1.z, r1.zwzz, r1.zwzz
  eq r1.z, r1.z, l(0.000000)
  add r2.xy, |r2.xyxx|, l(-0.600000, -0.600000, 0.000000, 0.000000)
  max r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  dp2 r1.w, r2.xyxx, r2.xyxx
  sqrt r1.w, r1.w
  mad r2.x, cb0[14].y, l(100.000000), l(1.000000)
  add r1.w, r1.w, l(0.0999999940)
  add r1.w, r1.w, r1.w
  min r1.w, r1.w, l(1.000000)
  mad r2.y, r1.w, l(-2.000000), l(3.000000)
  mul r1.w, r1.w, r1.w
  mad r1.w, -r2.y, r1.w, l(1.000000)
  max r1.w, r1.w, l(0.000000)
  mul r1.w, r1.w, r2.x
  add r2.x, r2.z, l(-1.000000)
  mov_sat r2.x, -r2.x
  mad r2.y, r2.x, l(-2.000000), l(3.000000)
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, r2.y
  min r2.x, r2.x, l(1.000000)
  mul_sat r1.w, r1.w, r2.x
  and r1.z, r1.w, r1.z
  ne r1.w, r1.z, l(0.000000)
  if_nz r1.w
    sample r2.xyzw, r1.xyxx, t1.xyzw, s3
    add r1.xyw, -r0.xyxz, r10.xyxz
    dp3 r2.w, r1.xywx, r1.xywx
    rsq r2.w, r2.w
    mul r1.xyw, r1.xyxw, r2.wwww
    dp3 r2.w, r1.xywx, -cb0[5].xyzx
    mad r1.xyw, cb0[5].xyxz, r2.wwww, r1.xyxw
    dp3 r3.x, r1.xywx, r1.xywx
    rsq r3.x, r3.x
    mul r1.xyw, r1.xyxw, r3.xxxx
    mul r3.xyz, r1.ywxy, -cb0[5].zxyz
    mad r3.xyz, -cb0[5].yzxy, r1.wxyw, -r3.xyzx
    dp3 r3.w, r3.xyzx, r3.xyzx
    rsq r3.w, r3.w
    mul r3.xyz, r3.wwww, r3.xyzx
    add r4.xz, -r0.zzzz, cb0[39].xxyx
    add r5.xyz, -r0.xxxx, cb0[37].xyzx
    add r6.xyz, -r0.yyyy, cb0[38].xzyx
    add r7.xw, -r0.zzzz, cb0[39].zzzw
    add r7.y, -r0.x, cb0[37].w
    add r7.z, -r0.y, cb0[38].w
    mov r4.y, r5.x
    mov r4.w, r6.x
    dp3 r0.x, r4.ywxy, r1.xywx
    dp3 r0.z, r4.ywxy, r3.xyzx
    dp3 r0.y, r4.ywxy, -cb0[5].xyzx
    mov r4.x, r5.y
    mov r4.y, r6.z
    dp3 r5.x, r4.xyzx, r1.xywx
    dp3 r3.w, r4.xyzx, r3.xyzx
    dp3 r5.y, r4.xyzx, -cb0[5].xyzx
    mov r6.x, r5.z
    mov r6.z, r7.x
    dp3 r4.x, r6.xyzx, r1.xywx
    dp3 r4.z, r6.xyzx, r3.xyzx
    dp3 r4.y, r6.xyzx, -cb0[5].xyzx
    dp3 r1.x, r7.yzwy, r1.xywx
    dp3 r1.w, r7.yzwy, r3.xyzx
    dp3 r1.y, r7.yzwy, -cb0[5].xyzx
    add r3.x, -|r2.w|, l(1.000000)
    sqrt r3.x, r3.x
    mad r3.y, |r2.w|, l(-0.0187292993), l(0.074261)
    mad r3.y, r3.y, |r2.w|, l(-0.212114394)
    mad r3.y, r3.y, |r2.w|, l(1.57072878)
    mul r3.z, r3.x, r3.y
    mad r3.z, r3.z, l(-2.000000), l(3.14159274)
    lt r2.w, r2.w, -r2.w
    and r2.w, r2.w, r3.z
    mad r2.w, r3.y, r3.x, r2.w
    mul r6.y, r2.w, l(0.636942625)
    mov r6.xw, l(0.330000,0,0,1.000000)
    sample r7.xyzw, r6.xyxx, t2.xyzw, s2
    sample r8.xyzw, r6.xyxx, t3.xyzw, s1
    dp2 r3.x, r0.xyxx, r8.xwxx
    mul r3.y, r0.z, r8.z
    mov r6.z, r8.y
    dp2 r3.z, r0.xyxx, r6.zwzz
    dp2 r0.x, r5.xyxx, r8.xwxx
    mul r0.y, r3.w, r8.z
    dp2 r0.z, r5.xyxx, r6.zwzz
    dp2 r5.x, r4.xyxx, r8.xwxx
    mul r5.y, r4.z, r8.z
    dp2 r5.z, r4.xyxx, r6.zwzz
    dp2 r4.x, r1.xyxx, r8.xwxx
    mul r4.y, r1.w, r8.z
    dp2 r4.z, r1.xyxx, r6.zwzz
    lt r1.x, l(0.000000), r3.z
    and r1.y, r1.x, l(1)
    lt r1.w, l(0.000000), r0.z
    movc r1.x, r1.x, l(3), l(2)
    movc r1.x, r1.w, r1.x, r1.y
    lt r1.y, l(0.000000), r5.z
    iadd r1.w, r1.x, l(4)
    movc r1.x, r1.y, r1.w, r1.x
    lt r1.y, l(0.000000), r4.z
    iadd r1.w, r1.x, l(8)
    movc r1.x, r1.y, r1.w, r1.x
    switch r1.x
      case l(0)
      mov r1.xyw, r4.xyxz
      mov r2.w, l(0)
      break
      case l(1)
      mul r6.xyz, r0.xyzx, r3.zzzz
      mad r0.xyz, -r0.zzzz, r3.xyzx, r6.xyzx
      mul r6.xyz, r3.zzzz, r4.xyzx
      mad r5.xyz, -r4.zzzz, r3.xyzx, r6.xyzx
      mov r1.xyw, r4.xyxz
      mov r2.w, l(3)
      break
      case l(2)
      mul r6.xyz, r3.xyzx, r0.zzzz
      mad r3.xyz, -r3.zzzz, r0.xyzx, r6.xyzx
      mul r6.xyz, r0.zzzz, r5.xyzx
      mad r5.xyz, -r5.zzzz, r0.xyzx, r6.xyzx
      mov r1.xyw, r4.xyxz
      mov r2.w, l(3)
      break
      case l(3)
      mul r6.xyz, r0.zzzz, r5.xyzx
      mad r5.xyz, -r5.zzzz, r0.xyzx, r6.xyzx
      mul r6.xyz, r3.zzzz, r4.xyzx
      mad r1.xyw, -r4.zzzz, r3.xyxz, r6.xyxz
      mov r2.w, l(4)
      break
      case l(4)
      mul r6.xyz, r4.xyzx, r5.zzzz
      mad r3.xyz, -r4.zzzz, r5.xyzx, r6.xyzx
      mul r6.xyz, r0.xyzx, r5.zzzz
      mad r0.xyz, -r0.zzzz, r5.xyzx, r6.xyzx
      mov r1.xyw, r4.xyxz
      mov r2.w, l(3)
      break
      case l(5)
      mov r1.xyw, r4.xyxz
      mov r2.w, l(0)
      break
      case l(6)
      mul r6.xyz, r3.xyzx, r0.zzzz
      mad r3.xyz, -r3.zzzz, r0.xyzx, r6.xyzx
      mul r6.xyz, r4.xyzx, r5.zzzz
      mad r1.xyw, -r4.zzzz, r5.xyxz, r6.xyxz
      mov r2.w, l(4)
      break
      case l(7)
      mul r6.xyz, r3.zzzz, r4.xyzx
      mad r6.xyz, -r4.zzzz, r3.xyzx, r6.xyzx
      mul r7.yzw, r4.xxyz, r5.zzzz
      mad r1.xyw, -r4.zzzz, r5.xyxz, r7.yzyw
      mov r4.xyz, r6.xyzx
      mov r2.w, l(5)
      break
      case l(8)
      mul r6.xyz, r3.xyzx, r4.zzzz
      mad r3.xyz, -r3.zzzz, r4.xyzx, r6.xyzx
      mul r6.xyz, r5.xyzx, r4.zzzz
      mad r0.xyz, -r5.zzzz, r4.xyzx, r6.xyzx
      mov r5.xyz, r4.xyzx
      mov r1.xyw, r4.xyxz
      mov r2.w, l(3)
      break
      case l(9)
      mul r6.xyz, r0.xyzx, r3.zzzz
      mad r0.xyz, -r0.zzzz, r3.xyzx, r6.xyzx
      mul r6.xyz, r5.xyzx, r4.zzzz
      mad r5.xyz, -r5.zzzz, r4.xyzx, r6.xyzx
      mov r1.xyw, r4.xyxz
      mov r2.w, l(4)
      break
      case l(10)
      mov r1.xyw, r4.xyxz
      mov r2.w, l(0)
      break
      case l(11)
      mul r6.xyz, r5.xyzx, r4.zzzz
      mad r1.xyw, -r5.zzzz, r4.xyxz, r6.xyxz
      mul r6.xyz, r0.zzzz, r5.xyzx
      mad r5.xyz, -r5.zzzz, r0.xyzx, r6.xyzx
      mov r2.w, l(5)
      break
      case l(12)
      mul r6.xyz, r0.xyzx, r5.zzzz
      mad r0.xyz, -r0.zzzz, r5.xyzx, r6.xyzx
      mul r6.xyz, r3.xyzx, r4.zzzz
      mad r3.xyz, -r3.zzzz, r4.xyzx, r6.xyzx
      mov r1.xyw, r4.xyxz
      mov r2.w, l(4)
      break
      case l(13)
      mul r6.xyz, r0.xyzx, r5.zzzz
      mad r6.xyz, -r0.zzzz, r5.xyzx, r6.xyzx
      mul r7.yzw, r0.xxyz, r3.zzzz
      mad r0.xyz, -r0.zzzz, r3.xyzx, r7.yzwy
      mov r1.xyw, r5.xyxz
      mov r2.w, l(5)
      mov r5.xyz, r6.xyzx
      break
      case l(14)
      mul r6.xyz, r3.xyzx, r4.zzzz
      mad r6.xyz, -r3.zzzz, r4.xyzx, r6.xyzx
      mul r7.yzw, r3.xxyz, r0.zzzz
      mad r3.xyz, -r3.zzzz, r0.xyzx, r7.yzwy
      mov r1.xyw, r4.xyxz
      mov r4.xyz, r6.xyzx
      mov r2.w, l(5)
      break
      case l(15)
      mov r1.xyw, r4.xyxz
      mov r2.w, l(4)
      break
    endswitch
    if_nz r2.w
      dp3 r3.w, r3.xyzx, r3.xyzx
      rsq r3.w, r3.w
      mul r3.xyz, r3.wwww, r3.xyzx
      dp3 r3.w, r0.xyzx, r0.xyzx
      rsq r3.w, r3.w
      mul r0.xyz, r0.xyzx, r3.wwww
      dp3 r3.w, r5.xyzx, r5.xyzx
      rsq r3.w, r3.w
      mul r5.xyz, r3.wwww, r5.xyzx
      dp3 r3.w, r1.xywx, r1.xywx
      rsq r3.w, r3.w
      mul r1.xyw, r1.xyxw, r3.wwww
      ieq r6.xyz, r2.wwww, l(3, 4, 5, 0)
      dp3 r3.w, r4.xyzx, r4.xyzx
      rsq r3.w, r3.w
      mul r7.yzw, r3.wwww, r4.xxyz
      movc r7.yzw, r6.yyyy, r3.xxyz, r7.yyzw
      movc r1.xyw, r6.xxxx, r3.xyxz, r1.xyxw
      movc r4.xyz, r6.xxxx, r4.xyzx, r7.yzwy
      dp3 r3.w, r3.xyzx, r0.xyzx
      max r3.w, r3.w, l(-0.999900)
      add r4.w, -|r3.w|, l(1.000000)
      sqrt r4.w, r4.w
      mad r5.w, |r3.w|, l(-0.0187292993), l(0.074261)
      mad r5.w, r5.w, |r3.w|, l(-0.212114394)
      mad r5.w, r5.w, |r3.w|, l(1.57072878)
      mul r6.x, r4.w, r5.w
      mad r6.x, r6.x, l(-2.000000), l(3.14159274)
      lt r3.w, r3.w, -r3.w
      and r3.w, r3.w, r6.x
      mad r3.w, r5.w, r4.w, r3.w
      sincos r4.w, null, r3.w
      div r3.w, r3.w, r4.w
      mul r4.w, r0.x, r3.y
      mad r4.w, r3.x, r0.y, -r4.w
      dp3 r0.z, r0.xyzx, r5.xyzx
      max r0.z, r0.z, l(-0.999900)
      add r5.w, -|r0.z|, l(1.000000)
      sqrt r5.w, r5.w
      mad r6.x, |r0.z|, l(-0.0187292993), l(0.074261)
      mad r6.x, r6.x, |r0.z|, l(-0.212114394)
      mad r6.x, r6.x, |r0.z|, l(1.57072878)
      mul r6.y, r5.w, r6.x
      mad r6.y, r6.y, l(-2.000000), l(3.14159274)
      lt r0.z, r0.z, -r0.z
      and r0.z, r0.z, r6.y
      mad r0.z, r6.x, r5.w, r0.z
      sincos r5.w, null, r0.z
      div r0.z, r0.z, r5.w
      mul r0.y, r0.y, r5.x
      mad r0.x, r0.x, r5.y, -r0.y
      mul r0.x, r0.x, r0.z
      mad r0.x, r3.w, r4.w, r0.x
      dp3 r0.y, r5.xyzx, r1.xywx
      max r0.y, r0.y, l(-0.999900)
      add r0.z, -|r0.y|, l(1.000000)
      sqrt r0.z, r0.z
      mad r3.w, |r0.y|, l(-0.0187292993), l(0.074261)
      mad r3.w, r3.w, |r0.y|, l(-0.212114394)
      mad r3.w, r3.w, |r0.y|, l(1.57072878)
      mul r4.w, r0.z, r3.w
      mad r4.w, r4.w, l(-2.000000), l(3.14159274)
      lt r0.y, r0.y, -r0.y
      and r0.y, r0.y, r4.w
      mad r0.y, r3.w, r0.z, r0.y
      sincos r0.z, null, r0.y
      div r0.y, r0.y, r0.z
      mul r0.z, r1.x, r5.y
      mad r0.z, r5.x, r1.y, -r0.z
      mad r0.x, r0.y, r0.z, r0.x
      uge r0.y, r2.w, l(4)
      dp3 r0.z, r1.xywx, r4.xyzx
      max r0.z, r0.z, l(-0.999900)
      add r1.w, -|r0.z|, l(1.000000)
      sqrt r1.w, r1.w
      mad r2.w, |r0.z|, l(-0.0187292993), l(0.074261)
      mad r2.w, r2.w, |r0.z|, l(-0.212114394)
      mad r2.w, r2.w, |r0.z|, l(1.57072878)
      mul r3.w, r1.w, r2.w
      mad r3.w, r3.w, l(-2.000000), l(3.14159274)
      lt r0.z, r0.z, -r0.z
      and r0.z, r0.z, r3.w
      mad r0.z, r2.w, r1.w, r0.z
      sincos r1.w, null, r0.z
      div r0.z, r0.z, r1.w
      mul r1.y, r1.y, r4.x
      mad r1.x, r1.x, r4.y, -r1.y
      mad r0.z, r0.z, r1.x, r0.x
      movc r0.x, r0.y, r0.z, r0.x
      dp3 r0.y, r4.xyzx, r3.xyzx
      max r0.y, r0.y, l(-0.999900)
      add r0.z, -|r0.y|, l(1.000000)
      sqrt r0.z, r0.z
      mad r1.x, |r0.y|, l(-0.0187292993), l(0.074261)
      mad r1.x, r1.x, |r0.y|, l(-0.212114394)
      mad r1.x, r1.x, |r0.y|, l(1.57072878)
      mul r1.y, r0.z, r1.x
      mad r1.y, r1.y, l(-2.000000), l(3.14159274)
      lt r0.y, r0.y, -r0.y
      and r0.y, r0.y, r1.y
      mad r0.y, r1.x, r0.z, r0.y
      sincos r0.z, null, r0.y
      div r0.y, r0.y, r0.z
      mul r0.z, r3.x, r4.y
      mad r0.z, r4.x, r3.y, -r0.z
      mad r0.y, r0.y, r0.z, r0.x
      movc r0.x, r6.z, r0.y, r0.x
      mul r0.x, r0.x, l(0.159150)
      max r0.x, r0.x, l(0.000000)
    else
      mov r0.x, l(0)
    endif
    mul r0.x, r7.x, r0.x
    mul r0.xyz, r2.xyzx, r0.xxxx
    mul r0.xyz, r1.zzzz, r0.xyzx
    mul r1.xyz, r0.wwww, cb0[7].xyzx
    mul r0.xyz, r0.xyzx, r1.xyzx
  else
    mov r0.xyz, l(0,0,0,0)
  endif
else
  mov r0.xyz, l(0,0,0,0)
endif
mov o0.xyzw, r0.xyzz
ret
// Approximately 0 instruction slots used