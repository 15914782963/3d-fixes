// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d81ec855471b2c63-ps.txt
// 3DMigoto: d81ec855471b2c63 |    Unity headers extracted from p0_Reflective_Bumped Specular_Icon
//    Shader "p0/Reflective/Bumped Specular_Icon" {
//      Fallback "Reflective/Bumped Diffuse"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "RenderType"="Opaque" }
//        Pass 5/6 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="DEFERRED" "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from p0_Reflective_Bumped Specular_Icon:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 64 6 2
//   undeciphered1a: 7
//   undeciphered2: 1 4 4 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 192
//   Vector 48 [_SpecColor]
//   Vector 64 [_Color]
//   Vector 80 [_ReflectColor]
//   Float 96 [_Shininess]
//   Float 100 [_SpecPower]
//   Vector 112 [_SpecVals] 3
//   Vector 128 [_DefVals] 3
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_BumpMap] 2D 2
//   SetTexture 2 [_Cube] CUBE 3
//   SetTexture 3 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:21:59 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float
// TEXCOORD                 6   xyz         7     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d81ec855471b2c63-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.y, v2.w
mov r0.z, v3.w
mov r0.w, v4.w
add r1.xyz, -r0.yzwy, r8.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
dp3 r0.x, v5.xyzx, v5.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, v5.xyzx
sample r3.xyzw, v1.xyxx, t0.xyzw, s1
mul r3.xyz, r3.xyzx, cb0[4].xyzx
mul r0.x, r3.w, cb0[6].y
mul o1.w, cb0[6].y, cb0[6].x
sample r4.xyzw, v1.zwzz, t1.xyzw, s2
mad r4.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r4.xyxx, r4.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r4.z, r1.w
dp3 r5.x, v2.xyzx, r4.xyzx
dp3 r5.y, v3.xyzx, r4.xyzx
dp3 r5.z, v4.xyzx, r4.xyzx
dp3 r1.w, -r1.xyzx, r5.xyzx
add r1.w, r1.w, r1.w
mad r1.xyz, r5.xyzx, -r1.wwww, -r1.xyzx
sample r1.xyzw, r1.xyzx, t2.xyzw, s3
mul r1.xyz, r3.wwww, r1.xyzx
mul r1.xyz, r1.xyzx, cb0[5].xyzx
dp3 r1.w, r2.xyzx, r4.xyzx
add r1.w, -r1.w, l(1.000000)
mul r1.w, r1.w, r1.w
mad r2.x, cb0[7].y, r1.w, cb0[7].x
mad r1.w, cb0[8].y, r1.w, cb0[8].x
mul r2.yzw, r1.wwww, r3.xxyz
mul r0.x, r0.x, r2.x
eq r1.w, cb3[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb3[0].y, l(1.000000)
  mul r3.xyz, v3.wwww, cb3[2].xyzx
  mad r3.xyz, cb3[1].xyzx, v2.wwww, r3.xyzx
  mad r3.xyz, cb3[3].xyzx, v4.wwww, r3.xyzx
  add r3.xyz, r3.xyzx, cb3[4].xyzx
  movc r0.yzw, r1.wwww, r3.xxyz, r0.yyzw
  add r0.yzw, r0.yyzw, -cb3[6].xxyz
  mul r3.yzw, r0.yyzw, cb3[5].xxyz
  mul r0.y, r3.y, l(0.250000)
  mul r0.z, cb3[0].z, l(0.500000)
  mad r0.w, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.z, r0.y
  min r3.x, r0.w, r0.y
  sample r4.xyzw, r3.xzwx, t3.xyzw, s0
  add r0.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r6.xyzw, r0.yzwy, t3.xyzw, s0
  add r0.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r3.xyzw, r0.yzwy, t3.xyzw, s0
  mov r5.w, l(1.000000)
  dp4 r4.x, r4.xyzw, r5.xyzw
  dp4 r4.y, r6.xyzw, r5.xyzw
  dp4 r4.z, r3.xyzw, r5.xyzw
else
  mov r5.w, l(1.000000)
  dp4 r4.x, cb2[38].xyzw, r5.xyzw
  dp4 r4.y, cb2[39].xyzw, r5.xyzw
  dp4 r4.z, cb2[40].xyzw, r5.xyzw
endif
add r0.yzw, r4.xxyz, v7.xxyz
max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.yzw, r0.yyzw
mul r0.yzw, r0.yyzw, l(0.000000, 0.416666657, 0.416666657, 0.416666657)
exp r0.yzw, r0.yyzw
mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r3.xyz, r0.xxxx, cb0[3].xyzx
mul o1.xyz, r3.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mad o2.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mul r0.xyz, r0.yzwy, r2.yzwy
mad r0.xyz, r1.xyzx, r2.xxxx, r0.xyzx
exp o3.xyz, -r0.xyzx
mov o0.xyz, r2.yzwy
mov o0.w, l(1.000000)
mov o2.w, l(1.000000)
mov o3.w, l(1.000000)
ret
// Approximately 0 instruction slots used