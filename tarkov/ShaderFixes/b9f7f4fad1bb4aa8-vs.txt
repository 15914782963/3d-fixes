// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed b9f7f4fad1bb4aa8-vs.txt
// 3DMigoto: b9f7f4fad1bb4aa8 | Matched 60 variants of 1 shaders: Sandbox/VolumetricLight
//
//                     Unity headers extracted from Sandbox_VolumetricLight
//                     Shader "Sandbox/VolumetricLight" {
//                       SubShader 1/1 {
//                         LOD 100
//                         Tags { "RenderType"="Opaque" }
// 0000fff00000000:        Pass 2/5 {
// ffff00000000000:        Pass 4/5 {
// 0000000ffffffff: 1:     Pass 1/5 {
// 000000001010101: 2:     Pass 2/5 {
// 0000000fefefefe: 2:     Pass 3/5 {
// 000000001010101: 4:     Pass 3/5 {
//                           Tags { "RenderType"="Opaque" }
//                           ZWrite Off
//                           Program "vp" {
//                             SubProgram "d3d11" {
//                             }
//                           }
//                         }
//                       }
//                     }
//
//                  Unity 5.3 headers extracted from Sandbox_VolumetricLight:
//                    API d3d11
//                    Shader model vs_4_0
//                    undeciphered1: 201609010 11 0 0
//                    undeciphered1a: 2
// 040000001000000:   Keywords { "HEIGHT_FOG" "NOISE" }
// 010000000010000:   Keywords { "HEIGHT_FOG" }
// 000400000000100:   Keywords { "NOISE" }
// 000000002000000:   Keywords { "POINT" "HEIGHT_FOG" "NOISE" }
// 000000000020000:   Keywords { "POINT" "HEIGHT_FOG" }
// 000000000000200:   Keywords { "POINT" "NOISE" }
// 000000008000000:   Keywords { "POINT" "POINT_COOKIE" "HEIGHT_FOG" "NOISE" }
// 000000000080000:   Keywords { "POINT" "POINT_COOKIE" "HEIGHT_FOG" }
// 000000000000800:   Keywords { "POINT" "POINT_COOKIE" "NOISE" }
// 000000080000000:   Keywords { "POINT" "POINT_COOKIE" "SHADOWS_CUBE" "HEIGHT_FOG" "NOISE" }
// 000000000800000:   Keywords { "POINT" "POINT_COOKIE" "SHADOWS_CUBE" "HEIGHT_FOG" }
// 000000000008000:   Keywords { "POINT" "POINT_COOKIE" "SHADOWS_CUBE" "NOISE" }
// 000000000000080:   Keywords { "POINT" "POINT_COOKIE" "SHADOWS_CUBE" }
// 000000000000008:   Keywords { "POINT" "POINT_COOKIE" }
// 000000020000000:   Keywords { "POINT" "SHADOWS_CUBE" "HEIGHT_FOG" "NOISE" }
// 000000000200000:   Keywords { "POINT" "SHADOWS_CUBE" "HEIGHT_FOG" }
// 000000000002000:   Keywords { "POINT" "SHADOWS_CUBE" "NOISE" }
// 000000000000020:   Keywords { "POINT" "SHADOWS_CUBE" }
// 000000000000002:   Keywords { "POINT" }
// 000000004000000:   Keywords { "POINT_COOKIE" "HEIGHT_FOG" "NOISE" }
// 000000000040000:   Keywords { "POINT_COOKIE" "HEIGHT_FOG" }
// 000000000000400:   Keywords { "POINT_COOKIE" "NOISE" }
// 000000040000000:   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "HEIGHT_FOG" "NOISE" }
// 000000000400000:   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "HEIGHT_FOG" }
// 000000000004000:   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "NOISE" }
// 000000000000040:   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
// 000000000000004:   Keywords { "POINT_COOKIE" }
// 000000010000000:   Keywords { "SHADOWS_CUBE" "HEIGHT_FOG" "NOISE" }
// 000000000100000:   Keywords { "SHADOWS_CUBE" "HEIGHT_FOG" }
// 000000000001000:   Keywords { "SHADOWS_CUBE" "NOISE" }
// 000000000000010:   Keywords { "SHADOWS_CUBE" }
// 400040000000000:   Keywords { "SHADOWS_DEPTH" "HEIGHT_FOG" "NOISE" }
// 100008000000000:   Keywords { "SHADOWS_DEPTH" "HEIGHT_FOG" }
// 004001000000000:   Keywords { "SHADOWS_DEPTH" "NOISE" }
// 001000200000000:   Keywords { "SHADOWS_DEPTH" }
// 080020000000000:   Keywords { "SPOT" "HEIGHT_FOG" "NOISE" }
// 020004000000000:   Keywords { "SPOT" "HEIGHT_FOG" }
// 000800800000000:   Keywords { "SPOT" "NOISE" }
// 800080000000000:   Keywords { "SPOT" "SHADOWS_DEPTH" "HEIGHT_FOG" "NOISE" }
// 200010000000000:   Keywords { "SPOT" "SHADOWS_DEPTH" "HEIGHT_FOG" }
// 008002000000000:   Keywords { "SPOT" "SHADOWS_DEPTH" "NOISE" }
// 002000400000000:   Keywords { "SPOT" "SHADOWS_DEPTH" }
// 000200100000000:   Keywords { "SPOT" }
//                    undeciphered2: 1 0 3 0 0 0
//                    undeciphered3: 1 1 0 0
// 0000fffffffffff:   ConstBuffer "$Globals" 544
// ffff00000000000:   ConstBuffer "$Globals" 592
//                    Matrix 240 [_WorldViewProj]
//                    ConstBuffer "UnityPerCamera" 144
//                    Vector 80 [_ProjectionParams]
//                    ConstBuffer "UnityPerDraw" 160
//                    Matrix 0 [unity_ObjectToWorld]
//                    BindCB "$Globals" 0
//                    BindCB "UnityPerCamera" 1
//                    BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:17:54 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz
//
vs_4_0
dcl_constantbuffer cb0[19], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_temps 3

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r2.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb0[16].xyzw
mad r0.xyzw, cb0[15].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb0[17].xyzw, v0.zzzz, r0.xyzw
mad r0.xyzw, cb0[18].xyzw, v0.wwww, r0.xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed b9f7f4fad1bb4aa8-vs.txt
ne r2.w, r0.w, l(1.0)
if_nz r2.w
  add r2.w, r0.w, -r2.y
  mad r0.x, r2.w, r2.x, r0.x
endif

mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o1.zw, r0.zzzw
add o1.xy, r1.zzzz, r1.xwxx
mul r0.xyz, v0.yyyy, cb2[1].xyzx
mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
mad o2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
ret
// Approximately 0 instruction slots used