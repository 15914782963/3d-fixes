// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f59698f4f9b23068-ps.txt
// 3DMigoto: f59698f4f9b23068 | Matched 2 variants of 1 shaders: Sandbox/VolumetricLight
//
//       Unity headers extracted from Sandbox_VolumetricLight
//       Shader "Sandbox/VolumetricLight" {
//         SubShader 1/1 {
//           LOD 100
//           Tags { "RenderType"="Opaque" }
//           Pass 1/5 {
//             Tags { "RenderType"="Opaque" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Sandbox_VolumetricLight:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 63 3 1
//      undeciphered1a: 8
// 2:   Keywords { "POINT" "POINT_COOKIE" "SHADOWS_CUBE" "HEIGHT_FOG" }
// 1:   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "HEIGHT_FOG" }
//      undeciphered2: 1 5 4 5 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 544
//      Vector 64 [_LightPos]
//      Vector 80 [_LightColor]
//      Vector 432 [_CameraForward] 3
//      Vector 448 [_VolumetricLight]
//      Vector 464 [_MieG]
//      Vector 512 [_HeightFog]
//      ScalarInt 532 [_SampleCount]
//      Matrix 304 [_MyLightMatrix0]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 112 [_ZBufferParams]
//      ConstBuffer "UnityLighting" 752
//      Vector 16 [_LightPositionRange]
//      ConstBuffer "UnityShadows" 416
//      Vector 384 [_LightShadowData]
//      SetTexture 0 [_CameraDepthTexture] 2D 0
//      SetTexture 1 [_DitherTexture] 2D 4
//      SetTexture 2 [_LightTextureB0] 2D 1
//      SetTexture 3 [_ShadowMapTexture] CUBE 3
//      SetTexture 4 [_LightTexture0] CUBE 2
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityShadows" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:25:41 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f59698f4f9b23068-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.xy, v1.xyxx, v1.wwww
sample r0.xyzw, r0.xyxx, t0.xyzw, s0
add r0.yzw, v2.xxyz, -r9.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
sqrt r1.x, r1.x
div r0.yzw, r0.yyzw, r1.xxxx
mad r0.x, cb1[7].z, r0.x, cb1[7].w
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
dp3 r1.y, cb0[27].xyzx, r0.yzwy
div r0.x, r0.x, r1.y
min r0.x, r0.x, r1.x
round_ni r1.xy, v0.xyxx
mul r1.xy, r1.xyxx, l(0.125000, 0.125000, 0.000000, 0.000000)
ge r1.zw, r1.xxxy, -r1.xxxy
frc r1.xy, |r1.xyxx|
movc r1.xy, r1.zwzz, r1.xyxx, -r1.xyxx
add r1.xy, r1.xyxx, l(0.062500, 0.062500, 0.000000, 0.000000)
sample r1.xyzw, r1.xyxx, t1.xyzw, s4
itof r1.x, cb0[33].y
div r0.x, r0.x, r1.x
mul r1.xyz, r0.xxxx, r0.yzwy
mad r1.xyz, r1.xyzx, r1.wwww, r9.xyzx
add r2.xyz, -r1.xyzx, r9.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
sqrt r1.w, r1.w
mul r1.w, r1.w, cb0[28].y
mul r1.w, r1.w, l(0.500000)
mov_sat r2.x, cb3[24].w
mul r2.yz, r0.xxxx, cb0[28].xxyx
mov r4.xyz, r1.xyzx
mov r2.w, r1.w
mov r3.xyzw, l(0,0,0,0)
loop
  ige r4.w, r3.w, cb0[33].y
  breakc_nz r4.w
  add r5.xyz, r4.xyzx, -cb0[4].xyzx
  dp3 r4.w, r5.xyzx, r5.xyzx
  mul r5.w, r4.w, cb0[4].w
  sample r6.xyzw, r5.wwww, t2.xyzw, s1
  sqrt r5.w, r4.w
  mul r5.w, r5.w, cb2[1].w
  mul r5.w, r5.w, l(0.970000)
  sample_l r7.xyzw, r5.xyzx, t3.xyzw, s3, l(0.000000)
  lt r5.w, r7.x, r5.w
  movc r5.w, r5.w, cb3[24].x, l(1.000000)
  add_sat r5.w, r2.x, r5.w
  mul r5.w, r5.w, r6.x
  mul r6.xyz, r4.yyyy, cb0[20].xyzx
  mad r6.xyz, cb0[19].xyzx, r4.xxxx, r6.xyzx
  mad r6.xyz, cb0[21].xyzx, r4.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb0[22].xyzx
  sample_b r6.xyzw, r6.xyzx, t4.xyzw, s2, l(-8.000000)
  mul r5.w, r5.w, r6.w
  add r6.x, r4.y, cb0[32].x
  mul r6.x, -r6.x, cb0[32].y
  mul r6.x, r6.x, l(1.442695)
  exp r6.x, r6.x
  mul r6.y, r2.y, r6.x
  mad r2.w, r2.z, r6.x, r2.w
  mul r5.w, r5.w, r6.y
  mul r6.x, r2.w, l(-1.442695)
  exp r6.x, r6.x
  mul r5.w, r5.w, r6.x
  rsq r4.w, r4.w
  mul r5.xyz, r4.wwww, r5.xyzx
  dp3 r4.w, r5.xyzx, -r0.yzwy
  mad r4.w, -cb0[29].z, r4.w, cb0[29].y
  log r4.w, r4.w
  mul r4.w, r4.w, l(1.500000)
  exp r4.w, r4.w
  div r4.w, cb0[29].x, r4.w
  mul r4.w, r4.w, cb0[29].w
  mad r3.xyz, r5.wwww, r4.wwww, r3.xyzx
  mad r4.xyz, r0.yzwy, r0.xxxx, r4.xyzx
  iadd r3.w, r3.w, l(1)
endloop
mul r0.xyz, r3.xyzx, cb0[5].xyzx
max o0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used