// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0fa88292fca8908e-ps.txt
// 3DMigoto: 0fa88292fca8908e | Matched 3 variants of 1 shaders: Decal/Water Deferred Decal
//
//       Unity headers extracted from Decal_Water Deferred Decal
//       Shader "Decal/Water Deferred Decal" {
//         SubShader 1/1 {
//           Tags { "QUEUE"="Geometry+5" "RenderType"="Opaque" }
//           Pass 1/2 {
//             Name "DEFERRED"
//             Tags { "LIGHTMODE"="DEFERRED" "QUEUE"="Geometry+5" "RenderType"="Opaque" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Decal_Water Deferred Decal:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 93 5 6
//      undeciphered1a: 11
// 4:   Keywords { "Rain" }
// 2:   Keywords { "USERAIN" }
//      undeciphered2: 1 5 5 4 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 304
//      Vector 48 [_SpecColor]
//      Vector 176 [_Color]
//      Vector 192 [_EmissionColor]
//      Float 208 [_FadeStrength]
//      Float 220 [_Fresnel]
//      Float 232 [_GIIntensity]
//      Vector 240 [_CubemapColor]
//      Float 288 [_ReflectionStrength]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 752
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      ConstBuffer "UnityReflectionProbes" 128
//      Vector 0 [unity_SpecCube0_BoxMax]
//      Vector 16 [unity_SpecCube0_BoxMin]
//      Vector 32 [unity_SpecCube0_ProbePosition]
//      Vector 48 [unity_SpecCube0_HDR]
//      Vector 64 [unity_SpecCube1_BoxMax]
//      Vector 80 [unity_SpecCube1_BoxMin]
//      Vector 96 [unity_SpecCube1_ProbePosition]
//      Vector 112 [unity_SpecCube1_HDR]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_MainTex] 2D 2
//      SetTexture 1 [_Cube] CUBE 3
//      SetTexture 2 [unity_SpecCube0] CUBE 0
//      SetTexture 3 [unity_SpecCube1] CUBE -1
//      SetTexture 4 [unity_ProbeVolumeSH] 3D 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityReflectionProbes" 3
//      BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sun Jul 14 23:55:36 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// COLOR                    0   xyzw        5     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[19], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.w
dcl_input_ps linear v3.w
dcl_input_ps linear v4.w
dcl_input_ps linear v5.w
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0fa88292fca8908e-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s2
add r0.w, r0.x, v5.w
mul_sat r0.w, r0.w, cb0[13].x
mul r0.xyz, r0.xyzx, cb0[11].xyzx
mul o0.w, r0.w, cb0[11].w
mov r1.x, v2.w
mov r1.y, v3.w
mov r1.z, v4.w
add r2.xyz, -r1.xyzx, r12.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mad r1.w, -r2.y, cb0[13].w, l(1.000000)
mul r1.w, r1.w, r1.w
mul r3.xyz, r1.wwww, cb0[3].xyzx
mul o1.xyz, r0.wwww, r3.xyzx
mul r2.w, r0.w, cb0[3].w
mad r3.xyz, r2.yyyy, l(0.000000, 2.000000, 0.000000, 0.000000), -r2.xyzx
mul o3.w, r0.w, cb0[12].w
sample r3.xyzw, r3.xyzx, t1.xyzw, s3
mul r3.xyz, r1.wwww, r3.xyzx
mad r3.xyz, r3.xyzx, cb0[15].xyzx, cb0[12].xyzx
mul r3.w, r2.w, cb0[18].x
mad r4.x, -cb0[3].w, r0.w, l(1.000000)
dp3 r4.y, -r2.xzyx, l(9.999999717E-010, 9.999999717E-010, 1.000000, 0.000000)
mad r2.xyz, r4.yyyy, l(-1.999999943E-009, -2.000000, -1.999999943E-009, 0.000000), -r2.xyzx
eq r4.y, cb4[0].x, l(1.000000)
if_nz r4.y
  eq r4.y, cb4[0].y, l(1.000000)
  mul r5.xyz, v3.wwww, cb4[2].xyzx
  mad r5.xyz, cb4[1].xyzx, v2.wwww, r5.xyzx
  mad r5.xyz, cb4[3].xyzx, v4.wwww, r5.xyzx
  add r5.xyz, r5.xyzx, cb4[4].xyzx
  movc r4.yzw, r4.yyyy, r5.xxyz, r1.xxyz
  add r4.yzw, r4.yyzw, -cb4[6].xxyz
  mul r5.yzw, r4.yyzw, cb4[5].xxyz
  mul r4.y, r5.y, l(0.250000)
  mul r4.z, cb4[0].z, l(0.500000)
  mad r4.w, -cb4[0].z, l(0.500000), l(0.250000)
  max r4.y, r4.z, r4.y
  min r5.x, r4.w, r4.y
  sample r6.xyzw, r5.xzwx, t4.xyzw, s1
  add r4.yzw, r5.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r7.xyzw, r4.yzwy, t4.xyzw, s1
  add r4.yzw, r5.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r5.xyzw, r4.yzwy, t4.xyzw, s1
  dp4 r6.x, r6.xzyw, l(9.999999717E-010, 9.999999717E-010, 1.000000, 1.000000)
  dp4 r6.y, r7.xzyw, l(9.999999717E-010, 9.999999717E-010, 1.000000, 1.000000)
  dp4 r6.z, r5.xzyw, l(9.999999717E-010, 9.999999717E-010, 1.000000, 1.000000)
else
  dp4 r6.x, cb2[38].xzyw, l(9.999999717E-010, 9.999999717E-010, 1.000000, 1.000000)
  dp4 r6.y, cb2[39].xzyw, l(9.999999717E-010, 9.999999717E-010, 1.000000, 1.000000)
  dp4 r6.z, cb2[40].xzyw, l(9.999999717E-010, 9.999999717E-010, 1.000000, 1.000000)
endif
max r4.yzw, r6.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
log r4.yzw, r4.yyzw
mul r4.yzw, r4.yyzw, l(0.000000, 0.416666657, 0.416666657, 0.416666657)
exp r4.yzw, r4.yyzw
mad r4.yzw, r4.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
max r4.yzw, r4.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r5.x, l(0.000000), cb3[2].w
if_nz r5.x
  dp3 r5.x, r2.xyzx, r2.xyzx
  rsq r5.x, r5.x
  mul r5.xyz, r2.xyzx, r5.xxxx
  add r6.xyz, -r1.xyzx, cb3[0].xyzx
  div r6.xyz, r6.xyzx, r5.xyzx
  add r7.xyz, -r1.xyzx, cb3[1].xyzx
  div r7.xyz, r7.xyzx, r5.xyzx
  lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
  movc r6.xyz, r8.xyzx, r6.xyzx, r7.xyzx
  min r5.w, r6.y, r6.x
  min r5.w, r6.z, r5.w
  add r6.xyz, r1.xyzx, -cb3[2].xyzx
  mad r5.xyz, r5.xyzx, r5.wwww, r6.xyzx
else
  mov r5.xyz, r2.xyzx
endif
mad r5.w, -r4.x, l(0.700000), l(1.700000)
mul r4.x, r4.x, r5.w
mul r4.x, r4.x, l(6.000000)
sample_l r5.xyzw, r5.xyzx, t2.xyzw, s0, r4.x
add r5.w, r5.w, l(-1.000000)
mad r5.w, cb3[3].w, r5.w, l(1.000000)
mul r5.w, r5.w, cb3[3].x
mul r6.xyz, r5.xyzx, r5.wwww
lt r6.w, cb3[1].w, l(0.999990)
if_nz r6.w
  lt r6.w, l(0.000000), cb3[6].w
  if_nz r6.w
    dp3 r6.w, r2.xyzx, r2.xyzx
    rsq r6.w, r6.w
    mul r7.xyz, r2.xyzx, r6.wwww
    add r8.xyz, -r1.xyzx, cb3[4].xyzx
    div r8.xyz, r8.xyzx, r7.xyzx
    add r9.xyz, -r1.xyzx, cb3[5].xyzx
    div r9.xyz, r9.xyzx, r7.xyzx
    lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
    movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
    min r6.w, r8.y, r8.x
    min r6.w, r8.z, r6.w
    add r1.xyz, r1.xyzx, -cb3[6].xyzx
    mad r2.xyz, r7.xyzx, r6.wwww, r1.xyzx
  endif
  sample_l r7.xyzw, r2.xyzx, t3.xyzw, s0, r4.x
  add r1.x, r7.w, l(-1.000000)
  mad r1.x, cb3[7].w, r1.x, l(1.000000)
  mul r1.x, r1.x, cb3[7].x
  mul r1.xyz, r7.xyzx, r1.xxxx
  mad r2.xyz, r5.wwww, r5.xyzx, -r1.xyzx
  mad r6.xyz, cb3[1].wwww, r2.xyzx, r1.xyzx
endif
mul r1.xyz, r3.wwww, r6.xyzx
mad r1.xyz, r0.xyzx, r4.yzwy, r1.xyzx
mul r1.xyz, r1.wwww, r1.xyzx
mad r1.xyz, r1.xyzx, cb0[14].zzzz, r3.xyzx
exp o3.xyz, -r1.xyzx
mov o0.xyz, r0.xyzx
mov o1.w, r2.w
mov o2.xyz, l(0.500000,1.000000,0.500000,0)
mov o2.w, r0.w
ret
// Approximately 0 instruction slots used