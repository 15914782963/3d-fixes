// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3bb197cde0e50b1e-ps.txt
// 3DMigoto: 3bb197cde0e50b1e |    Unity headers extracted from Legacy Shaders_Reflective_Bumped Diffuse
//    Shader "Legacy Shaders/Reflective/Bumped Diffuse" {
//      Fallback "Legacy Shaders/Reflective/VertexLit"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "RenderType"="Opaque" }
//        Pass 6/6 {
//          Name "META"
//          Tags { "LIGHTMODE"="META" "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Legacy Shaders_Reflective_Bumped Diffuse:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 33 3 0
//   undeciphered1a: 3
//   undeciphered2: 1 3 3 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 144
//   Vector 64 [_Color]
//   Vector 80 [_ReflectColor]
//   Float 96 [unity_OneOverOutputBoost]
//   Float 100 [unity_MaxOutputValue]
//   Float 104 [unity_UseLinearSpace]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityMetaPass" 48
//   VectorBool 16 [unity_MetaFragmentControl] 4
//   SetTexture 0 [_MainTex] 2D 0
//   SetTexture 1 [_BumpMap] 2D 1
//   SetTexture 2 [_Cube] CUBE 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityMetaPass" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:01:11 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 5
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3bb197cde0e50b1e-ps.txt

mul r3.w, -r3.x, r3.y
mad r4.xyz, -r3.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r0.xyz, -r0.xyzx, r4.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
sample r1.xyzw, v1.zwzz, t1.xyzw, s1
mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r1.xyxx, r1.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r1.z, r0.w
dp3 r2.x, v2.xyzx, r1.xyzx
dp3 r2.y, v3.xyzx, r1.xyzx
dp3 r2.z, v4.xyzx, r1.xyzx
dp3 r0.w, -r0.xyzx, r2.xyzx
add r0.w, r0.w, r0.w
mad r0.xyz, r2.xyzx, -r0.wwww, -r0.xyzx
sample r0.xyzw, r0.xyzx, t2.xyzw, s2
sample r1.xyzw, v1.xyxx, t0.xyzw, s0
mul r0.xyz, r0.xyzx, r1.wwww
mul r1.xyz, r1.xyzx, cb0[4].xyzx
log r1.xyz, r1.xyzx
mul r0.xyz, r0.xyzx, cb0[5].xyzx
mad r2.xyz, r0.xyzx, l(0.305306017, 0.305306017, 0.305306017, 0.000000), l(0.682171106, 0.682171106, 0.682171106, 0.000000)
mad r2.xyz, r0.xyzx, r2.xyzx, l(0.0125228781, 0.0125228781, 0.0125228781, 0.000000)
mul r2.xyz, r0.xyzx, r2.xyzx
ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[6].z
movc r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
mul r0.xyz, r0.xyzx, l(0.0103092780, 0.0103092780, 0.0103092780, 0.000000)
max r0.w, r0.y, r0.x
max r1.w, r0.z, l(0.020000)
max r0.w, r0.w, r1.w
mul r0.w, r0.w, l(255.000000)
round_pi r0.w, r0.w
mul r2.w, r0.w, l(0.00392156886)
div r2.xyz, r0.xyzx, r2.wwww
mov_sat r0.x, cb0[6].x
mul r0.xyz, r1.xyzx, r0.xxxx
exp r0.xyz, r0.xyzx
min r0.xyz, r0.xyzx, cb0[6].yyyy
mov r0.w, l(1.000000)
movc r0.xyzw, cb2[1].xxxx, r0.xyzw, l(0,0,0,0)
movc o0.xyzw, cb2[1].yyyy, r2.xyzw, r0.xyzw
ret
// Approximately 0 instruction slots used