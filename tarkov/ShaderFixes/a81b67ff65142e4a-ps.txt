// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a81b67ff65142e4a-ps.txt
// 3DMigoto: a81b67ff65142e4a |    Unity headers extracted from Custom_OpticGlass
//    Shader "Custom/OpticGlass" {
//      Fallback "Reflective/VertexLit"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Overlay" "RenderType"="Transparent" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Overlay" "RenderType"="Transparent" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_OpticGlass:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 60 4 2
//   undeciphered1a: 4
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_WEATHER_DEFINED" }
//   undeciphered2: 1 4 6 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 192
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Vector 96 [_ReflectColor]
//   Float 112 [_Shininess]
//   Float 116 [_SpecPower]
//   Float 120 [_FresPow]
//   Float 124 [_FresAdd]
//   Float 132 [_CubemapNightMultiplier]
//   Float 136 [_CubemapDayMultiplier]
//   Float 140 [_SwitchToSight]
//   Float 144 [_SwitchToSightMultiplier]
//   Vector 148 [_SunDirection] 3
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 384
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_SpecTex] 2D 2
//   SetTexture 1 [_Cube] CUBE 3
//   SetTexture 2 [_ShadowMapTexture] 2D 1
//   SetTexture 3 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:15:25 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 4     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 5   xyz         5     NONE   float
// TEXCOORD                 6   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v6.xyw
dcl_output o0.xyzw
dcl_temps 6
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a81b67ff65142e4a-ps.txt

mul r4.w, -r4.x, r4.y
mad r5.xyz, -r4.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v4.xyzx, r5.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
dp3 r1.x, r1.xyzx, v3.xyzx
add r1.x, -r1.x, l(1.000000)
log r1.x, r1.x
mul r1.x, r1.x, cb0[7].z
exp r1.x, r1.x
mad r1.x, cb0[7].w, v1.z, r1.x
sample r2.xyzw, v1.xyxx, t0.xyzw, s2
mul r1.x, r1.x, r2.x
mul r1.y, cb0[7].y, cb0[7].x
mul r1.z, r1.x, l(3.000000)
mad r1.w, cb0[9].z, l(0.500000), l(0.500000)
add r2.x, -cb0[8].z, cb0[8].y
mad_sat r1.w, r1.w, r2.x, cb0[8].z
add r2.x, -cb0[8].w, l(1.000000)
add r2.y, cb0[9].x, l(-1.000000)
mad r2.x, r2.x, r2.y, l(1.000000)
mul r1.w, r1.w, r2.x
mul r1.z, r1.z, r2.x
sample r2.xyzw, v2.xyzx, t1.xyzw, s3
mul r2.xyz, r1.wwww, r2.xyzx
mul r2.xyz, r2.xyzx, cb0[6].xyzx
mul r2.xyz, r1.xxxx, r2.xyzx
mov r3.x, cb4[9].z
mov r3.y, cb4[10].z
mov r3.z, cb4[11].z
dp3 r1.x, r0.xyzx, r3.xyzx
add r3.xyz, v4.xyzx, -cb3[25].xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
sqrt r1.w, r1.w
add r1.w, -r1.x, r1.w
mad r1.x, cb3[25].w, r1.w, r1.x
mad_sat r1.x, r1.x, cb3[24].z, cb3[24].w
eq r1.w, cb5[0].x, l(1.000000)
if_nz r1.w
  eq r2.w, cb5[0].y, l(1.000000)
  mul r3.xyz, v4.yyyy, cb5[2].xyzx
  mad r3.xyz, cb5[1].xyzx, v4.xxxx, r3.xyzx
  mad r3.xyz, cb5[3].xyzx, v4.zzzz, r3.xyzx
  add r3.xyz, r3.xyzx, cb5[4].xyzx
  movc r3.xyz, r2.wwww, r3.xyzx, v4.xyzx
  add r3.xyz, r3.xyzx, -cb5[6].xyzx
  mul r3.yzw, r3.xxyz, cb5[5].xxyz
  mad r2.w, r3.y, l(0.250000), l(0.750000)
  mad r3.y, cb5[0].z, l(0.500000), l(0.750000)
  max r3.x, r2.w, r3.y
  sample r3.xyzw, r3.xzwx, t3.xyzw, s0
else
  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r3.xyzw, cb2[45].xyzw
div r3.xy, v6.xyxx, v6.wwww
sample r3.xyzw, r3.xyxx, t2.xyzw, s1
add_sat r1.x, r1.x, r3.x
min r2.w, r1.x, r2.w
movc r1.x, r1.w, r2.w, r1.x
mul r3.xyz, r1.xxxx, cb0[2].xyzx
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.x, v3.xyzx, r0.xyzx
max r0.x, r0.x, l(0.000000)
mul r0.y, r1.y, l(128.000000)
log r0.x, r0.x
mul r0.x, r0.x, r0.y
exp r0.x, r0.x
mul r0.x, r1.z, r0.x
mul r0.yzw, r3.xxyz, cb0[3].xxyz
mad o0.xyz, r0.yzwy, r0.xxxx, r2.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used