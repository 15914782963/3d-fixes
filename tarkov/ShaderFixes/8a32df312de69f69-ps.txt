// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8a32df312de69f69-ps.txt
// 3DMigoto: 8a32df312de69f69 |    Unity headers extracted from p0_SoftCutoutBumpedFresnelDeferred
//    Shader "p0/SoftCutoutBumpedFresnelDeferred" {
//      Fallback "p0/SoftCutoutBumpedFresnel"
//      SubShader 1/1 {
//        Pass 2/2 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="DEFERRED" "QUEUE"="Geometry+5" "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from p0_SoftCutoutBumpedFresnelDeferred:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 101 6 6
//   undeciphered1a: 12
//   Keywords { "UNITY_HDR_ON" }
//   undeciphered2: 1 6 5 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 160
//   Float 64 [_AddAlpha]
//   Float 68 [_Cutoff]
//   Vector 80 [_Color]
//   Vector 96 [_DefVals] 3
//   Float 108 [_Smoothness]
//   Float 112 [_Specular]
//   Float 144 [_ReflectionStrength]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_BumpMap] 2D 4
//   SetTexture 2 [_SpecularMap] 2D 3
//   SetTexture 3 [unity_SpecCube0] CUBE 0
//   SetTexture 4 [unity_SpecCube1] CUBE -1
//   SetTexture 5 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:11:38 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xy          4     NONE   float   xy
// COLOR                    0   xyzw        5     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 14
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8a32df312de69f69-ps.txt

mul r12.w, -r12.x, r12.y
mad r13.xyz, -r12.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v4.xyxx, t0.xyzw, s2
mul r0.xyz, r0.xyzx, cb0[5].xyzx
mad r0.w, r0.w, cb0[5].w, cb0[4].x
add r0.w, r0.w, -cb0[4].y
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
sample r1.xyzw, v4.xyxx, t1.xyzw, s4
mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r1.xyxx, r1.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r1.z, r0.w
dp3 r2.x, v1.xyzx, r1.xyzx
dp3 r2.y, v2.xyzx, r1.xyzx
dp3 r2.z, v3.xyzx, r1.xyzx
mad o2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov r1.x, v1.w
mov r1.y, v2.w
mov r1.z, v3.w
add r3.xyz, -r1.xyzx, r13.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r0.w, r3.xyzx, r2.xyzx
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, r0.w
mad r1.w, cb0[6].y, r0.w, cb0[6].x
mul r0.xyz, r0.xyzx, r1.wwww
sample r4.xyzw, v4.xyxx, t2.xyzw, s3
mul r4.xyz, r4.xyzx, cb0[7].xxxx
mul r4.xyz, r0.wwww, r4.xyzx
add r1.w, -cb0[6].w, l(1.000000)
mul r5.xyz, r4.xyzx, cb0[9].xxxx
add r1.w, -r1.w, l(1.000000)
dp3 r3.w, -r3.xyzx, r2.xyzx
add r3.w, r3.w, r3.w
mad r3.xyz, r2.xyzx, -r3.wwww, -r3.xyzx
eq r3.w, cb4[0].x, l(1.000000)
if_nz r3.w
  eq r3.w, cb4[0].y, l(1.000000)
  mul r6.xyz, v2.wwww, cb4[2].xyzx
  mad r6.xyz, cb4[1].xyzx, v1.wwww, r6.xyzx
  mad r6.xyz, cb4[3].xyzx, v3.wwww, r6.xyzx
  add r6.xyz, r6.xyzx, cb4[4].xyzx
  movc r6.xyz, r3.wwww, r6.xyzx, r1.xyzx
  add r6.xyz, r6.xyzx, -cb4[6].xyzx
  mul r6.yzw, r6.xxyz, cb4[5].xxyz
  mul r3.w, r6.y, l(0.250000)
  mul r4.w, cb4[0].z, l(0.500000)
  mad r5.w, -cb4[0].z, l(0.500000), l(0.250000)
  max r3.w, r3.w, r4.w
  min r6.x, r5.w, r3.w
  sample r7.xyzw, r6.xzwx, t5.xyzw, s1
  add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r8.xyzw, r8.xyzx, t5.xyzw, s1
  add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r6.xyzw, r6.xyzx, t5.xyzw, s1
  mov r2.w, l(1.000000)
  dp4 r7.x, r7.xyzw, r2.xyzw
  dp4 r7.y, r8.xyzw, r2.xyzw
  dp4 r7.z, r6.xyzw, r2.xyzw
else
  mov r2.w, l(1.000000)
  dp4 r7.x, cb2[38].xyzw, r2.xyzw
  dp4 r7.y, cb2[39].xyzw, r2.xyzw
  dp4 r7.z, cb2[40].xyzw, r2.xyzw
endif
max r2.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r2.xyz, r2.xyzx
mul r2.xyz, r2.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r2.xyz, r2.xyzx
mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.w, l(0.000000), cb3[2].w
if_nz r2.w
  dp3 r2.w, r3.xyzx, r3.xyzx
  rsq r2.w, r2.w
  mul r6.xyz, r2.wwww, r3.xyzx
  add r7.xyz, -r1.xyzx, cb3[0].xyzx
  div r7.xyz, r7.xyzx, r6.xyzx
  add r8.xyz, -r1.xyzx, cb3[1].xyzx
  div r8.xyz, r8.xyzx, r6.xyzx
  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  min r2.w, r7.y, r7.x
  min r2.w, r7.z, r2.w
  add r7.xyz, r1.xyzx, -cb3[2].xyzx
  mad r6.xyz, r6.xyzx, r2.wwww, r7.xyzx
else
  mov r6.xyz, r3.xyzx
endif
mad r2.w, -r1.w, l(0.700000), l(1.700000)
mul r1.w, r1.w, r2.w
mul r1.w, r1.w, l(6.000000)
sample_l r6.xyzw, r6.xyzx, t3.xyzw, s0, r1.w
add r2.w, r6.w, l(-1.000000)
mad r2.w, cb3[3].w, r2.w, l(1.000000)
mul r2.w, r2.w, cb3[3].x
mul r7.xyz, r6.xyzx, r2.wwww
lt r3.w, cb3[1].w, l(0.999990)
if_nz r3.w
  lt r3.w, l(0.000000), cb3[6].w
  if_nz r3.w
    dp3 r3.w, r3.xyzx, r3.xyzx
    rsq r3.w, r3.w
    mul r8.xyz, r3.wwww, r3.xyzx
    add r9.xyz, -r1.xyzx, cb3[4].xyzx
    div r9.xyz, r9.xyzx, r8.xyzx
    add r10.xyz, -r1.xyzx, cb3[5].xyzx
    div r10.xyz, r10.xyzx, r8.xyzx
    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
    movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
    min r3.w, r9.y, r9.x
    min r3.w, r9.z, r3.w
    add r1.xyz, r1.xyzx, -cb3[6].xyzx
    mad r3.xyz, r8.xyzx, r3.wwww, r1.xyzx
  endif
  sample_l r1.xyzw, r3.xyzx, t4.xyzw, s0, r1.w
  add r1.w, r1.w, l(-1.000000)
  mad r1.w, cb3[7].w, r1.w, l(1.000000)
  mul r1.w, r1.w, cb3[7].x
  mul r1.xyz, r1.xyzx, r1.wwww
  mad r3.xyz, r2.wwww, r6.xyzx, -r1.xyzx
  mad r7.xyz, cb3[1].wwww, r3.xyzx, r1.xyzx
endif
mul r1.xyz, r5.xyzx, r7.xyzx
mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
mul o3.xyz, r0.wwww, r1.xyzx
mov o0.xyz, r0.xyzx
mov o0.w, l(1.000000)
add o1.w, -cb0[6].w, l(1.000000)
mov o1.xyz, r4.xyzx
mov o2.w, l(1.000000)
mov o3.w, l(1.000000)
ret
// Approximately 0 instruction slots used