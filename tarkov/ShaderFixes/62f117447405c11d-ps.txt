// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 62f117447405c11d-ps.txt
// 3DMigoto: 62f117447405c11d |    Unity headers extracted from Sandbox_VolumetricLight
//    Shader "Sandbox/VolumetricLight" {
//      SubShader 1/1 {
//        LOD 100
//        Tags { "RenderType"="Opaque" }
//        Pass 3/5 {
//          Tags { "RenderType"="Opaque" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Sandbox_VolumetricLight:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 57 3 1
//   undeciphered1a: 7
//   Keywords { "POINT" }
//   undeciphered2: 1 3 2 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 544
//   Vector 64 [_LightPos]
//   Vector 80 [_LightColor]
//   Vector 432 [_CameraForward] 3
//   Vector 448 [_VolumetricLight]
//   Vector 464 [_MieG]
//   ScalarInt 532 [_SampleCount]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_DitherTexture] 2D 2
//   SetTexture 2 [_LightTextureB0] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:06:28 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 62f117447405c11d-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.xy, v1.xyxx, v1.wwww
sample r0.xyzw, r0.xyxx, t0.xyzw, s0
add r0.yzw, v2.xxyz, -r8.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
sqrt r1.x, r1.x
div r0.yzw, r0.yyzw, r1.xxxx
add r1.xyz, -cb0[4].xyzx, r8.xyzx
dp3 r1.w, r0.yzwy, r1.xyzx
dp3 r1.x, r1.xyzx, r1.xyzx
mad r1.x, -cb0[28].z, cb0[28].z, r1.x
mad r1.x, r1.w, r1.w, -r1.x
sqrt r1.x, r1.x
add r1.y, -r1.x, -r1.w
add r1.x, r1.x, -r1.w
mad r0.x, cb1[7].z, r0.x, cb1[7].w
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
dp3 r1.z, cb0[27].xyzx, r0.yzwy
div r0.x, r0.x, r1.z
min r0.x, r0.x, r1.x
mad r1.xzw, r0.yyzw, r1.yyyy, r8.xxyz
add r0.x, -r1.y, r0.x
round_ni r2.xy, v0.xyxx
mul r2.xy, r2.xyxx, l(0.125000, 0.125000, 0.000000, 0.000000)
ge r2.zw, r2.xxxy, -r2.xxxy
frc r2.xy, |r2.xyxx|
movc r2.xy, r2.zwzz, r2.xyxx, -r2.xyxx
add r2.xy, r2.xyxx, l(0.062500, 0.062500, 0.000000, 0.000000)
sample r2.xyzw, r2.xyxx, t1.xyzw, s2
itof r1.y, cb0[33].y
div r0.x, r0.x, r1.y
mul r2.xyz, r0.xxxx, r0.yzwy
mad r1.xyz, r2.xyzx, r2.wwww, r1.xzwx
add r2.xyz, -r1.xyzx, r8.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
sqrt r1.w, r1.w
mul r1.w, r1.w, cb0[28].y
mul r1.w, r1.w, l(0.500000)
mul r2.x, r0.x, cb0[28].x
mov r2.yzw, r1.xxyz
mov r3.xyz, l(0,0,0,0)
mov r3.w, r1.w
mov r4.x, l(0)
loop
  ige r4.y, r4.x, cb0[33].y
  breakc_nz r4.y
  add r4.yzw, r2.yyzw, -cb0[4].xxyz
  dp3 r5.x, r4.yzwy, r4.yzwy
  mul r5.y, r5.x, cb0[4].w
  sample r6.xyzw, r5.yyyy, t2.xyzw, s1
  mad r3.w, cb0[28].y, r0.x, r3.w
  mul r5.y, r2.x, r6.x
  mul r5.z, r3.w, l(-1.442695)
  exp r5.z, r5.z
  mul r5.y, r5.z, r5.y
  rsq r5.x, r5.x
  mul r4.yzw, r4.yyzw, r5.xxxx
  dp3 r4.y, r4.yzwy, -r0.yzwy
  mad r4.y, -cb0[29].z, r4.y, cb0[29].y
  log r4.y, r4.y
  mul r4.y, r4.y, l(1.500000)
  exp r4.y, r4.y
  div r4.y, cb0[29].x, r4.y
  mul r4.y, r4.y, cb0[29].w
  mad r3.xyz, r5.yyyy, r4.yyyy, r3.xyzx
  mad r2.yzw, r0.yyzw, r0.xxxx, r2.yyzw
  iadd r4.x, r4.x, l(1)
endloop
mul r0.xyz, r3.xyzx, cb0[5].xyzx
max o0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used