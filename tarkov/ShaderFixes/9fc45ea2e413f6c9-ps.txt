// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9fc45ea2e413f6c9-ps.txt
// 3DMigoto: 9fc45ea2e413f6c9 | Matched 9 variants of 1 shaders: MK4/Rock
//
//         Unity headers extracted from MK4_Rock
//         Shader "MK4/Rock" {
//           CustomEditor "ShaderForgeMaterialInspector"
//           Fallback "Diffuse"
//           SubShader 1/1 {
//             Tags { "RenderType"="Opaque" }
//             Pass 3/4 {
//               Name "FORWARD_DELTA"
//               Tags { "LIGHTMODE"="FORWARDADD" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//               Program "fp" {
//                 SubProgram "d3d11" {
//                 }
//               }
//             }
//           }
//         }
//
//      Unity 5.3 headers extracted from MK4_Rock:
//        API d3d11
//        Shader model ps_4_0
//        undeciphered1: 201609010 169 8 0
//        undeciphered1a: 8
// 010:   Keywords { "SPOT" "DIRLIGHTMAP_COMBINED" "FOG_EXP" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 020:   Keywords { "SPOT" "DIRLIGHTMAP_COMBINED" "FOG_EXP2" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 008:   Keywords { "SPOT" "DIRLIGHTMAP_COMBINED" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 040:   Keywords { "SPOT" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 080:   Keywords { "SPOT" "FOG_EXP" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 002:   Keywords { "SPOT" "FOG_EXP" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 100:   Keywords { "SPOT" "FOG_EXP2" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 004:   Keywords { "SPOT" "FOG_EXP2" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 001:   Keywords { "SPOT" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
//        undeciphered2: 1 8 3 8 0 0
//        undeciphered3: 0 0
//        ConstBuffer "$Globals" 320
//        Vector 96 [_LightColor0]
//        Vector 128 [_Color]
//        Float 144 [_Metallic]
//        Float 148 [_Gloss]
//        Vector 160 [_Aldebo_ST]
//        Vector 176 [_MaskRGBA_ST]
//        Vector 192 [_Normalmap_ST]
//        Vector 208 [_MaskBump_ST]
//        Vector 224 [_Detail_ST]
//        Vector 240 [_DetailBump_ST]
//        Float 256 [_Detailscale]
//        Vector 272 [_MaskColor]
//        Float 288 [_DetailBumpInt]
//        Float 292 [_DetailDiffInt]
//        Float 296 [_Maskscale]
//        Float 300 [_MaskPower]
//        Float 304 [_MaskBumpInt]
//        Float 308 [_DetailBlendDodge]
//        Float 312 [_SmoothBlend]
//        Float 316 [_NormalmapInt]
//        ConstBuffer "UnityPerCamera" 144
//        Vector 64 [_WorldSpaceCameraPos] 3
//        ConstBuffer "UnityLighting" 752
//        Vector 0 [_WorldSpaceLightPos0]
//        SetTexture 0 [_Normalmap] 2D 4
//        SetTexture 1 [_DetailBump] 2D 7
//        SetTexture 2 [_MaskBump] 2D 5
//        SetTexture 3 [_LightTexture0] 2D 0
//        SetTexture 4 [_LightTextureB0] 2D 1
//        SetTexture 5 [_Detail] 2D 6
//        SetTexture 6 [_Aldebo] 2D 2
//        SetTexture 7 [_MaskRGBA] 2D 3
//        BindCB "$Globals" 0
//        BindCB "UnityPerCamera" 1
//        BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:14:20 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float
// TEXCOORD                 2   xy          2     NONE   float
// TEXCOORD                 3   xyzw        3     NONE   float   xyz
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// TEXCOORD                 5   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyz         6     NONE   float   xyz
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[20], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyzw
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9fc45ea2e413f6c9-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

mul r0.xy, v1.xyxx, cb0[18].zzzz
mad r0.zw, r0.xxxy, cb0[13].xxxy, cb0[13].zzzw
mad r0.xy, r0.xyxx, cb0[11].xyxx, cb0[11].zwzz
sample r1.xyzw, r0.xyxx, t7.xyzw, s3
sample r0.xyzw, r0.zwzz, t2.xyzw, s5
mad r0.xz, r0.wwyw, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
add r2.xy, r0.wyww, r0.wyww
dp2 r0.x, r0.xzxx, r0.xzxx
min r0.x, r0.x, l(1.000000)
add r0.x, -r0.x, l(1.000000)
sqrt r2.z, r0.x
add r0.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r0.xyz, cb0[19].xxxx, r0.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mul r2.xyz, r0.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000)
mad r3.xy, v1.xyxx, cb0[12].xyxx, cb0[12].zwzz
sample r3.xyzw, r3.xyxx, t0.xyzw, s4
mad r3.xz, r3.wwyw, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
add r4.xy, r3.wyww, r3.wyww
dp2 r0.w, r3.xzxx, r3.xzxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r4.z, r0.w
add r3.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r3.xyz, cb0[19].wwww, r3.xyzx, l(0.000000, 0.000000, 2.000000, 0.000000)
dp3 r0.w, r3.xyzx, r2.xyzx
mul r2.xyz, r0.wwww, r3.xyzx
div r2.xyz, r2.xyzx, r3.zzzz
mad r0.xyz, -r0.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000), r2.xyzx
mul r2.xy, v1.xyxx, cb0[16].xxxx
mad r2.zw, r2.xxxy, cb0[15].xxxy, cb0[15].zzzw
mad r2.xy, r2.xyxx, cb0[14].xyxx, cb0[14].zwzz
sample r4.xyzw, r2.xyxx, t5.xyzw, s6
add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r4.xyz, cb0[18].yyyy, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
sample r2.xyzw, r2.zwzz, t1.xyzw, s7
mad r2.xz, r2.wwyw, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
add r5.xy, r2.wyww, r2.wyww
dp2 r0.w, r2.xzxx, r2.xzxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r5.z, r0.w
add r2.xyz, r5.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r2.xyz, cb0[18].xxxx, r2.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
mul r5.xyz, r2.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000)
dp3 r0.w, r3.xyzx, r5.xyzx
mul r3.xyw, r0.wwww, r3.xyxz
div r3.xyz, r3.xywx, r3.zzzz
mad r2.xyz, -r2.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000), r3.xyzx
add r0.xyz, r0.xyzx, -r2.xyzx
dp3 r0.w, v4.xyzx, v4.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, v4.xyzx
mov_sat r0.w, r3.y
round_ne r0.w, r0.w
mad r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
mul r2.xyz, r0.yyyy, v6.xyzx
mad r0.xyw, r0.xxxx, v5.xyxz, r2.xyxz
mad r0.xyz, r0.zzzz, r3.xyzx, r0.xywx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mov_sat r0.w, r0.y
mul r2.x, r0.w, cb0[18].w
round_ne r2.x, r2.x
mad r0.w, cb0[18].w, r0.w, -r2.x
mad r0.w, cb0[19].z, r0.w, r2.x
mul r0.w, r0.w, r1.w
lt r2.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
mad r3.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
sample r3.xyzw, r3.xyxx, t6.xyzw, s2
add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
div r5.xyz, r5.xyzx, r4.xyzx
add r5.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r6.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r3.xyzx, r4.xyzx
add r4.xyz, r4.xyzx, r4.xyzx
add r7.xyz, r6.xyzx, r6.xyzx
div r7.xyz, r3.xyzx, r7.xyzx
movc_sat r2.xyz, r2.xyzx, r7.xyzx, r5.xyzx
add r5.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
lt r3.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
mad r5.xyz, -r5.xyzx, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
movc_sat r3.xyz, r3.xyzx, r5.xyzx, r4.xyzx
add r2.xyz, r2.xyzx, -r3.xyzx
mad r2.xyz, cb0[19].yyyy, r2.xyzx, r3.xyzx
mad r1.xyz, r1.xyzx, cb0[17].xyzx, -r2.xyzx
mad r1.xyz, r0.wwww, r1.xyzx, r2.xyzx
mul r2.xyz, r1.xyzx, cb0[8].xyzx
mad r1.xyz, r1.xyzx, cb0[8].xyzx, l(-0.220916301, -0.220916301, -0.220916301, 0.000000)
mad r1.xyz, cb0[9].xxxx, r1.xyzx, l(0.220916301, 0.220916301, 0.220916301, 0.000000)
mad r0.w, -cb0[9].x, l(0.779083729), l(0.779083729)
mul r2.xyz, r0.wwww, r2.xyzx
mad r3.xyz, cb2[0].wwww, -v3.xyzx, cb2[0].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r0.w, r0.xyzx, r3.xyzx
max r0.w, r0.w, l(0.000000)
add r4.xyz, -v3.xyzx, r9.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, r4.xyzx
mad r4.xyz, r4.xyzx, r1.wwww, r3.xyzx
dp3 r1.w, r0.xyzx, r5.xyzx
max r1.w, r1.w, l(0.000000)
add r2.w, -cb0[9].y, l(1.000000)
mul r3.w, r2.w, l(0.797884583)
mad r4.w, -r2.w, l(0.797884583), l(1.000000)
mad r5.x, r1.w, r4.w, r3.w
add r1.w, -r1.w, l(1.000010)
mad r3.w, r0.w, r4.w, r3.w
mad r3.w, r3.w, r5.x, l(0.000010)
div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
mul r3.w, r3.w, l(0.250000)
mul r3.w, r0.w, r3.w
dp3 r4.w, r4.xyzx, r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, r4.xyzx
dp3 r0.x, r0.xyzx, r4.xyzx
dp3 r0.y, r3.xyzx, r4.xyzx
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.x, r0.x
mul r0.z, r2.w, r2.w
mul r0.z, r0.z, r0.z
max r0.z, r0.z, l(0.000100)
div r0.z, l(2.000000), r0.z
add r0.z, r0.z, l(-2.000000)
max r0.z, r0.z, l(0.000100)
mul r3.x, r0.x, r0.z
add r0.z, r0.z, l(2.000000)
mul r0.z, r0.z, l(0.159154937)
exp r3.x, r3.x
mul r0.z, r0.z, r3.x
mul r0.z, r0.z, r3.w
mul r0.z, r0.z, l(0.616850257)
max r0.z, r0.z, l(0.000000)
mad r3.x, cb0[9].y, l(10.000000), l(1.000000)
exp r3.x, r3.x
mul r0.x, r0.x, r3.x
exp r0.x, r0.x
div r3.xy, v7.xyxx, v7.wwww
add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample r3.xyzw, r3.xyxx, t3.xyzw, s0
lt r3.x, l(0.000000), v7.z
and r3.x, r3.x, l(0x3f800000)
mul r3.x, r3.w, r3.x
dp3 r3.y, v7.xyzx, v7.xyzx
sample r4.xyzw, r3.yyyy, t4.xyzw, s1
mul r3.x, r3.x, r4.x
mul r3.xyz, r3.xxxx, cb0[6].xyzx
mul r4.xyz, r0.xxxx, r3.xyzx
mul r4.xyz, r0.zzzz, r4.xyzx
mul r4.xyz, r4.xyzx, cb0[6].xyzx
add r5.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.x, -r0.y, l(1.000000)
mul r0.z, r0.x, r0.x
mul r0.z, r0.z, r0.z
mul r0.x, r0.x, r0.z
mad r1.xyz, r5.xyzx, r0.xxxx, r1.xyzx
mul r1.xyz, r1.xyzx, r4.xyzx
add r0.x, r0.y, r0.y
mul r0.x, r0.y, r0.x
mad r0.x, r0.x, r2.w, l(-0.500000)
mul r0.y, r1.w, r1.w
mul r0.y, r0.y, r0.y
mul r0.y, r0.y, r1.w
mad r0.y, r0.x, r0.y, l(1.000000)
add r0.z, -r0.w, l(1.000010)
mul r1.w, r0.z, r0.z
mul r1.w, r1.w, r1.w
mul r0.z, r0.z, r1.w
mad r0.x, r0.x, r0.z, l(1.000000)
mul r0.x, r0.y, r0.x
mul r0.x, r0.w, r0.x
mul r0.xyz, r3.xyzx, r0.xxxx
mad o0.xyz, r0.xyzx, r2.xyzx, r1.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used