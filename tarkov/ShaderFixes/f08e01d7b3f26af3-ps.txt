// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f08e01d7b3f26af3-ps.txt
// 3DMigoto: f08e01d7b3f26af3 |    Unity headers extracted from EFT_CollimatorGlass
//    Shader "EFT/CollimatorGlass" {
//      Fallback "Reflective/VertexLit"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Overlay+10" "RenderType"="Transparent" }
//        Pass 4/4 {
//          Name "PREPASS"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="PREPASSFINAL" "QUEUE"="Overlay+10" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from EFT_CollimatorGlass:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 60 2 0
//   undeciphered1a: 4
//   Keywords { "FOG_EXP" }
//   undeciphered2: 1 3 3 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 256
//   Vector 48 [_SpecColor]
//   Float 176 [_ReflectionBottomShade]
//   Vector 208 [_ReflectColor]
//   Float 224 [_Specular]
//   Float 228 [_FresPow]
//   Float 232 [_FresAdd]
//   Float 236 [_GlobalReflectionStrength]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_Cube] CUBE 1
//   SetTexture 1 [_LightBuffer] 2D 2
//   SetTexture 2 [_MyGlobalReflectionProbe] CUBE 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityFog" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:25:05 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 7      w        1     NONE   float      w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyzw        5     NONE   float   xy w
// TEXCOORD                 5   xyzw        6     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texturecube (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyw
dcl_output o0.xyzw
dcl_temps 6
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f08e01d7b3f26af3-ps.txt

mul r4.w, -r4.x, r4.y
mad r5.xyz, -r4.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v4.xyzx, v4.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v4.xyzx
dp3 r0.x, r0.xyzx, v2.xyzx
add r0.x, -r0.x, l(1.000000)
log r0.x, r0.x
mul r0.x, r0.x, cb0[14].y
exp r0.x, r0.x
add r0.x, r0.x, cb0[14].z
mad r0.y, -r0.x, cb0[14].x, l(1.000000)
mad r0.z, -r0.y, l(0.700000), l(1.700000)
mul r0.z, r0.z, r0.y
mul r0.z, r0.z, l(6.000000)
add r1.xyz, v3.xyzx, -r5.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, v2.xyzx
dp3 r0.w, r1.xyzx, r2.xyzx
add r0.w, r0.w, r0.w
mad r3.xyz, r2.xyzx, -r0.wwww, r1.xyzx
dp3 r0.w, r2.xyzx, -r1.xyzx
add r0.w, -|r0.w|, l(1.000000)
sample_l r1.xyzw, r3.xyzx, t2.xyzw, s0, r0.z
add_sat r0.z, r3.y, cb0[11].x
mul r1.xyz, r0.zzzz, r1.xyzx
mul r0.z, r0.y, r0.y
mul r0.z, r0.z, l(0.280000)
mad r0.y, -r0.z, r0.y, l(1.000000)
mul r1.xyz, r1.xyzx, r0.yyyy
mul r0.y, r0.w, r0.w
mul r0.y, r0.y, r0.y
mul r0.y, r0.w, r0.y
mul r0.z, r0.x, cb0[14].x
mul r2.xyz, r0.zzzz, cb0[13].xyzx
max r0.w, r2.y, r2.x
max r0.w, r2.z, r0.w
add r0.w, -r0.w, l(1.000000)
mad r0.x, r0.x, cb0[14].x, -r0.w
add_sat r0.x, r0.x, l(1.000000)
mad r3.xyz, -r0.zzzz, cb0[13].xyzx, r0.xxxx
mad r0.xyw, r0.yyyy, r3.xyxz, r2.xyxz
mul r0.xyw, r0.xyxw, r1.xyxz
sample r1.xyzw, v1.xyzx, t0.xyzw, s1
mad r0.xyw, r0.xyxw, cb0[14].wwww, r1.xyxz
mul r0.xyw, r0.xyxw, cb0[13].xyxz
mul r0.xyw, r0.zzzz, r0.xyxw
div r1.xy, v5.xyxx, v5.wwww
sample r1.xyzw, r1.xyxx, t1.xyzw, s2
log r1.xyzw, r1.xyzw
mul r1.xyz, -r1.xyzx, cb0[3].xyzx
mul r0.z, r0.z, -r1.w
mad r0.xyz, r1.xyzx, r0.zzzz, r0.xywx
div r0.w, v1.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb2[1].y
exp r0.w, -r0.w
min r0.w, r0.w, l(1.000000)
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used