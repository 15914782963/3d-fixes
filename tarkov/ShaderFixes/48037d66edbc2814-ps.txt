// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 48037d66edbc2814-ps.txt
// 3DMigoto: 48037d66edbc2814 | Matched 4 variants of 1 shaders: Hidden/AreaLight
//
//       Unity headers extracted from Hidden_AreaLight
//       Shader "Hidden/AreaLight" {
//         SubShader 1/1 {
//           Tags { "QUEUE"="Geometry-1" }
//    1:     Pass 3/7 {
//    2:     Pass 5/7 {
//    4:     Pass 7/7 {
//             Tags { "QUEUE"="Geometry-1" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Hidden_AreaLight:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 442 7 40
//      undeciphered1a: 16
// 8:   Keywords { "SPECULAR" "OPTICCAMERA" "SCENEVIEWCAMERA" }
// 2:   Keywords { "SPECULAR" "OPTICCAMERA" }
// 4:   Keywords { "SPECULAR" "SCENEVIEWCAMERA" }
// 1:   Keywords { "SPECULAR" }
//      undeciphered2: 1 7 3 7 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 464
//      Vector 112 [_LightColor]
//      Float 228 [_Hardness]
//      Float 448 [_SpecularScale]
//      Matrix 304 [_ClipCube]
//      Matrix 384 [_LightVerts]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      Vector 112 [_ZBufferParams]
//      ConstBuffer "UnityPerCameraRare" 352
//      Matrix 288 [unity_CameraToWorld]
//      SetTexture 0 [_CameraDepthTexture] 2D 0
//      SetTexture 1 [_CameraGBufferTexture0] 2D 4
//      SetTexture 2 [_CameraGBufferTexture1] 2D 5
//      SetTexture 3 [_CameraGBufferTexture2] 2D 6
//      SetTexture 4 [_AmpDiffAmpSpecFresnel] 2D 3
//      SetTexture 5 [_TransformInv_Diffuse] 2D 1
//      SetTexture 6 [_TransformInv_Specular] 2D 2
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerCameraRare" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:02:54 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[29], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 18
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r16.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 48037d66edbc2814-ps.txt

mul r16.w, -r16.x, r16.y
mad r17.xyz, -r16.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.x, cb1[5].z, v2.z
mul r0.xyz, r0.xxxx, v2.xyzx
div r1.xy, v1.xyxx, v1.wwww
sample r2.xyzw, r1.xyxx, t0.xyzw, s0
mad r0.w, cb1[7].x, r2.x, cb1[7].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r2.xyz, r0.yyyy, cb2[19].xyzx
mad r0.xyw, cb2[18].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb2[20].xyzx, r0.zzzz, r0.xywx
add r0.xyz, r0.xyzx, cb2[21].xyzx
mul r2.xyzw, r0.yyyy, cb0[20].xyzw
mad r2.xyzw, cb0[19].xyzw, r0.xxxx, r2.xyzw
mad r2.xyzw, cb0[21].xyzw, r0.zzzz, r2.xyzw
add r2.xyzw, r2.xyzw, cb0[22].xyzw
div r2.xyz, r2.xyzx, r2.wwww
ge r1.zw, |r2.xxxy|, l(0.000000, 0.000000, 1.000000, 1.000000)
and r1.zw, r1.zzzw, l(0, 0, 0x3f800000, 0x3f800000)
dp2 r0.w, r1.zwzz, r1.zwzz
eq r0.w, r0.w, l(0.000000)
add r1.zw, |r2.xxxy|, l(0.000000, 0.000000, -0.600000, -0.600000)
max r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
dp2 r1.z, r1.zwzz, r1.zwzz
sqrt r1.z, r1.z
mad r1.w, cb0[14].y, l(100.000000), l(1.000000)
add r1.z, r1.z, l(0.0999999940)
add r1.z, r1.z, r1.z
min r1.z, r1.z, l(1.000000)
mad r2.x, r1.z, l(-2.000000), l(3.000000)
mul r1.z, r1.z, r1.z
mad r1.z, -r2.x, r1.z, l(1.000000)
max r1.z, r1.z, l(0.000000)
mul r1.z, r1.z, r1.w
add r1.w, r2.z, l(-1.000000)
mov_sat r1.w, -r1.w
mad r2.x, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.x
min r1.w, r1.w, l(1.000000)
mul_sat r1.z, r1.w, r1.z
and r0.w, r0.w, r1.z
ne r1.z, r0.w, l(0.000000)
if_nz r1.z
  sample r2.xyzw, r1.xyxx, t1.xyzw, s4
  sample r3.xyzw, r1.xyxx, t2.xyzw, s5
  sample r1.xyzw, r1.xyxx, t3.xyzw, s6
  mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  dp3 r1.w, r1.xyzx, r1.xyzx
  rsq r1.w, r1.w
  mul r1.xyz, r1.wwww, r1.xyzx
  max r1.w, r3.w, l(0.010000)
  min r1.w, r1.w, l(0.930000)
  add r4.x, -r1.w, l(1.000000)
  add r3.yzw, -r0.xxyz, r17.xxyz
  dp3 r1.w, r3.yzwy, r3.yzwy
  rsq r1.w, r1.w
  mul r3.yzw, r1.wwww, r3.yyzw
  dp3 r1.w, r3.yzwy, r1.xyzx
  mad r3.yzw, -r1.xxyz, r1.wwww, r3.yyzw
  dp3 r2.w, r3.yzwy, r3.yzwy
  rsq r2.w, r2.w
  mul r3.yzw, r2.wwww, r3.yyzw
  mul r5.xyz, r1.zxyz, r3.zwyz
  mad r5.xyz, r1.yzxy, r3.wyzw, -r5.xyzx
  dp3 r2.w, r5.xyzx, r5.xyzx
  rsq r2.w, r2.w
  mul r5.xyz, r2.wwww, r5.xyzx
  add r6.xz, -r0.zzzz, cb0[26].xxyx
  add r7.xyz, -r0.xxxx, cb0[24].xyzx
  add r8.xyz, -r0.yyyy, cb0[25].xzyx
  add r9.xw, -r0.zzzz, cb0[26].zzzw
  add r9.y, -r0.x, cb0[24].w
  add r9.z, -r0.y, cb0[25].w
  mov r6.y, r7.x
  mov r6.w, r8.x
  dp3 r0.x, r6.ywxy, r3.yzwy
  dp3 r0.z, r6.ywxy, r5.xyzx
  dp3 r0.y, r6.ywxy, r1.xyzx
  mov r6.x, r7.y
  mov r6.y, r8.z
  dp3 r7.x, r6.xyzx, r3.yzwy
  dp3 r2.w, r6.xyzx, r5.xyzx
  dp3 r7.y, r6.xyzx, r1.xyzx
  mov r8.x, r7.z
  mov r8.z, r9.x
  dp3 r6.x, r8.xyzx, r3.yzwy
  dp3 r4.z, r8.xyzx, r5.xyzx
  dp3 r6.y, r8.xyzx, r1.xyzx
  dp3 r8.x, r9.yzwy, r3.yzwy
  dp3 r3.y, r9.yzwy, r5.xyzx
  dp3 r8.y, r9.yzwy, r1.xyzx
  add r1.x, -|r1.w|, l(1.000000)
  sqrt r1.x, r1.x
  mad r1.y, |r1.w|, l(-0.0187292993), l(0.074261)
  mad r1.y, r1.y, |r1.w|, l(-0.212114394)
  mad r1.y, r1.y, |r1.w|, l(1.57072878)
  mul r1.z, r1.x, r1.y
  mad r1.z, r1.z, l(-2.000000), l(3.14159274)
  lt r1.w, r1.w, -r1.w
  and r1.z, r1.w, r1.z
  mad r1.x, r1.y, r1.x, r1.z
  mul r4.y, r1.x, l(0.636942625)
  sample r1.xyzw, r4.xyxx, t4.xyzw, s3
  sample r5.xyzw, r4.xyxx, t5.xyzw, s1
  dp2 r9.x, r0.xyxx, r5.xwxx
  mul r9.y, r0.z, r5.z
  mov r10.x, r5.y
  mov r10.yw, l(0,1.000000,0,1.000000)
  dp2 r9.z, r0.xyxx, r10.xyxx
  dp2 r11.x, r7.xyxx, r5.xwxx
  mul r11.y, r2.w, r5.z
  dp2 r11.z, r7.xyxx, r10.xyxx
  dp2 r12.x, r6.xyxx, r5.xwxx
  mul r12.y, r4.z, r5.z
  dp2 r12.z, r6.xyxx, r10.xyxx
  dp2 r13.x, r8.xyxx, r5.xwxx
  mul r13.y, r3.y, r5.z
  dp2 r13.z, r8.xyxx, r10.xyxx
  lt r1.w, l(0.000000), r9.z
  and r3.z, r1.w, l(1)
  lt r3.w, l(0.000000), r11.z
  movc r1.w, r1.w, l(3), l(2)
  movc r1.w, r3.w, r1.w, r3.z
  lt r3.z, l(0.000000), r12.z
  iadd r3.w, r1.w, l(4)
  movc r1.w, r3.z, r3.w, r1.w
  lt r3.z, l(0.000000), r13.z
  iadd r3.w, r1.w, l(8)
  movc r1.w, r3.z, r3.w, r1.w
  switch r1.w
    case l(0)
    mov r5.xyz, r13.xyzx
    mov r1.w, l(0)
    break
    case l(1)
    mul r14.xyz, r9.zzzz, r11.xyzx
    mad r11.xyz, -r11.zzzz, r9.xyzx, r14.xyzx
    mul r14.xyz, r9.zzzz, r13.xyzx
    mad r12.xyz, -r13.zzzz, r9.xyzx, r14.xyzx
    mov r5.xyz, r13.xyzx
    mov r1.w, l(3)
    break
    case l(2)
    mul r14.xyz, r9.xyzx, r11.zzzz
    mad r9.xyz, -r9.zzzz, r11.xyzx, r14.xyzx
    mul r14.xyz, r11.zzzz, r12.xyzx
    mad r12.xyz, -r12.zzzz, r11.xyzx, r14.xyzx
    mov r5.xyz, r13.xyzx
    mov r1.w, l(3)
    break
    case l(3)
    mul r14.xyz, r11.zzzz, r12.xyzx
    mad r12.xyz, -r12.zzzz, r11.xyzx, r14.xyzx
    mul r14.xyz, r9.zzzz, r13.xyzx
    mad r5.xyz, -r13.zzzz, r9.xyzx, r14.xyzx
    mov r1.w, l(4)
    break
    case l(4)
    mul r14.xyz, r12.zzzz, r13.xyzx
    mad r9.xyz, -r13.zzzz, r12.xyzx, r14.xyzx
    mul r14.xyz, r11.xyzx, r12.zzzz
    mad r11.xyz, -r11.zzzz, r12.xyzx, r14.xyzx
    mov r5.xyz, r13.xyzx
    mov r1.w, l(3)
    break
    case l(5)
    mov r5.xyz, r13.xyzx
    mov r1.w, l(0)
    break
    case l(6)
    mul r14.xyz, r9.xyzx, r11.zzzz
    mad r9.xyz, -r9.zzzz, r11.xyzx, r14.xyzx
    mul r14.xyz, r12.zzzz, r13.xyzx
    mad r5.xyz, -r13.zzzz, r12.xyzx, r14.xyzx
    mov r1.w, l(4)
    break
    case l(7)
    mul r14.xyz, r9.zzzz, r13.xyzx
    mad r14.xyz, -r13.zzzz, r9.xyzx, r14.xyzx
    mul r15.xyz, r12.zzzz, r13.xyzx
    mad r5.xyz, -r13.zzzz, r12.xyzx, r15.xyzx
    mov r13.xyz, r14.xyzx
    mov r1.w, l(5)
    break
    case l(8)
    mul r14.xyz, r9.xyzx, r13.zzzz
    mad r9.xyz, -r9.zzzz, r13.xyzx, r14.xyzx
    mul r14.xyz, r12.xyzx, r13.zzzz
    mad r11.xyz, -r12.zzzz, r13.xyzx, r14.xyzx
    mov r12.xyz, r13.xyzx
    mov r5.xyz, r13.xyzx
    mov r1.w, l(3)
    break
    case l(9)
    mul r14.xyz, r9.zzzz, r11.xyzx
    mad r11.xyz, -r11.zzzz, r9.xyzx, r14.xyzx
    mul r14.xyz, r12.xyzx, r13.zzzz
    mad r12.xyz, -r12.zzzz, r13.xyzx, r14.xyzx
    mov r5.xyz, r13.xyzx
    mov r1.w, l(4)
    break
    case l(10)
    mov r5.xyz, r13.xyzx
    mov r1.w, l(0)
    break
    case l(11)
    mul r14.xyz, r12.xyzx, r13.zzzz
    mad r5.xyz, -r12.zzzz, r13.xyzx, r14.xyzx
    mul r14.xyz, r11.zzzz, r12.xyzx
    mad r12.xyz, -r12.zzzz, r11.xyzx, r14.xyzx
    mov r1.w, l(5)
    break
    case l(12)
    mul r14.xyz, r11.xyzx, r12.zzzz
    mad r11.xyz, -r11.zzzz, r12.xyzx, r14.xyzx
    mul r14.xyz, r9.xyzx, r13.zzzz
    mad r9.xyz, -r9.zzzz, r13.xyzx, r14.xyzx
    mov r5.xyz, r13.xyzx
    mov r1.w, l(4)
    break
    case l(13)
    mul r14.xyz, r11.xyzx, r12.zzzz
    mad r14.xyz, -r11.zzzz, r12.xyzx, r14.xyzx
    mul r15.xyz, r9.zzzz, r11.xyzx
    mad r11.xyz, -r11.zzzz, r9.xyzx, r15.xyzx
    mov r5.xyz, r12.xyzx
    mov r1.w, l(5)
    mov r12.xyz, r14.xyzx
    break
    case l(14)
    mul r14.xyz, r9.xyzx, r13.zzzz
    mad r14.xyz, -r9.zzzz, r13.xyzx, r14.xyzx
    mul r15.xyz, r9.xyzx, r11.zzzz
    mad r9.xyz, -r9.zzzz, r11.xyzx, r15.xyzx
    mov r5.xyz, r13.xyzx
    mov r13.xyz, r14.xyzx
    mov r1.w, l(5)
    break
    case l(15)
    mov r5.xyz, r13.xyzx
    mov r1.w, l(4)
    break
  endswitch
  if_nz r1.w
    dp3 r3.z, r9.xyzx, r9.xyzx
    rsq r3.z, r3.z
    mul r9.xyz, r3.zzzz, r9.xyzx
    dp3 r3.z, r11.xyzx, r11.xyzx
    rsq r3.z, r3.z
    mul r11.xyz, r3.zzzz, r11.xyzx
    dp3 r3.z, r12.xyzx, r12.xyzx
    rsq r3.z, r3.z
    mul r12.xyz, r3.zzzz, r12.xyzx
    dp3 r3.z, r5.xyzx, r5.xyzx
    rsq r3.z, r3.z
    mul r5.xyz, r3.zzzz, r5.xyzx
    ieq r14.xyz, r1.wwww, l(3, 4, 5, 0)
    dp3 r3.z, r13.xyzx, r13.xyzx
    rsq r3.z, r3.z
    mul r15.xyz, r3.zzzz, r13.xyzx
    movc r15.xyz, r14.yyyy, r9.xyzx, r15.xyzx
    movc r5.xyz, r14.xxxx, r9.xyzx, r5.xyzx
    movc r13.xyz, r14.xxxx, r13.xyzx, r15.xyzx
    dp3 r3.z, r9.xyzx, r11.xyzx
    max r3.z, r3.z, l(-0.999900)
    add r3.w, -|r3.z|, l(1.000000)
    sqrt r3.w, r3.w
    mad r4.w, |r3.z|, l(-0.0187292993), l(0.074261)
    mad r4.w, r4.w, |r3.z|, l(-0.212114394)
    mad r4.w, r4.w, |r3.z|, l(1.57072878)
    mul r5.w, r3.w, r4.w
    mad r5.w, r5.w, l(-2.000000), l(3.14159274)
    lt r3.z, r3.z, -r3.z
    and r3.z, r3.z, r5.w
    mad r3.z, r4.w, r3.w, r3.z
    sincos r3.w, null, r3.z
    div r3.z, r3.z, r3.w
    mul r3.w, r9.y, r11.x
    mad r3.w, r9.x, r11.y, -r3.w
    dp3 r4.w, r11.xyzx, r12.xyzx
    max r4.w, r4.w, l(-0.999900)
    add r5.w, -|r4.w|, l(1.000000)
    sqrt r5.w, r5.w
    mad r6.z, |r4.w|, l(-0.0187292993), l(0.074261)
    mad r6.z, r6.z, |r4.w|, l(-0.212114394)
    mad r6.z, r6.z, |r4.w|, l(1.57072878)
    mul r6.w, r5.w, r6.z
    mad r6.w, r6.w, l(-2.000000), l(3.14159274)
    lt r4.w, r4.w, -r4.w
    and r4.w, r4.w, r6.w
    mad r4.w, r6.z, r5.w, r4.w
    sincos r5.w, null, r4.w
    div r4.w, r4.w, r5.w
    mul r5.w, r11.y, r12.x
    mad r5.w, r11.x, r12.y, -r5.w
    mul r4.w, r4.w, r5.w
    mad r3.z, r3.z, r3.w, r4.w
    dp3 r3.w, r12.xyzx, r5.xyzx
    max r3.w, r3.w, l(-0.999900)
    add r4.w, -|r3.w|, l(1.000000)
    sqrt r4.w, r4.w
    mad r5.w, |r3.w|, l(-0.0187292993), l(0.074261)
    mad r5.w, r5.w, |r3.w|, l(-0.212114394)
    mad r5.w, r5.w, |r3.w|, l(1.57072878)
    mul r6.z, r4.w, r5.w
    mad r6.z, r6.z, l(-2.000000), l(3.14159274)
    lt r3.w, r3.w, -r3.w
    and r3.w, r3.w, r6.z
    mad r3.w, r5.w, r4.w, r3.w
    sincos r4.w, null, r3.w
    div r3.w, r3.w, r4.w
    mul r4.w, r5.x, r12.y
    mad r4.w, r12.x, r5.y, -r4.w
    mad r3.z, r3.w, r4.w, r3.z
    uge r1.w, r1.w, l(4)
    dp3 r3.w, r5.xyzx, r13.xyzx
    max r3.w, r3.w, l(-0.999900)
    add r4.w, -|r3.w|, l(1.000000)
    sqrt r4.w, r4.w
    mad r5.z, |r3.w|, l(-0.0187292993), l(0.074261)
    mad r5.z, r5.z, |r3.w|, l(-0.212114394)
    mad r5.z, r5.z, |r3.w|, l(1.57072878)
    mul r5.w, r4.w, r5.z
    mad r5.w, r5.w, l(-2.000000), l(3.14159274)
    lt r3.w, r3.w, -r3.w
    and r3.w, r3.w, r5.w
    mad r3.w, r5.z, r4.w, r3.w
    sincos r4.w, null, r3.w
    div r3.w, r3.w, r4.w
    mul r4.w, r5.y, r13.x
    mad r4.w, r5.x, r13.y, -r4.w
    mad r3.w, r3.w, r4.w, r3.z
    movc r1.w, r1.w, r3.w, r3.z
    dp3 r3.z, r13.xyzx, r9.xyzx
    max r3.z, r3.z, l(-0.999900)
    add r3.w, -|r3.z|, l(1.000000)
    sqrt r3.w, r3.w
    mad r4.w, |r3.z|, l(-0.0187292993), l(0.074261)
    mad r4.w, r4.w, |r3.z|, l(-0.212114394)
    mad r4.w, r4.w, |r3.z|, l(1.57072878)
    mul r5.x, r3.w, r4.w
    mad r5.x, r5.x, l(-2.000000), l(3.14159274)
    lt r3.z, r3.z, -r3.z
    and r3.z, r3.z, r5.x
    mad r3.z, r4.w, r3.w, r3.z
    sincos r3.w, null, r3.z
    div r3.z, r3.z, r3.w
    mul r3.w, r9.x, r13.y
    mad r3.w, r13.x, r9.y, -r3.w
    mad r3.z, r3.z, r3.w, r1.w
    movc r1.w, r14.z, r3.z, r1.w
    mul r1.w, r1.w, l(0.159150)
    max r1.w, r1.w, l(0.000000)
  else
    mov r1.w, l(0)
  endif
  mul r1.x, r1.x, r1.w
  sample r5.xyzw, r4.xyxx, t6.xyzw, s2
  dp2 r9.x, r0.xyxx, r5.xwxx
  mul r9.y, r0.z, r5.z
  mov r10.z, r5.y
  dp2 r9.z, r0.xyxx, r10.zwzz
  dp2 r0.x, r7.xyxx, r5.xwxx
  mul r0.y, r2.w, r5.z
  dp2 r0.z, r7.xyxx, r10.zwzz
  dp2 r7.x, r6.xyxx, r5.xwxx
  mul r7.y, r4.z, r5.z
  dp2 r7.z, r6.xyxx, r10.zwzz
  dp2 r4.x, r8.xyxx, r5.xwxx
  mul r4.y, r3.y, r5.z
  dp2 r4.z, r8.xyxx, r10.zwzz
  lt r1.w, l(0.000000), r9.z
  and r2.w, r1.w, l(1)
  lt r3.y, l(0.000000), r0.z
  movc r1.w, r1.w, l(3), l(2)
  movc r1.w, r3.y, r1.w, r2.w
  lt r2.w, l(0.000000), r7.z
  iadd r3.y, r1.w, l(4)
  movc r1.w, r2.w, r3.y, r1.w
  lt r2.w, l(0.000000), r4.z
  iadd r3.y, r1.w, l(8)
  movc r1.w, r2.w, r3.y, r1.w
  switch r1.w
    case l(0)
    mov r3.yzw, r4.xxyz
    mov r1.w, l(0)
    break
    case l(1)
    mul r5.xyz, r0.xyzx, r9.zzzz
    mad r0.xyz, -r0.zzzz, r9.xyzx, r5.xyzx
    mul r5.xyz, r4.xyzx, r9.zzzz
    mad r7.xyz, -r4.zzzz, r9.xyzx, r5.xyzx
    mov r3.yzw, r4.xxyz
    mov r1.w, l(3)
    break
    case l(2)
    mul r5.xyz, r9.xyzx, r0.zzzz
    mad r9.xyz, -r9.zzzz, r0.xyzx, r5.xyzx
    mul r5.xyz, r0.zzzz, r7.xyzx
    mad r7.xyz, -r7.zzzz, r0.xyzx, r5.xyzx
    mov r3.yzw, r4.xxyz
    mov r1.w, l(3)
    break
    case l(3)
    mul r5.xyz, r0.zzzz, r7.xyzx
    mad r7.xyz, -r7.zzzz, r0.xyzx, r5.xyzx
    mul r5.xyz, r4.xyzx, r9.zzzz
    mad r3.yzw, -r4.zzzz, r9.xxyz, r5.xxyz
    mov r1.w, l(4)
    break
    case l(4)
    mul r5.xyz, r4.xyzx, r7.zzzz
    mad r9.xyz, -r4.zzzz, r7.xyzx, r5.xyzx
    mul r5.xyz, r0.xyzx, r7.zzzz
    mad r0.xyz, -r0.zzzz, r7.xyzx, r5.xyzx
    mov r3.yzw, r4.xxyz
    mov r1.w, l(3)
    break
    case l(5)
    mov r3.yzw, r4.xxyz
    mov r1.w, l(0)
    break
    case l(6)
    mul r5.xyz, r9.xyzx, r0.zzzz
    mad r9.xyz, -r9.zzzz, r0.xyzx, r5.xyzx
    mul r5.xyz, r4.xyzx, r7.zzzz
    mad r3.yzw, -r4.zzzz, r7.xxyz, r5.xxyz
    mov r1.w, l(4)
    break
    case l(7)
    mul r5.xyz, r4.xyzx, r9.zzzz
    mad r5.xyz, -r4.zzzz, r9.xyzx, r5.xyzx
    mul r6.xyz, r4.xyzx, r7.zzzz
    mad r3.yzw, -r4.zzzz, r7.xxyz, r6.xxyz
    mov r4.xyz, r5.xyzx
    mov r1.w, l(5)
    break
    case l(8)
    mul r5.xyz, r9.xyzx, r4.zzzz
    mad r9.xyz, -r9.zzzz, r4.xyzx, r5.xyzx
    mul r5.xyz, r7.xyzx, r4.zzzz
    mad r0.xyz, -r7.zzzz, r4.xyzx, r5.xyzx
    mov r7.xyz, r4.xyzx
    mov r3.yzw, r4.xxyz
    mov r1.w, l(3)
    break
    case l(9)
    mul r5.xyz, r0.xyzx, r9.zzzz
    mad r0.xyz, -r0.zzzz, r9.xyzx, r5.xyzx
    mul r5.xyz, r7.xyzx, r4.zzzz
    mad r7.xyz, -r7.zzzz, r4.xyzx, r5.xyzx
    mov r3.yzw, r4.xxyz
    mov r1.w, l(4)
    break
    case l(10)
    mov r3.yzw, r4.xxyz
    mov r1.w, l(0)
    break
    case l(11)
    mul r5.xyz, r7.xyzx, r4.zzzz
    mad r3.yzw, -r7.zzzz, r4.xxyz, r5.xxyz
    mul r5.xyz, r0.zzzz, r7.xyzx
    mad r7.xyz, -r7.zzzz, r0.xyzx, r5.xyzx
    mov r1.w, l(5)
    break
    case l(12)
    mul r5.xyz, r0.xyzx, r7.zzzz
    mad r0.xyz, -r0.zzzz, r7.xyzx, r5.xyzx
    mul r5.xyz, r9.xyzx, r4.zzzz
    mad r9.xyz, -r9.zzzz, r4.xyzx, r5.xyzx
    mov r3.yzw, r4.xxyz
    mov r1.w, l(4)
    break
    case l(13)
    mul r5.xyz, r0.xyzx, r7.zzzz
    mad r5.xyz, -r0.zzzz, r7.xyzx, r5.xyzx
    mul r6.xyz, r0.xyzx, r9.zzzz
    mad r0.xyz, -r0.zzzz, r9.xyzx, r6.xyzx
    mov r3.yzw, r7.xxyz
    mov r1.w, l(5)
    mov r7.xyz, r5.xyzx
    break
    case l(14)
    mul r5.xyz, r9.xyzx, r4.zzzz
    mad r5.xyz, -r9.zzzz, r4.xyzx, r5.xyzx
    mul r6.xyz, r9.xyzx, r0.zzzz
    mad r9.xyz, -r9.zzzz, r0.xyzx, r6.xyzx
    mov r3.yzw, r4.xxyz
    mov r4.xyz, r5.xyzx
    mov r1.w, l(5)
    break
    case l(15)
    mov r3.yzw, r4.xxyz
    mov r1.w, l(4)
    break
  endswitch
  if_nz r1.w
    dp3 r2.w, r9.xyzx, r9.xyzx
    rsq r2.w, r2.w
    mul r5.xyz, r2.wwww, r9.xyzx
    dp3 r2.w, r0.xyzx, r0.xyzx
    rsq r2.w, r2.w
    mul r0.xyz, r0.xyzx, r2.wwww
    dp3 r2.w, r7.xyzx, r7.xyzx
    rsq r2.w, r2.w
    mul r6.xyz, r2.wwww, r7.xyzx
    dp3 r2.w, r3.yzwy, r3.yzwy
    rsq r2.w, r2.w
    mul r3.yzw, r2.wwww, r3.yyzw
    ieq r7.xyz, r1.wwww, l(3, 4, 5, 0)
    dp3 r2.w, r4.xyzx, r4.xyzx
    rsq r2.w, r2.w
    mul r8.xyz, r2.wwww, r4.xyzx
    movc r8.xyz, r7.yyyy, r5.xyzx, r8.xyzx
    movc r3.yzw, r7.xxxx, r5.xxyz, r3.yyzw
    movc r4.xyz, r7.xxxx, r4.xyzx, r8.xyzx
    dp3 r2.w, r5.xyzx, r0.xyzx
    max r2.w, r2.w, l(-0.999900)
    add r4.w, -|r2.w|, l(1.000000)
    sqrt r4.w, r4.w
    mad r5.w, |r2.w|, l(-0.0187292993), l(0.074261)
    mad r5.w, r5.w, |r2.w|, l(-0.212114394)
    mad r5.w, r5.w, |r2.w|, l(1.57072878)
    mul r6.w, r4.w, r5.w
    mad r6.w, r6.w, l(-2.000000), l(3.14159274)
    lt r2.w, r2.w, -r2.w
    and r2.w, r2.w, r6.w
    mad r2.w, r5.w, r4.w, r2.w
    sincos r4.w, null, r2.w
    div r2.w, r2.w, r4.w
    mul r4.w, r0.x, r5.y
    mad r4.w, r5.x, r0.y, -r4.w
    dp3 r0.z, r0.xyzx, r6.xyzx
    max r0.z, r0.z, l(-0.999900)
    add r5.w, -|r0.z|, l(1.000000)
    sqrt r5.w, r5.w
    mad r6.w, |r0.z|, l(-0.0187292993), l(0.074261)
    mad r6.w, r6.w, |r0.z|, l(-0.212114394)
    mad r6.w, r6.w, |r0.z|, l(1.57072878)
    mul r7.x, r5.w, r6.w
    mad r7.x, r7.x, l(-2.000000), l(3.14159274)
    lt r0.z, r0.z, -r0.z
    and r0.z, r0.z, r7.x
    mad r0.z, r6.w, r5.w, r0.z
    sincos r5.w, null, r0.z
    div r0.z, r0.z, r5.w
    mul r0.y, r0.y, r6.x
    mad r0.x, r0.x, r6.y, -r0.y
    mul r0.x, r0.x, r0.z
    mad r0.x, r2.w, r4.w, r0.x
    dp3 r0.y, r6.xyzx, r3.yzwy
    max r0.y, r0.y, l(-0.999900)
    add r0.z, -|r0.y|, l(1.000000)
    sqrt r0.z, r0.z
    mad r2.w, |r0.y|, l(-0.0187292993), l(0.074261)
    mad r2.w, r2.w, |r0.y|, l(-0.212114394)
    mad r2.w, r2.w, |r0.y|, l(1.57072878)
    mul r4.w, r0.z, r2.w
    mad r4.w, r4.w, l(-2.000000), l(3.14159274)
    lt r0.y, r0.y, -r0.y
    and r0.y, r0.y, r4.w
    mad r0.y, r2.w, r0.z, r0.y
    sincos r0.z, null, r0.y
    div r0.y, r0.y, r0.z
    mul r0.z, r3.y, r6.y
    mad r0.z, r6.x, r3.z, -r0.z
    mad r0.x, r0.y, r0.z, r0.x
    uge r0.y, r1.w, l(4)
    dp3 r0.z, r3.yzwy, r4.xyzx
    max r0.z, r0.z, l(-0.999900)
    add r1.w, -|r0.z|, l(1.000000)
    sqrt r1.w, r1.w
    mad r2.w, |r0.z|, l(-0.0187292993), l(0.074261)
    mad r2.w, r2.w, |r0.z|, l(-0.212114394)
    mad r2.w, r2.w, |r0.z|, l(1.57072878)
    mul r3.w, r1.w, r2.w
    mad r3.w, r3.w, l(-2.000000), l(3.14159274)
    lt r0.z, r0.z, -r0.z
    and r0.z, r0.z, r3.w
    mad r0.z, r2.w, r1.w, r0.z
    sincos r1.w, null, r0.z
    div r0.z, r0.z, r1.w
    mul r1.w, r3.z, r4.x
    mad r1.w, r3.y, r4.y, -r1.w
    mad r0.z, r0.z, r1.w, r0.x
    movc r0.x, r0.y, r0.z, r0.x
    dp3 r0.y, r4.xyzx, r5.xyzx
    max r0.y, r0.y, l(-0.999900)
    add r0.z, -|r0.y|, l(1.000000)
    sqrt r0.z, r0.z
    mad r1.w, |r0.y|, l(-0.0187292993), l(0.074261)
    mad r1.w, r1.w, |r0.y|, l(-0.212114394)
    mad r1.w, r1.w, |r0.y|, l(1.57072878)
    mul r2.w, r0.z, r1.w
    mad r2.w, r2.w, l(-2.000000), l(3.14159274)
    lt r0.y, r0.y, -r0.y
    and r0.y, r0.y, r2.w
    mad r0.y, r1.w, r0.z, r0.y
    sincos r0.z, null, r0.y
    div r0.y, r0.y, r0.z
    mul r0.z, r5.x, r4.y
    mad r0.z, r4.x, r5.y, -r0.z
    mad r0.y, r0.y, r0.z, r0.x
    movc r0.x, r7.z, r0.y, r0.x
    mul r0.x, r0.x, l(0.159150)
    max r0.x, r0.x, l(0.000000)
  else
    mov r0.x, l(0)
  endif
  mul r0.x, r1.y, r0.x
  add r0.y, -r3.x, l(1.000000)
  mad r0.y, r0.y, r1.z, r3.x
  mul r0.x, r0.x, cb0[28].x
  mul r0.x, r0.y, r0.x
  mul r0.x, r0.x, l(3.14159274)
  mad r0.xyz, r1.xxxx, r2.xyzx, r0.xxxx
  mul r0.xyz, r0.wwww, r0.xyzx
  mul r0.xyz, r0.xyzx, cb0[7].xyzx
else
  mov r0.xyz, l(0,0,0,0)
endif
mov o0.xyzw, r0.xyzz
ret
// Approximately 0 instruction slots used