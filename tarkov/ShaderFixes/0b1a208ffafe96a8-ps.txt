// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0b1a208ffafe96a8-ps.txt
// 3DMigoto: 0b1a208ffafe96a8 |    Unity headers extracted from Transparent_DepthZwriteDithered
//    Shader "Transparent/DepthZwriteDithered" {
//      Fallback "Reflective/Bumped Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry" "RenderType"="TransparentCutout" }
//        Pass 4/7 {
//          Name "PREPASS"
//          Tags { "LIGHTMODE"="PREPASSBASE" "QUEUE"="Geometry" "RenderType"="TransparentCutout" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Transparent_DepthZwriteDithered:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 43 3 0
//   undeciphered1a: 3
//   undeciphered2: 1 3 2 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1088
//   Vector 928 [_Color]
//   Float 960 [_SpecPower]
//   Float 1028 [_Tinted]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 96 [_ScreenParams]
//   SetTexture 0 [_MainTex] 2D 0
//   SetTexture 1 [_SpecTex] 2D 1
//   SetTexture 2 [_BumpMap] 2D 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sun Jul 14 23:54:59 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy
// TEXCOORD                 6     z         2     NONE   float
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 7   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[65], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyw
dcl_output o0.xyzw
dcl_temps 5
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0b1a208ffafe96a8-ps.txt

mul r3.w, -r3.x, r3.y
mad r4.xyz, -r3.wwww, cb10[0].xyzw, cb1[4].xyzw

mul r0.x, cb1[5].x, -cb1[5].x
div r1.xy, v6.xyxx, v6.wwww
mul r1.z, r0.x, r1.y
mad r0.xy, r1.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mul r0.xy, r0.xyxx, cb1[6].xyxx
round_ni r0.xy, r0.xyxx
add r0.x, r0.y, r0.x
mul r0.x, r0.x, l(0.500000)
ge r0.y, r0.x, -r0.x
frc r0.x, |r0.x|
movc r0.x, r0.y, r0.x, -r0.x
eq r0.x, r0.x, l(0.500000)
add r0.y, -cb0[64].y, l(1.000000)
movc r0.x, r0.x, r0.y, cb0[64].y
mov r1.x, v3.w
mov r1.y, v4.w
mov r1.z, v5.w
add r0.yzw, -r1.xxyz, r4.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
mul r1.xyz, r0.zzzz, v4.xyzx
mad r1.xyz, v3.xyzx, r0.yyyy, r1.xyzx
mad r0.yzw, v5.xxyz, r0.wwww, r1.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
sample r1.xyzw, v2.xyxx, t2.xyzw, s2
mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r1.xyxx, r1.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r1.z, r1.w
dp3 r0.y, r0.yzwy, r1.xyzx
add r0.y, -r0.y, l(1.000000)
mul r0.z, r0.y, r0.y
mul r0.z, r0.z, r0.z
mul r0.y, r0.z, r0.y
mad r0.y, r0.y, l(0.950000), l(0.050000)
sample r2.xyzw, v1.xyxx, t0.xyzw, s0
mul r0.z, r2.w, cb0[58].w
lt r0.w, r0.z, l(1.000000)
movc r0.y, r0.w, r0.y, r0.z
add r0.x, -r0.x, r0.y
add r0.x, r0.x, l(0.500000)
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
dp3 r0.x, v3.xyzx, r1.xyzx
dp3 r0.y, v4.xyzx, r1.xyzx
dp3 r0.z, v5.xyzx, r1.xyzx
mad o0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
sample r0.xyzw, v1.zwzz, t1.xyzw, s1
mul o0.w, r0.x, cb0[60].x
ret
// Approximately 0 instruction slots used