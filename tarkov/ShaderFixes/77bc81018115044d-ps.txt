// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 77bc81018115044d-ps.txt
// 3DMigoto: 77bc81018115044d |    Unity headers extracted from RainyShaders_Reflect Bumped Specular Alpha Rainy
//    Shader "RainyShaders/Reflect Bumped Specular Alpha Rainy" {
//      Fallback "Transparent/VertexLit"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from RainyShaders_Reflect Bumped Specular Alpha Rainy:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 61 7 2
//   undeciphered1a: 6
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 6 4 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 160
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Vector 64 [_Color]
//   Float 96 [_Shininess]
//   Float 100 [_RainPower]
//   Float 104 [_RainSpeed]
//   Float 108 [_RainTilingY]
//   Float 112 [_RainTilingX]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_RainGradient] 2D 4
//   SetTexture 1 [_RainFlow] 2D 3
//   SetTexture 2 [_MainTex] 2D 1
//   SetTexture 3 [_BumpMap] 2D 2
//   SetTexture 4 [_Cube] CUBE 5
//   SetTexture 5 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:09:04 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 77bc81018115044d-ps.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, r7.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
mad r2.x, cb1[0].y, cb0[6].z, v1.y
mov r2.y, v1.x
sample r3.xyzw, r2.yxyy, t0.xyzw, s4
add r2.z, r2.x, l(0.300000)
mul r2.xy, r2.yzyy, l(0.800000, 0.800000, 0.000000, 0.000000)
sample r2.xyzw, r2.xyxx, t0.xyzw, s4
add r2.xy, r2.xyxx, r3.xyxx
mul r3.x, v1.x, cb0[7].x
mul r1.w, cb1[0].y, l(0.100000)
mul r1.w, r1.w, cb0[6].z
mad r3.y, v1.y, cb0[6].w, r1.w
sample r3.xyzw, r3.xyxx, t1.xyzw, s3
mul r2.xy, r2.xyxx, r3.xyxx
mul r2.zw, r2.xxxy, cb0[6].yyyy
mad r2.xy, r2.xyxx, cb0[6].yyyy, v1.xyxx
sample r3.xyzw, r2.xyxx, t2.xyzw, s1
mul r3.xyz, r3.xyzx, cb0[4].xyzx
add r1.w, r2.z, r2.z
mad r1.w, r3.w, l(2.000000), r1.w
mad r2.xy, r2.zwzz, l(0.200000, 0.200000, 0.000000, 0.000000), v1.zwzz
sample r4.xyzw, r2.xyxx, t3.xyzw, s2
mad r4.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.x, r4.xyxx, r4.xyxx
min r2.x, r2.x, l(1.000000)
add r2.x, -r2.x, l(1.000000)
sqrt r4.z, r2.x
dp3 r5.x, v2.xyzx, r4.xyzx
dp3 r5.y, v3.xyzx, r4.xyzx
dp3 r5.z, v4.xyzx, r4.xyzx
dp3 r2.x, -r1.xyzx, r5.xyzx
add r2.x, r2.x, r2.x
mad r1.xyz, r5.xyzx, -r2.xxxx, -r1.xyzx
sample r4.xyzw, r1.xyzx, t4.xyzw, s5
mul r1.x, r3.w, r4.w
mad o0.w, r1.x, cb0[4].w, r2.z
eq r1.x, cb3[0].x, l(1.000000)
if_nz r1.x
  eq r1.x, cb3[0].y, l(1.000000)
  mul r2.xyz, v5.yyyy, cb3[2].xyzx
  mad r2.xyz, cb3[1].xyzx, v5.xxxx, r2.xyzx
  mad r2.xyz, cb3[3].xyzx, v5.zzzz, r2.xyzx
  add r2.xyz, r2.xyzx, cb3[4].xyzx
  movc r1.xyz, r1.xxxx, r2.xyzx, v5.xyzx
  add r1.xyz, r1.xyzx, -cb3[6].xyzx
  mul r2.yzw, r1.xxyz, cb3[5].xxyz
  mad r1.x, r2.y, l(0.250000), l(0.750000)
  mad r1.y, cb3[0].z, l(0.500000), l(0.750000)
  max r2.x, r1.y, r1.x
  sample r2.xyzw, r2.xzwx, t5.xyzw, s0
else
  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r1.x, r2.xyzw, cb2[45].xyzw
mul r1.xyz, r1.xxxx, cb0[2].xyzx
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r5.xyzx, cb2[0].xyzx
dp3 r0.x, r5.xyzx, r0.xyzx
max r0.xw, r0.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.y, cb0[6].x, l(128.000000)
log r0.x, r0.x
mul r0.x, r0.x, r0.y
exp r0.x, r0.x
mul r0.x, r1.w, r0.x
mul r2.xyz, r1.xyzx, r3.xyzx
mul r1.xyz, r1.xyzx, cb0[3].xyzx
mul r0.xyz, r0.xxxx, r1.xyzx
mad o0.xyz, r2.xyzx, r0.wwww, r0.xyzx
ret
// Approximately 0 instruction slots used