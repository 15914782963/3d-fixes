// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e5d330b5d8cc676e-ps.txt
// 3DMigoto: e5d330b5d8cc676e | Matched 2 variants of 1 shaders: p0/Specular
//
//       Unity headers extracted from p0_Specular
//       Shader "p0/Specular" {
//         CustomEditor "FresnelMaterialEditor"
//         Fallback "VertexLit"
//         SubShader 1/1 {
//           LOD 300
//           Tags { "RenderType"="Opaque" }
//           Pass 1/5 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="FORWARDBASE" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from p0_Specular:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 94 6 4
//      undeciphered1a: 8
// 2:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_EXP" "Rain" }
// 1:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_EXP" }
//      undeciphered2: 1 3 7 3 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 144
//      Vector 32 [_LightColor0]
//      Vector 48 [_SpecColor]
//      Vector 64 [_Color]
//      Float 80 [_Shininess]
//      Float 84 [_SpecPower]
//      Vector 96 [_SpecVals] 3
//      Vector 112 [_DefVals] 3
//      Float 124 [_SSRPow]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 752
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      Vector 720 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityShadows" 416
//      Vector 384 [_LightShadowData]
//      Vector 400 [unity_ShadowFadeCenterAndType]
//      ConstBuffer "UnityPerFrame" 384
//      Matrix 144 [unity_MatrixV]
//      ConstBuffer "UnityFog" 32
//      Vector 0 [unity_FogColor]
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_MainTex] 2D 2
//      SetTexture 1 [_ShadowMapTexture] 2D 1
//      SetTexture 2 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityShadows" 3
//      BindCB "UnityPerFrame" 4
//      BindCB "UnityFog" 5
//      BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:23:47 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 5     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyzw        5     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyw
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e5d330b5d8cc676e-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, r9.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
sample r2.xyzw, v1.xyxx, t0.xyzw, s2
mul r1.w, r2.w, cb0[5].y
mul r2.xyzw, r2.xyzw, cb0[4].xyzw
mul o0.w, r2.w, cb0[7].w
mul r2.w, cb0[5].y, cb0[5].x
dp3 r1.x, r1.xyzx, r1.xyzx
rsq r1.x, r1.x
mad r1.x, -r1.z, r1.x, l(1.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, l(0.500000)
mad r1.y, cb0[7].y, r1.x, cb0[7].x
mul r2.xyz, r1.yyyy, r2.xyzx
mad r1.x, cb0[6].y, r1.x, cb0[6].x
mul r1.x, r1.x, l(0.500000)
mul r1.x, r1.x, r1.w
mov r3.x, cb4[9].z
mov r3.y, cb4[10].z
mov r3.z, cb4[11].z
dp3 r1.y, r0.xyzx, r3.xyzx
add r3.xyz, v3.xyzx, -cb3[25].xyzx
dp3 r1.z, r3.xyzx, r3.xyzx
sqrt r1.z, r1.z
add r1.z, -r1.y, r1.z
mad r1.y, cb3[25].w, r1.z, r1.y
mad_sat r1.y, r1.y, cb3[24].z, cb3[24].w
eq r1.z, cb6[0].x, l(1.000000)
if_nz r1.z
  eq r1.w, cb6[0].y, l(1.000000)
  mul r3.xyz, v3.yyyy, cb6[2].xyzx
  mad r3.xyz, cb6[1].xyzx, v3.xxxx, r3.xyzx
  mad r3.xyz, cb6[3].xyzx, v3.zzzz, r3.xyzx
  add r3.xyz, r3.xyzx, cb6[4].xyzx
  movc r3.xyz, r1.wwww, r3.xyzx, v3.xyzx
  add r3.xyz, r3.xyzx, -cb6[6].xyzx
  mul r3.yzw, r3.xxyz, cb6[5].xxyz
  mad r1.w, r3.y, l(0.250000), l(0.750000)
  mad r3.y, cb6[0].z, l(0.500000), l(0.750000)
  max r3.x, r1.w, r3.y
  sample r3.xyzw, r3.xzwx, t2.xyzw, s0
else
  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r1.w, r3.xyzw, cb2[45].xyzw
div r3.xy, v5.xyxx, v5.wwww
sample r3.xyzw, r3.xyxx, t1.xyzw, s1
add_sat r1.y, r1.y, r3.x
min r1.w, r1.y, r1.w
movc r1.y, r1.z, r1.w, r1.y
mul r3.xyz, r1.yyyy, cb0[2].xyzx
if_nz r1.z
  eq r1.y, cb6[0].y, l(1.000000)
  mul r4.xyz, v3.yyyy, cb6[2].xyzx
  mad r4.xyz, cb6[1].xyzx, v3.xxxx, r4.xyzx
  mad r4.xyz, cb6[3].xyzx, v3.zzzz, r4.xyzx
  add r4.xyz, r4.xyzx, cb6[4].xyzx
  movc r1.yzw, r1.yyyy, r4.xxyz, v3.xxyz
  add r1.yzw, r1.yyzw, -cb6[6].xxyz
  mul r4.yzw, r1.yyzw, cb6[5].xxyz
  mul r1.y, r4.y, l(0.250000)
  mul r1.z, cb6[0].z, l(0.500000)
  mad r1.w, -cb6[0].z, l(0.500000), l(0.250000)
  max r1.y, r1.z, r1.y
  min r4.x, r1.w, r1.y
  sample r5.xyzw, r4.xzwx, t2.xyzw, s0
  add r1.yzw, r4.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r6.xyzw, r1.yzwy, t2.xyzw, s0
  add r1.yzw, r4.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r4.xyzw, r1.yzwy, t2.xyzw, s0
  mov r7.xyz, v2.xyzx
  mov r7.w, l(1.000000)
  dp4 r5.x, r5.xyzw, r7.xyzw
  dp4 r5.y, r6.xyzw, r7.xyzw
  dp4 r5.z, r4.xyzw, r7.xyzw
else
  mov r4.xyz, v2.xyzx
  mov r4.w, l(1.000000)
  dp4 r5.x, cb2[38].xyzw, r4.xyzw
  dp4 r5.y, cb2[39].xyzw, r4.xyzw
  dp4 r5.z, cb2[40].xyzw, r4.xyzw
endif
add r1.yzw, r5.xxyz, v4.xxyz
max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
log r1.yzw, r1.yyzw
mul r1.yzw, r1.yyzw, l(0.000000, 0.416666657, 0.416666657, 0.416666657)
exp r1.yzw, r1.yyzw
mad r1.yzw, r1.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, v2.xyzx, cb2[0].xyzx
dp3 r0.x, v2.xyzx, r0.xyzx
max r0.xw, r0.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.y, r2.w, l(128.000000)
log r0.x, r0.x
mul r0.x, r0.x, r0.y
exp r0.x, r0.x
mul r0.x, r1.x, r0.x
mul r4.xyz, r2.xyzx, r3.xyzx
mul r3.xyz, r3.xyzx, cb0[3].xyzx
mul r0.xyz, r0.xxxx, r3.xyzx
mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
mad r0.xyz, r2.xyzx, r1.yzwy, r0.xyzx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb5[1].y
exp r0.w, -r0.w
min r0.w, r0.w, l(1.000000)
add r0.xyz, r0.xyzx, -cb5[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
ret
// Approximately 0 instruction slots used