// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6dff4e4be15aa592-ps.txt
// 3DMigoto: 6dff4e4be15aa592 |    Unity headers extracted from Hidden_AreaLight
//    Shader "Hidden/AreaLight" {
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry-1" }
// 1:     Pass 2/7 {
// 2:     Pass 4/7 {
// 4:     Pass 6/7 {
//          Tags { "QUEUE"="Geometry-1" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hidden_AreaLight:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 437 7 25
//   undeciphered1a: 12
//   Keywords { "SHADOWCUBEPLANES" "AMBIENT" "SPOTLIGHT" "AREA_LIGHT_SHADOWS" }
//   undeciphered2: 1 8 3 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 672
//   Vector 80 [_LightDir]
//   Vector 96 [_LightPos]
//   Vector 112 [_LightColor]
//   Float 208 [_ShadowReceiverWidth]
//   Float 212 [_ShadowReceiverDistanceScale]
//   Vector 216 [_ShadowLightWidth] 2
//   Float 224 [_ShadowBias]
//   Float 228 [_Hardness]
//   Float 368 [_AtanFov]
//   Vector 384 [_ShadowPlanes0]
//   Vector 400 [_ShadowPlanes1]
//   Vector 416 [_ShadowPlanes2]
//   Vector 432 [_ShadowPlanes3]
//   Vector 448 [_ShadowPlanes4]
//   Vector 464 [_ShadowPlanes5]
//   Float 576 [_ShadowPlaneFeather]
//   Matrix 240 [_ShadowProjectionMatrix]
//   Matrix 592 [_LightVerts]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_CameraGBufferTexture0] 2D 5
//   SetTexture 2 [_CameraGBufferTexture2] 2D 6
//   SetTexture 3 [_AmpDiffAmpSpecFresnel] 2D 4
//   SetTexture 4 [_TransformInv_Diffuse] 2D 3
//   SetTexture 5 [_AOTex_PrismAO] 2D 7
//   SetTexture 6 [_Shadowmap] 2D 1
//   SetTexture 7 [_ShadowmapDummy] 2D 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:07:48 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[40], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 14
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6dff4e4be15aa592-ps.txt

mul r12.w, -r12.x, r12.y
mad r13.xyz, -r12.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.x, cb1[5].z, v2.z
mul r0.xyz, r0.xxxx, v2.xyzx
div r1.xy, v1.xyxx, v1.wwww
sample r2.xyzw, r1.xyxx, t0.xyzw, s0
mad r0.w, cb1[7].x, r2.x, cb1[7].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r2.xyz, r0.yyyy, cb2[19].xyzx
mad r0.xyw, cb2[18].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb2[20].xyzx, r0.zzzz, r0.xywx
add r0.xyz, r0.xyzx, cb2[21].xyzx
sample r2.xyzw, r1.xyxx, t1.xyzw, s5
sample r3.xyzw, r1.xyxx, t2.xyzw, s6
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r0.w, r0.xyzx, cb0[24].xyzx
add r0.w, -r0.w, cb0[24].w
add r0.w, r0.w, l(0.000100)
add r1.z, cb0[36].x, cb0[36].x
add r0.w, r0.w, cb0[36].x
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
mul_sat r0.w, r0.w, r1.z
mad r1.w, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.w
dp3 r1.w, r0.xyzx, cb0[25].xyzx
add r1.w, -r1.w, cb0[25].w
add r1.w, r1.w, l(0.000100)
add r1.w, r1.w, cb0[36].x
mul_sat r1.w, r1.z, r1.w
mad r2.w, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.w
mul r0.w, r0.w, r1.w
dp3 r1.w, r0.xyzx, cb0[26].xyzx
add r1.w, -r1.w, cb0[26].w
add r1.w, r1.w, l(0.000100)
add r1.w, r1.w, cb0[36].x
mul_sat r1.w, r1.z, r1.w
mad r2.w, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.w
mul r0.w, r0.w, r1.w
dp3 r1.w, r0.xyzx, cb0[27].xyzx
add r1.w, -r1.w, cb0[27].w
add r1.w, r1.w, l(0.000100)
add r1.w, r1.w, cb0[36].x
mul_sat r1.w, r1.z, r1.w
mad r2.w, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.w
mul r0.w, r0.w, r1.w
dp3 r1.w, r0.xyzx, cb0[28].xyzx
add r1.w, -r1.w, cb0[28].w
add r1.w, r1.w, l(0.000100)
add r1.w, r1.w, cb0[36].x
mul_sat r1.w, r1.z, r1.w
mad r2.w, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.w
mul r0.w, r0.w, r1.w
dp3 r1.w, r0.xyzx, cb0[29].xyzx
add r1.w, -r1.w, cb0[29].w
add r1.w, r1.w, l(0.000100)
add r1.w, r1.w, cb0[36].x
mul_sat r1.z, r1.z, r1.w
mad r1.w, r1.z, l(-2.000000), l(3.000000)
mul r1.z, r1.z, r1.z
mul r1.z, r1.z, r1.w
mul r0.w, r0.w, r1.z
ne r1.z, r0.w, l(0.000000)
if_nz r1.z
  mul r4.xyzw, r0.yyyy, cb0[16].xyzw
  mad r4.xyzw, cb0[15].xyzw, r0.xxxx, r4.xyzw
  mad r4.xyzw, cb0[17].xyzw, r0.zzzz, r4.xyzw
  add r4.xyzw, r4.xyzw, cb0[18].xyzw
  div r4.xyz, r4.xyzx, r4.wwww
  ge r1.zw, |r4.xxxy|, l(0.000000, 0.000000, 1.000000, 1.000000)
  and r1.zw, r1.zzzw, l(0, 0, 0x3f800000, 0x3f800000)
  dp2 r1.z, r1.zwzz, r1.zwzz
  eq r1.z, r1.z, l(0.000000)
  if_nz r1.z
    sample r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), t7.xyzw, s2
    add r1.zw, |r4.xxxy|, l(0.000000, 0.000000, -0.600000, -0.600000)
    max r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    dp2 r1.z, r1.zwzz, r1.zwzz
    sqrt r1.z, r1.z
    mad r1.w, cb0[14].y, l(100.000000), l(1.000000)
    add r1.z, r1.z, l(0.0999999940)
    add r1.z, r1.z, r1.z
    min r1.z, r1.z, l(1.000000)
    mad r2.w, r1.z, l(-2.000000), l(3.000000)
    mul r1.z, r1.z, r1.z
    mad r1.z, -r2.w, r1.z, l(1.000000)
    max r1.z, r1.z, l(0.000000)
    mul r1.z, r1.z, r1.w
    add r1.w, cb0[23].x, l(-1.000000)
    add r2.w, r4.z, l(-1.000000)
    div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
    mul_sat r1.w, r1.w, r2.w
    mad r2.w, r1.w, l(-2.000000), l(3.000000)
    mul r1.w, r1.w, r1.w
    mul r1.w, r1.w, r2.w
    min r1.w, r1.w, l(1.000000)
    mul_sat r1.z, r1.w, r1.z
    mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
    mad r6.xyzw, cb0[13].xxxx, l(-0.538364530, -0.668115079, -0.0770958737, -0.539549887), r4.xyxy
    sample_l r7.xyzw, r6.xyxx, t6.xyzw, s2, l(0.000000)
    add r1.w, -r7.x, l(1.000000)
    add r1.w, -r1.w, r4.z
    max r1.w, r1.w, l(0.000000)
    add r1.w, r1.w, r5.w
    sample_l r5.xyzw, r6.zwzz, t6.xyzw, s2, l(0.000000)
    add r2.w, -r5.x, l(1.000000)
    add r2.w, -r2.w, r4.z
    max r2.w, r2.w, l(0.000000)
    add r1.w, r1.w, r2.w
    mad r5.xyzw, cb0[13].xxxx, l(-0.340221405, -0.478210896, -0.558046520, 0.0139958598), r4.xyxy
    sample_l r6.xyzw, r5.xyxx, t6.xyzw, s2, l(0.000000)
    add r2.w, -r6.x, l(1.000000)
    add r2.w, -r2.w, r4.z
    max r2.w, r2.w, l(0.000000)
    add r1.w, r1.w, r2.w
    sample_l r5.xyzw, r5.zwzz, t6.xyzw, s2, l(0.000000)
    add r2.w, -r5.x, l(1.000000)
    add r2.w, -r2.w, r4.z
    max r2.w, r2.w, l(0.000000)
    add r1.w, r1.w, r2.w
    mad r5.xyzw, cb0[13].xxxx, l(-0.105644, -0.919103086, -0.834365129, -0.475075513), r4.xyxy
    sample_l r6.xyzw, r5.xyxx, t6.xyzw, s2, l(0.000000)
    add r2.w, -r6.x, l(1.000000)
    add r2.w, -r2.w, r4.z
    max r2.w, r2.w, l(0.000000)
    add r1.w, r1.w, r2.w
    sample_l r5.xyzw, r5.zwzz, t6.xyzw, s2, l(0.000000)
    add r2.w, -r5.x, l(1.000000)
    add r2.w, -r2.w, r4.z
    max r2.w, r2.w, l(0.000000)
    add r1.w, r1.w, r2.w
    mad r5.xyzw, cb0[13].xxxx, l(-0.995993674, -0.0540134013, 0.174773604, -0.936202), r4.xyxy
    sample_l r6.xyzw, r5.xyxx, t6.xyzw, s2, l(0.000000)
    add r2.w, -r6.x, l(1.000000)
    add r2.w, -r2.w, r4.z
    max r2.w, r2.w, l(0.000000)
    add r1.w, r1.w, r2.w
    sample_l r5.xyzw, r5.zwzz, t6.xyzw, s2, l(0.000000)
    add r2.w, -r5.x, l(1.000000)
    add r2.w, -r2.w, r4.z
    max r2.w, r2.w, l(0.000000)
    add r1.w, r1.w, r2.w
    mad r5.xyzw, cb0[13].xxxx, l(-0.364229709, -0.926432, 0.171968207, -0.679880202), r4.xyxy
    sample_l r6.xyzw, r5.xyxx, t6.xyzw, s2, l(0.000000)
    add r2.w, -r6.x, l(1.000000)
    add r2.w, -r2.w, r4.z
    max r2.w, r2.w, l(0.000000)
    add r1.w, r1.w, r2.w
    sample_l r5.xyzw, r5.zwzz, t6.xyzw, s2, l(0.000000)
    add r2.w, -r5.x, l(1.000000)
    add r2.w, -r2.w, r4.z
    max r2.w, r2.w, l(0.000000)
    add r1.w, r1.w, r2.w
    mul r1.w, r1.w, cb0[13].y
    div r2.w, cb0[14].x, r4.w
    add r2.w, -r2.w, r4.z
    add r2.w, -r2.w, l(1.000000)
    min r1.w, r1.w, l(1.000000)
    add r3.w, -cb0[13].z, cb0[13].w
    mad r1.w, r1.w, r3.w, cb0[13].z
    mad r5.xyzw, r1.wwww, l(0.0297119506, 0.890521109, 0.249529794, 0.732075), r4.xyxy
    sample_c_lz r3.w, r5.xyxx, t6.xxxx, s1, r2.w
    sample_c_lz r4.z, r5.zwzz, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    mad r5.xyzw, r1.wwww, l(-0.346920609, 0.643783629, -0.0187890902, 0.482739389), r4.xyxy
    sample_c_lz r4.z, r5.xyxx, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    sample_c_lz r4.z, r5.zwzz, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    mad r5.xyzw, r1.wwww, l(-0.272521287, 0.896188, -0.681433618, 0.648048103), r4.xyxy
    sample_c_lz r4.z, r5.xyxx, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    sample_c_lz r4.z, r5.zwzz, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    mad r5.xyzw, r1.wwww, l(0.415204495, 0.279417187, 0.131055400, 0.267592490), r4.xyxy
    sample_c_lz r4.z, r5.xyxx, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    sample_c_lz r4.z, r5.zwzz, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    mad r5.xyzw, r1.wwww, l(0.534474373, 0.562441111, 0.838568926, 0.513734818), r4.xyxy
    sample_c_lz r4.z, r5.xyxx, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    sample_c_lz r4.z, r5.zwzz, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    mad r5.xyzw, r1.wwww, l(0.604505181, 0.0839385688, 0.464316308, 0.868464172), r4.xyxy
    sample_c_lz r4.z, r5.xyxx, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    sample_c_lz r4.z, r5.zwzz, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    mad r5.xyzw, r1.wwww, l(0.335507, -0.110113, 0.0300766900, -0.000707531872), r4.xyxy
    sample_c_lz r4.z, r5.xyxx, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    sample_c_lz r4.z, r5.zwzz, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    mad r5.xyzw, r1.wwww, l(0.807753682, 0.255166411, -0.152149796, 0.242952093), r4.xyxy
    sample_c_lz r4.z, r5.xyxx, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    sample_c_lz r4.z, r5.zwzz, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    mad r5.xyzw, r1.wwww, l(-0.299761713, 0.0234926995, 0.258777887, -0.422691494), r4.xyxy
    sample_c_lz r4.z, r5.xyxx, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    sample_c_lz r4.z, r5.zwzz, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    mad r5.xyzw, r1.wwww, l(-0.0144821396, -0.272035807, -0.393777907, -0.228529), r4.xyxy
    sample_c_lz r4.z, r5.xyxx, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    sample_c_lz r4.z, r5.zwzz, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    mad r5.xyzw, r1.wwww, l(-0.783317626, 0.173729897, -0.444753706, 0.258274794), r4.xyxy
    sample_c_lz r4.z, r5.xyxx, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    sample_c_lz r4.z, r5.zwzz, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    mad r5.xyzw, r1.wwww, l(-0.903074324, 0.406874, -0.729588, -0.211521506), r4.xyxy
    sample_c_lz r4.z, r5.xyxx, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    sample_c_lz r4.z, r5.zwzz, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    mad r5.xyzw, r1.wwww, l(-0.538364530, -0.668115079, -0.0770958737, -0.539549887), r4.xyxy
    sample_c_lz r4.z, r5.xyxx, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    sample_c_lz r4.z, r5.zwzz, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    mad r5.xyzw, r1.wwww, l(-0.340221405, -0.478210896, -0.558046520, 0.0139958598), r4.xyxy
    sample_c_lz r4.z, r5.xyxx, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    sample_c_lz r4.z, r5.zwzz, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    mad r5.xyzw, r1.wwww, l(-0.105644, -0.919103086, -0.834365129, -0.475075513), r4.xyxy
    sample_c_lz r4.z, r5.xyxx, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    sample_c_lz r4.z, r5.zwzz, t6.xxxx, s1, r2.w
    add r3.w, r3.w, r4.z
    mad r4.xyzw, r1.wwww, l(-0.995993674, -0.0540134013, 0.174773604, -0.936202), r4.xyxy
    sample_c_lz r1.w, r4.xyxx, t6.xxxx, s1, r2.w
    add r1.w, r1.w, r3.w
    sample_c_lz r2.w, r4.zwzz, t6.xxxx, s1, r2.w
    add r1.w, r1.w, r2.w
    mul r1.z, r1.z, r1.w
    mul r1.z, r1.z, l(0.031250)
  else
    mov r1.z, l(0)
  endif
  ne r1.w, r1.z, l(0.000000)
  if_nz r1.w
    add r4.xyz, -r0.xyzx, r13.xyzx
    dp3 r1.w, r4.xyzx, r4.xyzx
    rsq r1.w, r1.w
    mul r4.xyz, r1.wwww, r4.xyzx
    dp3 r1.w, r4.xyzx, -cb0[5].xyzx
    mad r4.xyz, cb0[5].xyzx, r1.wwww, r4.xyzx
    dp3 r2.w, r4.xyzx, r4.xyzx
    rsq r2.w, r2.w
    mul r4.xyz, r2.wwww, r4.xyzx
    mul r5.xyz, r4.yzxy, -cb0[5].zxyz
    mad r5.xyz, -cb0[5].yzxy, r4.zxyz, -r5.xyzx
    dp3 r2.w, r5.xyzx, r5.xyzx
    rsq r2.w, r2.w
    mul r5.xyz, r2.wwww, r5.xyzx
    add r6.xz, -r0.zzzz, cb0[39].xxyx
    add r7.xyz, -r0.xxxx, cb0[37].xyzx
    add r8.xyz, -r0.yyyy, cb0[38].xzyx
    add r9.xw, -r0.zzzz, cb0[39].zzzw
    add r9.y, -r0.x, cb0[37].w
    add r9.z, -r0.y, cb0[38].w
    mov r6.y, r7.x
    mov r6.w, r8.x
    dp3 r10.x, r6.ywxy, r4.xyzx
    dp3 r2.w, r6.ywxy, r5.xyzx
    dp3 r10.y, r6.ywxy, -cb0[5].xyzx
    mov r6.x, r7.y
    mov r6.y, r8.z
    dp3 r7.x, r6.xyzx, r4.xyzx
    dp3 r3.w, r6.xyzx, r5.xyzx
    dp3 r7.y, r6.xyzx, -cb0[5].xyzx
    mov r8.x, r7.z
    mov r8.z, r9.x
    dp3 r6.x, r8.xyzx, r4.xyzx
    dp3 r4.w, r8.xyzx, r5.xyzx
    dp3 r6.y, r8.xyzx, -cb0[5].xyzx
    dp3 r4.x, r9.yzwy, r4.xyzx
    dp3 r4.z, r9.yzwy, r5.xyzx
    dp3 r4.y, r9.yzwy, -cb0[5].xyzx
    add r5.x, -|r1.w|, l(1.000000)
    sqrt r5.x, r5.x
    mad r5.y, |r1.w|, l(-0.0187292993), l(0.074261)
    mad r5.y, r5.y, |r1.w|, l(-0.212114394)
    mad r5.y, r5.y, |r1.w|, l(1.57072878)
    mul r5.z, r5.x, r5.y
    mad r5.z, r5.z, l(-2.000000), l(3.14159274)
    lt r1.w, r1.w, -r1.w
    and r1.w, r1.w, r5.z
    mad r1.w, r5.y, r5.x, r1.w
    mul r5.y, r1.w, l(0.636942625)
    mov r5.xw, l(0.330000,0,0,1.000000)
    sample r8.xyzw, r5.xyxx, t3.xyzw, s4
    sample r9.xyzw, r5.xyxx, t4.xyzw, s3
    dp2 r11.x, r10.xyxx, r9.xwxx
    mul r11.y, r2.w, r9.z
    mov r5.z, r9.y
    dp2 r11.z, r10.xyxx, r5.zwzz
    dp2 r10.x, r7.xyxx, r9.xwxx
    mul r10.y, r3.w, r9.z
    dp2 r10.z, r7.xyxx, r5.zwzz
    dp2 r7.x, r6.xyxx, r9.xwxx
    mul r7.y, r4.w, r9.z
    dp2 r7.z, r6.xyxx, r5.zwzz
    dp2 r6.x, r4.xyxx, r9.xwxx
    mul r6.y, r4.z, r9.z
    dp2 r6.z, r4.xyxx, r5.zwzz
    lt r1.w, l(0.000000), r11.z
    and r2.w, r1.w, l(1)
    lt r3.w, l(0.000000), r10.z
    movc r1.w, r1.w, l(3), l(2)
    movc r1.w, r3.w, r1.w, r2.w
    lt r2.w, l(0.000000), r7.z
    iadd r3.w, r1.w, l(4)
    movc r1.w, r2.w, r3.w, r1.w
    lt r2.w, l(0.000000), r6.z
    iadd r3.w, r1.w, l(8)
    movc r1.w, r2.w, r3.w, r1.w
    switch r1.w
      case l(0)
      mov r4.xyz, r6.xyzx
      mov r1.w, l(0)
      break
      case l(1)
      mul r5.xyz, r10.xyzx, r11.zzzz
      mad r10.xyz, -r10.zzzz, r11.xyzx, r5.xyzx
      mul r5.xyz, r6.xyzx, r11.zzzz
      mad r7.xyz, -r6.zzzz, r11.xyzx, r5.xyzx
      mov r4.xyz, r6.xyzx
      mov r1.w, l(3)
      break
      case l(2)
      mul r5.xyz, r11.xyzx, r10.zzzz
      mad r11.xyz, -r11.zzzz, r10.xyzx, r5.xyzx
      mul r5.xyz, r7.xyzx, r10.zzzz
      mad r7.xyz, -r7.zzzz, r10.xyzx, r5.xyzx
      mov r4.xyz, r6.xyzx
      mov r1.w, l(3)
      break
      case l(3)
      mul r5.xyz, r7.xyzx, r10.zzzz
      mad r7.xyz, -r7.zzzz, r10.xyzx, r5.xyzx
      mul r5.xyz, r6.xyzx, r11.zzzz
      mad r4.xyz, -r6.zzzz, r11.xyzx, r5.xyzx
      mov r1.w, l(4)
      break
      case l(4)
      mul r5.xyz, r6.xyzx, r7.zzzz
      mad r11.xyz, -r6.zzzz, r7.xyzx, r5.xyzx
      mul r5.xyz, r10.xyzx, r7.zzzz
      mad r10.xyz, -r10.zzzz, r7.xyzx, r5.xyzx
      mov r4.xyz, r6.xyzx
      mov r1.w, l(3)
      break
      case l(5)
      mov r4.xyz, r6.xyzx
      mov r1.w, l(0)
      break
      case l(6)
      mul r5.xyz, r11.xyzx, r10.zzzz
      mad r11.xyz, -r11.zzzz, r10.xyzx, r5.xyzx
      mul r5.xyz, r6.xyzx, r7.zzzz
      mad r4.xyz, -r6.zzzz, r7.xyzx, r5.xyzx
      mov r1.w, l(4)
      break
      case l(7)
      mul r5.xyz, r6.xyzx, r11.zzzz
      mad r5.xyz, -r6.zzzz, r11.xyzx, r5.xyzx
      mul r8.yzw, r6.xxyz, r7.zzzz
      mad r4.xyz, -r6.zzzz, r7.xyzx, r8.yzwy
      mov r6.xyz, r5.xyzx
      mov r1.w, l(5)
      break
      case l(8)
      mul r5.xyz, r11.xyzx, r6.zzzz
      mad r11.xyz, -r11.zzzz, r6.xyzx, r5.xyzx
      mul r5.xyz, r7.xyzx, r6.zzzz
      mad r10.xyz, -r7.zzzz, r6.xyzx, r5.xyzx
      mov r7.xyz, r6.xyzx
      mov r4.xyz, r6.xyzx
      mov r1.w, l(3)
      break
      case l(9)
      mul r5.xyz, r10.xyzx, r11.zzzz
      mad r10.xyz, -r10.zzzz, r11.xyzx, r5.xyzx
      mul r5.xyz, r7.xyzx, r6.zzzz
      mad r7.xyz, -r7.zzzz, r6.xyzx, r5.xyzx
      mov r4.xyz, r6.xyzx
      mov r1.w, l(4)
      break
      case l(10)
      mov r4.xyz, r6.xyzx
      mov r1.w, l(0)
      break
      case l(11)
      mul r5.xyz, r7.xyzx, r6.zzzz
      mad r4.xyz, -r7.zzzz, r6.xyzx, r5.xyzx
      mul r5.xyz, r7.xyzx, r10.zzzz
      mad r7.xyz, -r7.zzzz, r10.xyzx, r5.xyzx
      mov r1.w, l(5)
      break
      case l(12)
      mul r5.xyz, r10.xyzx, r7.zzzz
      mad r10.xyz, -r10.zzzz, r7.xyzx, r5.xyzx
      mul r5.xyz, r11.xyzx, r6.zzzz
      mad r11.xyz, -r11.zzzz, r6.xyzx, r5.xyzx
      mov r4.xyz, r6.xyzx
      mov r1.w, l(4)
      break
      case l(13)
      mul r5.xyz, r10.xyzx, r7.zzzz
      mad r5.xyz, -r10.zzzz, r7.xyzx, r5.xyzx
      mul r8.yzw, r10.xxyz, r11.zzzz
      mad r10.xyz, -r10.zzzz, r11.xyzx, r8.yzwy
      mov r4.xyz, r7.xyzx
      mov r1.w, l(5)
      mov r7.xyz, r5.xyzx
      break
      case l(14)
      mul r5.xyz, r11.xyzx, r6.zzzz
      mad r5.xyz, -r11.zzzz, r6.xyzx, r5.xyzx
      mul r8.yzw, r11.xxyz, r10.zzzz
      mad r11.xyz, -r11.zzzz, r10.xyzx, r8.yzwy
      mov r4.xyz, r6.xyzx
      mov r6.xyz, r5.xyzx
      mov r1.w, l(5)
      break
      case l(15)
      mov r4.xyz, r6.xyzx
      mov r1.w, l(4)
      break
    endswitch
    if_nz r1.w
      dp3 r2.w, r11.xyzx, r11.xyzx
      rsq r2.w, r2.w
      mul r5.xyz, r2.wwww, r11.xyzx
      dp3 r2.w, r10.xyzx, r10.xyzx
      rsq r2.w, r2.w
      mul r8.yzw, r2.wwww, r10.xxyz
      dp3 r2.w, r7.xyzx, r7.xyzx
      rsq r2.w, r2.w
      mul r7.xyz, r2.wwww, r7.xyzx
      dp3 r2.w, r4.xyzx, r4.xyzx
      rsq r2.w, r2.w
      mul r4.xyz, r2.wwww, r4.xyzx
      ieq r9.xyz, r1.wwww, l(3, 4, 5, 0)
      dp3 r2.w, r6.xyzx, r6.xyzx
      rsq r2.w, r2.w
      mul r10.xyz, r2.wwww, r6.xyzx
      movc r10.xyz, r9.yyyy, r5.xyzx, r10.xyzx
      movc r4.xyz, r9.xxxx, r5.xyzx, r4.xyzx
      movc r6.xyz, r9.xxxx, r6.xyzx, r10.xyzx
      dp3 r2.w, r5.xyzx, r8.yzwy
      max r2.w, r2.w, l(-0.999900)
      add r3.w, -|r2.w|, l(1.000000)
      sqrt r3.w, r3.w
      mad r4.w, |r2.w|, l(-0.0187292993), l(0.074261)
      mad r4.w, r4.w, |r2.w|, l(-0.212114394)
      mad r4.w, r4.w, |r2.w|, l(1.57072878)
      mul r5.w, r3.w, r4.w
      mad r5.w, r5.w, l(-2.000000), l(3.14159274)
      lt r2.w, r2.w, -r2.w
      and r2.w, r2.w, r5.w
      mad r2.w, r4.w, r3.w, r2.w
      sincos r3.w, null, r2.w
      div r2.w, r2.w, r3.w
      mul r3.w, r5.y, r8.y
      mad r3.w, r5.x, r8.z, -r3.w
      dp3 r4.w, r8.yzwy, r7.xyzx
      max r4.w, r4.w, l(-0.999900)
      add r5.w, -|r4.w|, l(1.000000)
      sqrt r5.w, r5.w
      mad r6.w, |r4.w|, l(-0.0187292993), l(0.074261)
      mad r6.w, r6.w, |r4.w|, l(-0.212114394)
      mad r6.w, r6.w, |r4.w|, l(1.57072878)
      mul r7.w, r5.w, r6.w
      mad r7.w, r7.w, l(-2.000000), l(3.14159274)
      lt r4.w, r4.w, -r4.w
      and r4.w, r4.w, r7.w
      mad r4.w, r6.w, r5.w, r4.w
      sincos r5.w, null, r4.w
      div r4.w, r4.w, r5.w
      mul r5.w, r7.x, r8.z
      mad r5.w, r8.y, r7.y, -r5.w
      mul r4.w, r4.w, r5.w
      mad r2.w, r2.w, r3.w, r4.w
      dp3 r3.w, r7.xyzx, r4.xyzx
      max r3.w, r3.w, l(-0.999900)
      add r4.w, -|r3.w|, l(1.000000)
      sqrt r4.w, r4.w
      mad r5.w, |r3.w|, l(-0.0187292993), l(0.074261)
      mad r5.w, r5.w, |r3.w|, l(-0.212114394)
      mad r5.w, r5.w, |r3.w|, l(1.57072878)
      mul r6.w, r4.w, r5.w
      mad r6.w, r6.w, l(-2.000000), l(3.14159274)
      lt r3.w, r3.w, -r3.w
      and r3.w, r3.w, r6.w
      mad r3.w, r5.w, r4.w, r3.w
      sincos r4.w, null, r3.w
      div r3.w, r3.w, r4.w
      mul r4.w, r4.x, r7.y
      mad r4.w, r7.x, r4.y, -r4.w
      mad r2.w, r3.w, r4.w, r2.w
      uge r1.w, r1.w, l(4)
      dp3 r3.w, r4.xyzx, r6.xyzx
      max r3.w, r3.w, l(-0.999900)
      add r4.z, -|r3.w|, l(1.000000)
      sqrt r4.z, r4.z
      mad r4.w, |r3.w|, l(-0.0187292993), l(0.074261)
      mad r4.w, r4.w, |r3.w|, l(-0.212114394)
      mad r4.w, r4.w, |r3.w|, l(1.57072878)
      mul r5.w, r4.z, r4.w
      mad r5.w, r5.w, l(-2.000000), l(3.14159274)
      lt r3.w, r3.w, -r3.w
      and r3.w, r3.w, r5.w
      mad r3.w, r4.w, r4.z, r3.w
      sincos r4.z, null, r3.w
      div r3.w, r3.w, r4.z
      mul r4.y, r4.y, r6.x
      mad r4.x, r4.x, r6.y, -r4.y
      mad r3.w, r3.w, r4.x, r2.w
      movc r1.w, r1.w, r3.w, r2.w
      dp3 r2.w, r6.xyzx, r5.xyzx
      max r2.w, r2.w, l(-0.999900)
      add r3.w, -|r2.w|, l(1.000000)
      sqrt r3.w, r3.w
      mad r4.x, |r2.w|, l(-0.0187292993), l(0.074261)
      mad r4.x, r4.x, |r2.w|, l(-0.212114394)
      mad r4.x, r4.x, |r2.w|, l(1.57072878)
      mul r4.y, r3.w, r4.x
      mad r4.y, r4.y, l(-2.000000), l(3.14159274)
      lt r2.w, r2.w, -r2.w
      and r2.w, r2.w, r4.y
      mad r2.w, r4.x, r3.w, r2.w
      sincos r3.w, null, r2.w
      div r2.w, r2.w, r3.w
      mul r3.w, r5.x, r6.y
      mad r3.w, r6.x, r5.y, -r3.w
      mad r2.w, r2.w, r3.w, r1.w
      movc r1.w, r9.z, r2.w, r1.w
      mul r1.w, r1.w, l(0.159150)
      max r1.w, r1.w, l(0.000000)
    else
      mov r1.w, l(0)
    endif
    mul r1.w, r8.x, r1.w
    mul r2.yzw, r2.xxyz, r1.wwww
    mul r2.yzw, r1.zzzz, r2.yyzw
    mul r4.xyz, r0.wwww, cb0[7].xyzx
    mul r2.yzw, r2.yyzw, r4.xxyz
  else
    mov r2.yzw, l(0,0,0,0)
  endif
else
  mov r2.yzw, l(0,0,0,0)
endif
sample r1.xyzw, r1.xyxx, t5.xyzw, s7
add r0.xyz, -r0.xyzx, cb0[6].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r0.w, -r1.x, l(1.000000)
add r1.x, r1.x, r1.x
mul r1.x, r2.x, r1.x
mad r1.x, r1.x, r2.x, l(1.000000)
dp3 r1.y, r2.yzwy, l(0.220000, 0.707000, 0.071000, 0.000000)
dp3 r0.x, r3.xyzx, r0.xyzx
mul_sat r0.x, r0.x, r1.y
add r0.y, -r0.w, r1.x
mad r0.x, r0.x, r0.y, r0.w
mul o0.xyzw, r0.xxxx, r2.yzww
ret
// Approximately 0 instruction slots used