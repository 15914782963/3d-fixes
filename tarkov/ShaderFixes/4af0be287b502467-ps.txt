// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 4af0be287b502467-ps.txt
// 3DMigoto: 4af0be287b502467 |    Unity headers extracted from Relief Pack - Bonus Shaders_Water_2 Layers VertexPaint FlowMap
//    Shader "Relief Pack - Bonus Shaders/Water/2 Layers VertexPaint FlowMap" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "RenderType"="Opaque" }
//        Pass 4/4 {
//          Name "META"
//          Tags { "LIGHTMODE"="META" "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Relief Pack - Bonus Shaders_Water_2 Layers VertexPaint FlowMap:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 149 10 0
//   undeciphered1a: 5
//   Keywords { "RTP_PM_SHADING" }
//   undeciphered2: 1 7 3 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 272
//   Vector 64 [_Color]
//   Vector 96 [_Color2]
//   Float 148 [TERRAIN_LayerWetStrength]
//   Float 152 [TERRAIN_WaterLevelSlopeDamp]
//   Float 156 [TERRAIN_ExtrudeHeight]
//   Float 164 [TERRAIN_DropletsSpeed]
//   Float 168 [TERRAIN_RainIntensity]
//   Float 172 [TERRAIN_WetDropletsStrength]
//   Float 176 [TERRAIN_Refraction]
//   Float 180 [TERRAIN_WetRefraction]
//   Float 184 [TERRAIN_Flow]
//   Float 188 [TERRAIN_FlowScale]
//   Float 192 [TERRAIN_RippleScale]
//   Float 196 [TERRAIN_FlowSpeed]
//   Float 200 [TERRAIN_FlowSpeedMap]
//   Float 204 [TERRAIN_WaterLevel]
//   Vector 208 [TERRAIN_WaterColor]
//   Float 224 [TERRAIN_WaterEdge]
//   Float 232 [unity_OneOverOutputBoost]
//   Float 236 [unity_MaxOutputValue]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityMetaPass" 48
//   VectorBool 16 [unity_MetaFragmentControl] 4
//   SetTexture 0 [_HeightMap] 2D 1
//   SetTexture 1 [_HeightMap2] 2D 3
//   SetTexture 2 [TERRAIN_FlowingMap] 2D 6
//   SetTexture 3 [_FlowMap] 2D 4
//   SetTexture 4 [TERRAIN_RippleMap] 2D 5
//   SetTexture 5 [_MainTex] 2D 0
//   SetTexture 6 [_MainTex2] 2D 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityMetaPass" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:03:19 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   x z
// TEXCOORD                 4   xyzw        6     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xz
dcl_input_ps linear v6.zw
dcl_output o0.xyzw
dcl_temps 7
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 4af0be287b502467-ps.txt

mul r5.w, -r5.x, r5.y
mad r6.xyz, -r5.wwww, cb10[0].xyzw, cb1[4].xyzw

mul r0.xy, v6.zwzz, l(4.000000, 4.000000, 0.000000, 0.000000)
max r0.xy, r0.xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
min r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r0.xy, r0.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
mov r1.x, v2.w
mov r1.y, v3.w
mov r1.z, v4.w
add r1.xyz, -r1.xyzx, r6.xyzx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r1.xyz, r0.zzzz, r1.xyzx
mul r2.xyz, r1.yyyy, v3.xyzx
mad r1.xyw, v2.xyxz, r1.xxxx, r2.xyxz
mad r1.xyz, v4.xyzx, r1.zzzz, r1.xywx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r1.xy, r0.zzzz, r1.xyxx
mad r0.z, r1.z, r0.z, l(0.420000)
div r0.zw, r1.xxxy, r0.zzzz
sample r1.xyzw, v1.xyxx, t1.xwyz, s3
mul r1.z, cb0[9].w, l(0.500000)
mad r1.w, r1.y, cb0[9].w, -r1.z
mad r2.xy, r1.wwww, r0.zwzz, v1.xyxx
sample r3.xyzw, v1.xyxx, t0.xyzw, s1
mad r1.z, r3.w, cb0[9].w, -r1.z
mov r1.x, r3.w
mad r0.zw, r1.zzzz, r0.zzzw, v1.xxxy
add r1.zw, -r0.zzzw, r2.xxxy
add r2.xy, r1.xyxx, l(0.010000, 0.010000, 0.000000, 0.000000)
mad r2.zw, v5.xxxx, l(0.000000, 0.000000, 1.000000, -1.000000), l(0.000000, 0.000000, 0.000000, 1.000000)
mul r2.xy, r2.xyxx, r2.zwzz
mul r2.xy, r2.xyxx, r2.xyxx
mul r2.xy, r2.xyxx, r2.xyxx
mul r2.xy, r2.xyxx, r2.xyxx
dp2 r2.z, r2.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
div r2.xy, r2.xyxx, r2.zzzz
mad r0.zw, r2.yyyy, r1.zzzw, r0.zzzw
add r1.zw, r0.zzzw, -v1.xxxy
dp2 r1.x, r2.xyxx, r1.xyxx
dp2 r1.y, v6.zwzz, v6.zwzz
min r1.y, r1.y, l(1.000000)
add r1.y, -r1.y, l(1.000000)
sqrt r1.y, r1.y
add r1.y, -r1.y, l(1.000000)
mul_sat r1.y, r1.y, cb0[9].z
mul r2.zw, v1.xxxy, l(0.000000, 0.000000, 0.125000, 0.125000)
sample r3.xyzw, r2.zwzz, t2.xyzw, s6
add r2.z, -cb0[9].y, l(1.000000)
dp2 r2.z, r3.wwww, r2.zzzz
mad_sat r2.z, v5.z, l(2.000000), -r2.z
dp2 r2.z, cb0[9].yyyy, r2.zzzz
mov_sat r2.w, r2.z
add_sat r2.z, r2.z, l(-1.000000)
add r3.x, r2.w, l(-1.000000)
add r3.x, -r1.y, r3.x
mad r1.y, -r1.y, l(4.000000), l(1.000000)
max r1.y, r1.y, l(0.000000)
mul r1.y, r1.y, r2.z
mad r2.z, r3.x, l(2.000000), cb0[12].w
max r2.z, r2.z, l(0.000000)
min r2.z, r2.z, l(2.000000)
add r2.z, -r1.x, r2.z
mul_sat r2.z, r2.z, cb0[14].x
mul r2.z, r2.z, r2.z
mad r3.x, -r2.z, l(0.500000), l(1.000000)
mad r1.zw, r3.xxxx, r1.zzzw, v1.xxxy
mul r1.zw, r1.zzzw, cb0[11].wwww
sample r3.xyzw, r1.zwzz, t3.xyzw, s4
mul r1.zw, r1.zzzw, cb0[11].wwww
mad r3.xyzw, r3.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
add r3.xy, -r3.zwzz, r3.xyxx
mad r3.xy, v5.xxxx, r3.xyxx, r3.zwzz
mov r4.xw, cb0[12].zzzz
mov r4.yz, l(0,1.000000,-1.000000,0)
mul r3.xy, r3.xyxx, r4.xyxx
mad r0.xy, r3.xyxx, r4.zwzz, r0.xyxx
mul r3.x, cb0[11].w, cb0[12].y
mul r0.xy, r0.xyxx, r3.xxxx
mul r3.x, cb1[0].x, l(4.000000)
frc r3.x, r3.x
mad r3.y, r3.x, l(2.000000), l(0.500000)
add r3.x, r3.x, r3.x
frc r3.xy, r3.xyxx
mul r3.yz, r0.xxyx, r3.yyyy
mad r3.yz, r3.yyzy, l(0.000000, 1.100000, 1.100000, 0.000000), r1.zzwz
mad r1.zw, r3.xxxx, r0.xxxy, r1.zzzw
mad r3.x, r3.x, l(2.000000), l(-1.000000)
sample r4.xyzw, r1.zwzz, t2.xyzw, s6
mad r1.zw, r4.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
sample r4.xyzw, r3.yzyy, t2.xyzw, s6
mad r3.yz, r4.wwyw, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
add r3.yz, -r1.zzwz, r3.yyzy
mad r1.zw, |r3.xxxx|, r3.yyyz, r1.zzzw
add r3.x, -r2.w, l(1.000000)
mad_sat r1.x, -r3.x, r1.x, r2.w
mul r2.w, r1.x, r1.x
mul r2.w, r2.w, cb0[11].z
mul r2.w, r2.z, r2.w
mul r2.w, r1.x, r2.w
add r1.x, r1.x, r1.x
min r1.x, r1.x, l(1.000000)
mad r1.x, -r1.x, l(0.300000), l(1.000000)
mul r1.zw, r1.zzzw, r2.wwww
mul r0.xy, r0.xyxx, r1.zwzz
mul r0.xy, r0.xyxx, l(0.100000, 0.100000, 0.000000, 0.000000)
div r0.xy, r0.xyxx, cb0[11].wwww
mad r0.xy, v1.xyxx, cb0[12].xxxx, r0.xyxx
add r3.xy, r0.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
sample r4.xyzw, r0.xyxx, t4.xyzw, s5
sample r3.xyzw, r3.xyxx, t4.xyzw, s5
mad r0.x, cb1[0].x, cb0[10].y, r3.w
frc r0.x, r0.x
mul r0.y, r1.y, cb0[10].z
mul r1.y, r1.y, l(4.000000)
mad r0.y, r0.y, l(0.800000), l(0.200000)
add_sat r2.w, -r0.x, r0.y
add r0.x, r3.z, r0.x
add r0.x, r0.x, l(-1.000000)
mul r0.x, r0.x, l(9.000000)
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(3.000000)
mul r0.x, r0.x, l(3.141500)
sincos r0.x, null, r0.x
mul r2.w, r3.z, r2.w
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r0.x, r0.x, r2.w
mul r3.xy, r0.xxxx, r3.xyxx
mul r3.xy, r3.xyxx, l(0.350000, 0.350000, 0.000000, 0.000000)
mad r0.x, cb1[0].x, cb0[10].y, r4.w
frc r0.x, r0.x
add_sat r0.y, -r0.x, r0.y
add r0.x, r4.z, r0.x
add r0.x, r0.x, l(-1.000000)
mul r0.x, r0.x, l(9.000000)
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(3.000000)
mul r0.x, r0.x, l(3.141500)
sincos r0.x, null, r0.x
mul r0.y, r4.z, r0.y
mad r3.zw, r4.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r0.x, r0.x, r0.y
mul r0.xy, r0.xxxx, r3.zwzz
mad r0.xy, r0.xyxx, l(0.350000, 0.350000, 0.000000, 0.000000), r3.xyxx
add r2.w, -cb0[10].w, l(1.000000)
mad r2.w, r2.z, r2.w, cb0[10].w
mul r1.y, r1.y, r2.w
mad r0.xy, r0.xyxx, r1.yyyy, r1.zwzz
mul r0.xy, r0.xyxx, cb0[11].xxxx
max r1.y, r2.z, cb0[11].y
mul r1.z, r2.z, cb0[13].w
mad r0.xy, r0.xyxx, r1.yyyy, r0.zwzz
sample r3.xyzw, r0.xyxx, t6.xyzw, s2
sample r0.xyzw, r0.xyxx, t5.xyzw, s0
add r4.xyz, cb0[6].xyzx, cb0[6].xyzx
mul r3.xyz, r3.xyzx, r4.xyzx
mul r2.yzw, r2.yyyy, r3.xxyz
add r3.xyz, cb0[4].xyzx, cb0[4].xyzx
mul r0.xyz, r0.xyzx, r3.xyzx
mad r0.xyz, r2.xxxx, r0.xyzx, r2.yzwy
add r2.xyz, -r0.xyzx, cb0[13].xyzx
mad r0.xyz, r1.zzzz, r2.xyzx, r0.xyzx
mul r0.xyz, r1.xxxx, r0.xyzx
log r0.xyz, r0.xyzx
mov_sat r0.w, cb0[14].z
mul r0.xyz, r0.xyzx, r0.wwww
exp r0.xyz, r0.xyzx
min r0.xyz, r0.xyzx, cb0[14].wwww
mov r0.w, l(1.000000)
movc r0.xyzw, cb2[1].xxxx, r0.xyzw, l(0,0,0,0)
movc o0.xyzw, cb2[1].yyyy, l(0,0,0,0.0235294122), r0.xyzw
ret
// Approximately 0 instruction slots used