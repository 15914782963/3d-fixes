// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 89bf8adc977b9248-vs.txt
// 3DMigoto: 89bf8adc977b9248 |    Unity headers extracted from Custom_LaserBeam
//    Shader "Custom/LaserBeam" {
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/1 {
//          Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_LaserBeam:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201609010 19 0 0
//   undeciphered1a: 3
//   undeciphered2: 1 0 4 0 0 0
//   undeciphered3: 9 2 0 0 3 4
//   ConstBuffer "$Globals" 96
//   Float 48 [_Intensity]
//   Float 80 [_Distance]
//   Float 84 [_NoiseScale0]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 16 [_SinTime]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityPerDraw" 160
//   Matrix 0 [unity_ObjectToWorld]
//   ConstBuffer "UnityPerFrame" 384
//   Matrix 272 [unity_MatrixVP]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:11:32 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy
// COLOR                    0   xyzw        1     NONE   float
// TEXCOORD                 0   xy          2     NONE   float   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   x           2     NONE   float   x
// TEXCOORD                 1    yzw        2     NONE   float    yzw
// TEXCOORD                 2   xyz         3     NONE   float   xyz
//
vs_4_0
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_constantbuffer cb3[24], immediateIndexed
dcl_input v0.xy
dcl_input v2.x
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.x
dcl_output o2.yzw
dcl_output o3.xyz
dcl_temps 5
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 89bf8adc977b9248-vs.txt

mul r3.w, -r3.x, r3.y
mad r4.xyz, -r3.wwww, cb10[0].xyzw, cb1[4].xyzw

mul r0.xyz, v0.yyyy, cb2[2].xyzx
mad r0.xyz, r0.xyzx, cb0[5].xxxx, cb2[3].xyzx
add r1.xyz, -r0.yzxy, r4.yzxy
mul r2.xyz, r1.xyzx, cb2[2].zxyz
mad r1.xyz, cb2[2].yzxy, r1.yzxy, -r2.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mad r0.xyz, v0.xxxx, r1.xyzx, r0.xyzx
mul r1.xyzw, r0.yyyy, cb3[18].xyzw
mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
mul r0.xyz, r0.xyzx, cb0[5].yyyy
add o0.xyzw, r1.xyzw, cb3[20].xyzw
add r0.w, cb0[3].x, l(-1.000000)
mad o1.xyzw, v0.yyyy, r0.wwww, l(1.000000, 1.000000, 1.000000, 1.000000)
mad o2.yzw, cb1[0].xxxx, l(0.000000, 0.000000, -0.500000, 0.000000), r0.xxyz
mov o2.x, v2.x
mul r1.x, cb1[1].x, l(2.000000)
mov r1.y, l(0)
mov r1.z, cb1[0].x
mad o3.xyz, r0.xyzx, l(3.940000, 3.940000, 3.940000, 0.000000), r1.xyzx
ret
// Approximately 0 instruction slots used