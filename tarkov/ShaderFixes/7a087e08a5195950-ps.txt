// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7a087e08a5195950-ps.txt
// 3DMigoto: 7a087e08a5195950 | Matched 4 variants of 1 shaders: Transparent/BlurDistort Without Buffer
//
//       Unity headers extracted from Transparent_BlurDistort Without Buffer
//       Shader "Transparent/BlurDistort Without Buffer" {
//         Fallback "Reflective/VertexLit"
//         SubShader 1/1 {
//           LOD 300
//           Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//           Pass 2/7 {
//             Name "FORWARD"
//             Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent" "RenderType"="Transparent" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Transparent_BlurDistort Without Buffer:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 90 9 4
//      undeciphered1a: 9
// 4:   Keywords { "DIRECTIONAL" "GAMMA" "HDR" }
// 1:   Keywords { "DIRECTIONAL" "GAMMA" "LDR" }
// 8:   Keywords { "DIRECTIONAL" "HDR" "LINEAR" }
// 2:   Keywords { "DIRECTIONAL" "LDR" "LINEAR" }
//      undeciphered2: 1 6 4 6 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 1072
//      Vector 32 [_LightColor0]
//      Vector 48 [_SpecColor]
//      Vector 80 [_GFogColor]
//      Vector 928 [_Color]
//      Vector 944 [_ReflectColor]
//      Vector 976 [_EFT_Ambient]
//      Float 992 [_GlobalReflectionStrength]
//      Float 996 [_FogUsage]
//      Float 1024 [_Distort]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 752
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      Vector 720 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_MainTex] 2D 1
//      SetTexture 1 [_SpecTex] 2D 2
//      SetTexture 2 [_BumpMap] 2D 3
//      SetTexture 3 [_Cube] CUBE 4
//      SetTexture 4 [_GrabTexture] 2D 5
//      SetTexture 5 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:09:24 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xy w
// TEXCOORD                 5   xyz         6     NONE   float
// TEXCOORD                 6      w        6     NONE   float      w
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyz         8     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[65], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyw
dcl_input_ps linear v6.w
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7a087e08a5195950-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.y, v2.w
mov r0.z, v3.w
mov r0.w, v4.w
add r1.xyz, -r0.yzwy, r10.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, r1.xyzx
sample r3.xyzw, v1.xyxx, t0.xyzw, s1
mul r3.xyzw, r3.xyzw, cb0[58].xyzw
sample r4.xyzw, v1.xyxx, t1.xyzw, s2
mul r4.yzw, r3.xxyz, r4.xxxx
sample r5.xyzw, v1.zwzz, t2.xyzw, s3
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
dp3 r6.x, v2.xyzx, r5.xyzx
dp3 r6.y, v3.xyzx, r5.xyzx
dp3 r6.z, v4.xyzx, r5.xyzx
dp3 r1.w, -r2.xyzx, r6.xyzx
add r1.w, r1.w, r1.w
mad r2.xyz, r6.xyzx, -r1.wwww, -r2.xyzx
sample r2.xyzw, r2.xyzx, t3.xyzw, s4
mul r3.xyz, r3.xyzx, cb0[62].xxxx
mul r3.xyz, r4.xxxx, r3.xyzx
mul r3.xyz, r3.xyzx, cb0[61].xyzx
add r3.xyz, r3.xyzx, r3.xyzx
mad r2.xyz, r2.xyzx, cb0[59].xyzx, r3.xyzx
mul r1.w, v6.w, cb0[62].y
add r3.xyz, -r2.xyzx, cb0[5].xyzx
mad r2.xyz, r1.wwww, r3.xyzx, r2.xyzx
mul r1.w, v7.w, cb0[62].y
add r3.xyz, -r2.xyzx, v7.xyzx
mad r2.xyz, r1.wwww, r3.xyzx, r2.xyzx
mad r3.xyz, r5.yyyy, cb0[64].xxxx, v5.xywx
div r3.xy, r3.xyxx, r3.zzzz
sample r5.xyzw, r3.xyxx, t4.xyzw, s5
add r2.xyz, r2.xyzx, r5.xyzx
eq r1.w, cb3[0].x, l(1.000000)
if_nz r1.w
  eq r2.w, cb3[0].y, l(1.000000)
  mul r3.xyz, v3.wwww, cb3[2].xyzx
  mad r3.xyz, cb3[1].xyzx, v2.wwww, r3.xyzx
  mad r3.xyz, cb3[3].xyzx, v4.wwww, r3.xyzx
  add r3.xyz, r3.xyzx, cb3[4].xyzx
  movc r3.xyz, r2.wwww, r3.xyzx, r0.yzwy
  add r3.xyz, r3.xyzx, -cb3[6].xyzx
  mul r5.yzw, r3.xxyz, cb3[5].xxyz
  mad r2.w, r5.y, l(0.250000), l(0.750000)
  mad r3.x, cb3[0].z, l(0.500000), l(0.750000)
  max r5.x, r2.w, r3.x
  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
else
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r5.xyzw, cb2[45].xyzw
mul r3.xyz, r2.wwww, cb0[2].xyzx
if_nz r1.w
  eq r1.w, cb3[0].y, l(1.000000)
  mul r5.xyz, v3.wwww, cb3[2].xyzx
  mad r5.xyz, cb3[1].xyzx, v2.wwww, r5.xyzx
  mad r5.xyz, cb3[3].xyzx, v4.wwww, r5.xyzx
  add r5.xyz, r5.xyzx, cb3[4].xyzx
  movc r0.yzw, r1.wwww, r5.xxyz, r0.yyzw
  add r0.yzw, r0.yyzw, -cb3[6].xxyz
  mul r5.yzw, r0.yyzw, cb3[5].xxyz
  mul r0.y, r5.y, l(0.250000)
  mul r0.z, cb3[0].z, l(0.500000)
  mad r0.w, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.z, r0.y
  min r5.x, r0.w, r0.y
  sample r7.xyzw, r5.xzwx, t5.xyzw, s0
  add r0.yzw, r5.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r8.xyzw, r0.yzwy, t5.xyzw, s0
  add r0.yzw, r5.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r5.xyzw, r0.yzwy, t5.xyzw, s0
  mov r6.w, l(1.000000)
  dp4 r7.x, r7.xyzw, r6.xyzw
  dp4 r7.y, r8.xyzw, r6.xyzw
  dp4 r7.z, r5.xyzw, r6.xyzw
else
  mov r6.w, l(1.000000)
  dp4 r7.x, cb2[38].xyzw, r6.xyzw
  dp4 r7.y, cb2[39].xyzw, r6.xyzw
  dp4 r7.z, cb2[40].xyzw, r6.xyzw
endif
add r0.yzw, r7.xxyz, v8.xxyz
max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.yzw, r0.yyzw
mul r0.yzw, r0.yyzw, l(0.000000, 0.416666657, 0.416666657, 0.416666657)
exp r0.yzw, r0.yyzw
mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r1.xyz, r1.xyzx, r0.xxxx, cb2[0].xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
dp3 r0.x, r6.xyzx, cb2[0].xyzx
max r0.x, r0.x, l(0.000000)
dp3 r1.x, r6.xyzx, r1.xyzx
max r1.x, r1.x, l(0.000000)
mul r1.y, r4.x, l(128.000000)
log r1.x, r1.x
mul r1.x, r1.x, r1.y
exp r1.x, r1.x
mul r1.x, r4.x, r1.x
mul r1.yzw, r3.xxyz, r4.yyzw
mul r3.xyz, r3.xyzx, cb0[3].xyzx
mul r3.xyz, r1.xxxx, r3.xyzx
mad r1.xyz, r1.yzwy, r0.xxxx, r3.xyzx
mad r0.xyz, r4.yzwy, r0.yzwy, r1.xyzx
add o0.xyz, r2.xyzx, r0.xyzx
mov o0.w, r3.w
ret
// Approximately 0 instruction slots used