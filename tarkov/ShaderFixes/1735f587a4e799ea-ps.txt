// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 1735f587a4e799ea-ps.txt
// 3DMigoto: 1735f587a4e799ea |    Unity headers extracted from Transparent_DepthZwriteDithered
//    Shader "Transparent/DepthZwriteDithered" {
//      Fallback "Reflective/Bumped Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry" "RenderType"="TransparentCutout" }
//        Pass 6/7 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="DEFERRED" "QUEUE"="Geometry" "RenderType"="TransparentCutout" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Transparent_DepthZwriteDithered:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 122 7 2
//   undeciphered1a: 11
//   Keywords { "UNITY_HDR_ON" }
//   undeciphered2: 1 6 4 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1104
//   Vector 48 [_SpecColor]
//   Float 912 [_ReflectionBottomShade]
//   Vector 928 [_Color]
//   Vector 944 [_ReflectColor]
//   Float 960 [_SpecPower]
//   Float 964 [_Glossness]
//   Vector 1008 [_EFT_Ambient]
//   Float 1024 [_GlobalReflectionStrength]
//   Float 1028 [_Tinted]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 96 [_ScreenParams]
//   ConstBuffer "UnityLighting" 752
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_SpecTex] 2D 3
//   SetTexture 2 [_BumpMap] 2D 4
//   SetTexture 3 [_Cube] CUBE 5
//   SetTexture 4 [unity_ProbeVolumeSH] 3D 0
//   SetTexture 5 [_MyGlobalReflectionProbe] CUBE 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sun Jul 14 23:56:26 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy
// TEXCOORD                 6     z         2     NONE   float
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 7   xyzw        7     NONE   float
// TEXCOORD                 8   xyz         8     NONE   float   xyz
// TEXCOORD                 9   xyzw        9     NONE   float
// TEXCOORD                10   xyz        10     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[65], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyw
dcl_input_ps linear v8.xyz
dcl_input_ps linear v10.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 1735f587a4e799ea-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v8.xyzx, v8.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v8.xyzx
sample r1.xyzw, v1.xyxx, t0.xyzw, s2
mul r1.xyzw, r1.xyzw, cb0[58].xyzw
sample r2.xyzw, v1.zwzz, t1.xyzw, s3
sample r3.xyzw, v2.xyxx, t2.xyzw, s4
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r3.xyxx, r3.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r3.z, r0.w
mul r0.w, r2.x, cb0[60].x
dp3 r4.x, v3.xyzx, r3.xyzx
dp3 r4.y, v4.xyzx, r3.xyzx
dp3 r4.z, v5.xyzx, r3.xyzx
mul r5.xyz, r0.wwww, cb0[59].xyzx
dp3 r2.y, r4.xyzx, r4.xyzx
rsq r2.y, r2.y
mul r6.xyz, r2.yyyy, r4.xyzx
mov r7.y, v3.w
mov r7.z, v4.w
mov r7.w, v5.w
add r8.xyz, r7.yzwy, -r12.xyzx
dp3 r2.y, r8.xyzx, r8.xyzx
rsq r2.y, r2.y
mul r8.xyz, r2.yyyy, r8.xyzx
max r2.y, r5.y, r5.x
max r2.y, r5.z, r2.y
add r2.y, -r2.y, l(1.000000)
dp3 r2.z, r8.xyzx, r6.xyzx
add r2.z, r2.z, r2.z
mad r9.xyz, r6.xyzx, -r2.zzzz, r8.xyzx
mad r2.z, -r2.w, cb0[60].y, l(1.000000)
mad r3.w, -r2.z, l(0.700000), l(1.700000)
mul r3.w, r2.z, r3.w
mul r3.w, r3.w, l(6.000000)
sample_l r10.xyzw, r9.xyzx, t5.xyzw, s1, r3.w
add_sat r3.w, r9.y, cb0[57].x
mul r9.xyz, r3.wwww, r10.xyzx
dp3 r3.w, r6.xyzx, -r8.xyzx
mul r5.w, r2.z, r2.z
mul r5.w, r5.w, l(0.280000)
mad r2.z, -r5.w, r2.z, l(1.000000)
mad r2.y, r2.w, cb0[60].y, -r2.y
add_sat r2.y, r2.y, l(1.000000)
mul r6.xyz, r9.xyzx, r2.zzzz
add r2.z, -|r3.w|, l(1.000000)
mul r3.w, r2.z, r2.z
mul r3.w, r3.w, r3.w
mul r2.z, r2.z, r3.w
mad r8.xyz, -r0.wwww, cb0[59].xyzx, r2.yyyy
mad r5.xyz, r2.zzzz, r8.xyzx, r5.xyzx
mul r5.xyz, r5.xyzx, r6.xyzx
dp3 r2.y, r0.xyzx, r3.xyzx
add r2.z, r2.y, r2.y
mad r0.xyz, r3.xyzx, -r2.zzzz, r0.xyzx
sample r3.xyzw, r0.xyzx, t3.xyzw, s5
mul r0.xyz, r3.xyzx, cb0[59].xyzx
mul r0.xyz, r2.xxxx, r0.xyzx
mad r0.xyz, r5.xyzx, cb0[64].xxxx, r0.xyzx
mad r0.xyz, r1.xyzx, r2.xxxx, r0.xyzx
mul r0.xyz, r0.xyzx, cb0[63].xyzx
add r0.xyz, r0.xyzx, r0.xyzx
mad r2.x, cb0[64].y, l(4.000000), l(1.000000)
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
mul r0.xyz, r0.xyzx, r2.xxxx
add r2.x, -r2.y, l(1.000000)
mul r2.y, r2.x, r2.x
mul r2.y, r2.y, r2.y
mul r2.x, r2.y, r2.x
mad r2.x, r2.x, l(0.950000), l(0.050000)
add r2.y, -r2.x, l(1.000000)
mul r1.xyz, r1.xyzx, r2.yyyy
mad r2.y, r2.w, cb0[60].y, r1.w
mad r2.z, r2.w, cb0[60].y, -r2.y
mad r2.y, r2.x, r2.z, r2.y
lt r2.z, r1.w, l(1.000000)
movc r1.w, r2.z, r2.x, r1.w
mul r0.xyz, r0.xyzx, r2.xxxx
lt r2.x, l(0.500000), r1.w
movc r2.x, r2.x, l(1.000000), l(2.000000)
mul r1.xyz, r1.xyzx, r2.xxxx
lt r2.z, l(0.500000), cb0[64].y
movc r1.xyz, r2.zzzz, l(0,0,0,0), r1.xyzx
div r3.xy, v6.xyxx, v6.wwww
mul r2.z, cb1[5].x, -cb1[5].x
mul r3.z, r2.z, r3.y
mad r2.zw, r3.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
mul r2.zw, r2.zzzw, cb1[6].xxxy
round_ni r2.zw, r2.zzzw
add r2.z, r2.w, r2.z
mul r2.z, r2.z, l(0.500000)
ge r2.w, r2.z, -r2.z
frc r2.z, |r2.z|
movc r2.z, r2.w, r2.z, -r2.z
eq r2.z, r2.z, l(0.500000)
add r2.w, -cb0[64].y, l(1.000000)
movc r2.z, r2.z, r2.w, cb0[64].y
add r1.w, r1.w, -r2.z
add r1.w, r1.w, l(0.500000)
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
eq r1.w, cb3[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb3[0].y, l(1.000000)
  mul r3.xyz, v4.wwww, cb3[2].xyzx
  mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  add r3.xyz, r3.xyzx, cb3[4].xyzx
  movc r3.xyz, r1.wwww, r3.xyzx, r7.yzwy
  add r3.xyz, r3.xyzx, -cb3[6].xyzx
  mul r3.yzw, r3.xxyz, cb3[5].xxyz
  mul r1.w, r3.y, l(0.250000)
  mul r2.z, cb3[0].z, l(0.500000)
  mad r2.w, -cb3[0].z, l(0.500000), l(0.250000)
  max r1.w, r1.w, r2.z
  min r3.x, r2.w, r1.w
  sample r5.xyzw, r3.xzwx, t4.xyzw, s0
  add r6.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r6.xyzw, r6.xyzx, t4.xyzw, s0
  add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r3.xyzw, r3.xyzx, t4.xyzw, s0
  mov r4.w, l(1.000000)
  dp4 r5.x, r5.xyzw, r4.xyzw
  dp4 r5.y, r6.xyzw, r4.xyzw
  dp4 r5.z, r3.xyzw, r4.xyzw
else
  mov r4.w, l(1.000000)
  dp4 r5.x, cb2[38].xyzw, r4.xyzw
  dp4 r5.y, cb2[39].xyzw, r4.xyzw
  dp4 r5.z, cb2[40].xyzw, r4.xyzw
endif
add r3.xyz, r5.xyzx, v10.xyzx
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r3.xyz, r3.xyzx
mul r3.xyz, r3.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r3.xyz, r3.xyzx
mad r3.xyz, r3.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.yzw, r2.yyyy, cb0[3].xxyz
mul o1.xyz, r2.yzwy, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mad o2.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mul r2.yzw, r1.xxyz, r3.xxyz
mad o3.xyz, r0.xyzx, r2.xxxx, r2.yzwy
mov o0.xyz, r1.xyzx
mov o0.w, l(1.000000)
mov o1.w, r0.w
mov o2.w, l(1.000000)
mov o3.w, l(1.000000)
ret
// Approximately 0 instruction slots used