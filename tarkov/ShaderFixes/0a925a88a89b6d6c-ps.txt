// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0a925a88a89b6d6c-ps.txt
// 3DMigoto: 0a925a88a89b6d6c | Matched 2 variants of 1 shaders: p0/Reflective/Specular
//
//       Unity headers extracted from p0_Reflective_Specular
//       Shader "p0/Reflective/Specular" {
//         CustomEditor "FresnelMaterialEditor"
//         Fallback "Reflective/VertexLit"
//         SubShader 1/1 {
//           LOD 300
//           Tags { "RenderType"="Opaque" }
//           Pass 4/6 {
//             Name "PREPASS"
//             Tags { "LIGHTMODE"="PREPASSFINAL" "RenderType"="Opaque" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from p0_Reflective_Specular:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 30 3 0
//      undeciphered1a: 4
// 2:   Keywords { "Rain" }
//      undeciphered2: 1 3 2 3 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 176
//      Vector 48 [_SpecColor]
//      Vector 64 [_Color]
//      Vector 80 [_ReflectColor]
//      Float 100 [_SpecPower]
//      Vector 112 [_SpecVals] 3
//      Vector 128 [_DefVals] 3
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      SetTexture 0 [_MainTex] 2D 0
//      SetTexture 1 [_Cube] CUBE 1
//      SetTexture 2 [_LightBuffer] 2D 2
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sun Jul 14 23:54:55 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xy w
// TEXCOORD                 5   xyzw        6     NONE   float
// TEXCOORD                 6   xyz         7     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyw
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 6
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0a925a88a89b6d6c-ps.txt

mul r4.w, -r4.x, r4.y
mad r5.xyz, -r4.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r0.xyz, -r0.xyzx, r5.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyz, r0.yyyy, v3.xyzx
mad r1.xyz, v2.xyzx, r0.xxxx, r1.xyzx
mad r1.xyz, v4.xyzx, r0.zzzz, r1.xyzx
mov r0.xyz, -r0.xyzx
sample r0.xyzw, r0.xyzx, t1.xyzw, s1
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mad r0.w, -r1.z, r0.w, l(1.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, l(0.500000)
mad r1.x, cb0[8].y, r0.w, cb0[8].x
mad r0.w, cb0[7].y, r0.w, cb0[7].x
mul r0.w, r0.w, l(0.500000)
sample r2.xyzw, v1.xyxx, t0.xyzw, s0
mul r1.yzw, r2.xxyz, cb0[4].xxyz
mul r1.xyz, r1.xxxx, r1.yzwy
mul r1.w, r2.w, cb0[6].y
mul r0.xyz, r0.xyzx, r2.wwww
mul r0.xyz, r0.xyzx, cb0[5].xyzx
mul r1.w, r0.w, r1.w
div r2.xy, v5.xyxx, v5.wwww
sample r2.xyzw, r2.xyxx, t2.xyzw, s2
log r2.xyzw, r2.xyzw
mul r1.w, r1.w, -r2.w
add r2.xyz, -r2.xyzx, v7.xyzx
mul r3.xyz, r2.xyzx, cb0[3].xyzx
mul r3.xyz, r1.wwww, r3.xyzx
mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
mad o0.xyz, r0.xyzx, r0.wwww, r1.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used