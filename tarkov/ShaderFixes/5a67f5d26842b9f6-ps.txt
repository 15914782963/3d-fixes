// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5a67f5d26842b9f6-ps.txt
// 3DMigoto: 5a67f5d26842b9f6 | Matched 4 variants of 1 shaders: p0/Reflective/Bumped Specular SMap Parallax
//
//       Unity headers extracted from p0_Reflective_Bumped Specular SMap Parallax
//       Shader "p0/Reflective/Bumped Specular SMap Parallax" {
//         CustomEditor "FresnelMaterialEditor"
//         Fallback "Reflective/Bumped Diffuse"
//         SubShader 1/1 {
//           Tags { "RenderType"="Opaque" }
//           Pass 2/5 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="FORWARDADD" "RenderType"="Opaque" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from p0_Reflective_Bumped Specular SMap Parallax:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 176 10 4
//      undeciphered1a: 12
// 8:   Keywords { "DIRECTIONAL_COOKIE" "FOG_EXP2" "Rain" "TRIPLANAR" "SKINNEDMESHMATERIAL" "USERAIN" "FAKERIPPLELIGHT" }
// 4:   Keywords { "DIRECTIONAL_COOKIE" "FOG_EXP2" "Rain" "TRIPLANAR" "SKINNEDMESHMATERIAL" "USERAIN" }
// 2:   Keywords { "DIRECTIONAL_COOKIE" "FOG_EXP2" "Rain" "TRIPLANAR" "USERAIN" "FAKERIPPLELIGHT" }
// 1:   Keywords { "DIRECTIONAL_COOKIE" "FOG_EXP2" "Rain" "TRIPLANAR" "USERAIN" }
//      undeciphered2: 1 7 5 7 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 384
//      Vector 32 [_LightColor0]
//      Vector 48 [_SpecColor]
//      Float 128 [_WetDropSpecular]
//      Float 132 [_WetDropGlossness]
//      Float 136 [_WetDropAlbedo]
//      Float 140 [_WetDropNormal]
//      Vector 144 [_EnvironmentRippleCycle] 3
//      Vector 192 [_LocalRain] 3
//      Vector 208 [_LocalRainAverage] 3
//      Float 220 [_RainIntensity]
//      Float 224 [_RainIntensityRippleScale]
//      Float 228 [_RippleTexScale]
//      Vector 256 [_Color]
//      Float 288 [_Specularness]
//      Float 292 [_Glossness]
//      Vector 304 [_SpecVals] 3
//      Vector 320 [_DefVals] 3
//      Float 332 [_BumpTiling]
//      Float 352 [_SkinnedMeshMaterial]
//      Float 356 [_Parallax]
//      Matrix 64 [unity_WorldToLight]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 752
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 720 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityFog" 32
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_ParallaxMap] 2D 6
//      SetTexture 1 [_MainTex] 2D 3
//      SetTexture 2 [_SpecMap] 2D 4
//      SetTexture 3 [_BumpMap] 2D 5
//      SetTexture 4 [_RippleTexture] 2D 2
//      SetTexture 5 [_LightTexture0] 2D 1
//      SetTexture 6 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityFog" 3
//      BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:05:18 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 7     zw        1     NONE   float
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 8      w        2     NONE   float      w
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 6   xyz         7     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[23], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 14
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5a67f5d26842b9f6-ps.txt

mul r12.w, -r12.x, r12.y
mad r13.xyz, -r12.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, r13.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
mul r2.xyz, r1.yyyy, v3.xyzx
mad r1.xyw, v2.xyxz, r1.xxxx, r2.xyxz
mad r1.xyz, v4.xyzx, r1.zzzz, r1.xywx
sample r2.xyzw, v1.xyxx, t0.xyzw, s6
mul r1.w, cb0[22].y, l(0.500000)
mad r1.w, r2.x, cb0[22].y, -r1.w
dp3 r2.x, r1.xyzx, r1.xyzx
rsq r2.x, r2.x
mul r2.yzw, r1.xxyz, r2.xxxx
mad r1.x, r1.z, r2.x, l(0.420000)
div r1.xy, r2.yzyy, r1.xxxx
mad r1.xy, r1.wwww, r1.xyxx, v1.xyxx
sample r3.xyzw, r1.xyxx, t1.xyzw, s3
mul r3.xyz, r3.xyzx, cb0[16].xyzx
mul r1.z, r3.w, cb0[18].y
sample r4.xyzw, r1.xyxx, t2.xyzw, s4
mul r1.w, r4.x, cb0[18].x
mul r4.yz, r1.xxyx, cb0[20].wwww
sample r5.xyzw, r4.yzyy, t3.xyzw, s5
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.x, r5.xyxx, r5.xyxx
min r2.x, r2.x, l(1.000000)
add r2.x, -r2.x, l(1.000000)
sqrt r5.z, r2.x
lt r2.x, l(0.000000), cb0[22].x
if_nz r2.x
  dp3 r2.x, v6.xyzx, cb0[12].xyzx
  max r2.x, r2.x, l(0.000000)
  dp3 r4.y, v6.xyzx, cb0[13].xyzx
  max r4.y, r4.y, l(0.000000)
  add r2.x, r2.x, r4.y
  min r2.x, r2.x, l(1.000000)
  mul_sat r4.y, cb0[13].w, cb0[14].x
  mul r2.x, r2.x, r4.y
  div r1.xy, r1.xyxx, cb0[14].yyyy
  sample r6.xyzw, r1.xyxx, t4.xyzw, s2
  mad r1.x, r6.w, cb0[9].y, cb0[9].x
  div r1.x, r1.x, cb0[9].y
  ge r1.y, r1.x, -r1.x
  frc r1.x, |r1.x|
  movc r1.x, r1.y, r1.x, -r1.x
  mad_sat r1.x, -r1.x, cb0[9].y, l(1.000000)
  mul r1.x, r6.x, r1.x
  mul r1.y, r1.x, cb0[9].z
  mad r4.yz, r6.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  mad_sat r1.x, r1.x, cb0[9].z, l(-0.500000)
  mul r4.yz, r1.xxxx, r4.yyzy
  mul r6.xy, r4.yzyy, l(7.000000, 7.000000, 0.000000, 0.000000)
  mul r1.x, r1.y, l(0.350000)
  mul r7.xyzw, r1.xxxx, cb0[8].yxzw
  mul r7.xyzw, r2.xxxx, r7.xyzw
  mad r1.x, -r3.w, cb0[18].y, l(1.000000)
  mad r1.x, r7.x, r1.x, r1.z
  mad r2.x, -r4.x, cb0[18].x, l(1.000000)
  mad r1.y, r7.y, r2.x, r1.w
  mad r4.yzw, r7.zzzz, -r3.xxyz, r3.xxyz
  mov r6.z, l(1.000000)
  dp3 r2.x, r6.xyzx, r6.xyzx
  rsq r2.x, r2.x
  mad r6.xyz, r6.xyzx, r2.xxxx, -r5.xyzx
  mad r6.xyz, r7.wwww, r6.xyzx, r5.xyzx
else
  dp3 r2.x, v6.xyzx, cb0[12].xyzx
  max r2.x, r2.x, l(0.000000)
  dp3 r5.w, v6.xyzx, cb0[13].xyzx
  max r5.w, r5.w, l(0.000000)
  add r2.x, r2.x, r5.w
  min r2.x, r2.x, l(1.000000)
  mul_sat r5.w, cb0[13].w, cb0[14].x
  mul r2.x, r2.x, r5.w
  add r7.xyz, |v6.xyzx|, l(-0.490000, -0.490000, -0.490000, 0.000000)
  max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  add r5.w, r7.y, r7.x
  add r5.w, r7.z, r5.w
  div r7.xyz, r7.xyzx, r5.wwww
  mul r8.xyzw, v7.yzzx, cb0[14].yyyy
  mul r9.xy, v7.xyxx, cb0[14].yyyy
  sample r10.xyzw, r8.xyxx, t4.xyzw, s2
  sample r8.xyzw, r8.zwzz, t4.xyzw, s2
  sample r9.xyzw, r9.xyxx, t4.xyzw, s2
  mad r5.w, r10.w, cb0[9].y, cb0[9].x
  div r5.w, r5.w, cb0[9].y
  ge r6.w, r5.w, -r5.w
  frc r5.w, |r5.w|
  movc r5.w, r6.w, r5.w, -r5.w
  mad_sat r5.w, -r5.w, cb0[9].y, l(1.000000)
  mul r5.w, r10.x, r5.w
  mul r6.w, r5.w, cb0[9].z
  mad r7.w, r8.w, cb0[9].y, cb0[9].x
  div r7.w, r7.w, cb0[9].y
  ge r8.w, r7.w, -r7.w
  frc r7.w, |r7.w|
  movc r7.w, r8.w, r7.w, -r7.w
  mad_sat r7.w, -r7.w, cb0[9].y, l(1.000000)
  mul r7.w, r8.x, r7.w
  mul r8.x, r7.w, cb0[9].z
  mad r8.w, r9.w, cb0[9].y, cb0[9].x
  div r8.w, r8.w, cb0[9].y
  ge r9.w, r8.w, -r8.w
  frc r8.w, |r8.w|
  movc r8.w, r9.w, r8.w, -r8.w
  mad_sat r8.w, -r8.w, cb0[9].y, l(1.000000)
  mul r8.w, r9.x, r8.w
  mul r9.x, r8.w, cb0[9].z
  mad r10.xy, r10.yzyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mad_sat r5.w, r5.w, cb0[9].z, l(-0.500000)
  mul r10.xy, r5.wwww, r10.xyxx
  mul r10.xy, r7.xxxx, r10.xyxx
  mov r10.z, r7.x
  mad r8.yz, r8.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  mad_sat r5.w, r7.w, cb0[9].z, l(-0.500000)
  mul r8.yz, r5.wwww, r8.yyzy
  mul r11.xy, r7.yyyy, r8.yzyy
  mov r11.z, r7.y
  mul r11.xyz, r11.xyzx, l(7.000000, 7.000000, 1.000000, 0.000000)
  mad r10.xyz, r10.xyzx, l(7.000000, 7.000000, 1.000000, 0.000000), r11.xyzx
  mad r8.yz, r9.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  mad_sat r5.w, r8.w, cb0[9].z, l(-0.500000)
  mul r8.yz, r5.wwww, r8.yyzy
  mul r11.xy, r7.zzzz, r8.yzyy
  mov r11.z, r7.z
  mad r8.yzw, r11.xxyz, l(0.000000, 7.000000, 7.000000, 1.000000), r10.xxyz
  mul r5.w, r7.y, r8.x
  mad r5.w, r6.w, r7.x, r5.w
  mad r5.w, r9.x, r11.z, r5.w
  mul r7.xyzw, r5.wwww, cb0[8].yxzw
  mul r7.xyzw, r2.xxxx, r7.xyzw
  mad r2.x, -r3.w, cb0[18].y, l(1.000000)
  mad r1.x, r7.x, r2.x, r1.z
  mad r1.z, -r4.x, cb0[18].x, l(1.000000)
  mad r1.y, r7.y, r1.z, r1.w
  mad r4.yzw, r7.zzzz, -r3.xxyz, r3.xxyz
  dp3 r1.z, r8.yzwy, r8.yzwy
  rsq r1.z, r1.z
  mad r3.xyz, r8.yzwy, r1.zzzz, -r5.xyzx
  mad r6.xyz, r7.wwww, r3.xyzx, r5.xyzx
endif
dp3 r1.z, r2.yzwy, r6.xyzx
add r1.z, -r1.z, l(1.000000)
mul r1.z, r1.z, r1.z
mul r1.z, r1.z, l(0.500000)
mad r1.w, cb0[19].y, r1.z, cb0[19].x
mul r1.w, r1.w, l(0.500000)
mad r1.z, cb0[20].y, r1.z, cb0[20].x
mul r2.xyz, r1.zzzz, r4.yzwy
mul r1.x, r1.w, r1.x
mul r1.zw, v5.yyyy, cb0[5].xxxy
mad r1.zw, cb0[4].xxxy, v5.xxxx, r1.zzzw
mad r1.zw, cb0[6].xxxy, v5.zzzz, r1.zzzw
add r1.zw, r1.zzzw, cb0[7].xxxy
eq r2.w, cb4[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb4[0].y, l(1.000000)
  mul r3.xyz, v5.yyyy, cb4[2].xyzx
  mad r3.xyz, cb4[1].xyzx, v5.xxxx, r3.xyzx
  mad r3.xyz, cb4[3].xyzx, v5.zzzz, r3.xyzx
  add r3.xyz, r3.xyzx, cb4[4].xyzx
  movc r3.xyz, r2.wwww, r3.xyzx, v5.xyzx
  add r3.xyz, r3.xyzx, -cb4[6].xyzx
  mul r3.yzw, r3.xxyz, cb4[5].xxyz
  mad r2.w, r3.y, l(0.250000), l(0.750000)
  mad r3.y, cb4[0].z, l(0.500000), l(0.750000)
  max r3.x, r2.w, r3.y
  sample r3.xyzw, r3.xzwx, t6.xyzw, s0
else
  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r3.xyzw, cb2[45].xyzw
sample r3.xyzw, r1.zwzz, t5.xyzw, s1
mul r1.z, r2.w, r3.w
dp3 r3.x, v2.xyzx, r6.xyzx
dp3 r3.y, v3.xyzx, r6.xyzx
dp3 r3.z, v4.xyzx, r6.xyzx
mul r4.xyz, r1.zzzz, cb0[2].xyzx
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.xyzx, cb2[0].xyzx
dp3 r0.x, r3.xyzx, r0.xyzx
max r0.xw, r0.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.y, r1.y, l(128.000000)
log r0.x, r0.x
mul r0.x, r0.x, r0.y
exp r0.x, r0.x
mul r0.x, r1.x, r0.x
mul r1.xyz, r2.xyzx, r4.xyzx
mul r2.xyz, r4.xyzx, cb0[3].xyzx
mul r0.xyz, r0.xxxx, r2.xyzx
mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
div r0.w, v2.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb3[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used