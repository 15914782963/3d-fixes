// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 62388ce5cbcb77e2-vs.txt
// 3DMigoto: 62388ce5cbcb77e2 | Matched 4 variants of 1 shaders: Decal/Deferred DecalShader Diffuse+Normals Dynamic
//
//       Unity headers extracted from Decal_Deferred DecalShader Diffuse+Normals Dynamic
//       Shader "Decal/Deferred DecalShader Diffuse+Normals Dynamic" {
//         SubShader 1/1 {
//           Pass 1/1 {
//             ZWrite Off
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Decal_Deferred DecalShader Diffuse+Normals Dynamic:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201609010 17 0 0
//      undeciphered1a: 3
// 4:   Keywords { "EnableEmmision" }
// 8:   Keywords { "UNITY_HDR_ON" "EnableEmmision" }
// 2:   Keywords { "UNITY_HDR_ON" }
//      undeciphered2: 1 0 3 0 0 0
//      undeciphered3: 1 1 0 0
//      ConstBuffer "UnityPerCamera" 144
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityPerDraw" 160
//      Matrix 0 [unity_ObjectToWorld]
//      ConstBuffer "UnityPerFrame" 384
//      Matrix 144 [unity_MatrixV]
//      Matrix 272 [unity_MatrixVP]
//      BindCB "UnityPerCamera" 0
//      BindCB "UnityPerDraw" 1
//      BindCB "UnityPerFrame" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:06:21 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 2   xyzw        1     NONE   float   xyzw
// TEXCOORD                 3   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xy          3     NONE   float   xy
// TEXCOORD                 1   xyz         4     NONE   float   xyz
// TEXCOORD                 6   xyz         5     NONE   float   xyz
// TEXCOORD                 4   xyz         6     NONE   float   xyz
// TEXCOORD                 5   xyz         7     NONE   float   xyz
//
vs_4_0
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_constantbuffer cb2[21], immediateIndexed
dcl_input v0.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xy
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyz
dcl_output o7.xyz
dcl_temps 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb1[1].xyzw
mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb1[3].xyzw
mul r1.xyzw, r0.yyyy, cb2[18].xyzw
mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
mad r1.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 62388ce5cbcb77e2-vs.txt
ne r3.w, r1.w, l(1.0)
if_nz r3.w
  add r3.w, r1.w, -r3.y
  mad r1.x, r3.w, r3.x, r1.x
endif

mul r1.y, r1.y, cb0[5].x
mul r2.xzw, r1.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o1.zw, r1.zzzw
add o1.xy, r2.zzzz, r2.xwxx
mul r1.xyz, r0.yyyy, cb2[10].xyzx
mad r1.xyz, cb2[9].xyzx, r0.xxxx, r1.xyzx
mad r0.xyz, cb2[11].xyzx, r0.zzzz, r1.xyzx
mad r0.xyz, cb2[12].xyzx, r0.wwww, r0.xyzx
mul o2.xyz, r0.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000)
add o3.xy, v0.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mov o4.xyz, cb1[1].xyzx
mov o5.xyz, cb1[1].xyzx
mov o6.xyz, cb1[0].xyzx
mov o7.xyz, cb1[2].xyzx
ret
// Approximately 0 instruction slots used