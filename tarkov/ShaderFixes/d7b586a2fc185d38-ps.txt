// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d7b586a2fc185d38-ps.txt
// 3DMigoto: d7b586a2fc185d38 | Matched 3 variants of 1 shaders: Hidden/PrismEffects
//
//       Unity headers extracted from Hidden_PrismEffects
//       Shader "Hidden/PrismEffects" {
//         SubShader 1/1 {
//           Pass 1/1 {
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Hidden_PrismEffects:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 103 9 6
//      undeciphered1a: 4
// 1:   Keywords { "PRISM_FILMIC_TONEMAP" "PRISM_GAMMA_LOOKUP" }
// 2:   Keywords { "PRISM_HDR_BLOOM" "PRISM_FILMIC_TONEMAP" "PRISM_GAMMA_LOOKUP" }
// 4:   Keywords { "PRISM_SIMPLE_BLOOM" "PRISM_FILMIC_TONEMAP" "PRISM_GAMMA_LOOKUP" }
//      undeciphered2: 1 7 3 7 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 560
//      Float 48 [useNoise]
//      Float 112 [_SunWeight]
//      Float 132 [_VignetteStart]
//      Float 136 [_VignetteEnd]
//      Float 140 [_VignetteIntensity]
//      Vector 144 [_VignetteColor]
//      Vector 176 [_GrainIntensity] 2
//      VectorInt 184 [_RandomInts] 2
//      Float 216 [_ChromaticIntensity]
//      Vector 224 [_ChromaticParams]
//      Vector 256 [_ToneParams]
//      Vector 272 [_SecondaryToneParams]
//      Float 304 [_Gamma]
//      Float 340 [_LutScale]
//      Float 344 [_LutOffset]
//      Float 348 [_LutAmount]
//      Float 360 [_SecondLutAmount]
//      Float 368 [_FogHeight]
//      Vector 384 [_FogColor]
//      Float 400 [_FogBlurSkybox]
//      Vector 416 [_FogEndColor]
//      Float 432 [_FogStart]
//      Float 436 [_FogDistance]
//      Float 440 [_FogIntensity]
//      Float 552 [_AOIntensity]
//      Float 556 [_AOLuminanceWeighting]
//      Matrix 448 [_InverseView]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 112 [_ZBufferParams]
//      ConstBuffer "UnityPerCameraRare" 352
//      Matrix 96 [unity_CameraProjection]
//      SetTexture 0 [_MainTex] 2D 0
//      SetTexture 1 [_AOTex] 2D 6
//      SetTexture 2 [_CameraDepthTexture] 2D 1
//      SetTexture 3 [_RaysTexture] 2D 2
//      SetTexture 4 [_LutTex] 3D 4
//      SetTexture 5 [_SecondLutTex] 3D 5
//      SetTexture 6 [_GrainTex] 2D 3
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerCameraRare" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:21:56 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[35], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_output o0.xyzw
dcl_temps 6
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d7b586a2fc185d38-ps.txt

mul r4.w, -r4.x, r4.y
mad r5.xyz, -r4.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.zwzz, t0.xyzw, s0
lt r1.x, l(0.000000), cb0[13].z
if_nz r1.x
  lt r1.x, l(0.000000), cb0[14].z
  movc r1.y, r1.x, v1.z, v1.w
  mov r1.x, v1.z
  add r1.xy, r1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
  dp2 r1.x, r1.xyxx, r1.xyxx
  sqrt r1.x, r1.x
  add r1.y, -cb0[14].x, cb0[14].y
  add r1.x, r1.x, -cb0[14].x
  div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
  mul_sat r1.x, r1.y, r1.x
  mad r1.y, r1.x, l(-2.000000), l(3.000000)
  mul r1.x, r1.x, r1.x
  mul r1.x, r1.x, r1.y
  mul r1.y, r1.x, cb0[13].z
  mad r1.zw, cb0[13].zzzz, r1.xxxx, v1.zzzw
  sample r2.xyzw, r1.zwzz, t0.xyzw, s0
  mad r1.zw, -cb0[13].zzzz, r1.xxxx, v1.zzzw
  sample r3.xyzw, r1.zwzz, t0.xyzw, s0
  mad r1.y, -r1.y, l(0.500000), l(1.000000)
  mov r3.x, r2.x
  mov r3.y, r0.y
  mad r1.yzw, r3.xxyz, r1.yyyy, -r0.xxyz
  mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
endif
lt r1.x, l(0.000000), cb0[34].z
if_nz r1.x
  sample r1.xyzw, v1.xyxx, t1.xyzw, s6
  dp3 r1.y, r0.xyzx, l(0.220000, 0.707000, 0.071000, 0.000000)
  mul r1.y, r1.y, r1.y
  mad r1.x, -r1.y, cb0[34].w, r1.x
  add r1.x, -r1.x, l(1.000000)
  log r1.x, r1.x
  mul r1.x, r1.x, l(0.454545468)
  exp r1.x, r1.x
  add r1.x, -r1.x, l(1.000000)
  max r1.x, r1.x, l(0.000000)
  mad r0.xyz, r1.xxxx, -r0.xyzx, r0.xyzx
endif
lt r1.x, l(0.000000), cb0[27].z
if_nz r1.x
  sample r1.xyzw, v1.xyxx, t2.xyzw, s1
  mad r1.y, cb1[7].z, r1.x, cb1[7].w
  div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
  mad r1.zw, v1.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
  div r2.x, r1.z, cb2[6].x
  div r2.y, r1.w, cb2[7].y
  mov r2.z, l(-1.000000)
  mul r1.yzw, r1.yyyy, r2.xxyz
  mul r2.xyz, r1.zzzz, cb0[29].xyzx
  mad r2.xyz, cb0[28].xyzx, r1.yyyy, r2.xyzx
  mad r1.yzw, cb0[30].xxyz, r1.wwww, r2.xxyz
  add r1.yzw, r1.yyzw, cb0[31].xxyz
  add r1.yzw, r1.yyzw, -r5.xxyz
  dp3 r1.y, r1.yzwy, r1.yzwy
  sqrt r1.y, r1.y
  add r1.y, r1.y, -cb0[27].x
  add r1.z, -cb0[27].x, cb0[27].y
  div_sat r1.w, r1.y, r1.z
  mul r1.z, r1.z, cb0[23].x
  div_sat r1.y, r1.y, r1.z
  add r2.xyzw, cb0[24].xyzw, -cb0[26].xyzw
  mad r2.xyzw, r1.yyyy, r2.xyzw, cb0[26].xyzw
  lt r1.x, cb0[25].x, r1.x
  movc r1.x, r1.x, l(0), r1.w
  mul r1.x, r2.w, r1.x
  add r1.yzw, -r0.xxyz, r2.xxyz
  mad r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
endif
lt r1.x, l(0.000000), cb0[8].w
add r1.yz, v1.zzwz, l(0.000000, -0.500000, -0.500000, 0.000000)
dp2 r1.y, r1.yzyy, r1.yzyy
sqrt r1.y, r1.y
add r1.z, -cb0[8].y, cb0[8].z
mad r1.y, r1.y, cb0[8].w, -cb0[8].y
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
mul_sat r1.y, r1.z, r1.y
mad r1.z, r1.y, l(-2.000000), l(3.000000)
mul r1.y, r1.y, r1.y
mul r1.y, r1.y, r1.z
mul r2.xyz, r0.xyzx, cb0[9].xyzx
mad r3.xyz, -cb0[9].xyzx, r0.xyzx, r0.xyzx
mad r1.yzw, r1.yyyy, r3.xxyz, r2.xxyz
movc r1.xyz, r1.xxxx, r1.yzwy, r0.xyzx
add r1.xyz, r1.xyzx, -cb0[17].xxxx
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r2.xyz, r1.xyzx, cb0[16].xxxx, cb0[16].yyyy
mul r2.xyz, r1.xyzx, r2.xyzx
mad r3.xyz, r1.xyzx, cb0[16].xxxx, cb0[16].zzzz
mad r1.xyz, r1.xyzx, r3.xyzx, cb0[17].yyyy
div r1.xyz, r2.xyzx, r1.xyzx
mul r0.xyz, r1.xyzx, r1.xyzx
lt r1.x, l(0.000000), cb0[19].x
log r2.xyz, r0.xyzx
log r2.w, r0.w
mul r2.xyzw, r2.xyzw, cb0[19].xxxx
exp r2.xyzw, r2.xyzw
movc r0.xyzw, r1.xxxx, r2.xyzw, r0.xyzw
lt r1.x, l(0.000000), cb0[7].x
if_nz r1.x
  sample r1.xyzw, v1.xyxx, t3.xyzw, s2
  mul r2.xyz, r0.xyzx, l(1.100000, 1.100000, 1.100000, 0.000000)
  mad r0.xyz, r1.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r2.xyzx
endif
mad r1.xyz, r0.xyzx, cb0[21].yyyy, cb0[21].zzzz
sample r1.xyzw, r1.xyzx, t4.xyzw, s4
add r1.xyz, -r0.xyzx, r1.xyzx
mov r1.w, l(0)
mad r0.xyzw, cb0[21].wwww, r1.xyzw, r0.xyzw
lt r1.x, l(0.000000), cb0[22].z
if_nz r1.x
  mad r1.xyz, r0.xyzx, cb0[21].yyyy, cb0[21].zzzz
  sample r1.xyzw, r1.xyzx, t5.xyzw, s5
  add r1.xyz, -r0.xyzx, r1.xyzx
  mad r0.xyz, cb0[22].zzzz, r1.xyzx, r0.xyzx
endif
lt r1.x, l(0.000000), cb0[3].x
if_nz r1.x
  itof r1.xy, cb0[11].zwzz
  add r1.z, r1.y, cb1[0].x
  add r1.xy, r1.xzxx, v1.zwzz
  dp2 r1.x, r1.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
  sincos r1.x, null, r1.x
  mul r1.x, r1.x, l(43758.546875)
  frc r1.x, r1.x
  add r1.yz, r1.xxxx, v1.zzwz
  sample r2.xyzw, r1.yzyy, t6.xyzw, s3
  mul r1.xyz, r1.xxxx, r2.xyzx
  add r2.xyz, r0.xyzx, cb0[11].xxxx
  min r2.xyz, r2.xyzx, cb0[11].yyyy
  mad r0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
endif
mov o0.xyzw, r0.xyzw
ret
// Approximately 0 instruction slots used