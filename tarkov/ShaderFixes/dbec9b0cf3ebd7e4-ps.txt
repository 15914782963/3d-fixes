// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed dbec9b0cf3ebd7e4-ps.txt
// 3DMigoto: dbec9b0cf3ebd7e4 | Matched 4 variants of 1 shaders: Global Fog/Transparent Reflective Specular
//
//       Unity headers extracted from Global Fog_Transparent Reflective Specular
//       Shader "Global Fog/Transparent Reflective Specular" {
//         Fallback "Reflective/VertexLit"
//         SubShader 1/1 {
//           LOD 300
//           Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//           Pass 1/2 {
//             Name "FORWARD"
//             Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent" "RenderType"="Transparent" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Global Fog_Transparent Reflective Specular:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 106 7 4
//      undeciphered1a: 8
// 4:   Keywords { "DIRECTIONAL" "GAMMA" "HDR" }
// 1:   Keywords { "DIRECTIONAL" "GAMMA" "LDR" }
// 8:   Keywords { "DIRECTIONAL" "HDR" "LINEAR" }
// 2:   Keywords { "DIRECTIONAL" "LDR" "LINEAR" }
//      undeciphered2: 1 5 4 5 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 1024
//      Vector 32 [_LightColor0]
//      Vector 48 [_SpecColor]
//      Vector 80 [_GFogColor]
//      Float 912 [_ReflectionBottomShade]
//      Vector 928 [_Color]
//      Vector 944 [_ReflectColor]
//      Vector 976 [_EFT_Ambient]
//      Float 992 [_GlobalReflectionStrength]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 752
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      Vector 720 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_MainTex] 2D 2
//      SetTexture 1 [_SpecTex] 2D 3
//      SetTexture 2 [_Cube] CUBE 4
//      SetTexture 3 [unity_ProbeVolumeSH] 3D 0
//      SetTexture 4 [_MyGlobalReflectionProbe] CUBE 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:22:25 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 4     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyz         6     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[63], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed dbec9b0cf3ebd7e4-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v4.xyzx, r9.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
sample r1.xyzw, v1.xyxx, t0.xyzw, s2
mul r1.xyzw, r1.xyzw, cb0[58].xyzw
sample r2.xyzw, v1.xyxx, t1.xyzw, s3
mul r1.xyz, r1.xyzx, r2.xxxx
mul r2.yzw, r2.xxxx, cb0[59].xxyz
dp3 r3.x, v3.xyzx, v3.xyzx
rsq r3.x, r3.x
mul r3.xyz, r3.xxxx, v3.xyzx
add r4.xyz, v4.xyzx, -r9.xyzx
dp3 r3.w, r4.xyzx, r4.xyzx
rsq r3.w, r3.w
mul r4.xyz, r3.wwww, r4.xyzx
max r3.w, r2.z, r2.y
max r3.w, r2.w, r3.w
add r3.w, -r3.w, l(1.000000)
dp3 r4.w, r4.xyzx, r3.xyzx
add r4.w, r4.w, r4.w
mad r5.xyz, r3.xyzx, -r4.wwww, r4.xyzx
add r4.w, -r2.x, l(1.000000)
mad r5.w, -r4.w, l(0.700000), l(1.700000)
mul r5.w, r4.w, r5.w
mul r5.w, r5.w, l(6.000000)
sample_l r6.xyzw, r5.xyzx, t4.xyzw, s1, r5.w
add_sat r5.x, r5.y, cb0[57].x
mul r5.xyz, r5.xxxx, r6.xyzx
dp3 r3.x, r3.xyzx, -r4.xyzx
mul r3.y, r4.w, r4.w
mul r3.y, r3.y, l(0.280000)
mad r3.y, -r3.y, r4.w, l(1.000000)
add r3.z, r2.x, -r3.w
add_sat r3.z, r3.z, l(1.000000)
mul r4.xyz, r5.xyzx, r3.yyyy
add r3.x, -|r3.x|, l(1.000000)
mul r3.y, r3.x, r3.x
mul r3.y, r3.y, r3.y
mul r3.x, r3.x, r3.y
mad r3.yzw, -r2.xxxx, cb0[59].xxyz, r3.zzzz
mad r2.yzw, r3.xxxx, r3.yyzw, r2.yyzw
mul r2.yzw, r2.yyzw, r4.xxyz
sample r3.xyzw, v2.xyzx, t2.xyzw, s4
mul r3.xyz, r3.xyzx, cb0[59].xyzx
mul r3.xyz, r2.xxxx, r3.xyzx
mad r2.yzw, r2.yyzw, cb0[62].xxxx, r3.xxyz
mul r3.xyz, r1.xyzx, cb0[61].xyzx
mad r2.yzw, r3.xxyz, l(0.000000, 2.000000, 2.000000, 2.000000), r2.yyzw
add r3.xyz, -r2.yzwy, cb0[5].xyzx
mad r2.yzw, v1.zzzz, r3.xxyz, r2.yyzw
add r3.xyz, -r2.yzwy, v5.xyzx
mad r2.yzw, v5.wwww, r3.xxyz, r2.yyzw
eq r3.x, cb3[0].x, l(1.000000)
if_nz r3.x
  eq r3.y, cb3[0].y, l(1.000000)
  mul r4.xyz, v4.yyyy, cb3[2].xyzx
  mad r4.xyz, cb3[1].xyzx, v4.xxxx, r4.xyzx
  mad r4.xyz, cb3[3].xyzx, v4.zzzz, r4.xyzx
  add r4.xyz, r4.xyzx, cb3[4].xyzx
  movc r3.yzw, r3.yyyy, r4.xxyz, v4.xxyz
  add r3.yzw, r3.yyzw, -cb3[6].xxyz
  mul r4.yzw, r3.yyzw, cb3[5].xxyz
  mad r3.y, r4.y, l(0.250000), l(0.750000)
  mad r3.z, cb3[0].z, l(0.500000), l(0.750000)
  max r4.x, r3.z, r3.y
  sample r4.xyzw, r4.xzwx, t3.xyzw, s0
else
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r3.y, r4.xyzw, cb2[45].xyzw
mul r3.yzw, r3.yyyy, cb0[2].xxyz
if_nz r3.x
  eq r3.x, cb3[0].y, l(1.000000)
  mul r4.xyz, v4.yyyy, cb3[2].xyzx
  mad r4.xyz, cb3[1].xyzx, v4.xxxx, r4.xyzx
  mad r4.xyz, cb3[3].xyzx, v4.zzzz, r4.xyzx
  add r4.xyz, r4.xyzx, cb3[4].xyzx
  movc r4.xyz, r3.xxxx, r4.xyzx, v4.xyzx
  add r4.xyz, r4.xyzx, -cb3[6].xyzx
  mul r4.yzw, r4.xxyz, cb3[5].xxyz
  mul r3.x, r4.y, l(0.250000)
  mul r4.y, cb3[0].z, l(0.500000)
  mad r5.x, -cb3[0].z, l(0.500000), l(0.250000)
  max r3.x, r3.x, r4.y
  min r4.x, r5.x, r3.x
  sample r5.xyzw, r4.xzwx, t3.xyzw, s0
  add r6.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r6.xyzw, r6.xyzx, t3.xyzw, s0
  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r4.xyzw, r4.xyzx, t3.xyzw, s0
  mov r7.xyz, v3.xyzx
  mov r7.w, l(1.000000)
  dp4 r5.x, r5.xyzw, r7.xyzw
  dp4 r5.y, r6.xyzw, r7.xyzw
  dp4 r5.z, r4.xyzw, r7.xyzw
else
  mov r4.xyz, v3.xyzx
  mov r4.w, l(1.000000)
  dp4 r5.x, cb2[38].xyzw, r4.xyzw
  dp4 r5.y, cb2[39].xyzw, r4.xyzw
  dp4 r5.z, cb2[40].xyzw, r4.xyzw
endif
add r4.xyz, r5.xyzx, v6.xyzx
max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r4.xyz, r4.xyzx
mul r4.xyz, r4.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r4.xyz, r4.xyzx
mad r4.xyz, r4.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, v3.xyzx, cb2[0].xyzx
dp3 r0.x, v3.xyzx, r0.xyzx
max r0.xw, r0.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.y, r2.x, l(128.000000)
log r0.x, r0.x
mul r0.x, r0.x, r0.y
exp r0.x, r0.x
mul r0.x, r2.x, r0.x
mul r5.xyz, r1.xyzx, r3.yzwy
mul r3.xyz, r3.yzwy, cb0[3].xyzx
mul r0.xyz, r0.xxxx, r3.xyzx
mad r0.xyz, r5.xyzx, r0.wwww, r0.xyzx
mad r0.xyz, r1.xyzx, r4.xyzx, r0.xyzx
add o0.xyz, r2.yzwy, r0.xyzx
mov o0.w, r1.w
ret
// Approximately 0 instruction slots used