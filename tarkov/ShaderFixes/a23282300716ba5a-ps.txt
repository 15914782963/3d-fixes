// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a23282300716ba5a-ps.txt
// 3DMigoto: a23282300716ba5a | Matched 4 variants of 1 shaders: p0/Reflective/Bumped Specular SMap Parallax
//
//       Unity headers extracted from p0_Reflective_Bumped Specular SMap Parallax
//       Shader "p0/Reflective/Bumped Specular SMap Parallax" {
//         CustomEditor "FresnelMaterialEditor"
//         Fallback "Reflective/Bumped Diffuse"
//         SubShader 1/1 {
//           Tags { "RenderType"="Opaque" }
//           Pass 2/5 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="FORWARDADD" "RenderType"="Opaque" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from p0_Reflective_Bumped Specular SMap Parallax:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 181 11 4
//      undeciphered1a: 14
// 8:   Keywords { "POINT_COOKIE" "FOG_EXP2" "Rain" "TRIPLANAR" "SKINNEDMESHMATERIAL" "USERAIN" "FAKERIPPLELIGHT" }
// 4:   Keywords { "POINT_COOKIE" "FOG_EXP2" "Rain" "TRIPLANAR" "SKINNEDMESHMATERIAL" "USERAIN" }
// 2:   Keywords { "POINT_COOKIE" "FOG_EXP2" "Rain" "TRIPLANAR" "USERAIN" "FAKERIPPLELIGHT" }
// 1:   Keywords { "POINT_COOKIE" "FOG_EXP2" "Rain" "TRIPLANAR" "USERAIN" }
//      undeciphered2: 1 8 5 8 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 384
//      Vector 32 [_LightColor0]
//      Vector 48 [_SpecColor]
//      Float 128 [_WetDropSpecular]
//      Float 132 [_WetDropGlossness]
//      Float 136 [_WetDropAlbedo]
//      Float 140 [_WetDropNormal]
//      Vector 144 [_EnvironmentRippleCycle] 3
//      Vector 192 [_LocalRain] 3
//      Vector 208 [_LocalRainAverage] 3
//      Float 220 [_RainIntensity]
//      Float 224 [_RainIntensityRippleScale]
//      Float 228 [_RippleTexScale]
//      Vector 256 [_Color]
//      Float 288 [_Specularness]
//      Float 292 [_Glossness]
//      Vector 304 [_SpecVals] 3
//      Vector 320 [_DefVals] 3
//      Float 332 [_BumpTiling]
//      Float 352 [_SkinnedMeshMaterial]
//      Float 356 [_Parallax]
//      Matrix 64 [unity_WorldToLight]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 752
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 720 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityFog" 32
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_ParallaxMap] 2D 7
//      SetTexture 1 [_MainTex] 2D 4
//      SetTexture 2 [_SpecMap] 2D 5
//      SetTexture 3 [_BumpMap] 2D 6
//      SetTexture 4 [_RippleTexture] 2D 3
//      SetTexture 5 [_LightTextureB0] 2D 2
//      SetTexture 6 [_LightTexture0] CUBE 1
//      SetTexture 7 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityFog" 3
//      BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:14:37 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 7     zw        1     NONE   float
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 8      w        2     NONE   float      w
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 6   xyz         7     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[23], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a23282300716ba5a-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v5.xyzx, r15.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mul r3.xyz, r2.yyyy, v3.xyzx
mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
sample r4.xyzw, v1.xyxx, t0.xyzw, s7
mul r1.w, cb0[22].y, l(0.500000)
mad r1.w, r4.x, cb0[22].y, -r1.w
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyw, r2.wwww, r3.xyxz
mad r2.w, r3.z, r2.w, l(0.420000)
div r4.xy, r3.xyxx, r2.wwww
mad r4.xy, r1.wwww, r4.xyxx, v1.xyxx
sample r5.xyzw, r4.xyxx, t1.xyzw, s4
mul r5.xyz, r5.xyzx, cb0[16].xyzx
mul r1.w, r5.w, cb0[18].y
sample r6.xyzw, r4.xyxx, t2.xyzw, s5
mul r2.w, r6.x, cb0[18].x
mul r4.zw, r4.xxxy, cb0[20].wwww
sample r7.xyzw, r4.zwzz, t3.xyzw, s6
mad r7.xy, r7.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r3.z, r7.xyxx, r7.xyxx
min r3.z, r3.z, l(1.000000)
add r3.z, -r3.z, l(1.000000)
sqrt r7.z, r3.z
lt r3.z, l(0.000000), cb0[22].x
if_nz r3.z
  dp3 r3.z, v6.xyzx, cb0[12].xyzx
  max r3.z, r3.z, l(0.000000)
  dp3 r4.z, v6.xyzx, cb0[13].xyzx
  max r4.z, r4.z, l(0.000000)
  add r3.z, r3.z, r4.z
  min r3.z, r3.z, l(1.000000)
  mul_sat r4.z, cb0[13].w, cb0[14].x
  mul r3.z, r3.z, r4.z
  div r4.xy, r4.xyxx, cb0[14].yyyy
  sample r4.xyzw, r4.xyxx, t4.xyzw, s3
  mad r4.w, r4.w, cb0[9].y, cb0[9].x
  div r4.w, r4.w, cb0[9].y
  ge r6.y, r4.w, -r4.w
  frc r4.w, |r4.w|
  movc r4.w, r6.y, r4.w, -r4.w
  mad_sat r4.w, -r4.w, cb0[9].y, l(1.000000)
  mul r4.x, r4.x, r4.w
  mul r4.w, r4.x, cb0[9].z
  mad r4.yz, r4.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  mad_sat r4.x, r4.x, cb0[9].z, l(-0.500000)
  mul r4.xy, r4.xxxx, r4.yzyy
  mul r4.xyw, r4.xyxw, l(7.000000, 7.000000, 0.000000, 0.350000)
  mul r8.xyzw, r4.wwww, cb0[8].yxzw
  mul r8.xyzw, r3.zzzz, r8.xyzw
  mad r3.z, -r5.w, cb0[18].y, l(1.000000)
  mad r9.x, r8.x, r3.z, r1.w
  mad r3.z, -r6.x, cb0[18].x, l(1.000000)
  mad r9.y, r8.y, r3.z, r2.w
  mad r6.yzw, r8.zzzz, -r5.xxyz, r5.xxyz
  mov r4.z, l(1.000000)
  dp3 r3.z, r4.xyzx, r4.xyzx
  rsq r3.z, r3.z
  mad r4.xyz, r4.xyzx, r3.zzzz, -r7.xyzx
  mad r4.xyz, r8.wwww, r4.xyzx, r7.xyzx
else
  dp3 r3.z, v6.xyzx, cb0[12].xyzx
  max r3.z, r3.z, l(0.000000)
  dp3 r4.w, v6.xyzx, cb0[13].xyzx
  max r4.w, r4.w, l(0.000000)
  add r3.z, r3.z, r4.w
  min r3.z, r3.z, l(1.000000)
  mul_sat r4.w, cb0[13].w, cb0[14].x
  mul r3.z, r3.z, r4.w
  add r8.xyz, |v6.xyzx|, l(-0.490000, -0.490000, -0.490000, 0.000000)
  max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  add r4.w, r8.y, r8.x
  add r4.w, r8.z, r4.w
  div r8.xyz, r8.xyzx, r4.wwww
  mul r10.xyzw, v7.yzzx, cb0[14].yyyy
  mul r9.zw, v7.xxxy, cb0[14].yyyy
  sample r11.xyzw, r10.xyxx, t4.xyzw, s3
  sample r10.xyzw, r10.zwzz, t4.xyzw, s3
  sample r12.xyzw, r9.zwzz, t4.xyzw, s3
  mad r4.w, r11.w, cb0[9].y, cb0[9].x
  div r4.w, r4.w, cb0[9].y
  ge r7.w, r4.w, -r4.w
  frc r4.w, |r4.w|
  movc r4.w, r7.w, r4.w, -r4.w
  mad_sat r4.w, -r4.w, cb0[9].y, l(1.000000)
  mul r4.w, r11.x, r4.w
  mul r7.w, r4.w, cb0[9].z
  mad r8.w, r10.w, cb0[9].y, cb0[9].x
  div r8.w, r8.w, cb0[9].y
  ge r9.z, r8.w, -r8.w
  frc r8.w, |r8.w|
  movc r8.w, r9.z, r8.w, -r8.w
  mad_sat r8.w, -r8.w, cb0[9].y, l(1.000000)
  mul r8.w, r10.x, r8.w
  mul r9.z, r8.w, cb0[9].z
  mad r9.w, r12.w, cb0[9].y, cb0[9].x
  div r9.w, r9.w, cb0[9].y
  ge r10.x, r9.w, -r9.w
  frc r9.w, |r9.w|
  movc r9.w, r10.x, r9.w, -r9.w
  mad_sat r9.w, -r9.w, cb0[9].y, l(1.000000)
  mul r9.w, r12.x, r9.w
  mul r10.x, r9.w, cb0[9].z
  mad r11.xy, r11.yzyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mad_sat r4.w, r4.w, cb0[9].z, l(-0.500000)
  mul r11.xy, r4.wwww, r11.xyxx
  mul r11.xy, r8.xxxx, r11.xyxx
  mov r11.z, r8.x
  mad r10.yz, r10.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  mad_sat r4.w, r8.w, cb0[9].z, l(-0.500000)
  mul r10.yz, r4.wwww, r10.yyzy
  mul r13.xy, r8.yyyy, r10.yzyy
  mov r13.z, r8.y
  mul r10.yzw, r13.xxyz, l(0.000000, 7.000000, 7.000000, 1.000000)
  mad r10.yzw, r11.xxyz, l(0.000000, 7.000000, 7.000000, 1.000000), r10.yyzw
  mad r11.xy, r12.yzyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mad_sat r4.w, r9.w, cb0[9].z, l(-0.500000)
  mul r11.xy, r4.wwww, r11.xyxx
  mul r11.xy, r8.zzzz, r11.xyxx
  mov r11.z, r8.z
  mad r10.yzw, r11.xxyz, l(0.000000, 7.000000, 7.000000, 1.000000), r10.yyzw
  mul r4.w, r8.y, r9.z
  mad r4.w, r7.w, r8.x, r4.w
  mad r4.w, r10.x, r11.z, r4.w
  mul r8.xyzw, r4.wwww, cb0[8].yxzw
  mul r8.xyzw, r3.zzzz, r8.xyzw
  mad r3.z, -r5.w, cb0[18].y, l(1.000000)
  mad r9.x, r8.x, r3.z, r1.w
  mad r1.w, -r6.x, cb0[18].x, l(1.000000)
  mad r9.y, r8.y, r1.w, r2.w
  mad r6.yzw, r8.zzzz, -r5.xxyz, r5.xxyz
  dp3 r1.w, r10.yzwy, r10.yzwy
  rsq r1.w, r1.w
  mad r5.xyz, r10.yzwy, r1.wwww, -r7.xyzx
  mad r4.xyz, r8.wwww, r5.xyzx, r7.xyzx
endif
dp3 r1.w, r3.xywx, r4.xyzx
add r1.w, -r1.w, l(1.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, l(0.500000)
mad r2.w, cb0[19].y, r1.w, cb0[19].x
mul r2.w, r2.w, l(0.500000)
mad r1.w, cb0[20].y, r1.w, cb0[20].x
mul r3.xyz, r1.wwww, r6.yzwy
mul r1.w, r2.w, r9.x
mul r5.xyz, v5.yyyy, cb0[5].xyzx
mad r5.xyz, cb0[4].xyzx, v5.xxxx, r5.xyzx
mad r5.xyz, cb0[6].xyzx, v5.zzzz, r5.xyzx
add r5.xyz, r5.xyzx, cb0[7].xyzx
eq r2.w, cb4[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb4[0].y, l(1.000000)
  mul r6.xyz, v5.yyyy, cb4[2].xyzx
  mad r6.xyz, cb4[1].xyzx, v5.xxxx, r6.xyzx
  mad r6.xyz, cb4[3].xyzx, v5.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb4[4].xyzx
  movc r6.xyz, r2.wwww, r6.xyzx, v5.xyzx
  add r6.xyz, r6.xyzx, -cb4[6].xyzx
  mul r6.yzw, r6.xxyz, cb4[5].xxyz
  mad r2.w, r6.y, l(0.250000), l(0.750000)
  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
  max r6.x, r2.w, r3.w
  sample r6.xyzw, r6.xzwx, t7.xyzw, s0
else
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r6.xyzw, cb2[45].xyzw
dp3 r3.w, r5.xyzx, r5.xyzx
sample r6.xyzw, r3.wwww, t5.xyzw, s2
sample r5.xyzw, r5.xyzx, t6.xyzw, s1
mul r3.w, r5.w, r6.x
mul r2.w, r2.w, r3.w
dp3 r5.x, v2.xyzx, r4.xyzx
dp3 r5.y, v3.xyzx, r4.xyzx
dp3 r5.z, v4.xyzx, r4.xyzx
mul r4.xyz, r2.wwww, cb0[2].xyzx
mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r5.xyzx, r1.xyzx
dp3 r0.x, r5.xyzx, r0.xyzx
max r0.xw, r0.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.y, r9.y, l(128.000000)
log r0.x, r0.x
mul r0.x, r0.x, r0.y
exp r0.x, r0.x
mul r0.x, r1.w, r0.x
mul r1.xyz, r3.xyzx, r4.xyzx
mul r2.xyz, r4.xyzx, cb0[3].xyzx
mul r0.xyz, r0.xxxx, r2.xyzx
mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
div r0.w, v2.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb3[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used