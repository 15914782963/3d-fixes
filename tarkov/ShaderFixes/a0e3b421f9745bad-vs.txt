// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed a0e3b421f9745bad-vs.txt
// 3DMigoto: a0e3b421f9745bad | Matched 2 variants of 1 shaders: Nature/SpeedTree Billboard
//
//       Unity headers extracted from Nature_SpeedTree Billboard
//       Shader "Nature/SpeedTree Billboard" {
//         Fallback "Transparent/Cutout/VertexLit"
//         SubShader 1/2 {
//           LOD 400
//           Tags { "DisableBatching"="LodFading" "IGNOREPROJECTOR"="true" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//           Pass 6/7 {
//             Name "SHADOWCASTER"
//             Tags { "DisableBatching"="LodFading" "IGNOREPROJECTOR"="true" "LIGHTMODE"="SHADOWCASTER" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" "SHADOWSUPPORT"="true" }
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Nature_SpeedTree Billboard:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201609010 94 0 0
//      undeciphered1a: 4
// 2:   Keywords { "SHADOWS_DEPTH" "LOD_FADE_CROSSFADE" "EFFECT_BUMP" "EFFECT_HUE_VARIATION" }
// 1:   Keywords { "SHADOWS_DEPTH" "LOD_FADE_CROSSFADE" "EFFECT_HUE_VARIATION" }
//      undeciphered2: 1 0 9 0 0 0
//      undeciphered3: 25 3 0 0 3 4 4 5
//      ConstBuffer "$Globals" 128
//      Float 68 [_WindQuality]
//      Float 72 [_WindEnabled]
//      Vector 80 [_HueVariation]
//      Vector 96 [_Color]
//      Float 116 [_BilboardTreesWindPower]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 80 [_ProjectionParams]
//      Vector 96 [_ScreenParams]
//      ConstBuffer "UnityLighting" 752
//      Vector 0 [_WorldSpaceLightPos0]
//      ConstBuffer "UnityShadows" 416
//      Vector 80 [unity_LightShadowBias]
//      ConstBuffer "UnityPerDraw" 160
//      Matrix 0 [unity_ObjectToWorld]
//      Matrix 64 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 384
//      Matrix 272 [unity_MatrixVP]
//      ConstBuffer "SpeedTreeWind" 256
//      Vector 0 [_ST_WindVector]
//      Vector 16 [_ST_WindGlobal]
//      Vector 96 [_ST_WindBranchAdherences]
//      ConstBuffer "UnityBillboardPerCamera" 48
//      Vector 0 [unity_BillboardNormal] 3
//      Vector 16 [unity_BillboardTangent] 3
//      Vector 32 [unity_BillboardCameraParams]
//      ConstBuffer "UnityBillboardPerBatch" 288
//      Vector 0 [unity_BillboardInfo]
//      Vector 16 [unity_BillboardSize]
//      Vector 32 [unity_BillboardImageTexCoords0]
//      Vector 48 [unity_BillboardImageTexCoords1]
//      Vector 64 [unity_BillboardImageTexCoords2]
//      Vector 80 [unity_BillboardImageTexCoords3]
//      Vector 96 [unity_BillboardImageTexCoords4]
//      Vector 112 [unity_BillboardImageTexCoords5]
//      Vector 128 [unity_BillboardImageTexCoords6]
//      Vector 144 [unity_BillboardImageTexCoords7]
//      Vector 160 [unity_BillboardImageTexCoords8]
//      Vector 176 [unity_BillboardImageTexCoords9]
//      Vector 192 [unity_BillboardImageTexCoords10]
//      Vector 208 [unity_BillboardImageTexCoords11]
//      Vector 224 [unity_BillboardImageTexCoords12]
//      Vector 240 [unity_BillboardImageTexCoords13]
//      Vector 256 [unity_BillboardImageTexCoords14]
//      Vector 272 [unity_BillboardImageTexCoords15]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityShadows" 3
//      BindCB "UnityPerDraw" 4
//      BindCB "UnityPerFrame" 5
//      BindCB "SpeedTreeWind" 6
//      BindCB "UnityBillboardPerCamera" 7
//      BindCB "UnityBillboardPerBatch" 8
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:14:27 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// NORMAL                   0   xyz         3     NONE   float
// TANGENT                  0   xyzw        4     NONE   float
// COLOR                    0   xyzw        5     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyz         3     NONE   float   xyz
// TEXCOORD                 4   xyz         4     NONE   float   xyz
//
vs_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[6], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_constantbuffer cb5[21], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_constantbuffer cb7[3], immediateIndexed
dcl_constantbuffer cb8[18], dynamicIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_output o3.xyz
dcl_output o4.xyz
dcl_temps 5

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.xyz, v0.xyzx, cb4[3].xyzx
add r1.x, r0.x, v2.w
mad r1.y, v2.w, l(0.800000), r0.y
add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
frc r1.xy, r1.xyxx
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.zw, |r1.xxxy|, |r1.xxxy|
mad r1.xy, -|r1.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mad r1.xy, r1.zwzz, r1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r1.xy, r1.xyxx, r1.xyxx
mad r0.w, r1.y, r1.y, r1.x
div r1.x, cb6[6].x, cb6[1].z
mad r0.w, cb6[1].y, r0.w, r1.x
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb6[1].z
mad r1.y, v1.y, cb8[1].y, cb8[1].z
add r1.z, v1.x, l(-0.500000)
mul r1.z, r1.z, cb8[1].x
mul r1.z, r1.z, v2.x
mul r2.xyz, r1.zzzz, cb7[1].xyzx
mad r2.w, r1.y, v2.y, r2.y
mad r1.x, -r1.x, l(0.250000), r2.w
max r1.x, r1.x, l(0.000000)
mul r1.x, r1.x, cb6[1].z
log r1.y, r1.x
mul r1.y, r1.y, cb6[1].w
exp r1.y, r1.y
ne r1.z, r1.x, l(0.000000)
movc r1.x, r1.z, r1.y, r1.x
mul r0.w, r0.w, r1.x
mul r1.xy, cb0[7].yyyy, cb6[0].xzxx
mad r1.xz, r1.xxyx, r0.wwww, r2.xxzx
mov r1.y, r2.w
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r2.xzwx, r2.xzwx
sqrt r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r0.w, cb0[4].z, cb0[4].y
lt r0.w, l(0.000000), r0.w
movc r1.xyz, r0.wwww, r1.xyzx, r2.xwzx
add r1.xyz, r1.xyzx, v0.xyzx
mul r2.xyzw, r1.yyyy, cb4[1].xyzw
mad r2.xyzw, cb4[0].xyzw, r1.xxxx, r2.xyzw
mad r1.xyzw, cb4[2].xyzw, r1.zzzz, r2.xyzw
add r1.xyzw, r1.xyzw, cb4[3].xyzw
mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r3.x, cb7[0].xyzx, cb4[4].xyzx
dp3 r3.y, cb7[0].xyzx, cb4[5].xyzx
dp3 r3.z, cb7[0].xyzx, cb4[6].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r0.w, r3.xyzx, r2.xyzx
mad r0.w, -r0.w, r0.w, l(1.000000)
sqrt r0.w, r0.w
mul r0.w, r0.w, cb3[5].z
mad r2.xyz, -r3.xyzx, r0.wwww, r1.xyzx
ne r0.w, cb3[5].z, l(0.000000)
movc r2.xyz, r0.wwww, r2.xyzx, r1.xyzx
mul r3.xyzw, r2.yyyy, cb5[18].xyzw
mad r3.xyzw, cb5[17].xyzw, r2.xxxx, r3.xyzw
mad r2.xyzw, cb5[19].xyzw, r2.zzzz, r3.xyzw
mad r2.xyzw, cb5[20].xyzw, r1.wwww, r2.xyzw

// Relocated to here with asmtool.py
mov o0.xyw, r2.xyxw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed a0e3b421f9745bad-vs.txt
ne r4.w, r2.w, l(1.0)
if_nz r4.w
  add r4.w, r2.w, -r4.y
  mad r2.x, r4.w, r4.x, r2.x
endif

div r0.w, cb3[5].x, r2.w
min r0.w, r0.w, l(0.000000)
max r0.w, r0.w, l(-1.000000)
add r0.w, r0.w, r2.z
min r2.z, r2.w, r0.w

// mov o0.xyw, r2.xyxw // Relocated from here with asmtool.py

add r2.x, -r0.w, r2.z
mad o0.z, cb3[5].y, r2.x, r0.w
mov o1.xyz, r1.xyzx
mov o2.xyzw, cb0[6].xyzw
add r0.x, r0.y, r0.x
add r0.x, r0.z, r0.x
frc r0.x, r0.x
mul_sat o3.z, r0.x, cb0[5].w
add r0.x, v2.z, cb7[2].w
mad r0.x, r0.x, cb8[0].y, l(0.500000)
round_ni r0.x, r0.x
div r0.x, r0.x, cb8[0].x
ge r0.y, r0.x, -r0.x
frc r0.x, |r0.x|
movc r0.x, r0.y, r0.x, -r0.x
mul r0.x, r0.x, cb8[0].x
ftou r0.x, r0.x
lt r0.y, cb8[r0.x + 2].w, l(0.000000)
mad r0.zw, -cb8[r0.x + 2].zzzw, v1.yyyx, cb8[r0.x + 2].xxxy
mad r2.xy, cb8[r0.x + 2].zwzz, v1.xyxx, cb8[r0.x + 2].xyxx
movc o3.xy, r0.yyyy, r0.zwzz, r2.xyxx
mul r0.xyz, r1.yyyy, cb5[18].xywx
mad r0.xyz, cb5[17].xywx, r1.xxxx, r0.xyzx
mad r0.xyz, cb5[19].xywx, r1.zzzz, r0.xyzx
mad r0.xyz, cb5[20].xywx, r1.wwww, r0.xyzx
mul r1.xz, r0.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
mul r0.x, r0.y, cb1[5].x
mov o4.z, r0.z
mul r1.w, r0.x, l(0.500000)
add r0.xy, r1.zzzz, r1.xwxx
mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.250000, 0.250000)
mul o4.xy, r0.zwzz, r0.xyxx
ret
// Approximately 0 instruction slots used