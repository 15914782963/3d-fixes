// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed decda3b1140c754e-ps.txt
// 3DMigoto: decda3b1140c754e |    Unity headers extracted from Transparent_DepthZwrite
//    Shader "Transparent/DepthZwrite" {
//      Fallback "Reflective/Bumped Diffuse"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 3/3 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Transparent_DepthZwrite:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 69 6 2
//   undeciphered1a: 9
//   Keywords { "POINT_COOKIE" }
//   undeciphered2: 1 6 4 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1152
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Vector 992 [_Color]
//   Float 1024 [_SpecPower]
//   Float 1028 [_Glossness]
//   Vector 1040 [_SpecVals] 3
//   Vector 1056 [_DefVals] 3
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 3
//   SetTexture 1 [_SpecTex] 2D 4
//   SetTexture 2 [_BumpMap] 2D 5
//   SetTexture 3 [_LightTextureB0] 2D 2
//   SetTexture 4 [_LightTexture0] CUBE 1
//   SetTexture 5 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:22:49 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy
// TEXCOORD                 7     z         2     NONE   float
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 6   xyz         7     NONE   float
// TEXCOORD                 8   xyzw        8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[67], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed decda3b1140c754e-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v6.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v6.xyzx, r10.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mul r3.xyz, r2.yyyy, v4.xyzx
mad r3.xyz, v3.xyzx, r2.xxxx, r3.xyzx
mad r3.xyz, v5.xyzx, r2.zzzz, r3.xyzx
sample r4.xyzw, v1.xyxx, t0.xyzw, s3
mul r4.xyzw, r4.xyzw, cb0[62].xyzw
sample r5.xyzw, v1.zwzz, t1.xyzw, s4
sample r6.xyzw, v2.xyxx, t2.xyzw, s5
mad r6.xy, r6.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r6.xyxx, r6.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r6.z, r1.w
mul r5.xy, r5.xwxx, cb0[64].xyxx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
dp3 r1.w, r3.xyzx, r6.xyzx
add r1.w, -r1.w, l(1.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, l(0.500000)
mad r2.w, cb0[65].y, r1.w, cb0[65].x
mul r2.w, r2.w, l(0.500000)
mad r1.w, cb0[66].y, r1.w, cb0[66].x
mul r3.xyz, r1.wwww, r4.xyzx
mul r1.w, r2.w, r5.y
mul r4.xyz, v6.yyyy, cb0[5].xyzx
mad r4.xyz, cb0[4].xyzx, v6.xxxx, r4.xyzx
mad r4.xyz, cb0[6].xyzx, v6.zzzz, r4.xyzx
add r4.xyz, r4.xyzx, cb0[7].xyzx
eq r2.w, cb3[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb3[0].y, l(1.000000)
  mul r5.yzw, v6.yyyy, cb3[2].xxyz
  mad r5.yzw, cb3[1].xxyz, v6.xxxx, r5.yyzw
  mad r5.yzw, cb3[3].xxyz, v6.zzzz, r5.yyzw
  add r5.yzw, r5.yyzw, cb3[4].xxyz
  movc r5.yzw, r2.wwww, r5.yyzw, v6.xxyz
  add r5.yzw, r5.yyzw, -cb3[6].xxyz
  mul r7.yzw, r5.yyzw, cb3[5].xxyz
  mad r2.w, r7.y, l(0.250000), l(0.750000)
  mad r3.w, cb3[0].z, l(0.500000), l(0.750000)
  max r7.x, r2.w, r3.w
  sample r7.xyzw, r7.xzwx, t5.xyzw, s0
else
  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r7.xyzw, cb2[45].xyzw
dp3 r3.w, r4.xyzx, r4.xyzx
sample r7.xyzw, r3.wwww, t3.xyzw, s2
sample r8.xyzw, r4.xyzx, t4.xyzw, s1
mul r3.w, r7.x, r8.w
mul r2.w, r2.w, r3.w
dp3 r4.x, v3.xyzx, r6.xyzx
dp3 r4.y, v4.xyzx, r6.xyzx
dp3 r4.z, v5.xyzx, r6.xyzx
mul r5.yzw, r2.wwww, cb0[2].xxyz
mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r4.xyzx, r1.xyzx
dp3 r0.x, r4.xyzx, r0.xyzx
max r0.xw, r0.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.y, r5.x, l(128.000000)
log r0.x, r0.x
mul r0.x, r0.x, r0.y
exp r0.x, r0.x
mul r0.x, r1.w, r0.x
mul r1.xyz, r3.xyzx, r5.yzwy
mul r2.xyz, r5.yzwy, cb0[3].xyzx
mul r0.xyz, r0.xxxx, r2.xyzx
mad o0.xyz, r1.xyzx, r0.wwww, r0.xyzx
mov o0.w, r4.w
ret
// Approximately 0 instruction slots used