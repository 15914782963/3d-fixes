// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed c0e9716f21afe6e2-ps.txt
// 3DMigoto: c0e9716f21afe6e2 | Matched 2 variants of 1 shaders: p0/Reflective/Bumped Color Specular SMap
//
//       Unity headers extracted from p0_Reflective_Bumped Color Specular SMap
//       Shader "p0/Reflective/Bumped Color Specular SMap" {
//         CustomEditor "FresnelMaterialEditor"
//         Fallback "Reflective/Bumped Diffuse"
//         SubShader 1/1 {
//           Tags { "RenderType"="Opaque" }
//           Pass 1/5 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="FORWARDBASE" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from p0_Reflective_Bumped Color Specular SMap:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 224 12 6
//      undeciphered1a: 15
// 2:   Keywords { "DIRECTIONAL" "FOG_EXP" "Rain" "TRIPLANAR" "SKINNEDMESHMATERIAL" "USERAIN" "FAKERIPPLELIGHT" }
// 1:   Keywords { "DIRECTIONAL" "FOG_EXP" "Rain" "TRIPLANAR" "USERAIN" "FAKERIPPLELIGHT" }
//      undeciphered2: 1 6 5 6 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 320
//      Vector 32 [_LightColor0]
//      Vector 48 [_SpecColor]
//      Float 64 [_WetDropSpecular]
//      Float 68 [_WetDropGlossness]
//      Float 72 [_WetDropAlbedo]
//      Float 76 [_WetDropNormal]
//      Vector 80 [_EnvironmentRippleCycle] 3
//      Vector 128 [_LocalRain] 3
//      Vector 144 [_LocalRainAverage] 3
//      Float 156 [_RainIntensity]
//      Float 160 [_RainIntensityRippleScale]
//      Float 164 [_RippleTexScale]
//      Float 168 [_RippleFakeLightIntensityOffset]
//      Float 176 [_RippleFakeLightIntensity]
//      Vector 192 [_Color]
//      Vector 208 [_ReflectColor]
//      Float 224 [_Specularness]
//      Float 228 [_Glossness]
//      Float 236 [_NdotLOffset]
//      Vector 240 [_SpecVals] 3
//      Vector 256 [_DefVals] 3
//      Float 268 [_BumpTiling]
//      Vector 272 [_SunDirection] 3
//      Float 284 [_NightRippleFakeLightOffset]
//      Float 288 [_SkinnedMeshMaterial]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 752
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      Vector 720 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityFog" 32
//      Vector 0 [unity_FogColor]
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_MainTex] 2D 2
//      SetTexture 1 [_SpecMap] 2D 3
//      SetTexture 2 [_BumpMap] 2D 4
//      SetTexture 3 [_RippleTexture] 2D 1
//      SetTexture 4 [_Cube] CUBE 5
//      SetTexture 5 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityFog" 3
//      BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:18:51 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 7     zw        1     NONE   float
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 8      w        5     NONE   float      w
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 6   xyz         7     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[19], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v5.w
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 17
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r15.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed c0e9716f21afe6e2-ps.txt

mul r15.w, -r15.x, r15.y
mad r16.xyz, -r15.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.y, v2.w
mov r0.z, v3.w
mov r0.w, v4.w
add r1.xyz, -r0.yzwy, r16.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, r1.xyzx
mul r3.xyz, r2.yyyy, v3.xyzx
mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
sample r4.xyzw, v1.xyxx, t0.xyzw, s2
mul r4.xyz, r4.xyzx, cb0[12].xyzx
mul r1.w, r4.w, cb0[14].y
sample r5.xyzw, v1.xyxx, t1.xyzw, s3
mul r5.yzw, r5.xxyz, cb0[3].xxyz
mul r2.w, r5.x, cb0[14].x
mul r6.xy, v1.xyxx, cb0[16].wwww
sample r6.xyzw, r6.xyxx, t2.xyzw, s4
mad r6.xy, r6.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r3.w, r6.xyxx, r6.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r6.z, r3.w
lt r3.w, l(0.000000), cb0[18].x
if_nz r3.w
  dp3 r3.w, v5.xyzx, cb0[8].xyzx
  max r3.w, r3.w, l(0.000000)
  dp3 r6.w, v5.xyzx, cb0[9].xyzx
  max r6.w, r6.w, l(0.000000)
  add r3.w, r3.w, r6.w
  min r3.w, r3.w, l(1.000000)
  mul_sat r6.w, cb0[9].w, cb0[10].x
  mul r3.w, r3.w, r6.w
  div r7.xy, v1.xyxx, cb0[10].yyyy
  sample r7.xyzw, r7.xyxx, t3.xyzw, s1
  mad r6.w, r7.w, cb0[5].y, cb0[5].x
  div r6.w, r6.w, cb0[5].y
  ge r7.w, r6.w, -r6.w
  frc r6.w, |r6.w|
  movc r6.w, r7.w, r6.w, -r6.w
  mad_sat r6.w, -r6.w, cb0[5].y, l(1.000000)
  mul r6.w, r7.x, r6.w
  mul r7.x, r6.w, cb0[5].z
  mad r7.yz, r7.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  mad_sat r6.w, r6.w, cb0[5].z, l(-0.500000)
  mul r7.yz, r6.wwww, r7.yyzy
  mul r8.xy, r7.yzyy, l(7.000000, 7.000000, 0.000000, 0.000000)
  mul r6.w, r7.x, l(0.350000)
  mul r7.xyzw, r6.wwww, cb0[4].yxzw
  mul r7.xyzw, r3.wwww, r7.xyzw
  mad r3.w, -r4.w, cb0[14].y, l(1.000000)
  mad r9.x, r7.x, r3.w, r1.w
  mad r3.w, -r5.x, cb0[14].x, l(1.000000)
  mad r9.y, r7.y, r3.w, r2.w
  mad r7.xyz, r7.zzzz, -r4.xyzx, r4.xyzx
  mov r8.z, l(1.000000)
  dp3 r3.w, r8.xyzx, r8.xyzx
  rsq r3.w, r3.w
  mad r8.xyz, r8.xyzx, r3.wwww, -r6.xyzx
  mad r8.xyz, r7.wwww, r8.xyzx, r6.xyzx
else
  dp3 r3.w, v5.xyzx, cb0[8].xyzx
  max r3.w, r3.w, l(0.000000)
  dp3 r7.w, v5.xyzx, cb0[9].xyzx
  max r7.w, r7.w, l(0.000000)
  add r3.w, r3.w, r7.w
  min r3.w, r3.w, l(1.000000)
  mul_sat r7.w, cb0[9].w, cb0[10].x
  mul r3.w, r3.w, r7.w
  add r10.xyz, |v5.xyzx|, l(-0.490000, -0.490000, -0.490000, 0.000000)
  max r10.xyz, r10.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  add r7.w, r10.y, r10.x
  add r7.w, r10.z, r7.w
  div r10.xyz, r10.xyzx, r7.wwww
  mul r11.xyzw, v6.yzzx, cb0[10].yyyy
  mul r9.zw, v6.xxxy, cb0[10].yyyy
  sample r12.xyzw, r11.xyxx, t3.xyzw, s1
  sample r11.xyzw, r11.zwzz, t3.xyzw, s1
  sample r13.xyzw, r9.zwzz, t3.xyzw, s1
  mad r7.w, r12.w, cb0[5].y, cb0[5].x
  div r7.w, r7.w, cb0[5].y
  ge r8.w, r7.w, -r7.w
  frc r7.w, |r7.w|
  movc r7.w, r8.w, r7.w, -r7.w
  mad_sat r7.w, -r7.w, cb0[5].y, l(1.000000)
  mul r7.w, r12.x, r7.w
  mul r8.w, r7.w, cb0[5].z
  mad r9.z, r11.w, cb0[5].y, cb0[5].x
  div r9.z, r9.z, cb0[5].y
  ge r9.w, r9.z, -r9.z
  frc r9.z, |r9.z|
  movc r9.z, r9.w, r9.z, -r9.z
  mad_sat r9.z, -r9.z, cb0[5].y, l(1.000000)
  mul r9.z, r11.x, r9.z
  mul r9.w, r9.z, cb0[5].z
  mad r10.w, r13.w, cb0[5].y, cb0[5].x
  div r10.w, r10.w, cb0[5].y
  ge r11.x, r10.w, -r10.w
  frc r10.w, |r10.w|
  movc r10.w, r11.x, r10.w, -r10.w
  mad_sat r10.w, -r10.w, cb0[5].y, l(1.000000)
  mul r10.w, r13.x, r10.w
  mul r11.x, r10.w, cb0[5].z
  mad r12.xy, r12.yzyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mad_sat r7.w, r7.w, cb0[5].z, l(-0.500000)
  mul r12.xy, r7.wwww, r12.xyxx
  mul r12.xy, r10.xxxx, r12.xyxx
  mov r12.z, r10.x
  mad r11.yz, r11.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  mad_sat r7.w, r9.z, cb0[5].z, l(-0.500000)
  mul r11.yz, r7.wwww, r11.yyzy
  mul r14.xy, r10.yyyy, r11.yzyy
  mov r14.z, r10.y
  mul r11.yzw, r14.xxyz, l(0.000000, 7.000000, 7.000000, 1.000000)
  mad r11.yzw, r12.xxyz, l(0.000000, 7.000000, 7.000000, 1.000000), r11.yyzw
  mad r12.xy, r13.yzyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mad_sat r7.w, r10.w, cb0[5].z, l(-0.500000)
  mul r12.xy, r7.wwww, r12.xyxx
  mul r12.xy, r10.zzzz, r12.xyxx
  mov r12.z, r10.z
  mad r11.yzw, r12.xxyz, l(0.000000, 7.000000, 7.000000, 1.000000), r11.yyzw
  mul r7.w, r10.y, r9.w
  mad r7.w, r8.w, r10.x, r7.w
  mad r6.w, r11.x, r12.z, r7.w
  mul r10.xyzw, r6.wwww, cb0[4].yxzw
  mul r10.xyzw, r3.wwww, r10.xyzw
  mad r3.w, -r4.w, cb0[14].y, l(1.000000)
  mad r9.x, r10.x, r3.w, r1.w
  mad r1.w, -r5.x, cb0[14].x, l(1.000000)
  mad r9.y, r10.y, r1.w, r2.w
  mad r7.xyz, r10.zzzz, -r4.xyzx, r4.xyzx
  dp3 r1.w, r11.yzwy, r11.yzwy
  rsq r1.w, r1.w
  mad r4.xyz, r11.yzwy, r1.wwww, -r6.xyzx
  mad r8.xyz, r10.wwww, r4.xyzx, r6.xyzx
endif
dp3 r10.x, v2.xyzx, r8.xyzx
dp3 r10.y, v3.xyzx, r8.xyzx
dp3 r10.z, v4.xyzx, r8.xyzx
dp3 r1.w, -cb0[17].xyzx, -cb0[17].xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, -cb0[17].xyzx
dp3 r1.w, r10.xyzx, r4.xyzx
max r1.w, r1.w, l(0.000000)
add_sat r1.w, r1.w, cb0[14].w
add_sat r2.w, cb0[17].w, -cb0[17].y
dp2 r3.w, r8.xyxx, r8.xyxx
sqrt r3.w, r3.w
lt r4.x, l(0.000000), r8.x
and r4.x, r4.x, l(1)
lt r3.w, l(0.320000), r3.w
and r3.w, r3.w, l(1)
imul null, r3.w, r3.w, r4.x
add r4.x, r6.w, -cb0[10].z
round_pi r4.x, r4.x
mul r1.w, r1.w, r4.x
mul r1.w, r1.w, cb0[11].x
mul r1.w, r2.w, r1.w
itof r2.w, r3.w
mul r1.w, r1.w, r2.w
dp3 r2.w, -r2.xyzx, r10.xyzx
add r2.w, r2.w, r2.w
mad r2.xyz, r10.xyzx, -r2.wwww, -r2.xyzx
sample r2.xyzw, r2.xyzx, t4.xyzw, s5
mul r2.xyz, r4.wwww, r2.xyzx
mul r2.xyz, r2.xyzx, cb0[13].xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx
dp3 r2.w, r3.xyzx, r8.xyzx
add r2.w, -r2.w, l(1.000000)
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, l(0.500000)
mad r3.x, cb0[15].y, r2.w, cb0[15].x
mul r3.x, r3.x, l(0.500000)
mad r2.w, cb0[16].y, r2.w, cb0[16].x
mul r3.yzw, r2.wwww, r7.xxyz
mul r2.w, r3.x, r9.x
mad r2.xyz, r2.xyzx, r3.xxxx, r1.wwww
eq r1.w, cb4[0].x, l(1.000000)
if_nz r1.w
  eq r3.x, cb4[0].y, l(1.000000)
  mul r4.xyz, v3.wwww, cb4[2].xyzx
  mad r4.xyz, cb4[1].xyzx, v2.wwww, r4.xyzx
  mad r4.xyz, cb4[3].xyzx, v4.wwww, r4.xyzx
  add r4.xyz, r4.xyzx, cb4[4].xyzx
  movc r4.xyz, r3.xxxx, r4.xyzx, r0.yzwy
  add r4.xyz, r4.xyzx, -cb4[6].xyzx
  mul r4.yzw, r4.xxyz, cb4[5].xxyz
  mad r3.x, r4.y, l(0.250000), l(0.750000)
  mad r4.y, cb4[0].z, l(0.500000), l(0.750000)
  max r4.x, r3.x, r4.y
  sample r4.xyzw, r4.xzwx, t5.xyzw, s0
else
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r3.x, r4.xyzw, cb2[45].xyzw
mul r4.xyz, r3.xxxx, cb0[2].xyzx
if_nz r1.w
  eq r1.w, cb4[0].y, l(1.000000)
  mul r6.xyz, v3.wwww, cb4[2].xyzx
  mad r6.xyz, cb4[1].xyzx, v2.wwww, r6.xyzx
  mad r6.xyz, cb4[3].xyzx, v4.wwww, r6.xyzx
  add r6.xyz, r6.xyzx, cb4[4].xyzx
  movc r0.yzw, r1.wwww, r6.xxyz, r0.yyzw
  add r0.yzw, r0.yyzw, -cb4[6].xxyz
  mul r6.yzw, r0.yyzw, cb4[5].xxyz
  mul r0.y, r6.y, l(0.250000)
  mul r0.z, cb4[0].z, l(0.500000)
  mad r0.w, -cb4[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.z, r0.y
  min r6.x, r0.w, r0.y
  sample r7.xyzw, r6.xzwx, t5.xyzw, s0
  add r0.yzw, r6.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r8.xyzw, r0.yzwy, t5.xyzw, s0
  add r0.yzw, r6.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r6.xyzw, r0.yzwy, t5.xyzw, s0
  mov r10.w, l(1.000000)
  dp4 r7.x, r7.xyzw, r10.xyzw
  dp4 r7.y, r8.xyzw, r10.xyzw
  dp4 r7.z, r6.xyzw, r10.xyzw
else
  mov r10.w, l(1.000000)
  dp4 r7.x, cb2[38].xyzw, r10.xyzw
  dp4 r7.y, cb2[39].xyzw, r10.xyzw
  dp4 r7.z, cb2[40].xyzw, r10.xyzw
endif
add r0.yzw, r7.xxyz, v7.xxyz
max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.yzw, r0.yyzw
mul r0.yzw, r0.yyzw, l(0.000000, 0.416666657, 0.416666657, 0.416666657)
exp r0.yzw, r0.yyzw
mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r1.xyz, r1.xyzx, r0.xxxx, cb2[0].xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
dp3 r0.x, r10.xyzx, cb2[0].xyzx
max r0.x, r0.x, l(0.000000)
dp3 r1.x, r10.xyzx, r1.xyzx
max r1.x, r1.x, l(0.000000)
mul r1.y, r9.y, l(128.000000)
log r1.x, r1.x
mul r1.x, r1.x, r1.y
exp r1.x, r1.x
mul r1.x, r2.w, r1.x
mul r1.yzw, r3.yyzw, r4.xxyz
mul r4.xyz, r5.yzwy, r4.xyzx
mul r4.xyz, r1.xxxx, r4.xyzx
mad r1.xyz, r1.yzwy, r0.xxxx, r4.xyzx
mad r0.xyz, r3.yzwy, r0.yzwy, r1.xyzx
add r0.xyz, r2.xyzx, r0.xyzx
div r0.w, v5.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb3[1].y
exp r0.w, -r0.w
min r0.w, r0.w, l(1.000000)
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used