// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed ce9cf91019db9e51-ps.txt
// 3DMigoto: ce9cf91019db9e51 | Matched 3 variants of 3 shaders: shadow, shadow_2sided, shadow_backside
//
// 1:    Unity headers extracted from shadow
// 4:    Unity headers extracted from shadow_2sided
// 2:    Unity headers extracted from shadow_backside
// 1:    Shader "shadow" {
// 4:    Shader "shadow_2sided" {
// 2:    Shader "shadow_backside" {
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           Tags { "RenderType"="Opaque" }
//           Pass 1/7 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="FORWARDBASE" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
// 1: Unity 5.3 headers extracted from shadow:
// 4: Unity 5.3 headers extracted from shadow_2sided:
// 2: Unity 5.3 headers extracted from shadow_backside:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 54 5 4
//      undeciphered1a: 5
//      Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
//      undeciphered2: 1 2 6 2 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 64
//      Vector 32 [_LightColor0]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 752
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      Vector 720 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityShadows" 416
//      Vector 384 [_LightShadowData]
//      Vector 400 [unity_ShadowFadeCenterAndType]
//      ConstBuffer "UnityPerFrame" 384
//      Matrix 144 [unity_MatrixV]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_ShadowMapTexture] 2D 1
//      SetTexture 1 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityShadows" 3
//      BindCB "UnityPerFrame" 4
//      BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:20:43 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
// TEXCOORD                 5   xyzw        5     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[3], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyw
dcl_output o0.xyzw
dcl_temps 7
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed ce9cf91019db9e51-ps.txt

mul r5.w, -r5.x, r5.y
mad r6.xyz, -r5.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v2.xyzx, r6.xyzx
mov r1.x, cb4[9].z
mov r1.y, cb4[10].z
mov r1.z, cb4[11].z
dp3 r0.x, r0.xyzx, r1.xyzx
add r0.yzw, v2.xxyz, -cb3[25].xxyz
dp3 r0.y, r0.yzwy, r0.yzwy
sqrt r0.y, r0.y
add r0.y, -r0.x, r0.y
mad r0.x, cb3[25].w, r0.y, r0.x
mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
eq r0.y, cb5[0].x, l(1.000000)
if_nz r0.y
  eq r0.z, cb5[0].y, l(1.000000)
  mul r1.xyz, v2.yyyy, cb5[2].xyzx
  mad r1.xyz, cb5[1].xyzx, v2.xxxx, r1.xyzx
  mad r1.xyz, cb5[3].xyzx, v2.zzzz, r1.xyzx
  add r1.xyz, r1.xyzx, cb5[4].xyzx
  movc r1.xyz, r0.zzzz, r1.xyzx, v2.xyzx
  add r1.xyz, r1.xyzx, -cb5[6].xyzx
  mul r1.yzw, r1.xxyz, cb5[5].xxyz
  mad r0.z, r1.y, l(0.250000), l(0.750000)
  mad r0.w, cb5[0].z, l(0.500000), l(0.750000)
  max r1.x, r0.w, r0.z
  sample r1.xyzw, r1.xzwx, t1.xyzw, s0
else
  mov r1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r0.z, r1.xyzw, cb2[45].xyzw
div r1.xy, v4.xyxx, v4.wwww
sample r1.xyzw, r1.xyxx, t0.xyzw, s1
add_sat r0.x, r0.x, r1.x
min r0.z, r0.x, r0.z
movc r0.x, r0.y, r0.z, r0.x
mul r0.xzw, r0.xxxx, cb0[2].xxyz
if_nz r0.y
  eq r0.y, cb5[0].y, l(1.000000)
  mul r1.xyz, v2.yyyy, cb5[2].xyzx
  mad r1.xyz, cb5[1].xyzx, v2.xxxx, r1.xyzx
  mad r1.xyz, cb5[3].xyzx, v2.zzzz, r1.xyzx
  add r1.xyz, r1.xyzx, cb5[4].xyzx
  movc r1.xyz, r0.yyyy, r1.xyzx, v2.xyzx
  add r1.xyz, r1.xyzx, -cb5[6].xyzx
  mul r1.yzw, r1.xxyz, cb5[5].xxyz
  mul r0.y, r1.y, l(0.250000)
  mul r1.y, cb5[0].z, l(0.500000)
  mad r2.x, -cb5[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.y, r1.y
  min r1.x, r2.x, r0.y
  sample r2.xyzw, r1.xzwx, t1.xyzw, s0
  add r3.xyz, r1.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r3.xyzw, r3.xyzx, t1.xyzw, s0
  add r1.xyz, r1.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r1.xyzw, r1.xyzx, t1.xyzw, s0
  mov r4.xyz, v1.xyzx
  mov r4.w, l(1.000000)
  dp4 r2.x, r2.xyzw, r4.xyzw
  dp4 r2.y, r3.xyzw, r4.xyzw
  dp4 r2.z, r1.xyzw, r4.xyzw
else
  mov r1.xyz, v1.xyzx
  mov r1.w, l(1.000000)
  dp4 r2.x, cb2[38].xyzw, r1.xyzw
  dp4 r2.y, cb2[39].xyzw, r1.xyzw
  dp4 r2.z, cb2[40].xyzw, r1.xyzw
endif
add r1.xyz, r2.xyzx, v3.xyzx
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r1.xyz, r1.xyzx
mul r1.xyz, r1.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r1.xyz, r1.xyzx
mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r0.y, v1.xyzx, cb2[0].xyzx
max r0.y, r0.y, l(0.000000)
mad o0.xyz, r0.xzwx, r0.yyyy, r1.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used