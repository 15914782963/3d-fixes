// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 43f4f82311215740-vs.txt
// 3DMigoto: 43f4f82311215740 | Matched 2 variants of 1 shaders: Nature/SpeedTree Billboard
//
//       Unity headers extracted from Nature_SpeedTree Billboard
//       Shader "Nature/SpeedTree Billboard" {
//         Fallback "Transparent/Cutout/VertexLit"
//         SubShader 1/2 {
//           LOD 400
//           Tags { "DisableBatching"="LodFading" "IGNOREPROJECTOR"="true" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//           Pass 1/7 {
//             Name "FORWARD"
//             Tags { "DisableBatching"="LodFading" "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" "SHADOWSUPPORT"="true" }
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Nature_SpeedTree Billboard:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201609010 91 0 0
//      undeciphered1a: 5
// 1:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_EXP" "LOD_FADE_CROSSFADE" "EFFECT_BUMP" }
// 2:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_EXP2" "LOD_FADE_CROSSFADE" "EFFECT_BUMP" }
//      undeciphered2: 1 0 8 0 0 0
//      undeciphered3: 25 3 0 0 3 4 4 5
//      ConstBuffer "$Globals" 112
//      Float 68 [_WindQuality]
//      Float 72 [_WindEnabled]
//      Vector 80 [_Color]
//      Float 100 [_BilboardTreesWindPower]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 80 [_ProjectionParams]
//      Vector 96 [_ScreenParams]
//      ConstBuffer "UnityLighting" 752
//      Vector 656 [unity_SHBr]
//      Vector 672 [unity_SHBg]
//      Vector 688 [unity_SHBb]
//      Vector 704 [unity_SHC]
//      ConstBuffer "UnityPerDraw" 160
//      Vector 144 [unity_WorldTransformParams]
//      Matrix 0 [unity_ObjectToWorld]
//      Matrix 64 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 384
//      Matrix 272 [unity_MatrixVP]
//      ConstBuffer "SpeedTreeWind" 256
//      Vector 0 [_ST_WindVector]
//      Vector 16 [_ST_WindGlobal]
//      Vector 96 [_ST_WindBranchAdherences]
//      ConstBuffer "UnityBillboardPerCamera" 48
//      Vector 0 [unity_BillboardNormal] 3
//      Vector 16 [unity_BillboardTangent] 3
//      Vector 32 [unity_BillboardCameraParams]
//      ConstBuffer "UnityBillboardPerBatch" 288
//      Vector 0 [unity_BillboardInfo]
//      Vector 16 [unity_BillboardSize]
//      Vector 32 [unity_BillboardImageTexCoords0]
//      Vector 48 [unity_BillboardImageTexCoords1]
//      Vector 64 [unity_BillboardImageTexCoords2]
//      Vector 80 [unity_BillboardImageTexCoords3]
//      Vector 96 [unity_BillboardImageTexCoords4]
//      Vector 112 [unity_BillboardImageTexCoords5]
//      Vector 128 [unity_BillboardImageTexCoords6]
//      Vector 144 [unity_BillboardImageTexCoords7]
//      Vector 160 [unity_BillboardImageTexCoords8]
//      Vector 176 [unity_BillboardImageTexCoords9]
//      Vector 192 [unity_BillboardImageTexCoords10]
//      Vector 208 [unity_BillboardImageTexCoords11]
//      Vector 224 [unity_BillboardImageTexCoords12]
//      Vector 240 [unity_BillboardImageTexCoords13]
//      Vector 256 [unity_BillboardImageTexCoords14]
//      Vector 272 [unity_BillboardImageTexCoords15]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityPerDraw" 3
//      BindCB "UnityPerFrame" 4
//      BindCB "SpeedTreeWind" 5
//      BindCB "UnityBillboardPerCamera" 6
//      BindCB "UnityBillboardPerBatch" 7
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:02:22 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// NORMAL                   0   xyz         3     NONE   float
// TANGENT                  0   xyzw        4     NONE   float
// COLOR                    0   xyzw        5     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 8      w        5     NONE   float      w
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 6   xyz         7     NONE   float   xyz
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[10], immediateIndexed
dcl_constantbuffer cb4[21], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_constantbuffer cb6[3], immediateIndexed
dcl_constantbuffer cb7[18], dynamicIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output o5.w
dcl_output o6.xyz
dcl_output o7.xyz
dcl_output o8.xyzw
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.xy, v0.xyxx, cb3[3].xyxx
add r1.x, r0.x, v2.w
mad r1.y, v2.w, l(0.800000), r0.y
add r0.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
frc r0.xy, r0.xyxx
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r0.zw, |r0.xxxy|, |r0.xxxy|
mad r0.xy, -|r0.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mad r0.xy, r0.zwzz, r0.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r0.xy, r0.xyxx, r0.xyxx
mad r0.x, r0.y, r0.y, r0.x
div r0.y, cb5[6].x, cb5[1].z
mad r0.x, cb5[1].y, r0.x, r0.y
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb5[1].z
mad r0.z, v1.y, cb7[1].y, cb7[1].z
add r0.w, v1.x, l(-0.500000)
mul r0.w, r0.w, cb7[1].x
mul r0.w, r0.w, v2.x
mul r1.xyz, r0.wwww, cb6[1].xyzx
mad r1.w, r0.z, v2.y, r1.y
mad r0.y, -r0.y, l(0.250000), r1.w
max r0.y, r0.y, l(0.000000)
mul r0.y, r0.y, cb5[1].z
log r0.z, r0.y
mul r0.z, r0.z, cb5[1].w
exp r0.z, r0.z
ne r0.w, r0.y, l(0.000000)
movc r0.y, r0.w, r0.z, r0.y
mul r0.x, r0.y, r0.x
mul r0.yz, cb0[6].yyyy, cb5[0].xxzx
mad r0.xz, r0.yyzy, r0.xxxx, r1.xxzx
mov r0.y, r1.w
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r1.xzwx, r1.xzwx
sqrt r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r0.w, cb0[4].z, cb0[4].y
lt r0.w, l(0.000000), r0.w
movc r0.xyz, r0.wwww, r0.xyzx, r1.xwzx
add r0.xyz, r0.xyzx, v0.xyzx
mul r1.xyzw, r0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb3[2].xyzw, r0.zzzz, r1.xyzw
add r0.xyzw, r0.xyzw, cb3[3].xyzw
mul r1.xyzw, r0.yyyy, cb4[18].xyzw
mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 43f4f82311215740-vs.txt
ne r5.w, r1.w, l(1.0)
if_nz r5.w
  add r5.w, r1.w, -r5.y
  mad r1.x, r5.w, r5.x, r1.x
endif

mov o1.w, r0.x
mul r2.xyz, cb3[1].yzxy, cb6[1].yyyy
mad r2.xyz, cb3[0].yzxy, cb6[1].xxxx, r2.xyzx
mad r2.xyz, cb3[2].yzxy, cb6[1].zzzz, r2.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mov o1.x, r2.z
dp3 r3.x, cb6[0].xyzx, cb3[4].xyzx
dp3 r3.y, cb6[0].xyzx, cb3[5].xyzx
dp3 r3.z, cb6[0].xyzx, cb3[6].xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyzw, r2.wwww, r3.xyzz
mul r4.xyz, r2.xyzx, r3.wxyw
mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
mul r4.xyz, r4.xyzx, -cb3[9].wwww
mov o1.y, r4.x
mov o1.z, r3.x
mov o2.w, r0.y
mov o2.x, r2.x
mov o3.x, r2.y
mov o2.y, r4.y
mov o3.y, r4.z
mov o2.z, r3.y
mov o3.w, r0.z
mov o3.z, r3.w
mov o4.xyzw, cb0[5].xyzw
add r2.x, v2.z, cb6[2].w
mad r2.x, r2.x, cb7[0].y, l(0.500000)
round_ni r2.x, r2.x
div r2.x, r2.x, cb7[0].x
ge r2.y, r2.x, -r2.x
frc r2.x, |r2.x|
movc r2.x, r2.y, r2.x, -r2.x
mul r2.x, r2.x, cb7[0].x
ftou r2.x, r2.x
lt r2.y, cb7[r2.x + 2].w, l(0.000000)
mad r2.zw, -cb7[r2.x + 2].zzzw, v1.yyyx, cb7[r2.x + 2].xxxy
mad r4.xy, cb7[r2.x + 2].zwzz, v1.xyxx, cb7[r2.x + 2].xyxx
movc o5.xy, r2.yyyy, r2.zwzz, r4.xyxx
mov o5.w, r1.z
mov o5.z, l(0)
mul r2.xyz, r0.yyyy, cb4[18].xywx
mad r2.xyz, cb4[17].xywx, r0.xxxx, r2.xyzx
mad r0.xyz, cb4[19].xywx, r0.zzzz, r2.xyzx
mad r0.xyz, cb4[20].xywx, r0.wwww, r0.xyzx
mov o6.z, r0.z
mov r2.xz, l(0.500000,0,0.500000,0)
mov r2.y, cb1[5].x
mul r0.xyz, r0.xyzx, r2.xyzx
mul r2.xyz, r1.xywx, r2.xyzx
mov o8.zw, r1.zzzw
mul r0.w, r0.y, l(0.500000)
add r0.xy, r0.zzzz, r0.xwxx
mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.250000, 0.250000)
mul o6.xy, r0.zwzz, r0.xyxx
mul r0.x, r3.y, r3.y
mad r0.x, r3.x, r3.x, -r0.x
mul r1.xyzw, r3.ywzx, r3.xyzw
dp4 r3.x, cb2[41].xyzw, r1.xyzw
dp4 r3.y, cb2[42].xyzw, r1.xyzw
dp4 r3.z, cb2[43].xyzw, r1.xyzw
mad o7.xyz, cb2[44].xyzx, r0.xxxx, r3.xyzx
mul r2.w, r2.y, l(0.500000)
add o8.xy, r2.zzzz, r2.xwxx
ret
// Approximately 0 instruction slots used