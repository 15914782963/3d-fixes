// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed fe012de798e28a4e-ps.txt
// 3DMigoto: fe012de798e28a4e |    Unity headers extracted from Relief Pack - Bonus Shaders_Water_ FlowMap
//    Shader "Relief Pack - Bonus Shaders/Water/ FlowMap" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "RenderType"="Opaque" }
//        Pass 4/4 {
//          Name "META"
//          Tags { "LIGHTMODE"="META" "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Relief Pack - Bonus Shaders_Water_ FlowMap:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 130 8 0
//   undeciphered1a: 5
//   Keywords { "RTP_PM_SHADING" }
//   undeciphered2: 1 5 3 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 224
//   Vector 64 [_Color]
//   Float 92 [TERRAIN_ExtrudeHeight]
//   Float 96 [TERRAIN_LayerWetStrength]
//   Float 100 [TERRAIN_WaterLevelSlopeDamp]
//   Float 104 [TERRAIN_DropletsSpeed]
//   Float 108 [TERRAIN_RainIntensity]
//   Float 112 [TERRAIN_WetDropletsStrength]
//   Float 116 [TERRAIN_Refraction]
//   Float 120 [TERRAIN_WetRefraction]
//   Float 124 [TERRAIN_Flow]
//   Float 128 [TERRAIN_FlowScale]
//   Float 132 [TERRAIN_RippleScale]
//   Float 136 [TERRAIN_FlowSpeed]
//   Float 140 [TERRAIN_FlowSpeedMap]
//   Float 144 [TERRAIN_WaterLevel]
//   Vector 160 [TERRAIN_WaterColor]
//   Float 176 [TERRAIN_WaterEdge]
//   Float 192 [unity_OneOverOutputBoost]
//   Float 196 [unity_MaxOutputValue]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityMetaPass" 48
//   VectorBool 16 [unity_MetaFragmentControl] 4
//   SetTexture 0 [_HeightMap] 2D 1
//   SetTexture 1 [TERRAIN_FlowingMap] 2D 4
//   SetTexture 2 [_FlowMap] 2D 2
//   SetTexture 3 [TERRAIN_RippleMap] 2D 3
//   SetTexture 4 [_MainTex] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityMetaPass" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:26:35 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float     z
// TEXCOORD                 4   xyzw        6     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.z
dcl_input_ps linear v6.zw
dcl_output o0.xyzw
dcl_temps 7
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed fe012de798e28a4e-ps.txt

mul r5.w, -r5.x, r5.y
mad r6.xyz, -r5.wwww, cb10[0].xyzw, cb1[4].xyzw

mul r0.xy, v6.zwzz, l(4.000000, 4.000000, 0.000000, 0.000000)
max r0.xy, r0.xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
min r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r0.xy, r0.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
mov r1.x, v2.w
mov r1.y, v3.w
mov r1.z, v4.w
add r1.xyz, -r1.xyzx, r6.xyzx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r1.xyz, r0.zzzz, r1.xyzx
mul r2.xyz, r1.yyyy, v3.xyzx
mad r1.xyw, v2.xyxz, r1.xxxx, r2.xyxz
mad r1.xyz, v4.xyzx, r1.zzzz, r1.xywx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r1.xy, r0.zzzz, r1.xyxx
mad r0.z, r1.z, r0.z, l(0.420000)
div r0.zw, r1.xxxy, r0.zzzz
mul r1.x, cb0[5].w, l(0.500000)
sample r2.xyzw, v1.xyxx, t0.xyzw, s1
mad r1.x, r2.w, cb0[5].w, -r1.x
mul r1.yz, r0.zzwz, r1.xxxx
mad r0.zw, r1.xxxx, r0.zzzw, v1.xxxy
dp2 r1.x, v6.zwzz, v6.zwzz
min r1.x, r1.x, l(1.000000)
add r1.x, -r1.x, l(1.000000)
sqrt r1.x, r1.x
add r1.x, -r1.x, l(1.000000)
mul_sat r1.x, r1.x, cb0[6].y
mul r2.xy, v1.xyxx, l(0.125000, 0.125000, 0.000000, 0.000000)
sample r3.xyzw, r2.xyxx, t1.xyzw, s4
add r1.w, -cb0[6].x, l(1.000000)
dp2 r1.w, r3.wwww, r1.wwww
mad_sat r1.w, v5.z, l(2.000000), -r1.w
dp2 r1.w, cb0[6].xxxx, r1.wwww
mov_sat r2.x, r1.w
add_sat r1.w, r1.w, l(-1.000000)
add r2.y, r2.x, l(-1.000000)
add r2.y, -r1.x, r2.y
mad r1.x, -r1.x, l(4.000000), l(1.000000)
max r1.x, r1.x, l(0.000000)
mul r1.x, r1.x, r1.w
mad r1.w, r2.y, l(2.000000), cb0[9].x
max r1.w, r1.w, l(0.000000)
min r1.w, r1.w, l(2.000000)
add r1.w, -r2.w, r1.w
mul_sat r1.w, r1.w, cb0[11].x
mul r1.w, r1.w, r1.w
mad r2.y, -r1.w, l(0.500000), l(1.000000)
mad r1.yz, r2.yyyy, r1.yyzy, v1.xxyx
mul r1.yz, r1.yyzy, cb0[8].xxxx
sample r3.xyzw, r1.yzyy, t2.xyzw, s2
mul r1.yz, r1.yyzy, cb0[8].xxxx
mad r2.yz, r3.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
mov r3.xw, cb0[8].wwww
mov r3.yz, l(0,1.000000,-1.000000,0)
mul r2.yz, r2.yyzy, r3.xxyx
mad r0.xy, r2.yzyy, r3.zwzz, r0.xyxx
mul r2.y, cb0[8].x, cb0[8].z
mul r0.xy, r0.xyxx, r2.yyyy
mul r2.y, cb1[0].x, l(4.000000)
frc r2.y, r2.y
mad r2.z, r2.y, l(2.000000), l(0.500000)
add r2.y, r2.y, r2.y
frc r2.yz, r2.yyzy
mul r3.xy, r0.xyxx, r2.zzzz
mad r3.xy, r3.xyxx, l(1.100000, 1.100000, 0.000000, 0.000000), r1.yzyy
mad r1.yz, r2.yyyy, r0.xxyx, r1.yyzy
mad r2.y, r2.y, l(2.000000), l(-1.000000)
sample r4.xyzw, r1.yzyy, t1.xyzw, s4
mad r1.yz, r4.wwyw, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
sample r3.xyzw, r3.xyxx, t1.xyzw, s4
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
add r3.xy, -r1.yzyy, r3.xyxx
mad r1.yz, |r2.yyyy|, r3.xxyx, r1.yyzy
add r2.y, -r2.x, l(1.000000)
mad_sat r2.x, -r2.y, r2.w, r2.x
mul r2.y, r2.x, r2.x
mul r2.y, r2.y, cb0[7].w
mul r2.y, r1.w, r2.y
mul r2.y, r2.x, r2.y
add r2.x, r2.x, r2.x
min r2.x, r2.x, l(1.000000)
mad r2.x, -r2.x, l(0.300000), l(1.000000)
mul r1.yz, r1.yyzy, r2.yyyy
mul r0.xy, r0.xyxx, r1.yzyy
mul r0.xy, r0.xyxx, l(0.100000, 0.100000, 0.000000, 0.000000)
div r0.xy, r0.xyxx, cb0[8].xxxx
mad r0.xy, v1.xyxx, cb0[8].yyyy, r0.xyxx
add r2.yz, r0.xxyx, l(0.000000, 0.250000, 0.250000, 0.000000)
sample r3.xyzw, r0.xyxx, t3.xyzw, s3
sample r4.xyzw, r2.yzyy, t3.xyzw, s3
mad r0.x, cb1[0].x, cb0[6].z, r4.w
frc r0.x, r0.x
mul r0.y, r1.x, cb0[6].w
mul r1.x, r1.x, l(4.000000)
mad r0.y, r0.y, l(0.800000), l(0.200000)
add_sat r2.y, -r0.x, r0.y
add r0.x, r4.z, r0.x
add r0.x, r0.x, l(-1.000000)
mul r0.x, r0.x, l(9.000000)
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(3.000000)
mul r0.x, r0.x, l(3.141500)
sincos r0.x, null, r0.x
mul r2.y, r4.z, r2.y
mad r2.zw, r4.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r0.x, r0.x, r2.y
mul r2.yz, r0.xxxx, r2.zzwz
mul r2.yz, r2.yyzy, l(0.000000, 0.350000, 0.350000, 0.000000)
mad r0.x, cb1[0].x, cb0[6].z, r3.w
frc r0.x, r0.x
add_sat r0.y, -r0.x, r0.y
add r0.x, r3.z, r0.x
add r0.x, r0.x, l(-1.000000)
mul r0.x, r0.x, l(9.000000)
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(3.000000)
mul r0.x, r0.x, l(3.141500)
sincos r0.x, null, r0.x
mul r0.y, r3.z, r0.y
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r0.x, r0.x, r0.y
mul r0.xy, r0.xxxx, r3.xyxx
mad r0.xy, r0.xyxx, l(0.350000, 0.350000, 0.000000, 0.000000), r2.yzyy
add r2.y, -cb0[7].x, l(1.000000)
mad r2.y, r1.w, r2.y, cb0[7].x
mul r1.x, r1.x, r2.y
mad r0.xy, r0.xyxx, r1.xxxx, r1.yzyy
mul r0.xy, r0.xyxx, cb0[7].yyyy
max r1.x, r1.w, cb0[7].z
mul r1.y, r1.w, cb0[10].w
mad r0.xy, r0.xyxx, r1.xxxx, r0.zwzz
sample r0.xyzw, r0.xyxx, t4.xyzw, s0
add r1.xzw, cb0[4].xxyz, cb0[4].xxyz
mul r2.yzw, r0.xxyz, r1.xxzw
mad r0.xyz, -r0.xyzx, r1.xzwx, cb0[10].xyzx
mad r0.xyz, r1.yyyy, r0.xyzx, r2.yzwy
mul r0.xyz, r2.xxxx, r0.xyzx
log r0.xyz, r0.xyzx
mov_sat r0.w, cb0[12].x
mul r0.xyz, r0.xyzx, r0.wwww
exp r0.xyz, r0.xyzx
min r0.xyz, r0.xyzx, cb0[12].yyyy
mov r0.w, l(1.000000)
movc r0.xyzw, cb2[1].xxxx, r0.xyzw, l(0,0,0,0)
movc o0.xyzw, cb2[1].yyyy, l(0,0,0,0.0235294122), r0.xyzw
ret
// Approximately 0 instruction slots used