// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9ee67e187315cfa5-ps.txt
// 3DMigoto: 9ee67e187315cfa5 | Matched 3 variants of 1 shaders: Sandbox/VolumetricLight
//
//       Unity headers extracted from Sandbox_VolumetricLight
//       Shader "Sandbox/VolumetricLight" {
//         SubShader 1/1 {
//           LOD 100
//           Tags { "RenderType"="Opaque" }
//           Pass 5/5 {
//             Tags { "RenderType"="Opaque" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Sandbox_VolumetricLight:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 44 2 1
//      undeciphered1a: 4
// 4:   Keywords { "DIRECTIONAL" "DIRECTIONAL_COOKIE" "HEIGHT_FOG" }
// 1:   Keywords { "DIRECTIONAL" "HEIGHT_FOG" }
// 2:   Keywords { "DIRECTIONAL_COOKIE" "HEIGHT_FOG" }
//      undeciphered2: 1 2 2 2 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 544
//      Vector 48 [_LightDir]
//      Vector 80 [_LightColor]
//      Vector 448 [_VolumetricLight]
//      Vector 464 [_MieG]
//      Vector 512 [_HeightFog]
//      Float 528 [_MaxRayLength]
//      ScalarInt 532 [_SampleCount]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 112 [_ZBufferParams]
//      SetTexture 0 [_CameraDepthTexture] 2D 0
//      SetTexture 1 [_DitherTexture] 2D 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:14:14 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 6
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9ee67e187315cfa5-ps.txt

mul r4.w, -r4.x, r4.y
mad r5.xyz, -r4.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s0
mad r0.x, cb1[7].x, r0.x, cb1[7].y
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
add r0.yzw, v2.xxyz, -r5.xxyz
mul r0.yzw, r0.xxxx, r0.yyzw
dp3 r1.x, r0.yzwy, r0.yzwy
sqrt r1.x, r1.x
div r0.yzw, r0.yyzw, r1.xxxx
min r1.x, r1.x, cb0[33].x
round_ni r1.yz, v0.xxyx
mul r1.yz, r1.yyzy, l(0.000000, 0.125000, 0.125000, 0.000000)
ge r2.xy, r1.yzyy, -r1.yzyy
frc r1.yz, |r1.yyzy|
movc r1.yz, r2.xxyx, r1.yyzy, -r1.yyzy
add r1.yz, r1.yyzy, l(0.000000, 0.062500, 0.062500, 0.000000)
sample r2.xyzw, r1.yzyy, t1.xyzw, s1
itof r1.y, cb0[33].y
div r1.x, r1.x, r1.y
mul r1.y, r0.z, r1.x
mad r1.y, r1.y, r2.w, r5.y
dp3 r0.y, cb0[3].xyzx, -r0.yzwy
mul r1.zw, r1.xxxx, cb0[28].xxxy
mov r0.w, r1.y
mov r2.xyzw, l(0,0,0,0)
mov r3.x, l(0)
loop
  ige r3.y, r3.x, cb0[33].y
  breakc_nz r3.y
  add r3.y, r0.w, cb0[32].x
  mul r3.y, -r3.y, cb0[32].y
  mul r3.y, r3.y, l(1.442695)
  exp r3.y, r3.y
  mul r3.z, r1.z, r3.y
  mad r2.w, r1.w, r3.y, r2.w
  mul r3.y, r2.w, l(-1.442695)
  exp r3.y, r3.y
  mad r2.xyz, r3.zzzz, r3.yyyy, r2.xyzx
  mad r0.w, r0.z, r1.x, r0.w
  iadd r3.x, r3.x, l(1)
endloop
mad r0.y, -cb0[29].z, r0.y, cb0[29].y
log r0.y, r0.y
mul r0.y, r0.y, l(1.500000)
exp r0.y, r0.y
div r0.y, cb0[29].x, r0.y
mul r0.y, r0.y, cb0[29].w
mul r0.yzw, r0.yyyy, r2.xxyz
mul r0.yzw, r0.yyzw, cb0[5].xxyz
max o0.xyz, r0.yzwy, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.y, r2.w, l(-1.442695)
exp r0.y, r0.y
lt r0.x, l(0.999999), r0.x
add r0.z, -r0.y, l(1.000000)
mad r0.z, cb0[28].w, r0.z, r0.y
movc o0.w, r0.x, r0.z, r0.y
ret
// Approximately 0 instruction slots used