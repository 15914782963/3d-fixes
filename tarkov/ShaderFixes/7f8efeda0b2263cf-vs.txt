// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 7f8efeda0b2263cf-vs.txt
// 3DMigoto: 7f8efeda0b2263cf |    Unity headers extracted from Nature_SpeedTree Billboard
//    Shader "Nature/SpeedTree Billboard" {
//      Fallback "Transparent/Cutout/VertexLit"
//      SubShader 2/2 {
//        LOD 400
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//        Pass 6/6 {
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="Vertex" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Nature_SpeedTree Billboard:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201609010 68 0 1
//   undeciphered1a: 6
//   Keywords { "FOG_EXP" }
//   undeciphered2: 1 0 8 0 0 0
//   undeciphered3: 25 3 0 0 3 4 4 5
//   ConstBuffer "$Globals" 80
//   Vector 48 [_Color]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 752
//   Vector 96 [unity_LightColor0]
//   Vector 112 [unity_LightColor1]
//   Vector 128 [unity_LightColor2]
//   Vector 144 [unity_LightColor3]
//   Vector 160 [unity_LightColor4]
//   Vector 176 [unity_LightColor5]
//   Vector 192 [unity_LightColor6]
//   Vector 208 [unity_LightColor7]
//   Vector 224 [unity_LightPosition0]
//   Vector 240 [unity_LightPosition1]
//   Vector 256 [unity_LightPosition2]
//   Vector 272 [unity_LightPosition3]
//   Vector 288 [unity_LightPosition4]
//   Vector 304 [unity_LightPosition5]
//   Vector 320 [unity_LightPosition6]
//   Vector 336 [unity_LightPosition7]
//   Vector 352 [unity_LightAtten0]
//   Vector 368 [unity_LightAtten1]
//   Vector 384 [unity_LightAtten2]
//   Vector 400 [unity_LightAtten3]
//   Vector 416 [unity_LightAtten4]
//   Vector 432 [unity_LightAtten5]
//   Vector 448 [unity_LightAtten6]
//   Vector 464 [unity_LightAtten7]
//   ConstBuffer "UnityPerDraw" 160
//   Matrix 0 [unity_ObjectToWorld]
//   Matrix 64 [unity_WorldToObject]
//   ConstBuffer "UnityPerFrame" 384
//   Vector 0 [glstate_lightmodel_ambient]
//   Matrix 144 [unity_MatrixV]
//   Matrix 208 [unity_MatrixInvV]
//   Matrix 272 [unity_MatrixVP]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityBillboardPerCamera" 48
//   Vector 0 [unity_BillboardNormal] 3
//   Vector 16 [unity_BillboardTangent] 3
//   Vector 32 [unity_BillboardCameraParams]
//   ConstBuffer "UnityBillboardPerBatch" 288
//   Vector 0 [unity_BillboardInfo]
//   Vector 16 [unity_BillboardSize]
//   Vector 32 [unity_BillboardImageTexCoords0]
//   Vector 48 [unity_BillboardImageTexCoords1]
//   Vector 64 [unity_BillboardImageTexCoords2]
//   Vector 80 [unity_BillboardImageTexCoords3]
//   Vector 96 [unity_BillboardImageTexCoords4]
//   Vector 112 [unity_BillboardImageTexCoords5]
//   Vector 128 [unity_BillboardImageTexCoords6]
//   Vector 144 [unity_BillboardImageTexCoords7]
//   Vector 160 [unity_BillboardImageTexCoords8]
//   Vector 176 [unity_BillboardImageTexCoords9]
//   Vector 192 [unity_BillboardImageTexCoords10]
//   Vector 208 [unity_BillboardImageTexCoords11]
//   Vector 224 [unity_BillboardImageTexCoords12]
//   Vector 240 [unity_BillboardImageTexCoords13]
//   Vector 256 [unity_BillboardImageTexCoords14]
//   Vector 272 [unity_BillboardImageTexCoords15]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityBillboardPerCamera" 6
//   BindCB "UnityBillboardPerBatch" 7
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:10:08 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyz
// NORMAL                   0   xyz         3     NONE   float
// TANGENT                  0   xyzw        4     NONE   float
// COLOR                    0   xyzw        5     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   x           1     NONE   float   x
// TEXCOORD                 2    yzw        1     NONE   float    yzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   x           3     NONE   float   x
//
vs_4_0
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[25], dynamicIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[21], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[3], immediateIndexed
dcl_constantbuffer cb7[18], dynamicIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.x
dcl_output o1.yzw
dcl_output o2.xyzw
dcl_output o3.x
dcl_temps 7

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.x, v1.x, l(-0.500000)
mul r0.x, r0.x, cb7[1].x
mul r0.x, r0.x, v2.x
mul r0.xyz, r0.xxxx, cb6[1].xyzx
mad r1.x, v1.y, cb7[1].y, cb7[1].z
mad r0.w, r1.x, v2.y, r0.y
add r0.xyz, r0.xwzx, v0.xyzx
add r0.w, v2.z, cb6[2].w
mad r0.w, r0.w, cb7[0].y, l(0.500000)
round_ni r0.w, r0.w
div r0.w, r0.w, cb7[0].x
ge r1.x, r0.w, -r0.w
frc r0.w, |r0.w|
movc r0.w, r1.x, r0.w, -r0.w
mul r0.w, r0.w, cb7[0].x
ftou r0.w, r0.w
lt r1.x, cb7[r0.w + 2].w, l(0.000000)
mad r1.yz, -cb7[r0.w + 2].zzwz, v1.yyxy, cb7[r0.w + 2].xxyx
mad r2.xy, cb7[r0.w + 2].zwzz, v1.xyxx, cb7[r0.w + 2].xyxx
movc o1.yz, r1.xxxx, r1.yyzy, r2.xxyx
mul r1.xyzw, r0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb3[2].xyzw, r0.zzzz, r1.xyzw
add r0.xyzw, r0.xyzw, cb3[3].xyzw
mul r1.xyz, r0.yyyy, cb4[10].xyzx
mad r1.xyz, cb4[9].xyzx, r0.xxxx, r1.xyzx
mad r1.xyz, cb4[11].xyzx, r0.zzzz, r1.xyzx
mad r1.xyz, cb4[12].xyzx, r0.wwww, r1.xyzx
mul r2.xyz, cb3[5].xyzx, cb4[13].yyyy
mad r2.xyz, cb3[4].xyzx, cb4[13].xxxx, r2.xyzx
mad r2.xyz, cb3[6].xyzx, cb4[13].zzzz, r2.xyzx
mad r2.xyz, cb3[7].xyzx, cb4[13].wwww, r2.xyzx
mul r3.xyz, cb3[5].xyzx, cb4[14].yyyy
mad r3.xyz, cb3[4].xyzx, cb4[14].xxxx, r3.xyzx
mad r3.xyz, cb3[6].xyzx, cb4[14].zzzz, r3.xyzx
mad r3.xyz, cb3[7].xyzx, cb4[14].wwww, r3.xyzx
mul r4.xyz, cb3[5].xyzx, cb4[15].yyyy
mad r4.xyz, cb3[4].xyzx, cb4[15].xxxx, r4.xyzx
mad r4.xyz, cb3[6].xyzx, cb4[15].zzzz, r4.xyzx
mad r4.xyz, cb3[7].xyzx, cb4[15].wwww, r4.xyzx
dp3 r2.x, r2.xyzx, cb6[0].xyzx
dp3 r2.y, r3.xyzx, cb6[0].xyzx
dp3 r2.z, r4.xyzx, cb6[0].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
add r3.xyz, cb4[0].xyzx, cb4[0].xyzx
mov r4.xyz, r3.xyzx
mov r1.w, l(0)
loop
  ige r2.w, r1.w, l(2)
  breakc_nz r2.w
  mad r5.xyz, -r1.xyzx, cb2[r1.w + 14].wwww, cb2[r1.w + 14].xyzx
  dp3 r2.w, r5.xyzx, r5.xyzx
  max r2.w, r2.w, l(0.000001)
  rsq r3.w, r2.w
  mul r5.xyz, r3.wwww, r5.xyzx
  mad r2.w, r2.w, cb2[r1.w + 22].z, l(1.000000)
  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  dp3 r3.w, r2.xyzx, r5.xyzx
  max r3.w, r3.w, l(0.000000)
  mul r2.w, r2.w, r3.w
  mad r4.xyz, cb2[r1.w + 6].xyzx, r2.wwww, r4.xyzx
  iadd r1.w, r1.w, l(1)
endloop
mul o2.xyz, r4.xyzx, cb0[3].xyzx
mul r1.xyzw, r0.yyyy, cb4[18].xyzw
mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw

// Relocated to here with asmtool.py
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 7f8efeda0b2263cf-vs.txt
ne r6.w, r0.w, l(1.0)
if_nz r6.w
  add r6.w, r0.w, -r6.y
  mad r0.x, r6.w, r6.x, r0.x
endif

div r1.x, r0.z, cb1[5].y
add r1.x, -r1.x, l(1.000000)
mul r1.x, r1.x, cb1[5].z
max r1.x, r1.x, l(0.000000)
mul r1.x, r1.x, cb5[1].y
exp o1.x, -r1.x

// mov o0.xyzw, r0.xyzw // Relocated from here with asmtool.py

mov o1.w, l(0)
mov o2.w, cb0[3].w
mov o3.x, l(0)
ret
// Approximately 0 instruction slots used