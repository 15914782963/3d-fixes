// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed b4cbc01bf965cdc6-vs.txt
// 3DMigoto: b4cbc01bf965cdc6 |    Unity headers extracted from Hidden_TerrainEngine_Details_WavingDoublePass
//    Shader "Hidden/TerrainEngine/Details/WavingDoublePass" {
//      SubShader 1/1 {
//        Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "QUEUE"="Geometry+2" "RenderType"="Opaque" }
//        Pass 1/6 {
//          Name "FORWARD"
//          Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+2" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hidden_TerrainEngine_Details_WavingDoublePass:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201609010 90 0 0
//   undeciphered1a: 5
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
//   undeciphered2: 1 0 6 0 0 0
//   undeciphered3: 15 4 0 0 1 2 3 4 2 1
//   ConstBuffer "$Globals" 176
//   Vector 96 [_GrassPlayerPosition]
//   Vector 112 [_GrassPlayerDirection]
//   Vector 128 [_GrassValues]
//   Vector 160 [_MainTex_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 752
//   Vector 656 [unity_SHBr]
//   Vector 672 [unity_SHBg]
//   Vector 688 [unity_SHBb]
//   Vector 704 [unity_SHC]
//   ConstBuffer "UnityPerDraw" 160
//   Matrix 0 [unity_ObjectToWorld]
//   Matrix 64 [unity_WorldToObject]
//   ConstBuffer "UnityPerFrame" 384
//   Matrix 272 [unity_MatrixVP]
//   ConstBuffer "UnityTerrain" 272
//   Vector 0 [_WavingTint]
//   Vector 16 [_WaveAndDistance]
//   Vector 32 [_CameraPosition]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityTerrain" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:17:16 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float   xy
// TEXCOORD                 1   xyzw        4     NONE   float
// TEXCOORD                 2   xyzw        5     NONE   float
// TEXCOORD                 3   xyzw        6     NONE   float
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// COLOR                    0   xyzw        4     NONE   float   xyzw
// TEXCOORD                 3   xyz         5     NONE   float   xyz
// TEXCOORD                 4   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_constantbuffer cb4[21], immediateIndexed
dcl_constantbuffer cb5[3], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v7.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.x, cb0[8].y, cb0[8].y
mul r0.yz, cb0[7].yyxy, l(0.000000, 1.000000, -1.000000, 0.000000)
add r1.xyz, v0.xzyx, -cb0[6].xzyx
dp2 r0.y, r1.xyxx, r0.yzyy
mad r0.z, -r0.y, r0.y, l(1.000000)
mul r0.x, r0.z, r0.x
sqrt r0.x, r0.x
mul r0.x, r0.x, cb0[8].z
lt r0.z, r0.y, l(1.000000)
lt r0.y, l(-1.000000), r0.y
and r0.y, r0.y, r0.z
dp2 r0.z, r1.xyxx, r1.xyxx
rsq r0.w, r0.z
sqrt r0.z, r0.z
mul r1.xy, r0.wwww, r1.xyxx
dp2 r0.w, cb0[7].xyxx, r1.xyxx
mad r1.xy, r1.xyxx, l(0.750000, 0.750000, 0.000000, 0.000000), cb0[7].xyxx
movc r0.x, r0.y, r0.x, r0.w
lt r0.y, l(0.000000), r0.w
movc r0.x, r0.y, cb0[8].z, r0.x
div r0.y, r0.z, r0.x
lt r0.x, r0.z, r0.x
lt r0.z, r0.z, cb0[8].w
log r0.y, r0.y
mul r0.y, r0.y, cb0[8].w
exp r0.y, r0.y
add r0.y, -r0.y, l(1.000000)
mad r0.w, -cb0[8].x, r0.y, l(1.570800)
mad r0.y, -cb0[7].w, r0.y, l(1.570800)
movc r0.y, r0.z, r0.w, r0.y
sincos r2.x, r3.x, r0.y
dp2 r0.y, r1.xyxx, r1.xyxx
rsq r0.y, r0.y
mul r0.yz, r0.yyyy, r1.xxyx
mul r0.yz, r0.yyzy, r3.xxxx
mad r2.y, r1.z, r2.x, cb0[6].y
mad r2.xz, r0.yyzy, r1.zzzz, v0.xxzx
movc r0.xyz, r0.xxxx, r2.xyzx, v0.xyzx
mul r1.xyzw, r0.yyyy, cb3[1].xyzw
mul r2.xy, r0.xzxx, cb5[1].yyyy
mul r3.xyzw, r2.yyyy, l(0.006000, 0.020000, 0.020000, 0.050000)
mad r2.xyzw, r2.xxxx, l(0.012000, 0.020000, 0.060000, 0.024000), r3.xyzw
mad r2.xyzw, cb5[1].xxxx, l(1.200000, 2.000000, 1.600000, 4.800000), r2.xyzw
frc r2.xyzw, r2.xyzw
mad r2.xyzw, r2.xyzw, l(6.408849, 6.408849, 6.408849, 6.408849), l(-3.14159274, -3.14159274, -3.14159274, -3.14159274)
mul r3.xyzw, r2.xyzw, r2.xyzw
mul r4.xyzw, r2.xyzw, r3.xyzw
mad r2.xyzw, r4.xyzw, l(-0.161616161, -0.161616161, -0.161616161, -0.161616161), r2.xyzw
mul r4.xyzw, r3.xyzw, r4.xyzw
mul r3.xyzw, r3.xyzw, r4.xyzw
mad r2.xyzw, r4.xyzw, l(0.00833330024, 0.00833330024, 0.00833330024, 0.00833330024), r2.xyzw
mad r2.xyzw, r3.xyzw, l(-0.000198409994, -0.000198409994, -0.000198409994, -0.000198409994), r2.xyzw
mul r2.xyzw, r2.xyzw, r2.xyzw
mul r2.xyzw, r2.xyzw, r2.xyzw
mul r0.w, v7.w, cb5[1].z
mul r3.xyzw, r0.wwww, r2.xyzw
dp4 r0.w, r2.xyzw, l(0.674199879, 0.674199879, 0.269679934, 0.134839967)
mul r0.w, r0.w, l(0.700000)
dp4 r2.x, r3.xyzw, l(0.024000, 0.040000, -0.120000, 0.096000)
dp4 r2.z, r3.xyzw, l(0.006000, 0.020000, -0.020000, 0.100000)
mad r0.xz, -r2.xxzx, cb5[1].zzzz, r0.xxzx
add r2.xyz, r0.xyzx, -cb5[2].xyzx
dp3 r0.y, r2.xyzx, r2.xyzx
add r0.y, -r0.y, cb5[1].w
dp2_sat o4.w, cb5[2].wwww, r0.yyyy
mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb3[2].xyzw, r0.zzzz, r1.xyzw
add r2.xyzw, r1.xyzw, cb3[3].xyzw
mad o3.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
mul r1.xyzw, r2.yyyy, cb4[18].xyzw
mad r1.xyzw, cb4[17].xyzw, r2.xxxx, r1.xyzw
mad r1.xyzw, cb4[19].xyzw, r2.zzzz, r1.xyzw
mad r1.xyzw, cb4[20].xyzw, r2.wwww, r1.xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed b4cbc01bf965cdc6-vs.txt
ne r5.w, r1.w, l(1.0)
if_nz r5.w
  add r5.w, r1.w, -r5.y
  mad r1.x, r5.w, r5.x, r1.x
endif

mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
dp3 r0.x, v2.xyzx, cb3[4].xyzx
dp3 r0.y, v2.xyzx, cb3[5].xyzx
dp3 r0.z, v2.xyzx, cb3[6].xyzx
dp3 r2.x, r0.xyzx, r0.xyzx
rsq r2.x, r2.x
mul r0.xyz, r0.xyzx, r2.xxxx
mov o2.xyz, r0.xyzx
add r2.xyz, cb5[0].xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r2.xyz, r0.wwww, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
add r2.xyz, r2.xyzx, r2.xyzx
mul o4.xyz, r2.xyzx, v7.xyzx
mul r0.w, r0.y, r0.y
mad r0.w, r0.x, r0.x, -r0.w
mul r2.xyzw, r0.yzzx, r0.xyzz
dp4 r0.x, cb2[41].xyzw, r2.xyzw
dp4 r0.y, cb2[42].xyzw, r2.xyzw
dp4 r0.z, cb2[43].xyzw, r2.xyzw
mad o5.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
mul r0.x, r1.y, cb1[5].x
mul r0.w, r0.x, l(0.500000)
mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mov o6.zw, r1.zzzw
add o6.xy, r0.zzzz, r0.xwxx
mov o7.xyzw, l(0,0,0,0)
ret
// Approximately 0 instruction slots used