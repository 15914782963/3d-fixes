// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7612fa4d06ef6a6f-ps.txt
// 3DMigoto: 7612fa4d06ef6a6f | Matched 4 variants of 1 shaders: Hidden/AreaLight
//
//       Unity headers extracted from Hidden_AreaLight
//       Shader "Hidden/AreaLight" {
//         SubShader 1/1 {
//           Tags { "QUEUE"="Geometry-1" }
//    1:     Pass 2/7 {
//    2:     Pass 4/7 {
//    4:     Pass 6/7 {
//             Tags { "QUEUE"="Geometry-1" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Hidden_AreaLight:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 477 6 25
//      undeciphered1a: 10
// 8:   Keywords { "SHADOWCUBEPLANES" "INVERTEDSHADOWCUBEPLANES" "OPTICCAMERA" "SPOTLIGHT" "AREA_LIGHT_SHADOWS" "SCENEVIEWCAMERA" }
// 2:   Keywords { "SHADOWCUBEPLANES" "INVERTEDSHADOWCUBEPLANES" "OPTICCAMERA" "SPOTLIGHT" "AREA_LIGHT_SHADOWS" }
// 4:   Keywords { "SHADOWCUBEPLANES" "INVERTEDSHADOWCUBEPLANES" "SPOTLIGHT" "AREA_LIGHT_SHADOWS" "SCENEVIEWCAMERA" }
// 1:   Keywords { "SHADOWCUBEPLANES" "INVERTEDSHADOWCUBEPLANES" "SPOTLIGHT" "AREA_LIGHT_SHADOWS" }
//      undeciphered2: 1 7 3 7 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 672
//      Vector 112 [_LightColor]
//      Float 208 [_ShadowReceiverWidth]
//      Float 212 [_ShadowReceiverDistanceScale]
//      Vector 216 [_ShadowLightWidth] 2
//      Float 224 [_ShadowBias]
//      Float 228 [_Hardness]
//      Float 368 [_AtanFov]
//      Vector 384 [_ShadowPlanes0]
//      Vector 400 [_ShadowPlanes1]
//      Vector 416 [_ShadowPlanes2]
//      Vector 432 [_ShadowPlanes3]
//      Vector 448 [_ShadowPlanes4]
//      Vector 464 [_ShadowPlanes5]
//      Vector 480 [_InvertedShadowPlanes0]
//      Vector 496 [_InvertedShadowPlanes1]
//      Vector 512 [_InvertedShadowPlanes2]
//      Vector 528 [_InvertedShadowPlanes3]
//      Vector 544 [_InvertedShadowPlanes4]
//      Vector 560 [_InvertedShadowPlanes5]
//      Float 576 [_ShadowPlaneFeather]
//      Float 580 [_InvertedShadowPlaneFeather]
//      Matrix 240 [_ShadowProjectionMatrix]
//      Matrix 592 [_LightVerts]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      Vector 112 [_ZBufferParams]
//      ConstBuffer "UnityPerCameraRare" 352
//      Matrix 288 [unity_CameraToWorld]
//      SetTexture 0 [_CameraDepthTexture] 2D 0
//      SetTexture 1 [_CameraGBufferTexture0] 2D 5
//      SetTexture 2 [_CameraGBufferTexture2] 2D 6
//      SetTexture 3 [_AmpDiffAmpSpecFresnel] 2D 4
//      SetTexture 4 [_TransformInv_Diffuse] 2D 3
//      SetTexture 5 [_Shadowmap] 2D 1
//      SetTexture 6 [_ShadowmapDummy] 2D 2
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerCameraRare" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:08:49 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[40], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7612fa4d06ef6a6f-ps.txt

mul r10.w, -r10.x, r10.y
mad r11.xyz, -r10.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.x, cb1[5].z, v2.z
mul r0.xyz, r0.xxxx, v2.xyzx
div r1.xy, v1.xyxx, v1.wwww
sample r2.xyzw, r1.xyxx, t0.xyzw, s0
mad r0.w, cb1[7].x, r2.x, cb1[7].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r2.xyz, r0.yyyy, cb2[19].xyzx
mad r0.xyw, cb2[18].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb2[20].xyzx, r0.zzzz, r0.xywx
add r0.xyz, r0.xyzx, cb2[21].xyzx
dp3 r0.w, r0.xyzx, cb0[24].xyzx
add r0.w, -r0.w, cb0[24].w
add r0.w, r0.w, l(0.000100)
add r1.zw, cb0[36].xxxy, cb0[36].xxxy
add r0.w, r0.w, cb0[36].x
div r1.zw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.zzzw
mul_sat r0.w, r0.w, r1.z
mad r2.x, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r2.x
dp3 r2.x, r0.xyzx, cb0[25].xyzx
add r2.x, -r2.x, cb0[25].w
add r2.x, r2.x, l(0.000100)
add r2.x, r2.x, cb0[36].x
mul_sat r2.x, r1.z, r2.x
mad r2.y, r2.x, l(-2.000000), l(3.000000)
mul r2.x, r2.x, r2.x
mul r2.x, r2.x, r2.y
mul r0.w, r0.w, r2.x
dp3 r2.x, r0.xyzx, cb0[26].xyzx
add r2.x, -r2.x, cb0[26].w
add r2.x, r2.x, l(0.000100)
add r2.x, r2.x, cb0[36].x
mul_sat r2.x, r1.z, r2.x
mad r2.y, r2.x, l(-2.000000), l(3.000000)
mul r2.x, r2.x, r2.x
mul r2.x, r2.x, r2.y
mul r0.w, r0.w, r2.x
dp3 r2.x, r0.xyzx, cb0[27].xyzx
add r2.x, -r2.x, cb0[27].w
add r2.x, r2.x, l(0.000100)
add r2.x, r2.x, cb0[36].x
mul_sat r2.x, r1.z, r2.x
mad r2.y, r2.x, l(-2.000000), l(3.000000)
mul r2.x, r2.x, r2.x
mul r2.x, r2.x, r2.y
mul r0.w, r0.w, r2.x
dp3 r2.x, r0.xyzx, cb0[28].xyzx
add r2.x, -r2.x, cb0[28].w
add r2.x, r2.x, l(0.000100)
add r2.x, r2.x, cb0[36].x
mul_sat r2.x, r1.z, r2.x
mad r2.y, r2.x, l(-2.000000), l(3.000000)
mul r2.x, r2.x, r2.x
mul r2.x, r2.x, r2.y
mul r0.w, r0.w, r2.x
dp3 r2.x, r0.xyzx, cb0[29].xyzx
add r2.x, -r2.x, cb0[29].w
add r2.x, r2.x, l(0.000100)
add r2.x, r2.x, cb0[36].x
mul_sat r1.z, r1.z, r2.x
mad r2.x, r1.z, l(-2.000000), l(3.000000)
mul r1.z, r1.z, r1.z
mul r1.z, r1.z, r2.x
mul r0.w, r0.w, r1.z
dp3 r1.z, r0.xyzx, cb0[30].xyzx
add r1.z, -r1.z, cb0[30].w
add r1.z, r1.z, l(0.000100)
add r1.z, r1.z, cb0[36].y
mul_sat r1.z, r1.w, r1.z
mad r2.x, r1.z, l(-2.000000), l(3.000000)
mul r1.z, r1.z, r1.z
mul r1.z, r1.z, r2.x
dp3 r2.x, r0.xyzx, cb0[31].xyzx
add r2.x, -r2.x, cb0[31].w
add r2.x, r2.x, l(0.000100)
add r2.x, r2.x, cb0[36].y
mul_sat r2.x, r1.w, r2.x
mad r2.y, r2.x, l(-2.000000), l(3.000000)
mul r2.x, r2.x, r2.x
mul r2.x, r2.x, r2.y
mul r1.z, r1.z, r2.x
dp3 r2.x, r0.xyzx, cb0[32].xyzx
add r2.x, -r2.x, cb0[32].w
add r2.x, r2.x, l(0.000100)
add r2.x, r2.x, cb0[36].y
mul_sat r2.x, r1.w, r2.x
mad r2.y, r2.x, l(-2.000000), l(3.000000)
mul r2.x, r2.x, r2.x
mul r2.x, r2.x, r2.y
mul r1.z, r1.z, r2.x
dp3 r2.x, r0.xyzx, cb0[33].xyzx
add r2.x, -r2.x, cb0[33].w
add r2.x, r2.x, l(0.000100)
add r2.x, r2.x, cb0[36].y
mul_sat r2.x, r1.w, r2.x
mad r2.y, r2.x, l(-2.000000), l(3.000000)
mul r2.x, r2.x, r2.x
mul r2.x, r2.x, r2.y
mul r1.z, r1.z, r2.x
dp3 r2.x, r0.xyzx, cb0[34].xyzx
add r2.x, -r2.x, cb0[34].w
add r2.x, r2.x, l(0.000100)
add r2.x, r2.x, cb0[36].y
mul_sat r2.x, r1.w, r2.x
mad r2.y, r2.x, l(-2.000000), l(3.000000)
mul r2.x, r2.x, r2.x
mul r2.x, r2.x, r2.y
mul r1.z, r1.z, r2.x
dp3 r2.x, r0.xyzx, cb0[35].xyzx
add r2.x, -r2.x, cb0[35].w
add r2.x, r2.x, l(0.000100)
add r2.x, r2.x, cb0[36].y
mul_sat r1.w, r1.w, r2.x
mad r2.x, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.x
mad r1.z, -r1.z, r1.w, l(1.000000)
mul r0.w, r0.w, r1.z
ne r1.z, r0.w, l(0.000000)
if_nz r1.z
  mul r2.xyzw, r0.yyyy, cb0[16].xyzw
  mad r2.xyzw, cb0[15].xyzw, r0.xxxx, r2.xyzw
  mad r2.xyzw, cb0[17].xyzw, r0.zzzz, r2.xyzw
  add r2.xyzw, r2.xyzw, cb0[18].xyzw
  div r2.xyz, r2.xyzx, r2.wwww
  ge r1.zw, |r2.xxxy|, l(0.000000, 0.000000, 1.000000, 1.000000)
  and r1.zw, r1.zzzw, l(0, 0, 0x3f800000, 0x3f800000)
  dp2 r1.z, r1.zwzz, r1.zwzz
  eq r1.z, r1.z, l(0.000000)
  if_nz r1.z
    sample r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), t6.xyzw, s2
    add r1.zw, |r2.xxxy|, l(0.000000, 0.000000, -0.600000, -0.600000)
    max r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    dp2 r1.z, r1.zwzz, r1.zwzz
    sqrt r1.z, r1.z
    mad r1.w, cb0[14].y, l(100.000000), l(1.000000)
    add r1.z, r1.z, l(0.0999999940)
    add r1.z, r1.z, r1.z
    min r1.z, r1.z, l(1.000000)
    mad r3.x, r1.z, l(-2.000000), l(3.000000)
    mul r1.z, r1.z, r1.z
    mad r1.z, -r3.x, r1.z, l(1.000000)
    max r1.z, r1.z, l(0.000000)
    mul r1.z, r1.z, r1.w
    add r1.w, cb0[23].x, l(-1.000000)
    add r3.x, r2.z, l(-1.000000)
    div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
    mul_sat r1.w, r1.w, r3.x
    mad r3.x, r1.w, l(-2.000000), l(3.000000)
    mul r1.w, r1.w, r1.w
    mul r1.w, r1.w, r3.x
    min r1.w, r1.w, l(1.000000)
    mul_sat r1.z, r1.w, r1.z
    mad r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
    mad r4.xyzw, cb0[13].xxxx, l(-0.538364530, -0.668115079, -0.0770958737, -0.539549887), r2.xyxy
    sample_l r5.xyzw, r4.xyxx, t5.xyzw, s2, l(0.000000)
    add r1.w, -r5.x, l(1.000000)
    add r1.w, -r1.w, r2.z
    max r1.w, r1.w, l(0.000000)
    add r1.w, r1.w, r3.w
    sample_l r3.xyzw, r4.zwzz, t5.xyzw, s2, l(0.000000)
    add r3.x, -r3.x, l(1.000000)
    add r3.x, r2.z, -r3.x
    max r3.x, r3.x, l(0.000000)
    add r1.w, r1.w, r3.x
    mad r3.xyzw, cb0[13].xxxx, l(-0.340221405, -0.478210896, -0.558046520, 0.0139958598), r2.xyxy
    sample_l r4.xyzw, r3.xyxx, t5.xyzw, s2, l(0.000000)
    add r3.x, -r4.x, l(1.000000)
    add r3.x, r2.z, -r3.x
    max r3.x, r3.x, l(0.000000)
    add r1.w, r1.w, r3.x
    sample_l r3.xyzw, r3.zwzz, t5.xyzw, s2, l(0.000000)
    add r3.x, -r3.x, l(1.000000)
    add r3.x, r2.z, -r3.x
    max r3.x, r3.x, l(0.000000)
    add r1.w, r1.w, r3.x
    mad r3.xyzw, cb0[13].xxxx, l(-0.105644, -0.919103086, -0.834365129, -0.475075513), r2.xyxy
    sample_l r4.xyzw, r3.xyxx, t5.xyzw, s2, l(0.000000)
    add r3.x, -r4.x, l(1.000000)
    add r3.x, r2.z, -r3.x
    max r3.x, r3.x, l(0.000000)
    add r1.w, r1.w, r3.x
    sample_l r3.xyzw, r3.zwzz, t5.xyzw, s2, l(0.000000)
    add r3.x, -r3.x, l(1.000000)
    add r3.x, r2.z, -r3.x
    max r3.x, r3.x, l(0.000000)
    add r1.w, r1.w, r3.x
    mad r3.xyzw, cb0[13].xxxx, l(-0.995993674, -0.0540134013, 0.174773604, -0.936202), r2.xyxy
    sample_l r4.xyzw, r3.xyxx, t5.xyzw, s2, l(0.000000)
    add r3.x, -r4.x, l(1.000000)
    add r3.x, r2.z, -r3.x
    max r3.x, r3.x, l(0.000000)
    add r1.w, r1.w, r3.x
    sample_l r3.xyzw, r3.zwzz, t5.xyzw, s2, l(0.000000)
    add r3.x, -r3.x, l(1.000000)
    add r3.x, r2.z, -r3.x
    max r3.x, r3.x, l(0.000000)
    add r1.w, r1.w, r3.x
    mad r3.xyzw, cb0[13].xxxx, l(-0.364229709, -0.926432, 0.171968207, -0.679880202), r2.xyxy
    sample_l r4.xyzw, r3.xyxx, t5.xyzw, s2, l(0.000000)
    add r3.x, -r4.x, l(1.000000)
    add r3.x, r2.z, -r3.x
    max r3.x, r3.x, l(0.000000)
    add r1.w, r1.w, r3.x
    sample_l r3.xyzw, r3.zwzz, t5.xyzw, s2, l(0.000000)
    add r3.x, -r3.x, l(1.000000)
    add r3.x, r2.z, -r3.x
    max r3.x, r3.x, l(0.000000)
    add r1.w, r1.w, r3.x
    mul r1.w, r1.w, cb0[13].y
    div r2.w, cb0[14].x, r2.w
    add r2.z, -r2.w, r2.z
    add r2.z, -r2.z, l(1.000000)
    min r1.w, r1.w, l(1.000000)
    add r2.w, -cb0[13].z, cb0[13].w
    mad r1.w, r1.w, r2.w, cb0[13].z
    mad r3.xyzw, r1.wwww, l(0.0297119506, 0.890521109, 0.249529794, 0.732075), r2.xyxy
    sample_c_lz r2.w, r3.xyxx, t5.xxxx, s1, r2.z
    sample_c_lz r3.x, r3.zwzz, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    mad r3.xyzw, r1.wwww, l(-0.346920609, 0.643783629, -0.0187890902, 0.482739389), r2.xyxy
    sample_c_lz r3.x, r3.xyxx, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    sample_c_lz r3.x, r3.zwzz, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    mad r3.xyzw, r1.wwww, l(-0.272521287, 0.896188, -0.681433618, 0.648048103), r2.xyxy
    sample_c_lz r3.x, r3.xyxx, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    sample_c_lz r3.x, r3.zwzz, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    mad r3.xyzw, r1.wwww, l(0.415204495, 0.279417187, 0.131055400, 0.267592490), r2.xyxy
    sample_c_lz r3.x, r3.xyxx, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    sample_c_lz r3.x, r3.zwzz, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    mad r3.xyzw, r1.wwww, l(0.534474373, 0.562441111, 0.838568926, 0.513734818), r2.xyxy
    sample_c_lz r3.x, r3.xyxx, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    sample_c_lz r3.x, r3.zwzz, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    mad r3.xyzw, r1.wwww, l(0.604505181, 0.0839385688, 0.464316308, 0.868464172), r2.xyxy
    sample_c_lz r3.x, r3.xyxx, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    sample_c_lz r3.x, r3.zwzz, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    mad r3.xyzw, r1.wwww, l(0.335507, -0.110113, 0.0300766900, -0.000707531872), r2.xyxy
    sample_c_lz r3.x, r3.xyxx, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    sample_c_lz r3.x, r3.zwzz, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    mad r3.xyzw, r1.wwww, l(0.807753682, 0.255166411, -0.152149796, 0.242952093), r2.xyxy
    sample_c_lz r3.x, r3.xyxx, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    sample_c_lz r3.x, r3.zwzz, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    mad r3.xyzw, r1.wwww, l(-0.299761713, 0.0234926995, 0.258777887, -0.422691494), r2.xyxy
    sample_c_lz r3.x, r3.xyxx, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    sample_c_lz r3.x, r3.zwzz, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    mad r3.xyzw, r1.wwww, l(-0.0144821396, -0.272035807, -0.393777907, -0.228529), r2.xyxy
    sample_c_lz r3.x, r3.xyxx, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    sample_c_lz r3.x, r3.zwzz, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    mad r3.xyzw, r1.wwww, l(-0.783317626, 0.173729897, -0.444753706, 0.258274794), r2.xyxy
    sample_c_lz r3.x, r3.xyxx, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    sample_c_lz r3.x, r3.zwzz, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    mad r3.xyzw, r1.wwww, l(-0.903074324, 0.406874, -0.729588, -0.211521506), r2.xyxy
    sample_c_lz r3.x, r3.xyxx, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    sample_c_lz r3.x, r3.zwzz, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    mad r3.xyzw, r1.wwww, l(-0.538364530, -0.668115079, -0.0770958737, -0.539549887), r2.xyxy
    sample_c_lz r3.x, r3.xyxx, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    sample_c_lz r3.x, r3.zwzz, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    mad r3.xyzw, r1.wwww, l(-0.340221405, -0.478210896, -0.558046520, 0.0139958598), r2.xyxy
    sample_c_lz r3.x, r3.xyxx, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    sample_c_lz r3.x, r3.zwzz, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    mad r3.xyzw, r1.wwww, l(-0.105644, -0.919103086, -0.834365129, -0.475075513), r2.xyxy
    sample_c_lz r3.x, r3.xyxx, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    sample_c_lz r3.x, r3.zwzz, t5.xxxx, s1, r2.z
    add r2.w, r2.w, r3.x
    mad r3.xyzw, r1.wwww, l(-0.995993674, -0.0540134013, 0.174773604, -0.936202), r2.xyxy
    sample_c_lz r1.w, r3.xyxx, t5.xxxx, s1, r2.z
    add r1.w, r1.w, r2.w
    sample_c_lz r2.x, r3.zwzz, t5.xxxx, s1, r2.z
    add r1.w, r1.w, r2.x
    mul r1.z, r1.z, r1.w
    mul r1.z, r1.z, l(0.031250)
  else
    mov r1.z, l(0)
  endif
  ne r1.w, r1.z, l(0.000000)
  if_nz r1.w
    sample r2.xyzw, r1.xyxx, t1.xyzw, s5
    sample r3.xyzw, r1.xyxx, t2.xyzw, s6
    mad r1.xyw, r3.xyxz, l(2.000000, 2.000000, 0.000000, 2.000000), l(-1.000000, -1.000000, 0.000000, -1.000000)
    dp3 r2.w, r1.xywx, r1.xywx
    rsq r2.w, r2.w
    mul r1.xyw, r1.xyxw, r2.wwww
    add r3.xyz, -r0.xyzx, r11.xyzx
    dp3 r2.w, r3.xyzx, r3.xyzx
    rsq r2.w, r2.w
    mul r3.xyz, r2.wwww, r3.xyzx
    dp3 r2.w, r3.xyzx, r1.xywx
    mad r3.xyz, -r1.xywx, r2.wwww, r3.xyzx
    dp3 r3.w, r3.xyzx, r3.xyzx
    rsq r3.w, r3.w
    mul r3.xyz, r3.wwww, r3.xyzx
    mul r4.xyz, r1.wxyw, r3.yzxy
    mad r4.xyz, r1.ywxy, r3.zxyz, -r4.xyzx
    dp3 r3.w, r4.xyzx, r4.xyzx
    rsq r3.w, r3.w
    mul r4.xyz, r3.wwww, r4.xyzx
    add r5.xz, -r0.zzzz, cb0[39].xxyx
    add r6.xyz, -r0.xxxx, cb0[37].xyzx
    add r7.xyz, -r0.yyyy, cb0[38].xzyx
    add r8.xw, -r0.zzzz, cb0[39].zzzw
    add r8.y, -r0.x, cb0[37].w
    add r8.z, -r0.y, cb0[38].w
    mov r5.y, r6.x
    mov r5.w, r7.x
    dp3 r0.x, r5.ywxy, r3.xyzx
    dp3 r0.z, r5.ywxy, r4.xyzx
    dp3 r0.y, r5.ywxy, r1.xywx
    mov r5.x, r6.y
    mov r5.y, r7.z
    dp3 r6.x, r5.xyzx, r3.xyzx
    dp3 r3.w, r5.xyzx, r4.xyzx
    dp3 r6.y, r5.xyzx, r1.xywx
    mov r7.x, r6.z
    mov r7.z, r8.x
    dp3 r5.x, r7.xyzx, r3.xyzx
    dp3 r4.w, r7.xyzx, r4.xyzx
    dp3 r5.y, r7.xyzx, r1.xywx
    dp3 r3.x, r8.yzwy, r3.xyzx
    dp3 r3.z, r8.yzwy, r4.xyzx
    dp3 r3.y, r8.yzwy, r1.xywx
    add r1.x, -|r2.w|, l(1.000000)
    sqrt r1.x, r1.x
    mad r1.y, |r2.w|, l(-0.0187292993), l(0.074261)
    mad r1.y, r1.y, |r2.w|, l(-0.212114394)
    mad r1.y, r1.y, |r2.w|, l(1.57072878)
    mul r1.w, r1.x, r1.y
    mad r1.w, r1.w, l(-2.000000), l(3.14159274)
    lt r2.w, r2.w, -r2.w
    and r1.w, r1.w, r2.w
    mad r1.x, r1.y, r1.x, r1.w
    mul r7.y, r1.x, l(0.636942625)
    mov r7.xw, l(0.330000,0,0,1.000000)
    sample r8.xyzw, r7.xyxx, t3.xyzw, s4
    sample r9.xyzw, r7.xyxx, t4.xyzw, s3
    dp2 r4.x, r0.xyxx, r9.xwxx
    mul r4.y, r0.z, r9.z
    mov r7.z, r9.y
    dp2 r4.z, r0.xyxx, r7.zwzz
    dp2 r0.x, r6.xyxx, r9.xwxx
    mul r0.y, r3.w, r9.z
    dp2 r0.z, r6.xyxx, r7.zwzz
    dp2 r6.x, r5.xyxx, r9.xwxx
    mul r6.y, r4.w, r9.z
    dp2 r6.z, r5.xyxx, r7.zwzz
    dp2 r5.x, r3.xyxx, r9.xwxx
    mul r5.y, r3.z, r9.z
    dp2 r5.z, r3.xyxx, r7.zwzz
    lt r1.x, l(0.000000), r4.z
    and r1.y, r1.x, l(1)
    lt r1.w, l(0.000000), r0.z
    movc r1.x, r1.x, l(3), l(2)
    movc r1.x, r1.w, r1.x, r1.y
    lt r1.y, l(0.000000), r6.z
    iadd r1.w, r1.x, l(4)
    movc r1.x, r1.y, r1.w, r1.x
    lt r1.y, l(0.000000), r5.z
    iadd r1.w, r1.x, l(8)
    movc r1.x, r1.y, r1.w, r1.x
    switch r1.x
      case l(0)
      mov r1.xyw, r5.xyxz
      mov r2.w, l(0)
      break
      case l(1)
      mul r3.xyz, r0.xyzx, r4.zzzz
      mad r0.xyz, -r0.zzzz, r4.xyzx, r3.xyzx
      mul r3.xyz, r4.zzzz, r5.xyzx
      mad r6.xyz, -r5.zzzz, r4.xyzx, r3.xyzx
      mov r1.xyw, r5.xyxz
      mov r2.w, l(3)
      break
      case l(2)
      mul r3.xyz, r4.xyzx, r0.zzzz
      mad r4.xyz, -r4.zzzz, r0.xyzx, r3.xyzx
      mul r3.xyz, r0.zzzz, r6.xyzx
      mad r6.xyz, -r6.zzzz, r0.xyzx, r3.xyzx
      mov r1.xyw, r5.xyxz
      mov r2.w, l(3)
      break
      case l(3)
      mul r3.xyz, r0.zzzz, r6.xyzx
      mad r6.xyz, -r6.zzzz, r0.xyzx, r3.xyzx
      mul r3.xyz, r4.zzzz, r5.xyzx
      mad r1.xyw, -r5.zzzz, r4.xyxz, r3.xyxz
      mov r2.w, l(4)
      break
      case l(4)
      mul r3.xyz, r5.xyzx, r6.zzzz
      mad r4.xyz, -r5.zzzz, r6.xyzx, r3.xyzx
      mul r3.xyz, r0.xyzx, r6.zzzz
      mad r0.xyz, -r0.zzzz, r6.xyzx, r3.xyzx
      mov r1.xyw, r5.xyxz
      mov r2.w, l(3)
      break
      case l(5)
      mov r1.xyw, r5.xyxz
      mov r2.w, l(0)
      break
      case l(6)
      mul r3.xyz, r4.xyzx, r0.zzzz
      mad r4.xyz, -r4.zzzz, r0.xyzx, r3.xyzx
      mul r3.xyz, r5.xyzx, r6.zzzz
      mad r1.xyw, -r5.zzzz, r6.xyxz, r3.xyxz
      mov r2.w, l(4)
      break
      case l(7)
      mul r3.xyz, r4.zzzz, r5.xyzx
      mad r3.xyz, -r5.zzzz, r4.xyzx, r3.xyzx
      mul r7.xyz, r5.xyzx, r6.zzzz
      mad r1.xyw, -r5.zzzz, r6.xyxz, r7.xyxz
      mov r5.xyz, r3.xyzx
      mov r2.w, l(5)
      break
      case l(8)
      mul r3.xyz, r4.xyzx, r5.zzzz
      mad r4.xyz, -r4.zzzz, r5.xyzx, r3.xyzx
      mul r3.xyz, r6.xyzx, r5.zzzz
      mad r0.xyz, -r6.zzzz, r5.xyzx, r3.xyzx
      mov r6.xyz, r5.xyzx
      mov r1.xyw, r5.xyxz
      mov r2.w, l(3)
      break
      case l(9)
      mul r3.xyz, r0.xyzx, r4.zzzz
      mad r0.xyz, -r0.zzzz, r4.xyzx, r3.xyzx
      mul r3.xyz, r6.xyzx, r5.zzzz
      mad r6.xyz, -r6.zzzz, r5.xyzx, r3.xyzx
      mov r1.xyw, r5.xyxz
      mov r2.w, l(4)
      break
      case l(10)
      mov r1.xyw, r5.xyxz
      mov r2.w, l(0)
      break
      case l(11)
      mul r3.xyz, r6.xyzx, r5.zzzz
      mad r1.xyw, -r6.zzzz, r5.xyxz, r3.xyxz
      mul r3.xyz, r0.zzzz, r6.xyzx
      mad r6.xyz, -r6.zzzz, r0.xyzx, r3.xyzx
      mov r2.w, l(5)
      break
      case l(12)
      mul r3.xyz, r0.xyzx, r6.zzzz
      mad r0.xyz, -r0.zzzz, r6.xyzx, r3.xyzx
      mul r3.xyz, r4.xyzx, r5.zzzz
      mad r4.xyz, -r4.zzzz, r5.xyzx, r3.xyzx
      mov r1.xyw, r5.xyxz
      mov r2.w, l(4)
      break
      case l(13)
      mul r3.xyz, r0.xyzx, r6.zzzz
      mad r3.xyz, -r0.zzzz, r6.xyzx, r3.xyzx
      mul r7.xyz, r0.xyzx, r4.zzzz
      mad r0.xyz, -r0.zzzz, r4.xyzx, r7.xyzx
      mov r1.xyw, r6.xyxz
      mov r2.w, l(5)
      mov r6.xyz, r3.xyzx
      break
      case l(14)
      mul r3.xyz, r4.xyzx, r5.zzzz
      mad r3.xyz, -r4.zzzz, r5.xyzx, r3.xyzx
      mul r7.xyz, r4.xyzx, r0.zzzz
      mad r4.xyz, -r4.zzzz, r0.xyzx, r7.xyzx
      mov r1.xyw, r5.xyxz
      mov r5.xyz, r3.xyzx
      mov r2.w, l(5)
      break
      case l(15)
      mov r1.xyw, r5.xyxz
      mov r2.w, l(4)
      break
    endswitch
    if_nz r2.w
      dp3 r3.x, r4.xyzx, r4.xyzx
      rsq r3.x, r3.x
      mul r3.xyz, r3.xxxx, r4.xyzx
      dp3 r3.w, r0.xyzx, r0.xyzx
      rsq r3.w, r3.w
      mul r0.xyz, r0.xyzx, r3.wwww
      dp3 r3.w, r6.xyzx, r6.xyzx
      rsq r3.w, r3.w
      mul r4.xyz, r3.wwww, r6.xyzx
      dp3 r3.w, r1.xywx, r1.xywx
      rsq r3.w, r3.w
      mul r1.xyw, r1.xyxw, r3.wwww
      ieq r6.xyz, r2.wwww, l(3, 4, 5, 0)
      dp3 r3.w, r5.xyzx, r5.xyzx
      rsq r3.w, r3.w
      mul r7.xyz, r3.wwww, r5.xyzx
      movc r7.xyz, r6.yyyy, r3.xyzx, r7.xyzx
      movc r1.xyw, r6.xxxx, r3.xyxz, r1.xyxw
      movc r5.xyz, r6.xxxx, r5.xyzx, r7.xyzx
      dp3 r3.w, r3.xyzx, r0.xyzx
      max r3.w, r3.w, l(-0.999900)
      add r4.w, -|r3.w|, l(1.000000)
      sqrt r4.w, r4.w
      mad r5.w, |r3.w|, l(-0.0187292993), l(0.074261)
      mad r5.w, r5.w, |r3.w|, l(-0.212114394)
      mad r5.w, r5.w, |r3.w|, l(1.57072878)
      mul r6.x, r4.w, r5.w
      mad r6.x, r6.x, l(-2.000000), l(3.14159274)
      lt r3.w, r3.w, -r3.w
      and r3.w, r3.w, r6.x
      mad r3.w, r5.w, r4.w, r3.w
      sincos r4.w, null, r3.w
      div r3.w, r3.w, r4.w
      mul r4.w, r0.x, r3.y
      mad r4.w, r3.x, r0.y, -r4.w
      dp3 r0.z, r0.xyzx, r4.xyzx
      max r0.z, r0.z, l(-0.999900)
      add r5.w, -|r0.z|, l(1.000000)
      sqrt r5.w, r5.w
      mad r6.x, |r0.z|, l(-0.0187292993), l(0.074261)
      mad r6.x, r6.x, |r0.z|, l(-0.212114394)
      mad r6.x, r6.x, |r0.z|, l(1.57072878)
      mul r6.y, r5.w, r6.x
      mad r6.y, r6.y, l(-2.000000), l(3.14159274)
      lt r0.z, r0.z, -r0.z
      and r0.z, r0.z, r6.y
      mad r0.z, r6.x, r5.w, r0.z
      sincos r5.w, null, r0.z
      div r0.z, r0.z, r5.w
      mul r0.y, r0.y, r4.x
      mad r0.x, r0.x, r4.y, -r0.y
      mul r0.x, r0.x, r0.z
      mad r0.x, r3.w, r4.w, r0.x
      dp3 r0.y, r4.xyzx, r1.xywx
      max r0.y, r0.y, l(-0.999900)
      add r0.z, -|r0.y|, l(1.000000)
      sqrt r0.z, r0.z
      mad r3.w, |r0.y|, l(-0.0187292993), l(0.074261)
      mad r3.w, r3.w, |r0.y|, l(-0.212114394)
      mad r3.w, r3.w, |r0.y|, l(1.57072878)
      mul r4.z, r0.z, r3.w
      mad r4.z, r4.z, l(-2.000000), l(3.14159274)
      lt r0.y, r0.y, -r0.y
      and r0.y, r0.y, r4.z
      mad r0.y, r3.w, r0.z, r0.y
      sincos r0.z, null, r0.y
      div r0.y, r0.y, r0.z
      mul r0.z, r1.x, r4.y
      mad r0.z, r4.x, r1.y, -r0.z
      mad r0.x, r0.y, r0.z, r0.x
      uge r0.y, r2.w, l(4)
      dp3 r0.z, r1.xywx, r5.xyzx
      max r0.z, r0.z, l(-0.999900)
      add r1.w, -|r0.z|, l(1.000000)
      sqrt r1.w, r1.w
      mad r2.w, |r0.z|, l(-0.0187292993), l(0.074261)
      mad r2.w, r2.w, |r0.z|, l(-0.212114394)
      mad r2.w, r2.w, |r0.z|, l(1.57072878)
      mul r3.w, r1.w, r2.w
      mad r3.w, r3.w, l(-2.000000), l(3.14159274)
      lt r0.z, r0.z, -r0.z
      and r0.z, r0.z, r3.w
      mad r0.z, r2.w, r1.w, r0.z
      sincos r1.w, null, r0.z
      div r0.z, r0.z, r1.w
      mul r1.y, r1.y, r5.x
      mad r1.x, r1.x, r5.y, -r1.y
      mad r0.z, r0.z, r1.x, r0.x
      movc r0.x, r0.y, r0.z, r0.x
      dp3 r0.y, r5.xyzx, r3.xyzx
      max r0.y, r0.y, l(-0.999900)
      add r0.z, -|r0.y|, l(1.000000)
      sqrt r0.z, r0.z
      mad r1.x, |r0.y|, l(-0.0187292993), l(0.074261)
      mad r1.x, r1.x, |r0.y|, l(-0.212114394)
      mad r1.x, r1.x, |r0.y|, l(1.57072878)
      mul r1.y, r0.z, r1.x
      mad r1.y, r1.y, l(-2.000000), l(3.14159274)
      lt r0.y, r0.y, -r0.y
      and r0.y, r0.y, r1.y
      mad r0.y, r1.x, r0.z, r0.y
      sincos r0.z, null, r0.y
      div r0.y, r0.y, r0.z
      mul r0.z, r3.x, r5.y
      mad r0.z, r5.x, r3.y, -r0.z
      mad r0.y, r0.y, r0.z, r0.x
      movc r0.x, r6.z, r0.y, r0.x
      mul r0.x, r0.x, l(0.159150)
      max r0.x, r0.x, l(0.000000)
    else
      mov r0.x, l(0)
    endif
    mul r0.x, r8.x, r0.x
    mul r0.xyz, r2.xyzx, r0.xxxx
    mul r0.xyz, r1.zzzz, r0.xyzx
    mul r1.xyz, r0.wwww, cb0[7].xyzx
    mul r0.xyz, r0.xyzx, r1.xyzx
  else
    mov r0.xyz, l(0,0,0,0)
  endif
else
  mov r0.xyz, l(0,0,0,0)
endif
mov o0.xyzw, r0.xyzz
ret
// Approximately 0 instruction slots used