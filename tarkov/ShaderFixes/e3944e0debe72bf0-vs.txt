// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed e3944e0debe72bf0-vs.txt
// 3DMigoto: e3944e0debe72bf0 | Matched 3 variants of 3 shaders: shadow, shadow_2sided, shadow_backside
//
// 1:    Unity headers extracted from shadow
// 4:    Unity headers extracted from shadow_2sided
// 2:    Unity headers extracted from shadow_backside
// 1:    Shader "shadow" {
// 4:    Shader "shadow_2sided" {
// 2:    Shader "shadow_backside" {
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           Tags { "RenderType"="Opaque" }
//           Pass 1/7 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="FORWARDBASE" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
// 1: Unity 5.3 headers extracted from shadow:
// 4: Unity 5.3 headers extracted from shadow_2sided:
// 2: Unity 5.3 headers extracted from shadow_backside:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201609010 34 0 0
//      undeciphered1a: 4
//      Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LOD_FADE_CROSSFADE" }
//      undeciphered2: 1 0 4 0 0 0
//      undeciphered3: 3 2 0 0 1 2
//      ConstBuffer "UnityPerCamera" 144
//      Vector 80 [_ProjectionParams]
//      Vector 96 [_ScreenParams]
//      ConstBuffer "UnityLighting" 752
//      Vector 656 [unity_SHBr]
//      Vector 672 [unity_SHBg]
//      Vector 688 [unity_SHBb]
//      Vector 704 [unity_SHC]
//      ConstBuffer "UnityPerDraw" 160
//      Matrix 0 [unity_ObjectToWorld]
//      Matrix 64 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 384
//      Matrix 272 [unity_MatrixVP]
//      BindCB "UnityPerCamera" 0
//      BindCB "UnityLighting" 1
//      BindCB "UnityPerDraw" 2
//      BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:23:30 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float
// TEXCOORD                 1   xyzw        4     NONE   float
// TEXCOORD                 2   xyzw        5     NONE   float
// TEXCOORD                 3   xyzw        6     NONE   float
// COLOR                    0   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[45], immediateIndexed
dcl_constantbuffer cb2[7], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_temps 5

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
add r1.xyzw, r0.xyzw, cb2[3].xyzw
mad o2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
mul r0.xyzw, r1.yyyy, cb3[18].xyzw
mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed e3944e0debe72bf0-vs.txt
ne r4.w, r0.w, l(1.0)
if_nz r4.w
  add r4.w, r0.w, -r4.y
  mad r0.x, r4.w, r4.x, r0.x
endif

dp3 r2.x, v2.xyzx, cb2[4].xyzx
dp3 r2.y, v2.xyzx, cb2[5].xyzx
dp3 r2.z, v2.xyzx, cb2[6].xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mov o1.xyz, r2.xyzx
mul r3.xyz, r1.yyyy, cb3[18].xywx
mad r3.xyz, cb3[17].xywx, r1.xxxx, r3.xyzx
mad r1.xyz, cb3[19].xywx, r1.zzzz, r3.xyzx
mad r1.xyz, cb3[20].xywx, r1.wwww, r1.xyzx
mov o3.z, r1.z
mov r3.xz, l(0.500000,0,0.500000,0)
mov r3.y, cb0[5].x
mul r1.xyz, r1.xyzx, r3.xyzx
mul r3.xyz, r0.xywx, r3.xyzx
mov o5.zw, r0.zzzw
mul r1.w, r1.y, l(0.500000)
add r0.xy, r1.zzzz, r1.xwxx
mul r0.zw, cb0[6].xxxy, l(0.000000, 0.000000, 0.250000, 0.250000)
mul o3.xy, r0.zwzz, r0.xyxx
mul r0.x, r2.y, r2.y
mad r0.x, r2.x, r2.x, -r0.x
mul r1.xyzw, r2.yzzx, r2.xyzz
dp4 r2.x, cb1[41].xyzw, r1.xyzw
dp4 r2.y, cb1[42].xyzw, r1.xyzw
dp4 r2.z, cb1[43].xyzw, r1.xyzw
mad o4.xyz, cb1[44].xyzx, r0.xxxx, r2.xyzx
mul r3.w, r3.y, l(0.500000)
add o5.xy, r3.zzzz, r3.xwxx
mov o6.xyzw, l(0,0,0,0)
ret
// Approximately 0 instruction slots used