// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed dfbb5af26fbfa321-ps.txt
// 3DMigoto: dfbb5af26fbfa321 |    Unity headers extracted from Hidden_CandelaCompose
//    Shader "Hidden/CandelaCompose" {
//      SubShader 1/1 {
//        Pass 1/1 {
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hidden_CandelaCompose:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 113 8 4
//   undeciphered1a: 9
//   undeciphered2: 1 8 2 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 256
//   Vector 32 [_ScreenFadeControls]
//   Float 48 [_UseEdgeTexture]
//   Float 52 [_IsInForwardRender]
//   Float 56 [_IsInLegacyDeffered]
//   Float 60 [_SSRRcomposeMode]
//   Float 64 [_reflectionMultiply]
//   Float 68 [_FlipReflectionsMSAA]
//   Float 76 [_fresfade]
//   Float 80 [_fresrange]
//   Matrix 112 [_ViewProjectInverse]
//   Matrix 192 [_CameraMV]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   SetTexture 0 [_MainTex] 2D 0
//   SetTexture 1 [_toksvigRT] 2D 7
//   SetTexture 2 [_CameraDepthNormalsTexture] 2D 5
//   SetTexture 3 [_CameraNormalsTexture] 2D 4
//   SetTexture 4 [_CameraDepthTexture] 2D 3
//   SetTexture 5 [_CameraGBufferTexture1] 2D 6
//   SetTexture 6 [_EdgeFadeTexture] 2D 2
//   SetTexture 7 [_SSRtexture] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:22:58 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed dfbb5af26fbfa321-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

lt r0.x, l(0.000000), cb0[4].y
add r0.y, -v1.y, l(1.000000)
movc r0.y, r0.x, r0.y, v1.y
sample r1.xyzw, v1.xyxx, t0.xyzw, s0
sample r2.xyzw, v1.xyxx, t1.xyzw, s7
mov r0.x, v1.x
sample r3.xyzw, r0.xyxx, t2.xyzw, s5
mad r2.yzw, r3.xxyz, l(0.000000, 3.555400, 3.555400, 0.000000), l(0.000000, -1.777700, -1.777700, 1.000000)
dp3 r0.z, r2.yzwy, r2.yzwy
div r0.z, l(2.000000), r0.z
mul r2.yz, r2.yyzy, r0.zzzz
add r0.z, r0.z, l(-1.000000)
mul r3.xyz, r2.zzzz, cb0[13].xyzx
mad r2.yzw, cb0[12].xxyz, r2.yyyy, r3.xxyz
mad r2.yzw, cb0[14].xxyz, r0.zzzz, r2.yyzw
sample r3.xyzw, r0.xyxx, t3.xyzw, s4
mad r4.xyzw, r3.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
dp4 r0.z, r4.xyzw, r4.xyzw
rsq r0.z, r0.z
mul r4.xyz, r0.zzzz, r4.xyzx
sample r5.xyzw, v1.xyxx, t4.xyzw, s3
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r6.xyzw, r0.yyyy, cb0[8].xyzw
mad r0.xyzw, cb0[7].xyzw, r0.xxxx, r6.xyzw
mad r0.xyzw, cb0[9].xyzw, r5.xxxx, r0.xyzw
add r0.xyzw, r0.xyzw, cb0[10].xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r0.xyz, r0.xyzx, -r10.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3_sat r0.w, r4.xyzx, -r0.xyzx
lt r4.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[3].zxwz
dp3_sat r0.x, r2.yzwy, -r0.xyzx
movc r0.x, r4.x, r0.x, r0.w
sample r5.xyzw, v1.xyxx, t5.xyzw, s6
ne r0.y, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[3].y
or r0.y, r4.x, r0.y
movc r2.yzw, r0.yyyy, r3.wwww, r5.xxyz
movc r3.xyzw, r0.yyyy, r3.xyzw, r5.xyzw
log r0.z, r3.w
mul r0.zw, r0.zzzz, l(0.000000, 0.000000, 0.454545468, 1.400000)
exp r0.zw, r0.zzzw
if_nz r4.y
  sample r5.xyzw, v1.xyxx, t6.xyzw, s2
else
  mad r4.xy, v1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r3.w, r4.xyxx, r4.xyxx
  sqrt r3.w, r3.w
  log r3.w, r3.w
  mul r3.w, r3.w, cb0[2].y
  exp r3.w, r3.w
  add r3.w, r3.w, -cb0[2].z
  mul_sat r3.w, r3.w, cb0[2].w
  log r3.w, r3.w
  mul r3.w, r3.w, l(0.900000)
  exp r3.w, r3.w
  add r5.x, -r3.w, l(1.000000)
endif
log r3.w, r5.x
mul r3.w, r3.w, l(4.200000)
exp r3.w, r3.w
sample r5.xyzw, v1.xyxx, t7.xyzw, s1
mul r0.z, r2.x, r0.z
max r0.z, r0.z, l(0.050000)
sample_l r6.xyzw, v1.xyxx, t7.xyzw, s1, l(0.000000)
mul r4.xyw, r2.xxxx, r6.xyxz
add r2.x, -cb0[4].w, l(10.000000)
log r5.x, r0.x
mul r2.x, r2.x, r5.x
exp r2.x, r2.x
add r2.x, -r2.x, l(1.000000)
mul r5.x, cb0[5].x, l(8.000000)
mad r5.y, -r0.z, l(0.200000), l(1.000000)
mul r5.x, r5.y, r5.x
mul r5.x, r5.x, l(1.442695)
exp r5.x, r5.x
log r2.x, r2.x
mul r2.x, r2.x, r5.x
exp r2.x, r2.x
mul r5.x, r5.w, r5.w
mul_sat r5.x, r5.w, r5.x
mul r2.x, r2.x, r5.x
if_nz r4.z
  add r5.xyz, -r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  mad r4.z, r0.x, l(-5.554731), l(-6.983162)
  mul r4.z, r0.x, r4.z
  mad r5.w, -r0.z, l(2.000000), l(1.000000)
  max r5.w, r5.w, l(0.000000)
  mul r4.z, r4.z, r5.w
  exp r4.z, r4.z
  mad r5.xyz, r5.xyzx, r4.zzzz, r2.yzwy
  mul r5.xyz, r4.xywx, r5.xyzx
  mov r5.w, l(1.000000)
  mul r5.xyzw, r2.xxxx, r5.xyzw
  mul r6.xyzw, r0.wwww, r5.xyzw
  mul r4.z, r2.x, cb0[4].x
  mad r4.z, -r4.z, r0.w, l(1.000000)
  mul r7.xyzw, r1.xyzw, r4.zzzz
  mad r6.xyzw, r6.xyzw, cb0[4].xxxx, r7.xyzw
  add r8.xyz, r3.xyzx, l(0.030000, 0.030000, 0.030000, 0.000000)
  log r8.xyz, r8.xyzx
  mov r8.w, l(0xff800000)
  mul r8.xyzw, r8.xyzw, l(0.161290318, 0.161290318, 0.161290318, 0.161290318)
  exp r8.xyzw, r8.xyzw
  max r8.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
  min r8.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  mul r5.xyzw, r5.xyzw, r8.xyzw
  mul r5.xyzw, r0.wwww, r5.xyzw
  mad r5.xyzw, r5.xyzw, cb0[4].xxxx, r7.xyzw
  movc r5.xyzw, r0.yyyy, r6.xyzw, r5.xyzw
else
  add r6.xyz, -r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  mad r4.z, r0.x, l(-5.554731), l(-6.983162)
  mul r0.x, r0.x, r4.z
  mad r0.z, -r0.z, l(2.000000), l(1.000000)
  max r0.z, r0.z, l(0.000000)
  mul r0.x, r0.z, r0.x
  exp r0.x, r0.x
  mad r2.yzw, r6.xxyz, r0.xxxx, r2.yyzw
  mul r4.xyz, r2.yzwy, r4.xywx
  mov r4.w, l(1.000000)
  mul r2.xyzw, r2.xxxx, r4.xyzw
  mul r4.xyzw, r0.wwww, r2.xyzw
  mad r4.xyzw, r4.xyzw, cb0[4].xxxx, r1.xyzw
  add r3.xyz, r3.xyzx, l(0.030000, 0.030000, 0.030000, 0.000000)
  log r6.xyz, r3.xyzx
  mov r6.w, l(0xff800000)
  mul r6.xyzw, r6.xyzw, l(0.161290318, 0.161290318, 0.161290318, 0.161290318)
  exp r6.xyzw, r6.xyzw
  max r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
  min r6.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  mul r2.xyzw, r2.xyzw, r6.xyzw
  mul r2.xyzw, r0.wwww, r2.xyzw
  mad r2.xyzw, r2.xyzw, cb0[4].xxxx, r1.xyzw
  movc r5.xyzw, r0.yyyy, r4.xyzw, r2.xyzw
endif
lt r0.x, l(0.000000), cb0[2].x
movc r0.xyzw, r0.xxxx, r3.wwww, r5.xyzw
add r0.xyzw, -r1.xyzw, r0.xyzw
mad o0.xyzw, r3.wwww, r0.xyzw, r1.xyzw
ret
// Approximately 0 instruction slots used