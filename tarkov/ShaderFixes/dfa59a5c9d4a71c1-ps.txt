// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed dfa59a5c9d4a71c1-ps.txt
// 3DMigoto: dfa59a5c9d4a71c1 |    Unity headers extracted from Hidden_WaterForSSR
//    Shader "Hidden/WaterForSSR" {
//      SubShader 1/1 {
//        Pass 1/2 {
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hidden_WaterForSSR:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 141 11 0
//   undeciphered1a: 11
//   Keywords { "Rain" }
//   undeciphered2: 1 7 2 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 624
//   Float 176 [_ReflectionBottomShade]
//   Vector 208 [_WaterRippleCycle] 3
//   Vector 224 [_WaterRippleConfig] 2
//   Vector 288 [_ValsNormA]
//   Vector 304 [_ValsNormB]
//   Vector 320 [_ValsNormD]
//   Vector 336 [_ValsFoamA]
//   Vector 352 [_ValsFoamB]
//   Float 448 [_AdditionalCubemapReflection]
//   Float 456 [_RippleBumpness]
//   Vector 464 [_DepthVals]
//   Vector 480 [_BorderFadeDistVals] 2
//   Float 488 [_Bumpiness]
//   Vector 496 [_DepthColorDeep] 3
//   Vector 512 [_DepthColorShallow] 3
//   Vector 528 [_FoamVals] 3
//   Vector 544 [_FoamColor] 3
//   Vector 560 [_ReflectionColor]
//   Vector 576 [_DiffuseColor]
//   Vector 592 [_EFT_Ambient]
//   Vector 608 [_FresnelVals] 2
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_BumpMap] 2D 5
//   SetTexture 1 [_BumpMapDetails] 2D 6
//   SetTexture 2 [_RippleTex] 2D 3
//   SetTexture 3 [_CameraDepthTexture] 2D 1
//   SetTexture 4 [_FoamTex] 2D 4
//   SetTexture 5 [_WaterForSSR_SavedG0] 2D 2
//   SetTexture 6 [_MyGlobalReflectionProbe] CUBE 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:22:58 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy
// TEXCOORD                 6     zw        2     NONE   float     zw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyz         6     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[39], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v2.zw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed dfa59a5c9d4a71c1-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.zwzz, t0.xyzw, s5
mad r0.xz, r0.wwyw, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
dp2 r0.w, r0.xzxx, r0.xzxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r0.y, r0.w
mul r0.xyz, r0.xyzx, cb0[19].wwww
sample r1.xyzw, v1.xyxx, t0.xyzw, s5
mad r1.xz, r1.wwyw, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
dp2 r0.w, r1.xzxx, r1.xzxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r1.y, r0.w
mad r0.xyz, r1.xyzx, cb0[18].wwww, r0.xyzx
sample r1.xyzw, v2.xyxx, t1.xyzw, s6
mad r1.xz, r1.wwyw, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
dp2 r0.w, r1.xzxx, r1.xzxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r1.y, r0.w
mad r0.xyz, r1.xyzx, cb0[20].wwww, r0.xyzx
mul r1.xy, r0.xzxx, cb0[29].yyyy
add r0.xyz, r0.xyzx, l(-0.000000, -1.000000, -0.000000, 0.000000)
mad r0.xyz, cb0[30].zzzz, r0.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
div r1.zw, v4.xxxy, v4.wwww
sample r2.xyzw, r1.zwzz, t3.xyzw, s1
mad r0.w, cb1[7].z, r2.x, cb1[7].w
mul_sat r1.z, r2.x, l(999.999939)
add r1.z, -r1.z, l(1.000000)
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
add r0.w, r0.w, -v4.z
max r0.w, r0.w, l(0.000000)
mad r1.xy, r1.xyxx, r0.wwww, v4.xyxx
div r1.xy, r1.xyxx, v4.wwww
sample r2.xyzw, r1.xyxx, t5.xyzw, s2
add r1.xyw, -v5.xyxz, r12.xyxz
dp3 r2.w, r1.xywx, r1.xywx
sqrt r3.x, r2.w
rsq r2.w, r2.w
add r3.x, r3.x, -cb0[30].x
mul r3.x, r3.x, cb0[30].y
mad r3.y, -r1.y, r2.w, l(1.000000)
mul r1.xyw, r1.xyxw, r2.wwww
mul_sat r2.w, r3.y, r3.x
add r2.w, -r2.w, l(1.000000)
div r2.w, cb0[29].w, r2.w
mov r3.z, -r2.w
mov r3.xy, -cb0[29].xzxx
mul r3.xyz, r0.wwww, r3.xyzx
add r0.w, r0.w, -cb0[33].x
mad_sat r0.w, -r0.w, cb0[33].y, l(1.000000)
mul r3.xyz, r3.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
exp r3.xyz, r3.xyzx
add r3.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r4.xyz, cb0[31].xyzx, -cb0[32].xyzx
mad r4.xyz, r3.yyyy, r4.xyzx, cb0[32].xyzx
add r4.xyz, -r2.xyzx, r4.xyzx
mad r2.xyz, r3.xxxx, r4.xyzx, r2.xyzx
add r2.xyz, r2.xyzx, cb0[36].xyzx
mul r3.xyw, r2.xyxz, cb0[37].xyxz
mad r2.xyz, -r2.xyzx, cb0[37].xyzx, cb0[34].xyzx
sample r4.xyzw, v3.zwzz, t4.xyzw, s4
mul r2.w, r4.x, cb0[22].w
sample r4.xyzw, v3.xyxx, t4.xyzw, s4
mad r2.w, r4.x, cb0[21].w, r2.w
mul r0.w, r0.w, r2.w
mul r0.w, r0.w, cb0[33].z
mad o0.xyz, r0.wwww, r2.xyzx, r3.xywx
mul o0.w, r3.z, cb0[36].w
mul r2.w, r3.z, cb0[35].w
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r1.xywx, r0.xyzx
add_sat r0.w, -r0.w, l(1.000000)
log r0.w, r0.w
mul r0.w, r0.w, cb0[38].y
exp r0.w, r0.w
add r0.w, r0.w, l(-1.000000)
mad r0.w, cb0[38].x, r0.w, l(1.000000)
mul r2.xyz, r0.wwww, cb0[35].xyzx
mov o1.xyzw, r2.xyzw
mad r1.xy, v2.zwzz, l(1.220000, 1.220000, 0.000000, 0.000000), l(0.000000, 0.500000, 0.000000, 0.000000)
sample r4.xyzw, r1.xyxx, t2.xyzw, s3
mov r5.w, r4.w
sample r6.xyzw, v2.zwzz, t2.xyzw, s3
mov r5.x, r6.w
mad r7.xyzw, v2.zwzw, l(0.910000, 0.910000, 1.080000, 1.080000), l(0.500000, 0.500000, 0.500000, 0.000000)
sample r8.xyzw, r7.xyxx, t2.xyzw, s3
sample r7.xyzw, r7.zwzz, t2.xyzw, s3
mov r5.y, r8.w
mov r5.z, r7.w
mov r9.y, r8.x
mov r9.z, r7.x
mov r9.w, r4.x
mov r9.x, r6.x
mad r10.xyzw, cb0[13].xxxx, l(1.000000, 0.910000, 1.080000, 1.220000), r9.xyzw
add r9.xyzw, r9.xyzw, l(-0.100000, -0.100000, -0.100000, -0.100000)
max r9.xyzw, r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r9.xyzw, -r9.xyzw, cb0[13].zzzz
mad r5.xyzw, r5.xyzw, cb0[13].yyyy, r10.xyzw
div r5.xyzw, r5.xyzw, cb0[13].yyyy
ge r10.xyzw, r5.xyzw, -r5.xyzw
frc r5.xyzw, |r5.xyzw|
movc r5.xyzw, r10.xyzw, r5.xyzw, -r5.xyzw
mad_sat r5.xyzw, -r5.xyzw, cb0[13].yyyy, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r5.xyzw, r5.xyzw, cb0[14].yyyy
max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
min r5.xyzw, r5.xyzw, cb0[14].xxxx
add r5.xyzw, r5.xyzw, l(0.750000, 0.750000, 0.750000, 0.750000)
frc r5.xyzw, r5.xyzw
mad r5.xyzw, r5.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r10.xyzw, |r5.xyzw|, |r5.xyzw|
mad r5.xyzw, -|r5.xyzw|, l(2.000000, 2.000000, 2.000000, 2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
mul r5.xyzw, r5.xyzw, r10.xyzw
mad r5.xyzw, r5.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r10.xyzw, r5.xyzw, r9.xyzw
mul r1.xy, r8.yzyy, r10.yyyy
mad r1.xy, r6.yzyy, r10.xxxx, r1.xyxx
mad r1.xy, r7.yzyy, r10.zzzz, r1.xyxx
mad r1.xy, r4.yzyy, r10.wwww, r1.xyxx
add r1.w, r10.y, r10.x
mad r1.w, r9.z, r5.z, r1.w
mad r1.w, r9.w, r5.w, r1.w
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), -r1.wwww
mad r3.xyw, r0.xyxz, l(0.500000, 0.500000, 0.000000, 0.500000), l(0.500000, 0.500000, 0.000000, 0.500000)
mad r3.xw, r1.xxxy, cb0[28].zzzz, r3.xxxw
add r1.xyw, -r3.xyxw, l(0.500000, 1.000000, 0.000000, 0.500000)
mad o2.xyz, r1.zzzz, r1.xywx, r3.xywx
mov o2.w, r3.z
max r1.x, r2.y, r2.x
max r1.x, r2.z, r1.x
add r1.x, -r1.x, l(1.000000)
mad r1.x, cb0[35].w, r3.z, -r1.x
mad r1.y, -cb0[35].w, r3.z, l(1.000000)
add_sat r1.x, r1.x, l(1.000000)
mad r1.xzw, -cb0[35].xxyz, r0.wwww, r1.xxxx
add r3.xyz, v5.xyzx, -r12.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r0.w, r0.xyzx, -r3.xyzx
add r0.w, -|r0.w|, l(1.000000)
mul r2.w, r0.w, r0.w
mul r2.w, r2.w, r2.w
mul r0.w, r0.w, r2.w
mad r1.xzw, r0.wwww, r1.xxzw, r2.xxyz
dp3 r0.w, r3.xyzx, r0.xyzx
add r0.w, r0.w, r0.w
mad r0.xyz, r0.xyzx, -r0.wwww, r3.xyzx
add_sat r0.w, r0.y, cb0[11].x
mad r2.x, -r1.y, l(0.700000), l(1.700000)
mul r2.x, r1.y, r2.x
mul r2.x, r2.x, l(6.000000)
sample_l r2.xyzw, r0.xyzx, t6.xyzw, s0, r2.x
mul r0.xyz, r0.wwww, r2.xyzx
mul r0.w, r1.y, r1.y
mul r0.w, r0.w, l(0.280000)
mad r0.w, -r0.w, r1.y, l(1.000000)
mul r0.xyz, r0.xyzx, r0.wwww
mul r0.xyz, r1.xzwx, r0.xyzx
mul r0.xyz, r0.xyzx, cb0[28].xxxx
exp o3.xyz, -r0.xyzx
mov o3.w, l(1.000000)
ret
// Approximately 0 instruction slots used