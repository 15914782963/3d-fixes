// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed af2cb3630d009059-ps.txt
// 3DMigoto: af2cb3630d009059 |    Unity headers extracted from Custom_Vert Paint Shader Solid
//    Shader "Custom/Vert Paint Shader Solid" {
//      Fallback "Transparent/Cutout/Diffuse"
//      SubShader 1/1 {
//        Pass 1/1 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="DEFERRED" "QUEUE"="Geometry+5" "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_Vert Paint Shader Solid:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 117 12 6
//   undeciphered1a: 12
//   undeciphered2: 1 10 5 9 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 256
//   Float 64 [_BlendStrength]
//   Vector 80 [_Color0]
//   Vector 96 [_Color1]
//   Vector 112 [_Color2]
//   Float 192 [_FresnelDiffuse0]
//   Float 196 [_FresnelDiffuse1]
//   Float 200 [_FresnelDiffuse2]
//   Float 204 [_FresnelSpecular0]
//   Float 208 [_FresnelSpecular1]
//   Float 212 [_FresnelSpecular2]
//   Float 216 [_Specular0]
//   Float 220 [_Specular1]
//   Float 224 [_Specular2]
//   Float 228 [_Smoothness0]
//   Float 232 [_Smoothness1]
//   Float 236 [_Smoothness2]
//   Float 240 [_ReflectionStrength]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_Heights] 2D 2
//   SetTexture 1 [_MainTex0] 2D 3
//   SetTexture 2 [_MainTex1] 2D 4
//   SetTexture 3 [_MainTex2] 2D 5
//   SetTexture 4 [_BumpMap0] 2D 6
//   SetTexture 5 [_BumpMap1] 2D 7
//   SetTexture 6 [_BumpMap2] 2D 8
//   SetTexture 7 [unity_SpecCube0] CUBE 0
//   SetTexture 8 [unity_SpecCube1] CUBE -1
//   SetTexture 9 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:16:28 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xy
// COLOR                    0   xyzw        6     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 14
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed af2cb3630d009059-ps.txt

mul r12.w, -r12.x, r12.y
mad r13.xyz, -r12.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v4.xyxx, t0.xyzw, s2
sample r1.xyzw, v4.zwzz, t0.xyzw, s2
sample r2.xyzw, v5.xyxx, t0.xyzw, s2
mov r2.x, r0.x
mov r2.y, r1.y
mul r0.xyz, r2.xyzx, v6.xyzx
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, cb0[4].xxxx
exp r0.xyz, r0.xyzx
add r0.w, r0.y, r0.x
add r0.w, r0.z, r0.w
div r0.xyz, r0.xyzx, r0.wwww
sample r1.xyzw, v4.xyxx, t1.xyzw, s3
mul r1.xyzw, r1.xyzw, cb0[5].xyzw
sample r2.xyzw, v4.zwzz, t2.xyzw, s4
mul r2.xyzw, r2.xyzw, cb0[6].xyzw
mul r2.xyzw, r0.yyyy, r2.xyzw
mad r1.xyzw, r1.xyzw, r0.xxxx, r2.xyzw
sample r2.xyzw, v5.xyxx, t3.xyzw, s5
mul r2.xyzw, r2.xyzw, cb0[7].xyzw
mad r1.xyzw, r2.xyzw, r0.zzzz, r1.xyzw
sample r2.xyzw, v4.xyxx, t4.xyzw, s6
sample r3.xyzw, v4.zwzz, t5.xyzw, s7
mul r2.xz, r0.yyyy, r3.wwyw
mad r2.xy, r2.wyww, r0.xxxx, r2.xzxx
sample r3.xyzw, v5.xyxx, t6.xyzw, s8
mad r2.xy, r3.wyww, r0.zzzz, r2.xyxx
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r2.z, r0.w
dp3 r3.x, v1.xyzx, r2.xyzx
dp3 r3.y, v2.xyzx, r2.xyzx
dp3 r3.z, v3.xyzx, r2.xyzx
mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov r2.x, v1.w
mov r2.y, v2.w
mov r2.z, v3.w
add r4.xyz, -r2.xyzx, r13.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx
dp3 r0.w, r4.xyzx, r3.xyzx
mov r5.x, cb0[12].w
mov r5.yz, cb0[13].xxyx
dp3 r5.x, r0.xyzx, r5.xyzx
dp3 r5.y, r0.xyzx, cb0[12].xyzx
mad r5.xy, -r0.wwww, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r5.xy, r5.xyxx, r5.xyxx
mul r5.xy, r5.xyxx, r5.xyxx
mul r1.xyz, r1.xyzx, r5.yyyy
dp3 r0.w, r0.xyzx, cb0[14].yzwy
mov r6.xy, cb0[13].zwzz
mov r6.z, cb0[14].x
dp3 r0.x, r0.xyzx, r6.xyzx
mul r0.x, r0.x, r1.w
mul r6.xyz, r5.xxxx, r0.xxxx
add r6.w, -r0.w, l(1.000000)
mul r0.x, r6.z, cb0[15].x
add r0.y, -r6.w, l(1.000000)
dp3 r0.z, -r4.xyzx, r3.xyzx
add r0.z, r0.z, r0.z
mad r4.xyz, r3.xyzx, -r0.zzzz, -r4.xyzx
eq r0.z, cb4[0].x, l(1.000000)
if_nz r0.z
  eq r0.z, cb4[0].y, l(1.000000)
  mul r5.yzw, v2.wwww, cb4[2].xxyz
  mad r5.yzw, cb4[1].xxyz, v1.wwww, r5.yyzw
  mad r5.yzw, cb4[3].xxyz, v3.wwww, r5.yyzw
  add r5.yzw, r5.yyzw, cb4[4].xxyz
  movc r5.yzw, r0.zzzz, r5.yyzw, r2.xxyz
  add r5.yzw, r5.yyzw, -cb4[6].xxyz
  mul r7.yzw, r5.yyzw, cb4[5].xxyz
  mul r0.z, r7.y, l(0.250000)
  mul r0.w, cb4[0].z, l(0.500000)
  mad r1.w, -cb4[0].z, l(0.500000), l(0.250000)
  max r0.z, r0.w, r0.z
  min r7.x, r1.w, r0.z
  sample r8.xyzw, r7.xzwx, t9.xyzw, s1
  add r5.yzw, r7.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r9.xyzw, r5.yzwy, t9.xyzw, s1
  add r5.yzw, r7.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r7.xyzw, r5.yzwy, t9.xyzw, s1
  mov r3.w, l(1.000000)
  dp4 r8.x, r8.xyzw, r3.xyzw
  dp4 r8.y, r9.xyzw, r3.xyzw
  dp4 r8.z, r7.xyzw, r3.xyzw
else
  mov r3.w, l(1.000000)
  dp4 r8.x, cb2[38].xyzw, r3.xyzw
  dp4 r8.y, cb2[39].xyzw, r3.xyzw
  dp4 r8.z, cb2[40].xyzw, r3.xyzw
endif
max r3.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r3.xyz, r3.xyzx
mul r3.xyz, r3.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r3.xyz, r3.xyzx
mad r3.xyz, r3.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.z, l(0.000000), cb3[2].w
if_nz r0.z
  dp3 r0.z, r4.xyzx, r4.xyzx
  rsq r0.z, r0.z
  mul r5.yzw, r0.zzzz, r4.xxyz
  add r7.xyz, -r2.xyzx, cb3[0].xyzx
  div r7.xyz, r7.xyzx, r5.yzwy
  add r8.xyz, -r2.xyzx, cb3[1].xyzx
  div r8.xyz, r8.xyzx, r5.yzwy
  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.yzwy
  movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  min r0.z, r7.y, r7.x
  min r0.z, r7.z, r0.z
  add r7.xyz, r2.xyzx, -cb3[2].xyzx
  mad r5.yzw, r5.yyzw, r0.zzzz, r7.xxyz
else
  mov r5.yzw, r4.xxyz
endif
mad r0.z, -r0.y, l(0.700000), l(1.700000)
mul r0.y, r0.z, r0.y
mul r0.y, r0.y, l(6.000000)
sample_l r7.xyzw, r5.yzwy, t7.xyzw, s0, r0.y
add r0.z, r7.w, l(-1.000000)
mad r0.z, cb3[3].w, r0.z, l(1.000000)
mul r0.z, r0.z, cb3[3].x
mul r5.yzw, r7.xxyz, r0.zzzz
lt r0.w, cb3[1].w, l(0.999990)
if_nz r0.w
  lt r0.w, l(0.000000), cb3[6].w
  if_nz r0.w
    dp3 r0.w, r4.xyzx, r4.xyzx
    rsq r0.w, r0.w
    mul r8.xyz, r0.wwww, r4.xyzx
    add r9.xyz, -r2.xyzx, cb3[4].xyzx
    div r9.xyz, r9.xyzx, r8.xyzx
    add r10.xyz, -r2.xyzx, cb3[5].xyzx
    div r10.xyz, r10.xyzx, r8.xyzx
    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
    movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
    min r0.w, r9.y, r9.x
    min r0.w, r9.z, r0.w
    add r2.xyz, r2.xyzx, -cb3[6].xyzx
    mad r4.xyz, r8.xyzx, r0.wwww, r2.xyzx
  endif
  sample_l r2.xyzw, r4.xyzx, t8.xyzw, s0, r0.y
  add r0.y, r2.w, l(-1.000000)
  mad r0.y, cb3[7].w, r0.y, l(1.000000)
  mul r0.y, r0.y, cb3[7].x
  mul r2.xyz, r2.xyzx, r0.yyyy
  mad r0.yzw, r0.zzzz, r7.xxyz, -r2.xxyz
  mad r5.yzw, cb3[1].wwww, r0.yyzw, r2.xxyz
endif
mul r0.xyz, r0.xxxx, r5.yzwy
mad r0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
mul r0.xyz, r5.xxxx, r0.xyzx
exp o3.xyz, -r0.xyzx
mov o0.xyz, r1.xyzx
mov o0.w, l(1.000000)
mov o1.xyzw, r6.xyzw
mov o2.w, l(1.000000)
mov o3.w, l(1.000000)
ret
// Approximately 0 instruction slots used