// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 15a108f33b4900b3-ps.txt
// 3DMigoto: 15a108f33b4900b3 | Matched 4 variants of 1 shaders: p0/Reflective/Bumped Specular SMap Parallax
//
//       Unity headers extracted from p0_Reflective_Bumped Specular SMap Parallax
//       Shader "p0/Reflective/Bumped Specular SMap Parallax" {
//         CustomEditor "FresnelMaterialEditor"
//         Fallback "Reflective/Bumped Diffuse"
//         SubShader 1/1 {
//           Tags { "RenderType"="Opaque" }
//           Pass 3/5 {
//             Name "PREPASS"
//             Tags { "LIGHTMODE"="PREPASSBASE" "RenderType"="Opaque" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from p0_Reflective_Bumped Specular SMap Parallax:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 117 7 2
//      undeciphered1a: 8
// 8:   Keywords { "Rain" "TRIPLANAR" "SKINNEDMESHMATERIAL" "USERAIN" "FAKERIPPLELIGHT" }
// 4:   Keywords { "Rain" "TRIPLANAR" "SKINNEDMESHMATERIAL" "USERAIN" }
// 2:   Keywords { "Rain" "TRIPLANAR" "USERAIN" "FAKERIPPLELIGHT" }
// 1:   Keywords { "Rain" "TRIPLANAR" "USERAIN" }
//      undeciphered2: 1 4 2 4 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 320
//      Float 64 [_WetDropSpecular]
//      Float 76 [_WetDropNormal]
//      Vector 80 [_EnvironmentRippleCycle] 3
//      Vector 128 [_LocalRain] 3
//      Vector 144 [_LocalRainAverage] 3
//      Float 156 [_RainIntensity]
//      Float 160 [_RainIntensityRippleScale]
//      Float 164 [_RippleTexScale]
//      Float 224 [_Specularness]
//      Float 268 [_BumpTiling]
//      Float 288 [_SkinnedMeshMaterial]
//      Float 292 [_Parallax]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      SetTexture 0 [_ParallaxMap] 2D 3
//      SetTexture 1 [_SpecMap] 2D 1
//      SetTexture 2 [_BumpMap] 2D 2
//      SetTexture 3 [_RippleTexture] 2D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sun Jul 14 23:56:16 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyz         6     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[19], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 15a108f33b4900b3-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r0.xyz, -r0.xyzx, r9.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyz, r0.yyyy, v3.xyzx
mad r0.xyw, v2.xyxz, r0.xxxx, r1.xyxz
mad r0.xyz, v4.xyzx, r0.zzzz, r0.xywx
sample r1.xyzw, v1.xyxx, t0.xyzw, s3
mul r0.w, cb0[18].y, l(0.500000)
mad r0.w, r1.x, cb0[18].y, -r0.w
dp3 r1.x, r0.xyzx, r0.xyzx
rsq r1.x, r1.x
mul r0.xy, r0.xyxx, r1.xxxx
mad r0.z, r0.z, r1.x, l(0.420000)
div r0.xy, r0.xyxx, r0.zzzz
mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
sample r1.xyzw, r0.xyxx, t1.xyzw, s1
mul r0.z, r1.x, cb0[14].x
mul r1.yz, r0.xxyx, cb0[16].wwww
sample r2.xyzw, r1.yzyy, t2.xyzw, s2
mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r2.z, r0.w
lt r0.w, l(0.000000), cb0[18].x
if_nz r0.w
  dp3 r0.w, v5.xyzx, cb0[8].xyzx
  max r0.w, r0.w, l(0.000000)
  dp3 r1.y, v5.xyzx, cb0[9].xyzx
  max r1.y, r1.y, l(0.000000)
  add r0.w, r0.w, r1.y
  min r0.w, r0.w, l(1.000000)
  mul_sat r1.y, cb0[9].w, cb0[10].x
  mul r0.w, r0.w, r1.y
  div r0.xy, r0.xyxx, cb0[10].yyyy
  sample r3.xyzw, r0.xyxx, t3.xyzw, s0
  mad r0.x, r3.w, cb0[5].y, cb0[5].x
  div r0.x, r0.x, cb0[5].y
  ge r0.y, r0.x, -r0.x
  frc r0.x, |r0.x|
  movc r0.x, r0.y, r0.x, -r0.x
  mad_sat r0.x, -r0.x, cb0[5].y, l(1.000000)
  mul r0.x, r3.x, r0.x
  mul r0.y, r0.x, cb0[5].z
  mad r1.yz, r3.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  mad_sat r0.x, r0.x, cb0[5].z, l(-0.500000)
  mul r1.yz, r0.xxxx, r1.yyzy
  mul r3.xy, r1.yzyy, l(7.000000, 7.000000, 0.000000, 0.000000)
  mul r0.x, r0.y, l(0.350000)
  mul r0.xy, r0.xxxx, cb0[4].xwxx
  mul r0.xy, r0.wwww, r0.xyxx
  mad r0.w, -r1.x, cb0[14].x, l(1.000000)
  mad o0.w, r0.x, r0.w, r0.z
  mov r3.z, l(1.000000)
  dp3 r0.x, r3.xyzx, r3.xyzx
  rsq r0.x, r0.x
  mad r1.yzw, r3.xxyz, r0.xxxx, -r2.xxyz
  mad r0.xyw, r0.yyyy, r1.yzyw, r2.xyxz
else
  dp3 r1.y, v5.xyzx, cb0[8].xyzx
  dp3 r1.z, v5.xyzx, cb0[9].xyzx
  max r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  add r1.y, r1.z, r1.y
  min r1.y, r1.y, l(1.000000)
  mul_sat r1.z, cb0[9].w, cb0[10].x
  mul r1.y, r1.z, r1.y
  add r3.xyz, |v5.xyzx|, l(-0.490000, -0.490000, -0.490000, 0.000000)
  max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  add r1.z, r3.y, r3.x
  add r1.z, r3.z, r1.z
  div r3.xyz, r3.xyzx, r1.zzzz
  mul r4.xyzw, v6.yzzx, cb0[10].yyyy
  mul r1.zw, v6.xxxy, cb0[10].yyyy
  sample r5.xyzw, r4.xyxx, t3.xyzw, s0
  sample r4.xyzw, r4.zwzz, t3.xyzw, s0
  sample r6.xyzw, r1.zwzz, t3.xyzw, s0
  mad r1.z, r5.w, cb0[5].y, cb0[5].x
  div r1.z, r1.z, cb0[5].y
  ge r1.w, r1.z, -r1.z
  frc r1.z, |r1.z|
  movc r1.z, r1.w, r1.z, -r1.z
  mad_sat r1.z, -r1.z, cb0[5].y, l(1.000000)
  mul r1.z, r5.x, r1.z
  mul r1.w, r1.z, cb0[5].z
  mad r2.w, r4.w, cb0[5].y, cb0[5].x
  div r2.w, r2.w, cb0[5].y
  ge r3.w, r2.w, -r2.w
  frc r2.w, |r2.w|
  movc r2.w, r3.w, r2.w, -r2.w
  mad_sat r2.w, -r2.w, cb0[5].y, l(1.000000)
  mul r2.w, r4.x, r2.w
  mul r3.w, r2.w, cb0[5].z
  mad r4.x, r6.w, cb0[5].y, cb0[5].x
  div r4.x, r4.x, cb0[5].y
  ge r4.w, r4.x, -r4.x
  frc r4.x, |r4.x|
  movc r4.x, r4.w, r4.x, -r4.x
  mad_sat r4.x, -r4.x, cb0[5].y, l(1.000000)
  mul r4.x, r6.x, r4.x
  mul r4.w, r4.x, cb0[5].z
  mad r5.xy, r5.yzyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mad_sat r1.z, r1.z, cb0[5].z, l(-0.500000)
  mul r5.xy, r1.zzzz, r5.xyxx
  mul r5.xy, r3.xxxx, r5.xyxx
  mov r5.z, r3.x
  mad r4.yz, r4.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  mad_sat r1.z, r2.w, cb0[5].z, l(-0.500000)
  mul r4.yz, r1.zzzz, r4.yyzy
  mul r7.xy, r3.yyyy, r4.yzyy
  mov r7.z, r3.y
  mul r7.xyz, r7.xyzx, l(7.000000, 7.000000, 1.000000, 0.000000)
  mad r5.xyz, r5.xyzx, l(7.000000, 7.000000, 1.000000, 0.000000), r7.xyzx
  mad r4.yz, r6.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  mad_sat r1.z, r4.x, cb0[5].z, l(-0.500000)
  mul r4.xy, r1.zzzz, r4.yzyy
  mul r4.xy, r3.zzzz, r4.xyxx
  mov r4.z, r3.z
  mad r5.xyz, r4.xyzx, l(7.000000, 7.000000, 1.000000, 0.000000), r5.xyzx
  mul r1.z, r3.y, r3.w
  mad r1.z, r1.w, r3.x, r1.z
  mad r1.z, r4.w, r4.z, r1.z
  mul r1.zw, r1.zzzz, cb0[4].xxxw
  mul r1.yz, r1.yyyy, r1.zzwz
  mad r1.x, -r1.x, cb0[14].x, l(1.000000)
  mad o0.w, r1.y, r1.x, r0.z
  dp3 r0.z, r5.xyzx, r5.xyzx
  rsq r0.z, r0.z
  mad r1.xyw, r5.xyxz, r0.zzzz, -r2.xyxz
  mad r0.xyw, r1.zzzz, r1.xyxw, r2.xyxz
endif
dp3 r1.x, v2.xyzx, r0.xywx
dp3 r1.y, v3.xyzx, r0.xywx
dp3 r1.z, v4.xyzx, r0.xywx
mad o0.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
ret
// Approximately 0 instruction slots used