// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 87436cee2fbe3f2a-ps.txt
// 3DMigoto: 87436cee2fbe3f2a | Matched 3 variants of 1 shaders: Sandbox/VolumetricLight
//
//       Unity headers extracted from Sandbox_VolumetricLight
//       Shader "Sandbox/VolumetricLight" {
//         SubShader 1/1 {
//           LOD 100
//           Tags { "RenderType"="Opaque" }
//           Pass 5/5 {
//             Tags { "RenderType"="Opaque" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Sandbox_VolumetricLight:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 45 3 1
//      undeciphered1a: 7
// 4:   Keywords { "DIRECTIONAL" "DIRECTIONAL_COOKIE" "NOISE" }
// 1:   Keywords { "DIRECTIONAL" "NOISE" }
// 2:   Keywords { "DIRECTIONAL_COOKIE" "NOISE" }
//      undeciphered2: 1 3 2 3 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 544
//      Vector 48 [_LightDir]
//      Vector 80 [_LightColor]
//      Vector 448 [_VolumetricLight]
//      Vector 464 [_MieG]
//      Vector 480 [_NoiseData]
//      Vector 496 [_NoiseVelocity]
//      Float 528 [_MaxRayLength]
//      ScalarInt 532 [_SampleCount]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 112 [_ZBufferParams]
//      SetTexture 0 [_CameraDepthTexture] 2D 0
//      SetTexture 1 [_DitherTexture] 2D 2
//      SetTexture 2 [_NoiseTexture] 3D 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:11:11 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 87436cee2fbe3f2a-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s0
mad r0.x, cb1[7].x, r0.x, cb1[7].y
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
add r0.yzw, v2.xxyz, -r8.xxyz
mul r0.yzw, r0.xxxx, r0.yyzw
dp3 r1.x, r0.yzwy, r0.yzwy
sqrt r1.x, r1.x
div r0.yzw, r0.yyzw, r1.xxxx
min r1.x, r1.x, cb0[33].x
round_ni r1.yz, v0.xxyx
mul r1.yz, r1.yyzy, l(0.000000, 0.125000, 0.125000, 0.000000)
ge r2.xy, r1.yzyy, -r1.yzyy
frc r1.yz, |r1.yyzy|
movc r1.yz, r2.xxyx, r1.yyzy, -r1.yyzy
add r1.yz, r1.yyzy, l(0.000000, 0.062500, 0.062500, 0.000000)
sample r2.xyzw, r1.yzyy, t1.xyzw, s2
itof r1.y, cb0[33].y
div r1.x, r1.x, r1.y
mul r1.yzw, r0.yyzw, r1.xxxx
mad r1.yzw, r1.yyzw, r2.wwww, r8.xxyz
dp3 r2.x, cb0[3].xyzx, -r0.yzwy
mul r3.xz, cb0[31].xxyx, cb1[0].yyyy
mul r2.yz, r1.xxxx, cb0[28].xxyx
mov r3.y, l(0)
mov r4.xyz, r1.yzwy
mov r5.xyz, l(0,0,0,0)
mov r2.w, l(0)
mov r3.w, l(0)
loop
  ige r4.w, r3.w, cb0[33].y
  breakc_nz r4.w
  mad r6.xyz, r4.xyzx, cb0[30].xxxx, r3.xyzx
  frc r6.xyz, r6.xyzx
  sample r6.xyzw, r6.xyzx, t2.xyzw, s1
  add_sat r4.w, r6.x, -cb0[30].z
  mul_sat r4.w, r4.w, cb0[30].y
  mul r5.w, r2.y, r4.w
  mad r2.w, r2.z, r4.w, r2.w
  mul r4.w, r2.w, l(-1.442695)
  exp r4.w, r4.w
  mad r5.xyz, r5.wwww, r4.wwww, r5.xyzx
  mad r4.xyz, r0.yzwy, r1.xxxx, r4.xyzx
  iadd r3.w, r3.w, l(1)
endloop
mad r0.y, -cb0[29].z, r2.x, cb0[29].y
log r0.y, r0.y
mul r0.y, r0.y, l(1.500000)
exp r0.y, r0.y
div r0.y, cb0[29].x, r0.y
mul r0.y, r0.y, cb0[29].w
mul r0.yzw, r0.yyyy, r5.xxyz
mul r0.yzw, r0.yyzw, cb0[5].xxyz
max o0.xyz, r0.yzwy, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.y, r2.w, l(-1.442695)
exp r0.y, r0.y
lt r0.x, l(0.999999), r0.x
add r0.z, -r0.y, l(1.000000)
mad r0.z, cb0[28].w, r0.z, r0.y
movc o0.w, r0.x, r0.z, r0.y
ret
// Approximately 0 instruction slots used