// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 2bad53fcf811bc3b-vs.txt
// 3DMigoto: 2bad53fcf811bc3b |    Unity headers extracted from Particles_Smoke Distorted
//    Shader "Particles/Smoke Distorted" {
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="Vertex" "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/1 {
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="Vertex" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Particles_Smoke Distorted:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201609010 184 0 2
//   undeciphered1a: 9
//   Keywords { "SOFTPARTICLES_ON" }
//   undeciphered2: 1 0 5 0 0 0
//   undeciphered3: 13 3 0 0 2 1 3 4
//   ConstBuffer "$Globals" 832
//   Float 0 [_GFogStrength]
//   Float 4 [_GFogY]
//   Float 8 [_GFogMax]
//   Float 12 [_GFogStart]
//   Vector 32 [_GFogFuncVals]
//   Vector 48 [_GFogTopFuncVals]
//   Vector 288 [TOD_SunSkyColor] 3
//   Vector 304 [TOD_MoonSkyColor] 3
//   Vector 432 [TOD_GroundColor] 3
//   Vector 464 [TOD_MoonHaloColor] 3
//   Vector 528 [TOD_LocalSunDirection] 3
//   Vector 544 [TOD_LocalMoonDirection] 3
//   Float 572 [TOD_Contrast]
//   Float 580 [TOD_ScatteringBrightness]
//   Float 584 [TOD_Fogginess]
//   Float 588 [TOD_MoonHaloPower]
//   Vector 672 [TOD_kBetaMie] 3
//   Vector 688 [TOD_kSun]
//   Vector 704 [TOD_k4PI]
//   Vector 720 [TOD_kRadius]
//   Vector 736 [TOD_kScale]
//   Vector 752 [_Density]
//   Float 784 [_AnimationSpeed]
//   Float 792 [_DirectionLightShadow]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 752
//   Vector 96 [unity_LightColor0]
//   Vector 112 [unity_LightColor1]
//   Vector 128 [unity_LightColor2]
//   Vector 144 [unity_LightColor3]
//   Vector 160 [unity_LightColor4]
//   Vector 176 [unity_LightColor5]
//   Vector 192 [unity_LightColor6]
//   Vector 208 [unity_LightColor7]
//   Vector 224 [unity_LightPosition0]
//   Vector 240 [unity_LightPosition1]
//   Vector 256 [unity_LightPosition2]
//   Vector 272 [unity_LightPosition3]
//   Vector 288 [unity_LightPosition4]
//   Vector 304 [unity_LightPosition5]
//   Vector 320 [unity_LightPosition6]
//   Vector 336 [unity_LightPosition7]
//   Vector 352 [unity_LightAtten0]
//   Vector 368 [unity_LightAtten1]
//   Vector 384 [unity_LightAtten2]
//   Vector 400 [unity_LightAtten3]
//   Vector 416 [unity_LightAtten4]
//   Vector 432 [unity_LightAtten5]
//   Vector 448 [unity_LightAtten6]
//   Vector 464 [unity_LightAtten7]
//   Vector 480 [unity_SpotDirection0]
//   Vector 496 [unity_SpotDirection1]
//   Vector 512 [unity_SpotDirection2]
//   Vector 528 [unity_SpotDirection3]
//   Vector 544 [unity_SpotDirection4]
//   Vector 560 [unity_SpotDirection5]
//   Vector 576 [unity_SpotDirection6]
//   Vector 592 [unity_SpotDirection7]
//   ConstBuffer "UnityPerDraw" 160
//   Matrix 0 [unity_ObjectToWorld]
//   ConstBuffer "UnityPerFrame" 384
//   Vector 0 [glstate_lightmodel_ambient]
//   Matrix 144 [unity_MatrixV]
//   Matrix 272 [unity_MatrixVP]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityPerFrame" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sun Jul 14 23:59:14 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xy w
// TEXCOORD                 0   xy          2     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
// TEXCOORD                 2   xy          4     NONE   float   xy
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[50], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[38], dynamicIndexed
dcl_constantbuffer cb3[4], immediateIndexed
dcl_constantbuffer cb4[24], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyw
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xy
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_temps 11

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125
dcl_constantbuffer cb10[4], immediateIndexed

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 2bad53fcf811bc3b-vs.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

mul r0.xyzw, v0.yyyy, cb3[1].xyzw
mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
add r1.xyzw, r0.xyzw, cb3[3].xyzw
mul r2.xyzw, r1.yyyy, cb4[18].xyzw
mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
mad r2.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw

// Relocated to here with asmtool.py
mov o0.xyzw, r2.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 2bad53fcf811bc3b-vs.txt
ne r9.w, r2.w, l(1.0)
if_nz r9.w
  add r9.w, r2.w, -r9.y
  mad r2.x, r9.w, r9.x, r2.x
endif

mul r3.xz, r2.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mul r0.w, r2.y, cb1[5].x
mul r3.w, r0.w, l(0.500000)
add o5.xy, r3.zzzz, r3.xwxx
mul r3.xyzw, r1.yyyy, cb4[10].zxyz
mad r3.xyzw, cb4[9].zxyz, r1.xxxx, r3.xyzw
mad r3.xyzw, cb4[11].zxyz, r1.zzzz, r3.xyzw
mad r1.xyzw, cb4[12].zxyz, r1.wwww, r3.xyzw
mov o5.z, -r1.x
mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
add r0.xyz, r0.xyzx, -r10.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
sqrt r1.x, r0.w
div r3.x, -r0.y, r1.x
min r3.y, r1.x, cb0[0].z
add r3.z, cb0[0].y, -r10.y
mad r4.y, r3.y, r3.x, r3.z
mad r3.y, r3.x, cb0[0].w, r3.z
lt r3.z, l(0.000000), r3.x
min r3.w, r4.y, r3.y
max r3.y, r4.y, r3.y
movc r4.x, r3.z, r3.w, r3.y
max r3.yz, r4.xxyx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r4.zw, r3.yyyz, cb0[2].zzzz
log r4.zw, r4.zzzw
mul r4.zw, r4.zzzw, cb0[2].yyyy
mul r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.693147182, 0.693147182)
mad r3.yz, cb0[2].xxxx, r3.yyzy, -r4.zzwz
max r4.xy, r4.xyxx, cb0[3].xxxx
mul r4.zw, r4.xxxy, r4.xxxy
mad r4.xy, r4.zwzz, cb0[3].yyyy, r4.xyxx
mad r3.yz, r4.xxyx, cb0[3].zzzz, r3.yyzy
add r3.y, -r3.y, r3.z
mul r3.y, r3.y, cb0[0].x
div r3.x, r3.y, |r3.x|
sqrt r3.x, |r3.x|
min o4.y, r3.x, l(1.000000)
add r3.x, r0.y, cb0[47].y
mul r3.x, r3.x, cb0[47].x
max r3.x, r3.x, l(0.000000)
add r3.x, r3.x, l(1.000000)
div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.x
mul r1.x, r1.x, r3.x
mul r1.x, r1.x, cb0[47].z
min r1.x, r1.x, l(10.000000)
mul r1.x, r1.x, l(-1.442695)
exp r1.x, r1.x
add r1.x, -r1.x, l(1.000000)
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r0.xyzx
mad r0.x, r0.y, r0.w, l(0.031250)
lt r0.yz, l(0.000000, 0.031250, -0.031250, 0.000000), r3.yyyy
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, l(8.000000)
movc r0.x, r0.y, r3.y, r0.x
and r3.w, r0.x, r0.z
mul r0.x, r1.x, cb0[46].x
add r4.y, cb0[45].x, cb0[46].w
mul r0.y, r3.w, r3.w
mad r0.y, r0.y, cb0[45].y, cb0[45].w
add r0.y, r0.y, -cb0[45].y
sqrt r0.y, r0.y
mad r0.y, -cb0[45].x, r3.w, r0.y
mul r0.z, -cb0[46].w, cb0[46].z
mul r0.yz, r0.yyzy, l(0.000000, 0.0416666679, 1.442695, 0.000000)
exp r0.z, r0.z
mul r0.w, r3.w, r4.y
div r0.w, r0.w, r4.y
add r0.w, -r0.w, l(1.000000)
mad r4.w, r0.w, l(5.250000), l(-6.800000)
mad r4.w, r0.w, r4.w, l(3.830000)
mad r4.w, r0.w, r4.w, l(0.459000)
mad r0.w, r0.w, r4.w, l(-0.002870)
mul r0.w, r0.w, l(1.442695)
exp r0.w, r0.w
mul r0.xz, r0.xxwx, r0.yyzy
mul r5.xyz, r0.yyyy, r3.xwzx
mov r4.xz, l(0,0,0,0)
mad r4.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
add r5.xyz, cb0[44].wwww, cb0[44].xyzx
mov r6.xyz, r4.xyzx
mov r7.xyz, l(0,0,0,0)
mov r0.w, l(0)
loop
  ige r4.w, r0.w, l(24)
  breakc_nz r4.w
  dp3 r4.w, r6.xyzx, r6.xyzx
  sqrt r4.w, r4.w
  div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
  add r4.w, -r4.w, cb0[45].x
  mul r4.w, r4.w, cb0[46].z
  mul r4.w, r4.w, l(1.442695)
  exp r4.w, r4.w
  mul r6.w, r0.x, r4.w
  dp3 r7.w, r3.xwzx, r6.xyzx
  dp3 r8.x, cb0[33].xyzx, r6.xyzx
  mad r8.x, -r8.x, r5.w, l(1.000000)
  mad r8.y, r8.x, l(5.250000), l(-6.800000)
  mad r8.y, r8.x, r8.y, l(3.830000)
  mad r8.y, r8.x, r8.y, l(0.459000)
  mad r8.x, r8.x, r8.y, l(-0.002870)
  mul r8.x, r8.x, l(1.442695)
  exp r8.x, r8.x
  mad r5.w, -r7.w, r5.w, l(1.000000)
  mad r7.w, r5.w, l(5.250000), l(-6.800000)
  mad r7.w, r5.w, r7.w, l(3.830000)
  mad r7.w, r5.w, r7.w, l(0.459000)
  mad r5.w, r5.w, r7.w, l(-0.002870)
  mul r5.w, r5.w, l(1.442695)
  exp r5.w, r5.w
  mul r5.w, r5.w, l(0.250000)
  mad r5.w, r8.x, l(0.250000), -r5.w
  mul r4.w, r4.w, r5.w
  mad r4.w, r0.z, l(0.250000), r4.w
  mul r8.xyz, r5.xyzx, -r4.wwww
  mul r8.xyz, r8.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
  exp r8.xyz, r8.xyzx
  mad r7.xyz, r8.xyzx, r6.wwww, r7.xyzx
  mad r6.xyz, r3.xwzx, r0.yyyy, r6.xyzx
  iadd r0.w, r0.w, l(1)
endloop
mul r0.xyz, r7.xyzx, cb0[18].xyzx
mul r4.xyz, r0.xyzx, cb0[43].xyzx
mul r0.xyz, r0.xyzx, cb0[43].wwww
mul_sat r0.w, r3.y, l(-0.800000)
mad r3.w, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r3.w
dp3 r3.w, cb0[33].xyzx, r3.xyzx
mul r4.w, r3.w, r3.w
mad r4.w, r4.w, l(0.750000), l(0.750000)
mad r5.x, r3.w, r3.w, l(1.000000)
mul r5.x, r5.x, cb0[42].x
mad r3.w, cb0[42].z, r3.w, cb0[42].y
log r3.w, r3.w
mul r3.w, r3.w, l(1.500000)
exp r3.w, r3.w
div r3.w, r5.x, r3.w
mul r0.xyz, r0.xyzx, r3.wwww
mad r0.xyz, r4.wwww, r4.xyzx, r0.xyzx
mad r4.xyz, r3.yyyy, -cb0[19].xyzx, cb0[19].xyzx
add r0.xyz, r0.xyzx, r4.xyzx
dp3 r3.x, r3.xyzx, cb0[34].xyzx
max r3.x, r3.x, l(0.000000)
log r3.x, r3.x
mul r3.x, r3.x, cb0[36].w
exp r3.x, r3.x
mad r0.xyz, cb0[29].xyzx, r3.xxxx, r0.xyzx
add r3.x, r0.y, r0.x
add r3.x, r0.z, r3.x
mad r3.xyz, r3.xxxx, l(0.333000, 0.333000, 0.333000, 0.000000), -r0.xyzx
mad r0.xyz, cb0[36].zzzz, r3.xyzx, r0.xyzx
add r3.xyz, -r0.xyzx, cb0[27].xyzx
mad r0.xyz, r0.wwww, r3.xyzx, r0.xyzx
mul r0.xyz, r0.xyzx, cb0[36].yyyy
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, cb0[35].wwww
exp r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000012E-007, -1.000000012E-007, -1.000000012E-007, 0.000000)
max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.xyz, cb1[0].xxxx, l(0.960000, 1.000000, 1.030000, 0.000000)
mul r0.xyz, r0.xyzx, cb0[49].xxxx
mad o2.w, r0.x, l(1.000000), v2.y
mad o3.xy, r0.yyyy, l(0.866000, -0.500000, 0.000000, 0.000000), v2.xyxx
mad o3.zw, r0.zzzz, l(0.000000, 0.000000, -0.866000, -0.500000), v2.xxxy
add r0.xyz, cb4[0].xyzx, cb4[0].xyzx
mov r3.xyz, r0.xyzx
mov r0.w, l(0)
loop
  ige r3.w, r0.w, l(8)
  breakc_nz r3.w
  mad r4.xyz, -r1.yzwy, cb2[r0.w + 14].wwww, cb2[r0.w + 14].xyzx
  dp3 r3.w, r4.xyzx, r4.xyzx
  rsq r4.w, r3.w
  mul r4.xyz, r4.wwww, r4.xyzx
  mad r3.w, r3.w, cb2[r0.w + 22].z, l(1.000000)
  div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  dp3 r4.x, r4.xyzx, cb2[r0.w + 30].xyzx
  max r4.x, r4.x, l(0.000000)
  add r4.x, r4.x, -cb2[r0.w + 22].x
  mul_sat r4.x, r4.x, cb2[r0.w + 22].y
  mul r3.w, r3.w, r4.x
  eq r4.x, l(0.000000), cb2[r0.w + 14].w
  and r4.x, r4.x, l(0x3f800000)
  mad r4.x, -cb0[49].z, r4.x, l(1.000000)
  mul r3.w, r3.w, r4.x
  mad r3.xyz, cb2[r0.w + 6].xyzx, r3.wwww, r3.xyzx
  iadd r0.w, r0.w, l(1)
endloop
mul o1.xyz, r3.xyzx, v1.xxxx

// mov o0.xyzw, r2.xyzw // Relocated from here with asmtool.py

mov o1.w, v1.w
mov o2.xyz, v2.xyxx
mov o5.w, r2.w
mov o6.w, r1.x
mov o4.x, v1.y
ret
// Approximately 0 instruction slots used