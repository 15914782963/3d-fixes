// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7df208fb306f6951-ps.txt
// 3DMigoto: 7df208fb306f6951 |    Unity headers extracted from Relief Pack - Bonus Shaders_Water_ FlowMap
//    Shader "Relief Pack - Bonus Shaders/Water/ FlowMap" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Relief Pack - Bonus Shaders_Water_ FlowMap:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 208 8 8
//   undeciphered1a: 15
//   Keywords { "DIRECTIONAL" "RTP_SIMPLE_SHADING" }
//   undeciphered2: 1 7 5 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 32 [_LightColor0]
//   Vector 64 [_Color]
//   Float 80 [_GlossMin]
//   Float 84 [_GlossMax]
//   Float 88 [_Metalness]
//   Float 96 [TERRAIN_LayerWetStrength]
//   Float 100 [TERRAIN_WaterLevelSlopeDamp]
//   Float 144 [TERRAIN_WaterLevel]
//   Vector 160 [TERRAIN_WaterColor]
//   Float 176 [TERRAIN_WaterEdge]
//   Float 184 [TERRAIN_WaterGloss]
//   Float 188 [TERRAIN_WetGloss]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 752
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   Vector 720 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_HeightMap] 2D 4
//   SetTexture 1 [TERRAIN_FlowingMap] 2D 5
//   SetTexture 2 [_MainTex] 2D 2
//   SetTexture 3 [_BumpMap] 2D 3
//   SetTexture 4 [unity_SpecCube0] CUBE 0
//   SetTexture 5 [unity_SpecCube1] CUBE -1
//   SetTexture 6 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:09:56 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 6     zw        1     NONE   float
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float     z
// TEXCOORD                 4   xyzw        6     NONE   float     zw
// TEXCOORD                 5   xyz         7     NONE   float   xyz
// TEXCOORD                 8   xyzw        8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.z
dcl_input_ps linear v6.zw
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 17
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r15.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7df208fb306f6951-ps.txt

mul r15.w, -r15.x, r15.y
mad r16.xyz, -r15.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r16.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
sample r3.xyzw, v1.xyxx, t0.xyzw, s4
dp2 r1.w, v6.zwzz, v6.zwzz
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r1.w, r1.w
add r1.w, -r1.w, l(1.000000)
mul r3.xy, v1.xyxx, l(0.125000, 0.125000, 0.000000, 0.000000)
sample r4.xyzw, r3.xyxx, t1.xyzw, s5
add r2.w, -cb0[6].x, l(1.000000)
dp2 r2.w, r4.wwww, r2.wwww
mad_sat r2.w, v5.z, l(2.000000), -r2.w
mul_sat r1.w, r1.w, cb0[6].y
dp2_sat r2.w, cb0[6].xxxx, r2.wwww
add r3.x, r2.w, l(-1.000000)
add r1.w, -r1.w, r3.x
mad r1.w, r1.w, l(2.000000), cb0[9].x
max r1.w, r1.w, l(0.000000)
min r1.w, r1.w, l(2.000000)
add r3.x, -r2.w, l(1.000000)
mad_sat r2.w, -r3.x, r3.w, r2.w
add r1.w, -r3.w, r1.w
mul_sat r1.w, r1.w, cb0[11].x
mul r1.w, r1.w, r1.w
sample r3.xyzw, v1.xyxx, t2.xyzw, s2
mul r3.xyz, r3.xyzx, cb0[4].xyzx
add r4.xyz, r3.xyzx, r3.xyzx
add r4.w, -cb0[5].x, cb0[5].y
mad r3.w, r3.w, r4.w, cb0[5].x
add r4.w, -r3.w, cb0[11].w
mad r3.w, r2.w, r4.w, r3.w
add r4.w, -r3.w, cb0[11].z
mad r3.w, r1.w, r4.w, r3.w
mul r4.w, r1.w, cb0[10].w
mad r3.xyz, -r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), cb0[10].xyzx
mad r3.xyz, r4.wwww, r3.xyzx, r4.xyzx
sample r4.xyzw, v1.xyxx, t3.xyzw, s3
mad r4.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.w, r4.xyxx, r4.xyxx
min r4.w, r4.w, l(1.000000)
add r4.w, -r4.w, l(1.000000)
sqrt r4.z, r4.w
add r5.xyz, -r4.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mad r4.xyz, r1.wwww, r5.xyzx, r4.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx
add r1.w, r2.w, r2.w
min r1.w, r1.w, l(1.000000)
mad r1.w, -r1.w, l(0.300000), l(1.000000)
mul r5.xyz, r1.wwww, r3.xyzx
eq r2.w, cb4[0].x, l(1.000000)
if_nz r2.w
  eq r4.w, cb4[0].y, l(1.000000)
  mul r6.xyz, v3.wwww, cb4[2].xyzx
  mad r6.xyz, cb4[1].xyzx, v2.wwww, r6.xyzx
  mad r6.xyz, cb4[3].xyzx, v4.wwww, r6.xyzx
  add r6.xyz, r6.xyzx, cb4[4].xyzx
  movc r6.xyz, r4.wwww, r6.xyzx, r0.xyzx
  add r6.xyz, r6.xyzx, -cb4[6].xyzx
  mul r6.yzw, r6.xxyz, cb4[5].xxyz
  mad r4.w, r6.y, l(0.250000), l(0.750000)
  mad r5.w, cb4[0].z, l(0.500000), l(0.750000)
  max r6.x, r4.w, r5.w
  sample r6.xyzw, r6.xzwx, t6.xyzw, s1
else
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r4.w, r6.xyzw, cb2[45].xyzw
dp3 r6.x, v2.xyzx, r4.xyzx
dp3 r6.y, v3.xyzx, r4.xyzx
dp3 r6.z, v4.xyzx, r4.xyzx
add r4.x, -r3.w, l(1.000000)
dp3 r4.y, -r2.xyzx, r6.xyzx
add r4.y, r4.y, r4.y
mad r7.xyz, r6.xyzx, -r4.yyyy, -r2.xyzx
mul r4.yzw, r4.wwww, cb0[2].xxyz
if_nz r2.w
  eq r2.w, cb4[0].y, l(1.000000)
  mul r8.xyz, v3.wwww, cb4[2].xyzx
  mad r8.xyz, cb4[1].xyzx, v2.wwww, r8.xyzx
  mad r8.xyz, cb4[3].xyzx, v4.wwww, r8.xyzx
  add r8.xyz, r8.xyzx, cb4[4].xyzx
  movc r8.xyz, r2.wwww, r8.xyzx, r0.xyzx
  add r8.xyz, r8.xyzx, -cb4[6].xyzx
  mul r8.yzw, r8.xxyz, cb4[5].xxyz
  mul r2.w, r8.y, l(0.250000)
  mul r5.w, cb4[0].z, l(0.500000)
  mad r7.w, -cb4[0].z, l(0.500000), l(0.250000)
  max r2.w, r2.w, r5.w
  min r8.x, r7.w, r2.w
  sample r9.xyzw, r8.xzwx, t6.xyzw, s1
  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r10.xyzw, r10.xyzx, t6.xyzw, s1
  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r8.xyzw, r8.xyzx, t6.xyzw, s1
  mov r6.w, l(1.000000)
  dp4 r9.x, r9.xyzw, r6.xyzw
  dp4 r9.y, r10.xyzw, r6.xyzw
  dp4 r9.z, r8.xyzw, r6.xyzw
else
  mov r6.w, l(1.000000)
  dp4 r9.x, cb2[38].xyzw, r6.xyzw
  dp4 r9.y, cb2[39].xyzw, r6.xyzw
  dp4 r9.z, cb2[40].xyzw, r6.xyzw
endif
add r8.xyz, r9.xyzx, v7.xyzx
max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r8.xyz, r8.xyzx
mul r8.xyz, r8.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r8.xyz, r8.xyzx
mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.w, l(0.000000), cb3[2].w
if_nz r2.w
  dp3 r2.w, r7.xyzx, r7.xyzx
  rsq r2.w, r2.w
  mul r9.xyz, r2.wwww, r7.xyzx
  add r10.xyz, -r0.xyzx, cb3[0].xyzx
  div r10.xyz, r10.xyzx, r9.xyzx
  add r11.xyz, -r0.xyzx, cb3[1].xyzx
  div r11.xyz, r11.xyzx, r9.xyzx
  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  min r2.w, r10.y, r10.x
  min r2.w, r10.z, r2.w
  add r10.xyz, r0.xyzx, -cb3[2].xyzx
  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
else
  mov r9.xyz, r7.xyzx
endif
mad r2.w, -r4.x, l(0.700000), l(1.700000)
mul r2.w, r2.w, r4.x
mul r2.w, r2.w, l(6.000000)
sample_l r9.xyzw, r9.xyzx, t4.xyzw, s0, r2.w
add r5.w, r9.w, l(-1.000000)
mad r5.w, cb3[3].w, r5.w, l(1.000000)
mul r5.w, r5.w, cb3[3].x
mul r10.xyz, r9.xyzx, r5.wwww
lt r6.w, cb3[1].w, l(0.999990)
if_nz r6.w
  lt r6.w, l(0.000000), cb3[6].w
  if_nz r6.w
    dp3 r6.w, r7.xyzx, r7.xyzx
    rsq r6.w, r6.w
    mul r11.xyz, r6.wwww, r7.xyzx
    add r12.xyz, -r0.xyzx, cb3[4].xyzx
    div r12.xyz, r12.xyzx, r11.xyzx
    add r13.xyz, -r0.xyzx, cb3[5].xyzx
    div r13.xyz, r13.xyzx, r11.xyzx
    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
    min r6.w, r12.y, r12.x
    min r6.w, r12.z, r6.w
    add r0.xyz, r0.xyzx, -cb3[6].xyzx
    mad r7.xyz, r11.xyzx, r6.wwww, r0.xyzx
  endif
  sample_l r7.xyzw, r7.xyzx, t5.xyzw, s0, r2.w
  add r0.x, r7.w, l(-1.000000)
  mad r0.x, cb3[7].w, r0.x, l(1.000000)
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r7.xyzx, r0.xxxx
  mad r7.xyz, r5.wwww, r9.xyzx, -r0.xyzx
  mad r10.xyz, cb3[1].wwww, r7.xyzx, r0.xyzx
endif
dp3 r0.x, r6.xyzx, r6.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r6.xyzx
mad r3.xyz, r3.xyzx, r1.wwww, l(-0.220916301, -0.220916301, -0.220916301, 0.000000)
mad r3.xyz, cb0[5].zzzz, r3.xyzx, l(0.220916301, 0.220916301, 0.220916301, 0.000000)
mad r1.w, -cb0[5].z, l(0.779083729), l(0.779083729)
mul r5.xyz, r1.wwww, r5.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r0.xyzx, r2.xyzx
dp3_sat r2.x, r0.xyzx, cb2[0].xyzx
dp3_sat r0.x, r0.xyzx, r1.xyzx
dp3_sat r0.y, cb2[0].xyzx, r1.xyzx
mul r0.z, r0.y, r0.y
dp2 r0.z, r0.zzzz, r4.xxxx
add r0.z, r0.z, l(-0.500000)
add r1.x, -r2.x, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r1.x, r0.z, r1.x, l(1.000000)
add r1.y, -|r0.w|, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
mad r0.z, r0.z, r1.y, l(1.000000)
mul r0.z, r0.z, r1.x
mul r1.x, r4.x, r4.x
mad r1.z, -r4.x, r4.x, l(1.000000)
mad r2.y, |r0.w|, r1.z, r1.x
mad r1.z, r2.x, r1.z, r1.x
mul r0.w, |r0.w|, r1.z
mad r0.w, r2.x, r2.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r1.z, r1.x, r1.x
mad r2.y, r0.x, r1.z, -r0.x
mad r0.x, r2.y, r0.x, l(1.000000)
mul r1.z, r1.z, l(0.318309873)
mad r0.x, r0.x, r0.x, l(1.000000012E-007)
div r0.x, r1.z, r0.x
mul r0.x, r0.x, r0.w
mul r0.x, r0.x, l(3.14159274)
max r0.x, r0.x, l(0.000100)
sqrt r0.x, r0.x
mul r0.xz, r2.xxxx, r0.xxzx
mul r0.w, r1.x, l(0.280000)
mad r0.w, -r0.w, r4.x, l(1.000000)
dp3 r1.x, r3.xyzx, r3.xyzx
ne r1.x, r1.x, l(0.000000)
and r1.x, r1.x, l(0x3f800000)
mul r0.x, r0.x, r1.x
add r1.x, -r1.w, l(1.000000)
add_sat r1.x, r1.x, r3.w
mad r2.xyz, r4.yzwy, r0.zzzz, r8.xyzx
mul r4.xyz, r4.yzwy, r0.xxxx
add r0.x, -r0.y, l(1.000000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.x, r0.y
add r6.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r6.xyzx, r0.xxxx, r3.xyzx
mul r0.xyz, r0.xyzx, r4.xyzx
mad r0.xyz, r5.xyzx, r2.xyzx, r0.xyzx
mul r2.xyz, r10.xyzx, r0.wwww
add r1.xzw, -r3.xxyz, r1.xxxx
mad r1.xyz, r1.yyyy, r1.xzwx, r3.xyzx
mad o0.xyz, r2.xyzx, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used