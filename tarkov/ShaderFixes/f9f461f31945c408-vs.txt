// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed f9f461f31945c408-vs.txt
// 3DMigoto: f9f461f31945c408 | Matched 2 variants of 1 shaders: Hidden/Tree Billboard LOD
//
//       Unity headers extracted from Hidden_Tree Billboard LOD
//       Shader "Hidden/Tree Billboard LOD" {
//         SubShader 1/1 {
//           LOD 100
//           Tags { "RenderType"="Opaque" }
//           Pass 1/1 {
//             Name "DEFERRED"
//             Tags { "LIGHTMODE"="DEFERRED" "RenderType"="Opaque" }
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Hidden_Tree Billboard LOD:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201609010 21 0 0
//      undeciphered1a: 4
// 2:   Keywords { "UNITY_HDR_ON" }
//      undeciphered2: 1 0 3 0 0 0
//      undeciphered3: 25 3 0 0 3 4 4 5
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityPerDraw" 160
//      Matrix 0 [unity_ObjectToWorld]
//      ConstBuffer "UnityPerFrame" 384
//      Matrix 272 [unity_MatrixVP]
//      BindCB "UnityPerCamera" 0
//      BindCB "UnityPerDraw" 1
//      BindCB "UnityPerFrame" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:26:08 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xy          2     NONE   float   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_constantbuffer cb2[24], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v2.x
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_temps 6
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed f9f461f31945c408-vs.txt

mul r4.w, -r4.x, r4.y
mad r5.xyz, -r4.wwww, cb10[0].xyzw, cb0[4].xyzw

mov r0.y, l(0)
mul r1.xyzw, v0.yyyy, cb1[1].xyzw
mad r1.xyzw, cb1[0].xyzw, v0.xxxx, r1.xyzw
mad r1.xyzw, cb1[2].xyzw, v0.zzzz, r1.xyzw
mad r1.xyzw, cb1[3].xyzw, v0.wwww, r1.xyzw
add r2.xyz, r1.xyzx, -r5.xyzx
mov r2.w, -r2.z
mul r3.xy, r2.zxzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.wxww, r3.xyxx
rsq r0.w, r0.w
mul r0.x, r0.w, -r2.z
mul r0.z, r0.w, r2.x
mad r0.xyz, r0.xyzx, v2.xxxx, r1.xyzx
mul r3.xyzw, r0.yyyy, cb2[18].xyzw
mad r3.xyzw, cb2[17].xyzw, r0.xxxx, r3.xyzw
mad r3.xyzw, cb2[19].xyzw, r0.zzzz, r3.xyzw
mad o0.xyzw, cb2[20].xyzw, r1.wwww, r3.xyzw
mov o1.xy, v1.xyxx
dp3 r0.w, -r2.xyzx, -r2.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, -r2.xyzx
mul o2.xz, r1.zzxz, l(-1.000000, 0.000000, 1.000000, 0.000000)
mov o2.w, r0.x
mov o2.y, l(0)
mov o3.w, r0.y
mov o4.w, r0.z
mul o3.xz, r1.zzyz, l(0.000000, 0.000000, 1.000000, 0.000000)
mov o4.xz, r1.xxzx
mov o3.y, l(1.000000)
mov o4.y, l(0)
ret
// Approximately 0 instruction slots used