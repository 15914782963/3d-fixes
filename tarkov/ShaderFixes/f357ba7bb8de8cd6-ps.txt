// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f357ba7bb8de8cd6-ps.txt
// 3DMigoto: f357ba7bb8de8cd6 | Matched 2 variants of 1 shaders: p0/Reflective/Bumped Specular SMap Scale Gloss
//
//       Unity headers extracted from p0_Reflective_Bumped Specular SMap Scale Gloss
//       Shader "p0/Reflective/Bumped Specular SMap Scale Gloss" {
//         CustomEditor "FresnelMaterialEditor"
//         Fallback "Reflective/Bumped Diffuse"
//         SubShader 1/1 {
//           Tags { "RenderType"="Opaque" }
//           Pass 5/5 {
//             Name "DEFERRED"
//             Tags { "LIGHTMODE"="DEFERRED" "RenderType"="Opaque" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from p0_Reflective_Bumped Specular SMap Scale Gloss:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201609010 164 11 4
//      undeciphered1a: 12
// 2:   Keywords { "Rain" "TRIPLANAR" "SKINNEDMESHMATERIAL" "USERAIN" }
// 1:   Keywords { "Rain" "TRIPLANAR" "USERAIN" }
//      undeciphered2: 1 6 4 6 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 368
//      Vector 48 [_SpecColor]
//      Float 64 [_WetDropSpecular]
//      Float 68 [_WetDropGlossness]
//      Float 72 [_WetDropAlbedo]
//      Float 76 [_WetDropNormal]
//      Vector 80 [_EnvironmentRippleCycle] 3
//      Vector 128 [_LocalRain] 3
//      Vector 144 [_LocalRainAverage] 3
//      Float 156 [_RainIntensity]
//      Float 160 [_RainIntensityRippleScale]
//      Float 164 [_RippleTexScale]
//      Vector 192 [_Color]
//      Vector 208 [_ReflectColor]
//      Float 224 [_Specularness]
//      Float 228 [_Glossness]
//      Vector 240 [_SpecVals] 3
//      Vector 256 [_DefVals] 3
//      Float 268 [_BumpTiling]
//      Float 288 [_SkinnedMeshMaterial]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 752
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_MainTex] 2D 2
//      SetTexture 1 [_SpecMap] 2D 3
//      SetTexture 2 [_BumpMap] 2D 4
//      SetTexture 3 [_RippleTexture] 2D 1
//      SetTexture 4 [_Cube] CUBE 5
//      SetTexture 5 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jul 15 00:25:24 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 6   xyz         7     NONE   float   xyz
// TEXCOORD                 7   xyz         8     NONE   float   xyz
// TEXCOORD                 8   xyzw        9     NONE   float
// TEXCOORD                 9   xyz        10     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[19], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyz
dcl_input_ps linear v10.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 14
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f357ba7bb8de8cd6-ps.txt

mul r12.w, -r12.x, r12.y
mad r13.xyz, -r12.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.y, v3.w
mov r0.z, v4.w
mov r0.w, v5.w
add r1.xyz, -r0.yzwy, r13.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
dp3 r0.x, v8.xyzx, v8.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, v8.xyzx
sample r3.xyzw, v1.xyxx, t0.xyzw, s2
mul r3.xyz, r3.xyzx, cb0[12].xyzx
mul r0.x, r3.w, cb0[14].y
sample r4.xyzw, v1.zwzz, t1.xyzw, s3
mul r1.w, r4.x, cb0[14].x
mul r4.yz, v2.xxyx, cb0[16].wwww
sample r5.xyzw, r4.yzyy, t2.xyzw, s4
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r5.xyxx, r5.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r5.z, r2.w
lt r2.w, l(0.000000), cb0[18].x
if_nz r2.w
  dp3 r2.w, v6.xyzx, cb0[8].xyzx
  max r2.w, r2.w, l(0.000000)
  dp3 r4.y, v6.xyzx, cb0[9].xyzx
  max r4.y, r4.y, l(0.000000)
  add r2.w, r2.w, r4.y
  min r2.w, r2.w, l(1.000000)
  mul_sat r4.y, cb0[9].w, cb0[10].x
  mul r2.w, r2.w, r4.y
  div r4.yz, v1.xxyx, cb0[10].yyyy
  sample r6.xyzw, r4.yzyy, t3.xyzw, s1
  mad r4.y, r6.w, cb0[5].y, cb0[5].x
  div r4.y, r4.y, cb0[5].y
  ge r4.z, r4.y, -r4.y
  frc r4.y, |r4.y|
  movc r4.y, r4.z, r4.y, -r4.y
  mad_sat r4.y, -r4.y, cb0[5].y, l(1.000000)
  mul r4.y, r6.x, r4.y
  mul r4.z, r4.y, cb0[5].z
  mad r6.xy, r6.yzyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mad_sat r4.y, r4.y, cb0[5].z, l(-0.500000)
  mul r4.yw, r4.yyyy, r6.xxxy
  mul r6.xy, r4.ywyy, l(7.000000, 7.000000, 0.000000, 0.000000)
  mul r4.y, r4.z, l(0.350000)
  mul r7.xyzw, r4.yyyy, cb0[4].yxzw
  mul r7.xyzw, r2.wwww, r7.xyzw
  mad r2.w, -r3.w, cb0[14].y, l(1.000000)
  mad r2.w, r7.x, r2.w, r0.x
  mad r4.y, -r4.x, cb0[14].x, l(1.000000)
  mad r8.w, r7.y, r4.y, r1.w
  mad r4.yzw, r7.zzzz, -r3.xxyz, r3.xxyz
  mov r6.z, l(1.000000)
  dp3 r5.w, r6.xyzx, r6.xyzx
  rsq r5.w, r5.w
  mad r6.xyz, r6.xyzx, r5.wwww, -r5.xyzx
  mad r6.xyz, r7.wwww, r6.xyzx, r5.xyzx
else
  dp3 r5.w, v6.xyzx, cb0[8].xyzx
  max r5.w, r5.w, l(0.000000)
  dp3 r6.w, v6.xyzx, cb0[9].xyzx
  max r6.w, r6.w, l(0.000000)
  add r5.w, r5.w, r6.w
  min r5.w, r5.w, l(1.000000)
  mul_sat r6.w, cb0[9].w, cb0[10].x
  mul r5.w, r5.w, r6.w
  add r7.xyz, |v6.xyzx|, l(-0.490000, -0.490000, -0.490000, 0.000000)
  max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  add r6.w, r7.y, r7.x
  add r6.w, r7.z, r6.w
  div r7.xyz, r7.xyzx, r6.wwww
  mul r9.xyzw, v7.yzzx, cb0[10].yyyy
  mul r10.xy, v7.xyxx, cb0[10].yyyy
  sample r11.xyzw, r9.xyxx, t3.xyzw, s1
  sample r9.xyzw, r9.zwzz, t3.xyzw, s1
  sample r10.xyzw, r10.xyxx, t3.xyzw, s1
  mad r6.w, r11.w, cb0[5].y, cb0[5].x
  div r6.w, r6.w, cb0[5].y
  ge r7.w, r6.w, -r6.w
  frc r6.w, |r6.w|
  movc r6.w, r7.w, r6.w, -r6.w
  mad_sat r6.w, -r6.w, cb0[5].y, l(1.000000)
  mul r6.w, r11.x, r6.w
  mul r7.w, r6.w, cb0[5].z
  mad r9.w, r9.w, cb0[5].y, cb0[5].x
  div r9.w, r9.w, cb0[5].y
  ge r11.x, r9.w, -r9.w
  frc r9.w, |r9.w|
  movc r9.w, r11.x, r9.w, -r9.w
  mad_sat r9.w, -r9.w, cb0[5].y, l(1.000000)
  mul r9.x, r9.x, r9.w
  mul r9.w, r9.x, cb0[5].z
  mad r10.w, r10.w, cb0[5].y, cb0[5].x
  div r10.w, r10.w, cb0[5].y
  ge r11.x, r10.w, -r10.w
  frc r10.w, |r10.w|
  movc r10.w, r11.x, r10.w, -r10.w
  mad_sat r10.w, -r10.w, cb0[5].y, l(1.000000)
  mul r10.x, r10.x, r10.w
  mul r10.w, r10.x, cb0[5].z
  mad r11.xy, r11.yzyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mad_sat r6.w, r6.w, cb0[5].z, l(-0.500000)
  mul r11.xy, r6.wwww, r11.xyxx
  mul r11.xy, r7.xxxx, r11.xyxx
  mov r11.z, r7.x
  mad r9.yz, r9.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  mad_sat r6.w, r9.x, cb0[5].z, l(-0.500000)
  mul r9.xy, r6.wwww, r9.yzyy
  mul r9.xy, r7.yyyy, r9.xyxx
  mov r9.z, r7.y
  mul r9.xyz, r9.xyzx, l(7.000000, 7.000000, 1.000000, 0.000000)
  mad r9.xyz, r11.xyzx, l(7.000000, 7.000000, 1.000000, 0.000000), r9.xyzx
  mad r10.yz, r10.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  mad_sat r6.w, r10.x, cb0[5].z, l(-0.500000)
  mul r10.xy, r6.wwww, r10.yzyy
  mul r10.xy, r7.zzzz, r10.xyxx
  mov r10.z, r7.z
  mad r9.xyz, r10.xyzx, l(7.000000, 7.000000, 1.000000, 0.000000), r9.xyzx
  mul r6.w, r7.y, r9.w
  mad r6.w, r7.w, r7.x, r6.w
  mad r6.w, r10.w, r10.z, r6.w
  mul r7.xyzw, r6.wwww, cb0[4].yxzw
  mul r7.xyzw, r5.wwww, r7.xyzw
  mad r5.w, -r3.w, cb0[14].y, l(1.000000)
  mad r2.w, r7.x, r5.w, r0.x
  mad r0.x, -r4.x, cb0[14].x, l(1.000000)
  mad r8.w, r7.y, r0.x, r1.w
  mad r4.yzw, r7.zzzz, -r3.xxyz, r3.xxyz
  dp3 r0.x, r9.xyzx, r9.xyzx
  rsq r0.x, r0.x
  mad r3.xyz, r9.xyzx, r0.xxxx, -r5.xyzx
  mad r6.xyz, r7.wwww, r3.xyzx, r5.xyzx
endif
dp3 r5.x, v3.xyzx, r6.xyzx
dp3 r5.y, v4.xyzx, r6.xyzx
dp3 r5.z, v5.xyzx, r6.xyzx
dp3 r0.x, -r1.xyzx, r5.xyzx
add r0.x, r0.x, r0.x
mad r1.xyz, r5.xyzx, -r0.xxxx, -r1.xyzx
sample r1.xyzw, r1.xyzx, t4.xyzw, s5
mul r1.xyz, r3.wwww, r1.xyzx
mul r1.xyz, r1.xyzx, cb0[13].xyzx
dp3 r0.x, r2.xyzx, r6.xyzx
add r0.x, -r0.x, l(1.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, l(0.500000)
mad r1.w, cb0[15].y, r0.x, cb0[15].x
mul r1.w, r1.w, l(0.500000)
mad r0.x, cb0[16].y, r0.x, cb0[16].x
mul r2.xyz, r0.xxxx, r4.yzwy
mul r0.x, r1.w, r2.w
eq r2.w, cb3[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb3[0].y, l(1.000000)
  mul r3.xyz, v4.wwww, cb3[2].xyzx
  mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  add r3.xyz, r3.xyzx, cb3[4].xyzx
  movc r0.yzw, r2.wwww, r3.xxyz, r0.yyzw
  add r0.yzw, r0.yyzw, -cb3[6].xxyz
  mul r3.yzw, r0.yyzw, cb3[5].xxyz
  mul r0.y, r3.y, l(0.250000)
  mul r0.z, cb3[0].z, l(0.500000)
  mad r0.w, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.z, r0.y
  min r3.x, r0.w, r0.y
  sample r4.xyzw, r3.xzwx, t5.xyzw, s0
  add r0.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r6.xyzw, r0.yzwy, t5.xyzw, s0
  add r0.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r3.xyzw, r0.yzwy, t5.xyzw, s0
  mov r5.w, l(1.000000)
  dp4 r4.x, r4.xyzw, r5.xyzw
  dp4 r4.y, r6.xyzw, r5.xyzw
  dp4 r4.z, r3.xyzw, r5.xyzw
else
  mov r5.w, l(1.000000)
  dp4 r4.x, cb2[38].xyzw, r5.xyzw
  dp4 r4.y, cb2[39].xyzw, r5.xyzw
  dp4 r4.z, cb2[40].xyzw, r5.xyzw
endif
add r0.yzw, r4.xxyz, v10.xxyz
max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.yzw, r0.yyzw
mul r0.yzw, r0.yyzw, l(0.000000, 0.416666657, 0.416666657, 0.416666657)
exp r0.yzw, r0.yyzw
mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r8.xyz, r0.xxxx, cb0[3].xyzx
mad o2.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mul r0.xyz, r0.yzwy, r2.xyzx
mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
exp o3.xyz, -r0.xyzx
mov o0.xyz, r2.xyzx
mov o0.w, l(1.000000)
mov o1.xyzw, r8.xyzw
mov o2.w, l(1.000000)
mov o3.w, l(1.000000)
ret
// Approximately 0 instruction slots used