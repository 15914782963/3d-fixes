// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 00d464276edaba5e-ps.txt
// 3DMigoto: 00d464276edaba5e |    Unity headers extracted from Sandbox_VolumetricLight
//    Shader "Sandbox/VolumetricLight" {
//      SubShader 1/1 {
//        LOD 100
//        Tags { "RenderType"="Opaque" }
//        Pass 4/5 {
//          Tags { "RenderType"="Opaque" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Sandbox_VolumetricLight:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201609010 98 3 1
//   undeciphered1a: 7
//   Keywords { "SPOT" }
//   undeciphered2: 1 4 2 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 592
//   Vector 64 [_LightPos]
//   Vector 80 [_LightColor]
//   Vector 432 [_CameraForward] 3
//   Vector 448 [_VolumetricLight]
//   Vector 464 [_MieG]
//   ScalarInt 532 [_SampleCount]
//   Float 536 [_CosAngle]
//   Vector 544 [_ConeAxis]
//   Vector 560 [_ConeApex]
//   Float 576 [_PlaneD]
//   Matrix 304 [_MyLightMatrix0]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_DitherTexture] 2D 3
//   SetTexture 2 [_LightTexture0] 2D 2
//   SetTexture 3 [_LightTextureB0] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sun Jul 14 23:53:38 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[37], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 00d464276edaba5e-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.xy, v1.xyxx, v1.wwww
sample r0.xyzw, r0.xyxx, t0.xyzw, s0
add r0.yzw, v2.xxyz, -r8.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
sqrt r1.x, r1.x
div r0.yzw, r0.yyzw, r1.xxxx
mad r1.yzw, r0.yyzw, l(0.000000, 0.001000, 0.001000, 0.001000), v2.xxyz
dp3 r2.x, cb0[34].xyzx, r0.yzwy
dp3 r2.y, cb0[34].xyzx, r1.yzwy
add r2.y, r2.y, cb0[36].x
div r2.y, -r2.y, r2.x
lt r2.z, r2.y, l(0.000000)
movc r2.y, r2.z, l(100000.000000), r2.y
add r1.yzw, r1.yyzw, -cb0[35].xxyz
dp3 r2.z, r0.yzwy, r0.yzwy
dp3 r2.w, r1.yzwy, cb0[34].xyzx
dp3 r3.x, r1.yzwy, r0.yzwy
dp3 r1.y, r1.yzwy, r1.yzwy
mul r1.z, cb0[33].z, cb0[33].z
mul r1.w, r1.z, r2.z
mad r1.w, r2.x, r2.x, -r1.w
mul r2.z, r1.z, r3.x
mad r2.z, r2.w, r2.x, -r2.z
add r2.z, r2.z, r2.z
mul r1.y, r1.z, r1.y
mad r1.y, r2.w, r2.w, -r1.y
mul r1.y, r1.w, r1.y
mul r1.y, r1.y, l(4.000000)
mad r1.y, r2.z, r2.z, -r1.y
lt r1.z, l(0.000000), r1.y
sqrt r3.y, r1.y
lt r1.y, l(0.000000), r1.w
lt r3.z, r1.w, l(0.000000)
iadd r1.y, -r1.y, r3.z
itof r1.y, r1.y
mov r3.x, -r3.y
mad r3.xy, r1.yyyy, r3.xyxx, -r2.zzzz
add r1.y, r1.w, r1.w
div r1.yw, r3.xxxy, r1.yyyy
mad r2.xz, r2.xxxx, r1.yywy, r2.wwww
lt r2.xz, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xxzx
lt r3.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r1.ywyy
and r2.xz, r2.xxzx, r3.xxyx
and r3.xy, r2.xzxx, l(0x3f800000, 0x3f800000, 0, 0)
movc r2.xz, r2.xxzx, l(0,0,0,0), l(10000.000000,0,10000.000000,0)
mad r1.yw, r1.yyyw, r3.xxxy, r2.xxxz
movc r1.yz, r1.zzzz, r1.yywy, l(0,10000.000000,10000.000000,0)
mad r0.x, cb1[7].z, r0.x, cb1[7].w
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
dp3 r1.w, cb0[27].xyzx, r0.yzwy
div r0.x, r0.x, r1.w
add r0.x, -r1.x, r0.x
min r1.x, r1.z, r1.y
min r1.x, r1.x, r2.y
min r0.x, r0.x, r1.x
round_ni r1.xy, v0.xyxx
mul r1.xy, r1.xyxx, l(0.125000, 0.125000, 0.000000, 0.000000)
ge r1.zw, r1.xxxy, -r1.xxxy
frc r1.xy, |r1.xyxx|
movc r1.xy, r1.zwzz, r1.xyxx, -r1.xyxx
add r1.xy, r1.xyxx, l(0.062500, 0.062500, 0.000000, 0.000000)
sample r1.xyzw, r1.xyxx, t1.xyzw, s3
itof r1.x, cb0[33].y
div r0.x, r0.x, r1.x
mul r1.xyz, r0.xxxx, r0.yzwy
mad r1.xyz, r1.xyzx, r1.wwww, v2.xyzx
add r2.xyz, -r1.xyzx, r8.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
sqrt r1.w, r1.w
mul r1.w, r1.w, cb0[28].y
mul r1.w, r1.w, l(0.500000)
mul r2.x, r0.x, cb0[28].x
mov r2.yzw, l(0,0,0,0)
mov r3.xyzw, r1.xyzw
mov r4.x, l(0)
loop
  ige r4.y, r4.x, cb0[33].y
  breakc_nz r4.y
  add r4.yzw, -r3.xxyz, cb0[4].xxyz
  mul r5.xyz, r3.yyyy, cb0[20].xywx
  mad r5.xyz, cb0[19].xywx, r3.xxxx, r5.xyzx
  mad r5.xyz, cb0[21].xywx, r3.zzzz, r5.xyzx
  add r5.xyz, r5.xyzx, cb0[22].xywx
  div r5.xy, r5.xyxx, r5.zzzz
  sample_b r6.xyzw, r5.xyxx, t2.xyzw, s2, l(-8.000000)
  lt r5.x, r5.z, l(0.000000)
  and r5.x, r5.x, l(0x3f800000)
  mul r5.x, r5.x, r6.w
  dp3 r4.y, r4.yzwy, r4.yzwy
  mul r4.y, r4.y, cb0[4].w
  sample r6.xyzw, r4.yyyy, t3.xyzw, s1
  mul r4.y, r5.x, r6.x
  mad r3.w, cb0[28].y, r0.x, r3.w
  mul r4.y, r2.x, r4.y
  mul r4.z, r3.w, l(-1.442695)
  exp r4.z, r4.z
  mul r4.y, r4.z, r4.y
  add r5.xyz, r3.xyzx, -cb0[4].xyzx
  dp3 r4.z, r5.xyzx, r5.xyzx
  rsq r4.z, r4.z
  mul r5.xyz, r4.zzzz, r5.xyzx
  dp3 r4.z, r5.xyzx, -r0.yzwy
  mad r4.z, -cb0[29].z, r4.z, cb0[29].y
  log r4.z, r4.z
  mul r4.z, r4.z, l(1.500000)
  exp r4.z, r4.z
  div r4.z, cb0[29].x, r4.z
  mul r4.z, r4.z, cb0[29].w
  mad r2.yzw, r4.yyyy, r4.zzzz, r2.yyzw
  mad r3.xyz, r0.yzwy, r0.xxxx, r3.xyzx
  iadd r4.x, r4.x, l(1)
endloop
mul r0.xyz, r2.yzwy, cb0[5].xyzx
max o0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used