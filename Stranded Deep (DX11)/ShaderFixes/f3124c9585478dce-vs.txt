// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed f3124c9585478dce-vs.txt
// 3DMigoto: f3124c9585478dce | Matched 2 variants of 1 shaders: Beam Team/Atmosphere/Clouds
//
//       Unity headers extracted from Clouds.shader
//       Shader "Beam Team/Atmosphere/Clouds" {
//         Properties {
//          _CloudTex ("Volumetric Clouds Texture", 2D) = "white" { }
//         [HideInInspector]  _CloudColor ("Cloud Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _AltoCumulusIntensity ("Alto-Cumulus: Intensity", Range(1.000000,10.000000)) = 1.000000
//          _AltoCumulusScatteringIntensity ("Alto-Cumulus: Scattering Intensity", Range(1.000000,20.000000)) = 10.000000
//          _AltoCumulusCloudLayer ("Alto-Cumulus: Cloud Layer", 2D) = "white" { }
//          _AltoCumulusCloudNormals ("Alto-Cumulus: Cloud Normals", 2D) = "bump" { }
//          _AltoCumulusCloudDensity ("Alto-Cumulus: Density", Float) = 1.000000
//          _AltoCumulusCloudShading ("Alto-Cumulus: Shading Contribution", Float) = 1.000000
//          _AltoCumulusCloudSpeed1 ("Alto-Cumulus: Plane 1 Speed", Float) = 1.000000
//          _AltoCumulusCloudSpeed2 ("Alto-Cumulus: Plane 2 Speed", Float) = 1.500000
//          _AltoCumulusCloudScale1 ("Alto-Cumulus: Plane 1 Scale", Float) = 12.000000
//          _AltoCumulusCloudScale2 ("Alto-Cumulus: Plane 2 Scale", Float) = 13.000000
//          _CirrusCloudLayer ("Cirrus Cloud Layer", 2D) = "white" { }
//          _CirrusCloudDensity ("Cirrus Cloud Density", Float) = 1.000000
//          _CirrusCloudShading ("Cirrus Cloud Shading", Float) = 1.000000
//          _CirrusCloudSpeed1 ("Cirrus Cloud Plane 1 Speed", Float) = 1.000000
//          _CirrusCloudSpeed2 ("Cirrus Cloud Plane 2 Speed", Float) = 1.500000
//          _CirrusCloudScale1 ("Cirrus Cloud Plane 1 Scale", Float) = 12.000000
//          _CirrusCloudScale2 ("Cirrus Cloud Plane 2 Scale", Float) = 13.000000
//          _WindDirection ("Wind Direction", Vector) = (2.000000,1.000000,2.000000,1.000000)
//         }
//         Fallback Off
//         SubShader 1/1 {
//           Tags { "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//           Pass 2/2 {
//             Tags { "QUEUE"="Geometry" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//             ZWrite Off
//             Cull Front
//             Blend SrcAlpha OneMinusSrcAlpha
//             GpuProgramID 87212
//             Program "vp" {
//               SubProgram "d3d11_9x " {
// 2:              GpuProgramIndex 11
// 1:              GpuProgramIndex 8
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Clouds.shader.decompressed:
//      API d3d11_9x
//      Shader model vs_4_0_level_9_1
//      undeciphered1: 201510240 55 0 0
// 2:   Keywords { "VOLUMETRIC_CLOUDS_OFF" }
// 1:   Keywords { "VOLUMETRIC_CLOUDS_ON" }
//      undeciphered2: 1 0 3 0 0 0
//      undeciphered3: 131 3 0 0 1 2 7 8
//      ConstBuffer "$Globals" 256
//      Float 112 [_AltoCumulusCloudSpeed1]
//      Float 116 [_AltoCumulusCloudSpeed2]
//      Float 120 [_AltoCumulusCloudScale1]
//      Float 124 [_AltoCumulusCloudScale2]
//      Vector 128 [_CloudColor]
//      Vector 176 [_SunDirection] 3
//      Vector 192 [_MoonDirection] 3
//      Vector 208 [_WindDirection]
//      Float 224 [_RandomSeed]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 256 [unity_WorldToObject]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Dec 10 03:50:41 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1     zw        2     NONE   float     zw
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             7         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            11         4  ( FLT, FLT, FLT, FLT)
// c7         cb1             0         1  ( FLT, FLT, FLT, FLT)
// c8         cb1             5         1  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         4  ( FLT, FLT, FLT, FLT)
// c13        cb2            16         3  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c16, 0.0500000007, 0.800000012, 1, 0.5
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    mul r0.xy, c5, c5
    add r0.x, r0.y, r0.x
    rsq r0.x, r0.x
    mul r0.xy, r0.x, c5
    nrm r1.xyz, v0
    max r0.z, r1.y, c16.x
    rcp r0.z, r0.z
    mul r0.zw, r0.z, r1.xyxz
    rsq r1.x, r1.y
    rcp oT0.w, r1.x
    mov r1.xy, c1
    mov r2.x, c7.x
    mad r1.xy, r2.x, r1, c6.x
    mad r0.xy, r1.x, r0, r0.wzzw
    rcp r1.x, c1.z
    mul oT1.xy, r0, r1.x
    mov r1.zw, c5
    mul r0.xy, r1.wzzw, c16.yzzw
    mul r1.xz, r0.yyxw, r0.yyxw
    add r1.x, r1.z, r1.x
    rsq r1.x, r1.x
    mul r0.xy, r0, r1.x
    mad r0.xy, r1.y, r0, r0.zwzw
    rcp r0.z, c1.w
    mul oT1.zw, r0.z, r0.xyxy
    dp3 r0.x, v2, v2
    rsq r0.x, r0.x
    mul r0.xyz, r0.x, v2.yzxw
    dp3 r0.w, v1, v1
    rsq r1.x, r0.w
    mov oT3.z, r0.w
    mul r1.xyz, r1.x, v1.zxyw
    mul r2.xyz, r0, r1
    mad r0.xyz, r1.zxyw, r0.yzxw, -r2
    mul r0.xyz, r0, v2.w
    mov r1.xyz, c3
    mul r2.xyz, r1.y, c14
    mad r1.xyw, c13.xyzz, r1.x, r2.xyzz
    mad r1.xyz, c15, r1.z, r1.xyww
    dp3 r2.y, r0, r1
    dp3 r2.x, v2, r1
    dp3 r2.z, v1, r1
    dp3 r0.w, r2, r2
    rsq r0.w, r0.w
    mul oT2.xyz, r0.w, r2
    mov r1.xyz, c4
    mul r2.xyz, r1.y, c14
    mad r1.xyw, c13.xyzz, r1.x, r2.xyzz
    mad r1.xyz, c15, r1.z, r1.xyww
    dp3 r2.y, r0, r1
    dp3 oT3.y, r0, v1
    dp3 r2.x, v2, r1
    dp3 r2.z, v1, r1
    dp3 r0.x, r2, r2
    rsq r0.x, r0.x
    mul oT4.xyz, r0.x, r2
    mov r0.xyz, v2
    dp3 oT3.x, r0, v1
    mul r0, v0.y, c10
    mad r0, c9, v0.x, r0
    mad r0, c11, v0.z, r0
    mad r0, c12, v0.w, r0
    mul r1.x, r0.y, c8.x
    mul r1.w, r1.x, c16.w
    mul r1.xz, r0.xyww, c16.w
    add oT5.xy, r1.z, r1.xwzw
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT5.zw, r0
    mov oT0.xyz, c2

// approximately 72 instruction slots used
vs_4_0
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[19], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o2.zw
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_temps 5

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed f3124c9585478dce-vs.txt
ne r4.w, r0.w, l(1.0)
if_nz r4.w
  add r4.w, r0.w, -r4.y
  mad r0.x, r4.w, r4.x, r0.x
endif

dp3 r1.x, v0.xyzx, v0.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v0.xyzx
rsq r1.w, r1.y
div o1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
mov o1.xyz, cb0[8].xyzx
max r1.y, r1.y, l(0.050000)
div r1.xy, r1.zxzz, r1.yyyy
mul r1.zw, cb0[13].zzzw, l(0.000000, 0.000000, 1.000000, 0.800000)
dp2 r2.x, r1.zwzz, r1.zwzz
rsq r2.x, r2.x
mul r1.zw, r1.zzzw, r2.xxxx
mad r2.xy, cb1[0].xxxx, cb0[7].xyxx, cb0[14].xxxx
mad r1.zw, r2.yyyy, r1.zzzw, r1.xxxy
div o2.zw, r1.zzzw, cb0[7].wwww
dp2 r1.z, cb0[13].xyxx, cb0[13].xyxx
rsq r1.z, r1.z
mul r1.zw, r1.zzzz, cb0[13].xxxy
mad r1.xy, r2.xxxx, r1.zwzz, r1.xyxx
div o2.xy, r1.xyxx, cb0[7].zzzz
dp3 r1.x, v2.xyzx, v2.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v2.yzxy
dp3 r1.w, v1.xyzx, v1.xyzx
rsq r2.x, r1.w
mov o4.z, r1.w
mul r2.xyz, r2.xxxx, v1.zxyz
mul r3.xyz, r1.xyzx, r2.xyzx
mad r1.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
mul r1.xyz, r1.xyzx, v2.wwww
mul r2.xyz, cb0[11].yyyy, cb2[17].xyzx
mad r2.xyz, cb2[16].xyzx, cb0[11].xxxx, r2.xyzx
mad r2.xyz, cb2[18].xyzx, cb0[11].zzzz, r2.xyzx
dp3 r3.y, r1.xyzx, r2.xyzx
dp3 r3.x, v2.xyzx, r2.xyzx
dp3 r3.z, v1.xyzx, r2.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul o3.xyz, r1.wwww, r3.xyzx
dp3 o4.y, r1.xyzx, v1.xyzx
dp3 o4.x, v2.xyzx, v1.xyzx
mul r2.xyz, cb0[12].yyyy, cb2[17].xyzx
mad r2.xyz, cb2[16].xyzx, cb0[12].xxxx, r2.xyzx
mad r2.xyz, cb2[18].xyzx, cb0[12].zzzz, r2.xyzx
dp3 r1.y, r1.xyzx, r2.xyzx
dp3 r1.x, v2.xyzx, r2.xyzx
dp3 r1.z, v1.xyzx, r2.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul o5.xyz, r1.wwww, r1.xyzx
mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o6.zw, r0.zzzw
add o6.xy, r1.zzzz, r1.xwxx
ret 
// Approximately 0 instruction slots used