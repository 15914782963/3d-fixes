// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8b8f5e0d5e05a444-ps.txt
// 3DMigoto: 8b8f5e0d5e05a444 |    Unity headers extracted from Foliage - Double-Sided 2PASS Metallic.shader
//    Shader "Beam Team/Foliage/Foliage - Forward Cull Off 2PASS Metallic" {
//      Properties {
//      [Header(Diffuse)]  _Color ("Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.500000
//       _MainTex ("Diffuse Albedo (RGB)", 2D) = "white" { }
//      [Header(Packed Normals)]  _PackedTex ("Gloss (R) Normal X (G) Translucency (B) Normal Y (A)", 2D) = "white" { }
//      [Header(Translucency)] [Toggle(BEAM_SPEEDTREE_TRANSLUCENCY)]  _Translucent ("Translucent", Float) = 0.000000
//       _TranslucencyColor ("Translucency Tint", Color) = (0.730000,0.850000,0.410000,1.000000)
//       _TranslucencyIntensity ("Translucency Intensity", Range(1.000000,5.000000)) = 1.000000
//       _TranslucencyViewDependency ("Translucency View Dependency", Range(0.000000,1.000000)) = 0.500000
//      [Header(Wind)] [MaterialEnum(None, 0, Fastest, 1, Fast, 2, Better, 3, Best, 4, Palm, 5)]  _WindQuality ("Wind Quality", Range(0.000000,5.000000)) = 0.000000
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "RenderType"="Foliage" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="AlphaTest" "RenderType"="Foliage" }
//          ZWrite Off
//          Cull Front
//          Blend One One
//          GpuProgramID 78092
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 23
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Foliage - Double-Sided 2PASS Metallic.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 92 4 0
//   Keywords { "POINT_COOKIE" }
//   undeciphered2: 1 4 3 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 336
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Float 208 [_Cutoff]
//   Vector 224 [_Color]
//   Matrix 128 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_PackedTex] 2D 3
//   SetTexture 2 [_LightTextureB0] 2D 1
//   SetTexture 3 [_LightTexture0] CUBE 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Dec 10 03:49:27 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8b8f5e0d5e05a444-ps.txt
mov r7.xyzw, cb1[4].xyzw
mov r8.xyzw, l(0)
mul r8.x, -r6.x, r6.y
mul r10.xyzw, cb10[0].xyzw, r8.xxxx
mad r10.xyzw, cb10[1].xyzw, r8.yyyy, r10.xyzw
mad r10.xyzw, cb10[2].xyzw, r8.zzzz, r10.xyzw
mad r10.xyzw, cb10[3].xyzw, r8.wwww, r10.xyzw
mul r9.xyzw, cb11[12].xyzw, r10.xxxx
mad r9.xyzw, cb11[13].xyzw, r10.yyyy, r9.xyzw
mad r9.xyzw, cb11[14].xyzw, r10.zzzz, r9.xyzw
mad r9.xyzw, cb11[15].xyzw, r10.wwww, r9.xyzw
add r7.xyz, r7.xyz, -r9.xyz

sample r0.xyzw, v5.xyxx, t0.xyzw, s2
mad r0.w, r0.w, cb0[14].w, -cb0[13].x
mul r0.xyz, r0.xyzx, cb0[14].xyzx
mul r0.xyz, r0.xyzx, cb0[2].wwww
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
add r1.xyz, -v4.xyzx, r7.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
add r2.xyz, -v4.xyzx, cb2[0].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mad r3.xyz, r2.xyzx, r0.wwww, r1.xyzx
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
sample r4.xyzw, v5.xyxx, t1.xyzw, s3
mad r5.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r0.w, -r4.x, v5.z, l(1.000000)
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
dp3 r4.x, v1.xyzx, r5.xyzx
dp3 r4.y, v2.xyzx, r5.xyzx
dp3 r4.z, v3.xyzx, r5.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, r4.xyzx
dp3 r1.w, r4.xyzx, r2.xyzx
dp3 r2.x, r2.xyzx, r3.xyzx
dp3 r2.y, r5.xyzx, r3.xyzx
dp3 r1.x, r5.xyzx, r1.xyzx
max r1.yz, r2.yyxy, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.y, r1.y, r1.y
max r1.xw, r1.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.x, r0.w, r0.w
mad r2.y, r2.x, r2.x, l(-1.000000)
mad r1.y, r1.y, r2.y, l(1.000000)
mul r2.y, r1.y, l(3.14159274)
mad r1.y, r2.y, r1.y, l(1.000000012E-007)
mul r2.y, r2.x, r2.x
div r1.y, r2.y, r1.y
mad r2.y, -r0.w, r0.w, l(1.000000)
mad r2.z, r1.x, r2.y, r2.x
mad r2.x, r1.w, r2.y, r2.x
mul r2.x, r1.x, r2.x
mad r2.x, r1.w, r2.z, r2.x
add r2.x, r2.x, l(0.000010)
div r2.x, l(2.000000), r2.x
mul r1.y, r1.y, r2.x
mul r1.y, r1.y, l(0.785398185)
max r2.x, r1.y, l(0.000100)
sqrt r2.x, r2.x
eq r2.y, cb0[3].w, l(0.000000)
movc r1.y, r2.y, r2.x, r1.y
mul r1.y, r1.w, r1.y
max r1.y, r1.y, l(0.000000)
dp3 r2.x, cb0[2].xyzx, cb0[2].xyzx
ne r2.x, r2.x, l(0.000000)
and r2.x, r2.x, l(0x3f800000)
mul r1.y, r1.y, r2.x
mul r2.xyz, v4.yyyy, cb0[9].xyzx
mad r2.xyz, cb0[8].xyzx, v4.xxxx, r2.xyzx
mad r2.xyz, cb0[10].xyzx, v4.zzzz, r2.xyzx
add r2.xyz, r2.xyzx, cb0[11].xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
sample r3.xyzw, r2.xyzx, t3.xyzw, s0
sample r2.xyzw, r2.wwww, t2.xyzw, s1
mul r2.x, r3.w, r2.x
mul r2.xyz, r2.xxxx, cb0[6].xyzx
mul r3.xyz, r1.yyyy, r2.xyzx
add r1.xy, -r1.xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r1.z, r1.z, r1.z
dp2 r0.w, r1.zzzz, r0.wwww
add r0.w, r0.w, l(-0.500000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
add r4.xyz, -cb0[2].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r4.xyz, r4.xyzx, r1.yyyy, cb0[2].xyzx
mul r3.xyz, r3.xyzx, r4.xyzx
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r1.x, r0.w, r1.x, l(1.000000)
add r1.y, -r1.w, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
mad r0.w, r0.w, r1.y, l(1.000000)
mul r0.w, r1.x, r0.w
mul r0.w, r1.w, r0.w
mul r1.xyz, r0.wwww, r2.xyzx
mad o0.xyz, r0.xyzx, r1.xyzx, r3.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used