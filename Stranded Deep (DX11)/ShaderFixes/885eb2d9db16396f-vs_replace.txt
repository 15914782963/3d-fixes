// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe 885eb2d9db16396f-vs_replace.txt
// 3DMigoto: 885eb2d9db16396f |    Unity headers extracted from AFS Grass V4.shader
//    Shader "Beam Team/Standard/Terrain/AFS/Grass Shader v4" {
//      Properties {
//       _Cutoff ("Alpha cutoff", Range(0,1)) = 0.3
//       _MainTex ("Base (RGB) Alpha (A)", 2D) = "white" { }
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry+200" "IGNOREPROJECTOR"="true" "RenderType"="AFSGrass" "AfsMode"="Grass" }
//        Pass 1/1 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "QUEUE"="Geometry+200" "IGNOREPROJECTOR"="true" "RenderType"="AFSGrass" "AfsMode"="Grass" }
//          Cull Off
//          GpuProgramID 23758
//          Program "vp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 121
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from AFS Grass V4.shader.decompressed:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 79 0 0
//   Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "SUNSHINE_FILTER_HARD" "IN_PLAYMODE" }
//   undeciphered2: 1 0 5 0 0
//   undeciphered3: 15 4 0 0 2 1 1 2 3 4
//   ConstBuffer "$Globals" 576
//   Vector 128 [_Wind]
//   Vector 544 [_MainTex_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 656 [unity_SHBr]
//   Vector 672 [unity_SHBg]
//   Vector 688 [unity_SHBb]
//   Vector 704 [unity_SHC]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [_Object2World]
//   Matrix 256 [_World2Object]
//   ConstBuffer "AfsGrass" 64
//   Vector 0 [_AfsWaveAndDistance]
//   Float 16 [_AfsWindJitterScale]
//   Vector 32 [_AfsWavingTint]
//   Vector 48 [_AfsGrassWind]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "AfsGrass" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

// ---- Created with 3Dmigoto v1.2.36 on Fri May 06 10:58:40 2016
cbuffer cb4 : register(b4)
{
  float4 cb4[4];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[22];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[45];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[9];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[35];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);



cbuffer UnityPerDraw : register(b11) {
	float4x4 glstate_matrix_mvp;
	float4x4 glstate_matrix_modelview0;
	float4x4 glstate_matrix_invtrans_modelview0;
	#define UNITY_MATRIX_MVP glstate_matrix_mvp
	#define UNITY_MATRIX_MV glstate_matrix_modelview0
	#define UNITY_MATRIX_IT_MV glstate_matrix_invtrans_modelview0

	uniform float4x4 _Object2World;
	uniform float4x4 _World2Object;
	uniform float4 unity_LODFade; // x is the fade value ranging within [0,1]. y is x quantized into 16 levels
	uniform float4 unity_WorldTransformParams; // w is usually 1.0, or -1.0 for odd-negative scale transforms
}


#include <ShaderFixes/matrix.hlsl>

void main( 
  float4 v0 : POSITION0,
  float4 v1 : TANGENT0,
  float3 v2 : NORMAL0,
  float4 v3 : TEXCOORD0,
  float4 v4 : TEXCOORD1,
  float4 v5 : TEXCOORD2,
  float4 v6 : TEXCOORD3,
  float4 v7 : COLOR0,
  out float4 o0 : SV_POSITION0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float3 o3 : TEXCOORD2,
  out float4 o4 : COLOR0,
  out float4 o5 : TEXCOORD3,
  out float4 o6 : TEXCOORD4,
  out float4 o7 : TEXCOORD5,
  out float3 o8 : TEXCOORD6)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
float separation = stereo.x, convergence = stereo.y, eye = stereo.z;

// Unity reflection/specular fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe 885eb2d9db16396f-vs_replace.txt
float4 _WorldSpaceCameraPos = cb1[4];
float4 clip_space_adj = float4(-separation * convergence, 0, 0, 0);
float4 local_space_adj = mul(inverse(glstate_matrix_mvp), clip_space_adj);
float4 world_space_adj = mul(_Object2World, local_space_adj);
_WorldSpaceCameraPos.xyz -= world_space_adj.xyz;

  r0.xyzw = cb3[13].xyzw * v0.yyyy;
  r1.xyzw = cb3[12].xyzw * v0.xxxx + r0.xyzw;
  r1.xyzw = cb3[14].xyzw * v0.zzzz + r1.xyzw;
  r1.xyzw = cb3[15].xyzw * v0.wwww + r1.xyzw;
  r0.w = r1.x + r1.z;
  r0.w = 0.0175000001 * r0.w;
  r0.w = frac(r0.w);
  r0.w = cb4[0].x + r0.w;
  r2.xy = cb4[0].yy * r1.xz;
  r3.xyzw = float4(0.00600000005,0.0199999996,0.0199999996,0.0500000007) * r2.yyyy;
  r2.xyzw = r2.xxxx * float4(0.0120000001,0.0199999996,0.0599999987,0.0240000002) + r3.xyzw;
  r2.xyzw = r0.wwww * float4(2.4000001,4,3.20000005,9.60000038) + r2.xyzw;
  r2.xyzw = frac(r2.xyzw);
  r2.xyzw = r2.xyzw * float4(6.40884876,6.40884876,6.40884876,6.40884876) + float4(-3.14159274,-3.14159274,-3.14159274,-3.14159274);
  r3.xyzw = r2.xyzw * r2.xyzw;
  r4.xyzw = r3.xyzw * r2.xyzw;
  r2.xyzw = r4.xyzw * float4(-0.161616161,-0.161616161,-0.161616161,-0.161616161) + r2.xyzw;
  r4.xyzw = r4.xyzw * r3.xyzw;
  r2.xyzw = r4.xyzw * float4(0.00833330024,0.00833330024,0.00833330024,0.00833330024) + r2.xyzw;
  r4.xyzw = r4.xyzw * r3.xyzw;
  r2.xyzw = r4.xyzw * float4(-0.000198409994,-0.000198409994,-0.000198409994,-0.000198409994) + r2.xyzw;
  r2.xyzw = r2.xyzw * r2.xyzw;
  r2.xyzw = r2.xyzw * r2.xyzw;
  r0.w = cb4[0].z * v7.w;
  r4.xyzw = r2.xyzw * r0.wwww;
  r0.w = dot(r2.xyzw, float4(0.674199879,0.674199879,0.269679934,0.134839967));
  r0.w = 0.699999988 * r0.w;
  r2.xyzw = r3.xyzw * float4(-0.5,-0.5,-0.5,-0.5) + float4(1,1,1,1);
  r5.xyzw = r3.xyzw * r3.xyzw;
  r3.xyzw = r5.xyzw * r3.xyzw;
  r2.xyzw = r5.xyzw * float4(0.0416666642,0.0416666642,0.0416666642,0.0416666642) + r2.xyzw;
  r2.xyzw = r3.xyzw * float4(-0.00138888892,-0.00138888892,-0.00138888892,-0.00138888892) + r2.xyzw;
  r2.xyzw = r3.xyzw * float4(2.48015876e-005,2.48015876e-005,2.48015876e-005,2.48015876e-005) + r2.xyzw;
  r2.xyzw = r4.xyzw * r2.xyzw;
  r3.xyzw = float4(0.0240000002,0.0399999991,-0.119999997,0.0960000008) * cb0[8].xxxx;
  r3.x = dot(r2.xyzw, r3.xyzw);
  r4.xyzw = float4(0.00600000005,0.0199999996,-0.0199999996,0.100000001) * cb0[8].zzzz;
  r3.z = dot(r2.xyzw, r4.xyzw);
  r2.xy = cb4[1].xx * r3.xz;
  r2.xy = cb4[0].zz * r2.xy;
  r2.zw = cb4[3].xz * v7.ww;
  r2.xy = r2.zw * r0.ww + r2.xy;
  r1.xz = r2.xy + r1.xz;
  r2.xy = cb3[17].xz * r1.yy;
  r2.xy = cb3[16].xz * r1.xx + r2.xy;
  r2.xy = cb3[18].xz * r1.zz + r2.xy;
  r2.xy = cb3[19].xz * r1.ww + r2.xy;
  r1.xyz = -_WorldSpaceCameraPos.xyz + r1.xyz;
  r1.x = dot(r1.xyz, r1.xyz);
  r1.x = cb4[0].w + -r1.x;
  r1.x = r1.x + r1.x;
  r3.xyzw = cb3[1].xyzw * v0.yyyy;
  r3.xyzw = cb3[0].xyzw * r2.xxxx + r3.xyzw;
  r3.xyzw = cb3[2].xyzw * r2.yyyy + r3.xyzw;
  o0.xyzw = cb3[3].xyzw * v0.wwww + r3.xyzw;
  o1.xy = v3.xy * cb0[34].xy + cb0[34].zw;
  r3.x = cb3[16].x;
  r3.y = cb3[17].x;
  r3.z = cb3[18].x;
  r4.x = cb3[16].y * v2.y;
  r4.y = cb3[17].y * v2.y;
  r4.z = cb3[18].y * v2.y;
  r1.yzw = r3.xyz * v2.xxx + r4.xyz;
  r3.x = cb3[16].z;
  r3.y = cb3[17].z;
  r3.z = cb3[18].z;
  r1.yzw = r3.xyz * v2.zzz + r1.yzw;
  r2.z = dot(r1.yzw, r1.yzw);
  r2.z = rsqrt(r2.z);
  r1.yzw = r2.zzz * r1.yzw;
  o2.xyz = r1.yzw;
  r0.xyz = cb3[12].xyz * r2.xxx + r0.xyz;
  r0.xyz = cb3[14].xyz * r2.yyy + r0.xyz;
  o3.xyz = cb3[15].xyz * v0.www + r0.xyz;
  r0.xyz = float3(-1,-1,-1) + cb4[2].xyz;
  r0.xyz = r0.www * r0.xyz + float3(1,1,1);
  o4.xyz = v7.xyz * r0.xyz;
  r0.x = 1 / cb4[0].w;
  o4.w = saturate(r1.x * r0.x);
  o5.xyzw = float4(0,0,0,0);
  o6.xyzw = float4(0,0,0,0);
  o7.xyzw = float4(0,0,0,0);
  r0.x = r1.z * r1.z;
  r0.x = r1.y * r1.y + -r0.x;
  r1.xyzw = r1.yzww * r1.zwwy;
  r2.x = dot(cb2[41].xyzw, r1.xyzw);
  r2.y = dot(cb2[42].xyzw, r1.xyzw);
  r2.z = dot(cb2[43].xyzw, r1.xyzw);
  o8.xyz = cb2[44].xyz * r0.xxx + r2.xyz;
  return;
}

/****************************** COMPILE WARNINGS ******************************
C:\Steam\SteamApps\common\Stranded Deep\ShaderFixes\885eb2d9db16396f-vs_replace.txt(123,14-15): warning X3578: Output value 'o1' is not completely initialized
C:\Steam\SteamApps\common\Stranded Deep\ShaderFixes\885eb2d9db16396f-vs_replace.txt(124,14-15): warning X3578: Output value 'o2' is not completely initialized

****************************** COMPILE WARNINGS ******************************/
