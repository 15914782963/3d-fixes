// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe b0fe94306a308630-vs_replace.txt
// 3DMigoto: b0fe94306a308630 |    Unity headers extracted from Speedtree Tree - Billboard.shader
//    Shader "Beam Team/SpeedTree/Deferred/SpeedTree Tree - Billboard" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _SpecColor ("Specular Color", Color) = (0.5,0.5,0.5,0)
//       _MainTex ("Base (RGB)", 2D) = "white" { }
//       _BumpTex ("Normalmap", 2D) = "bump" { }
//       _Cutoff ("Alpha cutoff", Range(0,1)) = 0.5
//      [MaterialEnum(None,0,Fastest,1)]  _WindQuality ("Wind Quality", Range(0,1)) = 0
//      [HideInInspector]  _TreeInfo0 ("TreeInfo0", Vector) = (0,0,0,0)
//      [HideInInspector]  _TreeInfo1 ("TreeInfo1", Vector) = (0,0,0,0)
//      [HideInInspector]  _TreeInfo2 ("TreeInfo2", Vector) = (0,0,0,0)
//      [HideInInspector]  _TreeInfo3 ("TreeInfo3", Vector) = (0,0,0,0)
//      [HideInInspector]  _TreeSize0 ("TreeSize0", Vector) = (0,0,0,0)
//      [HideInInspector]  _TreeSize1 ("TreeSize1", Vector) = (0,0,0,0)
//      [HideInInspector]  _TreeSize2 ("TreeSize2", Vector) = (0,0,0,0)
//      [HideInInspector]  _TreeSize3 ("TreeSize3", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords0 ("ImageTexCoords0", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords1 ("ImageTexCoords1", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords2 ("ImageTexCoords2", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords3 ("ImageTexCoords3", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords4 ("ImageTexCoords4", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords5 ("ImageTexCoords5", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords6 ("ImageTexCoords6", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords7 ("ImageTexCoords7", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords8 ("ImageTexCoords8", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords9 ("ImageTexCoords9", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords10 ("ImageTexCoords10", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords11 ("ImageTexCoords11", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords12 ("ImageTexCoords12", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords13 ("ImageTexCoords13", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords14 ("ImageTexCoords14", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords15 ("ImageTexCoords15", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords16 ("ImageTexCoords16", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords17 ("ImageTexCoords17", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords18 ("ImageTexCoords18", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords19 ("ImageTexCoords19", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords20 ("ImageTexCoords20", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords21 ("ImageTexCoords21", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords22 ("ImageTexCoords22", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords23 ("ImageTexCoords23", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords24 ("ImageTexCoords24", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords25 ("ImageTexCoords25", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords26 ("ImageTexCoords26", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords27 ("ImageTexCoords27", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords28 ("ImageTexCoords28", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords29 ("ImageTexCoords29", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords30 ("ImageTexCoords30", Vector) = (0,0,0,0)
//      [HideInInspector]  _ImageTexCoords31 ("ImageTexCoords31", Vector) = (0,0,0,0)
//      [HideInInspector]  _InstanceData ("InstanceData", Vector) = (0,0,0,0)
//      }
//      SubShader 2/2 {
//        Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "DisableBatching"="LodFading" "RenderType"="SpeedTreeBillboard" }
//        Pass 1/1 {
//          Name "SHADOWCASTER"
//          Tags { "LIGHTMODE"="SHADOWCASTER" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "DisableBatching"="LodFading" "RenderType"="SpeedTreeBillboard" }
//          Cull Off
//          GpuProgramID 122044
//          Program "vp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 139
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Speedtree Tree - Billboard.shader.decompressed:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 62 0 0
//   Keywords { "SHADOWS_CUBE" "LOD_FADE_CROSSFADE" }
//   undeciphered2: 1 0 7 0 0
//   undeciphered3: 29 4 0 0 2 1 3 4 4 5
//   ConstBuffer "$Globals" 160
//   Float 112 [_WindQuality]
//   Float 116 [_WindEnabled]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 80 [_ProjectionParams]
//   Vector 96 [_ScreenParams]
//   ConstBuffer "UnityLighting" 720
//   Vector 16 [_LightPositionRange]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [_Object2World]
//   ConstBuffer "SpeedTreeWind" 256
//   Vector 0 [_ST_WindVector]
//   Vector 16 [_ST_WindGlobal]
//   Vector 96 [_ST_WindBranchAdherences]
//   ConstBuffer "UnityBillboardPerCamera" 48
//   Vector 16 [unity_BillboardTangent] 3
//   Vector 32 [unity_BillboardCameraParams]
//   ConstBuffer "UnityBillboardPerBatch" 288
//   Vector 0 [unity_BillboardInfo]
//   Vector 16 [unity_BillboardSize]
//   Vector 32 [unity_BillboardImageTexCoords0]
//   Vector 48 [unity_BillboardImageTexCoords1]
//   Vector 64 [unity_BillboardImageTexCoords2]
//   Vector 80 [unity_BillboardImageTexCoords3]
//   Vector 96 [unity_BillboardImageTexCoords4]
//   Vector 112 [unity_BillboardImageTexCoords5]
//   Vector 128 [unity_BillboardImageTexCoords6]
//   Vector 144 [unity_BillboardImageTexCoords7]
//   Vector 160 [unity_BillboardImageTexCoords8]
//   Vector 176 [unity_BillboardImageTexCoords9]
//   Vector 192 [unity_BillboardImageTexCoords10]
//   Vector 208 [unity_BillboardImageTexCoords11]
//   Vector 224 [unity_BillboardImageTexCoords12]
//   Vector 240 [unity_BillboardImageTexCoords13]
//   Vector 256 [unity_BillboardImageTexCoords14]
//   Vector 272 [unity_BillboardImageTexCoords15]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "SpeedTreeWind" 4
//   BindCB "UnityBillboardPerCamera" 5
//   BindCB "UnityBillboardPerBatch" 6
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

// ---- Created with 3Dmigoto v1.2.36 on Fri May 06 11:12:31 2016
cbuffer cb6 : register(b6)
{
  float4 cb6[18];
}

cbuffer cb5 : register(b5)
{
  float4 cb5[3];
}

cbuffer cb4 : register(b4)
{
  float4 cb4[7];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[16];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[2];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[7];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[8];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : POSITION0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float3 v3 : NORMAL0,
  float4 v4 : TANGENT0,
  float4 v5 : COLOR0,
  out float3 o0 : TEXCOORD0,
  out float4 o1 : SV_POSITION0,
  out float4 o2 : TEXCOORD1,
  out float3 o3 : TEXCOORD2)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
float separation = stereo.x, convergence = stereo.y, eye = stereo.z;

  r0.xy = cb3[15].xy + v0.xy;
  r1.x = v2.w + r0.x;
  r1.y = v2.w * 0.800000012 + r0.y;
  r0.xy = float2(0.5,0.5) + r1.xy;
  r0.xy = frac(r0.xy);
  r0.xy = r0.xy * float2(2,2) + float2(-1,-1);
  r0.zw = abs(r0.xy) * abs(r0.xy);
  r0.xy = -abs(r0.xy) * float2(2,2) + float2(3,3);
  r0.xy = r0.zw * r0.xy + float2(-0.5,-0.5);
  r0.xy = r0.xy + r0.xy;
  r0.x = r0.y * r0.y + r0.x;
  r0.y = cb4[6].x / cb4[1].z;
  r0.x = cb4[1].y * r0.x + r0.y;
  r0.y = 1 / cb4[1].z;
  r0.z = v1.y * cb6[1].y + cb6[1].z;
  r0.w = -0.5 + v1.x;
  r0.w = cb6[1].x * r0.w;
  r0.w = v2.x * r0.w;
  r1.xyz = cb5[1].xyz * r0.www;
  r1.w = r0.z * v2.y + r1.y;
  r0.y = -r0.y * 0.25 + r1.w;
  r0.y = max(0, r0.y);
  r0.y = cb4[1].z * r0.y;
  r0.z = log2(r0.y);
  r0.z = cb4[1].w * r0.z;
  r0.z = exp2(r0.z);
  r0.w = cmp(r0.y != 0.000000);
  r0.y = r0.w ? r0.z : r0.y;
  r0.x = r0.x * r0.y;
  r0.xz = cb4[0].xz * r0.xx + r1.xz;
  r0.y = r1.w;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r0.w = dot(r1.xzw, r1.xzw);
  r0.w = sqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r0.w = cb0[7].x * cb0[7].y;
  r0.w = cmp(0 < r0.w);
  r0.xyz = r0.www ? r0.xyz : r1.xwz;
  r0.xyz = v0.xyz + r0.xyz;
  r1.xyz = cb3[13].xyz * r0.yyy;
  r1.xyz = cb3[12].xyz * r0.xxx + r1.xyz;
  r1.xyz = cb3[14].xyz * r0.zzz + r1.xyz;
  r1.xyz = cb3[15].xyz + r1.xyz;
  o0.xyz = -cb2[1].xyz + r1.xyz;
  r1.xyzw = cb3[1].xyzw * r0.yyyy;
  r1.xyzw = cb3[0].xyzw * r0.xxxx + r1.xyzw;
  r0.xyzw = cb3[2].xyzw * r0.zzzz + r1.xyzw;
  r0.xyzw = cb3[3].xyzw + r0.xyzw;
  o1.xyzw = r0.xyzw;

// Automatic vertex shader halo fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe b0fe94306a308630-vs_replace.txt
if (r0.w != 1.0) { r0.x += separation * (r0.w - convergence); }

  r0.z = cb5[2].w + v2.z;
  r0.z = r0.z * cb6[0].y + 0.5;
  r0.z = floor(r0.z);
  r0.z = r0.z / cb6[0].x;
  r1.x = cmp(r0.z >= -r0.z);
  r0.z = frac(abs(r0.z));
  r0.z = r1.x ? r0.z : -r0.z;
  r0.z = cb6[0].x * r0.z;
  r0.z = (uint)r0.z;
  r1.x = cmp(cb6[r0.z+2].w < 0);
  r1.yz = -cb6[r0.z+2].zw * v1.yx + cb6[r0.z+2].xy;
  r2.xy = cb6[r0.z+2].zw * v1.xy + cb6[r0.z+2].xy;
  o2.xy = r1.xx ? r1.yz : r2.xy;
  r0.y = cb1[5].x * r0.y;
  r1.xzw = float3(0.5,0.5,0.5) * r0.xwy;
  o3.z = r0.w;
  r0.xy = r1.xw + r1.zz;
  r0.zw = float2(0.25,0.25) * cb1[6].xy;
  o3.xy = r0.xy * r0.zw;
  return;
}

/****************************** COMPILE WARNINGS ******************************
C:\Steam\SteamApps\common\Stranded Deep\ShaderFixes\b0fe94306a308630-vs_replace.txt(178,14-15): warning X3578: Output value 'o2' is not completely initialized

****************************** COMPILE WARNINGS ******************************/
