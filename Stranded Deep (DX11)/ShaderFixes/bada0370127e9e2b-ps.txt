// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed bada0370127e9e2b-ps.txt
// 3DMigoto: bada0370127e9e2b |    Unity headers extracted from Rocks - MaskyMix Standard.shader
//    Shader "Volund/Standard MaskyMix Scatter (Specular, Surface)" {
//      Properties {
//       _Color ("Color", Color) = (1,1,1,1)
//       _MainTex ("Albedo", 2D) = "white" { }
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//       _Glossiness ("Smoothness", Range(0,1)) = 0.5
//       _SpecColor ("Specular", Color) = (0.2,0.2,0.2,1)
//       _SpecGlossMap ("Specular", 2D) = "white" { }
//       _BumpScale ("Scale", Float) = 1
//       _BumpMap ("Normal Map", 2D) = "bump" { }
//       _Parallax ("Height Scale", Range(0.005,0.08)) = 0.02
//       _ParallaxMap ("Height Map", 2D) = "black" { }
//       _OcclusionStrength ("Strength", Range(0,1)) = 1
//       _OcclusionMap ("Occlusion", 2D) = "white" { }
//       _EmissionColor ("Color", Color) = (0,0,0,1)
//       _EmissionMap ("Emission", 2D) = "white" { }
//       _DetailMask ("Detail Mask", 2D) = "white" { }
//       _DetailAlbedoMap ("Detail Albedo x2", 2D) = "grey" { }
//       _DetailNormalMapScale ("Scale", Float) = 1
//       _DetailNormalMap ("Normal Map", 2D) = "bump" { }
//      [Enum(UV0,0,UV1,1)]  _UVSec ("UV Set for secondary textures", Float) = 0
//      [HideInInspector]  _Mode ("__mode", Float) = 0
//      [HideInInspector]  _SrcBlend ("__src", Float) = 1
//      [HideInInspector]  _DstBlend ("__dst", Float) = 0
//      [HideInInspector]  _ZWrite ("__zw", Float) = 1
//      [HideInInspector]  _SmoothnessInAlbedo ("__smoothnessinalbedo", Float) = 0
//       _MaskyMixAlbedo ("MaskyMix Albedo (RGB) Gloss(A)", 2D) = "white" { }
//       _MaskyMixUVTile ("MaskyMix UV Tile", Range(1,200)) = 10
//       _MaskyMixColor ("MaskyMix Color (2x)", Color) = (0.5,0.5,0.5,0.5)
//       _MaskyMixSpecColor ("MaskyMix Spec Color", Color) = (0.2,0.2,0.2,1)
//       _MaskyMixBumpMap ("MaskyMix Bump", 2D) = "bump" { }
//       _MaskyMixBumpScale ("MaskyMix Bump Scale", Range(0.1,2)) = 1
//       _MaskyMixWorldDirection ("MaskyMix World Dir", Vector) = (0,1,0,0)
//       _MaskyMixMask ("MaskyMix Mask (R)", 2D) = "white" { }
//       _MaskyMixMaskTile ("MaskyMix Mask UV Tile", Range(1,100)) = 10
//       _MaskyMixMaskFalloff ("MaskyMix Mask Falloff", Range(0.0001,2.5)) = 0.1
//       _MaskyMixMaskThresholdLow ("MaskyMix Mask Threshold Low", Range(0,1)) = 0.5
//       _MaskyMixMaskThresholdHi ("MaskyMix Mask Threshold Hi", Range(0,1)) = 0.6
//       _MetaAlbedoDesaturation ("Meta Albedo Desaturation", Range(0,1)) = 0
//      [HDR]  _MetaAlbedoTint ("Meta Albedo Tint", Color) = (1,1,1,1)
//      [HDR]  _MetaAlbedoAdd ("Meta Albedo Add", Color) = (0,0,0,0)
//      }
//      Fallback "Diffuse"
//      SubShader 1/2 {
//        LOD 400
//        Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "RenderType"="Opaque" "PerformanceChecks"="False" }
//          ZWrite Off
//          Blend One One
//          GpuProgramID 117219
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 36
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Rocks - MaskyMix Standard.shader.decompressed:
//   API d3d11
//   Shader model ps_5_0
//   undeciphered1: 133 7 0
//   Keywords { "SPOT" }
//   undeciphered2: 1 7 3 7 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 416
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 112 [_SpecColor]
//   Vector 192 [_Color]
//   Float 256 [_BumpScale]
//   Float 268 [_Glossiness]
//   Vector 304 [_MaskyMixColor]
//   Vector 320 [_MaskyMixSpecColor]
//   Float 336 [_MaskyMixUVTile]
//   Float 340 [_MaskyMixBumpScale]
//   Float 364 [_MaskyMixMaskTile]
//   Float 368 [_MaskyMixMaskFalloff]
//   Float 372 [_MaskyMixMaskThresholdLow]
//   Float 376 [_MaskyMixMaskThresholdHi]
//   Matrix 128 [_LightMatrix0]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_MaskyMixBumpMap] 2D 5
//   SetTexture 2 [_BumpMap] 2D 3
//   SetTexture 3 [_MaskyMixAlbedo] 2D 4
//   SetTexture 4 [_MaskyMixMask] 2D 6
//   SetTexture 5 [_LightTexture0] 2D 0
//   SetTexture 6 [_LightTextureB0] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 10 17:36:13 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 5      w        1     NONE   float      w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[24], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xy
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed bada0370127e9e2b-ps.txt
mov r8.xyzw, cb1[4].xyzw
mov r9.xyzw, l(0)
mul r9.x, -r7.x, r7.y
mul r11.xyzw, cb10[0].xyzw, r9.xxxx
mad r11.xyzw, cb10[1].xyzw, r9.yyyy, r11.xyzw
mad r11.xyzw, cb10[2].xyzw, r9.zzzz, r11.xyzw
mad r11.xyzw, cb10[3].xyzw, r9.wwww, r11.xyzw
mul r10.xyzw, cb11[12].xyzw, r11.xxxx
mad r10.xyzw, cb11[13].xyzw, r11.yyyy, r10.xyzw
mad r10.xyzw, cb11[14].xyzw, r11.zzzz, r10.xyzw
mad r10.xyzw, cb11[15].xyzw, r11.wwww, r10.xyzw
add r8.xyz, r8.xyz, -r10.xyz

sample_indexable(texture2d)(float,float,float,float) r0.xy, v5.xyxx, t2.ywxz, s3
mad r0.xy, r0.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r0.zw, r0.xxxy, cb0[16].xxxx
dp2 r0.z, r0.zwzz, r0.zwzz
min r0.z, r0.z, l(1.000000)
add r0.z, -r0.z, l(1.000000)
mul r1.xy, v5.xyxx, cb0[21].xxxx
sample_indexable(texture2d)(float,float,float,float) r1.zw, r1.xyxx, t1.xzyw, s5
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyxx, t3.xyzw, s4
mad r1.xy, r1.wzww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.xy, r1.xyxx, cb0[21].yyyy
dp2 r0.w, r1.xyxx, r1.xyxx
mad r1.xy, r0.xyxx, cb0[16].xxxx, r1.xyxx
min r0.x, r0.w, l(1.000000)
add r0.x, -r0.x, l(1.000000)
sqrt r0.xz, r0.xxzx
mul r1.z, r0.x, r0.z
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r1.xyzx
mul r1.xy, v5.xyxx, cb0[22].wwww
sample_indexable(texture2d)(float,float,float,float) r0.w, r1.xyxx, t4.yzwx, s6
mul r0.w, r0.w, v1.w
mul r0.w, r0.w, l(0.000010)
log r0.w, r0.w
mul r0.w, r0.w, cb0[23].x
exp r0.w, r0.w
add r1.x, r0.w, -cb0[23].y
lt r0.w, cb0[23].y, r0.w
add r1.y, -cb0[23].y, cb0[23].z
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
mul_sat r1.x, r1.y, r1.x
mad r1.y, r1.x, l(-2.000000), l(3.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.y
mul r3.xyz, r0.xyzx, r1.xxxx
add r0.x, r2.w, -cb0[16].w
mad r3.w, r1.x, r0.x, cb0[16].w
mov r4.x, l(0)
mov r4.w, cb0[16].w
movc r3.xyzw, r0.wwww, r3.xyzw, r4.xxxw
dp3 r0.x, v1.xyzx, r3.xyzx
dp3 r0.y, v2.xyzx, r3.xyzx
dp3 r0.z, v3.xyzx, r3.xyzx
add r1.y, -r3.w, l(1.000000)
dp3 r1.z, r0.xyzx, r0.xyzx
rsq r1.z, r1.z
mul r0.xyz, r0.xyzx, r1.zzzz
add r3.xyz, -v4.xyzx, r8.xyzx
dp3 r1.z, r3.xyzx, r3.xyzx
rsq r1.z, r1.z
mul r3.xyz, r1.zzzz, r3.xyzx
dp3 r1.z, r0.xyzx, r3.xyzx
add r1.w, -r1.z, l(0.000010)
lt r1.z, r1.z, l(0.000000)
mad r4.xyz, r3.xyzx, r1.wwww, r0.xyzx
movc r0.xyz, r1.zzzz, r4.xyzx, r0.xyzx
add r4.xyz, -v4.xyzx, cb2[0].xyzx
dp3 r1.z, r4.xyzx, r4.xyzx
rsq r1.z, r1.z
mad r5.xyz, r4.xyzx, r1.zzzz, r3.xyzx
dp3 r1.w, r0.xyzx, r3.xyzx
mul r3.xyz, r1.zzzz, r4.xyzx
dp3 r1.z, r5.xyzx, r5.xyzx
max r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.001000, 0.000000)
rsq r1.z, r1.z
mul r4.xyz, r1.zzzz, r5.xyzx
dp3 r1.z, r0.xyzx, r4.xyzx
dp3 r0.x, r0.xyzx, r3.xyzx
dp3 r0.y, r3.xyzx, r4.xyzx
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
max r0.z, r1.z, l(0.000000)
mul r0.z, r0.z, r0.z
mul r1.z, r1.y, r1.y
mad r2.w, r1.z, r1.z, l(-1.000000)
mad r0.z, r0.z, r2.w, l(1.000000)
mul r2.w, r0.z, l(3.14159274)
mad r0.z, r2.w, r0.z, l(1.000000012E-007)
mul r2.w, r1.z, r1.z
div r0.z, r2.w, r0.z
mad r2.w, -r1.y, r1.y, l(1.000000)
mad r3.x, r1.w, r2.w, r1.z
mad r1.z, r0.x, r2.w, r1.z
mul r1.z, r1.z, r1.w
add r1.w, -r1.w, l(1.000000)
mad r1.z, r0.x, r3.x, r1.z
add r1.z, r1.z, l(0.000010)
div r1.z, l(2.000000), r1.z
mul r0.z, r0.z, r1.z
mul r0.z, r0.z, l(0.785398185)
max r1.z, r0.z, l(0.000100)
sqrt r1.z, r1.z
eq r2.w, cb0[3].w, l(0.000000)
movc r0.z, r2.w, r1.z, r0.z
mul r0.z, r0.x, r0.z
max r0.z, r0.z, l(0.000000)
mul r3.xyzw, v4.yyyy, cb0[9].xyzw
mad r3.xyzw, cb0[8].xyzw, v4.xxxx, r3.xyzw
mad r3.xyzw, cb0[10].xyzw, v4.zzzz, r3.xyzw
add r3.xyzw, r3.xyzw, cb0[11].xyzw
div r4.xy, r3.xyxx, r3.wwww
add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r1.z, r4.xyxx, t5.xywz, s0
lt r2.w, l(0.000000), r3.z
dp3 r3.x, r3.xyzx, r3.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.x, r3.xxxx, t6.xyzw, s1
and r2.w, r2.w, l(0x3f800000)
mul r1.z, r1.z, r2.w
mul r1.z, r3.x, r1.z
mul r3.xyz, r1.zzzz, cb0[6].xyzx
mul r4.xyz, r0.zzzz, r3.xyzx
add r0.z, -r0.y, l(1.000000)
mul r0.y, r0.y, r0.y
dp2 r0.y, r0.yyyy, r1.yyyy
add r0.y, r0.y, l(-0.500000)
mul r1.y, r0.z, r0.z
mul r1.y, r1.y, r1.y
mul r0.z, r0.z, r1.y
add r5.xyz, -cb0[7].xyzx, cb0[20].xyzx
mad r5.xyz, r1.xxxx, r5.xyzx, cb0[7].xyzx
movc r5.xyz, r0.wwww, r5.xyzx, cb0[7].xyzx
add r6.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r6.xyz, r6.xyzx, r0.zzzz, r5.xyzx
mul r4.xyz, r4.xyzx, r6.xyzx
mul r0.z, r1.w, r1.w
mul r0.z, r0.z, r0.z
mul r0.z, r1.w, r0.z
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.y, -r0.x, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
mad r0.y, r0.y, r1.y, l(1.000000)
mul r0.y, r0.z, r0.y
mul r0.x, r0.x, r0.y
mul r0.xyz, r0.xxxx, r3.xyzx
add r1.yzw, cb0[19].xxyz, cb0[19].xxyz
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v5.xyxx, t0.xyzw, s2
mul r3.xyz, r3.xyzx, cb0[12].xyzx
mad r1.yzw, r2.xxyz, r1.yyzw, -r3.xxyz
mad r1.xyz, r1.xxxx, r1.yzwy, r3.xyzx
movc r1.xyz, r0.wwww, r1.xyzx, r3.xyzx
max r0.w, r5.y, r5.x
max r0.w, r5.z, r0.w
add r0.w, -r0.w, l(1.000000)
mul r1.xyz, r0.wwww, r1.xyzx
mad o0.xyz, r1.xyzx, r0.xyzx, r4.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used