// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 974e03bec26d4362-ps.txt
// 3DMigoto: 974e03bec26d4362 |    Unity headers extracted from Standard - Cull Off.shader
//    Shader "Custom/Standard - Cull Off" {
//      Properties {
//       _Color ("Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Albedo (RGB)", 2D) = "white" { }
//       _BumpMap ("Normal (RGB)", 2D) = "bump" { }
//       _Glossiness ("Smoothness", Range(0.000000,1.000000)) = 0.500000
//       _Metallic ("Metallic", Range(0.000000,1.000000)) = 0.000000
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          ZWrite Off
//          Cull Off
//          Blend One One
//          GpuProgramID 83472
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 97
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard - Cull Off.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 104 7 0
//   Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
//   undeciphered2: 1 4 4 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 240
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Float 192 [_Glossiness]
//   Float 196 [_Metallic]
//   Vector 208 [_Color]
//   Matrix 128 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 16 [_LightPositionRange]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_BumpMap] 2D 3
//   SetTexture 2 [_LightTexture0] 2D 1
//   SetTexture 3 [_ShadowMapTexture] CUBE 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Dec 10 03:49:36 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 974e03bec26d4362-ps.txt
mov r7.xyzw, cb1[4].xyzw
mov r8.xyzw, l(0)
mul r8.x, -r6.x, r6.y
mul r10.xyzw, cb10[0].xyzw, r8.xxxx
mad r10.xyzw, cb10[1].xyzw, r8.yyyy, r10.xyzw
mad r10.xyzw, cb10[2].xyzw, r8.zzzz, r10.xyzw
mad r10.xyzw, cb10[3].xyzw, r8.wwww, r10.xyzw
mul r9.xyzw, cb11[12].xyzw, r10.xxxx
mad r9.xyzw, cb11[13].xyzw, r10.yyyy, r9.xyzw
mad r9.xyzw, cb11[14].xyzw, r10.zzzz, r9.xyzw
mad r9.xyzw, cb11[15].xyzw, r10.wwww, r9.xyzw
add r7.xyz, r7.xyz, -r9.xyz

dp3 r0.x, v6.xyzx, v6.xyzx
sqrt r0.x, r0.x
mul r0.x, r0.x, cb2[1].w
mul r0.x, r0.x, l(0.970000)
add r0.yzw, v6.xxyz, l(0.000000, 0.00781250000, 0.00781250000, 0.00781250000)
sample r1.xyzw, r0.yzwy, t3.xyzw, s0
add r0.yzw, v6.xxyz, l(0.000000, -0.00781250000, -0.00781250000, 0.00781250000)
sample r2.xyzw, r0.yzwy, t3.xyzw, s0
mov r1.y, r2.x
add r0.yzw, v6.xxyz, l(0.000000, -0.00781250000, 0.00781250000, -0.00781250000)
sample r2.xyzw, r0.yzwy, t3.xyzw, s0
mov r1.z, r2.x
add r0.yzw, v6.xxyz, l(0.000000, 0.00781250000, -0.00781250000, -0.00781250000)
sample r2.xyzw, r0.yzwy, t3.xyzw, s0
mov r1.w, r2.x
lt r0.xyzw, r1.xyzw, r0.xxxx
movc r0.xyzw, r0.xyzw, cb3[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
dp4 r0.x, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
mul r0.yzw, v5.yyyy, cb0[9].xxyz
mad r0.yzw, cb0[8].xxyz, v5.xxxx, r0.yyzw
mad r0.yzw, cb0[10].xxyz, v5.zzzz, r0.yyzw
add r0.yzw, r0.yyzw, cb0[11].xxyz
dp3 r0.y, r0.yzwy, r0.yzwy
sample r1.xyzw, r0.yyyy, t2.xyzw, s1
mul r0.x, r0.x, r1.x
mul r0.xyz, r0.xxxx, cb0[6].xyzx
sample r1.xyzw, v1.xyxx, t1.xyzw, s3
mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r1.xyxx, r1.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r1.z, r0.w
dp3 r2.x, v2.xyzx, r1.xyzx
dp3 r2.y, v3.xyzx, r1.xyzx
dp3 r2.z, v4.xyzx, r1.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r2.xyzx
add r3.xyz, -v5.xyzx, r7.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
add r4.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mad r5.xyz, r4.xyzx, r0.wwww, r3.xyzx
dp3 r1.w, r1.xyzx, r3.xyzx
mul r3.xyz, r0.wwww, r4.xyzx
dp3 r0.w, r5.xyzx, r5.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r5.xyzx
dp3 r0.w, r1.xyzx, r4.xyzx
dp3 r1.x, r3.xyzx, r4.xyzx
dp3 r1.y, r2.xyzx, r3.xyzx
max r1.xyw, r1.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, r0.w
add r1.z, -cb0[12].x, l(1.000000)
mul r2.x, r1.z, r1.z
mad r2.y, r2.x, r2.x, l(-1.000000)
mad r0.w, r0.w, r2.y, l(1.000000)
mul r2.y, r0.w, l(3.14159274)
mad r0.w, r2.y, r0.w, l(1.000000012E-007)
mul r2.y, r2.x, r2.x
div r0.w, r2.y, r0.w
mad r2.y, -r1.z, r1.z, l(1.000000)
mad r2.z, r1.w, r2.y, r2.x
mad r2.x, r1.y, r2.y, r2.x
mul r2.x, r1.w, r2.x
add r1.w, -r1.w, l(1.000000)
mad r2.x, r1.y, r2.z, r2.x
add r2.x, r2.x, l(0.000010)
div r2.x, l(2.000000), r2.x
mul r0.w, r0.w, r2.x
mul r0.w, r0.w, l(0.785398185)
max r2.x, r0.w, l(0.000100)
sqrt r2.x, r2.x
eq r2.y, cb0[3].w, l(0.000000)
movc r0.w, r2.y, r2.x, r0.w
mul r0.w, r1.y, r0.w
max r0.w, r0.w, l(0.000000)
sample r2.xyzw, v1.xyxx, t0.xyzw, s2
mad r3.xyz, r2.xyzx, cb0[13].xyzx, -cb0[2].xyzx
mul r2.xyz, r2.xyzx, cb0[13].xyzx
mad r3.xyz, cb0[12].yyyy, r3.xyzx, cb0[2].xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
ne r2.w, r2.w, l(0.000000)
and r2.w, r2.w, l(0x3f800000)
mul r0.w, r0.w, r2.w
mul r4.xyz, r0.xyzx, r0.wwww
add r0.w, -r1.x, l(1.000000)
mul r1.x, r1.x, r1.x
dp2 r1.x, r1.xxxx, r1.zzzz
add r1.x, r1.x, l(-0.500000)
mul r1.z, r0.w, r0.w
mul r1.z, r1.z, r1.z
mul r0.w, r0.w, r1.z
add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, r5.xyzx, r0.wwww, r3.xyzx
mul r3.xyz, r3.xyzx, r4.xyzx
mul r0.w, r1.w, r1.w
mul r0.w, r0.w, r0.w
mul r0.w, r1.w, r0.w
mad r0.w, r1.x, r0.w, l(1.000000)
add r1.z, -r1.y, l(1.000000)
mul r1.w, r1.z, r1.z
mul r1.w, r1.w, r1.w
mul r1.z, r1.z, r1.w
mad r1.x, r1.x, r1.z, l(1.000000)
mul r0.w, r0.w, r1.x
mul r0.w, r1.y, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mad r0.w, -cb0[12].y, cb0[2].w, cb0[2].w
mul r1.xyz, r0.wwww, r2.xyzx
mad o0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used