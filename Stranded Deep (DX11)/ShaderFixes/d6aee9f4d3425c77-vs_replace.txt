// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe d6aee9f4d3425c77-vs_replace.txt
// 3DMigoto: d6aee9f4d3425c77 |    Unity headers extracted from Camera-CustomDepthTexture.shader
//    Shader "Hidden/Beam Team/BeamDepthTexture" {
//      Properties {
//       _MainTex ("", 2D) = "white" { }
//       _Cutoff ("", Float) = 0.5
//       _Color ("", Color) = (1,1,1,1)
//       _ZOffset ("Z-Offset", Range(0,100)) = 1
//      }
//      Fallback Off
//      SubShader 4/9 {
//        Tags { "RenderType"="ImposterTransparentCutout" }
//        Pass 1/1 {
//          Tags { "RenderType"="ImposterTransparentCutout" }
//          Cull Off
//          GpuProgramID 207796
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 16
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Camera-CustomDepthTexture.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 14 0 0
//   undeciphered2: 1 0 3 0 0
//   undeciphered3: 9 2 0 0 3 4
//   ConstBuffer "$Globals" 144
//   Vector 96 [_MainTex_ST]
//   Float 112 [_ZOffset]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 256 [_World2Object]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

// ---- Created with 3Dmigoto v1.2.36 on Fri May 06 10:33:57 2016
cbuffer cb2 : register(b2)
{
  float4 cb2[22];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[9];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[8];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);



cbuffer UnityPerDraw : register(b11) {
	float4x4 glstate_matrix_mvp;
	float4x4 glstate_matrix_modelview0;
	float4x4 glstate_matrix_invtrans_modelview0;
	#define UNITY_MATRIX_MVP glstate_matrix_mvp
	#define UNITY_MATRIX_MV glstate_matrix_modelview0
	#define UNITY_MATRIX_IT_MV glstate_matrix_invtrans_modelview0

	uniform float4x4 _Object2World;
	uniform float4x4 _World2Object;
	uniform float4 unity_LODFade; // x is the fade value ranging within [0,1]. y is x quantized into 16 levels
	uniform float4 unity_WorldTransformParams; // w is usually 1.0, or -1.0 for odd-negative scale transforms
}


#include <ShaderFixes/matrix.hlsl>

void main( 
  float4 v0 : POSITION0,
  float3 v1 : NORMAL0,
  float4 v2 : TEXCOORD0,
  out float4 o0 : SV_Position0,
  out float2 o1 : TEXCOORD0)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
float separation = stereo.x, convergence = stereo.y, eye = stereo.z;

// Unity reflection/specular fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe d6aee9f4d3425c77-vs_replace.txt
float4 _WorldSpaceCameraPos = cb1[4];
float4 clip_space_adj = float4(-separation * convergence, 0, 0, 0);
float4 local_space_adj = mul(inverse(glstate_matrix_mvp), clip_space_adj);
float4 world_space_adj = mul(_Object2World, local_space_adj);
_WorldSpaceCameraPos.xyz -= world_space_adj.xyz;

  r0.xyz = cb2[17].xyz * _WorldSpaceCameraPos.yyy;
  r0.xyz = cb2[16].xyz * _WorldSpaceCameraPos.xxx + r0.xyz;
  r0.xyz = cb2[18].xyz * _WorldSpaceCameraPos.zzz + r0.xyz;
  r0.xyz = cb2[19].xyz + r0.xyz;
  r0.xyz = -v0.xyz + r0.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r0.xyz = r0.xyz * cb0[7].xxx + v0.xyz;
  r1.xyzw = cb2[1].xyzw * r0.yyyy;
  r1.xyzw = cb2[0].xyzw * r0.xxxx + r1.xyzw;
  r0.xyzw = cb2[2].xyzw * r0.zzzz + r1.xyzw;
  o0.xyzw = cb2[3].xyzw * v0.wwww + r0.xyzw;
  o1.xy = v2.xy * cb0[6].xy + cb0[6].zw;
  return;
}
