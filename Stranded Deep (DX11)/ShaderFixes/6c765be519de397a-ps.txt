// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6c765be519de397a-ps.txt
// 3DMigoto: 6c765be519de397a | Matched 4 variants of 1 shaders: Ceto/BeamUnderWaterPostEffect
//
//       Unity headers extracted from BeamUnderWaterPostEffect.shader
//       Shader "Ceto/BeamUnderWaterPostEffect" {
//         Properties {
//          _MainTex ("Base (RGB)", 2D) = "black" { }
//         }
//         Fallback Off
//         SubShader 1/1 {
//           Pass 1/2 {
//             ZTest Always
//             ZWrite Off
//             Cull Off
//             GpuProgramID 46044
//             Program "fp" {
//               SubProgram "d3d11_9x " {
// 1:              GpuProgramIndex 26
// 2:              GpuProgramIndex 29
// 4:              GpuProgramIndex 32
// 8:              GpuProgramIndex 35
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from BeamUnderWaterPostEffect.shader.decompressed:
//      API d3d11_9x
//      Shader model ps_4_0_level_9_1
//      undeciphered1: 201510240 31 3 0
// 4:   Keywords { "INGAME" "CETO_UNDERWATER_ON" }
// 8:   Keywords { "INGAME" "CETO_USE_OCEAN_DEPTHS_BUFFER" "CETO_UNDERWATER_ON" }
// 2:   Keywords { "INGAME" "CETO_USE_OCEAN_DEPTHS_BUFFER" }
// 1:   Keywords { "INGAME" }
//      undeciphered2: 1 3 2 3 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 896
//      Vector 432 [Ceto_SunDir] 3
//      Float 732 [_BelowVisibility]
//      Vector 768 [_Beam_UnderwaterColor]
//      Vector 784 [_Beam_UnderwaterInscatterColor]
//      Float 892 [_StormFade]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      Vector 112 [_ZBufferParams]
//      SetTexture 0 [_CameraDepthTexture] 2D 2
//      SetTexture 1 [Ceto_OceanMask] 2D 0
//      SetTexture 2 [_MainTex] 2D 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Dec 10 03:49:04 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0            27         1  ( FLT, FLT, FLT, FLT)
// c1         cb0            45         1  ( FLT, FLT, FLT, FLT)
// c2         cb0            48         2  ( FLT, FLT, FLT, FLT)
// c4         cb0            55         1  ( FLT, FLT, FLT, FLT)
// c5         cb1             4         2  ( FLT, FLT, FLT, FLT)
// c7         cb1             7         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t1               
// s1             s1              t2               
// s2             s2              t0               
//
//
// Level9 shader bytecode:
//
    ps_2_x
    def c8, 0.350000024, 0.0500000119, 0, 3
    def c9, 0.699999988, 0.300000012, 2, 0
    def c10, 0.5, 0.899999976, 1, -0.5
    def c11, 0.699999988, 0.899999976, 1, 0
    dcl t0
    dcl t1
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.xy, t0.wzzw
    texld r1, r0, s0
    texld r0, r0, s2
    mad r0.x, c7.x, r0.x, c7.y
    rcp r0.x, r0.x
    rcp r0.y, c1.w
    mul r0.z, r0.y, c6.z
    mul_sat r0.x, r0.z, r0.x
    mul r0.z, r0.z, r1.y
    min r1.x, r0.z, r0.x
    mul r0.xzw, r1.x, t1.xyyz
    mad r1.xyz, r1.x, t1, c5
    dp3 r1.w, r0.xzww, r0.xzww
    rsq r1.w, r1.w
    rcp r1.w, r1.w
    mul_sat r1.w, r0.y, r1.w
    mov r0.z, c10.z
    mov r2.xyz, c10
    mov r3, c8
    mad_pp r2.xyz, c4.w, r3, r2
    rcp r0.x, r2.x
    rcp r0.y, r2.y
    mul_sat r0.xyz, r0, r1.w
    add r1.xzw, -r1.xyyz, c5.xyyz
    mad r0.w, c1.w, r3.w, r1.y
    nrm_pp r3.xyz, r1.xzww
    dp3_pp r2.w, r3, -c0
    mad_sat r1.x, r3.y, c10.w, c10.x
    mad r2.w, r2.w, c9.x, c9.y
    mul r2.w, r2.w, r2.w
    mul_pp r1.yzw, r2.w, c3.xxyz
    mad r1.yzw, r1, r2.xxyz, c2.xxyz
    mul r1.xyz, r1.x, r1.yzww
    texld_pp r2, t0, s1
    mad r1.xyz, r1, c9.z, -r2
    mad_pp r0.xyz, r0, r1, r2
    mul r1.x, r3.w, c1.w
    rcp r1.x, r1.x
    mul_sat r0.w, r0.w, r1.x
    mul_pp r0.xyz, r0.w, r0
    mul_pp r2.xyz, r0, c11
    mov_pp oC0, r2

// approximately 44 instruction slots used (3 texture, 41 arithmetic)
ps_4_0
dcl_constantbuffer cb0[56], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6c765be519de397a-ps.txt
mov r4.xyzw, cb1[4].xyzw
mov r5.xyzw, l(0)
mul r5.x, -r3.x, r3.y
mul r7.xyzw, cb10[0].xyzw, r5.xxxx
mad r7.xyzw, cb10[1].xyzw, r5.yyyy, r7.xyzw
mad r7.xyzw, cb10[2].xyzw, r5.zzzz, r7.xyzw
mad r7.xyzw, cb10[3].xyzw, r5.wwww, r7.xyzw
mul r6.xyzw, cb11[12].xyzw, r7.xxxx
mad r6.xyzw, cb11[13].xyzw, r7.yyyy, r6.xyzw
mad r6.xyzw, cb11[14].xyzw, r7.zzzz, r6.xyzw
mad r6.xyzw, cb11[15].xyzw, r7.wwww, r6.xyzw
add r4.xyz, r4.xyz, -r6.xyz

sample r0.xyzw, v1.zwzz, t0.xyzw, s2
mad r0.x, cb1[7].x, r0.x, cb1[7].y
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
div r0.y, cb1[5].z, cb0[45].w
mul_sat r0.x, r0.y, r0.x
sample r1.xyzw, v1.zwzz, t1.xyzw, s0
mul r0.y, r0.y, r1.y
min r0.x, r0.y, r0.x
mul r0.yzw, r0.xxxx, v2.xxyz
mad r1.xyz, r0.xxxx, v2.xyzx, r4.xyzx
dp3 r0.x, r0.yzwy, r0.yzwy
sqrt r0.x, r0.x
div_sat r0.x, r0.x, cb0[45].w
mad r0.yzw, cb0[55].wwww, l(0.000000, 0.350000024, 0.0500000119, 0.000000), l(0.000000, 0.500000, 0.900000, 1.000000)
div_sat r2.xyz, r0.xxxx, r0.yzwy
add r1.xzw, -r1.xxyz, r4.xxyz
mad r0.x, cb0[45].w, l(3.000000), r1.y
dp3 r1.y, r1.xzwx, r1.xzwx
rsq r1.y, r1.y
mul r1.xyz, r1.yyyy, r1.xzwx
dp3 r1.x, r1.xyzx, -cb0[27].xyzx
mad_sat r1.y, r1.y, l(-0.500000), l(0.500000)
mad r1.x, r1.x, l(0.700000), l(0.300000)
mul r1.x, r1.x, r1.x
mul r1.xzw, r1.xxxx, cb0[49].xxyz
mad r0.yzw, r1.xxzw, r0.yyzw, cb0[48].xxyz
mul r0.yzw, r1.yyyy, r0.yyzw
sample r1.xyzw, v1.xyxx, t2.xyzw, s1
mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), -r1.xxyz
mad r0.yzw, r2.xxyz, r0.yyzw, r1.xxyz
mov o0.w, r1.w
mul r1.x, cb0[45].w, l(3.000000)
div_sat r0.x, r0.x, r1.x
mul r0.xyz, r0.xxxx, r0.yzwy
mul o0.xyz, r0.xyzx, l(0.700000, 0.900000, 1.000000, 0.000000)
ret 
// Approximately 0 instruction slots used