// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 650a598be24b2f3d-ps.txt
// 3DMigoto: 650a598be24b2f3d |    Unity headers extracted from Other - Player Arm Effects.shader
//    Shader "Beam Team/Standard/Other - Player Arm Effects" {
//      Properties {
//       _Color ("Color", Color) = (1,1,1,1)
//       _MainTex ("Diffuse Albedo (RGB)", 2D) = "white" { }
//       _SpecTex ("Metallic (R) Gloss (A)", 2D) = "white" { }
//       _BumpTex ("Normal Map", 2D) = "bump" { }
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/2 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent" "SHADOWSUPPORT"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Blend SrcAlpha OneMinusSrcAlpha
//          ColorMask RGB
//          GpuProgramID 43661
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 35
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Other - Player Arm Effects.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 147 4 4
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "SUNSHINE_DISABLED" }
//   undeciphered2: 1 6 4 6 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 560
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 528 [_Color]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 3
//   SetTexture 1 [_SpecTex] 2D 4
//   SetTexture 2 [_BumpTex] 2D 5
//   SetTexture 3 [_ShadowMapTexture] 2D 2
//   SetTexture 4 [unity_SpecCube0] CUBE 0
//   SetTexture 5 [unity_SpecCube1] CUBE 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 10 17:36:05 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyw
dcl_output o0.xyzw
dcl_temps 19
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 650a598be24b2f3d-ps.txt
mov r15.xyzw, cb1[4].xyzw
mov r16.xyzw, l(0)
mul r16.x, -r14.x, r14.y
mul r18.xyzw, cb10[0].xyzw, r16.xxxx
mad r18.xyzw, cb10[1].xyzw, r16.yyyy, r18.xyzw
mad r18.xyzw, cb10[2].xyzw, r16.zzzz, r18.xyzw
mad r18.xyzw, cb10[3].xyzw, r16.wwww, r18.xyzw
mul r17.xyzw, cb11[12].xyzw, r18.xxxx
mad r17.xyzw, cb11[13].xyzw, r18.yyyy, r17.xyzw
mad r17.xyzw, cb11[14].xyzw, r18.zzzz, r17.xyzw
mad r17.xyzw, cb11[15].xyzw, r18.wwww, r17.xyzw
add r15.xyz, r15.xyz, -r17.xyz

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r15.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
sample r3.xyzw, v1.xyxx, t0.xyzw, s3
mul r3.xyzw, r3.xyzw, cb0[33].xyzw
sample r4.xyzw, v1.xyxx, t1.xyzw, s4
sample r5.xyzw, v1.xyxx, t2.xyzw, s5
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
max r1.w, r4.x, l(0.020000)
min r1.w, r1.w, l(0.980000)
div r4.xy, v7.xyxx, v7.wwww
sample r4.xyzw, r4.xyxx, t3.xyzw, s2
dp3 r6.x, v2.xyzx, r5.xyzx
dp3 r6.y, v3.xyzx, r5.xyzx
dp3 r6.z, v4.xyzx, r5.xyzx
add r2.w, -r1.w, l(1.000000)
dp3 r4.y, -r2.xyzx, r6.xyzx
add r4.y, r4.y, r4.y
mad r4.yzw, r6.xxyz, -r4.yyyy, -r2.xxyz
mul r5.xyz, r4.xxxx, cb0[6].xyzx
mov r6.w, l(1.000000)
dp4 r7.x, cb2[38].xyzw, r6.xyzw
dp4 r7.y, cb2[39].xyzw, r6.xyzw
dp4 r7.z, cb2[40].xyzw, r6.xyzw
add r7.xyz, r7.xyzx, v6.xyzx
max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r4.x, cb0[3].w, l(0.000000)
log r8.xyz, r7.xyzx
mul r8.xyz, r8.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r8.xyz, r8.xyzx
mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r7.xyz, r4.xxxx, r8.xyzx, r7.xyzx
lt r5.w, l(0.000000), cb3[2].w
if_nz r5.w
  dp3 r5.w, r4.yzwy, r4.yzwy
  rsq r5.w, r5.w
  mul r8.xyz, r4.yzwy, r5.wwww
  add r9.xyz, -r0.xyzx, cb3[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r0.xyzx, cb3[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r5.w, r9.y, r9.x
  min r5.w, r9.z, r5.w
  add r9.xyz, r0.xyzx, -cb3[2].xyzx
  mad r8.xyz, r8.xyzx, r5.wwww, r9.xyzx
else 
  mov r8.xyz, r4.yzwy
endif 
mad r5.w, -r2.w, l(0.700000), l(1.700000)
mul r5.w, r2.w, r5.w
mul r5.w, r5.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t4.xyzw, s0, r5.w
log r6.w, r8.w
mul r6.w, r6.w, cb3[3].y
exp r6.w, r6.w
mul r6.w, r6.w, cb3[3].x
mul r9.xyz, r8.xyzx, r6.wwww
lt r7.w, cb3[1].w, l(0.999990)
if_nz r7.w
  lt r7.w, l(0.000000), cb3[6].w
  if_nz r7.w
    dp3 r7.w, r4.yzwy, r4.yzwy
    rsq r7.w, r7.w
    mul r10.xyz, r4.yzwy, r7.wwww
    add r11.xyz, -r0.xyzx, cb3[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r0.xyzx, cb3[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r7.w, r11.y, r11.x
    min r7.w, r11.z, r7.w
    add r0.xyz, r0.xyzx, -cb3[6].xyzx
    mad r4.yzw, r10.xxyz, r7.wwww, r0.xxyz
  endif 
  sample_l r10.xyzw, r4.yzwy, t5.xyzw, s1, r5.w
  log r0.x, r10.w
  mul r0.x, r0.x, cb3[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r10.xyzx, r0.xxxx
  mad r4.yzw, r6.wwww, r8.xxyz, -r0.xxyz
  mad r9.xyz, cb3[1].wwww, r4.yzwy, r0.xyzx
endif 
dp3 r0.x, r6.xyzx, r6.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r6.xyzx
mul r3.xyz, r3.xyzx, cb0[2].wwww
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r0.xyzx, r2.xyzx
lt r4.y, r0.w, l(0.000000)
add r0.w, -r0.w, l(0.000010)
mad r6.xyz, r2.xyzx, r0.wwww, r0.xyzx
movc r0.xyz, r4.yyyy, r6.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, cb2[0].xyzx
dp3 r4.y, r0.xyzx, r1.xyzx
max r4.y, r4.y, l(0.000000)
dp3 r0.x, r0.xyzx, r2.xyzx
dp3 r0.y, cb2[0].xyzx, r1.xyzx
max r0.xyw, r0.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r2.w, r2.w
mad r1.x, -r2.w, r2.w, l(1.000000)
mad r1.y, r0.x, r1.x, r0.z
mad r1.x, r0.w, r1.x, r0.z
mul r1.x, r0.x, r1.x
mad r1.x, r0.w, r1.y, r1.x
add r1.x, r1.x, l(0.000010)
div r1.x, l(2.000000), r1.x
mul r1.y, r0.z, r0.z
mul r1.z, r4.y, r4.y
mad r2.xy, r0.zzzz, r0.zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
mad r1.z, r1.z, r2.x, l(1.000000)
mul r2.x, r1.z, l(3.14159274)
mad r1.z, r2.x, r1.z, l(1.000000012E-007)
div r1.y, r1.y, r1.z
add r1.z, -r0.w, l(1.000000)
mul r2.x, r1.z, r1.z
mul r2.x, r2.x, r2.x
mul r1.z, r1.z, r2.x
add r0.x, -r0.x, l(1.000000)
mul r2.x, r0.x, r0.x
mul r2.x, r2.x, r2.x
mul r0.xz, r0.xxzx, r2.xxwx
mul r2.x, r0.y, r0.y
dp2 r2.x, r2.xxxx, r2.wwww
add r2.x, r2.x, l(-0.500000)
mad r1.z, r2.x, r1.z, l(1.000000)
mad r2.x, r2.x, r0.x, l(1.000000)
mul r1.z, r1.z, r2.x
mul r1.x, r1.y, r1.x
mul r1.x, r1.x, l(0.785398185)
max r1.y, r1.x, l(0.000100)
sqrt r1.y, r1.y
movc r1.x, r4.x, r1.y, r1.x
mul r1.x, r0.w, r1.x
max r1.x, r1.x, l(0.000000)
mul r0.w, r0.w, r1.z
mad r0.z, -r0.z, l(0.280000), l(1.000000)
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
movc r0.z, r4.x, r0.z, r1.y
add r1.y, r1.w, -cb0[2].w
add_sat r1.y, r1.y, l(1.000000)
mad r2.xyz, r5.xyzx, r0.wwww, r7.xyzx
mul r1.xzw, r5.xxyz, r1.xxxx
add r0.y, -r0.y, l(1.000000)
mul r0.w, r0.y, r0.y
mul r0.w, r0.w, r0.w
mul r0.y, r0.y, r0.w
add r4.xyz, -cb0[2].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r4.xyz, r4.xyzx, r0.yyyy, cb0[2].xyzx
mul r1.xzw, r1.xxzw, r4.xxyz
mad r1.xzw, r3.xxyz, r2.xxyz, r1.xxzw
mul r0.yzw, r9.xxyz, r0.zzzz
add r2.xyz, r1.yyyy, -cb0[2].xyzx
mad r2.xyz, r0.xxxx, r2.xyzx, cb0[2].xyzx
mad o0.xyz, r0.yzwy, r2.xyzx, r1.xzwx
mov o0.w, r3.w
ret 
// Approximately 0 instruction slots used