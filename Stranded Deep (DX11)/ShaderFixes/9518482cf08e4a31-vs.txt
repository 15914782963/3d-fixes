// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 9518482cf08e4a31-vs.txt
// 3DMigoto: 9518482cf08e4a31 | Matched 2 variants of 2 shaders: TextMeshPro/Mobile/Distance Field, TextMeshPro/Mobile/Distance Field - Masking
//
// 1:    Unity headers extracted from TMP_SDF-Mobile Masking.shader
// 2:    Unity headers extracted from TMP_SDF-Mobile.shader
// 1:    Shader "TextMeshPro/Mobile/Distance Field - Masking" {
// 2:    Shader "TextMeshPro/Mobile/Distance Field" {
//         Properties {
//          _FaceColor ("Face Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _FaceDilate ("Face Dilate", Range(-1.000000,1.000000)) = 0.000000
//          _OutlineColor ("Outline Color", Color) = (0.000000,0.000000,0.000000,1.000000)
//          _OutlineWidth ("Outline Thickness", Range(0.000000,1.000000)) = 0.000000
//          _OutlineSoftness ("Outline Softness", Range(0.000000,1.000000)) = 0.000000
//          _UnderlayColor ("Border Color", Color) = (0.000000,0.000000,0.000000,0.500000)
//          _UnderlayOffsetX ("Border OffsetX", Range(-1.000000,1.000000)) = 0.000000
//          _UnderlayOffsetY ("Border OffsetY", Range(-1.000000,1.000000)) = 0.000000
//          _UnderlayDilate ("Border Dilate", Range(-1.000000,1.000000)) = 0.000000
//          _UnderlaySoftness ("Border Softness", Range(0.000000,1.000000)) = 0.000000
//          _WeightNormal ("Weight Normal", Float) = 0.000000
//          _WeightBold ("Weight Bold", Float) = 0.500000
//          _ShaderFlags ("Flags", Float) = 0.000000
//          _ScaleRatioA ("Scale RatioA", Float) = 1.000000
//          _ScaleRatioB ("Scale RatioB", Float) = 1.000000
//          _ScaleRatioC ("Scale RatioC", Float) = 1.000000
//          _MainTex ("Font Atlas", 2D) = "white" { }
//          _TextureWidth ("Texture Width", Float) = 512.000000
//          _TextureHeight ("Texture Height", Float) = 512.000000
//          _GradientScale ("Gradient Scale", Float) = 5.000000
//          _ScaleX ("Scale X", Float) = 1.000000
//          _ScaleY ("Scale Y", Float) = 1.000000
//          _PerspectiveFilter ("Perspective Correction", Range(0.000000,1.000000)) = 0.875000
//          _VertexOffsetX ("Vertex OffsetX", Float) = 0.000000
//          _VertexOffsetY ("Vertex OffsetY", Float) = 0.000000
//          _ClipRect ("Clip Rect", Vector) = (-10000.000000,-10000.000000,10000.000000,10000.000000)
//          _MaskSoftnessX ("Mask SoftnessX", Float) = 0.000000
//          _MaskSoftnessY ("Mask SoftnessY", Float) = 0.000000
// 1:       _MaskTex ("Mask Texture", 2D) = "white" { }
// 1:       _MaskInverse ("Inverse", Float) = 0.000000
// 1:       _MaskEdgeColor ("Edge Color", Color) = (1.000000,1.000000,1.000000,1.000000)
// 1:       _MaskEdgeSoftness ("Edge Softness", Range(0.000000,1.000000)) = 0.010000
// 1:       _MaskWipeControl ("Wipe Position", Range(0.000000,1.000000)) = 0.500000
//          _StencilComp ("Stencil Comparison", Float) = 8.000000
//          _Stencil ("Stencil ID", Float) = 0.000000
//          _StencilOp ("Stencil Operation", Float) = 0.000000
//          _StencilWriteMask ("Stencil Write Mask", Float) = 255.000000
//          _StencilReadMask ("Stencil Read Mask", Float) = 255.000000
//          _ColorMask ("Color Mask", Float) = 15.000000
//         }
//         CustomEditor "TMPro.EditorUtilities.TMP_SDFShaderGUI"
//         SubShader 1/1 {
//           Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//           Pass 1/1 {
//             Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//             ZTest [unity_GUIZTestMode]
//             ZWrite Off
//             Cull [_CullMode]
//             Stencil {
//                Ref [_Stencil]
//                ReadMask [_StencilReadMask]
//                WriteMask [_StencilWriteMask]
//                Comp [_StencilComp]
//                Pass [_StencilOp]
//               }
//             Blend One OneMinusSrcAlpha
//             ColorMask [_ColorMask]
// 2:          GpuProgramID 19945
// 1:          GpuProgramID 58701
//             Program "vp" {
//               SubProgram "d3d11_9x " {
// 1:              GpuProgramIndex 5
// 2:              GpuProgramIndex 8
//               }
//             }
//           }
//         }
//       }
//
// 1: Unity 5.3 headers extracted from TMP_SDF-Mobile Masking.shader.decompressed:
// 2: Unity 5.3 headers extracted from TMP_SDF-Mobile.shader.decompressed:
//      API d3d11_9x
//      Shader model vs_4_0_level_9_1
//      undeciphered1: 201510240 88 0 0
//      Keywords { "UNDERLAY_ON" "OUTLINE_ON" }
//      undeciphered2: 1 0 4 0 0 0
//      undeciphered3: 31 5 0 0 2 1 1 2 3 4 4 5
// 2:   ConstBuffer "$Globals" 528
// 1:   ConstBuffer "$Globals" 576
//      Vector 112 [_FaceColor]
//      Float 128 [_FaceDilate]
//      Float 132 [_OutlineSoftness]
//      Vector 144 [_OutlineColor]
//      Float 160 [_OutlineWidth]
//      Float 368 [_UnderlayOffsetX]
//      Float 372 [_UnderlayOffsetY]
//      Float 376 [_UnderlayDilate]
//      Float 380 [_UnderlaySoftness]
//      Float 420 [_WeightNormal]
//      Float 424 [_WeightBold]
//      Float 428 [_ScaleRatioA]
//      Float 436 [_ScaleRatioC]
//      Float 440 [_VertexOffsetX]
//      Float 444 [_VertexOffsetY]
//      Vector 480 [_ClipRect]
//      Float 496 [_MaskSoftnessX]
//      Float 500 [_MaskSoftnessY]
//      Float 504 [_TextureWidth]
//      Float 508 [_TextureHeight]
//      Float 512 [_GradientScale]
//      Float 516 [_ScaleX]
//      Float 520 [_ScaleY]
//      Float 524 [_PerspectiveFilter]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 96 [_ScreenParams]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 352
//      Matrix 80 [glstate_matrix_projection]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerDraw" 2
//      BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Dec 10 03:49:35 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// COLOR                    0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
// TEXCOORD                 1   xy          4     NONE   float    y  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// COLOR                    1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xyzw
// TEXCOORD                 2   xyzw        5     NONE   float   xyzw
// TEXCOORD                 3   xyzw        6     NONE   float   xyzw
// TEXCOORD                 4   xy          7     NONE   float   xy  
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             7         4  ( FLT, FLT, FLT, FLT)
// c5         cb0            23         1  ( FLT, FLT, FLT, FLT)
// c6         cb0            26         2  ( FLT, FLT, FLT, FLT)
// c8         cb0            30         3  ( FLT, FLT, FLT, FLT)
// c11        cb1             4         1  ( FLT, FLT, FLT, FLT)
// c12        cb1             6         1  ( FLT, FLT, FLT, FLT)
// c13        cb2             0         4  ( FLT, FLT, FLT, FLT)
// c17        cb2            12         7  ( FLT, FLT, FLT, FLT)
// c24        cb3             5         2  ( FLT, FLT, FLT, FLT)
// c26        cb3             8         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c27, 0, 1.5, 1, 0.5
    def c28, -2e+010, 2e+010, 2, 0.25
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4 v4
    mul r0.x, v1.x, c21.x
    mul r0.y, v1.x, c22.x
    mul r0.z, v1.x, c23.x
    mul r1.x, v1.y, c21.y
    mul r1.y, v1.y, c22.y
    mul r1.z, v1.y, c23.y
    add r0.xyz, r0, r1
    mul r1.x, v1.z, c21.z
    mul r1.y, v1.z, c22.z
    mul r1.z, v1.z, c23.z
    add r0.xyz, r0, r1
    nrm r1.xyz, r0
    add r0.xy, v0, c7.zwzw
    mul r2.xyz, r0.y, c18
    mad r2.xyz, c17, r0.x, r2
    mad r2.xyz, c19, v0.z, r2
    mad r2.xyz, c20, v0.w, r2
    add r2.xyz, -r2, c11
    nrm r3.xyz, r2
    dp3 r0.z, r1, r3
    abs r0.z, r0.z
    mov r1.xy, c12
    mul r1.yz, r1.y, c25.xxyw
    mad r1.xy, c24, r1.x, r1.yzzw
    abs r1.xy, r1
    mul r1.xy, r1, c10.yzzw
    rcp r2.x, r1.x
    rcp r2.y, r1.y
    mul r1, r0.y, c14
    mad r1, c13, r0.x, r1
    mad r1, c15, v0.z, r1
    mad r1, c16, v0.w, r1
    mul r2.xy, r2, r1.w
    mul r2.zw, r2.xyxy, r2.xyxy
    mov r3.xw, c28
    mad r2.xy, c9, r3.w, r2
    add r0.w, r2.w, r2.z
    rsq r0.w, r0.w
    abs r2.z, v4.y
    mul r2.z, r2.z, c10.x
    mul r0.w, r0.w, r2.z
    mul r2.z, r0.w, c27.y
    abs r2.w, r2.z
    mov r3.z, c27.z
    add r3.y, r3.z, -c10.w
    mul r2.w, r2.w, r3.y
    mad r3.y, r0.w, c27.y, -r2.w
    mad r0.z, r0.z, r3.y, r2.w
    mad r0.z, r0.w, -c27.y, r0.z
    mul r0.w, c26.w, c26.w
    sge r0.w, -r0.w, r0.w
    mad r0.z, r0.w, r0.z, r2.z
    mov r0.w, c6.w
    mul r2.zw, r0.w, c2.xyxy
    mad r2.w, r2.w, r0.z, c27.z
    mul r2.z, r2.z, c27.w
    rcp r2.w, r2.w
    mul r4.x, r0.z, r2.w
    mul r0.w, r0.w, c4.x
    mul r0.w, r0.w, c27.w
    mul r2.w, r4.x, r0.w
    add r2.w, r2.w, r2.w
    min r2.w, r2.w, c27.z
    rsq r2.w, r2.w
    rcp r2.w, r2.w
    mul r5.xyz, c3.w, c3
    mov r5.w, c3.w
    mad r6, v2.xyzx, c27.zzzx, c27.xxxz
    mul r7, r6, c1
    mul r3.yzw, r7.w, r7.xxyz
    mov r8.xyz, -r3.yzww
    mov oT0.xyz, r3.yzww
    mov r8.w, -r7.w
    add r5, r5, r8
    mul r5, r2.w, r5
    mad oT1.xyz, r7, r7.w, r5
    mad oT1.w, r6.w, c1.w, r5.w
    sge r2.w, c27.x, v4.y
    lrp r3.y, r2.w, c6.z, c6.y
    rcp r2.w, c10.x
    mad r2.z, r3.y, r2.w, r2.z
    add r2.w, -r2.z, c27.w
    mov r3.y, c7.y
    mul r5, r3.y, c5.wzxy
    mad r3.y, r5.x, r0.z, c27.z
    rcp r3.y, r3.y
    mul r0.z, r0.z, r3.y
    lrp r3.y, r0.z, -r2.z, -c27.w
    mad r4.w, r2.w, r4.x, -c27.w
    mul r2.z, r5.y, c27.w
    mul r3.zw, -r5, c10.x
    mad oT6.y, r2.z, -r0.z, r3.y
    mov oT6.x, r0.z
    max r5, r3.x, c8
    min r5, r5, c28.y
    add r2.zw, r0.xyxy, -r5.xyxy
    mad r0.xy, r0, c28.z, -r5
    add oT4.xy, -r5.zwzw, r0
    add r0.xy, -r5, r5.zwzw
    rcp r5.z, r0.x
    rcp r5.w, r0.y
    mul oT2.zw, r2, r5
    mad oT3.y, r0.w, -r4.x, r4.w
    mad oT3.z, r0.w, r4.x, r4.w
    mov oT3.xw, r4
    rcp r0.z, r2.x
    rcp r0.w, r2.y
    mul oT4.zw, r0, c28.w
    rcp r0.x, c9.z
    rcp r0.z, c9.w
    mul r0.xy, r0.xzzw, r3.zwzw
    add oT5.xy, r0, v3
    mad oPos.xy, r1.w, c0, r1
    mov oPos.zw, r1
    mov oT0.w, c1.w
    mov oT2.xy, v3
    mul oT5.zw, v2.w, c27.xyzx

// approximately 121 instruction slots used
vs_4_0
dcl_constantbuffer cb0[33], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[9], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xy
dcl_input v4.y
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xy
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 9518482cf08e4a31-vs.txt
mov r7.xyzw, cb1[4].xyzw
mov r8.xyzw, l(0)
mul r8.x, -r6.x, r6.y
mul r10.xyzw, cb10[0].xyzw, r8.xxxx
mad r10.xyzw, cb10[1].xyzw, r8.yyyy, r10.xyzw
mad r10.xyzw, cb10[2].xyzw, r8.zzzz, r10.xyzw
mad r10.xyzw, cb10[3].xyzw, r8.wwww, r10.xyzw
mul r9.xyzw, cb11[12].xyzw, r10.xxxx
mad r9.xyzw, cb11[13].xyzw, r10.yyyy, r9.xyzw
mad r9.xyzw, cb11[14].xyzw, r10.zzzz, r9.xyzw
mad r9.xyzw, cb11[15].xyzw, r10.wwww, r9.xyzw
add r7.xyz, r7.xyz, -r9.xyz

add r0.xy, v0.xyxx, cb0[27].zwzz
mul r1.xyzw, r0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
mov o0.xyzw, r1.xyzw
mov o1.w, cb0[7].w
mov r2.xyz, v2.xyzx
mov r2.w, l(1.000000)
mul r3.xyzw, r2.xyzw, cb0[7].xyzw
mul r1.xyz, r3.wwww, r3.xyzx
mov o1.xyz, r1.xyzx
mov r4.xyz, -r1.xyzx
mov r4.w, -r3.w
mul r5.xyz, cb0[9].wwww, cb0[9].xyzx
mov r5.w, cb0[9].w
add r4.xyzw, r4.xyzw, r5.xyzw
mul r1.x, v1.x, cb2[16].x
mul r1.y, v1.x, cb2[17].x
mul r1.z, v1.x, cb2[18].x
mul r2.x, v1.y, cb2[16].y
mul r2.y, v1.y, cb2[17].y
mul r2.z, v1.y, cb2[18].y
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.x, v1.z, cb2[16].z
mul r2.y, v1.z, cb2[17].z
mul r2.z, v1.z, cb2[18].z
add r1.xyz, r1.xyzx, r2.xyzx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r1.xyz, r0.zzzz, r1.xyzx
mul r2.xyz, r0.yyyy, cb2[13].xyzx
mad r2.xyz, cb2[12].xyzx, r0.xxxx, r2.xyzx
mad r2.xyz, cb2[14].xyzx, v0.zzzz, r2.xyzx
mad r2.xyz, cb2[15].xyzx, v0.wwww, r2.xyzx
add r2.xyz, -r2.xyzx, r7.xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
dp3 r0.z, r1.xyzx, r2.xyzx
mul r1.xy, cb1[6].yyyy, cb3[6].xyxx
mad r1.xy, cb3[5].xyxx, cb1[6].xxxx, r1.xyxx
mul r1.xy, |r1.xyxx|, cb0[32].yzyy
div r1.xy, r1.wwww, r1.xyxx
dp2 r0.w, r1.xyxx, r1.xyxx
mad r1.xy, cb0[31].xyxx, l(0.250000, 0.250000, 0.000000, 0.000000), r1.xyxx
div o5.zw, l(0.000000, 0.000000, 0.250000, 0.250000), r1.xxxy
rsq r0.w, r0.w
mul r1.x, |v4.y|, cb0[32].x
mul r0.w, r0.w, r1.x
mul r1.x, r0.w, l(1.500000)
add r1.y, -cb0[32].w, l(1.000000)
mul r1.y, r1.y, |r1.x|
mad r0.w, r0.w, l(1.500000), -r1.y
mad r0.z, |r0.z|, r0.w, r1.y
eq r0.w, cb3[8].w, l(0.000000)
movc r0.z, r0.w, r0.z, r1.x
mul r1.xy, cb0[8].xyxx, cb0[26].wwww
mad r0.w, r1.y, r0.z, l(1.000000)
div r5.x, r0.z, r0.w
mul r0.w, cb0[10].x, cb0[26].w
mul r0.w, r0.w, l(0.500000)
mul r1.y, r5.x, r0.w
add r1.y, r1.y, r1.y
min r1.y, r1.y, l(1.000000)
sqrt r1.y, r1.y
mul r4.xyzw, r4.xyzw, r1.yyyy
mad o2.xyz, r3.xyzx, r3.wwww, r4.xyzx
mad o2.w, r2.w, cb0[7].w, r4.w
max r2.xyzw, cb0[30].xyzw, l(-20000000000.000000, -20000000000.000000, -20000000000.000000, -20000000000.000000)
min r2.xyzw, r2.xyzw, l(20000000000.000000, 20000000000.000000, 20000000000.000000, 20000000000.000000)
add r1.yz, r0.xxyx, -r2.xxyx
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), -r2.xyxx
add o5.xy, -r2.zwzz, r0.xyxx
add r0.xy, -r2.xyxx, r2.zwzz
div o3.zw, r1.yyyz, r0.xxxy
mov o3.xy, v3.xyxx
ge r0.x, l(0.000000), v4.y
and r0.x, r0.x, l(0x3f800000)
add r0.y, -cb0[26].y, cb0[26].z
mad r0.x, r0.x, r0.y, cb0[26].y
div r0.x, r0.x, cb0[32].x
mad r0.x, r1.x, l(0.500000), r0.x
add r0.x, -r0.x, l(0.500000)
mad r5.w, r0.x, r5.x, l(-0.500000)
mad o4.y, -r0.w, r5.x, r5.w
mad o4.z, r0.w, r5.x, r5.w
mov o4.xw, r5.xxxw
mov o6.z, v2.w
mov o6.w, l(0)
mul r1.xyzw, cb0[23].wzxy, cb0[27].yyyy
mul r0.yw, -r1.zzzw, cb0[32].xxxx
div r0.yw, r0.yyyw, cb0[31].zzzw
add o6.xy, r0.ywyy, v3.xyxx
mad r0.y, r1.x, r0.z, l(1.000000)
div r0.y, r0.z, r0.y
mul r0.z, r1.y, l(0.500000)
mad r0.x, r0.x, r0.y, l(-0.500000)
mad o7.y, -r0.z, r0.y, r0.x
mov o7.x, r0.y
ret 
// Approximately 0 instruction slots used