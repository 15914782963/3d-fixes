// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8ac9aca6cf6337d9-ps.txt
// 3DMigoto: 8ac9aca6cf6337d9 |    Unity headers extracted from FogVolume.shader
//    Shader "Hidden/FogVolume" {
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent-100" "IGNOREPROJECTOR"="true" "RenderType"="FogVolume" }
//        Pass 1/1 {
//          Tags { "QUEUE"="Transparent-100" "IGNOREPROJECTOR"="true" "RenderType"="FogVolume" }
//          ZTest Always
//          ZWrite Off
//          Cull Front
//          Blend SrcAlpha OneMinusSrcAlpha
//          GpuProgramID 53153
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 3
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from FogVolume.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 44 3 0
//   undeciphered2: 1 3 2 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 112 [_BoxMin]
//   Vector 128 [_BoxMax]
//   Float 188 [_Visibility]
//   Float 200 [_Fade]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_SkyMap] 2D 2
//   SetTexture 1 [_CameraDepthTexture] 2D 0
//   SetTexture 2 [Ceto_OceanMask] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Dec 10 03:49:26 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float    y  
// TEXCOORD                 1   xyzw        2     NONE   float   xy w
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.y
dcl_input_ps linear v2.xyw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8ac9aca6cf6337d9-ps.txt
mov r5.xyzw, cb1[4].xyzw
mov r6.xyzw, l(0)
mul r6.x, -r4.x, r4.y
mul r8.xyzw, cb10[0].xyzw, r6.xxxx
mad r8.xyzw, cb10[1].xyzw, r6.yyyy, r8.xyzw
mad r8.xyzw, cb10[2].xyzw, r6.zzzz, r8.xyzw
mad r8.xyzw, cb10[3].xyzw, r6.wwww, r8.xyzw
mul r7.xyzw, cb11[12].xyzw, r8.xxxx
mad r7.xyzw, cb11[13].xyzw, r8.yyyy, r7.xyzw
mad r7.xyzw, cb11[14].xyzw, r8.zzzz, r7.xyzw
mad r7.xyzw, cb11[15].xyzw, r8.wwww, r7.xyzw
add r5.xyz, r5.xyz, -r7.xyz

add r0.xyz, |v4.xyzx|, -cb0[8].xyzx
ge r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r0.xyz, r0.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
add r0.x, r0.y, r0.x
add r0.x, r0.z, r0.x
min r0.x, r0.x, l(1.000000)
add r0.yzw, -v4.xxyz, cb0[8].xxyz
add r1.xyz, v3.xyzx, -v4.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
div r2.xyz, r0.ywzy, r1.xzyx
mov r3.w, r2.x
add r0.yzw, -v4.xxyz, cb0[7].xxyz
div r3.xyz, r0.yzwy, r1.xyzx
lt r0.yzw, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xxyz
movc r3.xw, r0.yyyy, r3.xxxw, r3.wwwx
mov r2.xw, r3.zzzy
movc r0.yz, r0.zzzz, r2.wwzw, r2.zzwz
movc r2.xy, r0.wwww, r2.xyxx, r2.yxyy
lt r0.w, r3.x, r0.y
movc r0.y, r0.w, r0.y, r3.x
lt r0.w, r0.y, r2.x
movc r0.y, r0.w, r2.x, r0.y
mul r0.x, r0.x, r0.y
lt r0.y, r0.z, r3.w
movc r0.y, r0.y, r0.z, r3.w
lt r0.z, r2.y, r0.y
movc r0.y, r0.z, r2.y, r0.y
max r0.z, r0.y, r0.x
min r0.x, r0.y, r0.x
div r0.yw, v2.xxxy, v2.wwww
sample r2.xyzw, r0.ywyy, t1.xyzw, s0
sample r3.xyzw, r0.ywyy, t2.xyzw, s1
mad r0.y, cb1[7].x, r2.x, cb1[7].y
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
min r0.y, r3.y, r0.y
mul r0.y, r0.y, cb1[5].z
min r0.xz, r0.yyyy, r0.xxzx
add r0.x, -r0.x, r0.z
div r0.x, r0.x, cb0[11].w
mul r0.x, r0.x, l(-1.442695)
exp r0.x, r0.x
add r0.x, -r0.x, l(1.000000)
mul r0.x, r0.x, r0.x
min r0.x, r0.x, l(1.000000)
mul o0.w, r0.x, cb0[12].z
dp3 r0.x, -r1.xyzx, r1.xyzx
add r0.x, r0.x, r0.x
mad r0.xyz, r0.xxxx, -r1.xyzx, -r1.xyzx
add r0.y, r0.y, l(1.000000)
div r0.yw, r0.xxxz, r0.yyyy
add r1.x, v1.y, -r5.y
ge r1.x, r1.x, l(0.000000)
movc r0.xy, r1.xxxx, r0.ywyy, r0.xzxx
mad r0.xy, r0.xyxx, l(0.454000, 0.454000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
sample r0.xyzw, r0.xyxx, t0.xyzw, s2
mov o0.xyz, r0.xyzx
ret 
// Approximately 0 instruction slots used