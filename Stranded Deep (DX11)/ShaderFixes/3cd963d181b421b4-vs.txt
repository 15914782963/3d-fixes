// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 3cd963d181b421b4-vs.txt
// 3DMigoto: 3cd963d181b421b4 | Matched 2 variants of 2 shaders: Beam Team/Stipple Billboard CG, Beam Team/Stipple Terrain Billboard CG
//
// 1:    Unity headers extracted from Stipple Billboard CG.shader
// 2:    Unity headers extracted from Stipple Terrain Billboard CG.shader
// 1:    Shader "Beam Team/Stipple Billboard CG" {
// 2:    Shader "Beam Team/Stipple Terrain Billboard CG" {
//         Properties {
//          _Color ("Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _MainTex ("Albedo (RGB)", 2D) = "white" { }
//          _StippleTex ("Stippling (A)", 2D) = "white" { }
//          _ZOffset ("Z-Offset", Range(0.000000,100.000000)) = 0.000000
// 2:       _TerrainImposterStipple ("Stipple", Range(0.000000,1.000000)) = 0.000000
//         }
//         SubShader 1/1 {
//           Tags { "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "RenderType"="ImposterTransparentCutout" }
//           Pass 2/2 {
//             Name "CASTER"
//             Tags { "LIGHTMODE"="SHADOWCASTER" "QUEUE"="AlphaTest" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="ImposterTransparentCutout" }
// 1:          GpuProgramID 105345
// 2:          GpuProgramID 66881
//             Program "vp" {
//               SubProgram "d3d11_9x " {
//                 GpuProgramIndex 6
//               }
//             }
//           }
//         }
//       }
//
// 1: Unity 5.3 headers extracted from Stipple Billboard CG.shader.decompressed:
// 2: Unity 5.3 headers extracted from Stipple Terrain Billboard CG.shader.decompressed:
//      API d3d11_9x
//      Shader model vs_4_0_level_9_1
//      undeciphered1: 201510240 43 0 0
//      Keywords { "SHADOWS_DEPTH" }
//      undeciphered2: 1 0 6 0 0 0
//      undeciphered3: 11 3 0 0 1 2 3 4
//      ConstBuffer "$Globals" 144
//      Vector 96 [_MainTex_ST]
//      Float 128 [_ZOffset]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 720
//      Vector 0 [_WorldSpaceLightPos0]
//      ConstBuffer "UnityShadows" 416
//      Vector 80 [unity_LightShadowBias]
//      ConstBuffer "UnityPerDraw" 352
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 352
//      Matrix 272 [unity_MatrixVP]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityShadows" 3
//      BindCB "UnityPerDraw" 4
//      BindCB "UnityPerFrame" 5
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Dec 10 03:48:31 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xyzw        2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c4         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c5         cb3             5         1  ( FLT, FLT, FLT, FLT)
// c6         cb4             0         4  ( FLT, FLT, FLT, FLT)
// c10        cb4            12         8  ( FLT, FLT, FLT, FLT)
// c18        cb5            17         4  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
    def c22, 1, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    mad oT0.xy, v2, c1, c1.zwzw
    mov r0.x, c14.y
    mov r0.y, c15.y
    mov r0.z, c16.y
    mul r0.xyz, r0, v1.y
    mov r1.x, c14.x
    mov r1.y, c15.x
    mov r1.z, c16.x
    mad r0.xyz, r1, v1.x, r0
    mov r1.x, c14.z
    mov r1.y, c15.z
    mov r1.z, c16.z
    mad r0.xyz, r1, v1.z, r0
    nrm r1.xyz, r0
    mov r0.xyz, c3
    mul r2.xyz, r0.y, c15
    mad r0.xyw, c14.xyzz, r0.x, r2.xyzz
    mad r0.xyz, c16, r0.z, r0.xyww
    add r0.xyz, r0, c17
    add r0.xyz, r0, -v0
    nrm r2.xyz, r0
    mad r0.xyz, r2, c2.x, v0
    mul r2.xyz, r0.y, c11
    mad r2.xyz, c10, r0.x, r2
    mad r2.xyz, c12, r0.z, r2
    add r2.xyz, r2, c13
    mad r3.xyz, r2, -c4.w, c4
    nrm r4.xyz, r3
    dp3 r0.w, r1, r4
    mad r0.w, r0.w, -r0.w, c22.x
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, c5.z
    mad r1.xyz, r1, -r0.w, r2
    mul r2, r1.y, c19
    mad r2, c18, r1.x, r2
    mad r1, c20, r1.z, r2
    add r1, r1, c21
    mul r0.w, c5.z, c5.z
    slt r0.w, -r0.w, r0.w
    mul r2, r0.y, c7
    mad r2, c6, r0.x, r2
    mad r2, c8, r0.z, r2
    add r2, r2, c9
    lrp r3, r0.w, r1, r2
    rcp r0.x, r3.w
    mul r0.x, r0.x, c5.x
    max r0.x, r0.x, c22.y
    min r0.x, r0.x, c22.x
    add r0.x, r0.x, r3.z
    max r0.y, r0.x, c22.y
    add r0.y, -r0.x, r0.y
    mad oPos.z, c5.y, r0.y, r0.x
    mad oPos.xy, r3.w, c0, r3
    mov oPos.w, r3.w

// approximately 61 instruction slots used
vs_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[6], immediateIndexed
dcl_constantbuffer cb4[22], immediateIndexed
dcl_constantbuffer cb5[21], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_temps 9

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 3cd963d181b421b4-vs.txt
mov r5.xyzw, cb1[4].xyzw
mov r6.xyzw, l(0)
mul r6.x, -r4.x, r4.y
mul r8.xyzw, cb10[0].xyzw, r6.xxxx
mad r8.xyzw, cb10[1].xyzw, r6.yyyy, r8.xyzw
mad r8.xyzw, cb10[2].xyzw, r6.zzzz, r8.xyzw
mad r8.xyzw, cb10[3].xyzw, r6.wwww, r8.xyzw
mul r7.xyzw, cb11[12].xyzw, r8.xxxx
mad r7.xyzw, cb11[13].xyzw, r8.yyyy, r7.xyzw
mad r7.xyzw, cb11[14].xyzw, r8.zzzz, r7.xyzw
mad r7.xyzw, cb11[15].xyzw, r8.wwww, r7.xyzw
add r5.xyz, r5.xyz, -r7.xyz

mov r0.x, cb4[16].y
mov r0.y, cb4[17].y
mov r0.z, cb4[18].y
mul r0.xyz, r0.xyzx, v1.yyyy
mov r1.x, cb4[16].x
mov r1.y, cb4[17].x
mov r1.z, cb4[18].x
mad r0.xyz, r1.xyzx, v1.xxxx, r0.xyzx
mov r1.x, cb4[16].z
mov r1.y, cb4[17].z
mov r1.z, cb4[18].z
mad r0.xyz, r1.xyzx, v1.zzzz, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyz, r5.yyyy, cb4[17].xyzx
mad r1.xyz, cb4[16].xyzx, r5.xxxx, r1.xyzx
mad r1.xyz, cb4[18].xyzx, r5.zzzz, r1.xyzx
add r1.xyz, r1.xyzx, cb4[19].xyzx
add r1.xyz, r1.xyzx, -v0.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mad r1.xyz, r1.xyzx, cb0[8].xxxx, v0.xyzx
mul r2.xyz, r1.yyyy, cb4[13].xyzx
mad r2.xyz, cb4[12].xyzx, r1.xxxx, r2.xyzx
mad r2.xyz, cb4[14].xyzx, r1.zzzz, r2.xyzx
add r2.xyz, r2.xyzx, cb4[15].xyzx
mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r0.w, r0.xyzx, r3.xyzx
mad r0.w, -r0.w, r0.w, l(1.000000)
sqrt r0.w, r0.w
mul r0.w, r0.w, cb3[5].z
mad r0.xyz, -r0.xyzx, r0.wwww, r2.xyzx
mul r2.xyzw, r0.yyyy, cb5[18].xyzw
mad r2.xyzw, cb5[17].xyzw, r0.xxxx, r2.xyzw
mad r0.xyzw, cb5[19].xyzw, r0.zzzz, r2.xyzw
add r0.xyzw, r0.xyzw, cb5[20].xyzw
mul r2.xyzw, r1.yyyy, cb4[1].xyzw
mad r2.xyzw, cb4[0].xyzw, r1.xxxx, r2.xyzw
mad r1.xyzw, cb4[2].xyzw, r1.zzzz, r2.xyzw
add r1.xyzw, r1.xyzw, cb4[3].xyzw
ne r2.x, cb3[5].z, l(0.000000)
movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw

// Relocated to here with asmtool.py
mov o0.xyw, r0.xyxw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 3cd963d181b421b4-vs.txt
ne r4.w, r0.w, l(1.0)
if_nz r4.w
  add r4.w, r0.w, -r4.y
  mad r0.x, r4.w, r4.x, r0.x
endif

div_sat r1.x, cb3[5].x, r0.w
add r0.z, r0.z, r1.x

// mov o0.xyw, r0.xyxw // Relocated from here with asmtool.py

max r0.x, r0.z, l(0.000000)
add r0.x, -r0.z, r0.x
mad o0.z, cb3[5].y, r0.x, r0.z
mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
ret 
// Approximately 0 instruction slots used