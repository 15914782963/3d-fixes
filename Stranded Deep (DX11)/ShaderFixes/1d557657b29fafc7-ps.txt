// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 1d557657b29fafc7-ps.txt
// 3DMigoto: 1d557657b29fafc7 |    Unity headers extracted from Rocks - MaskyMix Standard.shader
//    Shader "Volund/Standard MaskyMix Scatter (Specular, Surface)" {
//      Properties {
//       _Color ("Color", Color) = (1,1,1,1)
//       _MainTex ("Albedo", 2D) = "white" { }
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//       _Glossiness ("Smoothness", Range(0,1)) = 0.5
//       _SpecColor ("Specular", Color) = (0.2,0.2,0.2,1)
//       _SpecGlossMap ("Specular", 2D) = "white" { }
//       _BumpScale ("Scale", Float) = 1
//       _BumpMap ("Normal Map", 2D) = "bump" { }
//       _Parallax ("Height Scale", Range(0.005,0.08)) = 0.02
//       _ParallaxMap ("Height Map", 2D) = "black" { }
//       _OcclusionStrength ("Strength", Range(0,1)) = 1
//       _OcclusionMap ("Occlusion", 2D) = "white" { }
//       _EmissionColor ("Color", Color) = (0,0,0,1)
//       _EmissionMap ("Emission", 2D) = "white" { }
//       _DetailMask ("Detail Mask", 2D) = "white" { }
//       _DetailAlbedoMap ("Detail Albedo x2", 2D) = "grey" { }
//       _DetailNormalMapScale ("Scale", Float) = 1
//       _DetailNormalMap ("Normal Map", 2D) = "bump" { }
//      [Enum(UV0,0,UV1,1)]  _UVSec ("UV Set for secondary textures", Float) = 0
//      [HideInInspector]  _Mode ("__mode", Float) = 0
//      [HideInInspector]  _SrcBlend ("__src", Float) = 1
//      [HideInInspector]  _DstBlend ("__dst", Float) = 0
//      [HideInInspector]  _ZWrite ("__zw", Float) = 1
//      [HideInInspector]  _SmoothnessInAlbedo ("__smoothnessinalbedo", Float) = 0
//       _MaskyMixAlbedo ("MaskyMix Albedo (RGB) Gloss(A)", 2D) = "white" { }
//       _MaskyMixUVTile ("MaskyMix UV Tile", Range(1,200)) = 10
//       _MaskyMixColor ("MaskyMix Color (2x)", Color) = (0.5,0.5,0.5,0.5)
//       _MaskyMixSpecColor ("MaskyMix Spec Color", Color) = (0.2,0.2,0.2,1)
//       _MaskyMixBumpMap ("MaskyMix Bump", 2D) = "bump" { }
//       _MaskyMixBumpScale ("MaskyMix Bump Scale", Range(0.1,2)) = 1
//       _MaskyMixWorldDirection ("MaskyMix World Dir", Vector) = (0,1,0,0)
//       _MaskyMixMask ("MaskyMix Mask (R)", 2D) = "white" { }
//       _MaskyMixMaskTile ("MaskyMix Mask UV Tile", Range(1,100)) = 10
//       _MaskyMixMaskFalloff ("MaskyMix Mask Falloff", Range(0.0001,2.5)) = 0.1
//       _MaskyMixMaskThresholdLow ("MaskyMix Mask Threshold Low", Range(0,1)) = 0.5
//       _MaskyMixMaskThresholdHi ("MaskyMix Mask Threshold Hi", Range(0,1)) = 0.6
//       _MetaAlbedoDesaturation ("Meta Albedo Desaturation", Range(0,1)) = 0
//      [HDR]  _MetaAlbedoTint ("Meta Albedo Tint", Color) = (1,1,1,1)
//      [HDR]  _MetaAlbedoAdd ("Meta Albedo Add", Color) = (0,0,0,0)
//      }
//      Fallback "Diffuse"
//      SubShader 1/2 {
//        LOD 400
//        Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }
//        Pass 3/4 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "RenderType"="Opaque" "PerformanceChecks"="False" }
//          ZWrite [_ZWrite]
//          Blend [_SrcBlend] [_DstBlend]
//          GpuProgramID 172326
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 75
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Rocks - MaskyMix Standard.shader.decompressed:
//   API d3d11
//   Shader model ps_5_0
//   undeciphered1: 129 12 0
//   Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" "_NORMALMAP" "_DETAIL_MULX2" }
//   undeciphered2: 1 12 2 10 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 368
//   Vector 16 [unity_ColorSpaceDouble]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 80 [unity_DynamicLightmap_HDR]
//   Vector 112 [_SpecColor]
//   Vector 128 [_Color]
//   Float 192 [_BumpScale]
//   Float 196 [_DetailNormalMapScale]
//   Float 204 [_Glossiness]
//   Float 208 [_OcclusionStrength]
//   Vector 240 [_MaskyMixColor]
//   Vector 256 [_MaskyMixSpecColor]
//   Float 272 [_MaskyMixUVTile]
//   Float 276 [_MaskyMixBumpScale]
//   Vector 288 [_MaskyMixWorldDirection] 3
//   Float 300 [_MaskyMixMaskTile]
//   Float 304 [_MaskyMixMaskFalloff]
//   Float 308 [_MaskyMixMaskThresholdLow]
//   Float 312 [_MaskyMixMaskThresholdHi]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_DetailMask] 2D 4
//   SetTexture 2 [_DetailAlbedoMap] 2D 2
//   SetTexture 3 [_BumpMap] 2D 3
//   SetTexture 4 [_DetailNormalMap] 2D 5
//   SetTexture 5 [_OcclusionMap] 2D 6
//   SetTexture 6 [_MaskyMixBumpMap] 2D 8
//   SetTexture 7 [_MaskyMixAlbedo] 2D 7
//   SetTexture 8 [_MaskyMixMask] 2D 9
//   SetTexture 9 [unity_DynamicLightmap] 2D 0
//   SetTexture 10 [unity_DynamicDirectionality] 2D -1
//   SetTexture 11 [unity_DynamicNormal] 2D -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 10 17:36:15 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   x           5     NONE   float   x   
// TEXCOORD                 5    yzw        5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[20], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.x
dcl_input_ps linear v6.zw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 1d557657b29fafc7-ps.txt
mov r7.xyzw, cb1[4].xyzw
mov r8.xyzw, l(0)
mul r8.x, -r6.x, r6.y
mul r10.xyzw, cb10[0].xyzw, r8.xxxx
mad r10.xyzw, cb10[1].xyzw, r8.yyyy, r10.xyzw
mad r10.xyzw, cb10[2].xyzw, r8.zzzz, r10.xyzw
mad r10.xyzw, cb10[3].xyzw, r8.wwww, r10.xyzw
mul r9.xyzw, cb11[12].xyzw, r10.xxxx
mad r9.xyzw, cb11[13].xyzw, r10.yyyy, r9.xyzw
mad r9.xyzw, cb11[14].xyzw, r10.zzzz, r9.xyzw
mad r9.xyzw, cb11[15].xyzw, r10.wwww, r9.xyzw
add r7.xyz, r7.xyz, -r9.xyz

mul r0.xy, v4.xyxx, cb0[18].wwww
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t8.xyzw, s9
mul r0.x, r0.x, v5.x
sample_indexable(texture2d)(float,float,float,float) r0.yz, v4.zwzz, t4.xywz, s5
mad r0.yz, r0.zzyz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
mul r0.yz, r0.yyzy, cb0[12].yyyy
dp2 r0.w, r0.yzyy, r0.yzyy
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r0.w, r0.w
sample_indexable(texture2d)(float,float,float,float) r1.xy, v4.xyxx, t3.ywxz, s3
mad r1.xy, r1.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r1.xyxx, cb0[12].xxxx
dp2 r1.z, r2.xyxx, r2.xyxx
min r1.z, r1.z, l(1.000000)
add r1.z, -r1.z, l(1.000000)
sqrt r2.z, r1.z
mul r3.z, r0.w, r2.z
mad r3.xy, r1.xyxx, cb0[12].xxxx, r0.yzyy
dp3 r0.y, r3.xyzx, r3.xyzx
rsq r0.y, r0.y
mad r0.yzw, r3.xxyz, r0.yyyy, -r2.xxyz
sample_indexable(texture2d)(float,float,float,float) r1.z, v4.xyxx, t1.xywz, s4
mad r0.yzw, r1.zzzz, r0.yyzw, r2.xxyz
dp3 r3.x, v1.xyzx, r0.yzwy
dp3 r3.y, v2.xyzx, r0.yzwy
dp3 r3.z, v3.xyzx, r0.yzwy
dp3 r1.w, cb0[18].xyzx, r3.xyzx
max r1.w, r1.w, l(0.000010)
mul r0.x, r0.x, r1.w
log r0.x, r0.x
mul r0.x, r0.x, cb0[19].x
exp r0.x, r0.x
add r1.w, r0.x, -cb0[19].y
lt r0.x, cb0[19].y, r0.x
add r2.x, -cb0[19].y, cb0[19].z
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
mul_sat r1.w, r1.w, r2.x
mad r2.x, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.x
sample_indexable(texture2d)(float,float,float,float) r2.xyw, v4.zwzz, t2.xywz, s2
mul r2.xyw, r2.xyxw, cb0[1].xyxz
add r3.x, -r1.z, l(1.000000)
mad r2.xyw, r2.xyxw, r1.zzzz, r3.xxxx
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v4.xyxx, t0.xyzw, s1
mul r3.xyz, r3.xyzx, cb0[8].xyzx
mul r2.xyw, r2.xyxw, r3.xyxz
add r3.xyz, cb0[15].xyzx, cb0[15].xyzx
mul r4.xy, v4.xyxx, cb0[17].xxxx
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.xyxx, t7.xyzw, s7
sample_indexable(texture2d)(float,float,float,float) r4.xy, r4.xyxx, t6.ywxz, s8
mad r4.xy, r4.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, cb0[17].yyyy
mad r3.xyz, r5.xyzx, r3.xyzx, -r2.xywx
add r1.z, r5.w, -cb0[12].w
mad r5.w, r1.w, r1.z, cb0[12].w
mad r3.xyz, r1.wwww, r3.xyzx, r2.xywx
movc r2.xyw, r0.xxxx, r3.xyxz, r2.xyxw
add r3.xyz, -cb0[7].xyzx, cb0[16].xyzx
mad r5.xyz, r1.wwww, r3.xyzx, cb0[7].xyzx
mov r3.xyz, cb0[7].xyzx
mov r3.w, cb0[12].w
movc r3.xyzw, r0.xxxx, r5.xyzw, r3.xyzw
max r1.z, r3.y, r3.x
max r1.z, r3.z, r1.z
add r1.z, -r1.z, l(1.000000)
mul r5.xyz, r1.zzzz, r2.xywx
sample_indexable(texture2d)(float,float,float,float) r1.z, v4.xyxx, t5.xzyw, s6
add r2.x, -cb0[13].x, l(1.000000)
mad r5.w, r1.z, cb0[13].x, r2.x
mov o0.xyzw, r5.xyzw
mov o1.xyzw, r3.xyzw
dp2 r1.z, r4.xyxx, r4.xyxx
mad r4.xy, r1.xyxx, cb0[12].xxxx, r4.xyxx
min r1.x, r1.z, l(1.000000)
add r1.x, -r1.x, l(1.000000)
sqrt r1.x, r1.x
mul r4.z, r1.x, r2.z
dp3 r1.x, r4.xyzx, r4.xyzx
rsq r1.x, r1.x
mad r1.xyz, r4.xyzx, r1.xxxx, -r0.yzwy
mad r1.xyz, r1.wwww, r1.xyzx, r0.yzwy
movc r0.xyz, r0.xxxx, r1.xyzx, r0.yzwy
dp3 r1.x, v1.xyzx, r0.xyzx
dp3 r1.y, v2.xyzx, r0.xyzx
dp3 r1.z, v3.xyzx, r0.xyzx
mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o2.w, l(1.000000)
add r0.x, -r3.w, l(1.000000)
mul r0.x, r0.x, r0.x
mov r2.x, v1.w
mov r2.y, v2.w
mov r2.z, v3.w
add r0.yzw, -r2.xxyz, r7.xxyz
dp3 r1.w, r0.yzwy, r0.yzwy
rsq r1.w, r1.w
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v6.zwzz, t10.xyzw, s0
mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r2.w, r2.xyzx, r2.xyzx
sqrt r2.w, r2.w
max r2.w, r2.w, l(0.001000)
div r2.xyz, r2.xyzx, r2.wwww
mad r0.yzw, r0.yyzw, r1.wwww, r2.xxyz
dp3 r1.w, r0.yzwy, r0.yzwy
max r1.w, r1.w, l(0.001000)
rsq r1.w, r1.w
mul r0.yzw, r0.yyzw, r1.wwww
dp3 r1.w, r2.xyzx, r0.yzwy
dp3 r0.y, r1.xyzx, r0.yzwy
dp3 r0.z, r1.xyzx, r2.xyzx
max r0.yz, r0.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
log r0.y, r0.y
max r0.w, r1.w, l(0.000000)
mul r1.x, r0.w, r0.w
mad r1.x, r1.x, r3.w, r0.x
max r0.x, r0.x, l(0.000100)
mul r0.x, r0.x, r0.x
div r0.x, l(2.000000), r0.x
add r0.x, r0.x, l(-2.000000)
max r0.x, r0.x, l(0.000100)
mul r0.w, r0.w, r1.x
mad r0.w, r0.w, l(8.000000), l(0.000100)
add r1.x, r0.x, l(1.000000)
mul r0.x, r0.y, r0.x
exp r0.x, r0.x
mul r0.x, r0.x, r1.x
div r0.x, r0.x, r0.w
max r0.y, r0.x, l(0.000100)
sqrt r0.y, r0.y
eq r0.w, cb0[3].w, l(0.000000)
movc r0.x, r0.w, r0.y, r0.x
mad r0.xyw, r0.xxxx, r3.xyxz, r5.xyxz
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v6.zwzz, t9.xyzw, s0
mul r1.w, r1.w, cb0[5].x
mul r1.xyz, r1.xyzx, r1.wwww
log r1.xyz, r1.xyzx
mul r1.xyz, r1.xyzx, cb0[5].yyyy
exp r1.xyz, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v6.zwzz, t11.xyzw, s0
mad r3.xyz, r3.zyxz, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.w, r3.xyzx, r2.xyzx
max r1.w, r1.w, l(0.125000)
div r1.xyz, r1.xyzx, r1.wwww
mul r2.xyz, r2.wwww, r1.xyzx
add r1.w, -r2.w, l(1.000000)
mul r1.xyz, r1.wwww, r1.xyzx
mul r1.xyz, r0.zzzz, r1.xyzx
mul r1.xyz, r5.wwww, r1.xyzx
mul r0.xyw, r0.xyxw, r2.xyxz
mul r0.xyz, r0.zzzz, r0.xywx
mul r0.xyz, r5.wwww, r0.xyzx
mad o3.xyz, r5.xyzx, r1.xyzx, r0.xyzx
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used