// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 7c6d42291dd3e474-vs.txt
// 3DMigoto: 7c6d42291dd3e474 |    Unity headers extracted from Speedtree Foliage - Double-Sided VFACE Metallic.shader
//    Shader "Beam Team/SpeedTree/SpeedTree Foliage - Cull Off VFACE Metallic" {
//      Properties {
//      [Header(Diffuse)]  _Color ("Color", Color) = (1,1,1,1)
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//       _MainTex ("Diffuse Albedo (RGB)", 2D) = "white" { }
//      [Header(Packed Normals)]  _PackedTex ("Gloss (R) Normal Y (G) Translucency (B) Normal X (A)", 2D) = "white" { }
//      [Header(Translucency)]  _TranslucencyIntensity ("Translucency Intensity", Range(0,1)) = 1
//      [Header(Wind)] [MaterialEnum(None, 0, Fastest, 1, Fast, 2, Better, 3, Best, 4, Palm, 5)]  _WindQuality ("Wind Quality", Range(0,5)) = 0
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/VertexLit"
//      SubShader 1/2 {
//        Tags { "QUEUE"="AlphaTest" "DisableBatching"="LodFading" "RenderType"="SpeedTree" }
//        Pass 1/1 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "QUEUE"="AlphaTest" "DisableBatching"="LodFading" "RenderType"="SpeedTree" }
//          Cull Off
//          GpuProgramID 154
//          Program "vp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 19
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Speedtree Foliage - Double-Sided VFACE Metallic.shader.decompressed:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 275 0 7
//   Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "GEOM_TYPE_LEAF" "HDR_LIGHT_PREPASS_OFF" "SUNSHINE_DISABLED" }
//   undeciphered2: 1 0 4 0 0
//   undeciphered3: 191 7 0 0 2 1 1 2 3 4 4 5 5 6 7 8
//   ConstBuffer "$Globals" 624
//   Vector 512 [_MainTex_ST]
//   Float 532 [_WindQuality]
//   Float 536 [_WindEnabled]
//   Vector 568 [_AfsSpecFade] 2
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityPerDraw" 352
//   Vector 336 [unity_WorldTransformParams]
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [_Object2World]
//   Matrix 256 [_World2Object]
//   ConstBuffer "SpeedTreeWind" 256
//   Vector 0 [_ST_WindVector]
//   Vector 16 [_ST_WindGlobal]
//   Vector 32 [_ST_WindBranch]
//   Vector 48 [_ST_WindBranchTwitch]
//   Vector 64 [_ST_WindBranchWhip]
//   Vector 80 [_ST_WindBranchAnchor]
//   Vector 96 [_ST_WindBranchAdherences]
//   Vector 112 [_ST_WindTurbulences]
//   Vector 128 [_ST_WindLeaf1Ripple]
//   Vector 144 [_ST_WindLeaf1Tumble]
//   Vector 160 [_ST_WindLeaf1Twitch]
//   Vector 176 [_ST_WindLeaf2Ripple]
//   Vector 192 [_ST_WindLeaf2Tumble]
//   Vector 208 [_ST_WindLeaf2Twitch]
//   Vector 240 [_ST_WindAnimation]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "SpeedTreeWind" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 10 17:37:01 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xyz 
// TEXCOORD                 2   xyzw        5     NONE   float   xyzw
// TEXCOORD                 3   xy          6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[36], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[16], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xyzw
dcl_input v4.xyz
dcl_input v5.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_temps 18
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 7c6d42291dd3e474-vs.txt
mov r14.xyzw, cb1[4].xyzw
mov r15.xyzw, l(0)
mul r15.x, -r13.x, r13.y
mul r17.xyzw, cb10[0].xyzw, r15.xxxx
mad r17.xyzw, cb10[1].xyzw, r15.yyyy, r17.xyzw
mad r17.xyzw, cb10[2].xyzw, r15.zzzz, r17.xyzw
mad r17.xyzw, cb10[3].xyzw, r15.wwww, r17.xyzw
mul r16.xyzw, cb11[12].xyzw, r17.xxxx
mad r16.xyzw, cb11[13].xyzw, r17.yyyy, r16.xyzw
mad r16.xyzw, cb11[14].xyzw, r17.zzzz, r16.xyzw
mad r16.xyzw, cb11[15].xyzw, r17.wwww, r16.xyzw
add r14.xyz, r14.xyz, -r16.xyz

mad o4.xy, v3.xyxx, cb0[32].xyxx, cb0[32].zwzz
mul r0.x, cb0[33].z, cb0[33].y
lt r0.yz, l(0.000000, 0.000000, 1.000000, 0.000000), r0.xxxx
mul r1.xyz, cb2[17].xyzx, cb3[0].yyyy
mad r1.xyz, cb2[16].xyzx, cb3[0].xxxx, r1.xyzx
mad r1.xyz, cb2[18].xyzx, cb3[0].zzzz, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
and r1.xyz, r0.yyyy, r1.xyzx
add r2.xyz, v0.xyzx, -v4.xyzx
lt r0.w, r0.x, l(5.000000)
and r0.z, r0.w, r0.z
if_nz r0.z
  add r0.z, v4.y, v4.x
  eq r0.w, r0.x, l(4.000000)
  lt r1.w, l(0.000000), v5.w
  movc r3.xy, r1.wwww, cb3[11].xyxx, cb3[8].xyxx
  add r0.z, r0.z, r3.x
  add r0.z, r0.z, l(0.500000)
  frc r0.z, r0.z
  mad r0.z, r0.z, l(2.000000), l(-1.000000)
  mul r2.w, |r0.z|, |r0.z|
  mad r0.z, -|r0.z|, l(2.000000), l(3.000000)
  mad r0.z, r2.w, r0.z, l(-0.500000)
  dp2 r0.z, r0.zzzz, r3.yyyy
  mul r3.xyz, v5.zzzz, l(0.062500, 1.000000, 16.000000, 0.000000)
  frc r3.xyz, r3.xyzx
  mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  mul r3.xyz, r0.zzzz, r3.xyzx
  mad r2.xyz, r3.xyzx, v5.xxxx, r2.xyzx
  if_nz r0.w
    mul r3.xyzw, v5.yyyy, l(0.062500, 1.000000, 16.000000, 30.299999)
    frc r3.xyzw, r3.xyzw
    mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    movc r4.xyzw, r1.wwww, cb3[12].xyzw, cb3[9].xyzw
    movc r5.xyz, r1.wwww, cb3[13].xyzx, cb3[10].xyzx
    mul r0.z, r3.w, l(3.000000)
    mad r6.y, r3.w, l(3.000000), r4.x
    mad r6.x, r4.x, l(0.750000), -r0.z
    add r0.zw, r6.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
    frc r0.zw, r0.zzzw
    mad r0.zw, r0.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
    mul r6.xy, |r0.zwzz|, |r0.zwzz|
    mad r0.zw, -|r0.zzzw|, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
    mad r0.zw, r6.xxxy, r0.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
    add r0.zw, r0.zzzw, r0.zzzw
    dp3 r1.w, r2.xyzx, r2.xyzx
    sqrt r1.w, r1.w
    mad r2.w, r0.z, r0.z, r0.w
    mul r4.x, r4.z, v5.x
    mul r2.w, r2.w, r4.x
    sincos r4.x, r6.x, r2.w
    add r2.w, -r6.x, l(1.000000)
    mul r7.xyzw, r3.xxxy, r2.wwww
    mul r6.yzw, r3.zzxy, r4.xxxx
    mad r8.xy, r7.zyzz, r3.zyzz, r6.wyww
    mad r9.xy, r7.xwxx, r3.xyxx, r6.xxxx
    mad r8.z, r7.w, r3.z, -r6.z
    mad r10.xy, r7.yzyy, r3.yzyy, -r6.ywyy
    mad r10.z, r7.w, r3.z, r6.z
    mul r4.x, r3.z, r3.z
    mad r10.w, r4.x, r2.w, r6.x
    mul r6.xyz, r1.yzxy, r3.zxyz
    mad r6.xyz, r3.yzxy, r1.zxyz, -r6.xyzx
    dp3 r1.y, r1.xyzx, r3.xyzx
    max r1.y, r1.y, l(-1.000000)
    min r1.y, r1.y, l(1.000000)
    add r6.w, r1.y, r6.y
    dp3 r2.w, r6.xzwx, r6.xzwx
    rsq r2.w, r2.w
    mul r3.xyz, r2.wwww, r6.zxwz
    add r2.w, -|r1.y|, l(1.000000)
    sqrt r2.w, r2.w
    mad r4.x, |r1.y|, l(-0.0187292993), l(0.074261)
    mad r4.x, r4.x, |r1.y|, l(-0.212114394)
    mad r4.x, r4.x, |r1.y|, l(1.57072878)
    mul r4.z, r2.w, r4.x
    mad r4.z, r4.z, l(-2.000000), l(3.14159274)
    lt r1.y, r1.y, -r1.y
    and r1.y, r1.y, r4.z
    mad r1.y, r4.x, r2.w, r1.y
    mad r0.z, -r0.w, r0.w, r0.z
    mad r6.x, r3.w, l(3.000000), r5.z
    mul r6.y, r6.x, l(0.870000)
    add r4.xz, r6.xxyx, l(0.500000, 0.000000, 0.500000, 0.000000)
    frc r4.xz, r4.xxzx
    mad r4.xz, r4.xxzx, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
    mul r5.zw, |r4.xxxz|, |r4.xxxz|
    mad r4.xz, -|r4.xxzx|, l(2.000000, 0.000000, 2.000000, 0.000000), l(3.000000, 0.000000, 3.000000, 0.000000)
    mad r4.xz, r5.zzwz, r4.xxzx, l(-0.500000, 0.000000, -0.500000, 0.000000)
    add r4.xz, r4.xxzx, r4.xxzx
    mul r0.w, r4.z, r4.z
    mad r0.w, r0.w, r4.x, l(1.000000)
    mul_sat r0.w, r0.w, l(0.500000)
    log r0.w, r0.w
    mul r0.w, r0.w, r5.y
    exp r0.w, r0.w
    mul r0.z, r4.y, r0.z
    mad r0.z, r1.y, r4.w, r0.z
    mad r0.z, r5.x, r0.w, r0.z
    mul r0.z, r0.z, v5.x
    sincos r4.x, r5.x, r0.z
    add r0.z, -r5.x, l(1.000000)
    mul r6.xyzw, r3.yyyz, r0.zzzz
    mul r4.xyz, r3.xyzx, r4.xxxx
    mad r7.xy, r6.zyzz, r3.xzxx, r4.zxzz
    mad r11.xy, r6.xwxx, r3.yzyy, r5.xxxx
    mad r7.z, r6.w, r3.x, -r4.y
    mad r12.xy, r6.yzyy, r3.zxzz, -r4.xzxx
    mad r12.z, r6.w, r3.x, r4.y
    mul r0.w, r3.x, r3.x
    mad r7.w, r0.w, r0.z, r5.x
    mov r9.z, r10.x
    mov r9.w, r8.x
    mov r11.z, r7.y
    mov r11.w, r12.y
    dp3 r3.x, r9.xzwx, r11.xzwx
    mov r12.w, r11.y
    dp3 r3.y, r9.xwzx, r12.xzwx
    dp3 r3.z, r9.xzwx, r7.xzwx
    mov r8.w, r9.y
    dp3 r4.x, r8.ywzy, r11.xzwx
    dp3 r4.y, r8.yzwy, r12.xzwx
    dp3 r4.z, r8.ywzy, r7.xzwx
    dp3 r5.x, r10.yzwy, r11.xzwx
    dp3 r5.y, r10.ywzy, r12.xzwx
    dp3 r5.z, r10.yzwy, r7.xzwx
    dp3 r0.z, r3.xyzx, v2.xyzx
    dp3 r0.w, r4.xyzx, v2.xyzx
    dp3 r1.y, r5.xyzx, v2.xyzx
    dp3 r3.x, r3.xyzx, r2.xyzx
    dp3 r3.y, r4.xyzx, r2.xyzx
    dp3 r3.z, r5.xyzx, r2.xyzx
    dp3 r2.w, r3.xyzx, r3.xyzx
    rsq r2.w, r2.w
    mul r3.xyz, r2.wwww, r3.xyzx
    mul r2.xyz, r1.wwww, r3.xyzx
  else 
    mov r0.zw, v2.xxxy
    mov r1.y, v2.z
  endif 
else 
  mov r0.zw, v2.xxxy
  mov r1.y, v2.z
endif 
add r2.xyz, r2.xyzx, v4.xyzx
ge r1.w, r0.x, l(3.000000)
if_nz r1.w
  eq r0.x, r0.x, l(5.000000)
  if_nz r0.x
    mul r3.xyz, cb2[17].xyzx, cb3[5].yyyy
    mad r3.xyz, cb2[16].xyzx, cb3[5].xxxx, r3.xyzx
    mad r3.xyz, cb2[18].xyzx, cb3[5].zzzz, r3.xyzx
    dp3 r0.x, r3.xyzx, r3.xyzx
    rsq r0.x, r0.x
    mul r3.xyz, r0.xxxx, r3.xyzx
    mul r4.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r4.xyz, r4.xyzx
    mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r4.xyz, r4.xyzx, v3.zzzz
    add r0.x, cb2[15].y, cb2[15].x
    add r0.x, r0.x, cb3[2].x
    add r5.x, r0.x, v3.w
    mad r5.y, r0.x, cb3[3].y, v3.w
    mul r1.w, r5.x, cb3[3].y
    mul r5.z, r1.w, l(0.500000)
    add r5.w, r5.x, -v3.z
    add r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 1.500000)
    frc r5.xyzw, r5.xyzw
    mad r5.xyzw, r5.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
    mul r6.xyzw, |r5.xyzw|, |r5.xyzw|
    mad r5.xyzw, -|r5.xyzw|, l(2.000000, 2.000000, 2.000000, 2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
    mad r5.xyzw, r6.xyzw, r5.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
    add r5.xyzw, r5.xyzw, r5.xyzw
    mul r6.w, r5.z, r5.y
    lt r1.w, r6.w, l(0.000000)
    mov r6.y, -r6.w
    mov r6.xz, l(-1.000000,0,1.000000,0)
    movc r6.xy, r1.wwww, r6.xyxx, r6.zwzz
    mad r1.w, -r5.y, r5.z, r6.x
    mad r1.w, r6.y, r1.w, r6.w
    add r2.w, -r1.w, r6.x
    mad r1.w, r6.y, r2.w, r1.w
    mul r1.w, r1.w, cb3[3].x
    add r2.w, -cb3[0].w, l(1.000000)
    add r3.w, -cb3[3].x, l(1.000000)
    mul r3.w, r3.w, r5.x
    mad r1.w, r1.w, r2.w, r3.w
    mad r2.w, r5.w, cb3[4].x, l(1.000000)
    mul r1.w, r1.w, r2.w
    mul r4.xyz, r1.wwww, r4.xyzx
    mad r4.xyz, r4.xyzx, cb3[2].yyyy, r2.xyzx
    mad r5.x, r0.x, l(0.100000), v3.w
    mul r0.x, cb3[7].x, cb3[15].x
    mad r5.y, r0.x, l(0.100000), v3.w
    add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    frc r5.xy, r5.xyxx
    mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
    mul r6.xy, |r5.xyxx|, |r5.xyxx|
    mad r5.xy, -|r5.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
    mad r5.xy, r6.xyxx, r5.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    add r5.xy, r5.xyxx, r5.xyxx
    mul r5.xy, r5.xyxx, r5.xyxx
    mul r0.x, r5.x, r5.y
    mad r0.x, -r0.x, cb3[7].x, l(1.000000)
    mul r1.w, r5.w, cb3[0].w
    mad r0.x, r1.w, cb3[4].x, r0.x
    mad r3.xyz, r3.xyzx, cb3[5].wwww, -r4.xyzx
    mul r3.xyz, r3.xyzx, cb3[6].yyyy
    mul r3.xyz, r0.xxxx, r3.xyzx
    mad r2.xyz, r3.xyzx, v3.zzzz, r4.xyzx
  else 
    mul r3.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r3.xyz, r3.xyzx
    mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r3.xyz, r3.xyzx, v3.zzzz
    add r0.x, cb2[15].y, cb2[15].x
    add r0.x, r0.x, cb3[2].x
    add r4.x, r0.x, v3.w
    mad r4.y, r0.x, cb3[3].y, v3.w
    mul r0.x, r4.x, cb3[3].y
    mul r4.z, r0.x, l(0.500000)
    add r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    frc r4.xyz, r4.xyzx
    mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r5.xyz, |r4.xyzx|, |r4.xyzx|
    mad r4.xyz, -|r4.xyzx|, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
    mad r4.xyz, r5.xyzx, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    add r4.xyz, r4.xyzx, r4.xyzx
    mul r5.w, r4.z, r4.y
    lt r0.x, r5.w, l(0.000000)
    mov r5.y, -r5.w
    mov r5.xz, l(-1.000000,0,1.000000,0)
    movc r5.xy, r0.xxxx, r5.xyxx, r5.zwzz
    mad r0.x, -r4.y, r4.z, r5.x
    mad r0.x, r5.y, r0.x, r5.w
    add r1.w, -r0.x, r5.x
    mad r0.x, r5.y, r1.w, r0.x
    mul r0.x, r0.x, cb3[3].x
    add r1.w, -cb3[0].w, l(1.000000)
    add r2.w, -cb3[3].x, l(1.000000)
    mul r2.w, r2.w, r4.x
    mad r0.x, r0.x, r1.w, r2.w
    mul r3.xyz, r0.xxxx, r3.xyzx
    mad r2.xyz, r3.xyzx, cb3[2].yyyy, r2.xyzx
  endif 
endif 
dp3 r0.x, r2.xyzx, r2.xyzx
sqrt r0.x, r0.x
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb3[1].z
mad r1.w, -r1.w, l(0.250000), r2.y
max r1.w, r1.w, l(0.000000)
mul r1.w, r1.w, cb3[1].z
ne r2.w, r1.w, l(0.000000)
log r3.x, r1.w
mul r3.x, r3.x, cb3[1].w
exp r3.x, r3.x
movc r1.w, r2.w, r3.x, r1.w
add r3.x, cb2[15].x, cb3[1].x
mad r3.y, cb3[1].x, l(0.800000), cb2[15].y
add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
frc r3.xy, r3.xyxx
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.zw, |r3.xxxy|, |r3.xxxy|
mad r3.xy, -|r3.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mad r3.xy, r3.zwzz, r3.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r3.xy, r3.xyxx, r3.xyxx
mad r2.w, r3.y, r3.y, r3.x
div r3.x, cb3[6].x, cb3[1].z
mad r2.w, cb3[1].y, r2.w, r3.x
mul r1.w, r1.w, r2.w
mad r3.xz, r1.xxzx, r1.wwww, r2.xxzx
mov r3.y, r2.y
dp3 r1.x, r3.xyzx, r3.xyzx
rsq r1.x, r1.x
mul r1.xzw, r1.xxxx, r3.xxyz
mul r1.xzw, r0.xxxx, r1.xxzw
movc r1.xzw, r0.yyyy, r1.xxzw, r2.xxyz
mul r2.xyz, r1.zzzz, cb2[13].xyzx
mad r2.xyz, cb2[12].xyzx, r1.xxxx, r2.xyzx
mad r2.xyz, cb2[14].xyzx, r1.wwww, r2.xyzx
mad r2.xyz, cb2[15].xyzx, v0.wwww, r2.xyzx
add r3.xyz, -r2.xyzx, r14.xyzx
dp3 r0.x, r3.xyzx, r3.xyzx
sqrt r0.x, r0.x
add r0.x, -r0.x, cb0[35].z
div_sat o4.z, r0.x, cb0[35].w
mul r3.xyzw, r1.zzzz, cb2[1].xyzw
mad r3.xyzw, cb2[0].xyzw, r1.xxxx, r3.xyzw
mad r3.xyzw, cb2[2].xyzw, r1.wwww, r3.xyzw
mad o0.xyzw, cb2[3].xyzw, v0.wwww, r3.xyzw
mov r3.y, cb2[16].x
mov r3.z, cb2[17].x
mov r3.x, cb2[18].x
mov r4.y, cb2[16].y
mov r4.z, cb2[17].y
mov r4.x, cb2[18].y
mul r0.xyw, r0.wwww, r4.xyxz
mad r0.xyz, r3.xyzx, r0.zzzz, r0.xywx
mov r3.y, cb2[16].z
mov r3.z, cb2[17].z
mov r3.x, cb2[18].z
mad r0.xyz, r3.xyzx, r1.yyyy, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyz, v1.yyyy, cb2[13].yzxy
mad r1.xyz, cb2[12].yzxy, v1.xxxx, r1.xyzx
mad r1.xyz, cb2[14].yzxy, v1.zzzz, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r0.w, v1.w, cb2[21].w
mul r3.xyz, r0.xyzx, r1.xyzx
mad r3.xyz, r0.zxyz, r1.yzxy, -r3.xyzx
mul r3.xyz, r0.wwww, r3.xyzx
mov o1.x, r1.z
mov o1.y, r3.x
mov o1.z, r0.y
mov o1.w, r2.x
mov o2.x, r1.x
mov o2.y, r3.y
mov o2.z, r0.z
mov o2.w, r2.y
mov o3.x, r1.y
mov o3.y, r3.z
mov o3.z, r0.x
mov o3.w, r2.z
mov o5.xyzw, l(0,0,0,0)
mov o6.xyzw, l(0,0,0,0)
ret 
// Approximately 0 instruction slots used