// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9277ea816985a119-ps.txt
// 3DMigoto: 9277ea816985a119 |    Unity headers extracted from Cloth - Double-Sided VFACE Metallic.shader
//    Shader "Beam Team/Standard/Cloth/Forward/Cloth" {
//      Properties {
//       _Color ("Color", Color) = (1,1,1,1)
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//       _MainTex ("Albedo (RGB)", 2D) = "white" { }
//      [Header(Packed Normals)]  _PackTex ("Gloss (R) Normal X (G) Translucency (B) Normal Y (A)", 2D) = "white" { }
//      [Header(Translucency)]  _TranslucencyIntensity ("Translucency Intensity", Range(0,1)) = 1
//      }
//      Fallback Off
//      SubShader 1/2 {
//        Tags { "QUEUE"="AlphaTest" "RenderType"="Cloth" }
//        Pass 1/1 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "QUEUE"="AlphaTest" "RenderType"="Cloth" }
//          Cull Off
//          GpuProgramID 34360
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 71
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Cloth - Double-Sided VFACE Metallic.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 75 5 0
//   Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" "SUNSHINE_DISABLED" }
//   undeciphered2: 1 5 2 3 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 592
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 80 [unity_DynamicLightmap_HDR]
//   Vector 512 [_Color]
//   Float 528 [_Cutoff]
//   Float 532 [_TranslucencyIntensity]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_PackTex] 2D 2
//   SetTexture 2 [unity_DynamicLightmap] 2D 0
//   SetTexture 3 [unity_DynamicDirectionality] 2D -1
//   SetTexture 4 [unity_DynamicNormal] 2D -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 17 14:46:02 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float     zw
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyz
dcl_input_ps linear v7.zw
dcl_input_ps_sgv v8.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9277ea816985a119-ps.txt
mov r8.xyzw, cb1[4].xyzw
mov r9.xyzw, l(0)
mul r9.x, -r7.x, r7.y
mul r11.xyzw, cb10[0].xyzw, r9.xxxx
mad r11.xyzw, cb10[1].xyzw, r9.yyyy, r11.xyzw
mad r11.xyzw, cb10[2].xyzw, r9.zzzz, r11.xyzw
mad r11.xyzw, cb10[3].xyzw, r9.wwww, r11.xyzw
mul r10.xyzw, cb11[12].xyzw, r11.xxxx
mad r10.xyzw, cb11[13].xyzw, r11.yyyy, r10.xyzw
mad r10.xyzw, cb11[14].xyzw, r11.zzzz, r10.xyzw
mad r10.xyzw, cb11[15].xyzw, r11.wwww, r10.xyzw
add r8.xyz, r8.xyz, -r10.xyz

sample r0.xyzw, v4.xyxx, t0.xyzw, s1
mad r0.w, r0.w, cb0[32].w, -cb0[33].x
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
mul r1.xyz, r0.xyzx, cb0[32].xyzx
mad r0.xyz, r0.xyzx, cb0[32].xyzx, -cb0[2].xyzx
mad r0.xyz, r0.xyzx, l(0.300000, 0.300000, 0.300000, 0.000000), cb0[2].xyzx
mul r0.w, cb0[2].w, l(0.700000)
mul r1.xyz, r0.wwww, r1.xyzx
mov o0.xyz, r1.xyzx
mov o0.w, l(1.000000)
mov o1.xyz, r0.xyzx
sample r2.xyzw, v4.xyxx, t1.xyzw, s2
mul r3.xy, r2.xzxx, v4.zzzz
mov o1.w, r3.x
mov o2.w, l(1.000000)
mad r4.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r0.w, -r2.x, v4.z, l(1.000000)
mul r0.w, r0.w, r0.w
dp2 r1.w, r4.xyxx, r4.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r4.z, r1.w
movc r2.xyz, v8.xxxx, r4.xyzx, -r4.xyzx
dp3 r4.x, v1.xyzx, r2.xyzx
dp3 r4.y, v2.xyzx, r2.xyzx
dp3 r4.z, v3.xyzx, r2.xyzx
mad o2.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
max r1.w, r0.w, l(0.000100)
mul r1.w, r1.w, r1.w
div r1.w, l(2.000000), r1.w
add r1.w, r1.w, l(-2.000000)
max r1.w, r1.w, l(0.000100)
add r2.x, r1.w, l(1.000000)
mov r5.x, v1.w
mov r5.y, v2.w
mov r5.z, v3.w
add r2.yzw, -r5.xxyz, r8.xxyz
dp3 r3.z, r2.yzwy, r2.yzwy
rsq r3.z, r3.z
sample r5.xyzw, v7.zwzz, t3.xyzw, s0
mad r5.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r3.w, r5.xyzx, r5.xyzx
sqrt r3.w, r3.w
max r3.w, r3.w, l(0.001000)
div r5.xyz, r5.xyzx, r3.wwww
mad r2.yzw, r2.yyzw, r3.zzzz, r5.xxyz
dp3 r3.z, r2.yzwy, r2.yzwy
max r3.z, r3.z, l(0.001000)
rsq r3.z, r3.z
mul r2.yzw, r2.yyzw, r3.zzzz
dp3 r3.z, r4.xyzx, r2.yzwy
dp3 r4.x, r4.xyzx, r5.xyzx
max r4.x, r4.x, l(0.000000)
dp3 r2.y, r5.xyzx, r2.yzwy
max r2.y, r2.y, l(0.000000)
max r2.z, r3.z, l(0.000000)
log r2.z, r2.z
mul r1.w, r1.w, r2.z
exp r1.w, r1.w
mul r1.w, r1.w, r2.x
mul r2.x, r2.y, r2.y
mad r0.w, r2.x, r3.x, r0.w
mad o3.w, -r3.y, cb0[33].y, l(1.000000)
mul r0.w, r0.w, r2.y
mad r0.w, r0.w, l(8.000000), l(0.000100)
div r0.w, r1.w, r0.w
max r1.w, r0.w, l(0.000100)
sqrt r1.w, r1.w
eq r2.x, cb0[3].w, l(0.000000)
movc r0.w, r2.x, r1.w, r0.w
mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
sample r2.xyzw, v7.zwzz, t2.xyzw, s0
mul r0.w, r2.w, cb0[5].x
mul r2.xyz, r2.xyzx, r0.wwww
log r2.xyz, r2.xyzx
mul r2.xyz, r2.xyzx, cb0[5].yyyy
exp r2.xyz, r2.xyzx
sample r6.xyzw, v7.zwzz, t4.xyzw, s0
mad r3.xyz, r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r3.xyzx, r5.xyzx
max r0.w, r0.w, l(0.125000)
div r2.xyz, r2.xyzx, r0.wwww
mul r3.xyz, r3.wwww, r2.xyzx
add r0.w, -r3.w, l(1.000000)
mul r2.xyz, r0.wwww, r2.xyzx
mul r2.xyz, r4.xxxx, r2.xyzx
mul r0.xyz, r0.xyzx, r3.xyzx
mul r0.xyz, r4.xxxx, r0.xyzx
mad r0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
exp o3.xyz, -r0.xyzx
ret 
// Approximately 0 instruction slots used