// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 45c50229ab63d0f5-ps.txt
// 3DMigoto: 45c50229ab63d0f5 |    Unity headers extracted from Skydome.shader
//    Shader "Beam Team/Atmosphere/Skydome" {
//      Properties {
//       _Color ("Stars Color", Color) = (0,0,0,1)
//       _StarTex ("Stars (RGB)", 2D) = "white" { }
//       _Speed ("Stars Rotation Speed", Float) = 0.1
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Pass 1/1 {
//          Tags { "QUEUE"="Background" "RenderType"="Opaque" }
//          ZWrite Off
//          Cull Front
//          GpuProgramID 32681
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 3
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Skydome.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 35 2 0
//   undeciphered2: 1 2 2 2 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 224
//   Vector 144 [_Color]
//   Vector 180 [_SunPosition] 3
//   Vector 192 [_SunColor] 3
//   Float 204 [_StormFade]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   SetTexture 0 [_StarTex] 2D 0
//   SetTexture 1 [_SkyMap] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 17 14:48:01 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// TEXCOORD                 2   xy          2     NONE   float   xy  
// TEXCOORD                 3   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 45c50229ab63d0f5-ps.txt
mov r5.xyzw, cb1[4].xyzw
mov r6.xyzw, l(0)
mul r6.x, -r4.x, r4.y
mul r8.xyzw, cb10[0].xyzw, r6.xxxx
mad r8.xyzw, cb10[1].xyzw, r6.yyyy, r8.xyzw
mad r8.xyzw, cb10[2].xyzw, r6.zzzz, r8.xyzw
mad r8.xyzw, cb10[3].xyzw, r6.wwww, r8.xyzw
mul r7.xyzw, cb11[12].xyzw, r8.xxxx
mad r7.xyzw, cb11[13].xyzw, r8.yyyy, r7.xyzw
mad r7.xyzw, cb11[14].xyzw, r8.zzzz, r7.xyzw
mad r7.xyzw, cb11[15].xyzw, r8.wwww, r7.xyzw
add r5.xyz, r5.xyz, -r7.xyz

sample r0.xyzw, v2.xyxx, t0.xyzw, s0
mad r0.xyz, r0.xyzx, cb0[9].xyzx, l(0.000000, 0.002000, 0.003500, 0.000000)
add r0.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r1.xz, -v1.xxzx, r5.xxzx
mov r1.y, -v1.y
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xzw, r0.wwww, r1.xxyz
mad r0.w, -r1.y, r0.w, l(1.000000)
div r2.xy, -r1.xwxx, r0.wwww
mad r2.xy, r2.xyxx, l(0.454000, 0.454000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
sample r2.xyzw, r2.xyxx, t1.xyzw, s1
add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, -r3.xyzx, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.xyz, -r2.xyzx, r0.xyzx
add r0.w, cb0[11].z, l(-10.000000)
mul_sat r0.w, r0.w, l(0.100000)
add r0.w, -r0.w, l(1.000000)
mad r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
add r0.w, -cb0[11].z, l(100.000000)
mul_sat r0.w, r0.w, l(0.00909090880)
add r0.w, -r0.w, l(1.000000)
mad r2.xyz, r0.wwww, l(0.0910000056, 0.089000, 0.088000, 0.000000), l(0.009000, 0.011000, 0.012000, 0.000000)
add r2.xyz, -r0.xyzx, r2.xyzx
mad r0.xyz, cb0[12].wwww, r2.xyzx, r0.xyzx
dp3 r0.w, cb0[11].yzwy, cb0[11].yzwy
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, cb0[11].yzwy
dp3 r0.w, r2.xyzx, r1.xzwx
mad r1.x, -r0.w, l(-1.980000), l(1.980100)
mad r0.w, r0.w, r0.w, l(1.000000)
mul r0.w, r0.w, l(0.0100164423)
log r1.x, r1.x
mul r1.x, r1.x, l(0.909203291)
exp r1.x, r1.x
max r1.x, r1.x, l(0.000100)
div r0.w, r0.w, r1.x
mad o0.xyz, r0.wwww, cb0[12].xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used