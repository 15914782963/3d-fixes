// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe ed4fc5e39cafa2c8-vs_replace.txt
// 3DMigoto: ed4fc5e39cafa2c8 |    Unity headers extracted from Other - Crab Hole.shader
//    Shader "Beam Team/Standard/Other/Crab Hole" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _MainTex ("Base (RGB) RefStrength (A)", 2D) = "white" { }
//       _BumpTex ("Normalmap", 2D) = "bump" { }
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//      }
//      Fallback Off
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="AlphaTest" "FORCENOSHADOWCASTING"="true" "RenderType"="TransparentCutout" }
//        Pass 1/1 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "QUEUE"="AlphaTest" "FORCENOSHADOWCASTING"="true" "RenderType"="TransparentCutout" }
//          GpuProgramID 10165
//          Program "vp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 319
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Other - Crab Hole.shader.decompressed:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 38 0 0
//   Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" "SUNSHINE_FILTER_HARD" "SHADER_QUALITY_ULTRA" }
//   undeciphered2: 1 0 3 0 0
//   undeciphered3: 143 5 0 0 2 1 1 2 3 4 7 8
//   ConstBuffer "$Globals" 608
//   Vector 560 [_MainTex_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityPerDraw" 352
//   Vector 336 [unity_WorldTransformParams]
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [_Object2World]
//   Matrix 256 [_World2Object]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

// ---- Created with 3Dmigoto v1.2.36 on Fri May 06 11:06:10 2016
cbuffer cb2 : register(b2)
{
  float4 cb2[22];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[9];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[36];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);



cbuffer UnityPerDraw : register(b11) {
	float4x4 glstate_matrix_mvp;
	float4x4 glstate_matrix_modelview0;
	float4x4 glstate_matrix_invtrans_modelview0;
	#define UNITY_MATRIX_MVP glstate_matrix_mvp
	#define UNITY_MATRIX_MV glstate_matrix_modelview0
	#define UNITY_MATRIX_IT_MV glstate_matrix_invtrans_modelview0

	uniform float4x4 _Object2World;
	uniform float4x4 _World2Object;
	uniform float4 unity_LODFade; // x is the fade value ranging within [0,1]. y is x quantized into 16 levels
	uniform float4 unity_WorldTransformParams; // w is usually 1.0, or -1.0 for odd-negative scale transforms
}


#include <ShaderFixes/matrix.hlsl>

void main( 
  float4 v0 : POSITION0,
  float4 v1 : TANGENT0,
  float3 v2 : NORMAL0,
  float4 v3 : TEXCOORD0,
  float4 v4 : TEXCOORD1,
  float4 v5 : TEXCOORD2,
  float4 v6 : TEXCOORD3,
  float4 v7 : COLOR0,
  out float4 o0 : SV_POSITION0,
  out float2 o1 : TEXCOORD0,
  out float p1 : TEXCOORD4,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3,
  out float4 o5 : TEXCOORD5,
  out float4 o6 : TEXCOORD6,
  out float4 o7 : TEXCOORD7)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
float separation = stereo.x, convergence = stereo.y, eye = stereo.z;

// Unity reflection/specular fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe ed4fc5e39cafa2c8-vs_replace.txt
float4 _WorldSpaceCameraPos = cb1[4];
float4 clip_space_adj = float4(-separation * convergence, 0, 0, 0);
float4 local_space_adj = mul(inverse(glstate_matrix_mvp), clip_space_adj);
float4 world_space_adj = mul(_Object2World, local_space_adj);
_WorldSpaceCameraPos.xyz -= world_space_adj.xyz;

  r0.xyzw = cb2[1].xyzw * v0.yyyy;
  r0.xyzw = cb2[0].xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = cb2[2].xyzw * v0.zzzz + r0.xyzw;
  o0.xyzw = cb2[3].xyzw * v0.wwww + r0.xyzw;
  r0.xyzw = cb2[13].yxyz * v0.yyyy;
  r0.xyzw = cb2[12].yxyz * v0.xxxx + r0.xyzw;
  r0.xyzw = cb2[14].yxyz * v0.zzzz + r0.xyzw;
  p1.x = cb2[15].y * v0.w + r0.x;
  r0.xyz = cb2[15].xyz * v0.www + r0.yzw;
  o1.xy = v3.xy * cb0[35].xy + cb0[35].zw;
  r1.x = cb2[16].x * v2.x;
  r1.y = cb2[17].x * v2.x;
  r1.z = cb2[18].x * v2.x;
  r2.x = cb2[16].y * v2.y;
  r2.y = cb2[17].y * v2.y;
  r2.z = cb2[18].y * v2.y;
  r1.xyz = r2.xyz + r1.xyz;
  r2.x = cb2[16].z * v2.z;
  r2.y = cb2[17].z * v2.z;
  r2.z = cb2[18].z * v2.z;
  r1.xyz = r2.xyz + r1.xyz;
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = rsqrt(r0.w);
  r1.xyz = r1.xyz * r0.www;
  o2.z = r1.x;
  r2.xyz = cb2[13].xyz * v1.yyy;
  r2.xyz = cb2[12].xyz * v1.xxx + r2.xyz;
  r2.xyz = cb2[14].xyz * v1.zzz + r2.xyz;
  r0.w = dot(r2.xyz, r2.xyz);
  r0.w = rsqrt(r0.w);
  r2.xyz = r2.xyz * r0.www;
  r3.xyz = r2.yzx * r1.zxy;
  r3.xyz = r1.yzx * r2.zxy + -r3.xyz;
  r0.w = cb2[21].w * v1.w;
  r3.xyz = r3.xyz * r0.www;
  o2.y = r3.x;
  o2.w = r0.x;
  o2.x = r2.x;
  o3.z = r1.y;
  o3.x = r2.y;
  o3.y = r3.y;
  o3.w = r0.y;
  o4.z = r1.z;
  o4.x = r2.z;
  o4.w = r0.z;
  r0.xyz = _WorldSpaceCameraPos.xyz + -r0.xyz;
  o4.y = r3.z;
  o6.y = dot(r0.xyz, r3.xyz);
  o5.xyzw = float4(0,0,0,0);
  o6.x = dot(r0.xyz, r2.xyz);
  o6.z = dot(r0.xyz, r1.xyz);
  o7.xyzw = float4(0,0,0,0);
  return;
}

/****************************** COMPILE WARNINGS ******************************
C:\Steam\SteamApps\common\Stranded Deep\ShaderFixes\ed4fc5e39cafa2c8-vs_replace.txt(109,14-15): warning X3578: Output value 'o6' is not completely initialized

****************************** COMPILE WARNINGS ******************************/
