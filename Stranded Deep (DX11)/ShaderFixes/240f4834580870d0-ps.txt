// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 240f4834580870d0-ps.txt
// 3DMigoto: 240f4834580870d0 |    Unity headers extracted from Standard - Cull Off.shader
//    Shader "Custom/Standard - Cull Off" {
//      Properties {
//       _Color ("Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Albedo (RGB)", 2D) = "white" { }
//       _BumpMap ("Normal (RGB)", 2D) = "bump" { }
//       _Glossiness ("Smoothness", Range(0.000000,1.000000)) = 0.500000
//       _Metallic ("Metallic", Range(0.000000,1.000000)) = 0.000000
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          Cull Off
//          GpuProgramID 56105
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 45
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard - Cull Off.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 149 5 4
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
//   undeciphered2: 1 7 4 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 176
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 80 [unity_DynamicLightmap_HDR]
//   Vector 96 [_LightColor0]
//   Float 128 [_Glossiness]
//   Float 132 [_Metallic]
//   Vector 144 [_Color]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 3
//   SetTexture 1 [_BumpMap] 2D 4
//   SetTexture 2 [_ShadowMapTexture] 2D 2
//   SetTexture 3 [unity_DynamicLightmap] 2D 0
//   SetTexture 4 [unity_DynamicDirectionality] 2D -1
//   SetTexture 5 [unity_SpecCube0] CUBE 1
//   SetTexture 6 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Dec 10 03:48:15 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xy w
// TEXCOORD                 7   xyzw        6     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyw
dcl_input_ps linear v6.zw
dcl_output o0.xyzw
dcl_temps 20
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r15.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 240f4834580870d0-ps.txt
mov r16.xyzw, cb1[4].xyzw
mov r17.xyzw, l(0)
mul r17.x, -r15.x, r15.y
mul r19.xyzw, cb10[0].xyzw, r17.xxxx
mad r19.xyzw, cb10[1].xyzw, r17.yyyy, r19.xyzw
mad r19.xyzw, cb10[2].xyzw, r17.zzzz, r19.xyzw
mad r19.xyzw, cb10[3].xyzw, r17.wwww, r19.xyzw
mul r18.xyzw, cb11[12].xyzw, r19.xxxx
mad r18.xyzw, cb11[13].xyzw, r19.yyyy, r18.xyzw
mad r18.xyzw, cb11[14].xyzw, r19.zzzz, r18.xyzw
mad r18.xyzw, cb11[15].xyzw, r19.wwww, r18.xyzw
add r16.xyz, r16.xyz, -r18.xyz

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r16.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
sample r3.xyzw, v1.xyxx, t0.xyzw, s3
mul r4.xyz, r3.xyzx, cb0[9].xyzx
sample r5.xyzw, v1.xyxx, t1.xyzw, s4
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
div r6.xy, v5.xyxx, v5.wwww
sample r6.xyzw, r6.xyxx, t2.xyzw, s2
dp3 r7.x, v2.xyzx, r5.xyzx
dp3 r7.y, v3.xyzx, r5.xyzx
dp3 r7.z, v4.xyzx, r5.xyzx
dp3 r1.w, r7.xyzx, cb2[0].xyzx
max r1.w, r1.w, l(0.000000)
add r2.w, -cb0[8].x, l(1.000000)
dp3 r3.w, -r2.xyzx, r7.xyzx
add r3.w, r3.w, r3.w
mad r5.xyz, r7.xyzx, -r3.wwww, -r2.xyzx
mul r6.xyz, r6.xxxx, cb0[6].xyzx
sample r8.xyzw, v6.zwzz, t3.xyzw, s0
mul r3.w, r8.w, cb0[5].x
mul r8.xyz, r8.xyzx, r3.wwww
log r8.xyz, r8.xyzx
mul r8.xyz, r8.xyzx, cb0[5].yyyy
exp r8.xyz, r8.xyzx
sample r9.xyzw, v6.zwzz, t4.xyzw, s0
add r9.xyz, r9.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r3.w, r7.xyzx, r9.xyzx
add r3.w, r3.w, l(0.500000)
mul r8.xyz, r3.wwww, r8.xyzx
max r3.w, r9.w, l(0.000100)
div r8.xyz, r8.xyzx, r3.wwww
lt r3.w, l(0.000000), cb3[2].w
if_nz r3.w
  dp3 r3.w, r5.xyzx, r5.xyzx
  rsq r3.w, r3.w
  mul r9.xyz, r3.wwww, r5.xyzx
  add r10.xyz, -r0.xyzx, cb3[0].xyzx
  div r10.xyz, r10.xyzx, r9.xyzx
  add r11.xyz, -r0.xyzx, cb3[1].xyzx
  div r11.xyz, r11.xyzx, r9.xyzx
  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  min r3.w, r10.y, r10.x
  min r3.w, r10.z, r3.w
  add r10.xyz, r0.xyzx, -cb3[2].xyzx
  mad r9.xyz, r9.xyzx, r3.wwww, r10.xyzx
else 
  mov r9.xyz, r5.xyzx
endif 
mad r3.w, -r2.w, l(0.700000), l(1.700000)
mul r3.w, r2.w, r3.w
mul r3.w, r3.w, l(6.000000)
sample_l r9.xyzw, r9.xyzx, t5.xyzw, s1, r3.w
log r4.w, r9.w
mul r4.w, r4.w, cb3[3].y
exp r4.w, r4.w
mul r4.w, r4.w, cb3[3].x
mul r10.xyz, r9.xyzx, r4.wwww
lt r5.w, cb3[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb3[6].w
  if_nz r5.w
    dp3 r5.w, r5.xyzx, r5.xyzx
    rsq r5.w, r5.w
    mul r11.xyz, r5.wwww, r5.xyzx
    add r12.xyz, -r0.xyzx, cb3[4].xyzx
    div r12.xyz, r12.xyzx, r11.xyzx
    add r13.xyz, -r0.xyzx, cb3[5].xyzx
    div r13.xyz, r13.xyzx, r11.xyzx
    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
    min r5.w, r12.y, r12.x
    min r5.w, r12.z, r5.w
    add r0.xyz, r0.xyzx, -cb3[6].xyzx
    mad r5.xyz, r11.xyzx, r5.wwww, r0.xyzx
  endif 
  sample_l r5.xyzw, r5.xyzx, t6.xyzw, s1, r3.w
  log r0.x, r5.w
  mul r0.x, r0.x, cb3[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r5.xyzx, r0.xxxx
  mad r5.xyz, r4.wwww, r9.xyzx, -r0.xyzx
  mad r10.xyz, cb3[1].wwww, r5.xyzx, r0.xyzx
endif 
dp3 r0.x, r7.xyzx, r7.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r7.xyzx
mad r3.xyz, r3.xyzx, cb0[9].xyzx, -cb0[2].xyzx
mad r3.xyz, cb0[8].yyyy, r3.xyzx, cb0[2].xyzx
mad r3.w, -cb0[8].y, cb0[2].w, cb0[2].w
mul r4.xyz, r3.wwww, r4.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r0.xyzx, r1.xyzx
dp3 r0.x, r0.xyzx, r2.xyzx
dp3 r0.y, cb2[0].xyzx, r1.xyzx
max r0.xyw, r0.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r2.w, r2.w
mad r1.x, -r2.w, r2.w, l(1.000000)
mad r1.y, r0.x, r1.x, r0.z
mad r1.x, r1.w, r1.x, r0.z
mul r1.x, r0.x, r1.x
mad r1.x, r1.w, r1.y, r1.x
add r1.x, r1.x, l(0.000010)
div r1.x, l(2.000000), r1.x
mul r1.y, r0.z, r0.z
mul r0.w, r0.w, r0.w
mad r2.xy, r0.zzzz, r0.zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
mad r0.w, r0.w, r2.x, l(1.000000)
mul r1.z, r0.w, l(3.14159274)
mad r0.w, r1.z, r0.w, l(1.000000012E-007)
div r0.w, r1.y, r0.w
add r1.y, -r1.w, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
add r0.x, -r0.x, l(1.000000)
mul r1.z, r0.x, r0.x
mul r1.z, r1.z, r1.z
mul r0.xw, r0.xxxw, r1.zzzx
mul r1.z, r0.y, r0.y
dp2 r1.z, r1.zzzz, r2.wwww
add r1.z, r1.z, l(-0.500000)
mad r1.y, r1.z, r1.y, l(1.000000)
mad r1.z, r1.z, r0.x, l(1.000000)
mul r1.y, r1.z, r1.y
mul r0.w, r0.w, l(0.785398185)
eq r1.x, cb0[3].w, l(0.000000)
max r1.z, r0.w, l(0.000100)
sqrt r1.z, r1.z
movc r0.w, r1.x, r1.z, r0.w
mul r0.w, r1.w, r0.w
max r0.w, r0.w, l(0.000000)
mul r1.y, r1.w, r1.y
mul r0.z, r0.z, r2.w
mad r0.z, -r0.z, l(0.280000), l(1.000000)
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
movc r0.z, r1.x, r0.z, r1.z
dp3 r1.x, r3.xyzx, r3.xyzx
ne r1.x, r1.x, l(0.000000)
and r1.x, r1.x, l(0x3f800000)
mul r0.w, r0.w, r1.x
add r1.x, -r3.w, cb0[8].x
add_sat r1.x, r1.x, l(1.000000)
mad r1.yzw, r6.xxyz, r1.yyyy, r8.xxyz
mul r2.xyz, r6.xyzx, r0.wwww
add r0.y, -r0.y, l(1.000000)
mul r0.w, r0.y, r0.y
mul r0.w, r0.w, r0.w
mul r0.y, r0.y, r0.w
add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r5.xyz, r5.xyzx, r0.yyyy, r3.xyzx
mul r2.xyz, r2.xyzx, r5.xyzx
mad r1.yzw, r4.xxyz, r1.yyzw, r2.xxyz
mul r0.yzw, r10.xxyz, r0.zzzz
add r2.xyz, -r3.xyzx, r1.xxxx
mad r2.xyz, r0.xxxx, r2.xyzx, r3.xyzx
mad o0.xyz, r0.yzwy, r2.xyzx, r1.yzwy
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used