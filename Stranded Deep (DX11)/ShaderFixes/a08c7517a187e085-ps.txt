// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a08c7517a187e085-ps.txt
// 3DMigoto: a08c7517a187e085 |    Unity headers extracted from BeamUnderWaterPostEffect.shader
//    Shader "Ceto/BeamUnderWaterPostEffect" {
//      Properties {
//       _MainTex ("Base (RGB)", 2D) = "black" { }
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Pass 1/2 {
//          ZTest Always
//          ZWrite Off
//          Cull Off
//          GpuProgramID 46044
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 37
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from BeamUnderWaterPostEffect.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 29 3 0
//   Keywords { "INTRO" }
//   undeciphered2: 1 3 2 3 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 896
//   Float 732 [_BelowVisibility]
//   Vector 768 [_Beam_UnderwaterColor]
//   Float 892 [_StormFade]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 2
//   SetTexture 1 [Ceto_OceanMask] 2D 0
//   SetTexture 2 [_MainTex] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 10 17:34:06 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[56], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a08c7517a187e085-ps.txt
mov r4.xyzw, cb1[4].xyzw
mov r5.xyzw, l(0)
mul r5.x, -r3.x, r3.y
mul r7.xyzw, cb10[0].xyzw, r5.xxxx
mad r7.xyzw, cb10[1].xyzw, r5.yyyy, r7.xyzw
mad r7.xyzw, cb10[2].xyzw, r5.zzzz, r7.xyzw
mad r7.xyzw, cb10[3].xyzw, r5.wwww, r7.xyzw
mul r6.xyzw, cb11[12].xyzw, r7.xxxx
mad r6.xyzw, cb11[13].xyzw, r7.yyyy, r6.xyzw
mad r6.xyzw, cb11[14].xyzw, r7.zzzz, r6.xyzw
mad r6.xyzw, cb11[15].xyzw, r7.wwww, r6.xyzw
add r4.xyz, r4.xyz, -r6.xyz

sample r0.xyzw, v1.zwzz, t0.xyzw, s2
mad r0.x, cb1[7].x, r0.x, cb1[7].y
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
div r0.y, cb1[5].z, cb0[45].w
mul_sat r0.x, r0.y, r0.x
sample r1.xyzw, v1.zwzz, t1.xyzw, s0
mul r0.y, r0.y, r1.y
min r0.x, r0.y, r0.x
mul r0.yzw, r0.xxxx, v2.xxyz
mad r1.xyz, r0.xxxx, v2.xyzx, r4.xyzx
dp3 r0.x, r0.yzwy, r0.yzwy
sqrt r0.x, r0.x
div_sat r0.x, r0.x, cb0[45].w
mad r0.yzw, cb0[55].wwww, l(0.000000, 0.350000024, 0.0500000119, 0.000000), l(0.000000, 0.500000, 0.900000, 1.000000)
div_sat r2.xyz, r0.xxxx, r0.yzwy
add r1.xzw, -r1.xxyz, r4.xxyz
mad r0.x, cb0[45].w, l(3.000000), r1.y
dp3 r1.x, r1.xzwx, r1.xzwx
rsq r1.x, r1.x
mul r1.x, r1.x, r1.z
mad r1.xy, r1.xxxx, l(-0.500000, -0.700000, 0.000000, 0.000000), l(0.500000, 0.300000, 0.000000, 0.000000)
mul r1.y, r1.y, r1.y
mov_sat r1.x, r1.x
mul r1.yzw, r1.yyyy, l(0.000000, 0.050000, 0.030000, 0.000000)
mad r0.yzw, r1.yyzw, r0.yyzw, cb0[48].xxyz
mul r0.yzw, r1.xxxx, r0.yyzw
sample r1.xyzw, v1.xyxx, t2.xyzw, s1
mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), -r1.xxyz
mad r0.yzw, r2.xxyz, r0.yyzw, r1.xxyz
mov o0.w, r1.w
mul r1.x, cb0[45].w, l(3.000000)
div_sat r0.x, r0.x, r1.x
mul r0.xyz, r0.xxxx, r0.yzwy
mul o0.xyz, r0.xyzx, l(1.000000, 0.500000, 0.200000, 0.000000)
ret 
// Approximately 0 instruction slots used