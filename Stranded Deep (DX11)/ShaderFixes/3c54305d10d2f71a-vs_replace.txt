// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe 3c54305d10d2f71a-vs_replace.txt
// 3DMigoto: 3c54305d10d2f71a |    Unity headers extracted from Cloth - Forward.shader
//    Shader "Beam Team/Standard/Cloth/Forward/Cloth" {
//      Properties {
//       _Color ("Color", Color) = (1,1,1,1)
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//       _MainTex ("Albedo (RGB)", 2D) = "white" { }
//      [Header(Packed Normals)]  _PackTex ("Gloss (R) Normal X (G) Translucency (B) Normal Y (A)", 2D) = "white" { }
//      [Header(Translucency)]  _TranslucencyColor ("Translucency Tint", Color) = (0.73,0.85,0.41,1)
//       _TranslucencyIntensity ("Translucency Intensity", Range(0,5)) = 1
//       _TranslucencyViewDependency ("Translucency View Dependency", Range(0,1)) = 0.5
//      }
//      Fallback Off
//      SubShader 1/2 {
//        Tags { "QUEUE"="AlphaTest" "RenderType"="Cloth" }
//        Pass 1/1 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "SHADOWSUPPORT"="true" "RenderType"="Cloth" }
//          Cull Off
//          GpuProgramID 16664
//          Program "vp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 27
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Cloth - Forward.shader.decompressed:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 55 0 0
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "SUNSHINE_FILTER_HARD" }
//   undeciphered2: 1 0 4 0 0
//   undeciphered3: 139 4 0 0 1 2 3 4 7 8
//   ConstBuffer "$Globals" 624
//   Vector 576 [_AfsSpecFade] 2
//   Matrix 192 [sunshine_CameraVToSunVP]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 720
//   Vector 656 [unity_SHBr]
//   Vector 672 [unity_SHBg]
//   Vector 688 [unity_SHBb]
//   Vector 704 [unity_SHC]
//   ConstBuffer "UnityPerDraw" 352
//   Vector 336 [unity_WorldTransformParams]
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 64 [glstate_matrix_modelview0]
//   Matrix 192 [_Object2World]
//   Matrix 256 [_World2Object]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

// ---- Created with 3Dmigoto v1.2.36 on Fri May 06 11:01:32 2016
cbuffer cb3 : register(b3)
{
  float4 cb3[22];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[45];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[9];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[37];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);



cbuffer UnityPerDraw : register(b11) {
	float4x4 glstate_matrix_mvp;
	float4x4 glstate_matrix_modelview0;
	float4x4 glstate_matrix_invtrans_modelview0;
	#define UNITY_MATRIX_MVP glstate_matrix_mvp
	#define UNITY_MATRIX_MV glstate_matrix_modelview0
	#define UNITY_MATRIX_IT_MV glstate_matrix_invtrans_modelview0

	uniform float4x4 _Object2World;
	uniform float4x4 _World2Object;
	uniform float4 unity_LODFade; // x is the fade value ranging within [0,1]. y is x quantized into 16 levels
	uniform float4 unity_WorldTransformParams; // w is usually 1.0, or -1.0 for odd-negative scale transforms
}


#include <ShaderFixes/matrix.hlsl>

void main( 
  float4 v0 : POSITION0,
  float4 v1 : TANGENT0,
  float3 v2 : NORMAL0,
  float4 v3 : TEXCOORD0,
  out float4 o0 : SV_POSITION0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3,
  out float4 o5 : TEXCOORD4,
  out float4 o6 : TEXCOORD5,
  out float4 o7 : TEXCOORD6)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
float separation = stereo.x, convergence = stereo.y, eye = stereo.z;

// Unity reflection/specular fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe 3c54305d10d2f71a-vs_replace.txt
float4 _WorldSpaceCameraPos = cb1[4];
float4 clip_space_adj = float4(-separation * convergence, 0, 0, 0);
float4 local_space_adj = mul(inverse(glstate_matrix_mvp), clip_space_adj);
float4 world_space_adj = mul(_Object2World, local_space_adj);
_WorldSpaceCameraPos.xyz -= world_space_adj.xyz;

  r0.xyzw = cb3[1].xyzw * v0.yyyy;
  r0.xyzw = cb3[0].xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = cb3[2].xyzw * v0.zzzz + r0.xyzw;
  r0.xyzw = cb3[3].xyzw * v0.wwww + r0.xyzw;
  o0.xyzw = r0.xyzw;

// Automatic vertex shader halo fix inserted with DarkStarSword's hlsltool.py:
// hlsltool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed --fxc /home/dss/fxc.exe 3c54305d10d2f71a-vs_replace.txt
if (r0.w != 1.0) { r0.x += separation * (r0.w - convergence); }

  r1.x = cb3[16].x * v2.x;
  r1.y = cb3[17].x * v2.x;
  r1.zw = cb3[18].xx * v2.xx;
  r2.x = cb3[16].y * v2.y;
  r2.y = cb3[17].y * v2.y;
  r2.zw = cb3[18].yy * v2.yy;
  r1.xyzw = r2.xyzw + r1.xyzw;
  r2.x = cb3[16].z * v2.z;
  r2.y = cb3[17].z * v2.z;
  r2.zw = cb3[18].zz * v2.zz;
  r1.xyzw = r2.xyzw + r1.xyzw;
  r2.x = dot(r1.xyw, r1.xyw);
  r2.x = rsqrt(r2.x);
  r1.xyzw = r2.xxxx * r1.xyzw;
  r2.xyz = cb3[13].yzx * v1.yyy;
  r2.xyz = cb3[12].yzx * v1.xxx + r2.xyz;
  r2.xyz = cb3[14].yzx * v1.zzz + r2.xyz;
  r2.w = dot(r2.xyz, r2.xyz);
  r2.w = rsqrt(r2.w);
  r2.xyz = r2.xyz * r2.www;
  r3.xyz = r2.xyz * r1.wxy;
  r3.xyz = r1.ywx * r2.yzx + -r3.xyz;
  r2.w = cb3[21].w * v1.w;
  r3.xyz = r3.xyz * r2.www;
  o1.y = r3.x;
  o1.z = r1.x;
  o1.x = r2.z;
  r4.xyz = cb3[13].xyz * v0.yyy;
  r4.xyz = cb3[12].xyz * v0.xxx + r4.xyz;
  r4.xyz = cb3[14].xyz * v0.zzz + r4.xyz;
  r4.xyz = cb3[15].xyz * v0.www + r4.xyz;
  o1.w = r4.x;
  o2.x = r2.x;
  o3.x = r2.y;
  o2.z = r1.y;
  o2.y = r3.y;
  o3.y = r3.z;
  o2.w = r4.y;
  o3.w = r4.z;
  r2.xyz = _WorldSpaceCameraPos.xyz + -r4.xyz;
  r2.x = dot(r2.xyz, r2.xyz);
  r2.x = sqrt(r2.x);
  r2.x = cb0[36].x + -r2.x;
  o4.z = saturate(r2.x / cb0[36].y);
  o3.z = r1.w;
  o4.xy = v3.xy;
  r2.xyz = cb3[5].xyz * v0.yyy;
  r2.xyz = cb3[4].xyz * v0.xxx + r2.xyz;
  r2.xyz = cb3[6].xyz * v0.zzz + r2.xyz;
  r2.xyz = cb3[7].xyz * v0.www + r2.xyz;
  r3.xyzw = cb0[13].xyzw * r2.yyyy;
  r3.xyzw = cb0[12].xyzw * r2.xxxx + r3.xyzw;
  r2.xyzw = cb0[14].xyzw * r2.zzzz + r3.xyzw;
  o5.xyzw = cb0[15].xyzw + r2.xyzw;
  r2.x = r1.y * r1.y;
  r2.x = r1.x * r1.x + -r2.x;
  r1.xyzw = r1.xyzw * r1.ywzx;
  r3.x = dot(cb2[41].xyzw, r1.xyzw);
  r3.y = dot(cb2[42].xyzw, r1.xyzw);
  r3.z = dot(cb2[43].xyzw, r1.xyzw);
  o6.xyz = cb2[44].xyz * r2.xxx + r3.xyz;
  r0.y = cb1[5].x * r0.y;
  r1.xzw = float3(0.5,0.5,0.5) * r0.xwy;
  o7.zw = r0.zw;
  o7.xy = r1.xw + r1.zz;
  return;
}

/****************************** COMPILE WARNINGS ******************************
C:\Steam\SteamApps\common\Stranded Deep\ShaderFixes\3c54305d10d2f71a-vs_replace.txt(119,14-15): warning X3578: Output value 'o4' is not completely initialized
C:\Steam\SteamApps\common\Stranded Deep\ShaderFixes\3c54305d10d2f71a-vs_replace.txt(121,14-15): warning X3578: Output value 'o6' is not completely initialized

****************************** COMPILE WARNINGS ******************************/
