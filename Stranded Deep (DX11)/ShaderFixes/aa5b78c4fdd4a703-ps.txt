// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed aa5b78c4fdd4a703-ps.txt
// 3DMigoto: aa5b78c4fdd4a703 |    Unity headers extracted from Rocks - MaskyMix Standard.shader
//    Shader "Volund/Standard MaskyMix Scatter (Specular, Surface)" {
//      Properties {
//       _Color ("Color", Color) = (1,1,1,1)
//       _MainTex ("Albedo", 2D) = "white" { }
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//       _Glossiness ("Smoothness", Range(0,1)) = 0.5
//       _SpecColor ("Specular", Color) = (0.2,0.2,0.2,1)
//       _SpecGlossMap ("Specular", 2D) = "white" { }
//       _BumpScale ("Scale", Float) = 1
//       _BumpMap ("Normal Map", 2D) = "bump" { }
//       _Parallax ("Height Scale", Range(0.005,0.08)) = 0.02
//       _ParallaxMap ("Height Map", 2D) = "black" { }
//       _OcclusionStrength ("Strength", Range(0,1)) = 1
//       _OcclusionMap ("Occlusion", 2D) = "white" { }
//       _EmissionColor ("Color", Color) = (0,0,0,1)
//       _EmissionMap ("Emission", 2D) = "white" { }
//       _DetailMask ("Detail Mask", 2D) = "white" { }
//       _DetailAlbedoMap ("Detail Albedo x2", 2D) = "grey" { }
//       _DetailNormalMapScale ("Scale", Float) = 1
//       _DetailNormalMap ("Normal Map", 2D) = "bump" { }
//      [Enum(UV0,0,UV1,1)]  _UVSec ("UV Set for secondary textures", Float) = 0
//      [HideInInspector]  _Mode ("__mode", Float) = 0
//      [HideInInspector]  _SrcBlend ("__src", Float) = 1
//      [HideInInspector]  _DstBlend ("__dst", Float) = 0
//      [HideInInspector]  _ZWrite ("__zw", Float) = 1
//      [HideInInspector]  _SmoothnessInAlbedo ("__smoothnessinalbedo", Float) = 0
//       _MaskyMixAlbedo ("MaskyMix Albedo (RGB) Gloss(A)", 2D) = "white" { }
//       _MaskyMixUVTile ("MaskyMix UV Tile", Range(1,200)) = 10
//       _MaskyMixColor ("MaskyMix Color (2x)", Color) = (0.5,0.5,0.5,0.5)
//       _MaskyMixSpecColor ("MaskyMix Spec Color", Color) = (0.2,0.2,0.2,1)
//       _MaskyMixBumpMap ("MaskyMix Bump", 2D) = "bump" { }
//       _MaskyMixBumpScale ("MaskyMix Bump Scale", Range(0.1,2)) = 1
//       _MaskyMixWorldDirection ("MaskyMix World Dir", Vector) = (0,1,0,0)
//       _MaskyMixMask ("MaskyMix Mask (R)", 2D) = "white" { }
//       _MaskyMixMaskTile ("MaskyMix Mask UV Tile", Range(1,100)) = 10
//       _MaskyMixMaskFalloff ("MaskyMix Mask Falloff", Range(0.0001,2.5)) = 0.1
//       _MaskyMixMaskThresholdLow ("MaskyMix Mask Threshold Low", Range(0,1)) = 0.5
//       _MaskyMixMaskThresholdHi ("MaskyMix Mask Threshold Hi", Range(0,1)) = 0.6
//       _MetaAlbedoDesaturation ("Meta Albedo Desaturation", Range(0,1)) = 0
//      [HDR]  _MetaAlbedoTint ("Meta Albedo Tint", Color) = (1,1,1,1)
//      [HDR]  _MetaAlbedoAdd ("Meta Albedo Add", Color) = (0,0,0,0)
//      }
//      Fallback "Diffuse"
//      SubShader 1/2 {
//        LOD 400
//        Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "RenderType"="Opaque" "PerformanceChecks"="False" }
//          ZWrite [_ZWrite]
//          Blend [_SrcBlend] [_DstBlend]
//          GpuProgramID 14791
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 23
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Rocks - MaskyMix Standard.shader.decompressed:
//   API d3d11
//   Shader model ps_5_0
//   undeciphered1: 246 12 4
//   Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_ON" "_NORMALMAP" "_DETAIL_MULX2" }
//   undeciphered2: 1 14 4 12 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 352
//   Vector 16 [unity_ColorSpaceDouble]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 80 [unity_DynamicLightmap_HDR]
//   Vector 96 [_LightColor0]
//   Vector 112 [_SpecColor]
//   Vector 128 [_Color]
//   Float 192 [_BumpScale]
//   Float 196 [_DetailNormalMapScale]
//   Float 204 [_Glossiness]
//   Float 208 [_OcclusionStrength]
//   Vector 240 [_MaskyMixColor]
//   Vector 256 [_MaskyMixSpecColor]
//   Float 272 [_MaskyMixUVTile]
//   Float 276 [_MaskyMixBumpScale]
//   Vector 288 [_MaskyMixWorldDirection] 3
//   Float 300 [_MaskyMixMaskTile]
//   Float 304 [_MaskyMixMaskFalloff]
//   Float 308 [_MaskyMixMaskThresholdLow]
//   Float 312 [_MaskyMixMaskThresholdHi]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 3
//   SetTexture 1 [_DetailMask] 2D 6
//   SetTexture 2 [_DetailAlbedoMap] 2D 4
//   SetTexture 3 [_BumpMap] 2D 5
//   SetTexture 4 [_DetailNormalMap] 2D 7
//   SetTexture 5 [_OcclusionMap] 2D 8
//   SetTexture 6 [_MaskyMixBumpMap] 2D 10
//   SetTexture 7 [_MaskyMixAlbedo] 2D 9
//   SetTexture 8 [_MaskyMixMask] 2D 11
//   SetTexture 9 [unity_DynamicLightmap] 2D 0
//   SetTexture 10 [unity_DynamicDirectionality] 2D -1
//   SetTexture 11 [unity_DynamicNormal] 2D -1
//   SetTexture 12 [unity_SpecCube0] CUBE 1
//   SetTexture 13 [unity_SpecCube1] CUBE 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 17 14:47:40 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   x           5     NONE   float   x   
// TEXCOORD                 6   xyzw        6     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[20], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_sampler s11, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texturecube (float,float,float,float) t12
dcl_resource_texturecube (float,float,float,float) t13
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.x
dcl_input_ps linear v6.zw
dcl_output o0.xyzw
dcl_temps 21
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r16.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed aa5b78c4fdd4a703-ps.txt
mov r17.xyzw, cb1[4].xyzw
mov r18.xyzw, l(0)
mul r18.x, -r16.x, r16.y
mul r20.xyzw, cb10[0].xyzw, r18.xxxx
mad r20.xyzw, cb10[1].xyzw, r18.yyyy, r20.xyzw
mad r20.xyzw, cb10[2].xyzw, r18.zzzz, r20.xyzw
mad r20.xyzw, cb10[3].xyzw, r18.wwww, r20.xyzw
mul r19.xyzw, cb11[12].xyzw, r20.xxxx
mad r19.xyzw, cb11[13].xyzw, r20.yyyy, r19.xyzw
mad r19.xyzw, cb11[14].xyzw, r20.zzzz, r19.xyzw
mad r19.xyzw, cb11[15].xyzw, r20.wwww, r19.xyzw
add r17.xyz, r17.xyz, -r19.xyz

mov r0.x, v1.w
mov r0.y, v2.w
mov r0.z, v3.w
add r1.xyz, -r0.xyzx, r17.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v4.xyxx, t0.xyzw, s3
mul r3.xyz, r3.xyzx, cb0[8].xyzx
sample_indexable(texture2d)(float,float,float,float) r1.w, v4.xyxx, t1.xyzw, s6
sample_indexable(texture2d)(float,float,float,float) r4.xyz, v4.zwzz, t2.xyzw, s4
mul r4.xyz, r4.xyzx, cb0[1].xyzx
add r2.w, -r1.w, l(1.000000)
mad r4.xyz, r4.xyzx, r1.wwww, r2.wwww
mul r3.xyz, r3.xyzx, r4.xyzx
sample_indexable(texture2d)(float,float,float,float) r4.xy, v4.xyxx, t3.ywxz, s5
mad r4.xy, r4.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r5.xy, r4.xyxx, cb0[12].xxxx
dp2 r2.w, r5.xyxx, r5.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r5.z, r2.w
sample_indexable(texture2d)(float,float,float,float) r4.zw, v4.zwzz, t4.xzyw, s7
mad r4.zw, r4.wwwz, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r4.zw, r4.zzzw, cb0[12].yyyy
dp2 r2.w, r4.zwzz, r4.zwzz
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r2.w, r2.w
mad r6.xy, r4.xyxx, cb0[12].xxxx, r4.zwzz
mul r6.z, r2.w, r5.z
dp3 r2.w, r6.xyzx, r6.xyzx
rsq r2.w, r2.w
mad r6.xyz, r6.xyzx, r2.wwww, -r5.xyzx
mad r6.xyz, r1.wwww, r6.xyzx, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.w, v4.xyxx, t5.xzwy, s8
add r2.w, -cb0[13].x, l(1.000000)
mad r1.w, r1.w, cb0[13].x, r2.w
mul r4.zw, v4.xxxy, cb0[17].xxxx
mul r5.xy, v4.xyxx, cb0[18].wwww
sample_indexable(texture2d)(float,float,float,float) r7.xy, r4.zwzz, t6.ywxz, s10
mad r7.xy, r7.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r7.xy, r7.xyxx, cb0[17].yyyy
dp2 r2.w, r7.xyxx, r7.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r2.w, r2.w
mad r7.xy, r4.xyxx, cb0[12].xxxx, r7.xyxx
mul r7.z, r2.w, r5.z
dp3 r2.w, r7.xyzx, r7.xyzx
rsq r2.w, r2.w
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.zwzz, t7.xyzw, s9
mul r4.xyz, r4.xyzx, cb0[15].xyzx
sample_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t8.yzwx, s11
dp3 r5.x, v1.xyzx, r6.xyzx
dp3 r5.y, v2.xyzx, r6.xyzx
dp3 r5.z, v3.xyzx, r6.xyzx
dp3 r5.x, cb0[18].xyzx, r5.xyzx
mul r3.w, r3.w, v5.x
max r5.x, r5.x, l(0.000010)
mul r3.w, r3.w, r5.x
log r3.w, r3.w
mul r3.w, r3.w, cb0[19].x
exp r3.w, r3.w
lt r5.x, cb0[19].y, r3.w
add r5.y, -cb0[19].y, cb0[19].z
add r3.w, r3.w, -cb0[19].y
div r5.y, l(1.000000, 1.000000, 1.000000, 1.000000), r5.y
mul_sat r3.w, r3.w, r5.y
mad r5.y, r3.w, l(-2.000000), l(3.000000)
mul r3.w, r3.w, r3.w
mul r3.w, r3.w, r5.y
mad r5.yzw, r7.xxyz, r2.wwww, -r6.xxyz
mad r7.xyz, r3.wwww, r5.yzwy, r6.xyzx
mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), -r3.xyzx
mad r4.xyz, r3.wwww, r4.xyzx, r3.xyzx
add r5.yzw, -cb0[7].xxyz, cb0[16].xxyz
mad r5.yzw, r3.wwww, r5.yyzw, cb0[7].xxyz
add r2.w, r4.w, -cb0[12].w
mad r7.w, r3.w, r2.w, cb0[12].w
movc r3.xyz, r5.xxxx, r4.xyzx, r3.xyzx
movc r4.xyz, r5.xxxx, r5.yzwy, cb0[7].xyzx
mov r6.w, cb0[12].w
movc r5.xyzw, r5.xxxx, r7.xyzw, r6.xyzw
dp3 r6.x, v1.xyzx, r5.xyzx
dp3 r6.y, v2.xyzx, r5.xyzx
dp3 r6.z, v3.xyzx, r5.xyzx
add r2.w, -r5.w, l(1.000000)
dp3 r3.w, -r2.xyzx, r6.xyzx
add r3.w, r3.w, r3.w
mad r5.xyz, r6.xyzx, -r3.wwww, -r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r7.xyzw, v6.zwzz, t9.xyzw, s0
mul r3.w, r7.w, cb0[5].x
mul r7.xyz, r7.xyzx, r3.wwww
log r7.xyz, r7.xyzx
mul r7.xyz, r7.xyzx, cb0[5].yyyy
exp r7.xyz, r7.xyzx
sample_indexable(texture2d)(float,float,float,float) r8.xyz, v6.zwzz, t10.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r9.xyz, v6.zwzz, t11.xyzw, s0
mad r8.xyz, r8.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r3.w, r8.xyzx, r8.xyzx
sqrt r3.w, r3.w
max r3.w, r3.w, l(0.001000)
div r8.xyz, r8.xyzx, r3.wwww
mad r9.xyz, r9.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r4.w, r9.xyzx, r8.xyzx
max r4.w, r4.w, l(0.125000)
div r7.xyz, r7.xyzx, r4.wwww
dp3 r4.w, r6.xyzx, r8.xyzx
max r4.w, r4.w, l(0.000000)
add r6.w, -r3.w, l(1.000000)
mul r9.xyz, r6.wwww, r7.xyzx
mul r7.xyz, r3.wwww, r7.xyzx
mul r9.xyz, r4.wwww, r9.xyzx
lt r3.w, l(0.000000), cb3[2].w
if_nz r3.w
  dp3 r3.w, r5.xyzx, r5.xyzx
  rsq r3.w, r3.w
  mul r10.xyz, r3.wwww, r5.xyzx
  add r11.xyz, -r0.xyzx, cb3[0].xyzx
  div r11.xyz, r11.xyzx, r10.xyzx
  add r12.xyz, -r0.xyzx, cb3[1].xyzx
  div r12.xyz, r12.xyzx, r10.xyzx
  lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  min r3.w, r11.y, r11.x
  min r3.w, r11.z, r3.w
  add r11.xyz, r0.xyzx, -cb3[2].xyzx
  mad r10.xyz, r10.xyzx, r3.wwww, r11.xyzx
else 
  mov r10.xyz, r5.xyzx
endif 
mad r3.w, -r2.w, l(0.700000), l(1.700000)
mul r3.w, r2.w, r3.w
mul r3.w, r3.w, l(6.000000)
sample_l_indexable(texturecube)(float,float,float,float) r10.xyzw, r10.xyzx, t12.xyzw, s1, r3.w
log r6.w, r10.w
mul r6.w, r6.w, cb3[3].y
exp r6.w, r6.w
mul r6.w, r6.w, cb3[3].x
mul r11.xyz, r10.xyzx, r6.wwww
lt r7.w, cb3[1].w, l(0.999990)
if_nz r7.w
  lt r7.w, l(0.000000), cb3[6].w
  if_nz r7.w
    dp3 r7.w, r5.xyzx, r5.xyzx
    rsq r7.w, r7.w
    mul r12.xyz, r5.xyzx, r7.wwww
    add r13.xyz, -r0.xyzx, cb3[4].xyzx
    div r13.xyz, r13.xyzx, r12.xyzx
    add r14.xyz, -r0.xyzx, cb3[5].xyzx
    div r14.xyz, r14.xyzx, r12.xyzx
    lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
    movc r13.xyz, r15.xyzx, r13.xyzx, r14.xyzx
    min r7.w, r13.y, r13.x
    min r7.w, r13.z, r7.w
    add r0.xyz, r0.xyzx, -cb3[6].xyzx
    mad r5.xyz, r12.xyzx, r7.wwww, r0.xyzx
  endif 
  sample_l_indexable(texturecube)(float,float,float,float) r12.xyzw, r5.xyzx, t13.xyzw, s2, r3.w
  log r0.x, r12.w
  mul r0.x, r0.x, cb3[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r12.xyzx, r0.xxxx
  mad r5.xyz, r6.wwww, r10.xyzx, -r0.xyzx
  mad r11.xyz, cb3[1].wwww, r5.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.wwww, r11.xyzx
dp3 r3.w, r6.xyzx, r6.xyzx
rsq r3.w, r3.w
mul r5.xyz, r3.wwww, r6.xyzx
max r3.w, r4.y, r4.x
max r3.w, r4.z, r3.w
add r3.w, -r3.w, l(1.000000)
mul r3.xyz, r3.wwww, r3.xyzx
mad r6.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r6.w, r6.xyzx, r6.xyzx
max r6.w, r6.w, l(0.001000)
rsq r6.w, r6.w
mul r6.xyz, r6.wwww, r6.xyzx
dp3 r6.w, r5.xyzx, r2.xyzx
lt r7.w, r6.w, l(0.000000)
add r6.w, -r6.w, l(0.000010)
mad r10.xyz, r2.xyzx, r6.wwww, r5.xyzx
movc r10.xyz, r7.wwww, r10.xyzx, r5.xyzx
dp3 r6.w, r10.xyzx, cb2[0].xyzx
max r6.w, r6.w, l(0.000000)
dp3 r7.w, r10.xyzx, r6.xyzx
max r7.w, r7.w, l(0.000000)
dp3 r2.x, r10.xyzx, r2.xyzx
dp3 r2.y, cb2[0].xyzx, r6.xyzx
max r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.z, r2.w, r2.w
mad r6.x, -r2.w, r2.w, l(1.000000)
mad r6.y, r2.x, r6.x, r2.z
mad r6.x, r6.w, r6.x, r2.z
mul r6.x, r2.x, r6.x
mad r6.x, r6.w, r6.y, r6.x
add r6.x, r6.x, l(0.000010)
div r6.x, l(2.000000), r6.x
mul r6.y, r2.z, r2.z
mul r6.z, r7.w, r7.w
mad r10.xy, r2.zzzz, r2.zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
mad r6.z, r6.z, r10.x, l(1.000000)
mul r7.w, r6.z, l(3.14159274)
mad r6.z, r7.w, r6.z, l(1.000000012E-007)
div r6.y, r6.y, r6.z
add r6.z, -r6.w, l(1.000000)
mul r7.w, r6.z, r6.z
mul r7.w, r7.w, r7.w
mul r6.z, r6.z, r7.w
add r2.x, -r2.x, l(1.000000)
mul r7.w, r2.x, r2.x
mul r7.w, r7.w, r7.w
mul r2.x, r2.x, r7.w
add r7.w, r2.y, r2.y
mul r7.w, r2.y, r7.w
mad r7.w, r7.w, r2.w, l(-0.500000)
mad r6.z, r7.w, r6.z, l(1.000000)
mad r7.w, r7.w, r2.x, l(1.000000)
mul r6.z, r6.z, r7.w
mul r6.xz, r6.yywy, r6.xxzx
mul r6.x, r6.x, l(0.785398185)
eq r6.y, cb0[3].w, l(0.000000)
max r7.w, r6.x, l(0.000100)
sqrt r7.w, r7.w
movc r6.x, r6.y, r7.w, r6.x
mul r6.x, r6.w, r6.x
max r6.x, r6.x, l(0.000000)
mul r2.w, r2.z, r2.w
mad r2.w, -r2.w, l(0.280000), l(1.000000)
div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r10.y
movc r2.w, r6.y, r2.w, r6.w
add r3.w, -r3.w, r5.w
add_sat r3.w, r3.w, l(1.000000)
mul r10.xyz, r6.zzzz, cb0[6].xyzx
mad r9.xyz, r9.xyzx, r1.wwww, r10.xyzx
mul r6.xzw, r6.xxxx, cb0[6].xxyz
add r2.y, -r2.y, l(1.000000)
mul r7.w, r2.y, r2.y
mul r7.w, r7.w, r7.w
mul r2.y, r2.y, r7.w
add r10.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r10.xyz, r10.xyzx, r2.yyyy, r4.xyzx
mul r6.xzw, r6.xxzw, r10.xxyz
mad r6.xzw, r3.xxyz, r9.xxyz, r6.xxzw
mul r0.xyz, r0.xyzx, r2.wwww
add r9.xyz, -r4.xyzx, r3.wwww
mad r2.xyw, r2.xxxx, r9.xyxz, r4.xyxz
mad r0.xyz, r0.xyzx, r2.xywx, r6.xzwx
mad r1.xyz, r1.xyzx, r0.wwww, r8.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r5.xyzx, r1.xyzx
max r0.w, r0.w, l(0.000000)
dp3 r1.x, r8.xyzx, r1.xyzx
max r1.x, r1.x, l(0.000000)
max r1.y, r2.z, l(0.000100)
mul r1.yz, r1.yyxy, r1.yyxy
div r1.y, l(2.000000), r1.y
add r1.y, r1.y, l(-2.000000)
max r1.y, r1.y, l(0.000100)
mad r1.z, r1.z, r5.w, r2.z
add r2.x, r1.y, l(1.000000)
log r0.w, r0.w
mul r0.w, r0.w, r1.y
exp r0.w, r0.w
mul r0.w, r0.w, r2.x
mul r1.x, r1.z, r1.x
mad r1.x, r1.x, l(8.000000), l(0.000100)
div r0.w, r0.w, r1.x
max r1.x, r0.w, l(0.000100)
sqrt r1.x, r1.x
movc r0.w, r6.y, r1.x, r0.w
mad r1.xyz, r0.wwww, r4.xyzx, r3.xyzx
mul r1.xyz, r7.xyzx, r1.xyzx
mul r1.xyz, r4.wwww, r1.xyzx
mad o0.xyz, r1.xyzx, r1.wwww, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used