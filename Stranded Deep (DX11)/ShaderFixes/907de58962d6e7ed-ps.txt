// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 907de58962d6e7ed-ps.txt
// 3DMigoto: 907de58962d6e7ed |    Unity headers extracted from Foliage - Double-Sided 2PASS Metallic.shader
//    Shader "Beam Team/Foliage/Foliage - Forward Cull Off 2PASS Metallic" {
//      Properties {
//      [Header(Diffuse)]  _Color ("Color", Color) = (1,1,1,1)
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//       _MainTex ("Diffuse Albedo (RGB)", 2D) = "white" { }
//      [Header(Packed Normals)]  _PackedTex ("Gloss (R) Normal X (G) Translucency (B) Normal Y (A)", 2D) = "white" { }
//      [Header(Translucency)] [Toggle(BEAM_SPEEDTREE_TRANSLUCENCY)]  _Translucent ("Translucent", Float) = 0
//       _TranslucencyColor ("Translucency Tint", Color) = (0.73,0.85,0.41,1)
//       _TranslucencyIntensity ("Translucency Intensity", Range(1,5)) = 1
//       _TranslucencyViewDependency ("Translucency View Dependency", Range(0,1)) = 0.5
//      [Header(Wind)] [MaterialEnum(None, 0, Fastest, 1, Fast, 2, Better, 3, Best, 4, Palm, 5)]  _WindQuality ("Wind Quality", Range(0,5)) = 0
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "RenderType"="Foliage" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "RenderType"="Foliage" }
//          Cull Front
//          GpuProgramID 54878
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 19
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Foliage - Double-Sided 2PASS Metallic.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 215 12 5
//   Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "SUNSHINE_FILTER_PCF_3x3" }
//   undeciphered2: 1 6 4 6 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 656
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 128 [sunshine_Lightmap_TexelSize]
//   Vector 144 [sunshine_ShadowParamsAndHalfTexel]
//   Vector 160 [sunshine_OvercastCoord] 2
//   Vector 176 [sunshine_OvercastVectorsUV]
//   Vector 320 [sunshine_ShadowCoordDepthStart]
//   Vector 384 [sunshine_ShadowToWorldScale] 3
//   Vector 400 [sunshine_CascadeNearRatiosSq]
//   Vector 416 [sunshine_CascadeFarRatiosSq]
//   Vector 496 [sunshine_ShadowFadeParams] 3
//   Float 508 [_ShadowFade]
//   Float 528 [_Cutoff]
//   Vector 544 [_Color]
//   Matrix 432 [sunshine_CascadeRanges]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 4
//   SetTexture 1 [_PackedTex] 2D 5
//   SetTexture 2 [sunshine_OvercastMap] 2D 3
//   SetTexture 3 [sunshine_Lightmap] 2D 2
//   SetTexture 4 [unity_SpecCube0] CUBE 0
//   SetTexture 5 [unity_SpecCube1] CUBE 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 10 17:35:02 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[35], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 18
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 907de58962d6e7ed-ps.txt
mov r14.xyzw, cb1[4].xyzw
mov r15.xyzw, l(0)
mul r15.x, -r13.x, r13.y
mul r17.xyzw, cb10[0].xyzw, r15.xxxx
mad r17.xyzw, cb10[1].xyzw, r15.yyyy, r17.xyzw
mad r17.xyzw, cb10[2].xyzw, r15.zzzz, r17.xyzw
mad r17.xyzw, cb10[3].xyzw, r15.wwww, r17.xyzw
mul r16.xyzw, cb11[12].xyzw, r17.xxxx
mad r16.xyzw, cb11[13].xyzw, r17.yyyy, r16.xyzw
mad r16.xyzw, cb11[14].xyzw, r17.zzzz, r16.xyzw
mad r16.xyzw, cb11[15].xyzw, r17.wwww, r16.xyzw
add r14.xyz, r14.xyz, -r16.xyz

mov r0.x, v1.w
mov r0.y, v2.w
mov r0.z, v3.w
add r1.xyz, -r0.xyzx, r14.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
sample r3.xyzw, v4.xyxx, t0.xyzw, s4
mul r3.xyz, r3.xyzx, cb0[34].xyzx
mad r1.w, r3.w, cb0[34].w, -cb0[33].x
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
sample r4.xyzw, v4.xyxx, t1.xyzw, s5
mad r5.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
add r4.yzw, v5.xxyz, -cb0[20].xxyz
mul r4.yzw, r4.yyzw, cb0[24].xxyz
dp3 r1.w, r4.yzwy, r4.yzwy
mul r2.w, r1.w, l(123456792.000000)
frc r2.w, r2.w
mad r2.w, -r2.w, cb0[9].y, l(1.000000)
mul r2.w, r1.w, r2.w
ge r6.xyzw, r2.wwww, cb0[25].xyzw
and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
ge r7.xyzw, cb0[26].xyzw, r2.wwww
and r7.xyzw, r7.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
mul r6.xyzw, r6.xyzw, r7.xyzw
mul r7.x, r6.x, cb0[27].x
mul r7.y, r6.x, cb0[28].x
mul r7.z, r6.x, cb0[29].x
mul r7.w, r6.x, cb0[30].x
mul r8.x, r6.y, cb0[27].y
mul r8.y, r6.y, cb0[28].y
mul r8.z, r6.y, cb0[29].y
mul r8.w, r6.y, cb0[30].y
add r7.xyzw, r7.xyzw, r8.xyzw
mul r8.x, r6.z, cb0[27].z
mul r8.y, r6.z, cb0[28].z
mul r8.z, r6.z, cb0[29].z
mul r8.w, r6.z, cb0[30].z
add r7.xyzw, r7.xyzw, r8.xyzw
mul r8.x, r6.w, cb0[27].w
mul r8.y, r6.w, cb0[28].w
mul r8.z, r6.w, cb0[29].w
mul r8.w, r6.w, cb0[30].w
add r6.xyzw, r7.xyzw, r8.xyzw
mad r4.yz, r6.zzwz, v5.xxyx, r6.xxyx
mad_sat r1.w, -r1.w, cb0[31].y, cb0[31].x
mad r6.xy, cb0[11].xyxx, v5.xxxx, cb0[10].xyxx
mad r6.xy, cb0[11].zwzz, v5.yyyy, r6.xyxx
sample r6.xyzw, r6.xyxx, t2.xyzw, s3
add r2.w, -cb0[31].w, l(1.000000)
max r2.w, r6.w, r2.w
mul r4.yz, r4.yyzy, cb0[8].zzwz
frc r6.xy, r4.yzyy
round_ni r4.yz, r4.yyzy
mad r4.yz, r4.yyzy, cb0[8].xxyx, cb0[9].zzwz
add r7.xy, r4.yzyy, -cb0[8].xyxx
sample r7.xyzw, r7.xyxx, t3.xyzw, s2
dp4 r7.x, r7.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
mad r8.xyzw, cb0[8].xyxy, l(0.000000, -1.000000, 1.000000, -1.000000), r4.yzyz
sample r9.xyzw, r8.xyxx, t3.xyzw, s2
dp4 r7.y, r9.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
sample r8.xyzw, r8.zwzz, t3.xyzw, s2
dp4 r7.z, r8.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
ge r7.xyz, v5.zzzz, r7.xyzx
and r7.xyz, r7.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
add r6.z, -r6.x, l(1.000000)
mov r6.w, l(1.000000)
dp3 r7.x, r7.zxyz, r6.xzwx
mad r8.xyzw, cb0[8].xyxy, l(-1.000000, 0.000000, 1.000000, 0.000000), r4.yzyz
sample r9.xyzw, r8.xyxx, t3.xyzw, s2
dp4 r9.x, r9.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
sample r10.xyzw, r4.yzyy, t3.xyzw, s2
dp4 r9.y, r10.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
sample r8.xyzw, r8.zwzz, t3.xyzw, s2
dp4 r9.z, r8.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
ge r8.xyz, v5.zzzz, r9.xyzx
and r8.xyz, r8.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mad r9.xyz, r6.xwxx, l(-1.000000, 1.000000, 1.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
dp3 r7.y, r8.xyzx, r9.xyzx
mad r8.xyzw, cb0[8].xyxy, l(-1.000000, 1.000000, 0.000000, 1.000000), r4.yzyz
sample r10.xyzw, r8.xyxx, t3.xyzw, s2
dp4 r10.x, r10.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
sample r8.xyzw, r8.zwzz, t3.xyzw, s2
dp4 r10.y, r8.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
add r4.yz, r4.yyzy, cb0[8].xxyx
sample r8.xyzw, r4.yzyy, t3.xyzw, s2
dp4 r10.z, r8.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
ge r4.yzw, v5.zzzz, r10.xxyz
and r4.yzw, r4.yyzw, l(0, 0x3f800000, 0x3f800000, 0x3f800000)
dp3 r7.z, r4.yzwy, r9.xyzx
mad r4.yzw, r6.yywy, l(0.000000, -1.000000, 1.000000, 1.000000), l(0.000000, 1.000000, 0.000000, 0.000000)
mul r4.yzw, r4.yyzw, l(0.000000, 0.250000, 0.250000, 0.250000)
dp3 r3.w, r7.xyzx, r4.yzwy
mad r1.w, -r3.w, r1.w, l(1.000000)
mad r1.w, -r1.w, r2.w, l(1.000000)
mad r1.w, -r1.w, cb0[9].x, l(1.000000)
dp3 r6.x, v1.xyzx, r5.xyzx
dp3 r6.y, v2.xyzx, r5.xyzx
dp3 r6.z, v3.xyzx, r5.xyzx
mad r2.w, -r4.x, v4.z, l(1.000000)
mul r4.yzw, r1.wwww, cb0[6].xxyz
mov r6.w, l(1.000000)
dp4 r5.x, cb2[38].xyzw, r6.xyzw
dp4 r5.y, cb2[39].xyzw, r6.xyzw
dp4 r5.z, cb2[40].xyzw, r6.xyzw
add r5.xyz, r5.xyzx, v6.xyzx
max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r1.w, cb0[3].w, l(0.000000)
log r7.xyz, r5.xyzx
mul r7.xyz, r7.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r7.xyz, r7.xyzx
mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r5.xyz, r1.wwww, r7.xyzx, r5.xyzx
lt r3.w, l(0.000000), cb3[2].w
if_nz r3.w
  dp3 r3.w, r6.xyzx, r6.xyzx
  rsq r3.w, r3.w
  mul r7.xyz, r3.wwww, r6.xyzx
  add r8.xyz, -r0.xyzx, cb3[0].xyzx
  div r8.xyz, r8.xyzx, r7.xyzx
  add r9.xyz, -r0.xyzx, cb3[1].xyzx
  div r9.xyz, r9.xyzx, r7.xyzx
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  min r3.w, r8.y, r8.x
  min r3.w, r8.z, r3.w
  add r8.xyz, r0.xyzx, -cb3[2].xyzx
  mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
else 
  mov r7.xyz, r6.xyzx
endif 
mad r3.w, -r2.w, l(0.700000), l(1.700000)
mul r3.w, r2.w, r3.w
mul r3.w, r3.w, l(6.000000)
sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r3.w
log r5.w, r7.w
mul r5.w, r5.w, cb3[3].y
exp r5.w, r5.w
mul r5.w, r5.w, cb3[3].x
mul r8.xyz, r7.xyzx, r5.wwww
lt r6.w, cb3[1].w, l(0.999990)
if_nz r6.w
  lt r6.w, l(0.000000), cb3[6].w
  if_nz r6.w
    dp3 r6.w, r6.xyzx, r6.xyzx
    rsq r6.w, r6.w
    mul r9.xyz, r6.wwww, r6.xyzx
    add r10.xyz, -r0.xyzx, cb3[4].xyzx
    div r10.xyz, r10.xyzx, r9.xyzx
    add r11.xyz, -r0.xyzx, cb3[5].xyzx
    div r11.xyz, r11.xyzx, r9.xyzx
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
    min r6.w, r10.y, r10.x
    min r6.w, r10.z, r6.w
    add r0.xyz, r0.xyzx, -cb3[6].xyzx
    mad r0.xyz, r9.xyzx, r6.wwww, r0.xyzx
  else 
    mov r0.xyz, r6.xyzx
  endif 
  sample_l r9.xyzw, r0.xyzx, t5.xyzw, s1, r3.w
  log r0.x, r9.w
  mul r0.x, r0.x, cb3[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r9.xyzx, r0.xxxx
  mad r7.xyz, r5.wwww, r7.xyzx, -r0.xyzx
  mad r8.xyz, cb3[1].wwww, r7.xyzx, r0.xyzx
endif 
dp3 r0.x, r6.xyzx, r6.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r6.xyzx
mul r3.xyz, r3.xyzx, cb0[2].wwww
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r0.xyzx, r2.xyzx
lt r3.w, r0.w, l(0.000000)
add r0.w, -r0.w, l(0.000010)
mad r6.xyz, r2.xyzx, r0.wwww, r0.xyzx
movc r0.xyz, r3.wwww, r6.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, cb2[0].xyzx
dp3 r3.w, r0.xyzx, r1.xyzx
max r3.w, r3.w, l(0.000000)
dp3 r0.x, r0.xyzx, r2.xyzx
dp3 r0.y, cb2[0].xyzx, r1.xyzx
max r0.xyw, r0.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r2.w, r2.w
mad r1.x, -r2.w, r2.w, l(1.000000)
mad r1.y, r0.x, r1.x, r0.z
mad r1.x, r0.w, r1.x, r0.z
mul r1.x, r0.x, r1.x
mad r1.x, r0.w, r1.y, r1.x
add r1.x, r1.x, l(0.000010)
div r1.x, l(2.000000), r1.x
mul r1.y, r0.z, r0.z
mul r1.z, r3.w, r3.w
mad r2.xy, r0.zzzz, r0.zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
mad r1.z, r1.z, r2.x, l(1.000000)
mul r2.x, r1.z, l(3.14159274)
mad r1.z, r2.x, r1.z, l(1.000000012E-007)
div r1.y, r1.y, r1.z
add r1.z, -r0.w, l(1.000000)
mul r2.x, r1.z, r1.z
mul r2.x, r2.x, r2.x
mul r1.z, r1.z, r2.x
add r0.x, -r0.x, l(1.000000)
mul r2.x, r0.x, r0.x
mul r2.x, r2.x, r2.x
mul r0.xz, r0.xxzx, r2.xxwx
mul r2.x, r0.y, r0.y
dp2 r2.x, r2.xxxx, r2.wwww
add r2.x, r2.x, l(-0.500000)
mad r1.z, r2.x, r1.z, l(1.000000)
mad r2.x, r2.x, r0.x, l(1.000000)
mul r1.z, r1.z, r2.x
mul r1.x, r1.y, r1.x
mul r1.x, r1.x, l(0.785398185)
max r1.y, r1.x, l(0.000100)
sqrt r1.y, r1.y
movc r1.x, r1.w, r1.y, r1.x
mul r1.x, r0.w, r1.x
max r1.x, r1.x, l(0.000000)
mul r0.w, r0.w, r1.z
mad r0.z, -r0.z, l(0.280000), l(1.000000)
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
movc r0.z, r1.w, r0.z, r1.y
mad r1.y, r4.x, v4.z, -cb0[2].w
add_sat r1.y, r1.y, l(1.000000)
mad r2.xyz, r4.yzwy, r0.wwww, r5.xyzx
mul r1.xzw, r4.yyzw, r1.xxxx
add r0.y, -r0.y, l(1.000000)
mul r0.w, r0.y, r0.y
mul r0.w, r0.w, r0.w
mul r0.y, r0.y, r0.w
add r4.xyz, -cb0[2].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r4.xyz, r4.xyzx, r0.yyyy, cb0[2].xyzx
mul r1.xzw, r1.xxzw, r4.xxyz
mad r1.xzw, r3.xxyz, r2.xxyz, r1.xxzw
mul r0.yzw, r8.xxyz, r0.zzzz
add r2.xyz, r1.yyyy, -cb0[2].xyzx
mad r2.xyz, r0.xxxx, r2.xyzx, cb0[2].xyzx
mad o0.xyz, r0.yzwy, r2.xyzx, r1.xzwx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used