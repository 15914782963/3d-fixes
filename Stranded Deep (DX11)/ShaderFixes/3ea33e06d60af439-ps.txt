// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3ea33e06d60af439-ps.txt
// 3DMigoto: 3ea33e06d60af439 |    Unity headers extracted from TMP_SDF-Surface.shader
//    Shader "TextMeshPro/Distance Field (Surface)" {
//      Properties {
//       _FaceTex ("Fill Texture", 2D) = "white" { }
//       _FaceUVSpeedX ("Face UV Speed X", Range(-5.000000,5.000000)) = 0.000000
//       _FaceUVSpeedY ("Face UV Speed Y", Range(-5.000000,5.000000)) = 0.000000
//       _FaceColor ("Fill Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _FaceDilate ("Face Dilate", Range(-1.000000,1.000000)) = 0.000000
//       _OutlineColor ("Outline Color", Color) = (0.000000,0.000000,0.000000,1.000000)
//       _OutlineTex ("Outline Texture", 2D) = "white" { }
//       _OutlineUVSpeedX ("Outline UV Speed X", Range(-5.000000,5.000000)) = 0.000000
//       _OutlineUVSpeedY ("Outline UV Speed Y", Range(-5.000000,5.000000)) = 0.000000
//       _OutlineWidth ("Outline Thickness", Range(0.000000,1.000000)) = 0.000000
//       _OutlineSoftness ("Outline Softness", Range(0.000000,1.000000)) = 0.000000
//       _Bevel ("Bevel", Range(0.000000,1.000000)) = 0.500000
//       _BevelOffset ("Bevel Offset", Range(-0.500000,0.500000)) = 0.000000
//       _BevelWidth ("Bevel Width", Range(-0.500000,0.500000)) = 0.000000
//       _BevelClamp ("Bevel Clamp", Range(0.000000,1.000000)) = 0.000000
//       _BevelRoundness ("Bevel Roundness", Range(0.000000,1.000000)) = 0.000000
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _BumpOutline ("Bump Outline", Range(0.000000,1.000000)) = 0.500000
//       _BumpFace ("Bump Face", Range(0.000000,1.000000)) = 0.500000
//       _ReflectFaceColor ("Face Color", Color) = (0.000000,0.000000,0.000000,1.000000)
//       _ReflectOutlineColor ("Outline Color", Color) = (0.000000,0.000000,0.000000,1.000000)
//       _Cube ("Reflection Cubemap", CUBE) = "black" { }
//       _EnvMatrixRotation ("Texture Rotation", Vector) = (0.000000,0.000000,0.000000,0.000000)
//       _SpecColor ("Specular Color", Color) = (0.000000,0.000000,0.000000,1.000000)
//       _FaceShininess ("Face Shininess", Range(0.000000,1.000000)) = 0.000000
//       _OutlineShininess ("Outline Shininess", Range(0.000000,1.000000)) = 0.000000
//       _GlowColor ("Color", Color) = (0.000000,1.000000,0.000000,0.500000)
//       _GlowOffset ("Offset", Range(-1.000000,1.000000)) = 0.000000
//       _GlowInner ("Inner", Range(0.000000,1.000000)) = 0.050000
//       _GlowOuter ("Outer", Range(0.000000,1.000000)) = 0.050000
//       _GlowPower ("Falloff", Range(1.000000,0.000000)) = 0.750000
//       _WeightNormal ("Weight Normal", Float) = 0.000000
//       _WeightBold ("Weight Bold", Float) = 0.500000
//       _ShaderFlags ("Flags", Float) = 0.000000
//       _ScaleRatioA ("Scale RatioA", Float) = 1.000000
//       _ScaleRatioB ("Scale RatioB", Float) = 1.000000
//       _ScaleRatioC ("Scale RatioC", Float) = 1.000000
//       _MainTex ("Font Atlas", 2D) = "white" { }
//       _TextureWidth ("Texture Width", Float) = 512.000000
//       _TextureHeight ("Texture Height", Float) = 512.000000
//       _GradientScale ("Gradient Scale", Float) = 5.000000
//       _ScaleX ("Scale X", Float) = 1.000000
//       _ScaleY ("Scale Y", Float) = 1.000000
//       _PerspectiveFilter ("Perspective Correction", Range(0.000000,1.000000)) = 0.875000
//       _VertexOffsetX ("Vertex OffsetX", Float) = 0.000000
//       _VertexOffsetY ("Vertex OffsetY", Float) = 0.000000
//      }
//      CustomEditor "TMPro.EditorUtilities.TMP_SDFShaderGUI"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Cull [_CullMode]
//          Blend SrcAlpha One
//          ColorMask RGB
//          GpuProgramID 94129
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 43
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from TMP_SDF-Surface.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 142 9 0
//   Keywords { "POINT" "GLOW_ON" }
//   undeciphered2: 1 5 3 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 672
//   Vector 96 [_LightColor0]
//   Vector 112 [_SpecColor]
//   Float 192 [_FaceUVSpeedX]
//   Float 196 [_FaceUVSpeedY]
//   Vector 208 [_FaceColor]
//   Float 228 [_OutlineSoftness]
//   Float 232 [_OutlineUVSpeedX]
//   Float 236 [_OutlineUVSpeedY]
//   Vector 240 [_OutlineColor]
//   Float 256 [_OutlineWidth]
//   Float 260 [_Bevel]
//   Float 264 [_BevelOffset]
//   Float 268 [_BevelWidth]
//   Float 272 [_BevelClamp]
//   Float 276 [_BevelRoundness]
//   Float 280 [_BumpOutline]
//   Float 284 [_BumpFace]
//   Vector 480 [_GlowColor]
//   Float 496 [_GlowOffset]
//   Float 500 [_GlowOuter]
//   Float 504 [_GlowInner]
//   Float 508 [_GlowPower]
//   Float 512 [_ShaderFlags]
//   Float 524 [_ScaleRatioA]
//   Float 528 [_ScaleRatioB]
//   Float 600 [_TextureWidth]
//   Float 604 [_TextureHeight]
//   Float 608 [_GradientScale]
//   Float 624 [_FaceShininess]
//   Float 628 [_OutlineShininess]
//   Matrix 128 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_MainTex] 2D 4
//   SetTexture 1 [_FaceTex] 2D 1
//   SetTexture 2 [_OutlineTex] 2D 2
//   SetTexture 3 [_BumpMap] 2D 3
//   SetTexture 4 [_LightTexture0] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Dec 10 03:48:33 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// COLOR                    0   xyzw        6     NONE   float   xyzw
// TEXCOORD                 5   xy          7     NONE   float   xy  
// TEXCOORD                 6   xyz         8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[40], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xy
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3ea33e06d60af439-ps.txt
mov r8.xyzw, cb1[4].xyzw
mov r9.xyzw, l(0)
mul r9.x, -r7.x, r7.y
mul r11.xyzw, cb10[0].xyzw, r9.xxxx
mad r11.xyzw, cb10[1].xyzw, r9.yyyy, r11.xyzw
mad r11.xyzw, cb10[2].xyzw, r9.zzzz, r11.xyzw
mad r11.xyzw, cb10[3].xyzw, r9.wwww, r11.xyzw
mul r10.xyzw, cb11[12].xyzw, r11.xxxx
mad r10.xyzw, cb11[13].xyzw, r11.yyyy, r10.xyzw
mad r10.xyzw, cb11[14].xyzw, r11.zzzz, r10.xyzw
mad r10.xyzw, cb11[15].xyzw, r11.wwww, r10.xyzw
add r8.xyz, r8.xyz, -r10.xyz

mul r0.x, cb0[31].x, cb0[33].x
mul r0.x, r0.x, v7.y
sample r1.xyzw, v1.xyxx, t0.xyzw, s4
add r0.y, -r1.w, l(0.500000)
add r0.y, r0.y, -v7.x
mad r0.y, r0.y, v7.y, l(0.500000)
mad r0.x, -r0.x, l(0.500000), r0.y
ge r0.z, r0.x, l(0.000000)
and r0.z, r0.z, l(0x3f800000)
mad r0.w, cb0[31].y, cb0[33].x, -cb0[31].z
mad r0.z, r0.z, r0.w, cb0[31].z
mul r0.z, r0.z, v7.y
mad r0.w, r0.z, l(0.500000), l(1.000000)
mul r0.z, r0.z, l(0.500000)
min r0.z, r0.z, l(1.000000)
sqrt r0.z, r0.z
div r0.x, r0.x, r0.w
min r0.x, |r0.x|, l(1.000000)
log r0.x, r0.x
mul r0.x, r0.x, cb0[31].w
exp r0.x, r0.x
add r0.x, -r0.x, l(1.000000)
mul r0.x, r0.z, r0.x
dp2_sat r0.x, cb0[30].wwww, r0.xxxx
mad r0.z, -r0.x, v6.w, l(1.000000)
mul r0.x, r0.x, v6.w
mad r1.xy, cb0[14].zwzz, cb1[0].yyyy, v1.zwzz
sample r1.xyzw, r1.xyxx, t2.xyzw, s2
mul r1.xyz, r1.xyzx, cb0[15].xyzx
mul r0.w, v6.w, cb0[15].w
mul r2.w, r1.w, r0.w
mul r2.xyz, r1.xyzx, r2.wwww
mad r1.xy, cb0[12].xyxx, cb1[0].yyyy, v1.zwzz
sample r1.xyzw, r1.xyxx, t1.xyzw, s1
mul r3.xyzw, v6.xyzw, cb0[13].xyzw
mul r1.xyzw, r1.xyzw, r3.xyzw
mul r1.xyz, r1.wwww, r1.xyzx
add r2.xyzw, -r1.xyzw, r2.xyzw
mul r0.w, cb0[16].x, cb0[32].w
mul r0.w, r0.w, v7.y
min r3.x, r0.w, l(1.000000)
sqrt r3.x, r3.x
mad_sat r3.y, r0.w, l(0.500000), r0.y
mad r0.y, -r0.w, l(0.500000), r0.y
mul r0.w, r3.x, r3.y
mad r1.xyzw, r0.wwww, r2.xyzw, r1.xyzw
mul r0.w, cb0[14].y, cb0[32].w
mul r2.x, r0.w, v7.y
mad r0.w, r0.w, v7.y, l(1.000000)
mad r0.y, r2.x, l(0.500000), r0.y
div_sat r0.y, r0.y, r0.w
add r0.y, -r0.y, l(1.000000)
mul r2.xyzw, r0.yyyy, r1.xyzw
mad r0.y, -r1.w, r0.y, l(1.000000)
mad r0.y, r0.y, r0.x, r2.w
max r0.w, r2.w, l(0.000100)
div r1.xyz, r2.xyzx, r0.wwww
mul r1.xyz, r2.wwww, r1.xyzx
mul r1.xyz, r0.zzzz, r1.xyzx
mad r0.xzw, cb0[30].xxyz, r0.xxxx, r1.xxyz
max r1.x, r0.y, l(0.000100)
mov o0.w, r0.y
div r0.xyz, r0.xzwx, r1.xxxx
mul r1.xyz, v5.yyyy, cb0[9].xyzx
mad r1.xyz, cb0[8].xyzx, v5.xxxx, r1.xyzx
mad r1.xyz, cb0[10].xyzx, v5.zzzz, r1.xyzx
add r1.xyz, r1.xyzx, cb0[11].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
sample r1.xyzw, r0.wwww, t4.xyzw, s0
mul r1.xyz, r1.xxxx, cb0[6].xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, cb0[7].xyzx
add r0.w, -cb0[17].w, cb0[17].z
mad r0.w, r3.y, r0.w, cb0[17].w
sample r4.xyzw, v1.zwzz, t3.xyzw, s3
mad r2.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r2.xyxx, r2.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r2.z, r1.w
mad r2.xyz, r2.xyzx, r0.wwww, l(-0.000000, -0.000000, -1.000000, 0.000000)
mad r2.xyz, r2.wwww, r2.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
add r0.w, v7.x, cb0[16].z
div r4.xy, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[37].zwzz
mov r4.z, l(0)
add r5.xyzw, -r4.xzzy, v1.xyxy
add r4.xyzw, r4.xzzy, v1.xyxy
sample r6.xyzw, r5.xyxx, t0.wxyz, s4
sample r5.xyzw, r5.zwzz, t0.xyzw, s4
mov r6.z, r5.w
sample r5.xyzw, r4.xyxx, t0.xyzw, s4
sample r4.xyzw, r4.zwzz, t0.xyzw, s4
mov r6.w, r4.w
mov r6.y, r5.w
add r4.xyzw, r0.wwww, r6.xyzw
add r4.xyzw, r4.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
add r0.w, cb0[16].w, cb0[16].x
max r0.w, r0.w, l(0.010000)
div r4.xyzw, r4.xyzw, r0.wwww
mul r0.w, r0.w, cb0[16].y
mul r0.w, r0.w, cb0[38].x
mul r0.w, r0.w, l(-2.000000)
add_sat r4.xyzw, r4.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
mad r5.xyzw, r4.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
add r5.xyzw, -|r5.xyzw|, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r1.w, cb0[32].x, l(0.500000)
ge r2.w, r1.w, -r1.w
frc r1.w, |r1.w|
movc r1.w, r2.w, r1.w, -r1.w
ge r1.w, r1.w, l(0.500000)
movc r4.xyzw, r1.wwww, r5.xyzw, r4.xyzw
mul r5.xyzw, r4.xyzw, l(1.570796, 1.570796, 1.570796, 1.570796)
sincos r5.xyzw, null, r5.xyzw
add r5.xyzw, -r4.xyzw, r5.xyzw
mad r4.xyzw, cb0[17].yyyy, r5.xyzw, r4.xyzw
add r1.w, -cb0[17].x, l(1.000000)
min r4.xyzw, r1.wwww, r4.xyzw
mul r3.xz, r0.wwww, r4.xxzx
mad r4.yz, r4.wwyw, r0.wwww, -r3.zzxz
mov r4.xw, l(-1.000000,0,0,1.000000)
dp2 r0.w, r4.xyxx, r4.xyxx
rsq r0.w, r0.w
dp2 r1.w, r4.zwzz, r4.zwzz
rsq r1.w, r1.w
mul r5.x, r1.w, r4.z
mul r5.yz, r1.wwww, l(0.000000, 1.000000, 0.000000, 0.000000)
mov r4.z, l(0)
mul r3.xzw, r0.wwww, r4.xxyz
mul r4.xyz, r3.xzwx, r5.xyzx
mad r3.xzw, r5.zzxy, r3.zzwx, -r4.xxyz
add r2.xyz, -r2.xyzx, r3.xzwx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r4.x, v2.xyzx, -r2.xyzx
dp3 r4.y, v3.xyzx, -r2.xyzx
dp3 r4.z, v4.xyzx, -r2.xyzx
add r2.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
add r3.xzw, -v5.xxyz, r8.xxyz
dp3 r0.w, r3.xzwx, r3.xzwx
rsq r0.w, r0.w
mad r3.xzw, r3.xxzw, r0.wwww, r2.xxyz
dp3 r0.w, r4.xyzx, r2.xyzx
max r0.w, r0.w, l(0.000000)
dp3 r1.w, r3.xzwx, r3.xzwx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r3.xzwx
dp3 r1.w, r4.xyzx, r2.xyzx
max r1.w, r1.w, l(0.000000)
log r1.w, r1.w
add r2.x, -cb0[39].x, cb0[39].y
mad r2.x, r3.y, r2.x, cb0[39].x
mul r2.x, r2.x, l(128.000000)
mul r1.w, r1.w, r2.x
exp r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
mad o0.xyz, r0.xyzx, r0.wwww, r1.xyzx
ret 
// Approximately 0 instruction slots used