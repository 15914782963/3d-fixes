// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d68e937edd2b8b9b-ps.txt
// 3DMigoto: d68e937edd2b8b9b |    Unity headers extracted from Foliage - Double-Sided 2PASS Metallic.shader
//    Shader "Beam Team/Foliage/Foliage - Forward Cull Off 2PASS Metallic" {
//      Properties {
//      [Header(Diffuse)]  _Color ("Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.500000
//       _MainTex ("Diffuse Albedo (RGB)", 2D) = "white" { }
//      [Header(Packed Normals)]  _PackedTex ("Gloss (R) Normal X (G) Translucency (B) Normal Y (A)", 2D) = "white" { }
//      [Header(Translucency)] [Toggle(BEAM_SPEEDTREE_TRANSLUCENCY)]  _Translucent ("Translucent", Float) = 0.000000
//       _TranslucencyColor ("Translucency Tint", Color) = (0.730000,0.850000,0.410000,1.000000)
//       _TranslucencyIntensity ("Translucency Intensity", Range(1.000000,5.000000)) = 1.000000
//       _TranslucencyViewDependency ("Translucency View Dependency", Range(0.000000,1.000000)) = 0.500000
//      [Header(Wind)] [MaterialEnum(None, 0, Fastest, 1, Fast, 2, Better, 3, Best, 4, Palm, 5)]  _WindQuality ("Wind Quality", Range(0.000000,5.000000)) = 0.000000
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "RenderType"="Foliage" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="AlphaTest" "RenderType"="Foliage" }
//          ZWrite Off
//          Cull Front
//          Blend One One
//          GpuProgramID 78092
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 19
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Foliage - Double-Sided 2PASS Metallic.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 83 2 0
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 2 3 2 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 272
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Float 144 [_Cutoff]
//   Vector 160 [_Color]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_MainTex] 2D 0
//   SetTexture 1 [_PackedTex] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Dec 10 03:50:23 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d68e937edd2b8b9b-ps.txt
mov r5.xyzw, cb1[4].xyzw
mov r6.xyzw, l(0)
mul r6.x, -r4.x, r4.y
mul r8.xyzw, cb10[0].xyzw, r6.xxxx
mad r8.xyzw, cb10[1].xyzw, r6.yyyy, r8.xyzw
mad r8.xyzw, cb10[2].xyzw, r6.zzzz, r8.xyzw
mad r8.xyzw, cb10[3].xyzw, r6.wwww, r8.xyzw
mul r7.xyzw, cb11[12].xyzw, r8.xxxx
mad r7.xyzw, cb11[13].xyzw, r8.yyyy, r7.xyzw
mad r7.xyzw, cb11[14].xyzw, r8.zzzz, r7.xyzw
mad r7.xyzw, cb11[15].xyzw, r8.wwww, r7.xyzw
add r5.xyz, r5.xyz, -r7.xyz

sample r0.xyzw, v5.xyxx, t0.xyzw, s0
mad r0.w, r0.w, cb0[10].w, -cb0[9].x
mul r0.xyz, r0.xyzx, cb0[10].xyzx
mul r0.xyz, r0.xyzx, cb0[2].wwww
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
sample r1.xyzw, v5.xyxx, t1.xyzw, s1
mad r2.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r0.w, -r1.x, v5.z, l(1.000000)
dp2 r1.x, r2.xyxx, r2.xyxx
min r1.x, r1.x, l(1.000000)
add r1.x, -r1.x, l(1.000000)
sqrt r2.z, r1.x
dp3 r1.x, v1.xyzx, r2.xyzx
dp3 r1.y, v2.xyzx, r2.xyzx
dp3 r1.z, v3.xyzx, r2.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r1.xyzx
dp3 r1.x, r1.xyzx, cb2[0].xyzx
max r1.x, r1.x, l(0.000000)
add r1.yzw, -v4.xxyz, r5.xxyz
dp3 r2.w, r1.yzwy, r1.yzwy
rsq r2.w, r2.w
mul r3.xyz, r1.yzwy, r2.wwww
mad r1.yzw, r1.yyzw, r2.wwww, cb2[0].xxyz
dp3 r2.w, r2.xyzx, r3.xyzx
max r2.w, r2.w, l(0.000000)
mad r3.x, -r0.w, r0.w, l(1.000000)
mul r3.y, r0.w, r0.w
mad r3.z, r1.x, r3.x, r3.y
mad r3.x, r2.w, r3.x, r3.y
mul r3.z, r2.w, r3.z
add r2.w, -r2.w, l(1.000000)
mad r3.x, r1.x, r3.x, r3.z
add r3.x, r3.x, l(0.000010)
div r3.x, l(2.000000), r3.x
dp3 r3.z, r1.yzwy, r1.yzwy
max r3.z, r3.z, l(0.001000)
rsq r3.z, r3.z
mul r1.yzw, r1.yyzw, r3.zzzz
dp3 r2.x, r2.xyzx, r1.yzwy
dp3 r1.y, cb2[0].xyzx, r1.yzwy
max r1.z, r2.x, l(0.000000)
mul r1.z, r1.z, r1.z
mad r1.w, r3.y, r3.y, l(-1.000000)
mul r2.x, r3.y, r3.y
mad r1.z, r1.z, r1.w, l(1.000000)
mul r1.w, r1.z, l(3.14159274)
mad r1.z, r1.w, r1.z, l(1.000000012E-007)
div r1.z, r2.x, r1.z
mul r1.z, r1.z, r3.x
mul r1.z, r1.z, l(0.785398185)
max r1.yw, r1.yyyz, l(0.000000, 0.000000, 0.000000, 0.000100)
sqrt r1.w, r1.w
eq r2.x, cb0[3].w, l(0.000000)
movc r1.z, r2.x, r1.w, r1.z
mul r1.z, r1.x, r1.z
max r1.z, r1.z, l(0.000000)
dp3 r1.w, cb0[2].xyzx, cb0[2].xyzx
ne r1.w, r1.w, l(0.000000)
and r1.w, r1.w, l(0x3f800000)
mul r1.z, r1.w, r1.z
mul r2.xyz, r1.zzzz, cb0[6].xyzx
add r1.z, -r1.y, l(1.000000)
mul r1.y, r1.y, r1.y
dp2 r0.w, r1.yyyy, r0.wwww
add r0.w, r0.w, l(-0.500000)
mul r1.y, r1.z, r1.z
mul r1.y, r1.y, r1.y
mul r1.y, r1.z, r1.y
add r3.xyz, -cb0[2].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r1.yzw, r3.xxyz, r1.yyyy, cb0[2].xxyz
mul r1.yzw, r1.yyzw, r2.xxyz
mul r2.x, r2.w, r2.w
mul r2.x, r2.x, r2.x
mul r2.x, r2.w, r2.x
mad r2.x, r0.w, r2.x, l(1.000000)
add r2.y, -r1.x, l(1.000000)
mul r2.z, r2.y, r2.y
mul r2.z, r2.z, r2.z
mul r2.y, r2.y, r2.z
mad r0.w, r0.w, r2.y, l(1.000000)
mul r0.w, r2.x, r0.w
mul r0.w, r1.x, r0.w
mul r2.xyz, r0.wwww, cb0[6].xyzx
mad o0.xyz, r0.xyzx, r2.xyzx, r1.yzwy
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used