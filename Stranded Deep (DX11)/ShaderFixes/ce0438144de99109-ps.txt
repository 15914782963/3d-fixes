// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed ce0438144de99109-ps.txt
// 3DMigoto: ce0438144de99109 | Matched 2 variants of 1 shaders: Ceto/OceanTopSide_Transparent
//
//       Unity headers extracted from OceanTopSide_Transparent.shader
//       Shader "Ceto/OceanTopSide_Transparent" {
//         Fallback Off
//         SubShader 1/1 {
//           LOD 200
//           Tags { "QUEUE"="Transparent-150" "IGNOREPROJECTOR"="true" "RenderType"="Ceto_ProjectedGrid_Top" "OceanMask"="Ceto_ProjectedGrid_Top" }
//           GrabPass {
//             "Ceto_RefractionGrab"
//            }
//           Pass 1/2 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent-150" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="Ceto_ProjectedGrid_Top" "OceanMask"="Ceto_ProjectedGrid_Top" }
//             Blend SrcAlpha OneMinusSrcAlpha
//             GpuProgramID 10650
//             Program "fp" {
//               SubProgram "d3d11 " {
// 1:              GpuProgramIndex 161
// 2:              GpuProgramIndex 169
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from OceanTopSide_Transparent.shader.decompressed:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201510240 165 9 2
// 1:   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "CETO_REFLECTION_ON" }
// 2:   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "CETO_USE_OCEAN_DEPTHS_BUFFER" "CETO_REFLECTION_ON" }
//      undeciphered2: 1 9 4 9 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 832
//      Vector 48 [unity_ColorSpaceLuminance]
//      Vector 96 [_LightColor0]
//      Float 128 [Ceto_SpecularRoughness]
//      Float 132 [Ceto_SpecularIntensity]
//      Float 136 [Ceto_MinFresnel]
//      Vector 144 [Ceto_ReflectionTint] 3
//      Float 156 [Ceto_ReflectionDistortion]
//      Vector 176 [Ceto_PosOffset] 3
//      Vector 320 [Ceto_GridSizes]
//      Vector 352 [Ceto_GridScale] 2
//      Float 384 [Ceto_GridEdgeBorder]
//      Float 388 [Ceto_OceanLevel]
//      Vector 528 [Ceto_FoamTint] 3
//      Vector 592 [Ceto_AbsCof]
//      Vector 720 [Ceto_FoamTextureScale0]
//      Vector 736 [Ceto_FoamTextureScale1]
//      Float 752 [Ceto_TextureWaveFoam]
//      Vector 768 [_Beam_OceanColor]
//      Matrix 192 [Ceto_Interpolation]
//      Matrix 256 [Ceto_ProjectorVP]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 720
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 608 [unity_SHAr]
//      Vector 624 [unity_SHAg]
//      Vector 640 [unity_SHAb]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [Ceto_Overlay_ClipMap] 2D 6
//      SetTexture 1 [Ceto_SlopeMap0] 2D 3
//      SetTexture 2 [Ceto_FoamMap0] 2D 2
//      SetTexture 3 [Ceto_Overlay_NormalMap] 2D 4
//      SetTexture 4 [Ceto_Overlay_FoamMap] 2D 5
//      SetTexture 5 [Ceto_Reflections] 2D 1
//      SetTexture 6 [Ceto_FoamTexture0] 2D 7
//      SetTexture 7 [Ceto_FoamTexture1] 2D 8
//      SetTexture 8 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Dec 10 03:50:17 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy w
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyz         8     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[49], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyw
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_temps 17
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed ce0438144de99109-ps.txt
mov r13.xyzw, cb1[4].xyzw
mov r14.xyzw, l(0)
mul r14.x, -r12.x, r12.y
mul r16.xyzw, cb10[0].xyzw, r14.xxxx
mad r16.xyzw, cb10[1].xyzw, r14.yyyy, r16.xyzw
mad r16.xyzw, cb10[2].xyzw, r14.zzzz, r16.xyzw
mad r16.xyzw, cb10[3].xyzw, r14.wwww, r16.xyzw
mul r15.xyzw, cb11[12].xyzw, r16.xxxx
mad r15.xyzw, cb11[13].xyzw, r16.yyyy, r15.xyzw
mad r15.xyzw, cb11[14].xyzw, r16.zzzz, r15.xyzw
mad r15.xyzw, cb11[15].xyzw, r16.wwww, r15.xyzw
add r13.xyz, r13.xyz, -r15.xyz

mov r0.y, v1.w
mov r0.z, v2.w
mov r0.w, v3.w
add r1.xyz, -r0.yzwy, r13.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, r1.xyzx
div r3.xy, v5.xyxx, v5.wwww
mul r4.xyz, cb0[17].xywx, cb0[24].yyyy
mad r4.xyz, cb0[16].xywx, v4.xxxx, r4.xyzx
mad r4.xyz, cb0[18].xywx, v4.zzzz, r4.xyzx
add r4.xyz, r4.xyzx, cb0[19].xywx
div r3.zw, r4.xxxy, r4.zzzz
sample_l r4.xyzw, r3.zwzz, t0.xyzw, s6, l(0.000000)
mov_sat r4.x, r4.x
add r1.w, -r4.x, l(0.500000)
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
add r4.xyz, -v4.xyzx, r13.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx
mov_sat r5.xy, v7.xyxx
mov r6.x, cb0[12].x
mov r6.y, cb0[13].x
mov r6.z, cb0[14].x
mov r6.w, cb0[15].x
add r7.x, -r6.x, cb0[12].y
add r7.y, -r6.y, cb0[13].y
add r7.z, -r6.z, cb0[14].y
add r7.w, -r6.w, cb0[15].y
mad r8.xyzw, r5.xxxx, r7.xyzw, r6.xyzw
mov r9.x, cb0[12].w
mov r9.y, cb0[13].w
mov r9.z, cb0[14].w
mov r9.w, cb0[15].w
add r10.x, -r9.x, cb0[12].z
add r10.y, -r9.y, cb0[13].z
add r10.z, -r9.z, cb0[14].z
add r10.w, -r9.w, cb0[15].z
mad r11.xyzw, r5.xxxx, r10.xyzw, r9.xyzw
add r11.xyzw, -r8.xyzw, r11.xyzw
mad r5.xyzw, r5.yyyy, r11.xyzw, r8.xyzw
div r5.xyz, r5.xyzx, r5.wwww
mad r6.xyzw, r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
mad r7.xyzw, r10.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r9.xyzw
add r7.xyzw, -r6.xyzw, r7.xyzw
mad r6.xyzw, r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
div r6.xyz, r6.xyzx, r6.wwww
add r6.xyz, r5.xyzx, -r6.xyzx
dp3 r1.w, r6.xyzx, r6.xyzx
rsq r1.w, r1.w
mul r6.xyzw, r1.wwww, r6.xzxz
max r6.xyzw, r6.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
min r6.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add_sat r1.w, v7.w, v7.z
mul r6.xyzw, r1.wwww, r6.xyzw
mad r5.xyzw, r6.xyzw, cb0[24].xxxx, r5.xzxz
add r5.xyzw, r5.xyzw, cb0[11].xzxz
mul r6.xyzw, cb0[20].xxyy, cb0[22].xxxx
div r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r6.xyzw
mul r5.xyzw, r5.xyzw, r6.xyzw
sample r6.xyzw, r5.xyxx, t1.xyzw, s3
sample r7.xyzw, r5.zwzz, t1.xyzw, s3
add r6.xy, r6.xyxx, r7.zwzz
sample r7.xyzw, r5.xyxx, t2.xyzw, s2
sample r5.xyzw, r5.zwzz, t2.xyzw, s2
add r1.w, r5.y, r7.x
mov_sat r1.w, -r1.w
sample_l r5.xyzw, r3.zwzz, t3.wxyz, s4, l(0.000000)
sample_l r7.xyzw, r3.zwzz, t4.wxyz, s5, l(0.000000)
mov_sat r5.x, r5.x
add r2.w, -r5.x, l(1.000000)
mov_sat r7.x, r7.x
add r3.z, -r7.x, l(1.000000)
mul r6.xz, r2.wwww, -r6.xxyx
mov r6.y, l(1.000000)
add r5.xyz, r5.yzwy, r6.xyzx
dp3 r2.w, r5.xyzx, r5.xyzx
rsq r2.w, r2.w
mul r5.xyz, r2.wwww, r5.xyzx
mul r1.w, r1.w, r3.z
dp3 r2.w, r4.xyzx, r5.xyzx
lt r3.z, r2.w, l(0.000000)
add r2.w, r2.w, r2.w
mad r6.xyz, r4.xyzx, -r2.wwww, r5.xyzx
movc r5.xyz, r3.zzzz, r6.xyzx, r5.xyzx
mad r3.xy, r5.xzxx, cb0[9].wwww, r3.xyxx
sample_l r3.xyzw, r3.xyxx, t5.xyzw, s1, l(0.000000)
mul r3.xyz, r3.xyzx, cb0[9].xyzx
add r2.w, -cb0[8].z, l(1.000000)
dp3 r3.w, r4.xyzx, r5.xyzx
mad r4.x, |r3.w|, |r3.w|, l(0.768900156)
lt r4.y, l(0.000000), r4.x
sqrt r4.x, r4.x
add r4.z, -|r3.w|, r4.x
add r4.x, |r3.w|, r4.x
div r4.w, r4.z, r4.x
mad r4.x, |r3.w|, r4.x, l(-1.000000)
mad r3.w, |r3.w|, r4.z, l(1.000000)
div r3.w, r4.x, r3.w
mul r4.x, r4.w, r4.w
mul r4.x, r4.x, l(0.500000)
mad r3.w, r3.w, r3.w, l(1.000000)
mul r3.w, r3.w, r4.x
movc r3.w, r4.y, r3.w, l(1.000000)
mad_sat r2.w, r2.w, r3.w, cb0[8].z
add r3.w, -r2.w, l(1.000000)
mul r4.xyz, r3.wwww, cb0[48].xyzx
mad r3.xyz, r3.xyzx, r2.wwww, r4.xyzx
add r4.xy, v4.xzxx, cb0[45].zzzz
mul r4.xy, r4.xyxx, cb0[45].xyxx
sample r4.xyzw, r4.xyxx, t6.xyzw, s7
add r4.xy, v4.xzxx, cb0[46].zzzz
mul r4.xy, r4.xyxx, cb0[46].xyxx
sample r6.xyzw, r4.xyxx, t7.xyzw, s8
mul r4.x, r6.w, l(0.500000)
mad r4.x, r4.w, l(0.500000), r4.x
mad r4.y, r1.w, r4.x, -r1.w
mad r1.w, cb0[47].x, r4.y, r1.w
mad r1.w, r7.y, r4.x, r1.w
add r1.w, r7.z, r1.w
mul r4.xyz, r1.wwww, cb0[33].xyzx
add r4.w, -r1.w, l(1.000000)
mul r6.xyz, r4.wwww, -cb0[37].xyzx
mul r6.xyz, r6.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
exp r6.xyz, r6.xyzx
mad r4.xyz, r4.xyzx, r6.xyzx, -r3.xyzx
mad r3.xyz, r1.wwww, r4.xyzx, r3.xyzx
mov r5.w, -r5.z
dp3 r4.x, v1.xzyx, r5.xywx
dp3 r4.y, v2.xzyx, r5.xywx
dp3 r4.z, v3.xzyx, r5.xywx
eq r1.w, cb3[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb3[0].y, l(1.000000)
  mul r6.xyz, v2.wwww, cb3[2].xyzx
  mad r6.xyz, cb3[1].xyzx, v1.wwww, r6.xyzx
  mad r6.xyz, cb3[3].xyzx, v3.wwww, r6.xyzx
  add r6.xyz, r6.xyzx, cb3[4].xyzx
  movc r0.yzw, r1.wwww, r6.xxyz, r0.yyzw
  add r0.yzw, r0.yyzw, -cb3[6].xxyz
  mul r6.yzw, r0.yyzw, cb3[5].xxyz
  mul r0.y, r6.y, l(0.250000)
  mul r0.z, cb3[0].z, l(0.500000)
  mad r0.w, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.z, r0.y
  min r6.x, r0.w, r0.y
  sample r7.xyzw, r6.xzwx, t8.xyzw, s0
  add r0.yzw, r6.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r8.xyzw, r0.yzwy, t8.xyzw, s0
  add r0.yzw, r6.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r6.xyzw, r0.yzwy, t8.xyzw, s0
  mov r5.w, l(1.000000)
  dp4 r7.x, r7.xyzw, r5.xyzw
  dp4 r7.y, r8.xyzw, r5.xyzw
  dp4 r7.z, r6.xyzw, r5.xyzw
else 
  mov r5.w, l(1.000000)
  dp4 r7.x, cb2[38].xyzw, r5.xyzw
  dp4 r7.y, cb2[39].xyzw, r5.xyzw
  dp4 r7.z, cb2[40].xyzw, r5.xyzw
endif 
add r0.yzw, r7.xxyz, v8.xxyz
max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r1.w, cb0[3].w, l(0.000000)
log r6.xyz, r0.yzwy
mul r6.xyz, r6.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r6.xyz, r6.xyzx
mad r6.xyz, r6.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r0.yzw, r1.wwww, r6.xxyz, r0.yyzw
mad r1.xyz, r1.xyzx, r0.xxxx, cb2[0].xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
dp3 r0.x, r1.xyzx, r4.xyzx
mad r1.x, -r0.x, r0.x, l(1.000000)
div r1.x, r1.x, cb0[8].x
mul r1.x, r1.x, l(-2.000000)
add r0.x, r0.x, l(1.000000)
div r0.x, r1.x, r0.x
mul r0.x, r0.x, l(1.442695)
exp r0.x, r0.x
mul r1.x, cb0[8].x, l(12.566371)
div r0.x, r0.x, r1.x
dp3 r1.x, cb2[0].xyzx, r4.xyzx
dp3 r1.y, r2.xyzx, r4.xyzx
max r1.xy, r1.xyxx, l(0.010000, 0.010000, 0.000000, 0.000000)
lt r1.z, cb2[0].y, l(0.000000)
mul r0.x, r0.x, cb0[8].y
div r1.x, r1.x, r1.y
sqrt r1.x, r1.x
mul r0.x, r0.x, r1.x
max r0.x, r0.x, l(0.000000)
dp3 r1.x, r5.xyzx, cb2[0].xyzx
max r1.x, r1.x, l(0.000000)
mul r2.xyz, r3.xyzx, cb0[6].xyzx
mul r4.xyz, r0.xxxx, cb0[6].xyzx
movc r1.yzw, r1.zzzz, l(0,0,0,0), r4.xxyz
mad r2.xyz, r2.xyzx, r1.xxxx, r1.yzwy
add r1.xyz, r1.yzwy, r3.xyzx
mul r2.xyz, r3.wwww, r2.xyzx
mad r1.xyz, r1.xyzx, r2.wwww, r2.xyzx
mul r0.xyz, r0.yzwy, r3.xyzx
mad o0.xyz, r0.xyzx, r3.wwww, r1.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used