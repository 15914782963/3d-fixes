// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a1315f2efcda0d92-ps.txt
// 3DMigoto: a1315f2efcda0d92 |    Unity headers extracted from TMP_SDF-Surface.shader
//    Shader "TextMeshPro/Distance Field (Surface)" {
//      Properties {
//       _FaceTex ("Fill Texture", 2D) = "white" { }
//       _FaceUVSpeedX ("Face UV Speed X", Range(-5.000000,5.000000)) = 0.000000
//       _FaceUVSpeedY ("Face UV Speed Y", Range(-5.000000,5.000000)) = 0.000000
//       _FaceColor ("Fill Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _FaceDilate ("Face Dilate", Range(-1.000000,1.000000)) = 0.000000
//       _OutlineColor ("Outline Color", Color) = (0.000000,0.000000,0.000000,1.000000)
//       _OutlineTex ("Outline Texture", 2D) = "white" { }
//       _OutlineUVSpeedX ("Outline UV Speed X", Range(-5.000000,5.000000)) = 0.000000
//       _OutlineUVSpeedY ("Outline UV Speed Y", Range(-5.000000,5.000000)) = 0.000000
//       _OutlineWidth ("Outline Thickness", Range(0.000000,1.000000)) = 0.000000
//       _OutlineSoftness ("Outline Softness", Range(0.000000,1.000000)) = 0.000000
//       _Bevel ("Bevel", Range(0.000000,1.000000)) = 0.500000
//       _BevelOffset ("Bevel Offset", Range(-0.500000,0.500000)) = 0.000000
//       _BevelWidth ("Bevel Width", Range(-0.500000,0.500000)) = 0.000000
//       _BevelClamp ("Bevel Clamp", Range(0.000000,1.000000)) = 0.000000
//       _BevelRoundness ("Bevel Roundness", Range(0.000000,1.000000)) = 0.000000
//       _BumpMap ("Normalmap", 2D) = "bump" { }
//       _BumpOutline ("Bump Outline", Range(0.000000,1.000000)) = 0.500000
//       _BumpFace ("Bump Face", Range(0.000000,1.000000)) = 0.500000
//       _ReflectFaceColor ("Face Color", Color) = (0.000000,0.000000,0.000000,1.000000)
//       _ReflectOutlineColor ("Outline Color", Color) = (0.000000,0.000000,0.000000,1.000000)
//       _Cube ("Reflection Cubemap", CUBE) = "black" { }
//       _EnvMatrixRotation ("Texture Rotation", Vector) = (0.000000,0.000000,0.000000,0.000000)
//       _SpecColor ("Specular Color", Color) = (0.000000,0.000000,0.000000,1.000000)
//       _FaceShininess ("Face Shininess", Range(0.000000,1.000000)) = 0.000000
//       _OutlineShininess ("Outline Shininess", Range(0.000000,1.000000)) = 0.000000
//       _GlowColor ("Color", Color) = (0.000000,1.000000,0.000000,0.500000)
//       _GlowOffset ("Offset", Range(-1.000000,1.000000)) = 0.000000
//       _GlowInner ("Inner", Range(0.000000,1.000000)) = 0.050000
//       _GlowOuter ("Outer", Range(0.000000,1.000000)) = 0.050000
//       _GlowPower ("Falloff", Range(1.000000,0.000000)) = 0.750000
//       _WeightNormal ("Weight Normal", Float) = 0.000000
//       _WeightBold ("Weight Bold", Float) = 0.500000
//       _ShaderFlags ("Flags", Float) = 0.000000
//       _ScaleRatioA ("Scale RatioA", Float) = 1.000000
//       _ScaleRatioB ("Scale RatioB", Float) = 1.000000
//       _ScaleRatioC ("Scale RatioC", Float) = 1.000000
//       _MainTex ("Font Atlas", 2D) = "white" { }
//       _TextureWidth ("Texture Width", Float) = 512.000000
//       _TextureHeight ("Texture Height", Float) = 512.000000
//       _GradientScale ("Gradient Scale", Float) = 5.000000
//       _ScaleX ("Scale X", Float) = 1.000000
//       _ScaleY ("Scale Y", Float) = 1.000000
//       _PerspectiveFilter ("Perspective Correction", Range(0.000000,1.000000)) = 0.875000
//       _VertexOffsetX ("Vertex OffsetX", Float) = 0.000000
//       _VertexOffsetY ("Vertex OffsetY", Float) = 0.000000
//      }
//      CustomEditor "TMPro.EditorUtilities.TMP_SDFShaderGUI"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Cull [_CullMode]
//          Blend SrcAlpha One
//          ColorMask RGB
//          GpuProgramID 94129
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 45
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from TMP_SDF-Surface.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 132 8 0
//   Keywords { "DIRECTIONAL" "GLOW_ON" }
//   undeciphered2: 1 4 3 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 608
//   Vector 96 [_LightColor0]
//   Vector 112 [_SpecColor]
//   Float 128 [_FaceUVSpeedX]
//   Float 132 [_FaceUVSpeedY]
//   Vector 144 [_FaceColor]
//   Float 164 [_OutlineSoftness]
//   Float 168 [_OutlineUVSpeedX]
//   Float 172 [_OutlineUVSpeedY]
//   Vector 176 [_OutlineColor]
//   Float 192 [_OutlineWidth]
//   Float 196 [_Bevel]
//   Float 200 [_BevelOffset]
//   Float 204 [_BevelWidth]
//   Float 208 [_BevelClamp]
//   Float 212 [_BevelRoundness]
//   Float 216 [_BumpOutline]
//   Float 220 [_BumpFace]
//   Vector 416 [_GlowColor]
//   Float 432 [_GlowOffset]
//   Float 436 [_GlowOuter]
//   Float 440 [_GlowInner]
//   Float 444 [_GlowPower]
//   Float 448 [_ShaderFlags]
//   Float 460 [_ScaleRatioA]
//   Float 464 [_ScaleRatioB]
//   Float 536 [_TextureWidth]
//   Float 540 [_TextureHeight]
//   Float 544 [_GradientScale]
//   Float 560 [_FaceShininess]
//   Float 564 [_OutlineShininess]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_MainTex] 2D 3
//   SetTexture 1 [_FaceTex] 2D 0
//   SetTexture 2 [_OutlineTex] 2D 1
//   SetTexture 3 [_BumpMap] 2D 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Dec 10 03:49:44 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// COLOR                    0   xyzw        6     NONE   float   xyzw
// TEXCOORD                 5   xy          7     NONE   float   xy  
// TEXCOORD                 6   xyz         8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[36], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xy
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a1315f2efcda0d92-ps.txt
mov r7.xyzw, cb1[4].xyzw
mov r8.xyzw, l(0)
mul r8.x, -r6.x, r6.y
mul r10.xyzw, cb10[0].xyzw, r8.xxxx
mad r10.xyzw, cb10[1].xyzw, r8.yyyy, r10.xyzw
mad r10.xyzw, cb10[2].xyzw, r8.zzzz, r10.xyzw
mad r10.xyzw, cb10[3].xyzw, r8.wwww, r10.xyzw
mul r9.xyzw, cb11[12].xyzw, r10.xxxx
mad r9.xyzw, cb11[13].xyzw, r10.yyyy, r9.xyzw
mad r9.xyzw, cb11[14].xyzw, r10.zzzz, r9.xyzw
mad r9.xyzw, cb11[15].xyzw, r10.wwww, r9.xyzw
add r7.xyz, r7.xyz, -r9.xyz

mul r0.x, cb0[27].x, cb0[29].x
mul r0.x, r0.x, v7.y
sample r1.xyzw, v1.xyxx, t0.xyzw, s3
add r0.y, -r1.w, l(0.500000)
add r0.y, r0.y, -v7.x
mad r0.y, r0.y, v7.y, l(0.500000)
mad r0.x, -r0.x, l(0.500000), r0.y
ge r0.z, r0.x, l(0.000000)
and r0.z, r0.z, l(0x3f800000)
mad r0.w, cb0[27].y, cb0[29].x, -cb0[27].z
mad r0.z, r0.z, r0.w, cb0[27].z
mul r0.z, r0.z, v7.y
mad r0.w, r0.z, l(0.500000), l(1.000000)
mul r0.z, r0.z, l(0.500000)
min r0.z, r0.z, l(1.000000)
sqrt r0.z, r0.z
div r0.x, r0.x, r0.w
min r0.x, |r0.x|, l(1.000000)
log r0.x, r0.x
mul r0.x, r0.x, cb0[27].w
exp r0.x, r0.x
add r0.x, -r0.x, l(1.000000)
mul r0.x, r0.z, r0.x
dp2_sat r0.x, cb0[26].wwww, r0.xxxx
mad r0.z, -r0.x, v6.w, l(1.000000)
mul r0.x, r0.x, v6.w
mad r1.xy, cb0[10].zwzz, cb1[0].yyyy, v1.zwzz
sample r1.xyzw, r1.xyxx, t2.xyzw, s1
mul r1.xyz, r1.xyzx, cb0[11].xyzx
mul r0.w, v6.w, cb0[11].w
mul r2.w, r1.w, r0.w
mul r2.xyz, r1.xyzx, r2.wwww
mad r1.xy, cb0[8].xyxx, cb1[0].yyyy, v1.zwzz
sample r1.xyzw, r1.xyxx, t1.xyzw, s0
mul r3.xyzw, v6.xyzw, cb0[9].xyzw
mul r1.xyzw, r1.xyzw, r3.xyzw
mul r1.xyz, r1.wwww, r1.xyzx
add r2.xyzw, -r1.xyzw, r2.xyzw
mul r0.w, cb0[12].x, cb0[28].w
mul r0.w, r0.w, v7.y
min r3.x, r0.w, l(1.000000)
sqrt r3.x, r3.x
mad_sat r3.y, r0.w, l(0.500000), r0.y
mad r0.y, -r0.w, l(0.500000), r0.y
mul r0.w, r3.x, r3.y
mad r1.xyzw, r0.wwww, r2.xyzw, r1.xyzw
mul r0.w, cb0[10].y, cb0[28].w
mul r2.x, r0.w, v7.y
mad r0.w, r0.w, v7.y, l(1.000000)
mad r0.y, r2.x, l(0.500000), r0.y
div_sat r0.y, r0.y, r0.w
add r0.y, -r0.y, l(1.000000)
mul r2.xyzw, r0.yyyy, r1.xyzw
mad r0.y, -r1.w, r0.y, l(1.000000)
mad r0.y, r0.y, r0.x, r2.w
max r0.w, r2.w, l(0.000100)
div r1.xyz, r2.xyzx, r0.wwww
mul r1.xyz, r2.wwww, r1.xyzx
mul r1.xyz, r0.zzzz, r1.xyzx
mad r0.xzw, cb0[26].xxyz, r0.xxxx, r1.xxyz
max r1.x, r0.y, l(0.000100)
mov o0.w, r0.y
div r0.xyz, r0.xzwx, r1.xxxx
mul r0.xyz, r0.xyzx, cb0[6].xyzx
add r0.w, -cb0[13].w, cb0[13].z
mad r0.w, r3.y, r0.w, cb0[13].w
sample r1.xyzw, v1.zwzz, t3.xyzw, s2
mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r1.xyxx, r1.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r1.z, r1.w
mad r1.xyz, r1.xyzx, r0.wwww, l(-0.000000, -0.000000, -1.000000, 0.000000)
mad r1.xyz, r2.wwww, r1.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
add r0.w, v7.x, cb0[12].z
div r2.xy, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[33].zwzz
mov r2.z, l(0)
add r4.xyzw, -r2.xzzy, v1.xyxy
add r2.xyzw, r2.xzzy, v1.xyxy
sample r5.xyzw, r4.xyxx, t0.wxyz, s3
sample r4.xyzw, r4.zwzz, t0.xyzw, s3
mov r5.z, r4.w
sample r4.xyzw, r2.xyxx, t0.xyzw, s3
sample r2.xyzw, r2.zwzz, t0.xyzw, s3
mov r5.w, r2.w
mov r5.y, r4.w
add r2.xyzw, r0.wwww, r5.xyzw
add r2.xyzw, r2.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
add r0.w, cb0[12].w, cb0[12].x
max r0.w, r0.w, l(0.010000)
div r2.xyzw, r2.xyzw, r0.wwww
mul r0.w, r0.w, cb0[12].y
mul r0.w, r0.w, cb0[34].x
mul r0.w, r0.w, l(-2.000000)
add_sat r2.xyzw, r2.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
mad r4.xyzw, r2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
add r4.xyzw, -|r4.xyzw|, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r1.w, cb0[28].x, l(0.500000)
ge r3.x, r1.w, -r1.w
frc r1.w, |r1.w|
movc r1.w, r3.x, r1.w, -r1.w
ge r1.w, r1.w, l(0.500000)
movc r2.xyzw, r1.wwww, r4.xyzw, r2.xyzw
mul r4.xyzw, r2.xyzw, l(1.570796, 1.570796, 1.570796, 1.570796)
sincos r4.xyzw, null, r4.xyzw
add r4.xyzw, -r2.xyzw, r4.xyzw
mad r2.xyzw, cb0[13].yyyy, r4.xyzw, r2.xyzw
add r1.w, -cb0[13].x, l(1.000000)
min r2.xyzw, r1.wwww, r2.xyzw
mul r2.xz, r0.wwww, r2.xxzx
mad r2.yz, r2.wwyw, r0.wwww, -r2.zzxz
mov r2.xw, l(-1.000000,0,0,1.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
rsq r0.w, r0.w
dp2 r1.w, r2.zwzz, r2.zwzz
rsq r1.w, r1.w
mul r4.x, r1.w, r2.z
mul r4.yz, r1.wwww, l(0.000000, 1.000000, 0.000000, 0.000000)
mov r2.z, l(0)
mul r2.xyz, r0.wwww, r2.xyzx
mul r3.xzw, r2.xxyz, r4.xxyz
mad r2.xyz, r4.zxyz, r2.yzxy, -r3.xzwx
add r1.xyz, -r1.xyzx, r2.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r2.x, v2.xyzx, -r1.xyzx
dp3 r2.y, v3.xyzx, -r1.xyzx
dp3 r2.z, v4.xyzx, -r1.xyzx
add r1.xyz, -v5.xyzx, r7.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r2.xyzx, r1.xyzx
dp3 r1.x, r2.xyzx, cb2[0].xyzx
max r1.x, r1.x, l(0.000000)
max r0.w, r0.w, l(0.000000)
log r0.w, r0.w
add r1.y, -cb0[35].x, cb0[35].y
mad r1.y, r3.y, r1.y, cb0[35].x
mul r1.y, r1.y, l(128.000000)
mul r0.w, r0.w, r1.y
exp r0.w, r0.w
mul r1.yzw, cb0[6].xxyz, cb0[7].xxyz
mul r1.yzw, r0.wwww, r1.yyzw
mad o0.xyz, r0.xyzx, r1.xxxx, r1.yzwy
ret 
// Approximately 0 instruction slots used