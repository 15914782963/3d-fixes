// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed fce10cbd8f22b0fb-vs.txt
// 3DMigoto: fce10cbd8f22b0fb |    Unity headers extracted from BeamTeamVolumetricFog.shader
//    Shader "Beam Team/Post Effects/Volumetric Fog" {
//      Properties {
//       _MainTex ("Base (RGB)", 2D) = "black" { }
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Pass 1/1 {
//          ZTest Always
//          ZWrite Off
//          Cull Off
//          GpuProgramID 62218
//          Program "vp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 1
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from BeamTeamVolumetricFog.shader.decompressed:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201510240 12 0 0
//   Keywords { "INGAME" }
//   undeciphered2: 1 0 2 0 0 0
//   undeciphered3: 9 2 0 0 3 4
//   ConstBuffer "$Globals" 416
//   Vector 288 [_SunDirection] 3
//   Matrix 96 [_FrustumCornersWS]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   BindCB "$Globals" 0
//   BindCB "UnityPerDraw" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Dec 10 03:50:49 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
//
vs_4_0
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[26], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed
dcl_constantbuffer cb13[9], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r1.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity _FrustumCornersWS fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed fce10cbd8f22b0fb-vs.txt
add r5.x, cb13[7].z, cb13[7].w
rcp r5.x, r5.x
mov r6.xyzw, l(0)
add r6.x, r5.x, -r1.y
mul r6.x, r1.x, r6.x
mul r8.xyzw, cb10[0].xyzw, r6.xxxx
mad r8.xyzw, cb10[1].xyzw, r6.yyyy, r8.xyzw
mad r8.xyzw, cb10[2].xyzw, r6.zzzz, r8.xyzw
mad r8.xyzw, cb10[3].xyzw, r6.wwww, r8.xyzw
mul r7.xyzw, cb11[12].xyzw, r8.xxxx
mad r7.xyzw, cb11[13].xyzw, r8.yyyy, r7.xyzw
mad r7.xyzw, cb11[14].xyzw, r8.zzzz, r7.xyzw
mad r7.xyzw, cb11[15].xyzw, r8.wwww, r7.xyzw
// GOTCHA: _FrustumCornersWS is TRANSPOSED vs DX9!
add r2.xyzw, cb0[6].xyzw, -r7.xxxx
add r3.xyzw, cb0[7].xyzw, -r7.yyyy
add r4.xyzw, cb0[8].xyzw, -r7.zzzz

mul r0.xyzw, v0.yyyy, cb1[1].xyzw
mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
mad o0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
mov o1.xy, v1.xyxx
mov o2.xyz, -cb0[18].xyzx
add r0.x, -v1.y, l(1.000000)
mad r0.x, r0.x, l(2.000000), v1.x
add r0.x, r0.x, l(0.500000)
round_ni r0.x, r0.x
mov o3.w, r0.x
ftoi r0.x, r0.x
dp4 o3.x, r2.xyzw, icb[r0.x + 0].xyzw
dp4 o3.y, r3.xyzw, icb[r0.x + 0].xyzw
dp4 o3.z, r4.xyzw, icb[r0.x + 0].xyzw
ret 
// Approximately 0 instruction slots used