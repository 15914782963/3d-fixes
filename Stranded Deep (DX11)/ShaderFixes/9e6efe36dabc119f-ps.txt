// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9e6efe36dabc119f-ps.txt
// 3DMigoto: 9e6efe36dabc119f |    Unity headers extracted from Foliage - Double-Sided 2PASS Metallic.shader
//    Shader "Beam Team/Foliage/Foliage - Forward Cull Off 2PASS Metallic" {
//      Properties {
//      [Header(Diffuse)]  _Color ("Color", Color) = (1,1,1,1)
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//       _MainTex ("Diffuse Albedo (RGB)", 2D) = "white" { }
//      [Header(Packed Normals)]  _PackedTex ("Gloss (R) Normal X (G) Translucency (B) Normal Y (A)", 2D) = "white" { }
//      [Header(Translucency)] [Toggle(BEAM_SPEEDTREE_TRANSLUCENCY)]  _Translucent ("Translucent", Float) = 0
//       _TranslucencyColor ("Translucency Tint", Color) = (0.73,0.85,0.41,1)
//       _TranslucencyIntensity ("Translucency Intensity", Range(1,5)) = 1
//       _TranslucencyViewDependency ("Translucency View Dependency", Range(0,1)) = 0.5
//      [Header(Wind)] [MaterialEnum(None, 0, Fastest, 1, Fast, 2, Better, 3, Best, 4, Palm, 5)]  _WindQuality ("Wind Quality", Range(0,5)) = 0
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "RenderType"="Foliage" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="AlphaTest" "RenderType"="Foliage" }
//          ZWrite Off
//          Cull Front
//          Blend One One
//          GpuProgramID 107167
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 65
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Foliage - Double-Sided 2PASS Metallic.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 92 3 0
//   Keywords { "POINT" "SUNSHINE_DISABLED" }
//   undeciphered2: 1 3 3 3 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 720
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Float 592 [_Cutoff]
//   Vector 608 [_Color]
//   Matrix 128 [_LightMatrix0]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_PackedTex] 2D 2
//   SetTexture 2 [_LightTexture0] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 10 17:35:02 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[39], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9e6efe36dabc119f-ps.txt
mov r6.xyzw, cb1[4].xyzw
mov r7.xyzw, l(0)
mul r7.x, -r5.x, r5.y
mul r9.xyzw, cb10[0].xyzw, r7.xxxx
mad r9.xyzw, cb10[1].xyzw, r7.yyyy, r9.xyzw
mad r9.xyzw, cb10[2].xyzw, r7.zzzz, r9.xyzw
mad r9.xyzw, cb10[3].xyzw, r7.wwww, r9.xyzw
mul r8.xyzw, cb11[12].xyzw, r9.xxxx
mad r8.xyzw, cb11[13].xyzw, r9.yyyy, r8.xyzw
mad r8.xyzw, cb11[14].xyzw, r9.zzzz, r8.xyzw
mad r8.xyzw, cb11[15].xyzw, r9.wwww, r8.xyzw
add r6.xyz, r6.xyz, -r8.xyz

sample r0.xyzw, v5.xyxx, t0.xyzw, s1
mad r0.w, r0.w, cb0[38].w, -cb0[37].x
mul r0.xyz, r0.xyzx, cb0[38].xyzx
mul r0.xyz, r0.xyzx, cb0[2].wwww
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
sample r1.xyzw, v5.xyxx, t1.xyzw, s2
mad r2.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r0.w, -r1.x, v5.z, l(1.000000)
dp2 r1.x, r2.xyxx, r2.xyxx
min r1.x, r1.x, l(1.000000)
add r1.x, -r1.x, l(1.000000)
sqrt r2.z, r1.x
dp3 r1.x, v1.xyzx, r2.xyzx
dp3 r1.y, v2.xyzx, r2.xyzx
dp3 r1.z, v3.xyzx, r2.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
add r2.xyz, -v4.xyzx, r6.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
dp3 r1.w, r1.xyzx, r2.xyzx
add r2.w, -r1.w, l(0.000010)
lt r1.w, r1.w, l(0.000000)
mad r3.xyz, r2.xyzx, r2.wwww, r1.xyzx
movc r1.xyz, r1.wwww, r3.xyzx, r1.xyzx
add r3.xyz, -v4.xyzx, cb2[0].xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mad r4.xyz, r3.xyzx, r1.wwww, r2.xyzx
dp3 r2.x, r1.xyzx, r2.xyzx
max r2.x, r2.x, l(0.000000)
mul r2.yzw, r1.wwww, r3.xxyz
dp3 r1.w, r4.xyzx, r4.xyzx
max r1.w, r1.w, l(0.001000)
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r4.xyzx
dp3 r1.w, r1.xyzx, r3.xyzx
dp3 r1.x, r1.xyzx, r2.yzwy
dp3 r1.y, r2.yzwy, r3.xyzx
max r1.xyz, r1.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.z, r1.z, r1.z
mul r1.w, r0.w, r0.w
mad r2.y, r1.w, r1.w, l(-1.000000)
mad r1.z, r1.z, r2.y, l(1.000000)
mul r2.y, r1.z, l(3.14159274)
mad r1.z, r2.y, r1.z, l(1.000000012E-007)
mul r2.y, r1.w, r1.w
div r1.z, r2.y, r1.z
mad r2.y, -r0.w, r0.w, l(1.000000)
mad r2.z, r2.x, r2.y, r1.w
mad r1.w, r1.x, r2.y, r1.w
mul r1.w, r1.w, r2.x
add r2.x, -r2.x, l(1.000000)
mad r1.w, r1.x, r2.z, r1.w
add r1.w, r1.w, l(0.000010)
div r1.w, l(2.000000), r1.w
mul r1.z, r1.z, r1.w
mul r1.z, r1.z, l(0.785398185)
max r1.w, r1.z, l(0.000100)
sqrt r1.w, r1.w
eq r2.y, cb0[3].w, l(0.000000)
movc r1.z, r2.y, r1.w, r1.z
mul r1.z, r1.x, r1.z
max r1.z, r1.z, l(0.000000)
mul r2.yzw, v4.yyyy, cb0[9].xxyz
mad r2.yzw, cb0[8].xxyz, v4.xxxx, r2.yyzw
mad r2.yzw, cb0[10].xxyz, v4.zzzz, r2.yyzw
add r2.yzw, r2.yyzw, cb0[11].xxyz
dp3 r1.w, r2.yzwy, r2.yzwy
sample r3.xyzw, r1.wwww, t2.xyzw, s0
mul r2.yzw, r3.xxxx, cb0[6].xxyz
mul r3.xyz, r1.zzzz, r2.yzwy
add r1.z, -r1.y, l(1.000000)
mul r1.y, r1.y, r1.y
dp2 r0.w, r1.yyyy, r0.wwww
add r0.w, r0.w, l(-0.500000)
mul r1.y, r1.z, r1.z
mul r1.y, r1.y, r1.y
mul r1.y, r1.z, r1.y
add r4.xyz, -cb0[2].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r1.yzw, r4.xxyz, r1.yyyy, cb0[2].xxyz
mul r1.yzw, r1.yyzw, r3.xxyz
mul r3.x, r2.x, r2.x
mul r3.x, r3.x, r3.x
mul r2.x, r2.x, r3.x
mad r2.x, r0.w, r2.x, l(1.000000)
add r3.x, -r1.x, l(1.000000)
mul r3.y, r3.x, r3.x
mul r3.y, r3.y, r3.y
mul r3.x, r3.x, r3.y
mad r0.w, r0.w, r3.x, l(1.000000)
mul r0.w, r2.x, r0.w
mul r0.w, r1.x, r0.w
mul r2.xyz, r0.wwww, r2.yzwy
mad o0.xyz, r0.xyzx, r2.xyzx, r1.yzwy
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used