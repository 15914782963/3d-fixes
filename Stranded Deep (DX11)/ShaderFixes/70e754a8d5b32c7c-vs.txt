// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 70e754a8d5b32c7c-vs.txt
// 3DMigoto: 70e754a8d5b32c7c | Matched 3 variants of 2 shaders: TextMeshPro/Distance Field (Surface), TextMeshPro/Mobile/Distance Field (Surface)
//
// 4:    Unity headers extracted from TMP_SDF-Surface-Mobile.shader
// 3:    Unity headers extracted from TMP_SDF-Surface.shader
// 3:    Shader "TextMeshPro/Distance Field (Surface)" {
// 4:    Shader "TextMeshPro/Mobile/Distance Field (Surface)" {
//         Properties {
//          _FaceTex ("Fill Texture", 2D) = "white" { }
// 3:       _FaceUVSpeedX ("Face UV Speed X", Range(-5.000000,5.000000)) = 0.000000
// 3:       _FaceUVSpeedY ("Face UV Speed Y", Range(-5.000000,5.000000)) = 0.000000
//          _FaceColor ("Fill Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//          _FaceDilate ("Face Dilate", Range(-1.000000,1.000000)) = 0.000000
//          _OutlineColor ("Outline Color", Color) = (0.000000,0.000000,0.000000,1.000000)
//          _OutlineTex ("Outline Texture", 2D) = "white" { }
// 3:       _OutlineUVSpeedX ("Outline UV Speed X", Range(-5.000000,5.000000)) = 0.000000
// 3:       _OutlineUVSpeedY ("Outline UV Speed Y", Range(-5.000000,5.000000)) = 0.000000
//          _OutlineWidth ("Outline Thickness", Range(0.000000,1.000000)) = 0.000000
//          _OutlineSoftness ("Outline Softness", Range(0.000000,1.000000)) = 0.000000
// 3:       _Bevel ("Bevel", Range(0.000000,1.000000)) = 0.500000
// 3:       _BevelOffset ("Bevel Offset", Range(-0.500000,0.500000)) = 0.000000
// 3:       _BevelWidth ("Bevel Width", Range(-0.500000,0.500000)) = 0.000000
// 3:       _BevelClamp ("Bevel Clamp", Range(0.000000,1.000000)) = 0.000000
// 3:       _BevelRoundness ("Bevel Roundness", Range(0.000000,1.000000)) = 0.000000
// 3:       _BumpMap ("Normalmap", 2D) = "bump" { }
// 3:       _BumpOutline ("Bump Outline", Range(0.000000,1.000000)) = 0.500000
// 3:       _BumpFace ("Bump Face", Range(0.000000,1.000000)) = 0.500000
// 3:       _ReflectFaceColor ("Face Color", Color) = (0.000000,0.000000,0.000000,1.000000)
// 3:       _ReflectOutlineColor ("Outline Color", Color) = (0.000000,0.000000,0.000000,1.000000)
// 3:       _Cube ("Reflection Cubemap", CUBE) = "black" { }
// 3:       _EnvMatrixRotation ("Texture Rotation", Vector) = (0.000000,0.000000,0.000000,0.000000)
// 3:       _SpecColor ("Specular Color", Color) = (0.000000,0.000000,0.000000,1.000000)
// 3:       _FaceShininess ("Face Shininess", Range(0.000000,1.000000)) = 0.000000
// 3:       _OutlineShininess ("Outline Shininess", Range(0.000000,1.000000)) = 0.000000
//          _GlowColor ("Color", Color) = (0.000000,1.000000,0.000000,0.500000)
//          _GlowOffset ("Offset", Range(-1.000000,1.000000)) = 0.000000
//          _GlowInner ("Inner", Range(0.000000,1.000000)) = 0.050000
//          _GlowOuter ("Outer", Range(0.000000,1.000000)) = 0.050000
//          _GlowPower ("Falloff", Range(1.000000,0.000000)) = 0.750000
//          _WeightNormal ("Weight Normal", Float) = 0.000000
//          _WeightBold ("Weight Bold", Float) = 0.500000
//          _ShaderFlags ("Flags", Float) = 0.000000
//          _ScaleRatioA ("Scale RatioA", Float) = 1.000000
//          _ScaleRatioB ("Scale RatioB", Float) = 1.000000
//          _ScaleRatioC ("Scale RatioC", Float) = 1.000000
//          _MainTex ("Font Atlas", 2D) = "white" { }
//          _TextureWidth ("Texture Width", Float) = 512.000000
//          _TextureHeight ("Texture Height", Float) = 512.000000
//          _GradientScale ("Gradient Scale", Float) = 5.000000
//          _ScaleX ("Scale X", Float) = 1.000000
//          _ScaleY ("Scale Y", Float) = 1.000000
//          _PerspectiveFilter ("Perspective Correction", Range(0.000000,1.000000)) = 0.875000
//          _VertexOffsetX ("Vertex OffsetX", Float) = 0.000000
//          _VertexOffsetY ("Vertex OffsetY", Float) = 0.000000
//         }
//         CustomEditor "TMPro.EditorUtilities.TMP_SDFShaderGUI"
//         SubShader 1/1 {
//           LOD 300
//           Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
// 4:        Pass 1/2 {
// 3:        Pass 1/3 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//             ZWrite Off
//             Cull [_CullMode]
//             Blend SrcAlpha OneMinusSrcAlpha
//             ColorMask RGB
// 3:          GpuProgramID 23880
// 4:          GpuProgramID 32348
//             Program "vp" {
//               SubProgram "d3d11 " {
// 5:              GpuProgramIndex 3
// 2:              GpuProgramIndex 7
//               }
//             }
//           }
//         }
//       }
//
// 4: Unity 5.3 headers extracted from TMP_SDF-Surface-Mobile.shader.decompressed:
// 3: Unity 5.3 headers extracted from TMP_SDF-Surface.shader.decompressed:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201510240 104 0 0
// 2:   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "GLOW_ON" }
// 5:   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
//      undeciphered2: 1 0 5 0 0 0
//      undeciphered3: 159 6 0 0 2 1 1 2 3 4 4 5 7 8
//      ConstBuffer "$Globals" 608
//      Vector 48 [unity_ColorSpaceLuminance]
//      Float 160 [_FaceDilate]
//      Float 452 [_WeightNormal]
//      Float 456 [_WeightBold]
//      Float 460 [_ScaleRatioA]
//      Float 472 [_VertexOffsetX]
//      Float 476 [_VertexOffsetY]
//      Float 544 [_GradientScale]
//      Float 548 [_ScaleX]
//      Float 552 [_ScaleY]
//      Float 556 [_PerspectiveFilter]
//      Vector 576 [_MainTex_ST]
//      Vector 592 [_FaceTex_ST]
//      Matrix 272 [_EnvMatrix]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 96 [_ScreenParams]
//      ConstBuffer "UnityLighting" 720
//      Vector 32 [unity_4LightPosX0]
//      Vector 48 [unity_4LightPosY0]
//      Vector 64 [unity_4LightPosZ0]
//      Vector 80 [unity_4LightAtten0]
//      Vector 96 [unity_LightColor0]
//      Vector 112 [unity_LightColor1]
//      Vector 128 [unity_LightColor2]
//      Vector 144 [unity_LightColor3]
//      Vector 160 [unity_LightColor4]
//      Vector 176 [unity_LightColor5]
//      Vector 192 [unity_LightColor6]
//      Vector 208 [unity_LightColor7]
//      Vector 656 [unity_SHBr]
//      Vector 672 [unity_SHBg]
//      Vector 688 [unity_SHBb]
//      Vector 704 [unity_SHC]
//      ConstBuffer "UnityPerDraw" 352
//      Vector 336 [unity_WorldTransformParams]
//      Matrix 0 [glstate_matrix_mvp]
//      Matrix 192 [unity_ObjectToWorld]
//      Matrix 256 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 352
//      Matrix 80 [glstate_matrix_projection]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityPerDraw" 3
//      BindCB "UnityPerFrame" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Dec 10 03:49:07 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xy          6     NONE   float   xy  
// TEXCOORD                 5   xyz         7     NONE   float   xyz 
// TEXCOORD                 6   xyz         8     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[38], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[45], immediateIndexed
dcl_constantbuffer cb3[22], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xy
dcl_input v7.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xy
dcl_output o7.xyz
dcl_output o8.xyz
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 70e754a8d5b32c7c-vs.txt
mov r6.xyzw, cb1[4].xyzw
mov r7.xyzw, l(0)
mul r7.x, -r5.x, r5.y
mul r9.xyzw, cb10[0].xyzw, r7.xxxx
mad r9.xyzw, cb10[1].xyzw, r7.yyyy, r9.xyzw
mad r9.xyzw, cb10[2].xyzw, r7.zzzz, r9.xyzw
mad r9.xyzw, cb10[3].xyzw, r7.wwww, r9.xyzw
mul r8.xyzw, cb11[12].xyzw, r9.xxxx
mad r8.xyzw, cb11[13].xyzw, r9.yyyy, r8.xyzw
mad r8.xyzw, cb11[14].xyzw, r9.zzzz, r8.xyzw
mad r8.xyzw, cb11[15].xyzw, r9.wwww, r8.xyzw
add r6.xyz, r6.xyz, -r8.xyz

add r0.xy, v0.xyxx, cb0[29].zwzz
mul r1.xyzw, r0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
add o0.xyzw, r1.xyzw, cb3[3].xyzw
mul r0.w, v4.x, l(0.000244140625)
round_ni r1.z, r0.w
mad r1.w, -r1.z, l(4096.000000), v4.x
mul r1.xy, r1.zwzz, cb0[37].xyxx
mad o1.zw, r1.xxxy, l(0.000000, 0.000000, 0.00195312500, 0.00195312500), cb0[37].zzzw
mad o1.xy, v3.xyxx, cb0[36].xyxx, cb0[36].zwzz
mul r1.xyz, r6.yyyy, cb3[17].xyzx
mad r1.xyz, cb3[16].xyzx, r6.xxxx, r1.xyzx
mad r1.xyz, cb3[18].xyzx, r6.zzzz, r1.xyzx
add r1.xyz, r1.xyzx, cb3[19].xyzx
mov r0.z, v0.z
add r1.xyz, -r0.xyzx, r1.xyzx
dp3 r0.z, v2.xyzx, r1.xyzx
lt r0.w, l(0.000000), r0.z
lt r0.z, r0.z, l(0.000000)
iadd r0.z, -r0.w, r0.z
itof r0.z, r0.z
mul r1.xyz, r0.zzzz, v2.xyzx
mov r2.x, cb3[16].y
mov r2.y, cb3[17].y
mov r2.zw, cb3[18].yyyy
mul r2.xyzw, r1.yyyy, r2.xyzw
mov r3.x, cb3[16].x
mov r3.y, cb3[17].x
mov r3.zw, cb3[18].xxxx
mad r2.xyzw, r3.xyzw, r1.xxxx, r2.xyzw
mov r3.x, cb3[16].z
mov r3.y, cb3[17].z
mov r3.zw, cb3[18].zzzz
mad r1.xyzw, r3.xyzw, r1.zzzz, r2.xyzw
dp3 r0.z, r1.xywx, r1.xywx
rsq r0.z, r0.z
mul r1.xyzw, r0.zzzz, r1.xyzw
mul r2.xyz, v1.yyyy, cb3[13].yzxy
mad r2.xyz, cb3[12].yzxy, v1.xxxx, r2.xyzx
mad r2.xyz, cb3[14].yzxy, v1.zzzz, r2.xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
mul r3.xyz, r1.wxyw, r2.xyzx
mad r3.xyz, r1.ywxy, r2.yzxy, -r3.xyzx
mul r0.z, v1.w, cb3[21].w
mul r3.xyz, r0.zzzz, r3.xyzx
mov o2.y, r3.x
mov o2.z, r1.x
mov o2.x, r2.z
mul r4.xyz, r0.yyyy, cb3[13].xyzx
mad r4.xyz, cb3[12].xyzx, r0.xxxx, r4.xyzx
mad r4.xyz, cb3[14].xyzx, v0.zzzz, r4.xyzx
mad r4.xyz, cb3[15].xyzx, v0.wwww, r4.xyzx
mov o2.w, r4.x
mov o3.x, r2.x
mov o4.x, r2.y
mov o3.z, r1.y
mov o3.y, r3.y
mov o4.y, r3.z
mov o3.w, r4.y
mov o4.z, r1.w
mov o4.w, r4.z
mov o5.xyzw, v7.xyzw
ge r0.z, l(0.000000), v4.y
and r0.z, r0.z, l(0x3f800000)
add r0.w, -cb0[28].y, cb0[28].z
mad r0.z, r0.z, r0.w, cb0[28].y
div r0.z, r0.z, cb0[34].x
mul r0.w, cb0[10].x, cb0[28].w
mad o6.x, r0.w, l(0.500000), r0.z
mul r0.y, r0.y, cb3[1].w
mad r0.x, cb3[0].w, r0.x, r0.y
mad r0.x, cb3[2].w, v0.z, r0.x
mad r0.x, cb3[3].w, v0.w, r0.x
mul r0.yz, cb1[6].yyyy, cb4[6].xxyx
mad r0.yz, cb4[5].xxyx, cb1[6].xxxx, r0.yyzy
mul r0.yz, r0.yyzy, cb0[34].yyzy
div r0.xy, r0.xxxx, r0.yzyy
dp2 r0.x, r0.xyxx, r0.xyxx
rsq r0.x, r0.x
mul r0.y, |v4.y|, cb0[34].x
mul r0.x, r0.x, r0.y
mul r0.y, r0.x, l(1.500000)
add r0.z, -cb0[34].w, l(1.000000)
mul r0.y, r0.z, r0.y
mad r0.x, r0.x, l(1.500000), -r0.y
add r2.xyz, -r4.xyzx, r6.xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r3.xyz, r0.zzzz, r2.xyzx
dp3 r0.z, r1.xywx, r3.xyzx
mad o6.y, |r0.z|, r0.x, r0.y
mul r0.xyz, r2.yyyy, cb0[18].xyzx
mad r0.xyz, cb0[17].xyzx, r2.xxxx, r0.xyzx
mad o7.xyz, cb0[19].xyzx, r2.zzzz, r0.xyzx
add r0.xyzw, -r4.yyyy, cb2[3].xyzw
mul r2.xyzw, r1.yyyy, r0.xyzw
mul r0.xyzw, r0.xyzw, r0.xyzw
add r3.xyzw, -r4.xxxx, cb2[2].xyzw
add r4.xyzw, -r4.zzzz, cb2[4].xyzw
mad r2.xyzw, r3.xyzw, r1.xxxx, r2.xyzw
mad r0.xyzw, r3.xyzw, r3.xyzw, r0.xyzw
mad r0.xyzw, r4.xyzw, r4.xyzw, r0.xyzw
mad r2.xyzw, r4.xyzw, r1.wwzw, r2.xyzw
rsq r3.xyzw, r0.xyzw
mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
mul r2.xyzw, r2.xyzw, r3.xyzw
max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.xyzw, r0.xyzw, r2.xyzw
mul r2.xyz, r0.yyyy, cb2[7].xyzx
mad r2.xyz, cb2[6].xyzx, r0.xxxx, r2.xyzx
mad r0.xyz, cb2[8].xyzx, r0.zzzz, r2.xyzx
mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
mad r2.xyz, r0.xyzx, l(0.305306017, 0.305306017, 0.305306017, 0.000000), l(0.682171106, 0.682171106, 0.682171106, 0.000000)
mad r2.xyz, r0.xyzx, r2.xyzx, l(0.0125228781, 0.0125228781, 0.0125228781, 0.000000)
mul r2.xyz, r0.xyzx, r2.xyzx
eq r0.w, cb0[3].w, l(0.000000)
movc r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
mul r0.w, r1.y, r1.y
mad r0.w, r1.x, r1.x, -r0.w
mul r1.xyzw, r1.ywzx, r1.xyzw
dp4 r2.x, cb2[41].xyzw, r1.xyzw
dp4 r2.y, cb2[42].xyzw, r1.xyzw
dp4 r2.z, cb2[43].xyzw, r1.xyzw
mad r1.xyz, cb2[44].xyzx, r0.wwww, r2.xyzx
add o8.xyz, r0.xyzx, r1.xyzx
ret 
// Approximately 0 instruction slots used