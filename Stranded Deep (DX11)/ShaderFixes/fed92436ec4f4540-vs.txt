// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed fed92436ec4f4540-vs.txt
// 3DMigoto: fed92436ec4f4540 |    Unity headers extracted from Speedtree Foliage - Double-Sided VFACE Metallic.shader
//    Shader "Beam Team/SpeedTree/SpeedTree Foliage - Cull Off VFACE Metallic" {
//      Properties {
//      [Header(Diffuse)]  _Color ("Color", Color) = (1,1,1,1)
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//       _MainTex ("Diffuse Albedo (RGB)", 2D) = "white" { }
//      [Header(Packed Normals)]  _PackedTex ("Gloss (R) Normal Y (G) Translucency (B) Normal X (A)", 2D) = "white" { }
//      [Header(Translucency)]  _TranslucencyIntensity ("Translucency Intensity", Range(0,1)) = 1
//      [Header(Wind)] [MaterialEnum(None, 0, Fastest, 1, Fast, 2, Better, 3, Best, 4, Palm, 5)]  _WindQuality ("Wind Quality", Range(0,5)) = 0
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/VertexLit"
//      SubShader 1/2 {
//        Tags { "QUEUE"="AlphaTest" "DisableBatching"="LodFading" "RenderType"="SpeedTree" }
//        Pass 1/1 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "QUEUE"="AlphaTest" "DisableBatching"="LodFading" "RenderType"="SpeedTree" }
//          Cull Off
//          GpuProgramID 154
//          Program "vp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 259
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Speedtree Foliage - Double-Sided VFACE Metallic.shader.decompressed:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 182 0 3
//   Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "LOD_FADE_CROSSFADE" "GEOM_TYPE_FROND" "HDR_LIGHT_PREPASS_OFF" "SUNSHINE_DISABLED" }
//   undeciphered2: 1 0 4 0 0
//   undeciphered3: 175 6 0 0 2 1 1 2 3 4 5 6 7 8
//   ConstBuffer "$Globals" 624
//   Vector 512 [_MainTex_ST]
//   Float 532 [_WindQuality]
//   Float 536 [_WindEnabled]
//   Vector 568 [_AfsSpecFade] 2
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 96 [_ScreenParams]
//   ConstBuffer "UnityPerDraw" 352
//   Vector 336 [unity_WorldTransformParams]
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [_Object2World]
//   Matrix 256 [_World2Object]
//   ConstBuffer "SpeedTreeWind" 256
//   Vector 0 [_ST_WindVector]
//   Vector 16 [_ST_WindGlobal]
//   Vector 32 [_ST_WindBranch]
//   Vector 48 [_ST_WindBranchTwitch]
//   Vector 64 [_ST_WindBranchWhip]
//   Vector 80 [_ST_WindBranchAnchor]
//   Vector 96 [_ST_WindBranchAdherences]
//   Vector 112 [_ST_WindTurbulences]
//   Vector 224 [_ST_WindFrondRipple]
//   Vector 240 [_ST_WindAnimation]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "SpeedTreeWind" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 10 17:37:03 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float    y  
// TEXCOORD                 3   xy          6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[36], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[16], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xyzw
dcl_input v5.y
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output o5.xyzw
dcl_output o6.xyz
dcl_output o7.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed fed92436ec4f4540-vs.txt
mov r7.xyzw, cb1[4].xyzw
mov r8.xyzw, l(0)
mul r8.x, -r6.x, r6.y
mul r10.xyzw, cb10[0].xyzw, r8.xxxx
mad r10.xyzw, cb10[1].xyzw, r8.yyyy, r10.xyzw
mad r10.xyzw, cb10[2].xyzw, r8.zzzz, r10.xyzw
mad r10.xyzw, cb10[3].xyzw, r8.wwww, r10.xyzw
mul r9.xyzw, cb11[12].xyzw, r10.xxxx
mad r9.xyzw, cb11[13].xyzw, r10.yyyy, r9.xyzw
mad r9.xyzw, cb11[14].xyzw, r10.zzzz, r9.xyzw
mad r9.xyzw, cb11[15].xyzw, r10.wwww, r9.xyzw
add r7.xyz, r7.xyz, -r9.xyz

mad o4.xy, v3.xyxx, cb0[32].xyxx, cb0[32].zwzz
mul r0.x, cb0[33].z, cb0[33].y
lt r0.y, l(0.000000), r0.x
mul r1.xyz, cb2[17].xyzx, cb3[0].yyyy
mad r1.xyz, cb2[16].xyzx, cb3[0].xxxx, r1.xyzx
mad r1.xyz, cb2[18].xyzx, cb3[0].zzzz, r1.xyzx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r0.zw, r0.zzzz, r1.xxxz
and r0.zw, r0.zzzw, r0.yyyy
eq r1.x, r0.x, l(5.000000)
lt r1.y, v3.x, l(0.500000)
and r1.y, r1.y, l(0x3f400000)
add r1.z, v3.y, cb3[14].x
mad r1.y, r1.z, cb3[14].z, r1.y
add r1.y, r1.y, l(0.500000)
frc r1.y, r1.y
mad r1.y, r1.y, l(2.000000), l(-1.000000)
mul r1.z, |r1.y|, |r1.y|
mad r1.y, -|r1.y|, l(2.000000), l(3.000000)
mad r1.y, r1.z, r1.y, l(-0.500000)
mul r1.y, r1.y, v5.y
dp2 r1.y, cb3[14].yyyy, r1.yyyy
mad r1.yzw, r1.yyyy, v2.xxyz, v0.xxyz
movc r1.yzw, r1.xxxx, r1.yyzw, v0.xxyz
ge r0.x, r0.x, l(3.000000)
if_nz r0.x
  if_nz r1.x
    mul r2.xyz, cb2[17].xyzx, cb3[5].yyyy
    mad r2.xyz, cb2[16].xyzx, cb3[5].xxxx, r2.xyzx
    mad r2.xyz, cb2[18].xyzx, cb3[5].zzzz, r2.xyzx
    dp3 r0.x, r2.xyzx, r2.xyzx
    rsq r0.x, r0.x
    mul r2.xyz, r0.xxxx, r2.xyzx
    mul r3.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r3.xyz, r3.xyzx
    mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r3.xyz, r3.xyzx, v3.zzzz
    add r0.x, cb2[15].y, cb2[15].x
    add r0.x, r0.x, cb3[2].x
    add r4.x, r0.x, v3.w
    mad r4.y, r0.x, cb3[3].y, v3.w
    mul r1.x, r4.x, cb3[3].y
    mul r4.z, r1.x, l(0.500000)
    add r4.w, r4.x, -v3.z
    add r4.xyzw, r4.xyzw, l(0.500000, 0.500000, 0.500000, 1.500000)
    frc r4.xyzw, r4.xyzw
    mad r4.xyzw, r4.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
    mul r5.xyzw, |r4.xyzw|, |r4.xyzw|
    mad r4.xyzw, -|r4.xyzw|, l(2.000000, 2.000000, 2.000000, 2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
    mad r4.xyzw, r5.xyzw, r4.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
    add r4.xyzw, r4.xyzw, r4.xyzw
    mul r5.w, r4.z, r4.y
    lt r1.x, r5.w, l(0.000000)
    mov r5.y, -r5.w
    mov r5.xz, l(-1.000000,0,1.000000,0)
    movc r5.xy, r1.xxxx, r5.xyxx, r5.zwzz
    mad r1.x, -r4.y, r4.z, r5.x
    mad r1.x, r5.y, r1.x, r5.w
    add r2.w, -r1.x, r5.x
    mad r1.x, r5.y, r2.w, r1.x
    mul r1.x, r1.x, cb3[3].x
    add r2.w, -cb3[0].w, l(1.000000)
    add r3.w, -cb3[3].x, l(1.000000)
    mul r3.w, r3.w, r4.x
    mad r1.x, r1.x, r2.w, r3.w
    mad r2.w, r4.w, cb3[4].x, l(1.000000)
    mul r1.x, r1.x, r2.w
    mul r3.xyz, r1.xxxx, r3.xyzx
    mad r3.xyz, r3.xyzx, cb3[2].yyyy, r1.yzwy
    mad r4.x, r0.x, l(0.100000), v3.w
    mul r0.x, cb3[7].x, cb3[15].x
    mad r4.y, r0.x, l(0.100000), v3.w
    add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    frc r4.xy, r4.xyxx
    mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
    mul r5.xy, |r4.xyxx|, |r4.xyxx|
    mad r4.xy, -|r4.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
    mad r4.xy, r5.xyxx, r4.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    add r4.xy, r4.xyxx, r4.xyxx
    mul r4.xy, r4.xyxx, r4.xyxx
    mul r0.x, r4.x, r4.y
    mad r0.x, -r0.x, cb3[7].x, l(1.000000)
    mul r1.x, r4.w, cb3[0].w
    mad r0.x, r1.x, cb3[4].x, r0.x
    mad r2.xyz, r2.xyzx, cb3[5].wwww, -r3.xyzx
    mul r2.xyz, r2.xyzx, cb3[6].yyyy
    mul r2.xyz, r0.xxxx, r2.xyzx
    mad r1.yzw, r2.xxyz, v3.zzzz, r3.xxyz
  else 
    mul r2.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r2.xyz, r2.xyzx
    mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r2.xyz, r2.xyzx, v3.zzzz
    add r0.x, cb2[15].y, cb2[15].x
    add r0.x, r0.x, cb3[2].x
    add r3.x, r0.x, v3.w
    mad r3.y, r0.x, cb3[3].y, v3.w
    mul r0.x, r3.x, cb3[3].y
    mul r3.z, r0.x, l(0.500000)
    add r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    frc r3.xyz, r3.xyzx
    mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r4.xyz, |r3.xyzx|, |r3.xyzx|
    mad r3.xyz, -|r3.xyzx|, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
    mad r3.xyz, r4.xyzx, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    add r3.xyz, r3.xyzx, r3.xyzx
    mul r4.w, r3.z, r3.y
    lt r0.x, r4.w, l(0.000000)
    mov r4.y, -r4.w
    mov r4.xz, l(-1.000000,0,1.000000,0)
    movc r4.xy, r0.xxxx, r4.xyxx, r4.zwzz
    mad r0.x, -r3.y, r3.z, r4.x
    mad r0.x, r4.y, r0.x, r4.w
    add r1.x, -r0.x, r4.x
    mad r0.x, r4.y, r1.x, r0.x
    mul r0.x, r0.x, cb3[3].x
    add r1.x, -cb3[0].w, l(1.000000)
    add r2.w, -cb3[3].x, l(1.000000)
    mul r2.w, r2.w, r3.x
    mad r0.x, r0.x, r1.x, r2.w
    mul r2.xyz, r0.xxxx, r2.xyzx
    mad r1.yzw, r2.xxyz, cb3[2].yyyy, r1.yyzw
  endif 
endif 
dp3 r0.x, r1.yzwy, r1.yzwy
sqrt r0.x, r0.x
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb3[1].z
mad r1.x, -r1.x, l(0.250000), r1.z
max r1.x, r1.x, l(0.000000)
mul r1.x, r1.x, cb3[1].z
ne r2.x, r1.x, l(0.000000)
log r2.y, r1.x
mul r2.y, r2.y, cb3[1].w
exp r2.y, r2.y
movc r1.x, r2.x, r2.y, r1.x
add r2.x, cb2[15].x, cb3[1].x
mad r2.y, cb3[1].x, l(0.800000), cb2[15].y
add r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
frc r2.xy, r2.xyxx
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.zw, |r2.xxxy|, |r2.xxxy|
mad r2.xy, -|r2.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mad r2.xy, r2.zwzz, r2.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r2.xy, r2.xyxx, r2.xyxx
mad r2.x, r2.y, r2.y, r2.x
div r2.y, cb3[6].x, cb3[1].z
mad r2.x, cb3[1].y, r2.x, r2.y
mul r1.x, r1.x, r2.x
mad r2.xz, r0.zzwz, r1.xxxx, r1.yywy
mov r2.y, r1.z
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
mul r0.xzw, r0.xxxx, r2.xxyz
movc r0.xyz, r0.yyyy, r0.xzwx, r1.yzwy
mul r1.xyz, r0.yyyy, cb2[1].xywx
mad r1.xyz, cb2[0].xywx, r0.xxxx, r1.xyzx
mad r1.xyz, cb2[2].xywx, r0.zzzz, r1.xyzx
mad r1.xyz, cb2[3].xywx, v0.wwww, r1.xyzx
mul r2.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
mul r0.w, r1.y, cb1[5].x
mul r2.w, r0.w, l(0.500000)
add r1.xy, r2.zzzz, r2.xwxx
mul r2.xy, cb1[6].xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
mul o6.xy, r1.xyxx, r2.xyxx
mul r1.xyw, r0.yyyy, cb2[13].xyxz
mad r1.xyw, cb2[12].xyxz, r0.xxxx, r1.xyxw
mad r1.xyw, cb2[14].xyxz, r0.zzzz, r1.xyxw
mad r1.xyw, cb2[15].xyxz, v0.wwww, r1.xyxw
add r2.xyz, -r1.xywx, r7.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
sqrt r0.w, r0.w
add r0.w, -r0.w, cb0[35].z
div_sat o4.z, r0.w, cb0[35].w
mul r2.xyzw, r0.yyyy, cb2[1].xyzw
mad r2.xyzw, cb2[0].xyzw, r0.xxxx, r2.xyzw
mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r2.xyzw
mad o0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
mov r0.y, cb2[16].x
mov r0.z, cb2[17].x
mov r0.x, cb2[18].x
mov r2.y, cb2[16].y
mov r2.z, cb2[17].y
mov r2.x, cb2[18].y
mul r2.xyz, r2.xyzx, v2.yyyy
mad r0.xyz, r0.xyzx, v2.xxxx, r2.xyzx
mov r2.y, cb2[16].z
mov r2.z, cb2[17].z
mov r2.x, cb2[18].z
mad r0.xyz, r2.xyzx, v2.zzzz, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r2.xyz, v1.yyyy, cb2[13].yzxy
mad r2.xyz, cb2[12].yzxy, v1.xxxx, r2.xyzx
mad r2.xyz, cb2[14].yzxy, v1.zzzz, r2.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
mul r0.w, v1.w, cb2[21].w
mul r3.xyz, r0.xyzx, r2.xyzx
mad r3.xyz, r0.zxyz, r2.yzxy, -r3.xyzx
mul r3.xyz, r0.wwww, r3.xyzx
mov o1.x, r2.z
mov o1.y, r3.x
mov o1.z, r0.y
mov o1.w, r1.x
mov o2.x, r2.x
mov o2.y, r3.y
mov o2.z, r0.z
mov o2.w, r1.y
mov o3.x, r2.y
mov o3.y, r3.z
mov o3.z, r0.x
mov o3.w, r1.w
mov o5.xyzw, l(0,0,0,0)
mov o7.xyzw, l(0,0,0,0)
mov o6.z, r1.z
ret 
// Approximately 0 instruction slots used