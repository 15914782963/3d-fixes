// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 1ac0ac7ee9575650-vs.txt
// 3DMigoto: 1ac0ac7ee9575650 |    Unity headers extracted from Camera-CustomDepthTexture.shader
//    Shader "Hidden/Beam Team/BeamDepthTexture" {
//      Properties {
//       _MainTex ("", 2D) = "white" { }
//       _Cutoff ("", Float) = 0.5
//       _Color ("", Color) = (1,1,1,1)
//       _ZOffset ("Z-Offset", Range(0,100)) = 1
//      }
//      Fallback Off
//      SubShader 5/9 {
//        Tags { "RenderType"="SpeedTree" }
//        Pass 1/1 {
//          Tags { "RenderType"="SpeedTree" }
//          Cull Off
//          GpuProgramID 322765
//          Program "vp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 55
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Camera-CustomDepthTexture.shader.decompressed:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 152 0 3
//   Keywords { "LOD_FADE_CROSSFADE" "GEOM_TYPE_FROND" }
//   undeciphered2: 1 0 4 0 0
//   undeciphered3: 47 5 0 0 2 1 1 2 3 4 5 6
//   ConstBuffer "$Globals" 144
//   Float 96 [_WindQuality]
//   Float 100 [_WindEnabled]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 80 [_ProjectionParams]
//   Vector 96 [_ScreenParams]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 192 [_Object2World]
//   Matrix 256 [_World2Object]
//   ConstBuffer "SpeedTreeWind" 256
//   Vector 0 [_ST_WindVector]
//   Vector 16 [_ST_WindGlobal]
//   Vector 32 [_ST_WindBranch]
//   Vector 48 [_ST_WindBranchTwitch]
//   Vector 64 [_ST_WindBranchWhip]
//   Vector 80 [_ST_WindBranchAnchor]
//   Vector 96 [_ST_WindBranchAdherences]
//   Vector 112 [_ST_WindTurbulences]
//   Vector 224 [_ST_WindFrondRipple]
//   Vector 240 [_ST_WindAnimation]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "SpeedTreeWind" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 10 17:33:03 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float    y  
// TEXCOORD                 3   xy          6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[19], immediateIndexed
dcl_constantbuffer cb3[16], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input v3.xyzw
dcl_input v5.y
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyz
dcl_temps 7

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.x, cb0[6].y, cb0[6].x
ge r0.y, l(0.000000), r0.x
mul r1.xyz, cb2[17].xyzx, cb3[0].yyyy
mad r1.xyz, cb2[16].xyzx, cb3[0].xxxx, r1.xyzx
mad r1.xyz, cb2[18].xyzx, cb3[0].zzzz, r1.xyzx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r0.zw, r0.zzzz, r1.xxxz
movc r0.yz, r0.yyyy, l(0,0,0,0), r0.zzwz
eq r0.w, r0.x, l(5.000000)
lt r1.x, v3.x, l(0.500000)
and r1.x, r1.x, l(0x3f400000)
add r1.y, v3.y, cb3[14].x
mad r1.x, r1.y, cb3[14].z, r1.x
add r1.x, r1.x, l(0.500000)
frc r1.x, r1.x
mad r1.x, r1.x, l(2.000000), l(-1.000000)
mul r1.y, |r1.x|, |r1.x|
mad r1.x, -|r1.x|, l(2.000000), l(3.000000)
mad r1.x, r1.y, r1.x, l(-0.500000)
mul r1.x, r1.x, v5.y
dp2 r1.x, cb3[14].yyyy, r1.xxxx
mad r1.xyz, r1.xxxx, v2.xyzx, v0.xyzx
movc r1.xyz, r0.wwww, r1.xyzx, v0.xyzx
ge r1.w, r0.x, l(3.000000)
if_nz r1.w
  if_nz r0.w
    mul r2.xyz, cb2[17].xyzx, cb3[5].yyyy
    mad r2.xyz, cb2[16].xyzx, cb3[5].xxxx, r2.xyzx
    mad r2.xyz, cb2[18].xyzx, cb3[5].zzzz, r2.xyzx
    dp3 r0.w, r2.xyzx, r2.xyzx
    rsq r0.w, r0.w
    mul r2.xyz, r0.wwww, r2.xyzx
    mul r3.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r3.xyz, r3.xyzx
    mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r3.xyz, r3.xyzx, v3.zzzz
    add r0.w, cb2[15].y, cb2[15].x
    add r0.w, r0.w, cb3[2].x
    add r4.x, r0.w, v3.w
    mad r4.y, r0.w, cb3[3].y, v3.w
    mul r1.w, r4.x, cb3[3].y
    mul r4.z, r1.w, l(0.500000)
    add r4.w, r4.x, -v3.z
    add r4.xyzw, r4.xyzw, l(0.500000, 0.500000, 0.500000, 1.500000)
    frc r4.xyzw, r4.xyzw
    mad r4.xyzw, r4.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
    mul r5.xyzw, |r4.xyzw|, |r4.xyzw|
    mad r4.xyzw, -|r4.xyzw|, l(2.000000, 2.000000, 2.000000, 2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
    mad r4.xyzw, r5.xyzw, r4.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
    add r4.xyzw, r4.xyzw, r4.xyzw
    mul r5.w, r4.z, r4.y
    lt r1.w, r5.w, l(0.000000)
    mov r5.y, -r5.w
    mov r5.xz, l(-1.000000,0,1.000000,0)
    movc r5.xy, r1.wwww, r5.xyxx, r5.zwzz
    mad r1.w, -r4.y, r4.z, r5.x
    mad r1.w, r5.y, r1.w, r5.w
    add r2.w, -r1.w, r5.x
    mad r1.w, r5.y, r2.w, r1.w
    mul r1.w, r1.w, cb3[3].x
    add r2.w, -cb3[0].w, l(1.000000)
    add r3.w, -cb3[3].x, l(1.000000)
    mul r3.w, r3.w, r4.x
    mad r1.w, r1.w, r2.w, r3.w
    mad r2.w, r4.w, cb3[4].x, l(1.000000)
    mul r1.w, r1.w, r2.w
    mul r3.xyz, r1.wwww, r3.xyzx
    mad r3.xyz, r3.xyzx, cb3[2].yyyy, r1.xyzx
    mad r4.x, r0.w, l(0.100000), v3.w
    mul r0.w, cb3[7].x, cb3[15].x
    mad r4.y, r0.w, l(0.100000), v3.w
    add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    frc r4.xy, r4.xyxx
    mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
    mul r5.xy, |r4.xyxx|, |r4.xyxx|
    mad r4.xy, -|r4.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
    mad r4.xy, r5.xyxx, r4.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    add r4.xy, r4.xyxx, r4.xyxx
    mul r4.xy, r4.xyxx, r4.xyxx
    mul r0.w, r4.x, r4.y
    mad r0.w, -r0.w, cb3[7].x, l(1.000000)
    mul r1.w, r4.w, cb3[0].w
    mad r0.w, r1.w, cb3[4].x, r0.w
    mad r2.xyz, r2.xyzx, cb3[5].wwww, -r3.xyzx
    mul r2.xyz, r2.xyzx, cb3[6].yyyy
    mul r2.xyz, r0.wwww, r2.xyzx
    mad r1.xyz, r2.xyzx, v3.zzzz, r3.xyzx
  else 
    mul r2.xyz, v3.wwww, l(0.062500, 1.000000, 16.000000, 0.000000)
    frc r2.xyz, r2.xyzx
    mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r2.xyz, r2.xyzx, v3.zzzz
    add r0.w, cb2[15].y, cb2[15].x
    add r0.w, r0.w, cb3[2].x
    add r3.x, r0.w, v3.w
    mad r3.y, r0.w, cb3[3].y, v3.w
    mul r0.w, r3.x, cb3[3].y
    mul r3.z, r0.w, l(0.500000)
    add r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    frc r3.xyz, r3.xyzx
    mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r4.xyz, |r3.xyzx|, |r3.xyzx|
    mad r3.xyz, -|r3.xyzx|, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
    mad r3.xyz, r4.xyzx, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    add r3.xyz, r3.xyzx, r3.xyzx
    mul r4.w, r3.z, r3.y
    lt r0.w, r4.w, l(0.000000)
    mov r4.y, -r4.w
    mov r4.xz, l(-1.000000,0,1.000000,0)
    movc r4.xy, r0.wwww, r4.xyxx, r4.zwzz
    mad r0.w, -r3.y, r3.z, r4.x
    mad r0.w, r4.y, r0.w, r4.w
    add r1.w, -r0.w, r4.x
    mad r0.w, r4.y, r1.w, r0.w
    mul r0.w, r0.w, cb3[3].x
    add r1.w, -cb3[0].w, l(1.000000)
    add r2.w, -cb3[3].x, l(1.000000)
    mul r2.w, r2.w, r3.x
    mad r0.w, r0.w, r1.w, r2.w
    mul r2.xyz, r0.wwww, r2.xyzx
    mad r1.xyz, r2.xyzx, cb3[2].yyyy, r1.xyzx
  endif 
endif 
lt r0.x, l(0.000000), r0.x
dp3 r0.w, r1.xyzx, r1.xyzx
sqrt r0.w, r0.w
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb3[1].z
mad r1.w, -r1.w, l(0.250000), r1.y
max r1.w, r1.w, l(0.000000)
mul r1.w, r1.w, cb3[1].z
ne r2.x, r1.w, l(0.000000)
log r2.y, r1.w
mul r2.y, r2.y, cb3[1].w
exp r2.y, r2.y
movc r1.w, r2.x, r2.y, r1.w
add r2.x, cb2[15].x, cb3[1].x
mad r2.y, cb3[1].x, l(0.800000), cb2[15].y
add r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
frc r2.xy, r2.xyxx
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.zw, |r2.xxxy|, |r2.xxxy|
mad r2.xy, -|r2.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mad r2.xy, r2.zwzz, r2.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r2.xy, r2.xyxx, r2.xyxx
mad r2.x, r2.y, r2.y, r2.x
div r2.y, cb3[6].x, cb3[1].z
mad r2.x, cb3[1].y, r2.x, r2.y
mul r1.w, r1.w, r2.x
mad r2.xz, r0.yyzy, r1.wwww, r1.xxzx
mov r2.y, r1.y
dp3 r0.y, r2.xyzx, r2.xyzx
rsq r0.y, r0.y
mul r2.xyz, r0.yyyy, r2.xyzx
mul r0.yzw, r0.wwww, r2.xxyz
movc r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
mul r1.xyzw, r0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw

// Relocated to here with asmtool.py
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 1ac0ac7ee9575650-vs.txt
ne r6.w, r0.w, l(1.0)
if_nz r6.w
  add r6.w, r0.w, -r6.y
  mad r0.x, r6.w, r6.x, r0.x
endif

mul r1.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mul r1.y, r0.y, cb1[5].x
mul r1.w, r1.y, l(0.500000)
add r1.xy, r1.zzzz, r1.xwxx
mul r1.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.250000, 0.250000)
mul o2.xy, r1.zwzz, r1.xyxx

// mov o0.xyzw, r0.xyzw // Relocated from here with asmtool.py

mov o2.z, r0.w
mov o1.xy, v3.xyxx
ret 
// Approximately 0 instruction slots used