// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7ab94a5bab598323-ps.txt
// 3DMigoto: 7ab94a5bab598323 |    Unity headers extracted from Glass - Bumped Specular Forward.shader
//    Shader "Beam Team/Standard/Transparent/Glass - Bumped Specular Forward" {
//      Properties {
//       _Color ("Glass Color (RGB) Transparency (A)", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Diffuse Albedo (NOT IN USE)", 2D) = "white" { }
//       _SpecTex ("Specular Albedo (RGB) Gloss (A)", 2D) = "white" { }
//       _BumpTex ("Normal Map", 2D) = "bump" { }
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent+550" "FORCENOSHADOWCASTING"="true" "RenderType"="Transparent" }
//        Pass 2/2 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Transparent+550" "FORCENOSHADOWCASTING"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Blend One One
//          ColorMask RGB
//          GpuProgramID 119696
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 17
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Glass - Bumped Specular Forward.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 79 3 0
//   Keywords { "POINT" }
//   undeciphered2: 1 3 3 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 224
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 192 [_Color]
//   Matrix 128 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_BumpTex] 2D 1
//   SetTexture 1 [_SpecTex] 2D 2
//   SetTexture 2 [_LightTexture0] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Dec 10 03:49:13 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7ab94a5bab598323-ps.txt
mov r7.xyzw, cb1[4].xyzw
mov r8.xyzw, l(0)
mul r8.x, -r6.x, r6.y
mul r10.xyzw, cb10[0].xyzw, r8.xxxx
mad r10.xyzw, cb10[1].xyzw, r8.yyyy, r10.xyzw
mad r10.xyzw, cb10[2].xyzw, r8.zzzz, r10.xyzw
mad r10.xyzw, cb10[3].xyzw, r8.wwww, r10.xyzw
mul r9.xyzw, cb11[12].xyzw, r10.xxxx
mad r9.xyzw, cb11[13].xyzw, r10.yyyy, r9.xyzw
mad r9.xyzw, cb11[14].xyzw, r10.zzzz, r9.xyzw
mad r9.xyzw, cb11[15].xyzw, r10.wwww, r9.xyzw
add r7.xyz, r7.xyz, -r9.xyz

sample r0.xyzw, v1.xyxx, t0.xyzw, s1
mad r0.xy, r0.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r0.xyxx, r0.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r0.z, r0.w
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r1.x, v2.xyzx, r0.xyzx
dp3 r1.y, v3.xyzx, r0.xyzx
dp3 r1.z, v4.xyzx, r0.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r1.xyzx
add r2.xyz, -v5.xyzx, r7.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, r2.xyzx
max r0.w, r0.w, l(0.000000)
add r3.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r3.xyzx
mad r2.xyz, r3.xyzx, r1.wwww, r2.xyzx
dp3 r1.x, r1.xyzx, r4.xyzx
max r1.x, r1.x, l(0.000000)
sample r3.xyzw, v1.xyxx, t1.xyzw, s2
add r5.xyzw, -r3.wxyz, l(1.000000, 1.000000, 1.000000, 1.000000)
mad r1.y, -r5.x, r5.x, l(1.000000)
mul r1.z, r5.x, r5.x
mad r1.w, r1.x, r1.y, r1.z
mad r1.y, r0.w, r1.y, r1.z
mul r0.w, r0.w, r1.w
mad r0.w, r1.x, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(2.000000), r0.w
dp3 r1.y, r2.xyzx, r2.xyzx
max r1.y, r1.y, l(0.001000)
rsq r1.y, r1.y
mul r2.xyz, r1.yyyy, r2.xyzx
dp3 r0.x, r0.xyzx, r2.xyzx
dp3 r0.y, r4.xyzx, r2.xyzx
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r0.y, -r0.y, l(1.000000)
mul r0.x, r0.x, r0.x
mad r0.z, r1.z, r1.z, l(-1.000000)
mul r1.y, r1.z, r1.z
mad r0.x, r0.x, r0.z, l(1.000000)
mul r0.z, r0.x, l(3.14159274)
mad r0.x, r0.z, r0.x, l(1.000000012E-007)
div r0.x, r1.y, r0.x
mul r0.x, r0.x, r0.w
mul r0.x, r0.x, l(0.785398185)
max r0.z, r0.x, l(0.000100)
sqrt r0.z, r0.z
eq r0.w, cb0[3].w, l(0.000000)
movc r0.x, r0.w, r0.z, r0.x
mul r0.x, r1.x, r0.x
max r0.x, r0.x, l(0.000000)
dp3 r0.z, r3.xyzx, r3.xyzx
ne r0.z, r0.z, l(0.000000)
and r0.z, r0.z, l(0x3f800000)
mul r0.x, r0.z, r0.x
mul r1.xyz, v5.yyyy, cb0[9].xyzx
mad r1.xyz, cb0[8].xyzx, v5.xxxx, r1.xyzx
mad r1.xyz, cb0[10].xyzx, v5.zzzz, r1.xyzx
add r1.xyz, r1.xyzx, cb0[11].xyzx
dp3 r0.z, r1.xyzx, r1.xyzx
sample r1.xyzw, r0.zzzz, t2.xyzw, s0
mul r1.xyz, r1.xxxx, cb0[6].xyzx
mul r0.xzw, r0.xxxx, r1.xxyz
mul r1.x, r0.y, r0.y
mul r1.x, r1.x, r1.x
mul r0.y, r0.y, r1.x
mad r1.xyz, r5.yzwy, r0.yyyy, r3.xyzx
mul o0.xyz, r0.xzwx, r1.xyzx
max r0.x, r3.y, r3.x
max r0.x, r3.z, r0.x
add r0.x, -r0.x, l(1.000000)
add r0.y, -r0.x, l(1.000000)
mad o0.w, cb0[12].w, r0.x, r0.y
ret 
// Approximately 0 instruction slots used