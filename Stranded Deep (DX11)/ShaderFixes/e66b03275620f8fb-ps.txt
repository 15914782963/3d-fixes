// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e66b03275620f8fb-ps.txt
// 3DMigoto: e66b03275620f8fb |    Unity headers extracted from Glass - Bumped Specular Forward.shader
//    Shader "Beam Team/Standard/Transparent/Glass - Bumped Specular Forward" {
//      Properties {
//       _Color ("Glass Color (RGB) Transparency (A)", Color) = (1,1,1,1)
//       _MainTex ("Diffuse Albedo (NOT IN USE)", 2D) = "white" { }
//       _SpecTex ("Specular Albedo (RGB) Gloss (A)", 2D) = "white" { }
//       _BumpTex ("Normal Map", 2D) = "bump" { }
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent+550" "FORCENOSHADOWCASTING"="true" "RenderType"="Transparent" }
//        Pass 2/2 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardAdd" "QUEUE"="Transparent+550" "FORCENOSHADOWCASTING"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Blend One One
//          ColorMask RGB
//          GpuProgramID 98539
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 73
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Glass - Bumped Specular Forward.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 74 3 0
//   Keywords { "DIRECTIONAL_COOKIE" "SUNSHINE_DISABLED" }
//   undeciphered2: 1 3 3 3 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 608
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 576 [_Color]
//   Matrix 128 [_LightMatrix0]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_BumpTex] 2D 1
//   SetTexture 1 [_SpecTex] 2D 2
//   SetTexture 2 [_LightTexture0] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 10 17:35:11 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[37], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e66b03275620f8fb-ps.txt
mov r6.xyzw, cb1[4].xyzw
mov r7.xyzw, l(0)
mul r7.x, -r5.x, r5.y
mul r9.xyzw, cb10[0].xyzw, r7.xxxx
mad r9.xyzw, cb10[1].xyzw, r7.yyyy, r9.xyzw
mad r9.xyzw, cb10[2].xyzw, r7.zzzz, r9.xyzw
mad r9.xyzw, cb10[3].xyzw, r7.wwww, r9.xyzw
mul r8.xyzw, cb11[12].xyzw, r9.xxxx
mad r8.xyzw, cb11[13].xyzw, r9.yyyy, r8.xyzw
mad r8.xyzw, cb11[14].xyzw, r9.zzzz, r8.xyzw
mad r8.xyzw, cb11[15].xyzw, r9.wwww, r8.xyzw
add r6.xyz, r6.xyz, -r8.xyz

sample r0.xyzw, v1.xyxx, t0.xyzw, s1
mad r0.xy, r0.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r0.xyxx, r0.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r0.z, r0.w
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r1.x, v2.xyzx, r0.xyzx
dp3 r1.y, v3.xyzx, r0.xyzx
dp3 r1.z, v4.xyzx, r0.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r1.xyzx
add r1.xyz, -v5.xyzx, r6.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r2.xyzx
add r1.w, -r0.w, l(0.000010)
lt r0.w, r0.w, l(0.000000)
mad r3.xyz, r2.xyzx, r1.wwww, r0.xyzx
movc r0.xyz, r0.wwww, r3.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, r2.xyzx
max r0.w, r0.w, l(0.000000)
dp3 r1.w, r0.xyzx, cb2[0].xyzx
max r1.w, r1.w, l(0.000000)
sample r2.xyzw, v1.xyxx, t1.xyzw, s2
add r3.xyzw, -r2.wxyz, l(1.000000, 1.000000, 1.000000, 1.000000)
mad r2.w, -r3.x, r3.x, l(1.000000)
mul r3.x, r3.x, r3.x
mad r4.x, r1.w, r2.w, r3.x
mad r2.w, r0.w, r2.w, r3.x
mul r0.w, r0.w, r4.x
mad r0.w, r1.w, r2.w, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(2.000000), r0.w
dp3 r2.w, r1.xyzx, r1.xyzx
max r2.w, r2.w, l(0.001000)
rsq r2.w, r2.w
mul r1.xyz, r1.xyzx, r2.wwww
dp3 r0.x, r0.xyzx, r1.xyzx
dp3 r0.y, cb2[0].xyzx, r1.xyzx
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r0.y, -r0.y, l(1.000000)
mul r0.x, r0.x, r0.x
mad r0.z, r3.x, r3.x, l(-1.000000)
mul r1.x, r3.x, r3.x
mad r0.x, r0.x, r0.z, l(1.000000)
mul r0.z, r0.x, l(3.14159274)
mad r0.x, r0.z, r0.x, l(1.000000012E-007)
div r0.x, r1.x, r0.x
mul r0.x, r0.x, r0.w
mul r0.x, r0.x, l(0.785398185)
max r0.z, r0.x, l(0.000100)
sqrt r0.z, r0.z
eq r0.w, cb0[3].w, l(0.000000)
movc r0.x, r0.w, r0.z, r0.x
mul r0.x, r1.w, r0.x
max r0.x, r0.x, l(0.000000)
mul r0.zw, v5.yyyy, cb0[9].xxxy
mad r0.zw, cb0[8].xxxy, v5.xxxx, r0.zzzw
mad r0.zw, cb0[10].xxxy, v5.zzzz, r0.zzzw
add r0.zw, r0.zzzw, cb0[11].xxxy
sample r1.xyzw, r0.zwzz, t2.xyzw, s0
mul r1.xyz, r1.wwww, cb0[6].xyzx
mul r0.xzw, r0.xxxx, r1.xxyz
mul r1.x, r0.y, r0.y
mul r1.x, r1.x, r1.x
mul r0.y, r0.y, r1.x
mad r1.xyz, r3.yzwy, r0.yyyy, r2.xyzx
mul o0.xyz, r0.xzwx, r1.xyzx
max r0.x, r2.y, r2.x
max r0.x, r2.z, r0.x
add r0.x, -r0.x, l(1.000000)
add r0.y, -r0.x, l(1.000000)
mad o0.w, cb0[36].w, r0.x, r0.y
ret 
// Approximately 0 instruction slots used