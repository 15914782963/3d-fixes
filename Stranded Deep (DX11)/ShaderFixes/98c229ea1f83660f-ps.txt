// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 98c229ea1f83660f-ps.txt
// 3DMigoto: 98c229ea1f83660f |    Unity headers extracted from BeamTeamVolumetricFog.shader
//    Shader "Beam Team/Post Effects/Volumetric Fog" {
//      Properties {
//       _MainTex ("Base (RGB)", 2D) = "black" { }
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Pass 1/1 {
//          ZTest Always
//          ZWrite Off
//          Cull Off
//          GpuProgramID 62218
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 7
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from BeamTeamVolumetricFog.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 34 3 0
//   Keywords { "INTRO" }
//   undeciphered2: 1 3 2 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 416
//   Float 324 [_StormFade]
//   Float 332 [_BelowVisibility]
//   Vector 336 [_Beam_UnderwaterColor] 3
//   Vector 352 [_Beam_UnderwaterInscatterColor] 3
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_BeamTeamDepthTexture] 2D 1
//   SetTexture 1 [Ceto_OceanMask] 2D 0
//   SetTexture 2 [_MainTex] 2D 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Dec 10 03:49:37 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[23], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 98c229ea1f83660f-ps.txt
mov r5.xyzw, cb1[4].xyzw
mov r6.xyzw, l(0)
mul r6.x, -r4.x, r4.y
mul r8.xyzw, cb10[0].xyzw, r6.xxxx
mad r8.xyzw, cb10[1].xyzw, r6.yyyy, r8.xyzw
mad r8.xyzw, cb10[2].xyzw, r6.zzzz, r8.xyzw
mad r8.xyzw, cb10[3].xyzw, r6.wwww, r8.xyzw
mul r7.xyzw, cb11[12].xyzw, r8.xxxx
mad r7.xyzw, cb11[13].xyzw, r8.yyyy, r7.xyzw
mad r7.xyzw, cb11[14].xyzw, r8.zzzz, r7.xyzw
mad r7.xyzw, cb11[15].xyzw, r8.wwww, r7.xyzw
add r5.xyz, r5.xyz, -r7.xyz

sample r0.xyzw, v1.xyxx, t0.xyzw, s1
mad r0.x, cb1[7].x, r0.x, cb1[7].y
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
div r0.y, cb1[5].z, cb0[20].w
mul_sat r0.x, r0.y, r0.x
mul r0.yzw, r0.xxxx, v3.xxyz
mad r1.xyz, r0.xxxx, v3.xyzx, r5.xyzx
dp3 r0.x, r0.yzwy, r0.yzwy
sqrt r0.x, r0.x
div_sat r0.x, r0.x, cb0[20].w
mad r0.yzw, cb0[20].yyyy, l(0.000000, 0.350000024, 0.0500000119, 0.000000), l(0.000000, 0.500000, 0.900000, 1.000000)
div_sat r2.xyz, r0.xxxx, r0.yzwy
add r1.xzw, -r1.xxyz, r5.xxyz
mad r0.x, cb0[20].w, l(3.000000), r1.y
dp3 r1.y, r1.xzwx, r1.xzwx
rsq r1.y, r1.y
mul r1.xyz, r1.yyyy, r1.xzwx
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v2.xyzx
dp3 r1.x, r1.xyzx, r3.xyzx
mad_sat r1.y, r1.y, l(-0.500000), l(0.500000)
mad r1.x, r1.x, l(0.700000), l(0.300000)
mul r1.x, r1.x, r1.x
mul r1.xzw, r1.xxxx, cb0[22].xxyz
mad r0.yzw, r1.xxzw, r0.yyzw, cb0[21].xxyz
mul r0.yzw, r1.yyyy, r0.yyzw
sample r1.xyzw, v1.xyxx, t2.xyzw, s2
mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), -r1.xxyz
mad r0.yzw, r2.xxyz, r0.yyzw, r1.xxyz
mul r2.x, cb0[20].w, l(3.000000)
div_sat r0.x, r0.x, r2.x
mul r0.xyz, r0.xxxx, r0.yzwy
mad r0.xyz, r0.xyzx, l(1.000000, 0.800000, 0.600000, 0.000000), -r1.xyzx
sample r2.xyzw, v1.xyxx, t1.xyzw, s0
dp2 r0.w, l(1.000000, 1.000000, 0.000000, 0.000000), r2.yzyy
mad o0.xyz, r0.wwww, r0.xyzx, r1.xyzx
mov o0.w, r1.w
ret 
// Approximately 0 instruction slots used