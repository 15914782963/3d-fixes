// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5ee8a2e0abe9d11f-ps.txt
// 3DMigoto: 5ee8a2e0abe9d11f |    Unity headers extracted from Foliage - Double-Sided 2PASS Metallic.shader
//    Shader "Beam Team/Foliage/Foliage - Forward Cull Off 2PASS Metallic" {
//      Properties {
//      [Header(Diffuse)]  _Color ("Color", Color) = (1,1,1,1)
//       _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
//       _MainTex ("Diffuse Albedo (RGB)", 2D) = "white" { }
//      [Header(Packed Normals)]  _PackedTex ("Gloss (R) Normal X (G) Translucency (B) Normal Y (A)", 2D) = "white" { }
//      [Header(Translucency)] [Toggle(BEAM_SPEEDTREE_TRANSLUCENCY)]  _Translucent ("Translucent", Float) = 0
//       _TranslucencyColor ("Translucency Tint", Color) = (0.73,0.85,0.41,1)
//       _TranslucencyIntensity ("Translucency Intensity", Range(1,5)) = 1
//       _TranslucencyViewDependency ("Translucency View Dependency", Range(0,1)) = 0.5
//      [Header(Wind)] [MaterialEnum(None, 0, Fastest, 1, Fast, 2, Better, 3, Best, 4, Palm, 5)]  _WindQuality ("Wind Quality", Range(0,5)) = 0
//      }
//      Fallback "Legacy Shaders/Transparent/Cutout/VertexLit"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest" "RenderType"="Foliage" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="AlphaTest" "RenderType"="Foliage" }
//          Cull Front
//          GpuProgramID 54878
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 17
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Foliage - Double-Sided 2PASS Metallic.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 142 2 5
//   Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "SUNSHINE_DISABLED" }
//   undeciphered2: 1 4 4 4 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 656
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Float 528 [_Cutoff]
//   Vector 544 [_Color]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_PackedTex] 2D 3
//   SetTexture 2 [unity_SpecCube0] CUBE 0
//   SetTexture 3 [unity_SpecCube1] CUBE 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 10 17:35:01 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[35], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 17
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5ee8a2e0abe9d11f-ps.txt
mov r13.xyzw, cb1[4].xyzw
mov r14.xyzw, l(0)
mul r14.x, -r12.x, r12.y
mul r16.xyzw, cb10[0].xyzw, r14.xxxx
mad r16.xyzw, cb10[1].xyzw, r14.yyyy, r16.xyzw
mad r16.xyzw, cb10[2].xyzw, r14.zzzz, r16.xyzw
mad r16.xyzw, cb10[3].xyzw, r14.wwww, r16.xyzw
mul r15.xyzw, cb11[12].xyzw, r16.xxxx
mad r15.xyzw, cb11[13].xyzw, r16.yyyy, r15.xyzw
mad r15.xyzw, cb11[14].xyzw, r16.zzzz, r15.xyzw
mad r15.xyzw, cb11[15].xyzw, r16.wwww, r15.xyzw
add r13.xyz, r13.xyz, -r15.xyz

mov r0.x, v1.w
mov r0.y, v2.w
mov r0.z, v3.w
add r1.xyz, -r0.xyzx, r13.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
sample r3.xyzw, v4.xyxx, t0.xyzw, s2
mul r3.xyz, r3.xyzx, cb0[34].xyzx
mad r1.w, r3.w, cb0[34].w, -cb0[33].x
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
sample r4.xyzw, v4.xyxx, t1.xyzw, s3
mad r5.xy, r4.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
dp3 r6.x, v1.xyzx, r5.xyzx
dp3 r6.y, v2.xyzx, r5.xyzx
dp3 r6.z, v3.xyzx, r5.xyzx
mad r1.w, -r4.x, v4.z, l(1.000000)
mov r6.w, l(1.000000)
dp4 r5.x, cb2[38].xyzw, r6.xyzw
dp4 r5.y, cb2[39].xyzw, r6.xyzw
dp4 r5.z, cb2[40].xyzw, r6.xyzw
add r4.yzw, r5.xxyz, v6.xxyz
max r4.yzw, r4.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r2.w, cb0[3].w, l(0.000000)
log r5.xyz, r4.yzwy
mul r5.xyz, r5.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r5.xyz, r5.xyzx
mad r5.xyz, r5.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r4.yzw, r2.wwww, r5.xxyz, r4.yyzw
lt r3.w, l(0.000000), cb3[2].w
if_nz r3.w
  dp3 r3.w, r6.xyzx, r6.xyzx
  rsq r3.w, r3.w
  mul r5.xyz, r3.wwww, r6.xyzx
  add r7.xyz, -r0.xyzx, cb3[0].xyzx
  div r7.xyz, r7.xyzx, r5.xyzx
  add r8.xyz, -r0.xyzx, cb3[1].xyzx
  div r8.xyz, r8.xyzx, r5.xyzx
  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
  movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  min r3.w, r7.y, r7.x
  min r3.w, r7.z, r3.w
  add r7.xyz, r0.xyzx, -cb3[2].xyzx
  mad r5.xyz, r5.xyzx, r3.wwww, r7.xyzx
else 
  mov r5.xyz, r6.xyzx
endif 
mad r3.w, -r1.w, l(0.700000), l(1.700000)
mul r3.w, r1.w, r3.w
mul r3.w, r3.w, l(6.000000)
sample_l r5.xyzw, r5.xyzx, t2.xyzw, s0, r3.w
log r5.w, r5.w
mul r5.w, r5.w, cb3[3].y
exp r5.w, r5.w
mul r5.w, r5.w, cb3[3].x
mul r7.xyz, r5.xyzx, r5.wwww
lt r6.w, cb3[1].w, l(0.999990)
if_nz r6.w
  lt r6.w, l(0.000000), cb3[6].w
  if_nz r6.w
    dp3 r6.w, r6.xyzx, r6.xyzx
    rsq r6.w, r6.w
    mul r8.xyz, r6.wwww, r6.xyzx
    add r9.xyz, -r0.xyzx, cb3[4].xyzx
    div r9.xyz, r9.xyzx, r8.xyzx
    add r10.xyz, -r0.xyzx, cb3[5].xyzx
    div r10.xyz, r10.xyzx, r8.xyzx
    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
    movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
    min r6.w, r9.y, r9.x
    min r6.w, r9.z, r6.w
    add r0.xyz, r0.xyzx, -cb3[6].xyzx
    mad r0.xyz, r8.xyzx, r6.wwww, r0.xyzx
  else 
    mov r0.xyz, r6.xyzx
  endif 
  sample_l r8.xyzw, r0.xyzx, t3.xyzw, s1, r3.w
  log r0.x, r8.w
  mul r0.x, r0.x, cb3[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r8.xyzx, r0.xxxx
  mad r5.xyz, r5.wwww, r5.xyzx, -r0.xyzx
  mad r7.xyz, cb3[1].wwww, r5.xyzx, r0.xyzx
endif 
dp3 r0.x, r6.xyzx, r6.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r6.xyzx
mul r3.xyz, r3.xyzx, cb0[2].wwww
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r0.xyzx, r2.xyzx
lt r3.w, r0.w, l(0.000000)
add r0.w, -r0.w, l(0.000010)
mad r5.xyz, r2.xyzx, r0.wwww, r0.xyzx
movc r0.xyz, r3.wwww, r5.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, cb2[0].xyzx
dp3 r3.w, r0.xyzx, r1.xyzx
max r3.w, r3.w, l(0.000000)
dp3 r0.x, r0.xyzx, r2.xyzx
dp3 r0.y, cb2[0].xyzx, r1.xyzx
max r0.xyw, r0.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r1.w, r1.w
mad r1.x, -r1.w, r1.w, l(1.000000)
mad r1.y, r0.x, r1.x, r0.z
mad r1.x, r0.w, r1.x, r0.z
mul r1.x, r0.x, r1.x
mad r1.x, r0.w, r1.y, r1.x
add r1.x, r1.x, l(0.000010)
div r1.x, l(2.000000), r1.x
mul r1.y, r0.z, r0.z
mul r1.z, r3.w, r3.w
mad r2.xy, r0.zzzz, r0.zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
mad r1.z, r1.z, r2.x, l(1.000000)
mul r2.x, r1.z, l(3.14159274)
mad r1.z, r2.x, r1.z, l(1.000000012E-007)
div r1.y, r1.y, r1.z
add r1.z, -r0.w, l(1.000000)
mul r2.x, r1.z, r1.z
mul r2.x, r2.x, r2.x
mul r1.z, r1.z, r2.x
add r0.x, -r0.x, l(1.000000)
mul r2.x, r0.x, r0.x
mul r2.x, r2.x, r2.x
mul r0.x, r0.x, r2.x
mul r2.x, r0.y, r0.y
dp2 r2.x, r2.xxxx, r1.wwww
add r2.x, r2.x, l(-0.500000)
mad r1.z, r2.x, r1.z, l(1.000000)
mad r2.x, r2.x, r0.x, l(1.000000)
mul r1.z, r1.z, r2.x
mul r1.x, r1.y, r1.x
mul r1.x, r1.x, l(0.785398185)
max r1.y, r1.x, l(0.000100)
sqrt r1.y, r1.y
movc r1.x, r2.w, r1.y, r1.x
mul r1.x, r0.w, r1.x
max r1.x, r1.x, l(0.000000)
mul r0.zw, r0.zzzw, r1.wwwz
mad r0.z, -r0.z, l(0.280000), l(1.000000)
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
movc r0.z, r2.w, r0.z, r1.y
mad r1.y, r4.x, v4.z, -cb0[2].w
add_sat r1.y, r1.y, l(1.000000)
mad r2.xyz, cb0[6].xyzx, r0.wwww, r4.yzwy
mul r1.xzw, r1.xxxx, cb0[6].xxyz
add r0.y, -r0.y, l(1.000000)
mul r0.w, r0.y, r0.y
mul r0.w, r0.w, r0.w
mul r0.y, r0.y, r0.w
add r4.xyz, -cb0[2].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r4.xyz, r4.xyzx, r0.yyyy, cb0[2].xyzx
mul r1.xzw, r1.xxzw, r4.xxyz
mad r1.xzw, r3.xxyz, r2.xxyz, r1.xxzw
mul r0.yzw, r7.xxyz, r0.zzzz
add r2.xyz, r1.yyyy, -cb0[2].xyzx
mad r2.xyz, r0.xxxx, r2.xyzx, cb0[2].xyzx
mad o0.xyz, r0.yzwy, r2.xyzx, r1.xzwx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used