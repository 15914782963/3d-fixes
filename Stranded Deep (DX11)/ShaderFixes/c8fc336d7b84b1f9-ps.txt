// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed c8fc336d7b84b1f9-ps.txt
// 3DMigoto: c8fc336d7b84b1f9 |    Unity headers extracted from Standard-Base.shader
//    Shader "Hidden/TerrainEngine/Splatmap/Standard-Base" {
//      Properties {
//       _MainTex ("Base (RGB) Smoothness (A)", 2D) = "white" { }
//       _MetallicTex ("Metallic (R)", 2D) = "white" { }
//       _Color ("Main Color", Color) = (1,1,1,1)
//      }
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="Geometry-100" "RenderType"="Opaque" }
//        Pass 3/4 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="Deferred" "QUEUE"="Geometry-100" "RenderType"="Opaque" }
//          GpuProgramID 132785
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 131
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard-Base.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 61 5 0
//   Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
//   undeciphered2: 1 5 2 3 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 160
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 80 [unity_DynamicLightmap_HDR]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_MetallicTex] 2D 2
//   SetTexture 2 [unity_DynamicLightmap] 2D 0
//   SetTexture 3 [unity_DynamicDirectionality] 2D -1
//   SetTexture 4 [unity_DynamicNormal] 2D -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 10 17:39:37 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v5.zw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed c8fc336d7b84b1f9-ps.txt
mov r6.xyzw, cb1[4].xyzw
mov r7.xyzw, l(0)
mul r7.x, -r5.x, r5.y
mul r9.xyzw, cb10[0].xyzw, r7.xxxx
mad r9.xyzw, cb10[1].xyzw, r7.yyyy, r9.xyzw
mad r9.xyzw, cb10[2].xyzw, r7.zzzz, r9.xyzw
mad r9.xyzw, cb10[3].xyzw, r7.wwww, r9.xyzw
mul r8.xyzw, cb11[12].xyzw, r9.xxxx
mad r8.xyzw, cb11[13].xyzw, r9.yyyy, r8.xyzw
mad r8.xyzw, cb11[14].xyzw, r9.zzzz, r8.xyzw
mad r8.xyzw, cb11[15].xyzw, r9.wwww, r8.xyzw
add r6.xyz, r6.xyz, -r8.xyz

mov o0.w, l(1.000000)
sample r0.xyzw, v1.xyxx, t1.xyzw, s2
mad r0.y, -r0.x, cb0[2].w, cb0[2].w
sample r1.xyzw, v1.xyxx, t0.xyzw, s1
mul r0.yzw, r0.yyyy, r1.xxyz
mov o0.xyz, r0.yzwy
add r1.xyz, r1.xyzx, -cb0[2].xyzx
mad r1.xyz, r0.xxxx, r1.xyzx, cb0[2].xyzx
mov o1.xyzw, r1.xyzw
mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o2.w, l(1.000000)
add r2.xyz, -v3.xyzx, r6.xyzx
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
sample r3.xyzw, v5.zwzz, t3.xyzw, s0
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r2.w, r3.xyzx, r3.xyzx
sqrt r2.w, r2.w
max r2.w, r2.w, l(0.001000)
div r3.xyz, r3.xyzx, r2.wwww
mad r2.xyz, r2.xyzx, r0.xxxx, r3.xyzx
dp3 r0.x, r2.xyzx, r2.xyzx
max r0.x, r0.x, l(0.001000)
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, r2.xyzx
dp3 r0.x, r3.xyzx, r2.xyzx
dp3 r2.x, v2.xyzx, r2.xyzx
max r2.x, r2.x, l(0.000000)
log r2.x, r2.x
max r0.x, r0.x, l(0.000000)
mul r2.y, r0.x, r0.x
add r2.z, -r1.w, l(1.000000)
mul r2.z, r2.z, r2.z
mad r1.w, r2.y, r1.w, r2.z
max r2.y, r2.z, l(0.000100)
mul r2.y, r2.y, r2.y
div r2.y, l(2.000000), r2.y
add r2.y, r2.y, l(-2.000000)
max r2.y, r2.y, l(0.000100)
mul r0.x, r0.x, r1.w
mad r0.x, r0.x, l(8.000000), l(0.000100)
add r1.w, r2.y, l(1.000000)
mul r2.x, r2.x, r2.y
exp r2.x, r2.x
mul r1.w, r1.w, r2.x
div r0.x, r1.w, r0.x
max r1.w, r0.x, l(0.000100)
sqrt r1.w, r1.w
eq r2.x, cb0[3].w, l(0.000000)
movc r0.x, r2.x, r1.w, r0.x
mad r1.xyz, r0.xxxx, r1.xyzx, r0.yzwy
sample r4.xyzw, v5.zwzz, t2.xyzw, s0
mul r0.x, r4.w, cb0[5].x
mul r2.xyz, r4.xyzx, r0.xxxx
log r2.xyz, r2.xyzx
mul r2.xyz, r2.xyzx, cb0[5].yyyy
exp r2.xyz, r2.xyzx
sample r4.xyzw, v5.zwzz, t4.xyzw, s0
mad r4.xyz, r4.zyxz, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.x, r4.xyzx, r3.xyzx
dp3 r1.w, v2.xyzx, r3.xyzx
max r1.w, r1.w, l(0.000000)
max r0.x, r0.x, l(0.125000)
div r2.xyz, r2.xyzx, r0.xxxx
mul r3.xyz, r2.wwww, r2.xyzx
add r0.x, -r2.w, l(1.000000)
mul r2.xyz, r0.xxxx, r2.xyzx
mul r2.xyz, r1.wwww, r2.xyzx
mul r1.xyz, r1.xyzx, r3.xyzx
mul r1.xyz, r1.wwww, r1.xyzx
mad o3.xyz, r0.yzwy, r2.xyzx, r1.xyzx
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used