// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 4809c37c98ac317b-ps.txt
// 3DMigoto: 4809c37c98ac317b |    Unity headers extracted from BeamTeamCausticsOverlay.shader
//    Shader "Beam Team/Post Effects/Caustics Overlay" {
//      Properties {
//       _MainTex ("Water Composition: Above water (RGB)", 2D) = "black" { }
//      }
//      SubShader 1/1 {
//        Pass 1/1 {
//          ZTest Always
//          ZWrite Off
//          Cull Off
//          GpuProgramID 51279
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 7
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from BeamTeamCausticsOverlay.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 24 4 0
//   Keywords { "WATER_BELOW" }
//   undeciphered2: 1 2 2 2 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 176
//   Vector 128 [_SunColor] 3
//   Float 140 [_SunFade]
//   Float 144 [_Abberation]
//   Float 148 [_BelowVisibility]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   SetTexture 0 [_MainTex] 2D 0
//   SetTexture 1 [_CausticsBump] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 10 17:34:01 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 4809c37c98ac317b-ps.txt
mov r4.xyzw, cb1[4].xyzw
mov r5.xyzw, l(0)
mul r5.x, -r3.x, r3.y
mul r7.xyzw, cb10[0].xyzw, r5.xxxx
mad r7.xyzw, cb10[1].xyzw, r5.yyyy, r7.xyzw
mad r7.xyzw, cb10[2].xyzw, r5.zzzz, r7.xyzw
mad r7.xyzw, cb10[3].xyzw, r5.wwww, r7.xyzw
mul r6.xyzw, cb11[12].xyzw, r7.xxxx
mad r6.xyzw, cb11[13].xyzw, r7.yyyy, r6.xyzw
mad r6.xyzw, cb11[14].xyzw, r7.zzzz, r6.xyzw
mad r6.xyzw, cb11[15].xyzw, r7.wwww, r6.xyzw
add r4.xyz, r4.xyz, -r6.xyz

add r0.xyz, v2.xyzx, -r4.xyzx
mad r0.xyz, r0.xyzx, l(20.000000, 20.000000, 20.000000, 0.000000), v2.xyzx
div r0.w, -r0.y, v4.y
mad r0.xyz, v4.xyzx, r0.wwww, r0.xyzx
mad r1.xy, r0.xzxx, l(0.200000, 0.200000, 0.000000, 0.000000), cb0[9].xxxx
sample r1.xyzw, r1.xyxx, t1.yxzw, s1
dp3 r0.w, v3.xyzx, v4.xyzx
mad_sat r0.w, r0.w, l(0.600000), l(0.400000)
add r1.w, -r0.w, l(1.000000)
mul r1.w, r1.w, l(0.600000)
mul r2.xy, r0.xzxx, l(0.200000, 0.200000, 0.000000, 0.000000)
add r0.xyz, r0.xyzx, -v2.xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
mad r0.yz, cb0[9].xxxx, l(0.000000, 2.000000, 2.000000, 0.000000), r2.xxyx
sample r2.xyzw, r2.xyxx, t1.xyzw, s1
mov r1.x, r2.x
sample r2.xyzw, r0.yzyy, t1.xyzw, s1
mov r1.z, r2.x
mul r1.xyz, r1.wwww, r1.xyzx
add r1.xyz, r1.xyzx, r1.xyzx
mul r2.xyz, cb0[8].xyzx, l(4.000000, 3.800000, 2.400000, 0.000000)
mul r1.xyz, r1.xyzx, r2.xyzx
mul r0.y, cb0[9].y, l(0.500000)
div_sat r0.x, r0.x, r0.y
add r0.x, -r0.x, l(1.000000)
mul r0.x, r0.x, r0.w
mul r0.x, r0.x, cb0[8].w
sample r2.xyzw, v1.xyxx, t0.xyzw, s0
mad o0.xyz, r1.xyzx, r0.xxxx, r2.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used