// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 0afa498255d44c1f-vs.txt
// 3DMigoto: 0afa498255d44c1f |    Unity headers extracted from Camera-CustomDepthNormalTexture.shader
//    Shader "Hidden/Camera-DepthNormalTexture" {
//      Properties {
//       _MainTex ("", 2D) = "white" { }
//       _Cutoff ("", Float) = 0.5
//       _Color ("", Color) = (1,1,1,1)
//      }
//      Fallback Off
//      SubShader 11/13 {
//        Tags { "RenderType"="SpeedTree" }
//        Pass 1/1 {
//          Tags { "RenderType"="SpeedTree" }
//          Cull Off
//          GpuProgramID 840842
//          Program "vp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 92
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Camera-CustomDepthNormalTexture.shader.decompressed:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 59 0 0
//   Keywords { "LOD_FADE_CROSSFADE" "GEOM_TYPE_MESH" }
//   undeciphered2: 1 0 4 0 0
//   undeciphered3: 15 4 0 0 2 1 1 2 3 4
//   ConstBuffer "$Globals" 144
//   Float 96 [_WindQuality]
//   Float 100 [_WindEnabled]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 80 [_ProjectionParams]
//   Vector 96 [_ScreenParams]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 64 [glstate_matrix_modelview0]
//   Matrix 128 [glstate_matrix_invtrans_modelview0]
//   Matrix 192 [_Object2World]
//   Matrix 256 [_World2Object]
//   ConstBuffer "SpeedTreeWind" 256
//   Vector 0 [_ST_WindVector]
//   Vector 16 [_ST_WindGlobal]
//   Vector 96 [_ST_WindBranchAdherences]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "SpeedTreeWind" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 10 17:32:58 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xy          6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[19], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_output o3.xyz
dcl_temps 3

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r2.xyzw, l(0, 0, 0, 0), t125.xyzw

add r0.x, cb2[15].x, cb3[1].x
mad r0.y, cb3[1].x, l(0.800000), cb2[15].y
add r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
frc r0.xy, r0.xyxx
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r0.zw, |r0.xxxy|, |r0.xxxy|
mad r0.xy, -|r0.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mad r0.xy, r0.zwzz, r0.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r0.xy, r0.xyxx, r0.xyxx
mad r0.x, r0.y, r0.y, r0.x
div r0.y, cb3[6].x, cb3[1].z
mad r0.x, cb3[1].y, r0.x, r0.y
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb3[1].z
mad r0.y, -r0.y, l(0.250000), v0.y
max r0.y, r0.y, l(0.000000)
mul r0.y, r0.y, cb3[1].z
log r0.z, r0.y
mul r0.z, r0.z, cb3[1].w
exp r0.z, r0.z
ne r0.w, r0.y, l(0.000000)
movc r0.y, r0.w, r0.z, r0.y
mul r0.x, r0.y, r0.x
mul r0.yzw, cb2[17].xxyz, cb3[0].yyyy
mad r0.yzw, cb2[16].xxyz, cb3[0].xxxx, r0.yyzw
mad r0.yzw, cb2[18].xxyz, cb3[0].zzzz, r0.yyzw
dp3 r0.z, r0.yzwy, r0.yzwy
rsq r0.z, r0.z
mul r0.yz, r0.zzzz, r0.yywy
mul r0.w, cb0[6].y, cb0[6].x
ge r1.x, l(0.000000), r0.w
lt r0.w, l(0.000000), r0.w
movc r0.yz, r1.xxxx, l(0,0,0,0), r0.yyzy
mad r0.xz, r0.yyzy, r0.xxxx, v0.xxzx
mov r0.y, v0.y
dp3 r1.x, r0.xyzx, r0.xyzx
rsq r1.x, r1.x
mul r0.xyz, r0.xyzx, r1.xxxx
dp3 r1.x, v0.xyzx, v0.xyzx
sqrt r1.x, r1.x
mul r0.xyz, r0.xyzx, r1.xxxx
movc r0.xyz, r0.wwww, r0.xyzx, v0.xyzx
mul r1.xyzw, r0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 0afa498255d44c1f-vs.txt
ne r2.w, r1.w, l(1.0)
if_nz r2.w
  add r2.w, r1.w, -r2.y
  mad r1.x, r2.w, r2.x, r1.x
endif

mov o1.xy, v3.xyxx
mul r0.y, r0.y, cb2[5].z
mad r0.x, cb2[4].z, r0.x, r0.y
mad r0.x, cb2[6].z, r0.z, r0.x
mad r0.x, cb2[7].z, v0.w, r0.x
mul r0.x, r0.x, cb1[5].w
mov o2.w, -r0.x
mul r0.xyz, v2.yyyy, cb2[9].xyzx
mad r0.xyz, cb2[8].xyzx, v2.xxxx, r0.xyzx
mad r0.xyz, cb2[10].xyzx, v2.zzzz, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o2.xyz, r0.wwww, r0.xyzx
mul r0.x, r1.y, cb1[5].x
mul r0.w, r0.x, l(0.500000)
mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mov o3.z, r1.w
add r0.xy, r0.zzzz, r0.xwxx
mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.250000, 0.250000)
mul o3.xy, r0.zwzz, r0.xyxx
ret 
// Approximately 0 instruction slots used