// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a55efc133e732c07-ps.txt
// 3DMigoto: a55efc133e732c07 |    Unity headers extracted from BeamTeamAtmosphericSphericalFogVolume.shader
//    Shader "Beam Team/Atmosphere/Atmospheric Spherical Fog Volume" {
//      Fallback Off
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent-100" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//        Pass 1/1 {
//          Tags { "QUEUE"="Transparent-100" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="Transparent" }
//          ZTest Always
//          ZWrite Off
//          Cull Front
//          Blend SrcAlpha OneMinusSrcAlpha
//          GpuProgramID 12163
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 65
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from BeamTeamAtmosphericSphericalFogVolume.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 37 3 0
//   Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "STORM_OFF" }
//   undeciphered2: 1 3 2 3 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 224
//   Float 176 [_Height]
//   Float 180 [_StartDistance]
//   Vector 192 [_SunPosition] 3
//   Vector 208 [_WeatherSkyColor] 3
//   Float 220 [_StormFade]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 1
//   SetTexture 1 [Ceto_OceanMask] 2D 0
//   SetTexture 2 [_SkyMap] 2D 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 10 17:34:00 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a55efc133e732c07-ps.txt
mov r4.xyzw, cb1[4].xyzw
mov r5.xyzw, l(0)
mul r5.x, -r3.x, r3.y
mul r7.xyzw, cb10[0].xyzw, r5.xxxx
mad r7.xyzw, cb10[1].xyzw, r5.yyyy, r7.xyzw
mad r7.xyzw, cb10[2].xyzw, r5.zzzz, r7.xyzw
mad r7.xyzw, cb10[3].xyzw, r5.wwww, r7.xyzw
mul r6.xyzw, cb11[12].xyzw, r7.xxxx
mad r6.xyzw, cb11[13].xyzw, r7.yyyy, r6.xyzw
mad r6.xyzw, cb11[14].xyzw, r7.zzzz, r6.xyzw
mad r6.xyzw, cb11[15].xyzw, r7.wwww, r6.xyzw
add r4.xyz, r4.xyz, -r6.xyz

add r0.xz, -v2.xxzx, r4.xxzx
mov r0.y, -v2.y
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mad r0.xyz, r0.yyyy, l(0.000000, 2.000000, 0.000000, 0.000000), -r0.xyzx
add r0.y, r0.y, l(1.000000)
div r0.xy, r0.xzxx, r0.yyyy
mad r0.xy, r0.xyxx, l(0.454000, 0.454000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
sample r0.xyzw, r0.xyxx, t2.xyzw, s2
add r1.xyz, -r0.xyzx, cb0[13].xyzx
mad r1.xyz, cb0[13].wwww, r1.xyzx, r0.xyzx
add r0.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r2.xyz, cb0[13].xyzx, l(-0.000000, -0.000000, -0.001000, 0.000000)
mad r2.xyz, cb0[13].wwww, r2.xyzx, l(0.000000, 0.000000, 0.001000, 0.000000)
add r2.xyz, -r1.xyzx, r2.xyzx
add r0.w, -cb0[12].y, l(12.000000)
mul_sat r0.w, r0.w, l(0.035000)
mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
mad r2.xyz, -r0.wwww, l(0.000000, 0.000000, 0.001000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, -r0.xyzx, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r1.xyz, -r0.xyzx, r1.xyzx
mad o0.xyz, cb0[13].wwww, r1.xyzx, r0.xyzx
div r0.xy, v1.xyxx, v1.zzzz
sample r1.xyzw, r0.xyxx, t0.xyzw, s1
sample r0.xyzw, r0.xyxx, t1.xyzw, s0
mad r0.x, cb1[7].x, r1.x, cb1[7].y
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
min r0.x, r0.y, r0.x
mul r0.x, r0.x, cb1[5].z
mul r0.x, r0.x, cb0[11].y
mul r0.x, r0.x, l(-1.442695)
exp r0.x, r0.x
add r0.x, -r0.x, l(1.000000)
mul r0.y, v2.y, cb0[11].x
max r0.y, r0.y, l(0.000000)
mul r0.xy, r0.xyxx, r0.xyxx
mul r0.y, r0.y, l(-1.442695)
exp r0.y, r0.y
mul r0.x, r0.y, r0.x
min o0.w, r0.x, l(1.000000)
ret 
// Approximately 0 instruction slots used