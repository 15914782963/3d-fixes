// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e81bec67cc6b6643-ps.txt
// 3DMigoto: e81bec67cc6b6643 |    Unity headers extracted from Glass - Bumped Specular Refractive Forward.shader
//    Shader "Beam Team/Standard/Transparent/Glass - Bumped Specular Refractive Forward" {
//      Properties {
//       _Color ("Glass Color (RGB)", Color) = (1,1,1,1)
//       _NormalStrength ("Normal Map Strength", Range(0,128)) = 64
//       _Abberation ("Abberation", Float) = 0.0015
//       _MainTex ("Diffuse Albedo (NOT IN USE)", 2D) = "white" { }
//       _SpecTex ("Specular Albedo (RGB) Gloss (A)", 2D) = "white" { }
//       _BumpTex ("Normal Map", 2D) = "bump" { }
//       _HighlightRimColor ("Highlight Rim Color", Color) = (0,0,0,0)
//      }
//      Fallback "VertexLit"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "FORCENOSHADOWCASTING"="true" "RenderType"="Transparent" }
//        GrabPass {
//         }
//        Pass 1/2 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent" "FORCENOSHADOWCASTING"="true" "SHADOWSUPPORT"="true" "RenderType"="Transparent" }
//          GpuProgramID 10435
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 33
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Glass - Bumped Specular Refractive Forward.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 130 5 4
//   Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "SUNSHINE_DISABLED" }
//   undeciphered2: 1 5 4 5 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 608
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 512 [_GrabTexture_TexelSize]
//   Vector 528 [_Color]
//   Float 544 [_NormalStrength]
//   Float 548 [_Abberation]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_BumpTex] 2D 3
//   SetTexture 1 [_GrabTexture] 2D 2
//   SetTexture 2 [_SpecTex] 2D 4
//   SetTexture 3 [unity_SpecCube0] CUBE 0
//   SetTexture 4 [unity_SpecCube1] CUBE 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 10 17:35:13 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyz         8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[35], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 17
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e81bec67cc6b6643-ps.txt
mov r13.xyzw, cb1[4].xyzw
mov r14.xyzw, l(0)
mul r14.x, -r12.x, r12.y
mul r16.xyzw, cb10[0].xyzw, r14.xxxx
mad r16.xyzw, cb10[1].xyzw, r14.yyyy, r16.xyzw
mad r16.xyzw, cb10[2].xyzw, r14.zzzz, r16.xyzw
mad r16.xyzw, cb10[3].xyzw, r14.wwww, r16.xyzw
mul r15.xyzw, cb11[12].xyzw, r16.xxxx
mad r15.xyzw, cb11[13].xyzw, r16.yyyy, r15.xyzw
mad r15.xyzw, cb11[14].xyzw, r16.zzzz, r15.xyzw
mad r15.xyzw, cb11[15].xyzw, r16.wwww, r15.xyzw
add r13.xyz, r13.xyz, -r15.xyz

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r13.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
sample r3.xyzw, v1.xyxx, t0.xyzw, s3
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r3.xyxx, r3.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r3.z, r1.w
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
mul r4.xy, r3.xyxx, cb0[32].xyxx
mul r4.xy, r4.xyxx, cb0[34].xxxx
mad r4.xy, r4.xyxx, v5.zzzz, v5.xyxx
div r5.xy, r4.xyxx, v5.wwww
sample r5.xyzw, r5.xyxx, t1.xyzw, s2
mov r4.z, v5.w
mov r6.x, cb0[34].y
mov r6.z, l(0)
add r5.yzw, r4.xxyz, r6.xxxz
div r5.yz, r5.yyzy, r5.wwww
sample r7.xyzw, r5.yzyy, t1.xyzw, s2
mad r4.xyz, r6.xxzx, l(2.000000, 2.000000, 2.000000, 0.000000), r4.xyzx
div r4.xy, r4.xyxx, r4.zzzz
sample r4.xyzw, r4.xyxx, t1.xyzw, s2
mov r4.x, r5.x
mov r4.y, r7.y
sample r5.xyzw, v1.xyxx, t2.xyzw, s4
mad r4.xyz, r4.xyzx, cb0[33].xyzx, v6.xyzx
dp3 r5.x, v2.xyzx, r3.xyzx
dp3 r5.y, v3.xyzx, r3.xyzx
dp3 r5.z, v4.xyzx, r3.xyzx
add r1.w, -r5.w, l(1.000000)
dp3 r2.w, -r2.xyzx, r5.xyzx
add r2.w, r2.w, r2.w
mad r3.xyz, r5.xyzx, -r2.wwww, -r2.xyzx
lt r2.w, l(0.000000), cb3[2].w
if_nz r2.w
  dp3 r2.w, r3.xyzx, r3.xyzx
  rsq r2.w, r2.w
  mul r6.xyz, r2.wwww, r3.xyzx
  add r7.xyz, -r0.xyzx, cb3[0].xyzx
  div r7.xyz, r7.xyzx, r6.xyzx
  add r8.xyz, -r0.xyzx, cb3[1].xyzx
  div r8.xyz, r8.xyzx, r6.xyzx
  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  min r2.w, r7.y, r7.x
  min r2.w, r7.z, r2.w
  add r7.xyz, r0.xyzx, -cb3[2].xyzx
  mad r6.xyz, r6.xyzx, r2.wwww, r7.xyzx
else 
  mov r6.xyz, r3.xyzx
endif 
mad r2.w, -r1.w, l(0.700000), l(1.700000)
mul r2.w, r1.w, r2.w
mul r2.w, r2.w, l(6.000000)
sample_l r6.xyzw, r6.xyzx, t3.xyzw, s0, r2.w
log r3.w, r6.w
mul r3.w, r3.w, cb3[3].y
exp r3.w, r3.w
mul r3.w, r3.w, cb3[3].x
mul r7.xyz, r6.xyzx, r3.wwww
lt r4.w, cb3[1].w, l(0.999990)
if_nz r4.w
  lt r4.w, l(0.000000), cb3[6].w
  if_nz r4.w
    dp3 r4.w, r3.xyzx, r3.xyzx
    rsq r4.w, r4.w
    mul r8.xyz, r3.xyzx, r4.wwww
    add r9.xyz, -r0.xyzx, cb3[4].xyzx
    div r9.xyz, r9.xyzx, r8.xyzx
    add r10.xyz, -r0.xyzx, cb3[5].xyzx
    div r10.xyz, r10.xyzx, r8.xyzx
    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
    movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
    min r4.w, r9.y, r9.x
    min r4.w, r9.z, r4.w
    add r0.xyz, r0.xyzx, -cb3[6].xyzx
    mad r3.xyz, r8.xyzx, r4.wwww, r0.xyzx
  endif 
  sample_l r8.xyzw, r3.xyzx, t4.xyzw, s1, r2.w
  log r0.x, r8.w
  mul r0.x, r0.x, cb3[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r8.xyzx, r0.xxxx
  mad r3.xyz, r3.wwww, r6.xyzx, -r0.xyzx
  mad r7.xyz, cb3[1].wwww, r3.xyzx, r0.xyzx
endif 
dp3 r0.x, r5.xyzx, r5.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r5.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r0.xyzx, r2.xyzx
lt r2.w, r0.w, l(0.000000)
add r0.w, -r0.w, l(0.000010)
mad r3.xyz, r2.xyzx, r0.wwww, r0.xyzx
movc r0.xyz, r2.wwww, r3.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, cb2[0].xyzx
dp3 r2.w, r0.xyzx, r1.xyzx
max r2.w, r2.w, l(0.000000)
dp3 r0.x, r0.xyzx, r2.xyzx
dp3 r0.y, cb2[0].xyzx, r1.xyzx
max r0.xyw, r0.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r1.w, r1.w
mad r1.x, -r1.w, r1.w, l(1.000000)
mad r1.y, r0.x, r1.x, r0.z
mad r1.x, r0.w, r1.x, r0.z
mul r1.x, r0.x, r1.x
mad r1.x, r0.w, r1.y, r1.x
add r1.x, r1.x, l(0.000010)
div r1.x, l(2.000000), r1.x
mul r1.y, r0.z, r0.z
mul r1.z, r2.w, r2.w
mad r2.xy, r0.zzzz, r0.zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
mad r1.z, r1.z, r2.x, l(1.000000)
mul r2.x, r1.z, l(3.14159274)
mad r1.z, r2.x, r1.z, l(1.000000012E-007)
div r1.y, r1.y, r1.z
mul r1.x, r1.y, r1.x
mul r1.x, r1.x, l(0.785398185)
eq r1.y, cb0[3].w, l(0.000000)
max r1.z, r1.x, l(0.000100)
sqrt r1.z, r1.z
movc r1.x, r1.y, r1.z, r1.x
mul r0.zw, r0.zzzw, r1.wwwx
max r0.w, r0.w, l(0.000000)
mad r0.z, -r0.z, l(0.280000), l(1.000000)
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
movc r0.z, r1.y, r0.z, r1.x
add r1.x, r5.w, -cb0[2].w
add_sat r1.x, r1.x, l(1.000000)
mul r1.yzw, r0.wwww, cb0[6].xxyz
add r0.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r0.w, r0.y, r0.y
mul r0.w, r0.w, r0.w
mul r0.y, r0.y, r0.w
add r2.xyz, -cb0[2].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r0.yyyy, cb0[2].xyzx
mul r0.yzw, r7.xxyz, r0.zzzz
mul r2.w, r0.x, r0.x
mul r2.w, r2.w, r2.w
mul r0.x, r0.x, r2.w
add r3.xyz, r1.xxxx, -cb0[2].xyzx
mad r3.xyz, r0.xxxx, r3.xyzx, cb0[2].xyzx
mul r0.xyz, r0.yzwy, r3.xyzx
mad r0.xyz, r1.yzwy, r2.xyzx, r0.xyzx
add o0.xyz, r4.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used