// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 02e226214b419b86-ps.txt
// 3DMigoto: 02e226214b419b86 |    Unity headers extracted from OceanUnderSide_Transparent.shader
//    Shader "Ceto/OceanUnderSide_Transparent" {
//      Fallback Off
//      SubShader 1/1 {
//        LOD 200
//        Tags { "QUEUE"="Transparent-151" "IGNOREPROJECTOR"="true" "RenderType"="Ceto_ProjectedGrid_Under" "OceanMask"="Ceto_ProjectedGrid_Under" }
//        GrabPass {
//          "Ceto_RefractionGrab"
//         }
//        Pass 1/2 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent-151" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="Ceto_ProjectedGrid_Under" "OceanMask"="Ceto_ProjectedGrid_Under" }
//          Cull Front
//          GpuProgramID 28275
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 155
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from OceanUnderSide_Transparent.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 265 9 0
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "CETO_USE_OCEAN_DEPTHS_BUFFER" "CETO_UNDERWATER_ON" }
//   undeciphered2: 1 10 3 10 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 832
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Float 128 [Ceto_SpecularRoughness]
//   Float 132 [Ceto_SpecularIntensity]
//   Vector 176 [Ceto_PosOffset] 3
//   Vector 320 [Ceto_GridSizes]
//   Vector 352 [Ceto_GridScale] 2
//   Float 384 [Ceto_GridEdgeBorder]
//   Float 388 [Ceto_OceanLevel]
//   Vector 464 [Ceto_SunDir] 3
//   Float 512 [Ceto_RefractionIntensity]
//   Float 516 [Ceto_RefractionDistortion]
//   Vector 528 [Ceto_FoamTint] 3
//   Vector 592 [Ceto_AbsCof]
//   Vector 720 [Ceto_FoamTextureScale0]
//   Vector 736 [Ceto_FoamTextureScale1]
//   Float 752 [Ceto_TextureWaveFoam]
//   Float 756 [_SunFade]
//   Vector 800 [_Beam_UnderwaterColor]
//   Vector 816 [_Beam_UnderwaterInscatterColor]
//   Matrix 192 [Ceto_Interpolation]
//   Matrix 256 [Ceto_ProjectorVP]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   SetTexture 0 [Ceto_Overlay_ClipMap] 2D 5
//   SetTexture 1 [Ceto_SlopeMap0] 2D 2
//   SetTexture 2 [Ceto_FoamMap0] 2D 1
//   SetTexture 3 [Ceto_Overlay_NormalMap] 2D 3
//   SetTexture 4 [Ceto_Overlay_FoamMap] 2D 4
//   SetTexture 5 [Ceto_OceanDepth] 2D 6
//   SetTexture 6 [Ceto_RefractionGrab] 2D 7
//   SetTexture 7 [Ceto_FoamTexture0] 2D 8
//   SetTexture 8 [Ceto_FoamTexture1] 2D 9
//   SetTexture 9 [_ShadowMapTexture] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 10 17:35:55 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xy w
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyz         8     NONE   float   xyz 
// TEXCOORD                 8   xyzw        9     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[52], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyw
dcl_input_ps linear v6.xyw
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.xyz
dcl_input_ps linear v9.xyw
dcl_output o0.xyzw
dcl_temps 14
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 02e226214b419b86-ps.txt
mov r10.xyzw, cb1[4].xyzw
mov r11.xyzw, l(0)
mul r11.x, -r9.x, r9.y
mul r13.xyzw, cb10[0].xyzw, r11.xxxx
mad r13.xyzw, cb10[1].xyzw, r11.yyyy, r13.xyzw
mad r13.xyzw, cb10[2].xyzw, r11.zzzz, r13.xyzw
mad r13.xyzw, cb10[3].xyzw, r11.wwww, r13.xyzw
mul r12.xyzw, cb11[12].xyzw, r13.xxxx
mad r12.xyzw, cb11[13].xyzw, r13.yyyy, r12.xyzw
mad r12.xyzw, cb11[14].xyzw, r13.zzzz, r12.xyzw
mad r12.xyzw, cb11[15].xyzw, r13.wwww, r12.xyzw
add r10.xyz, r10.xyz, -r12.xyz

mul r0.xyz, cb0[17].xywx, cb0[24].yyyy
mad r0.xyz, cb0[16].xywx, v4.xxxx, r0.xyzx
mad r0.xyz, cb0[18].xywx, v4.zzzz, r0.xyzx
add r0.xyz, r0.xyzx, cb0[19].xywx
div r0.xy, r0.xyxx, r0.zzzz
sample_l r1.xyzw, r0.xyxx, t0.xyzw, s5, l(0.000000)
mov_sat r1.x, r1.x
add r0.z, -r1.x, l(0.500000)
lt r0.z, r0.z, l(0.000000)
discard_nz r0.z
mov r1.x, cb0[12].w
add r2.x, -r1.x, cb0[12].z
mov r1.y, cb0[13].w
add r2.y, -r1.y, cb0[13].z
mov r1.z, cb0[14].w
add r2.z, -r1.z, cb0[14].z
mov r1.w, cb0[15].w
add r2.w, -r1.w, cb0[15].z
mad r3.xyzw, r2.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r1.xyzw
mov r4.x, cb0[12].x
add r5.x, -r4.x, cb0[12].y
mov r4.y, cb0[13].x
add r5.y, -r4.y, cb0[13].y
mov r4.z, cb0[14].x
add r5.z, -r4.z, cb0[14].y
mov r4.w, cb0[15].x
add r5.w, -r4.w, cb0[15].y
mad r6.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r4.xyzw
add r3.xyzw, r3.xyzw, -r6.xyzw
mad r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r6.xyzw
div r3.xyz, r3.xyzx, r3.wwww
mov_sat r0.zw, v7.xxxy
mad r1.xyzw, r0.zzzz, r2.xyzw, r1.xyzw
mad r2.xyzw, r0.zzzz, r5.xyzw, r4.xyzw
add r1.xyzw, r1.xyzw, -r2.xyzw
mad r1.xyzw, r0.wwww, r1.xyzw, r2.xyzw
div r1.xyz, r1.xyzx, r1.wwww
add r2.xyz, -r3.xyzx, r1.xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyzw, r0.zzzz, r2.xzxz
max r2.xyzw, r2.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
min r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add_sat r0.z, v7.w, v7.z
mul r2.xyzw, r0.zzzz, r2.xyzw
mad r1.xyzw, r2.xyzw, cb0[24].xxxx, r1.xzxz
add r1.xyzw, r1.xyzw, cb0[11].xzxz
mul r2.xyzw, cb0[20].xxyy, cb0[22].xxxx
div r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
mul r1.xyzw, r1.xyzw, r2.xyzw
sample r2.xyzw, r1.xyxx, t1.xyzw, s2
sample r3.xyzw, r1.zwzz, t1.xyzw, s2
add r0.zw, r2.xxxy, r3.zzzw
sample_l r2.xyzw, r0.xyxx, t3.wxyz, s3, l(0.000000)
sample_l r3.xyzw, r0.xyxx, t4.wxyz, s4, l(0.000000)
mov_sat r2.x, r2.x
add r0.x, -r2.x, l(1.000000)
mul r0.xz, r0.xxxx, -r0.zzwz
mov r0.y, l(1.000000)
add r0.xyz, r2.yzwy, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mov r0.w, -r0.y
add r2.xyz, -v4.xyzx, r10.xyzx
dp3 r0.y, r2.xyzx, r2.xyzx
rsq r2.w, r0.y
sqrt r0.y, r0.y
mul r0.y, r0.y, l(0.010000)
max r0.y, r0.y, l(0.000100)
min r0.y, r0.y, l(1.000000)
add r0.y, -r0.y, l(1.000000)
mul r2.xyz, r2.wwww, r2.xyzx
dp3 r2.w, r2.xzyx, r0.xzwx
add r3.w, r2.w, r2.w
lt r2.w, r2.w, l(0.000000)
mad r4.xyz, r2.xyzx, -r3.wwww, r0.xwzx
movc r4.xyz, r2.wwww, r4.xyzx, r0.xwzx
mov r4.w, -r4.z
dp3 r5.w, v1.xzyx, r4.xywx
dp3 r5.y, v2.xzyx, r4.xywx
dp3 r5.x, v3.xzyx, r4.xywx
mul r0.xzw, r5.wwyx, l(1.000000, 0.000000, -1.000000, 1.000000)
mul r6.xz, r0.zzxz, r5.yyxy
mov r5.z, l(-0.000000)
mov r6.y, l(0)
mad r6.xyz, r5.xyzx, r5.xwyx, -r6.xyzx
dp3 r2.w, cb2[0].xyzx, r6.xyzx
dp2 r3.w, cb2[0].yzyy, r5.xyxx
max r5.z, |r2.w|, |r3.w|
div r5.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.z
min r5.w, |r2.w|, |r3.w|
mul r5.z, r5.z, r5.w
mul r5.w, r5.z, r5.z
mad r6.w, r5.w, l(0.0208350997), l(-0.085133)
mad r6.w, r5.w, r6.w, l(0.180141)
mad r6.w, r5.w, r6.w, l(-0.330299497)
mad r5.w, r5.w, r6.w, l(0.999866)
mul r6.w, r5.w, r5.z
mad r6.w, r6.w, l(-2.000000), l(1.57079637)
lt r7.x, |r2.w|, |r3.w|
and r6.w, r6.w, r7.x
mad r5.z, r5.z, r5.w, r6.w
lt r5.w, r2.w, -r2.w
and r5.w, r5.w, l(0xc0490fdb)
add r5.z, r5.w, r5.z
min r5.w, r2.w, r3.w
max r2.w, r2.w, r3.w
ge r2.w, r2.w, -r2.w
lt r3.w, r5.w, -r5.w
and r2.w, r2.w, r3.w
movc r2.w, r2.w, -r5.z, r5.z
mad r2.w, r2.w, r2.w, l(1.000000)
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
add r3.w, -r2.w, l(1.000000)
mul r3.w, r3.w, cb0[8].x
mad r2.w, cb0[8].x, r2.w, r3.w
add r2.w, r2.w, r2.w
dp3 r3.w, cb2[0].xyzx, r0.xzwx
max r3.w, r3.w, l(0.010000)
mad r5.z, -r3.w, r3.w, l(1.000000)
mul r2.w, r2.w, r5.z
sqrt r2.w, r2.w
div r2.w, r3.w, r2.w
mul r3.w, r2.w, -r2.w
mul r2.w, r2.w, l(3.54490757)
mul r3.w, r3.w, l(1.442695)
exp r3.w, r3.w
div r2.w, r3.w, r2.w
add r2.w, r2.w, l(1.000000)
mov r7.x, v1.w
mov r7.y, v2.w
mov r7.z, v3.w
add r7.xyz, -r7.xyzx, r10.xyzx
dp3 r3.w, r7.xyzx, r7.xyzx
rsq r3.w, r3.w
mul r7.xyz, r3.wwww, r7.xyzx
mul r5.zw, r7.yyyz, l(0.000000, 0.000000, -1.000000, 1.000000)
dp2 r3.w, r5.zwzz, r5.xyxx
mov r7.w, -r7.y
dp3 r5.z, r7.xwzx, r6.xyzx
max r5.w, |r3.w|, |r5.z|
div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
min r6.w, |r3.w|, |r5.z|
mul r5.w, r5.w, r6.w
mul r6.w, r5.w, r5.w
mad r7.y, r6.w, l(0.0208350997), l(-0.085133)
mad r7.y, r6.w, r7.y, l(0.180141)
mad r7.y, r6.w, r7.y, l(-0.330299497)
mad r6.w, r6.w, r7.y, l(0.999866)
mul r7.y, r5.w, r6.w
mad r7.y, r7.y, l(-2.000000), l(1.57079637)
lt r8.x, |r5.z|, |r3.w|
and r7.y, r7.y, r8.x
mad r5.w, r5.w, r6.w, r7.y
lt r6.w, r5.z, -r5.z
and r6.w, r6.w, l(0xc0490fdb)
add r5.w, r5.w, r6.w
min r6.w, r3.w, r5.z
max r3.w, r3.w, r5.z
ge r3.w, r3.w, -r3.w
lt r5.z, r6.w, -r6.w
and r3.w, r3.w, r5.z
movc r3.w, r3.w, -r5.w, r5.w
mad r3.w, r3.w, r3.w, l(1.000000)
div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
add r5.z, -r3.w, l(1.000000)
mul r5.z, r5.z, cb0[8].x
mad r3.w, cb0[8].x, r3.w, r5.z
add r3.w, r3.w, r3.w
dp3 r5.z, r7.xwzx, r0.xzwx
add r7.xyz, r7.xwzx, cb2[0].xyzx
max r5.z, r5.z, l(0.010000)
mad r5.w, -r5.z, r5.z, l(1.000000)
mul r3.w, r3.w, r5.w
sqrt r3.w, r3.w
div r3.w, r5.z, r3.w
mul r5.w, r3.w, -r3.w
mul r3.w, r3.w, l(3.54490757)
mul r5.w, r5.w, l(1.442695)
exp r5.w, r5.w
div r3.w, r5.w, r3.w
add r2.w, r2.w, r3.w
mul r2.w, r5.z, r2.w
dp3 r3.w, r7.xyzx, r7.xyzx
rsq r3.w, r3.w
mul r7.xyz, r3.wwww, r7.xyzx
dp3 r0.x, r7.xyzx, r0.xzwx
mul r0.z, r0.x, r0.x
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
mul r0.z, r0.z, r0.z
mul r0.z, r2.w, r0.z
dp2 r0.w, r7.yzyy, r5.xyxx
dp3 r2.w, r7.xyzx, r6.xyzx
mul r2.w, r0.x, r2.w
mul r0.x, r0.x, r0.w
mul r0.x, r0.x, r0.x
mul r0.w, r2.w, r2.w
div r0.xw, r0.xxxw, cb0[8].xxxx
add r0.x, r0.x, r0.w
mul r0.xz, r0.xxzx, l(-0.721347511, 0.000000, 4.000000, 0.000000)
exp r0.x, r0.x
mul r0.w, cb0[8].x, l(6.28318548)
div r0.x, r0.x, r0.w
mul r0.x, r0.x, cb0[8].y
div r0.x, r0.x, r0.z
lt r0.z, cb2[0].y, l(0.000000)
movc r0.x, r0.z, l(0), r0.x
div r0.zw, v9.xxxy, v9.wwww
sample r5.xyzw, r0.zwzz, t9.xyzw, s0
mul r5.xyz, r5.xxxx, cb0[6].xyzx
mul r6.xyz, r0.xxxx, r5.xyzx
sample r7.xyzw, r1.xyxx, t2.xyzw, s1
sample r1.xyzw, r1.zwzz, t2.xyzw, s1
add r0.z, r1.y, r7.x
mov_sat r0.z, -r0.z
mov_sat r3.x, r3.x
add r0.w, -r3.x, l(1.000000)
mul r0.z, r0.w, r0.z
add r1.xy, v4.xzxx, cb0[46].zzzz
mul r1.xy, r1.xyxx, cb0[46].xyxx
sample r1.xyzw, r1.xyxx, t8.xyzw, s9
mul r0.w, r1.w, l(0.500000)
add r1.xy, v4.xzxx, cb0[45].zzzz
mul r1.xy, r1.xyxx, cb0[45].xyxx
sample r1.xyzw, r1.xyxx, t7.xyzw, s8
mad r0.w, r1.w, l(0.500000), r0.w
mad r1.x, r0.z, r0.w, -r0.z
mad r0.z, cb0[47].x, r1.x, r0.z
mad r0.z, r3.y, r0.w, r0.z
add r0.z, r3.z, r0.z
dp3 r0.w, r2.xyzx, -cb0[29].xyzx
mad r0.w, r0.w, l(0.700000), l(0.300000)
mul r0.w, r0.w, r0.w
mul r1.xyz, r0.wwww, cb0[51].xyzx
mad r1.xyz, r1.xyzx, l(0.600000, 0.900000, 1.000000, 0.000000), cb0[50].xyzx
mad_sat r0.w, r2.y, l(-0.500000), l(0.500000)
dp3 r1.w, -r2.xyzx, r4.xyzx
mul r1.xyz, r0.wwww, r1.xyzx
mul r2.xyz, r1.xyzx, -cb0[47].yyyy
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), -r2.xyzx
mul r3.xyz, cb0[47].yyyy, l(0.649212778, 0.793482304, 1.00988650, 0.000000)
exp r3.xyz, r3.xyzx
min r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r1.xyz, r3.xyzx, r1.xyzx, r2.xyzx
mul r2.xy, r4.xzxx, cb0[32].yyyy
mul r0.yw, r0.yyyy, r2.xxxy
div r2.xy, v5.xyxx, v5.wwww
mad_sat r2.xy, r0.ywyy, l(1.000000, 0.000000, 0.000000, 0.000000), r2.xyxx
mul r0.yw, r0.yyyw, l(0.000000, 1.000000, 0.000000, 0.000000)
sample r2.xyzw, r2.xyxx, t5.xyzw, s6
ge r2.x, v4.w, r2.y
movc r0.yw, r2.xxxx, l(0,0,0,0), r0.yyyw
div r2.xy, v6.xyxx, v6.wwww
add_sat r0.yw, r0.yyyw, r2.xxxy
sample r2.xyzw, r0.ywyy, t6.xyzw, s7
mul r2.xyz, r2.xyzx, cb0[32].xxxx
mad r0.y, |r1.w|, |r1.w|, l(-0.437500)
sqrt r0.w, r0.y
lt r0.y, l(0.000000), r0.y
add r2.w, |r1.w|, r0.w
add r0.w, -|r1.w|, r0.w
mad r3.x, |r1.w|, r2.w, l(-1.000000)
div r2.w, r0.w, r2.w
mad r0.w, |r1.w|, r0.w, l(1.000000)
div r0.w, r3.x, r0.w
mad r0.w, r0.w, r0.w, l(1.000000)
mul r1.w, r2.w, r2.w
mul r1.w, r1.w, l(0.500000)
mul r0.w, r0.w, r1.w
mad r0.w, r0.w, l(0.980000), l(0.020000)
movc r0.y, r0.y, r0.w, l(1.000000)
add r0.w, -r0.y, l(1.000000)
mul r2.xyz, r0.wwww, r2.xyzx
mad r1.xyz, r1.xyzx, r0.yyyy, r2.xyzx
add r1.w, -r0.z, l(1.000000)
mul r2.xyz, r1.wwww, -cb0[37].xyzx
mul r2.xyz, r2.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
exp r2.xyz, r2.xyzx
mul r3.xyz, r0.zzzz, cb0[33].xyzx
mad r2.xyz, r3.xyzx, r2.xyzx, -r1.xyzx
mad r1.xyz, r0.zzzz, r2.xyzx, r1.xyzx
mul r2.xyz, r5.xyzx, r1.xyzx
mad r3.xyz, r5.xyzx, r0.xxxx, r1.xyzx
mul r5.xyz, r4.xyzx, l(1.000000, -1.000000, 1.000000, 0.000000)
dp3 r0.x, r5.xyzx, cb2[0].xyzx
max r0.x, r0.x, l(0.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
mul r2.xyz, r0.wwww, r2.xyzx
mad r0.xyz, r3.xyzx, r0.yyyy, r2.xyzx
mov r4.w, l(1.000000)
dp4 r2.x, cb2[38].xyzw, r4.xyzw
dp4 r2.y, cb2[39].xyzw, r4.xyzw
dp4 r2.z, cb2[40].xyzw, r4.xyzw
add r2.xyz, r2.xyzx, v8.xyzx
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r3.xyz, r2.xyzx
mul r3.xyz, r3.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r3.xyz, r3.xyzx
mad r3.xyz, r3.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r1.w, cb0[3].w, l(0.000000)
movc r2.xyz, r1.wwww, r3.xyzx, r2.xyzx
mul r1.xyz, r1.xyzx, r2.xyzx
mad o0.xyz, r1.xyzx, r0.wwww, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used