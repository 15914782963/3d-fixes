// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed ed56ed739666aea3-vs.txt
// 3DMigoto: ed56ed739666aea3 |    Unity headers extracted from CumulusCloud.shader
//    Shader "Beam Team/Sky/Cumulus Particle" {
//      Properties {
//       _MainTex ("Particle Texture", 2D) = "white" { }
//       _InvFade ("Soft Particles Factor", Range(0.010000,3.000000)) = 1.000000
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//        Pass 1/1 {
//          Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Cull Off
//          Blend One OneMinusSrcAlpha
//          GpuProgramID 55518
//          Program "vp" {
//            SubProgram "d3d11_9x " {
//              GpuProgramIndex 5
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from CumulusCloud.shader.decompressed:
//   API d3d11_9x
//   Shader model vs_4_0_level_9_1
//   undeciphered1: 201510240 42 0 0
//   Keywords { "SOFTPARTICLES_ON" }
//   undeciphered2: 1 0 3 0 0 0
//   undeciphered3: 13 3 0 0 2 1 3 4
//   ConstBuffer "$Globals" 240
//   Float 96 [ambientBoost]
//   Vector 100 [ambient] 3
//   Vector 128 [lightDir] 3
//   Float 140 [extinction]
//   Vector 144 [fog]
//   Float 160 [fade]
//   Vector 164 [cloudPos] 3
//   Float 176 [minPhase]
//   Float 180 [maxPhase]
//   Vector 208 [_MainTex_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityPerDraw" 352
//   Matrix 0 [glstate_matrix_mvp]
//   Matrix 64 [glstate_matrix_modelview0]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Dec 10 03:50:37 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         4  ( FLT, FLT, FLT, FLT)
// c6         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c7         cb1             4         2  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         8  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_x
    def c17, 0.5, 0, 1, -1.44269502
    def c18, 1.70000005, -0.200000003, 1.72250009, 1.00999999
    def c19, 1.5, 0.148499981, 0.235874981, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    mul r0, v0.y, c10
    mad r0, c9, v0.x, r0
    mad r0, c11, v0.z, r0
    mad r0, c12, v0.w, r0
    mul r1.x, r0.y, c8.x
    mul r1.w, r1.x, c17.x
    mul r1.xz, r0.xyww, c17.x
    add oT2.xy, r1.z, r1.xwzw
    mul r1, v0.y, c14.zxyz
    mad r1, c13.zxyz, v0.x, r1
    mad r1, c15.zxyz, v0.z, r1
    add r1.x, r1.x, c16.z
    mad r1.yzw, c16.xxyz, v0.w, r1
    dp3 r1.y, r1.yzww, r1.yzww
    rsq r1.y, r1.y
    rcp r1.y, r1.y
    mul r1.y, r1.y, c3.w
    max r1.y, r1.y, c17.y
    mov oT2.z, -r1.x
    mov r2.yzw, c4
    add r1.xzw, r2.yyzw, -c7.xyyz
    nrm r2.xyz, r1.xzww
    dp3 r1.x, r2, c2
    mad r1.xz, r1.x, -c18.xyyw, c18.zyww
    pow r2.x, r1.z, c19.x
    pow r2.y, r1.x, c19.x
    rcp r1.x, r2.y
    rcp r1.z, r2.x
    mul r1.z, r1.z, c19.y
    mad r1.x, r1.x, c19.z, r1.z
    max r1.x, r1.x, c5.x
    min r1.x, r1.x, c5.y
    mul r2.xyz, c1.x, c1.yzww
    mad r1.xzw, v1.xyyz, r1.x, r2.xyyz
    mul r1.xzw, r1, v1.w
    max r1.xzw, r1, c17.y
    min r1, r1, c17.z
    mul r2.x, r1.y, c17.w
    mad r1.y, r1.y, -r1.y, c17.z
    mul r1.y, r1.y, c4.x
    exp r2.x, r2.x
    lrp r3.xyz, r2.x, r1.xzww, c3
    mul oT0.xyz, r1.y, r3
    mul oT0.w, r1.y, c2.w
    mad oT1.xy, v2, c6, c6.zwzw
    mad oPos.xy, r0.w, c0, r0
    mov oPos.zw, r0
    mov oT2.w, r0.w

// approximately 54 instruction slots used
vs_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o3.xyzw
dcl_temps 8

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed ed56ed739666aea3-vs.txt
mov r4.xyzw, cb1[4].xyzw
mov r5.xyzw, l(0)
mul r5.x, -r3.x, r3.y
mul r7.xyzw, cb10[0].xyzw, r5.xxxx
mad r7.xyzw, cb10[1].xyzw, r5.yyyy, r7.xyzw
mad r7.xyzw, cb10[2].xyzw, r5.zzzz, r7.xyzw
mad r7.xyzw, cb10[3].xyzw, r5.wwww, r7.xyzw
mul r6.xyzw, cb11[12].xyzw, r7.xxxx
mad r6.xyzw, cb11[13].xyzw, r7.yyyy, r6.xyzw
mad r6.xyzw, cb11[14].xyzw, r7.zzzz, r6.xyzw
mad r6.xyzw, cb11[15].xyzw, r7.wwww, r6.xyzw
add r4.xyz, r4.xyz, -r6.xyz

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unity-reflection --fix-unity-frustum-world --only-autofixed ed56ed739666aea3-vs.txt
ne r3.w, r0.w, l(1.0)
if_nz r3.w
  add r3.w, r0.w, -r3.y
  mad r0.x, r3.w, r3.x, r0.x
endif

add r1.xyz, cb0[10].yzwy, -r4.xyzx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r1.xyz, r0.zzzz, r1.xyzx
dp3 r0.z, r1.xyzx, cb0[8].xyzx
mad r1.xy, -r0.zzzz, l(1.700000, -0.200000, 0.000000, 0.000000), l(1.72250009, 1.010000, 0.000000, 0.000000)
log r1.xy, r1.xyxx
mul r1.xy, r1.xyxx, l(1.500000, 1.500000, 0.000000, 0.000000)
exp r1.xy, r1.xyxx
div r1.xy, l(0.277499974, 0.990000, 0.000000, 0.000000), r1.xyxx
mul r1.xy, r1.xyxx, l(0.850000, 0.149999976, 0.000000, 0.000000)
add r0.z, r1.y, r1.x
max r0.z, r0.z, cb0[11].x
min r0.z, r0.z, cb0[11].y
mul r1.xyz, cb0[6].xxxx, cb0[6].yzwy
mad r1.xyz, v1.xyzx, r0.zzzz, r1.xyzx
mul_sat r1.xyz, r1.xyzx, v1.wwww
add r1.xyz, r1.xyzx, -cb0[9].xyzx
mul r2.xyzw, v0.yyyy, cb2[5].zxyz
mad r2.xyzw, cb2[4].zxyz, v0.xxxx, r2.xyzw
mad r2.xyzw, cb2[6].zxyz, v0.zzzz, r2.xyzw
mad r2.yzw, cb2[7].xxyz, v0.wwww, r2.yyzw
add r0.z, r2.x, cb2[7].z
mov o3.z, -r0.z
dp3 r0.z, r2.yzwy, r2.yzwy
sqrt r0.z, r0.z
mul_sat r0.z, r0.z, cb0[9].w
mul r1.w, r0.z, l(-1.442695)
mad r0.z, -r0.z, r0.z, l(1.000000)
mul r0.z, r0.z, cb0[10].x
exp r1.w, r1.w
mad r1.xyz, r1.wwww, r1.xyzx, cb0[9].xyzx
mul o1.xyz, r0.zzzz, r1.xyzx
mul o1.w, r0.z, cb0[8].w
mad o2.xy, v2.xyxx, cb0[13].xyxx, cb0[13].zwzz
mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o3.w, r0.w
add o3.xy, r1.zzzz, r1.xwxx
ret 
// Approximately 0 instruction slots used