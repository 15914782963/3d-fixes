// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9b282d7d06f27a6f-ps.txt
// 3DMigoto: 9b282d7d06f27a6f |    Unity headers extracted from Glass - Bumped Specular Forward.shader
//    Shader "Beam Team/Standard/Transparent/Glass - Bumped Specular Forward" {
//      Properties {
//       _Color ("Glass Color (RGB) Transparency (A)", Color) = (1,1,1,1)
//       _MainTex ("Diffuse Albedo (NOT IN USE)", 2D) = "white" { }
//       _SpecTex ("Specular Albedo (RGB) Gloss (A)", 2D) = "white" { }
//       _BumpTex ("Normal Map", 2D) = "bump" { }
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent+550" "FORCENOSHADOWCASTING"="true" "RenderType"="Transparent" }
//        Pass 1/2 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent+550" "FORCENOSHADOWCASTING"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Blend One OneMinusSrcAlpha
//          ColorMask RGB
//          GpuProgramID 12435
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 19
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Glass - Bumped Specular Forward.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 198 12 4
//   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "SUNSHINE_FILTER_PCF_3x3" }
//   undeciphered2: 1 6 4 6 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 544
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 128 [sunshine_Lightmap_TexelSize]
//   Vector 144 [sunshine_ShadowParamsAndHalfTexel]
//   Vector 160 [sunshine_OvercastCoord] 2
//   Vector 176 [sunshine_OvercastVectorsUV]
//   Vector 320 [sunshine_ShadowCoordDepthStart]
//   Vector 384 [sunshine_ShadowToWorldScale] 3
//   Vector 400 [sunshine_CascadeNearRatiosSq]
//   Vector 416 [sunshine_CascadeFarRatiosSq]
//   Vector 496 [sunshine_ShadowFadeParams] 3
//   Float 508 [_ShadowFade]
//   Vector 512 [_Color]
//   Matrix 432 [sunshine_CascadeRanges]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_BumpTex] 2D 4
//   SetTexture 1 [_SpecTex] 2D 5
//   SetTexture 2 [sunshine_OvercastMap] 2D 3
//   SetTexture 3 [sunshine_Lightmap] 2D 2
//   SetTexture 4 [unity_SpecCube0] CUBE 0
//   SetTexture 5 [unity_SpecCube1] CUBE 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 10 17:35:10 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[33], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 19
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9b282d7d06f27a6f-ps.txt
mov r15.xyzw, cb1[4].xyzw
mov r16.xyzw, l(0)
mul r16.x, -r14.x, r14.y
mul r18.xyzw, cb10[0].xyzw, r16.xxxx
mad r18.xyzw, cb10[1].xyzw, r16.yyyy, r18.xyzw
mad r18.xyzw, cb10[2].xyzw, r16.zzzz, r18.xyzw
mad r18.xyzw, cb10[3].xyzw, r16.wwww, r18.xyzw
mul r17.xyzw, cb11[12].xyzw, r18.xxxx
mad r17.xyzw, cb11[13].xyzw, r18.yyyy, r17.xyzw
mad r17.xyzw, cb11[14].xyzw, r18.zzzz, r17.xyzw
mad r17.xyzw, cb11[15].xyzw, r18.wwww, r17.xyzw
add r15.xyz, r15.xyz, -r17.xyz

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r15.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
sample r3.xyzw, v1.xyxx, t0.xyzw, s4
mad r3.xy, r3.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r3.xyxx, r3.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r3.z, r1.w
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
sample r4.xyzw, v1.xyxx, t1.xyzw, s5
add r5.xyz, v5.xyzx, -cb0[20].xyzx
mul r5.xyz, r5.xyzx, cb0[24].xyzx
dp3 r1.w, r5.xyzx, r5.xyzx
mul r2.w, r1.w, l(123456792.000000)
frc r2.w, r2.w
mad r2.w, -r2.w, cb0[9].y, l(1.000000)
mul r2.w, r1.w, r2.w
ge r5.xyzw, r2.wwww, cb0[25].xyzw
and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
ge r6.xyzw, cb0[26].xyzw, r2.wwww
and r6.xyzw, r6.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
mul r5.xyzw, r5.xyzw, r6.xyzw
mul r6.x, r5.x, cb0[27].x
mul r6.y, r5.x, cb0[28].x
mul r6.z, r5.x, cb0[29].x
mul r6.w, r5.x, cb0[30].x
mul r7.x, r5.y, cb0[27].y
mul r7.y, r5.y, cb0[28].y
mul r7.z, r5.y, cb0[29].y
mul r7.w, r5.y, cb0[30].y
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.x, r5.z, cb0[27].z
mul r7.y, r5.z, cb0[28].z
mul r7.z, r5.z, cb0[29].z
mul r7.w, r5.z, cb0[30].z
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.x, r5.w, cb0[27].w
mul r7.y, r5.w, cb0[28].w
mul r7.z, r5.w, cb0[29].w
mul r7.w, r5.w, cb0[30].w
add r5.xyzw, r6.xyzw, r7.xyzw
mad r5.xy, r5.zwzz, v5.xyxx, r5.xyxx
mad_sat r1.w, -r1.w, cb0[31].y, cb0[31].x
mad r5.zw, cb0[11].xxxy, v5.xxxx, cb0[10].xxxy
mad r5.zw, cb0[11].zzzw, v5.yyyy, r5.zzzw
sample r6.xyzw, r5.zwzz, t2.xyzw, s3
add r2.w, -cb0[31].w, l(1.000000)
max r2.w, r6.w, r2.w
mul r5.xy, r5.xyxx, cb0[8].zwzz
frc r6.xy, r5.xyxx
round_ni r5.xy, r5.xyxx
mad r5.xy, r5.xyxx, cb0[8].xyxx, cb0[9].zwzz
add r5.zw, r5.xxxy, -cb0[8].xxxy
sample r7.xyzw, r5.zwzz, t3.xyzw, s2
dp4 r7.x, r7.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
mad r8.xyzw, cb0[8].xyxy, l(0.000000, -1.000000, 1.000000, -1.000000), r5.xyxy
sample r9.xyzw, r8.xyxx, t3.xyzw, s2
dp4 r7.y, r9.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
sample r8.xyzw, r8.zwzz, t3.xyzw, s2
dp4 r7.z, r8.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
ge r7.xyz, v5.zzzz, r7.xyzx
and r7.xyz, r7.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
add r6.z, -r6.x, l(1.000000)
mov r6.w, l(1.000000)
dp3 r7.x, r7.zxyz, r6.xzwx
mad r8.xyzw, cb0[8].xyxy, l(-1.000000, 0.000000, 1.000000, 0.000000), r5.xyxy
sample r9.xyzw, r8.xyxx, t3.xyzw, s2
dp4 r9.x, r9.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
sample r10.xyzw, r5.xyxx, t3.xyzw, s2
dp4 r9.y, r10.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
sample r8.xyzw, r8.zwzz, t3.xyzw, s2
dp4 r9.z, r8.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
ge r8.xyz, v5.zzzz, r9.xyzx
and r8.xyz, r8.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mad r9.xyz, r6.xwxx, l(-1.000000, 1.000000, 1.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
dp3 r7.y, r8.xyzx, r9.xyzx
mad r8.xyzw, cb0[8].xyxy, l(-1.000000, 1.000000, 0.000000, 1.000000), r5.xyxy
sample r10.xyzw, r8.xyxx, t3.xyzw, s2
dp4 r10.x, r10.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
sample r8.xyzw, r8.zwzz, t3.xyzw, s2
dp4 r10.y, r8.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
add r5.xy, r5.xyxx, cb0[8].xyxx
sample r5.xyzw, r5.xyxx, t3.xyzw, s2
dp4 r10.z, r5.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
ge r5.xyz, v5.zzzz, r10.xyzx
and r5.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
dp3 r7.z, r5.xyzx, r9.xyzx
mad r5.xyz, r6.ywyy, l(-1.000000, 1.000000, 1.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
mul r5.xyz, r5.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
dp3 r3.w, r7.xyzx, r5.xyzx
mad r1.w, -r3.w, r1.w, l(1.000000)
mad r1.w, -r1.w, r2.w, l(1.000000)
mad r1.w, -r1.w, cb0[9].x, l(1.000000)
dp3 r5.x, v2.xyzx, r3.xyzx
dp3 r5.y, v3.xyzx, r3.xyzx
dp3 r5.z, v4.xyzx, r3.xyzx
add r3.xyzw, -r4.wxyz, l(1.000000, 1.000000, 1.000000, 1.000000)
dp3 r2.w, -r2.xyzx, r5.xyzx
add r2.w, r2.w, r2.w
mad r6.xyz, r5.xyzx, -r2.wwww, -r2.xyzx
mul r7.xyz, r1.wwww, cb0[6].xyzx
lt r1.w, l(0.000000), cb3[2].w
if_nz r1.w
  dp3 r1.w, r6.xyzx, r6.xyzx
  rsq r1.w, r1.w
  mul r8.xyz, r1.wwww, r6.xyzx
  add r9.xyz, -r0.xyzx, cb3[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r0.xyzx, cb3[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r1.w, r9.y, r9.x
  min r1.w, r9.z, r1.w
  add r9.xyz, r0.xyzx, -cb3[2].xyzx
  mad r8.xyz, r8.xyzx, r1.wwww, r9.xyzx
else 
  mov r8.xyz, r6.xyzx
endif 
mad r1.w, -r3.x, l(0.700000), l(1.700000)
mul r1.w, r1.w, r3.x
mul r1.w, r1.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t4.xyzw, s0, r1.w
log r2.w, r8.w
mul r2.w, r2.w, cb3[3].y
exp r2.w, r2.w
mul r2.w, r2.w, cb3[3].x
mul r9.xyz, r8.xyzx, r2.wwww
lt r5.w, cb3[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb3[6].w
  if_nz r5.w
    dp3 r5.w, r6.xyzx, r6.xyzx
    rsq r5.w, r5.w
    mul r10.xyz, r5.wwww, r6.xyzx
    add r11.xyz, -r0.xyzx, cb3[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r0.xyzx, cb3[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r5.w, r11.y, r11.x
    min r5.w, r11.z, r5.w
    add r0.xyz, r0.xyzx, -cb3[6].xyzx
    mad r6.xyz, r10.xyzx, r5.wwww, r0.xyzx
  endif 
  sample_l r6.xyzw, r6.xyzx, t5.xyzw, s1, r1.w
  log r0.x, r6.w
  mul r0.x, r0.x, cb3[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r6.xyzx, r0.xxxx
  mad r6.xyz, r2.wwww, r8.xyzx, -r0.xyzx
  mad r9.xyz, cb3[1].wwww, r6.xyzx, r0.xyzx
endif 
dp3 r0.x, r5.xyzx, r5.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r5.xyzx
max r1.w, r4.y, r4.x
max r1.w, r4.z, r1.w
add r1.w, -r1.w, l(1.000000)
add r2.w, -r1.w, l(1.000000)
mad o0.w, cb0[32].w, r1.w, r2.w
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r0.xyzx, r2.xyzx
lt r1.w, r0.w, l(0.000000)
add r0.w, -r0.w, l(0.000010)
mad r5.xyz, r2.xyzx, r0.wwww, r0.xyzx
movc r0.xyz, r1.wwww, r5.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, cb2[0].xyzx
dp3 r1.w, r0.xyzx, r1.xyzx
max r1.w, r1.w, l(0.000000)
dp3 r0.x, r0.xyzx, r2.xyzx
dp3 r0.y, cb2[0].xyzx, r1.xyzx
max r0.xyw, r0.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r3.x, r3.x
mad r1.x, -r3.x, r3.x, l(1.000000)
mad r1.y, r0.x, r1.x, r0.z
mad r1.x, r0.w, r1.x, r0.z
mul r1.x, r0.x, r1.x
mad r1.x, r0.w, r1.y, r1.x
add r1.x, r1.x, l(0.000010)
div r1.x, l(2.000000), r1.x
mul r1.y, r0.z, r0.z
mul r1.z, r1.w, r1.w
mad r2.xy, r0.zzzz, r0.zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
mad r1.z, r1.z, r2.x, l(1.000000)
mul r1.w, r1.z, l(3.14159274)
mad r1.z, r1.w, r1.z, l(1.000000012E-007)
div r1.y, r1.y, r1.z
mul r1.x, r1.y, r1.x
mul r1.x, r1.x, l(0.785398185)
eq r1.y, cb0[3].w, l(0.000000)
max r1.z, r1.x, l(0.000100)
sqrt r1.z, r1.z
movc r1.x, r1.y, r1.z, r1.x
mul r0.w, r0.w, r1.x
max r0.w, r0.w, l(0.000000)
mul r0.z, r0.z, r3.x
mad r0.z, -r0.z, l(0.280000), l(1.000000)
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
movc r0.z, r1.y, r0.z, r1.x
add_sat r1.x, r2.w, r4.w
mul r1.yzw, r7.xxyz, r0.wwww
add r0.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r0.w, r0.y, r0.y
mul r0.w, r0.w, r0.w
mul r0.y, r0.y, r0.w
mad r2.xyz, r3.yzwy, r0.yyyy, r4.xyzx
mul r0.yzw, r9.xxyz, r0.zzzz
mul r2.w, r0.x, r0.x
mul r2.w, r2.w, r2.w
mul r0.x, r0.x, r2.w
add r3.xyz, -r4.xyzx, r1.xxxx
mad r3.xyz, r0.xxxx, r3.xyzx, r4.xyzx
mul r0.xyz, r0.yzwy, r3.xyzx
mad r0.xyz, r1.yzwy, r2.xyzx, r0.xyzx
add o0.xyz, r0.xyzx, cb0[32].xyzx
ret 
// Approximately 0 instruction slots used