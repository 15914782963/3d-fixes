// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2eb2bee22b226ccc-ps.txt
// 3DMigoto: 2eb2bee22b226ccc |    Unity headers extracted from Normal-Glossy.shader
//    Shader "Legacy Shaders/Specular" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _SpecColor ("Specular Color", Color) = (0.5,0.5,0.5,1)
//       _Shininess ("Shininess", Range(0.01,1)) = 0.078125
//       _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" { }
//      }
//      Fallback "Legacy Shaders/VertexLit"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "RenderType"="Opaque" }
//        Pass 1/6 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
//          GpuProgramID 8614
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 42
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Normal-Glossy.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 33 3 0
//   Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
//   undeciphered2: 1 3 3 2 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 176
//   Vector 80 [unity_DynamicLightmap_HDR]
//   Vector 96 [_LightColor0]
//   Vector 112 [_SpecColor]
//   Vector 128 [_Color]
//   Float 144 [_Shininess]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [unity_DynamicLightmap] 2D 0
//   SetTexture 2 [unity_DynamicDirectionality] 2D -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity53_shaders.py

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.40 on Sun Jul 10 17:35:34 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 6   xyzw        4     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.zw
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2eb2bee22b226ccc-ps.txt
mov r5.xyzw, cb1[4].xyzw
mov r6.xyzw, l(0)
mul r6.x, -r4.x, r4.y
mul r8.xyzw, cb10[0].xyzw, r6.xxxx
mad r8.xyzw, cb10[1].xyzw, r6.yyyy, r8.xyzw
mad r8.xyzw, cb10[2].xyzw, r6.zzzz, r8.xyzw
mad r8.xyzw, cb10[3].xyzw, r6.wwww, r8.xyzw
mul r7.xyzw, cb11[12].xyzw, r8.xxxx
mad r7.xyzw, cb11[13].xyzw, r8.yyyy, r7.xyzw
mad r7.xyzw, cb11[14].xyzw, r8.zzzz, r7.xyzw
mad r7.xyzw, cb11[15].xyzw, r8.wwww, r7.xyzw
add r5.xyz, r5.xyz, -r7.xyz

sample r0.xyzw, v4.zwzz, t1.xyzw, s0
mul r0.w, r0.w, cb0[5].x
mul r0.xyz, r0.xyzx, r0.wwww
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, cb0[5].yyyy
exp r0.xyz, r0.xyzx
sample r1.xyzw, v4.zwzz, t2.xyzw, s0
add r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
max r0.w, r1.w, l(0.000100)
dp3 r1.x, v2.xyzx, r1.xyzx
add r1.x, r1.x, l(0.500000)
mul r0.xyz, r0.xyzx, r1.xxxx
div r0.xyz, r0.xyzx, r0.wwww
add r1.xyz, -v3.xyzx, r5.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, v2.xyzx, r1.xyzx
max r0.w, r0.w, l(0.000000)
log r0.w, r0.w
mul r1.x, cb0[9].x, l(128.000000)
mul r0.w, r0.w, r1.x
exp r0.w, r0.w
sample r1.xyzw, v1.xyxx, t0.xyzw, s1
mul r0.w, r0.w, r1.w
mul r1.xyz, r1.xyzx, cb0[8].xyzx
mul r2.xyz, cb0[6].xyzx, cb0[7].xyzx
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, v2.xyzx, cb2[0].xyzx
max r0.w, r0.w, l(0.000000)
mul r3.xyz, r1.xyzx, cb0[6].xyzx
mad r2.xyz, r3.xyzx, r0.wwww, r2.xyzx
mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used