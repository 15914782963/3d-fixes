// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2ad4ca651b8506d2-ps.txt
// 3DMigoto: 2ad4ca651b8506d2 |    Unity headers extracted from Other - Player Arm Effects.shader
//    Shader "Beam Team/Standard/Other - Player Arm Effects" {
//      Properties {
//       _Color ("Color", Color) = (1.000000,1.000000,1.000000,1.000000)
//       _MainTex ("Diffuse Albedo (RGB)", 2D) = "white" { }
//       _SpecTex ("Metallic (R) Gloss (A)", 2D) = "white" { }
//       _BumpTex ("Normal Map", 2D) = "bump" { }
//       _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.500000
//      }
//      Fallback Off
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 1/2 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "QUEUE"="Transparent" "SHADOWSUPPORT"="true" "RenderType"="Transparent" }
//          ZWrite Off
//          Blend SrcAlpha OneMinusSrcAlpha
//          ColorMask RGB
//          GpuProgramID 61345
//          Program "fp" {
//            SubProgram "d3d11 " {
//              GpuProgramIndex 11
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Other - Player Arm Effects.shader.decompressed:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201510240 165 7 6
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
//   undeciphered2: 1 7 5 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 176
//   Vector 32 [unity_ColorSpaceDielectricSpec]
//   Vector 48 [unity_ColorSpaceLuminance]
//   Vector 96 [_LightColor0]
//   Vector 144 [_Color]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 720
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 608 [unity_SHAr]
//   Vector 624 [unity_SHAg]
//   Vector 640 [unity_SHAb]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 3
//   SetTexture 1 [_SpecTex] 2D 4
//   SetTexture 2 [_BumpTex] 2D 5
//   SetTexture 3 [_ShadowMapTexture] 2D 2
//   SetTexture 4 [unity_SpecCube0] CUBE 0
//   SetTexture 5 [unity_SpecCube1] CUBE -1
//   SetTexture 6 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity53_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.42 on Sat Dec 10 03:48:20 2016
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[41], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyw
dcl_output o0.xyzw
dcl_temps 19
dcl_constantbuffer cb10[4], immediateIndexed
dcl_constantbuffer cb11[22], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2ad4ca651b8506d2-ps.txt
mov r15.xyzw, cb1[4].xyzw
mov r16.xyzw, l(0)
mul r16.x, -r14.x, r14.y
mul r18.xyzw, cb10[0].xyzw, r16.xxxx
mad r18.xyzw, cb10[1].xyzw, r16.yyyy, r18.xyzw
mad r18.xyzw, cb10[2].xyzw, r16.zzzz, r18.xyzw
mad r18.xyzw, cb10[3].xyzw, r16.wwww, r18.xyzw
mul r17.xyzw, cb11[12].xyzw, r18.xxxx
mad r17.xyzw, cb11[13].xyzw, r18.yyyy, r17.xyzw
mad r17.xyzw, cb11[14].xyzw, r18.zzzz, r17.xyzw
mad r17.xyzw, cb11[15].xyzw, r18.wwww, r17.xyzw
add r15.xyz, r15.xyz, -r17.xyz

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r15.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
sample r3.xyzw, v1.xyxx, t0.xyzw, s3
mul r3.xyzw, r3.xyzw, cb0[9].xyzw
sample r4.xyzw, v1.xyxx, t1.xyzw, s4
sample r5.xyzw, v1.xyxx, t2.xyzw, s5
mad r5.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
max r1.w, r4.x, l(0.020000)
min r1.w, r1.w, l(0.980000)
div r4.xy, v6.xyxx, v6.wwww
sample r4.xyzw, r4.xyxx, t3.xyzw, s2
dp3 r6.x, v2.xyzx, r5.xyzx
dp3 r6.y, v3.xyzx, r5.xyzx
dp3 r6.z, v4.xyzx, r5.xyzx
dp3 r2.w, r6.xyzx, cb2[0].xyzx
max r2.w, r2.w, l(0.000000)
add r4.y, -r1.w, l(1.000000)
dp3 r4.z, -r2.xyzx, r6.xyzx
add r4.z, r4.z, r4.z
mad r5.xyz, r6.xyzx, -r4.zzzz, -r2.xyzx
mul r4.xzw, r4.xxxx, cb0[6].xxyz
eq r5.w, cb4[0].x, l(1.000000)
if_nz r5.w
  eq r5.w, cb4[0].y, l(1.000000)
  mul r7.xyz, v3.wwww, cb4[2].xyzx
  mad r7.xyz, cb4[1].xyzx, v2.wwww, r7.xyzx
  mad r7.xyz, cb4[3].xyzx, v4.wwww, r7.xyzx
  add r7.xyz, r7.xyzx, cb4[4].xyzx
  movc r7.xyz, r5.wwww, r7.xyzx, r0.xyzx
  add r7.xyz, r7.xyzx, -cb4[6].xyzx
  mul r7.yzw, r7.xxyz, cb4[5].xxyz
  mul r5.w, r7.y, l(0.250000)
  mul r7.y, cb4[0].z, l(0.500000)
  mad r8.x, -cb4[0].z, l(0.500000), l(0.250000)
  max r5.w, r5.w, r7.y
  min r7.x, r8.x, r5.w
  sample r8.xyzw, r7.xzwx, t6.xyzw, s1
  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r9.xyzw, r9.xyzx, t6.xyzw, s1
  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r7.xyzw, r7.xyzx, t6.xyzw, s1
  mov r6.w, l(1.000000)
  dp4 r8.x, r8.xyzw, r6.xyzw
  dp4 r8.y, r9.xyzw, r6.xyzw
  dp4 r8.z, r7.xyzw, r6.xyzw
else 
  mov r6.w, l(1.000000)
  dp4 r8.x, cb2[38].xyzw, r6.xyzw
  dp4 r8.y, cb2[39].xyzw, r6.xyzw
  dp4 r8.z, cb2[40].xyzw, r6.xyzw
endif 
add r7.xyz, r8.xyzx, v5.xyzx
max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
eq r5.w, cb0[3].w, l(0.000000)
log r8.xyz, r7.xyzx
mul r8.xyz, r8.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r8.xyz, r8.xyzx
mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r7.xyz, r5.wwww, r8.xyzx, r7.xyzx
lt r6.w, l(0.000000), cb3[2].w
if_nz r6.w
  dp3 r6.w, r5.xyzx, r5.xyzx
  rsq r6.w, r6.w
  mul r8.xyz, r5.xyzx, r6.wwww
  add r9.xyz, -r0.xyzx, cb3[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r0.xyzx, cb3[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r6.w, r9.y, r9.x
  min r6.w, r9.z, r6.w
  add r9.xyz, r0.xyzx, -cb3[2].xyzx
  mad r8.xyz, r8.xyzx, r6.wwww, r9.xyzx
else 
  mov r8.xyz, r5.xyzx
endif 
mad r6.w, -r4.y, l(0.700000), l(1.700000)
mul r6.w, r4.y, r6.w
mul r6.w, r6.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t4.xyzw, s0, r6.w
log r7.w, r8.w
mul r7.w, r7.w, cb3[3].y
exp r7.w, r7.w
mul r7.w, r7.w, cb3[3].x
mul r9.xyz, r8.xyzx, r7.wwww
lt r8.w, cb3[1].w, l(0.999990)
if_nz r8.w
  lt r8.w, l(0.000000), cb3[6].w
  if_nz r8.w
    dp3 r8.w, r5.xyzx, r5.xyzx
    rsq r8.w, r8.w
    mul r10.xyz, r5.xyzx, r8.wwww
    add r11.xyz, -r0.xyzx, cb3[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r0.xyzx, cb3[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r8.w, r11.y, r11.x
    min r8.w, r11.z, r8.w
    add r0.xyz, r0.xyzx, -cb3[6].xyzx
    mad r5.xyz, r10.xyzx, r8.wwww, r0.xyzx
  endif 
  sample_l r10.xyzw, r5.xyzx, t5.xyzw, s0, r6.w
  log r0.x, r10.w
  mul r0.x, r0.x, cb3[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r10.xyzx, r0.xxxx
  mad r5.xyz, r7.wwww, r8.xyzx, -r0.xyzx
  mad r9.xyz, cb3[1].wwww, r5.xyzx, r0.xyzx
endif 
dp3 r0.x, r6.xyzx, r6.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r6.xyzx
mul r3.xyz, r3.xyzx, cb0[2].wwww
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r0.xyzx, r1.xyzx
dp3 r0.x, r0.xyzx, r2.xyzx
dp3 r0.y, cb2[0].xyzx, r1.xyzx
max r0.xyw, r0.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r4.y, r4.y
mad r1.x, -r4.y, r4.y, l(1.000000)
mad r1.y, r0.x, r1.x, r0.z
mad r1.x, r2.w, r1.x, r0.z
mul r1.x, r0.x, r1.x
mad r1.x, r2.w, r1.y, r1.x
add r1.x, r1.x, l(0.000010)
div r1.x, l(2.000000), r1.x
mul r1.y, r0.z, r0.z
mul r0.w, r0.w, r0.w
mad r2.xy, r0.zzzz, r0.zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
mad r0.w, r0.w, r2.x, l(1.000000)
mul r1.z, r0.w, l(3.14159274)
mad r0.w, r1.z, r0.w, l(1.000000012E-007)
div r0.w, r1.y, r0.w
add r1.y, -r2.w, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
add r0.x, -r0.x, l(1.000000)
mul r1.z, r0.x, r0.x
mul r1.z, r1.z, r1.z
mul r0.xw, r0.xxxw, r1.zzzx
mul r1.z, r0.y, r0.y
dp2 r1.z, r1.zzzz, r4.yyyy
add r1.z, r1.z, l(-0.500000)
mad r1.y, r1.z, r1.y, l(1.000000)
mad r1.z, r1.z, r0.x, l(1.000000)
mul r1.y, r1.z, r1.y
mul r0.w, r0.w, l(0.785398185)
max r1.x, r0.w, l(0.000100)
sqrt r1.x, r1.x
movc r0.w, r5.w, r1.x, r0.w
mul r0.w, r2.w, r0.w
max r0.w, r0.w, l(0.000000)
mul r1.x, r2.w, r1.y
mul r0.z, r0.z, r4.y
mad r0.z, -r0.z, l(0.280000), l(1.000000)
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
movc r0.z, r5.w, r0.z, r1.y
dp3 r1.y, cb0[2].xyzx, cb0[2].xyzx
ne r1.y, r1.y, l(0.000000)
and r1.y, r1.y, l(0x3f800000)
mul r0.w, r0.w, r1.y
add r1.y, r1.w, -cb0[2].w
add_sat r1.y, r1.y, l(1.000000)
mad r1.xzw, r4.xxzw, r1.xxxx, r7.xxyz
mul r2.xyz, r4.xzwx, r0.wwww
add r0.y, -r0.y, l(1.000000)
mul r0.w, r0.y, r0.y
mul r0.w, r0.w, r0.w
mul r0.y, r0.y, r0.w
add r4.xyz, -cb0[2].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r4.xyz, r4.xyzx, r0.yyyy, cb0[2].xyzx
mul r2.xyz, r2.xyzx, r4.xyzx
mad r1.xzw, r3.xxyz, r1.xxzw, r2.xxyz
mul r0.yzw, r9.xxyz, r0.zzzz
add r2.xyz, r1.yyyy, -cb0[2].xyzx
mad r2.xyz, r0.xxxx, r2.xyzx, cb0[2].xyzx
mad o0.xyz, r0.yzwy, r2.xyzx, r1.xzwx
mov o0.w, r3.w
ret 
// Approximately 0 instruction slots used