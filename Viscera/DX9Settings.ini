[General]

; Required for Viscera. Additionally, the dumps directory & subdirectories must
; be manually created under the Win32 directory for dumping to work. LOG.txt
; still ends up under base Eleusis directory.
GetCurDirAtLoad = true

; Game crashes on reload with normal OverrideMethod, try 2 instead:
OverrideMethod = 2

; This game uses s0 in vertex shaders, use s3 instead:
DefVSSampler = 260

; UseRenderedShaders=true is nearly always useful, because it trims the
; list of shaders seen while hunting down to just those active in the
; current scene.  Disable this only if you get crashes during hunting.
UseRenderedShaders=true

; DumpAll will generate ASM text files for every shader seen by the game.
; This is usually worth doing once, but not useful for every run.
DumpAll=true

; Allows textures to be cycled with Up/Down - use to hunt menu text CRC32
bCalcTexCRCatStart = true

; Constant registers that will arrive in Vertex and Pixel Shaders, as
; c200.  The constants below will be assigned, based on the key preset.
DefVSConst1 = 200
DefPSConst1 = 200

; Fix clipping on decals
SkipSetScissorRect = true

; The PresetKeysList specifies which KEYs will be used.
; Multiple keys lists are supported.
; Note that the KEY sections are in hexadecimal
PresetsKeysList = 0;1;2;3;4;5;6;7;8;9;A;B;C;D;E;


; Force in-game monitors to mono to prevent UI depth adjustment from messing
; them up (but only if we multiply all four xyzw components to adjust depth):
SurfaceCreationModeList=0;
[SF0]
; BitterMan 500 in office, and some other displays
;D3DUSAGE_RENDERTARGET/D3DUSAGE_DEPTHSTENCIL Height 280 Width 384 Usage 1 Format 21 Pool 0 Levels 1 texptr 0 nIndex 0, Mode 0
Height=280
Width=384
Usage=1
Format=21
Pool=0
Levels=1
DefMode=2


[KEY0]
; Backslash key cycles several separation presets. Some shaders (body object
; highlights, molotov cocktails) need the raw separation percentage to fix an
; offset (well, really they need the eye separation, but Helix Mod doesn't
; expose that), so this must be used instead of Ctrl+F3/F4!
; Note that these effects will be broken in 2D. Nothing I can do about that -
; if you want to play in 2D you need to turn stereo off in the control panel.
Key = 220
Presets = 0;1;2;3;
Type = 1
[PRES0]
; 25% separation
UseSepSettings = true
; SaveSepSettings = true
Convergence = 0x415a7809
Separation = 0x41c80000
Const1 = 0x41c80000
[PRES1]
; 50% separation
UseSepSettings = true
; SaveSepSettings = true
Convergence = 0x415a7809
Separation = 0x42480000
Const1 = 0x42480000
[PRES2]
; 75% separation
UseSepSettings = true
; SaveSepSettings = true
Convergence = 0x415a7809
Separation = 0x42960000
Const1 = 0x42960000
[PRES3]
; Set convergence = 50, separation = 100 by default
UseSepSettings = true
; SaveSepSettings = true
Convergence = 0x415a7809
Separation = 0x42c80000
Const1 = 0x42c80000
UseByDef = true

; ] will disable the object highlight adjustment - in case it ends up breaking
; the effect instead of fixing it for some people.
[KEY1]
Key = 221
Presets = 4;
Type = 1
[PRES4]
Const1 = 0x00000000


; Const3 controls UI depth, however adjusting it will also adjust the various
; monitors in the game, so I've removed the key bindings I usually add for it.


; H toggles bloom correction between depth buffer and infinity:
[KEYD]
Key = 72
Presets = E;F;
Type = 1
[PRESE]
Const2 = 0x3f800000
[PRESF]
Const2 = 0x00000000

; X toggles text depth on Personal Identification Devices (in case it breaks
; other monitors / UI):
[KEYE]
Key = 88
Presets = 11;12;
Type = 1
[PRES11]
Const4 = 0x00000000
[PRES12]
Const4 = 0x3f800000
UseByDef = true


; Bloom shader - does not always have depth information (not when depth is already correct):
;[PS2CC8C700]
;GetSampler1FromReg = 0

; Get depth buffer from SceneColorTexture.w in shadow shaders, and MinZ_MaxZRatio in c2:
[PS002C1E4A]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS024A1A9E]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS0257A724]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS02F8B6B6]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS03DC471D]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS0A1B2267]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS0ACC95E8]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS0D7CA814]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS103EB152]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS18EE21CE]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS1951D1A2]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS1AF851FE]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS1CD2841B]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS207DC914]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS242C4C02]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS253E2D7F]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS2B55E9A9]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS2E276EAE]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS2E5DB996]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS315C3B54]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS3932523F]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS452DE03D]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS5220AAF9]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS627CADF0]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS7411C1C3]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS777E0443]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS79944929]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS7DCDC8E7]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS806C7485]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS82A3EE9C]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS9CE4BFC5]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS9DAD4FB5]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS9F2777BF]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PS9FA6DD5B]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSA25A5E86]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSA6109A57]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSACE0A5E6]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSAE4D1B25]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSBB4E99B3]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSBD5B63F6]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSBE0A8FE0]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSC1428776]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSC26295E0]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSC7B05730]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSD07C1146]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSD0F81807]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSD46CBDAD]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSDC4E48CB]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSE28D91FC]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSE3BA3C05]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSE7B3C358]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSE8279DD3]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSEDEC7511]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSF0E18B99]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSF1BE636E]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSF28FB41C]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSF5A12B11]
GetSampler1FromReg = 0
GetConst1FromReg = 2
[PSF867CF98]
GetSampler1FromReg = 0
GetConst1FromReg = 2

; Inject depth buffer to bloom shaders:
[VS7937ACC5]
SetSampler1ToReg = 259
SetConst1ToReg = 150
[VS8ABD95DF]
SetSampler1ToReg = 259
SetConst1ToReg = 150

; UI shaders
[VS328993F7]
;73B13126: Font used for personal identification tags in game
CheckTexCRC = true
UseDefinedOnly = false
TexCounterReg = 251
ValNotDefined = 0
ValForDefined = 1
DefinedTexturesVS = 73B13126;
VBOffsetList = 0;
[VB328993F7.0]
