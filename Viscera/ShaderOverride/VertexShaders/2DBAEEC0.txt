// UE3 multipass fog - note several shaders interact with each other!

// VS 2DBAEEC0 - positions fog, needs texcoord5 adjustment
// PS 9530AC2B - alternate place for texcoord5 adjustment (note - would need to find corresponding PS for zero G level)

// VS 0432F8F1 - positions transparency, needs stereo correction on output position
// PS 0DAF3BEA - needs texcoord5 adjustment (here or VS, but note other PS)
// PS 4396FA44 - needs both texcoord5 adjustment, and unadjustment before ScreenToWorld matrix

//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 CameraPositionVS;
//   float4x4 LocalToWorld;
//   float4 VSRRealDCoefficients1;
//   float4x4 ViewProjectionMatrix;
//   float3x3 WorldToLocal;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   ViewProjectionMatrix  c0       4
//   CameraPositionVS      c4       1
//   VSRRealDCoefficients1 c6       1
//   LocalToWorld          c7       4
//   WorldToLocal          c11      3
//

    vs_3_0
    def c5, 0.00784313772, -1, 9.98999977, 0.693147182
    def c14, 2, 0, 0, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_color1 v3
    dcl_color o0
    dcl_texcoord o1
    dcl_texcoord5 o2
    dcl_texcoord6 o3
    dcl_position o4

def c220, 0, 1, 0.0625, 0.5
dcl_2d s3

    mad r0.xyz, v1.yzxw, c5.x, c5.y
    mad r1, v2, c5.x, c5.y
    mul r2.xyz, r0, r1.zxyw
    mad r0.xyz, r1.yzxw, r0.yzxw, -r2
    mul r0.xyz, r1.w, r0
    mul r2.xyz, r1.yzxw, r0.zxyw
    mad r2.xyz, r0.yzxw, r1.zxyw, -r2
    mul r2.xyz, r1.w, r2
    mul r3, c8, v0.y
    mad r3, c7, v0.x, r3
    mad r3, c9, v0.z, r3
    mad r3, c10, v0.w, r3
    mad r4.xyz, r3, -c4.w, c4
    mul r5.xyz, r4.y, c12
    mad r4.xyw, c11.xyzz, r4.x, r5.xyzz
    mad r4.xyz, c13, r4.z, r4.xyww
    dp3 o3.x, r2, r4
    dp3 o3.y, r0, r4
    dp3 o3.z, r1, r4
    mov o0, v3
    mov o1, c14.y
    mul r0, r3.y, c1
    mad r0, c0, r3.x, r0
    mad r0, c2, r3.z, r0
    mad r0, c3, r3.w, r0
    add r1.x, r0.z, c5.z
    add r1.y, r1.x, c6.x
    rcp r1.x, r1.x
    log r1.y, r1.y
    mul r1.y, r1.y, c6.y
    mad r1.z, r1.y, -c5_abs.w, c5_abs.y
    mov r1.w, c5.w
    mad r1.y, r1.y, r1.w, c6.z
    mul r1.y, r1.y, c6.x
    add r1.z, r1.z, -c6.z
    rcp r1.z, r1.z
    mul r1.y, r1.z, r1.y
    mul r1.x, r1.x, r1.y
    rcp r1.x, r1.x
    add r1.x, r1.x, c5.y
    mul r1.x, r1.x, c6.w
    mad r0.x, r1.x, c14.x, r0.x
    mov r6, r0
    mov o4, r0
    mov o3.w, -c5.y

// approximately 45 instruction slots used

// Output adjustment inserted with DarkStarSword's shadertool.py:
// shadertool.py -i -f --stereo-sampler-vs=s3 --adjust=texcoord5 VertexShader/VertexShader_22_CRC32_2DBAEEC0.txt
texldl r31, c220.z, s3
add r31.w, r6.w, -r31.y
mad r6.x, r31.w, r31.x, r6.x
mov o2, r6
