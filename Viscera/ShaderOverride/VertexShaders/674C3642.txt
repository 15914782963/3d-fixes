// Gravity Drive door with environmental reflections - glass

//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 CameraPositionVS;
//   float4 FogInScattering[4];
//   float4 FogMaxHeight;
//   float4 LightPositionAndInvRadius;
//   float4x4 LocalToWorld;
//   float LocalToWorldRotDeterminantFlip;
//   float4 SharedFogParameter0;
//   float4 SharedFogParameter1;
//   float4 SharedFogParameter2;
//   float4 SharedFogParameter3;
//   float3 TemporalAAParameters;
//   float4 VSRRealDCoefficients1;
//   float4x4 ViewProjectionMatrix;
//   float3x3 WorldToLocal;
//   float bUseExponentialHeightFog;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   ViewProjectionMatrix           c0       4
//   CameraPositionVS               c4       1
//   VSRRealDCoefficients1          c6       1
//   LocalToWorld                   c7       4
//   FogInScattering                c11      4
//   WorldToLocal                   c15      3
//   TemporalAAParameters           c18      1
//   LocalToWorldRotDeterminantFlip c19      1
//   SharedFogParameter0            c20      1
//   SharedFogParameter1            c21      1
//   SharedFogParameter2            c22      1
//   SharedFogParameter3            c23      1
//   bUseExponentialHeightFog       c24      1
//   FogMaxHeight                   c25      1
//   LightPositionAndInvRadius      c26      1
//

    vs_3_0
    def c5, 2, 0, 0.00999999978, -0.00999999978
    def c27, 0.00784313772, -1, 9.98999977, 0.693147182
    def c28, 0.499000013, 0.5, 0.00100000005, 0
    def c29, 1, 0, 0, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord v3
    dcl_color o0.xyz
    dcl_color1 o1
    dcl_texcoord o2
    dcl_texcoord3 o3
    dcl_texcoord4 o4
    dcl_texcoord6 o5
    dcl_texcoord7 o6.xyz
    dcl_texcoord5 o7
    dcl_position o8

def c220, 0, 1, 0.0625, 0.5
dcl_2d s3

// LocalToWorld
    mul r0, c8, v0.y
    mad r0, c7, v0.x, r0
    mad r0, c9, v0.z, r0
    mad r0, c10, v0.w, r0
    mad r1, v2, c27.x, c27.y
    mad r2.xyz, v1.yzxw, c27.x, c27.y
    mul r3.xyz, r1.zxyw, r2
    mad r2.xyz, r1.yzxw, r2.yzxw, -r3
    mul r2.xyz, r1.w, r2
    mul r3.xyz, r1.yzxw, r2.zxyw
    mad r3.xyz, r2.yzxw, r1.zxyw, -r3
    mul r3.xyz, r1.w, r3
    mul r4, r0.y, c1

// ViewProjectionMatrix
    mad r4, c0, r0.x, r4
    mad r4, c2, r0.z, r4
    mad r4, c3, r0.w, r4

// Move reflection to infinity:
texldl r31, c220.z, s3
mov r11, r4
mad r11.x, -r31.x, r31.y, r11.x

// Convert back to world coords for r0:
mul r0, r11.x, c180
mad r0, r11.y, c181, r0
mad r0, r11.z, c182, r0
mad r0, r11.w, c183, r0

    add r0.w, r4.z, c27.z
    add r2.w, r0.w, c6.x
    log r2.w, r2.w
    mul r2.w, r2.w, c6.y
    mov r3.w, c27.w
    mad r3.w, r2.w, r3.w, c6.z
    mul r3.w, r3.w, c6.x
    mad r2.w, r2.w, -c27_abs.w, c27_abs.y
    add r2.w, r2.w, -c6.z
    rcp r2.w, r2.w
    mul r2.w, r2.w, r3.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, r2.w
    rcp r0.w, r0.w
    add r0.w, r0.w, c27.y
    mul r0.w, r0.w, c6.w
    mad r4.x, r0.w, c5.x, r4.x
    mul r0.w, r4.w, c18.z
    mad o8.xy, r0.w, c18, r4
    mul r5.xy, r3.y, c8.xzzw
    mad r5.xy, c7.xzzw, r3.x, r5
    mad r5.xy, c9.xzzw, r3.z, r5
    mul r6.xy, r2.y, c8.xzzw
    mad r6.xy, c7.xzzw, r2.x, r6
    mad r6.xy, c9.xzzw, r2.z, r6
    mul r6.zw, r1.y, c8.xyxz
    mad r6.zw, c7.xyxz, r1.x, r6
    mad r6.zw, c9.xyxz, r1.z, r6
    mul o1.w, r1.w, c19.x
    mad r7.xyz, r0, -c4.w, c4
    mul r8.xyz, r7.y, c16
    mad r7.xyw, c15.xyzz, r7.x, r8.xyzz
    mad r7.xyz, c17, r7.z, r7.xyww
    dp3 o5.x, r3, r7
    dp3 o5.y, r2, r7
    dp3 o5.z, r1, r7
    mov r7.xyz, c26
    mul r8.xyz, r7.y, c16
    mad r7.xyw, c15.xyzz, r7.x, r8.xyzz
    mad r7.xyz, c17, r7.z, r7.xyww
    dp3 o3.x, r3, r7
    dp3 o3.y, r2, r7
    dp3 o3.z, r1, r7
    dp3 o6.x, r3, c17
    dp3 o6.y, r2, c17
    dp3 o6.z, r1, c17
    abs r0.w, c24.x
    if_lt -r0.w, r0.w
      add r1.xyz, r0, -c4
      dp3 r0.w, r1, r1
      rsq r0.w, r0.w
      rcp r1.w, r0.w
      add r1.w, r1.w, -c20.w
      max r1.w, r1.w, c5.y
      mul r1.w, r1.w, c20.x
      slt r2.x, c5.z, r1_abs.z
      add r2.y, r1.z, c5.w
      mad r2.x, r2.x, r2.y, c5.z
      mul r2.y, r2.x, -c20.y
      exp r2.y, r2.y
      add r2.y, -r2.y, -c27.y
      mul r2.x, r2.x, c20.y
      rcp r2.x, r2.x
      mul r2.x, r2.x, r2.y
      mul r1.w, r1.w, r2.x
      mul r1.xyz, r0.w, r1
      dp3 r0.w, c23, r1
      mad r0.w, r0.w, -c28.x, c28.y
      pow r1.x, r0.w, c20.z
      mov r2.xyz, c22
      add r2.xyz, -r2, c21
      mad r1.xyz, r1.x, r2, c22
      exp r0.w, -r1.w
      min r0.w, r0.w, -c27.y
      max r0.w, r0.w, c21.w
      add r1.w, -r0.w, -c27.y
      mul o4.xyz, r1.w, r1
      mov o4.w, r0.w
    else
      add r0.xyz, r0, -c4
      dp3 r0.x, r0, r0
      rsq r0.x, r0.x
      rcp r0.x, r0.x
      mov r1.z, c4.z
      add r2, -r1.z, c23
      sge r0.y, c28.z, r0_abs.z
      lrp r1.x, r0.y, c28.z, r0.z
      rcp r0.y, r1.x
      mul_sat r2, r0.y, r2
      add r1, -r1.z, c25
      mul_sat r1, r0.y, r1
      add r0, r0.x, -c22
      max r0, r0, c5.y
      add r1, -r2, r1
      mul r0, r0, r1_abs
      slt r1, r0, c21
      mul r0, r0, c20
      exp r2.x, r0.x
      exp r2.y, r0.y
      exp r2.z, r0.z
      exp r2.w, r0.w
      mul r0, r1, r2
      mad r1, r1, r2, c27.y
      mul r2.xyz, r1.x, c11
      mov r2.w, r0.x
      mul r2, r0.y, r2
      mad r2.xyz, r1.y, c12, r2
      mul r2, r0.z, r2
      mad r2.xyz, r1.z, c13, r2
      mul r0, r0.w, r2
      mad o4.xyz, r1.w, c14, r0
      mov o4.w, r0.w
    endif
    mov r5.zw, r6.xyxz
    mov o0.xyz, r5.xzww
    mov o1.x, r5.y
    mov o1.yz, r6.xyww
    mul o2, c29.xxyy, v3.xyxx
    mov o3.w, c5.y
    mov o5.w, -c27.y
    mov o7, r4
    mov o8.zw, r4

// approximately 142 instruction slots used
