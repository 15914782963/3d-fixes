//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 EdgeSampleOffsets[2];
//   float2 InvRandomAngleTextureSize;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 PSRRealDCoefficients1;
//   sampler2D RandomAngleTexture;
//   float4 RefiningSampleOffsets[6];
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4x4 ScreenToShadowMatrix;
//   sampler2D ShadowDepthTexture;
//   float4 ShadowModulateColor;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   InvRandomAngleTextureSize c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   PSRRealDCoefficients1     c8       1
//   RefiningSampleOffsets     c9       6
//   ScreenToShadowMatrix      c15      4
//   EdgeSampleOffsets         c19      2
//   ShadowModulateColor       c21      1
//   SceneColorTexture         s0       1
//   NvStereoFixTexture        s1       1
//   ShadowDepthTexture        s2       1
//   RandomAngleTexture        s3       1
//

    ps_3_0
    def c4, 0.0625, 0, 9.98999977, 0.693147182
    def c5, 0.693147182, 1, -1, 0.999000013
    def c6, 0.5, 2, -1, -0
    def c7, 0.25, 0, 9.99999975e-005, -0.999899983
    def c22, 0.0833333358, 0.699999988, 0, 0
    dcl_texcoord v0
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13


// Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i -f --auto-fix-unreal-shadows --only-autofixed --git CRC32_C1428776_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine


// Unreal Engine shadow fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i -f --auto-fix-unreal-shadows --only-autofixed --git CRC32_C1428776_0.txt
texldl r8, c220.z, s13
mov r7, v0
add r8.w, r7.w, -r8.y
mad r7.x, r8.w, r8.x, r7.x

    if_ne c3.x, -c3.x
      texld r0, c4, s1
      add r0.y, -r0.y, r7.w
      mad r0.x, r0.x, r0.y, r7.x
      mov r0.yz, r7.xyww
    else
      add r0.w, c4.z, r7.z
      add r1.x, r0.w, c8.x
      log r1.x, r1.x
      mul r1.x, r1.x, c8.y
      mov r1.w, c4.w
      mad r1.y, r1.x, r1.w, c8.z
      mul r1.y, r1.y, c8.x
      mad r1.x, r1.x, -c5.x, c5.y
      add r1.x, r1.x, -c8.z
      rcp r1.x, r1.x
      mul r1.x, r1.x, r1.y
      rcp r0.w, r0.w
      mul r0.w, r0.w, r1.x
      rcp r0.w, r0.w
      add r0.w, r0.w, c5.z
      dp2add r0.x, c8.w, r0.w, r7.x
      mov r0.yz, r7.xyww
    endif
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.y
    texldl r0, r0, s0
    mov r0.y, c5.y
    add r0.x, r0.y, -c2.y
    add r0.x, -r0.x, r0.w
    rcp r0.x, r0.x
    mul r0.x, r0.x, -c2.x
    rcp r0.z, r7.w
    mul r1.xy, r0.z, r7
    mul r1.xy, r0.x, r1
    mul r2, r1.y, c16

// Unreal Engine shadow fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i -f --auto-fix-unreal-shadows --only-autofixed --git CRC32_C1428776_0.txt
add r8.w, r0.x, -r8.y
mad r1.x, -r8.w, r8.x, r1.x

    mad r1, c15, r1.x, r2
    mad r1, c17, r0.x, r1
    add r1, r1, c18
    rcp r0.x, r1.w
    mul r2.xy, r0.x, r1
    min r0.w, r1.z, c5.w
    mad r1.zw, r7.xyxy, r0.z, c5.y
    mul r1.zw, r1, c0.xyxy
    mul r1.zw, r1, c6.x
    texld r3, r1.zwzw, s3
    mad_pp r3, r3.yxyx, c6.y, c6.z
    mul_pp r4, r3.wzwz, c5.yzyz
    mad r5, r4.zwzw, c19.xxzz, r2.xyxy
    mad_pp r5, r3.zwzw, c19.yyww, r5
    texld_pp r6, r5, s2
    texld_pp r5, r5.zwzw, s2
    mov_pp r6.y, r5.x
    add r1.zw, r0.w, -r6.xyxy
    cmp r1.zw, r1, -c6.w, -c6.z
    mad r2, r4, c20.xxzz, r2.xyxy
    mad_pp r2, r3, c20.yyww, r2
    texld_pp r3, r2, s2
    texld_pp r2, r2.zwzw, s2
    mov_pp r3.y, r2.x
    add r2.xy, r0.w, -r3
    cmp r2.xy, r2, -c6.w, -c6.z
    dp2add_pp r0.z, r2, c7.x, c7.y
    dp2add_pp r0.z, r1.zwzw, c7.x, r0.z
    add r1.z, -r0.z, c7.z
    add r1.w, r0.z, c7.w
    cmp r1.w, r1.w, -c6.w, -c6.z
    cmp r1.z, r1.z, c4.y, r1.w
    if_ne r1.z, -r1.z
      mad_pp r2, r1.xyxy, r0.x, c9
      mul r3, r2.xyxx, -c6.zzww
      texldl_pp r3, r3, s2
      mul r2, r2.zwxx, -c6.zzww
      texldl_pp r2, r2, s2
      mad_pp r4, r1.xyxy, r0.x, c10
      mul r5, r4.xyxx, -c6.zzww
      texldl_pp r5, r5, s2
      mul r4, r4.zwxx, -c6.zzww
      texldl_pp r4, r4, s2
      mov_pp r3.y, r2.x
      mov_pp r3.z, r5.x
      mov_pp r3.w, r4.x
      add r2, r0.w, -r3
      cmp r2, r2, -c6.w, -c6.z
      dp4_pp r1.z, r2, c22.x
      mad_pp r2, r1.xyxy, r0.x, c11
      mul r3, r2.xyxx, -c6.zzww
      texldl r3, r3, s2
      mul r2, r2.zwxx, -c6.zzww
      texldl r2, r2, s2
      mad_pp r4, r1.xyxy, r0.x, c12
      mul r5, r4.xyxx, -c6.zzww
      texldl r5, r5, s2
      mul r4, r4.zwxx, -c6.zzww
      texldl r4, r4, s2
      mov r3.y, r2.x
      mov r3.z, r5.x
      mov r3.w, r4.x
      add r2, r0.w, -r3
      cmp r2, r2, -c6.w, -c6.z
      dp4_pp r1.w, r2, c22.x
      add_pp r1.z, r1.w, r1.z
      mad_pp r2, r1.xyxy, r0.x, c13
      mul r3, r2.xyxx, -c6.zzww
      texldl r3, r3, s2
      mul r2, r2.zwxx, -c6.zzww
      texldl r2, r2, s2
      mad_pp r4, r1.xyxy, r0.x, c14
      mul r5, r4.xyxx, -c6.zzww
      texldl r5, r5, s2
      mul r4, r4.zwxx, -c6.zzww
      texldl r4, r4, s2
      mov r3.y, r2.x
      mov r3.z, r5.x
      mov r3.w, r4.x
      add r2, r0.w, -r3
      cmp r2, r2, -c6.w, -c6.z
      dp4_pp r0.x, r2, c22.x
      add_pp r0.x, r0.x, r1.z
      lrp_pp r1.x, c22.y, r0.x, r0.z
      mov_pp r0.z, r1.x
    endif
    mul_pp r0.x, r0.z, r0.z
    mul_pp r0.x, r0.z, r0.x
    add_pp r1, r0.y, -c21
    mad_pp oC0, r0.x, r1, c21

// approximately 148 instruction slots used (32 texture, 116 arithmetic)
