//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 EdgeSampleOffsets[2];
//   float3 FalloffParameters;
//   float2 InvRandomAngleTextureSize;
//   float4 LightPosition;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 PSRRealDCoefficients1;
//   sampler2D RandomAngleTexture;
//   float4 RefiningSampleOffsets[2];
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4x4 ScreenToShadowMatrix;
//   float4x4 ScreenToWorld;
//   float2 ShadowBufferSize;
//   sampler2D ShadowDepthTexture;
//   float4 ShadowModulateColor;
//   float2 SpotAngles;
//   float3 SpotDirection;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   InvRandomAngleTextureSize c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   PSRRealDCoefficients1     c8       1
//   ScreenToShadowMatrix      c9       4
//   ScreenToWorld             c13      4
//   RefiningSampleOffsets     c17      2
//   EdgeSampleOffsets         c19      2
//   ShadowBufferSize          c21      1
//   ShadowModulateColor       c22      1
//   LightPosition             c23      1
//   FalloffParameters         c24      1
//   SpotDirection             c25      1
//   SpotAngles                c26      1
//   SceneColorTexture         s0       1
//   NvStereoFixTexture        s1       1
//   ShadowDepthTexture        s2       1
//   RandomAngleTexture        s3       1
//

    ps_3_0
    def c4, 0.0625, 0, 9.98999977, 0.693147182
    def c5, 0.693147182, 1, -1, 0.999000013
    def c6, 0.5, 2, -1, -0
    def c7, 9.99999975e-005, -0.999899983, 0.25, 0.699999988
    dcl_texcoord v0
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13


// Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i -f --auto-fix-unreal-shadows --only-autofixed --git CRC32_D07C1146_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine


// Unreal Engine shadow fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i -f --auto-fix-unreal-shadows --only-autofixed --git CRC32_D07C1146_0.txt
texldl r10, c220.z, s13
mov r9, v0
add r10.w, r9.w, -r10.y
mad r9.x, r10.w, r10.x, r9.x

    if_ne c3.x, -c3.x
      texld r0, c4, s1
      add r0.y, -r0.y, r9.w
      mad r0.x, r0.x, r0.y, r9.x
      mov r0.yz, r9.xyww
    else
      add r0.w, c4.z, r9.z
      add r1.x, r0.w, c8.x
      log r1.x, r1.x
      mul r1.x, r1.x, c8.y
      mov r1.w, c4.w
      mad r1.y, r1.x, r1.w, c8.z
      mul r1.y, r1.y, c8.x
      mad r1.x, r1.x, -c5.x, c5.y
      add r1.x, r1.x, -c8.z
      rcp r1.x, r1.x
      mul r1.x, r1.x, r1.y
      rcp r0.w, r0.w
      mul r0.w, r0.w, r1.x
      rcp r0.w, r0.w
      add r0.w, r0.w, c5.z
      dp2add r0.x, c8.w, r0.w, r9.x
      mov r0.yz, r9.xyww
    endif
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.y
    texldl r0, r0, s0
    mov r0.yz, c5
    add r0.x, r0.y, -c2.y
    add r0.x, -r0.x, r0.w
    rcp r0.x, r0.x
    mul r0.x, r0.x, -c2.x
    rcp r0.y, r9.w
    mul r1.xy, r0.y, r9
    mul r1.xy, r0.x, r1
    mul r2, r1.y, c10

// Unreal Engine shadow fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i -f --auto-fix-unreal-shadows --only-autofixed --git CRC32_D07C1146_0.txt
add r10.w, r0.x, -r10.y
mad r1.x, -r10.w, r10.x, r1.x

    mad r2, c9, r1.x, r2
    mad r2, c11, r0.x, r2
    add r2, r2, c12
    rcp r0.w, r2.w
    mul r1.zw, r0.w, r2.xyxy
    min r3.z, r2.z, c5.w
    mad r2.zw, r9.xyxy, r0.y, c5.y
    mul r2.zw, r2, c0.xyxy
    mul r2.zw, r2, c6.x
    texld r4, r2.zwzw, s3
    mad_pp r4, r4.yxyx, c6.y, c6.z
    mul_pp r5, r4.wzwz, c5.yzyz
    mad r6, r5.zwzw, c19.xxzz, r1.zwzw
    mad_pp r6, r4.zwzw, c19.yyww, r6
    mul r3.xyw, r6.xyzx, -c6.zzzw
    texldl r7, r3, s2
    mul r3.xyw, r6.zwzx, -c6.zzzw
    texldl r6, r3, s2
    add r7, -r7, r3.z
    cmp_pp r7, r7, -c6.w, -c6.z
    dp4_pp r0.y, r7, c4.x
    add r6, r3.z, -r6
    cmp_pp r6, r6, -c6.w, -c6.z
    dp4_pp r2.z, r6, c4.x
    add_pp r0.y, r0.y, r2.z
    mad r5, r5, c20.xxzz, r1.zwzw
    mad_pp r4, r4, c20.yyww, r5
    mov_pp r5.xy, r4
    mov r5.zw, r3
    texldl r6, r5, s2
    mov_pp r5.xy, r4.zwzw
    texldl r4, r5, s2
    add r6, r3.z, -r6
    cmp_pp r6, r6, -c6.w, -c6.z
    dp4_pp r1.z, r6, c4.x
    add_pp r0.y, r0.y, r1.z
    add r4, r3.z, -r4
    cmp_pp r4, r4, -c6.w, -c6.z
    dp4_pp r1.z, r4, c4.x
    add_pp r0.y, r0.y, r1.z
    add r1.z, -r0.y, c7.x
    add r1.w, r0.y, c7.y
    cmp r1.w, r1.w, -c6.w, -c6.z
    cmp r1.z, r1.z, c4.y, r1.w
    if_ne r1.z, -r1.z
      mad_pp r4, r2.xyxy, r0.w, c17
      mov_pp r5.xy, r4
      texldl r6, r5, s2
      mov_pp r5.xy, r4.zwzw
      texldl r7, r5, s2
      add r6, r3.z, -r6.wxyz
      add r7, r3.z, -r7.wxyz
      cmp_pp r6, r6, -c6.w, -c6.z
      cmp_pp r7, r7, -c6.w, -c6.z
      mul r4, r4, c21.xyxy
      frc_pp r4, r4
      mov_pp r8.xy, r6
      mov_pp r8.zw, r7.xyxy
      mov_pp r7.xy, r6.zwzw
      lrp_pp r6, r4.yyww, r7, r8
      mad_pp r2, r2.xyxy, r0.w, c18
      mov_pp r5.xy, r2
      texldl r7, r5, s2
      mov_pp r5.xy, r2.zwzw
      texldl r5, r5, s2
      add r7, r3.z, -r7.wxyz
      add r3, r3.z, -r5.wxyz
      cmp_pp r5, r7, -c6.w, -c6.z
      cmp_pp r3, r3, -c6.w, -c6.z
      mul r2, r2, c21.xyxy
      frc_pp r2, r2
      mov_pp r7.xy, r5
      mov_pp r7.zw, r3.xyxy
      mov_pp r3.xy, r5.zwzw
      lrp_pp r5, r2.yyww, r3, r7
      lrp_pp r3.xy, r4.xzzw, r6.ywzw, r6.xzzw
      lrp_pp r3.zw, r2.xyxz, r5.xyyw, r5.xyxz
      dp4_pp r0.w, r3, c7.z
      lrp_pp r1.z, c7.w, r0.w, r0.y
      mov_pp r0.y, r1.z
    endif
    mul r1.yzw, r1.y, c14.xxyz
    mad r1.xyz, c13, r1.x, r1.yzww
    mad r1.xyz, c15, r0.x, r1
    add r1.xyz, r1, c16
    add r1.xyz, -r1, c23
    mul r1.xyz, r1, c23.w
    dp3 r0.x, r1, r1
    rsq r0.x, r0.x
    rcp r0.w, r0.x
    mad r0.w, r0.w, c24.y, c24.z
    max r1.w, r0.w, c4.y
    mad r0.w, r1.w, -r1.w, c5.y
    max r1.w, r0.w, c4.y
    pow_pp r0.w, r1.w, c24.x
    mul r1.xyz, r0.x, r1
    dp3 r0.x, r1, -c25
    add r0.x, r0.x, -c26.x
    mul_sat r0.x, r0.x, c26.y
    mul r0.x, r0.x, r0.x
    mul_pp r0.x, r0.x, r0.w
    add r1, r0.z, c22
    mad_pp r1, r0.x, r1, c5.y
    mul_pp r0.x, r0.y, r0.y
    mul_pp r0.x, r0.y, r0.x
    add_pp r2, -r1, c5.y
    mad_pp oC0, r0.x, r2, r1

// approximately 161 instruction slots used (20 texture, 141 arithmetic)
