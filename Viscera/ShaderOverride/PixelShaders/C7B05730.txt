//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 EdgeSampleOffsets[4];
//   float3 FalloffParameters;
//   float2 InvRandomAngleTextureSize;
//   float4 LightPosition;
//   float4 MinZ_MaxZRatio;
//   float NvStereoEnabled;
//   sampler2D NvStereoFixTexture;
//   float4 PSRRealDCoefficients1;
//   sampler2D RandomAngleTexture;
//   float4 RefiningSampleOffsets[16];
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float4x4 ScreenToShadowMatrix;
//   float4x4 ScreenToWorld;
//   sampler2D ShadowDepthTexture;
//   float4 ShadowModulateColor;
//   float2 SpotAngles;
//   float3 SpotDirection;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   InvRandomAngleTextureSize c0       1
//   ScreenPositionScaleBias   c1       1
//   MinZ_MaxZRatio            c2       1
//   NvStereoEnabled           c3       1
//   PSRRealDCoefficients1     c8       1
//   RefiningSampleOffsets     c9      16
//   ScreenToShadowMatrix      c25      4
//   EdgeSampleOffsets         c29      4
//   ScreenToWorld             c33      4
//   ShadowModulateColor       c37      1
//   LightPosition             c38      1
//   FalloffParameters         c39      1
//   SpotDirection             c40      1
//   SpotAngles                c41      1
//   SceneColorTexture         s0       1
//   NvStereoFixTexture        s1       1
//   ShadowDepthTexture        s2       1
//   RandomAngleTexture        s3       1
//

    ps_3_0
    def c4, 0.0625, 0, 9.98999977, 0.693147182
    def c5, 0.693147182, 1, -1, 0.999000013
    def c6, 0.5, 2, -1, -0
    def c7, 0.125, 0, 9.99999975e-005, -0.999899983
    def c42, 0.03125, 0.699999988, 0, 0
    dcl_texcoord v0
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13


// Unreal Engine stereo correction disabled by DarkStarSword's shadertool.py:
// shadertool.py -i -f --auto-fix-unreal-shadows --only-autofixed --git CRC32_C7B05730_0.txt
def c3, 0, 0, 0, 0 // Overrides NvStereoEnabled passed from Unreal Engine


// Unreal Engine shadow fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i -f --auto-fix-unreal-shadows --only-autofixed --git CRC32_C7B05730_0.txt
texldl r9, c220.z, s13
mov r8, v0
add r9.w, r8.w, -r9.y
mad r8.x, r9.w, r9.x, r8.x

    if_ne c3.x, -c3.x
      texld r0, c4, s1
      add r0.y, -r0.y, r8.w
      mad r0.x, r0.x, r0.y, r8.x
      mov r0.yz, r8.xyww
    else
      add r0.w, c4.z, r8.z
      add r1.x, r0.w, c8.x
      log r1.x, r1.x
      mul r1.x, r1.x, c8.y
      mov r1.w, c4.w
      mad r1.y, r1.x, r1.w, c8.z
      mul r1.y, r1.y, c8.x
      mad r1.x, r1.x, -c5.x, c5.y
      add r1.x, r1.x, -c8.z
      rcp r1.x, r1.x
      mul r1.x, r1.x, r1.y
      rcp r0.w, r0.w
      mul r0.w, r0.w, r1.x
      rcp r0.w, r0.w
      add r0.w, r0.w, c5.z
      dp2add r0.x, c8.w, r0.w, r8.x
      mov r0.yz, r8.xyww
    endif
    rcp r0.z, r0.z
    mul r0.xy, r0.z, r0
    mad r0.xy, r0, c1, c1.wzzw
    mov r0.zw, c4.y
    texldl r0, r0, s0
    mov r0.yz, c5
    add r0.x, r0.y, -c2.y
    add r0.x, -r0.x, r0.w
    rcp r0.x, r0.x
    mul r0.x, r0.x, -c2.x
    rcp r0.y, r8.w
    mul r1.xy, r0.y, r8
    mul r1.xy, r0.x, r1
    mul r2, r1.y, c26

// Unreal Engine shadow fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -i -f --auto-fix-unreal-shadows --only-autofixed --git CRC32_C7B05730_0.txt
add r9.w, r0.x, -r9.y
mad r1.x, -r9.w, r9.x, r1.x

    mad r2, c25, r1.x, r2
    mad r2, c27, r0.x, r2
    add r2, r2, c28
    rcp r0.w, r2.w
    mul r1.zw, r0.w, r2.xyxy
    min r3.x, r2.z, c5.w
    mad r2.zw, r8.xyxy, r0.y, c5.y
    mul r2.zw, r2, c0.xyxy
    mul r2.zw, r2, c6.x
    texld r4, r2.zwzw, s3
    mad_pp r4, r4.yxyx, c6.y, c6.z
    mul_pp r5, r4.wzwz, c5.yzyz
    mad r6, r5.zwzw, c29.xxzz, r1.zwzw
    mad_pp r6, r4.zwzw, c29.yyww, r6
    texld_pp r7, r6, s2
    texld_pp r6, r6.zwzw, s2
    mov_pp r7.y, r6.x
    add r2.zw, r3.x, -r7.xyxy
    cmp r2.zw, r2, -c6.w, -c6.z
    mad r6, r5.zwzw, c30.xxzz, r1.zwzw
    mad_pp r6, r4.zwzw, c30.yyww, r6
    texld_pp r7, r6, s2
    texld_pp r6, r6.zwzw, s2
    mov_pp r7.y, r6.x
    add r3.yz, r3.x, -r7.xxyw
    cmp r3.yz, r3, -c6.w, -c6.z
    dp2add_pp r0.y, r3.yzzw, c7.x, c7.y
    dp2add_pp r0.y, r2.zwzw, c7.x, r0.y
    mad r6, r5.zwzw, c31.xxzz, r1.zwzw
    mad_pp r6, r4.zwzw, c31.yyww, r6
    texld_pp r7, r6, s2
    texld_pp r6, r6.zwzw, s2
    mov_pp r7.y, r6.x
    add r2.zw, r3.x, -r7.xyxy
    cmp r2.zw, r2, -c6.w, -c6.z
    dp2add_pp r0.y, r2.zwzw, c7.x, r0.y
    mad r5, r5, c32.xxzz, r1.zwzw
    mad_pp r4, r4, c32.yyww, r5
    texld_pp r5, r4, s2
    texld_pp r4, r4.zwzw, s2
    mov_pp r5.y, r4.x
    add r1.zw, r3.x, -r5.xyxy
    cmp r1.zw, r1, -c6.w, -c6.z
    dp2add_pp r0.y, r1.zwzw, c7.x, r0.y
    add r1.z, -r0.y, c7.z
    add r1.w, r0.y, c7.w
    cmp r1.w, r1.w, -c6.w, -c6.z
    cmp r1.z, r1.z, c4.y, r1.w
    if_ne r1.z, -r1.z
      mad_pp r4, r2.xyxy, r0.w, c9
      mul r5, r4.xyxx, -c6.zzww
      texldl_pp r5, r5, s2
      mul r4, r4.zwxx, -c6.zzww
      texldl_pp r4, r4, s2
      mad_pp r6, r2.xyxy, r0.w, c10
      mul r7, r6.xyxx, -c6.zzww
      texldl_pp r7, r7, s2
      mul r6, r6.zwxx, -c6.zzww
      texldl_pp r6, r6, s2
      mov_pp r5.y, r4.x
      mov_pp r5.z, r7.x
      mov_pp r5.w, r6.x
      add r4, r3.x, -r5
      cmp r4, r4, -c6.w, -c6.z
      dp4_pp r1.z, r4, c42.x
      mad_pp r4, r2.xyxy, r0.w, c11
      mul r5, r4.xyxx, -c6.zzww
      texldl r5, r5, s2
      mul r4, r4.zwxx, -c6.zzww
      texldl r4, r4, s2
      mad_pp r6, r2.xyxy, r0.w, c12
      mul r7, r6.xyxx, -c6.zzww
      texldl r7, r7, s2
      mul r6, r6.zwxx, -c6.zzww
      texldl r6, r6, s2
      mov r5.y, r4.x
      mov r5.z, r7.x
      mov r5.w, r6.x
      add r4, r3.x, -r5
      cmp r4, r4, -c6.w, -c6.z
      dp4_pp r1.w, r4, c42.x
      add_pp r1.z, r1.w, r1.z
      mad_pp r4, r2.xyxy, r0.w, c13
      mul r5, r4.xyxx, -c6.zzww
      texldl r5, r5, s2
      mul r4, r4.zwxx, -c6.zzww
      texldl r4, r4, s2
      mad_pp r6, r2.xyxy, r0.w, c14
      mul r7, r6.xyxx, -c6.zzww
      texldl r7, r7, s2
      mul r6, r6.zwxx, -c6.zzww
      texldl r6, r6, s2
      mov r5.y, r4.x
      mov r5.z, r7.x
      mov r5.w, r6.x
      add r4, r3.x, -r5
      cmp r4, r4, -c6.w, -c6.z
      dp4_pp r1.w, r4, c42.x
      add_pp r1.z, r1.w, r1.z
      mad_pp r4, r2.xyxy, r0.w, c15
      mul r5, r4.xyxx, -c6.zzww
      texldl r5, r5, s2
      mul r4, r4.zwxx, -c6.zzww
      texldl r4, r4, s2
      mad_pp r6, r2.xyxy, r0.w, c16
      mul r7, r6.xyxx, -c6.zzww
      texldl r7, r7, s2
      mul r6, r6.zwxx, -c6.zzww
      texldl r6, r6, s2
      mov r5.y, r4.x
      mov r5.z, r7.x
      mov r5.w, r6.x
      add r4, r3.x, -r5
      cmp r4, r4, -c6.w, -c6.z
      dp4_pp r1.w, r4, c42.x
      add_pp r1.z, r1.w, r1.z
      mad_pp r4, r2.xyxy, r0.w, c17
      mul r5, r4.xyxx, -c6.zzww
      texldl r5, r5, s2
      mul r4, r4.zwxx, -c6.zzww
      texldl r4, r4, s2
      mad_pp r6, r2.xyxy, r0.w, c18
      mul r7, r6.xyxx, -c6.zzww
      texldl r7, r7, s2
      mul r6, r6.zwxx, -c6.zzww
      texldl r6, r6, s2
      mov r5.y, r4.x
      mov r5.z, r7.x
      mov r5.w, r6.x
      add r4, r3.x, -r5
      cmp r4, r4, -c6.w, -c6.z
      dp4_pp r1.w, r4, c42.x
      add_pp r1.z, r1.w, r1.z
      mad_pp r4, r2.xyxy, r0.w, c19
      mul r5, r4.xyxx, -c6.zzww
      texldl r5, r5, s2
      mul r4, r4.zwxx, -c6.zzww
      texldl r4, r4, s2
      mad_pp r6, r2.xyxy, r0.w, c20
      mul r7, r6.xyxx, -c6.zzww
      texldl r7, r7, s2
      mul r6, r6.zwxx, -c6.zzww
      texldl r6, r6, s2
      mov r5.y, r4.x
      mov r5.z, r7.x
      mov r5.w, r6.x
      add r4, r3.x, -r5
      cmp r4, r4, -c6.w, -c6.z
      dp4_pp r1.w, r4, c42.x
      add_pp r1.z, r1.w, r1.z
      mad_pp r4, r2.xyxy, r0.w, c21
      mul r5, r4.xyxx, -c6.zzww
      texldl r5, r5, s2
      mul r4, r4.zwxx, -c6.zzww
      texldl r4, r4, s2
      mad_pp r6, r2.xyxy, r0.w, c22
      mul r7, r6.xyxx, -c6.zzww
      texldl r7, r7, s2
      mul r6, r6.zwxx, -c6.zzww
      texldl r6, r6, s2
      mov r5.y, r4.x
      mov r5.z, r7.x
      mov r5.w, r6.x
      add r4, r3.x, -r5
      cmp r4, r4, -c6.w, -c6.z
      dp4_pp r1.w, r4, c42.x
      add_pp r1.z, r1.w, r1.z
      mad_pp r4, r2.xyxy, r0.w, c23
      mul r5, r4.xyxx, -c6.zzww
      texldl r5, r5, s2
      mul r4, r4.zwxx, -c6.zzww
      texldl r4, r4, s2
      mad_pp r2, r2.xyxy, r0.w, c24
      mul r6, r2.xyxx, -c6.zzww
      texldl r6, r6, s2
      mul r2, r2.zwxx, -c6.zzww
      texldl r2, r2, s2
      mov r5.y, r4.x
      mov r5.z, r6.x
      mov r5.w, r2.x
      add r2, r3.x, -r5
      cmp r2, r2, -c6.w, -c6.z
      dp4_pp r0.w, r2, c42.x
      add_pp r0.w, r0.w, r1.z
      lrp_pp r1.z, c42.y, r0.w, r0.y
      mov_pp r0.y, r1.z
    endif
    mul r1.yzw, r1.y, c34.xxyz
    mad r1.xyz, c33, r1.x, r1.yzww
    mad r1.xyz, c35, r0.x, r1
    add r1.xyz, r1, c36
    add r1.xyz, -r1, c38
    mul r1.xyz, r1, c38.w
    dp3 r0.x, r1, r1
    rsq r0.x, r0.x
    rcp r0.w, r0.x
    mad r0.w, r0.w, c39.y, c39.z
    max r1.w, r0.w, c4.y
    mad r0.w, r1.w, -r1.w, c5.y
    max r1.w, r0.w, c4.y
    pow_pp r0.w, r1.w, c39.x
    mul r1.xyz, r0.x, r1
    dp3 r0.x, r1, -c40
    add r0.x, r0.x, -c41.x
    mul_sat r0.x, r0.x, c41.y
    mul r0.x, r0.x, r0.x
    mul_pp r0.x, r0.x, r0.w
    add r1, r0.z, c37
    mad_pp r1, r0.x, r1, c5.y
    mul_pp r0.x, r0.y, r0.y
    mul_pp r0.x, r0.y, r0.x
    add_pp r2, -r1, c5.y
    mad_pp oC0, r0.x, r2, r1

// approximately 295 instruction slots used (76 texture, 219 arithmetic)
