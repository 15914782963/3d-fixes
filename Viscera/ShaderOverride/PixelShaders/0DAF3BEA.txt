// UE3 multipass fog - note several shaders interact with each other!

// VS 2DBAEEC0 - positions fog, needs texcoord5 adjustment
// PS 9530AC2B - alternate place for texcoord5 adjustment (note - would need to find corresponding PS for zero G level)

// VS 0432F8F1 - positions transparency, needs stereo correction on output position
// PS 0DAF3BEA - needs texcoord5 adjustment (here or VS, but note other PS)
// PS 4396FA44 - needs both texcoord5 adjustment, and unadjustment before ScreenToWorld matrix

//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 DepthFilterSampleOffsets[2];
//   float FaceScale;
//   float4 FirstDensityFunctionParameters;
//   float MaxDistance;
//   float4 MinZ_MaxZRatio;
//   sampler2D SceneColorTexture;
//   float4 ScreenPositionScaleBias;
//   float StartDistance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   FirstDensityFunctionParameters c0       1
//   ScreenPositionScaleBias        c1       1
//   MinZ_MaxZRatio                 c2       1
//   DepthFilterSampleOffsets       c9       2
//   StartDistance                  c11      1
//   FaceScale                      c12      1
//   MaxDistance                    c13      1
//   SceneColorTexture              s0       1
//

    ps_3_0
    def c3, 1, 0, 0.25, 65535
    dcl_texcoord5 v0
    dcl_2d s0

def c220, 0, 1, 0.0625, 0.5
dcl_2d s13

// Input adjustment inserted with DarkStarSword's shadertool.py:
// shadertool.py -i -f --adjust-input=texcoord5 PixelShader/PixelShader_24_CRC32_0DAF3BEA.txt
mov r30, v0
texldl r31, c220.z, s13
add r31.w, r30.w, -r31.y
mad r30.x, r31.w, r31.x, r30.x

    rcp r0.x, r30.w
    mul r0, r0.x, r30.xyxy
    mad r0, r0, c1.xyxy, c1.wzwz
    add r1, r0.zwzw, c9
    add r0, r0, c10
    mul r2, r1.xyxx, c3.xxyy
    mul r1, r1.zwxx, c3.xxyy
    texldl r1, r1, s0
    texldl r2, r2, s0
    mov r1.x, c3.x
    add r1.x, r1.x, -c2.y
    add r1.y, -r1.x, r2.w
    rcp r1.y, r1.y
    mul r2.x, r1.y, -c2.x
    add r1.y, -r1.x, r1.w
    rcp r1.y, r1.y
    mul r2.y, r1.y, -c2.x
    mul r3, r0.xyxx, c3.xxyy
    mul r0, r0.zwxx, c3.xxyy
    texldl r0, r0, s0
    add r0.x, -r1.x, r0.w
    rcp r0.x, r0.x
    mul r2.w, r0.x, -c2.x
    texldl r0, r3, s0
    add r0.x, -r1.x, r0.w
    rcp r0.x, r0.x
    mul r2.z, r0.x, -c2.x
    min r0, c13.x, r2
    dp4_pp r0.x, r0, c3.z
    min_pp r1.x, r0.x, c3.w
    min_pp r0.x, r30.z, r1.x
    add_pp r0.x, r0.x, -c11.x
    mul r0.y, r0.x, c0.x
    mul r0.y, r0.y, c12.x
    cmp oC0.x, r0.x, r0.y, c3.y
    mov oC0.yzw, c3.y

// approximately 40 instruction slots used (8 texture, 32 arithmetic)
