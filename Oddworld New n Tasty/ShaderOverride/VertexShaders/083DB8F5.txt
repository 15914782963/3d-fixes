    vs_3_0
    dcl_position o0
    dcl_color o1
    dcl_color1 o2
    dcl_texcoord o3
    dcl_texcoord1 o4
    dcl_texcoord2 o5
    def c27, 0.000609999988, 1.5, 0.000289999996, 2.71828198
    def c28, 0, 4, 1, 2
    def c29, 0.5, 3, 0.300000012, 1.04999995
    def c30, 2000, 100, 0.166666672, -1
    def c31, 6, -3, -2, -4
    def c32, 0.200000003, 1.00999999, 0.809999943, 0
    dcl_position v0
    mov r2.xyz, c25
    mul r2.xyz, c21.x, r2
    mul r3.xyz, r2, c30.y
    add r2.xyz, r2, c23
    rcp r2.x, r2.x
    rcp r2.z, r2.z
    rcp r2.y, r2.y
    dp4 r0.z, v0, c6
    dp4 r0.x, v0, c4
    dp4 r0.y, v0, c5
    add r0.xyz, r0, -c9
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul r1.xyz, r0.w, r0
    abs r1.w, r1.y
    pow r0, r1.w, c29.z
    add r0.x, -r0, c29.w
    mul r0.xyz, r0.x, c23
    mad r3.xyz, r0, c30.x, r3
    pow r0, c27.w, -r3.x
    mov r3.x, r0
    pow r0, c27.w, -r3.y
    dp3 r2.w, r1, c12
    mul r0.x, -r2.w, c20
    mul r3.w, r0.x, c28
    mov r3.y, r0
    pow r0, c27.w, -r3.z
    mad r0.x, c20, c20, -r3.w
    mov r3.z, r0
    add r3.w, r0.x, c28.z
    pow r0, r3.w, c27.y
    mov r0.y, r0.x
    mul r0.w, -r2, -r2
    mov r0.x, c20
    add r4.x, c28.z, -r0
    rcp r3.w, r0.y
    mov r0.xyz, c26
    add r3.xyz, -r3, c28.z
    mul r4.x, r4, r4
    mul r0.xyz, c21.x, r0
    mul r0.xyz, r0, r4.x
    mul r0.xyz, r0, r3.w
    mad r0.w, r0, c29.x, c29.y
    mad r0.xyz, r0.w, c24, r0
    mul r0.xyz, r0, r3
    mul r0.xyz, r0, r2
    mul r2.xyz, r0, c10
    max r0.y, r1, c28.x
    mov r0.x, c8
    mul r0.x, c15, r0
    mul r3.z, r1.w, r0.x
    mul r3.w, -r0.y, c28.y
    pow r0, c27.w, r3.w
    mul r0.zw, r1.xyzx, c13.x
    mul r3.xy, r3.z, c14
    mul r3.xy, r3, c27.y
    mad r4.zw, r0, c27.x, r3.xyxy
    mul r3.xy, r3.z, c14.zwzw
    mov r4.y, r1.w
    mov r4.x, r1.y
    mov r1.x, r0
    mad r5.xy, r0.zwzw, c27.z, r3
    add r0.w, -r1.x, c28.z
    mul r0.xyz, r1.x, c17
    mad r0.xyz, r0.w, c16, r0
    mov r0.w, -r2
    mov r2.w, c28.z
    mul r2.xyz, r2, c11.x
    dp4 r1.w, v0, c3
    dp4 r1.z, v0, c2
    dp4 r1.y, v0, c1
    dp4 r1.x, v0, c0
    if_eq c19.x, r2.w
      max r2.w, r0.y, r0.z
      max r3.x, r0, r2.w
      max r2.y, r2, r2.z
      min r3.y, r0, r0.z
      min r2.w, r0.x, r3.y
      add r3.w, r3.x, -r2
      max r2.w, r2.x, r2.y
      mov r2.z, r3.x
      mov r2.xy, c28.x
      if_ne r3.w, c28.x
        add r3.xyz, r2.z, -r0
        rcp r2.x, r3.w
        mul r3.xyz, r3, r2.x
        add r3.xyz, r3, -r3.zxyw
        rcp r2.x, r2.z
        mov r0.z, r2
        add r3.xy, r3, c28.wyzw
        mul r2.y, r3.w, r2.x
        if_ge r0.x, r0.z
          mov r2.x, r3.z
        else
          if_ge r0.y, r2.z
            mov r2.x, r3
          else
            mov r2.x, r3.y
          endif
        endif
        mul r0.x, r2, c30.z
        frc r2.x, r0
      endif
      mad r0.x, r2, c31, c31.y
      mad r0.z, r2.x, c31.x, c31.w
      mad r0.y, r2.x, c31.x, c31.z
      abs r0.x, r0
      abs r0.z, r0
      abs r0.y, r0
      add_sat r0.x, r0, c30.w
      add_sat r0.z, -r0, c28.w
      add_sat r0.y, -r0, c28.w
      add r0.xyz, r0, c30.w
      mad r0.xyz, r0, r2.y, c28.z
      mul r2.xyz, r0, r2.w
    else
    endif
    mov r0.x, c25.z
    mul r0.x, c22, r0
    mul r3.x, r0, c30.y
    mad r2.w, -r0, c32.x, c32.y
    pow r0, c27.w, -r3.x
    mov r0.z, r0.x
    pow r3, r2.w, c27.y
    mov r0.y, r3.x
    mov r0.x, c26.z
    rcp r0.y, r0.y
    mul r0.x, c22, r0
    mul r0.x, r0, r0.y
    add r0.y, -r0.z, c28.z
    mul r0.x, r0, r0.y
    rcp r0.z, c25.z
    mul r0.x, r0, r0.z
    mul r0.x, r0, c22
    mul r0.xyz, r0.x, c10
    mul r0.xyz, r0, c11.x
    mul r3.xyz, r0, c32.z
    mov r0.xyz, r2
    mov r2.x, c28.z
    mov r0.w, c28.z
    if_eq c19.x, r2.x
      max r2.x, r3.y, r3.z
      max r2.w, r3.x, r2.x
      min r3.x, c18.y, c18.z
      max r2.z, c18.y, c18
      min r3.x, r3, c18
      max r2.z, r2, c18.x
      add r3.w, r2.z, -r3.x
      mov r2.xy, c28.x
      if_ne r3.w, c28.x
        rcp r2.y, r2.z
        rcp r2.x, r3.w
        add r3.xyz, r2.z, -c18
        mul r3.xyz, r3, r2.x
        add r3.xyz, r3, -r3.zxyw
        mov r2.x, r2.z
        add r3.xy, r3, c28.wyzw
        mul r2.y, r3.w, r2
        if_ge c18.x, r2.x
          mov r2.x, r3.z
        else
          if_ge c18.y, r2.z
            mov r2.x, r3
          else
            mov r2.x, r3.y
          endif
        endif
        mul r2.x, r2, c30.z
        frc r2.x, r2
      endif
      mad r2.z, r2.x, c31.x, c31.y
      abs r2.z, r2
      add_sat r3.x, r2.z, c30.w
      mad r2.z, r2.x, c31.x, c31.w
      abs r2.z, r2
      mad r2.x, r2, c31, c31.z
      abs r2.x, r2
      add_sat r3.z, -r2, c28.w
      add_sat r3.y, -r2.x, c28.w
      add r3.xyz, r3, c30.w
      mad r2.xyz, r3, r2.y, c28.z
      mul r2.xyz, r2, r2.w
    else
      mov r2.xyz, r3
    endif
    mov o0, r1
    mov o1, r0
    mov o2.xyz, r2
    mov o3.xy, r4.zwzw
    mov o4.xy, r5
    mov o5.xy, r4
    mov o2.w, c28.z

// approximately 224 instruction slots used
