// CRC32: 6103C5BF | Matched 2 variants of 2 shaders: Glow 11/Unity/Reflective/Diffuse, Reflective/Diffuse
// 
//    Unity headers extracted from Reflect-Diffuse.shader
//    Shader "Glow 11/Unity/Reflective/Diffuse" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _ReflectColor ("Reflection Color", Color) = (1,1,1,0.5)
//       _MainTex ("Base (RGB) RefStrength (A)", 2D) = "white" {}
//       _Cube ("Reflection Cubemap", CUBE) = "_Skybox" { TexGen CubeReflect }
//       _GlowTex ("Glow", 2D) = "" {}
//       _GlowColor ("Glow Color", Color) = (1,1,1,1)
//       _GlowStrength ("Glow Strength", Float) = 1
//      }
//      Fallback "Glow 11/Unity/Reflective/VertexLit"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Glow11" "RenderEffect"="Glow11" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "RenderType"="Glow11" "RenderEffect"="Glow11" }
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Matrix 8 [_World2Object]
//              Vector 12 [_WorldSpaceCameraPos]
//              Vector 13 [_ProjectionParams]
//              Vector 14 [_ScreenParams]
//              Vector 15 [unity_SHAr]
//              Vector 16 [unity_SHAg]
//              Vector 17 [unity_SHAb]
//              Vector 18 [unity_SHBr]
//              Vector 19 [unity_SHBg]
//              Vector 20 [unity_SHBb]
//              Vector 21 [unity_SHC]
//              Vector 22 [unity_Scale]
//              Vector 23 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
//    Unity headers extracted from Reflect-Diffuse.shader
//    Shader "Reflective/Diffuse" {
//      Properties {
//       _Color ("Main Color", Color) = (1,1,1,1)
//       _ReflectColor ("Reflection Color", Color) = (1,1,1,0.5)
//       _MainTex ("Base (RGB) RefStrength (A)", 2D) = "white" {}
//       _Cube ("Reflection Cubemap", CUBE) = "_Skybox" { TexGen CubeReflect }
//      }
//      Fallback "Reflective/VertexLit"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="ForwardBase" "RenderType"="Opaque" }
//          Program "vp" {
//            SubProgram "d3d9 " {
//              Keywords { "DIRECTIONAL" "DIRLIGHTMAP_OFF" "LIGHTMAP_OFF" "SHADOWS_SCREEN" }
//              Bind "vertex" Vertex
//              Bind "normal" Normal
//              Bind "texcoord" TexCoord0
//              Matrix 0 [glstate_matrix_mvp]
//              Matrix 4 [_Object2World]
//              Matrix 8 [_World2Object]
//              Vector 12 [_WorldSpaceCameraPos]
//              Vector 13 [_ProjectionParams]
//              Vector 14 [_ScreenParams]
//              Vector 15 [unity_SHAr]
//              Vector 16 [unity_SHAg]
//              Vector 17 [unity_SHAb]
//              Vector 18 [unity_SHBr]
//              Vector 19 [unity_SHBg]
//              Vector 20 [unity_SHBb]
//              Vector 21 [unity_SHC]
//              Vector 22 [unity_Scale]
//              Vector 23 [_MainTex_ST]
//            }
//          }
//        }
//      }
//    }
// 
// Headers extracted with DarkStarSword's extract_unity_shaders.py
// https://raw.githubusercontent.com/DarkStarSword/3d-fixes/master/extract_unity_shaders.py

    vs_3_0 // Converted from vs_2_0 with DarkStarSword's shadertool.py
dcl_fog o9 // Inserted by shadertool.py for fog compatibility on upgrade from vs_2_0 to vs_3_0
    ; 45 ALU
    def c24, 1.00000000, 2.00000000, 0.50000000, 0
    dcl_position0 v0
    dcl_normal0 v1
    dcl_texcoord0 v2

dcl_texcoord o0
dcl_texcoord1 o1
dcl_texcoord2 o2
dcl_texcoord3 o3
dcl_texcoord4 o4
dcl_position o5


def c220, 0, 1, 0.0625, 0.5
dcl_2d s0

    mul r0.xyz, v1, c22.w
    dp3 r1.w, r0, c5
    dp3 r0.w, r0, c6
    dp3 r3.x, r0, c4
    mov r3.y, r1.w
    mov r3.z, r0.w
    mul r2, r3.xyzz, r3.yzzx
    mov r3.w, c24.x
    dp4 r0.z, r3, c17
    dp4 r0.y, r3, c16
    dp4 r0.x, r3, c15
    dp4 r1.z, r2, c20
    dp4 r1.x, r2, c18
    dp4 r1.y, r2, c19
    mov r2.xyz, c12
    add r1.xyz, r0, r1
    mov r2.w, c24.x
    dp4 r0.z, r2, c10
    dp4 r0.x, r2, c8
    dp4 r0.y, r2, c9
    mad r0.xyz, r0, c22.w, -v0
    dp3 r2.y, v1, -r0
    mul r3.yzw, v1.xxyz, r2.y
    mad r0.xyz, -r3.yzww, c24.y, -r0
    mul r2.x, r1.w, r1.w
    mad r2.x, r3, r3, -r2
    mul r2.xyz, r2.x, c21
    add o3.xyz, r1, r2
    dp4 r2.w, v0, c3
    dp4 r2.z, v0, c2
    dp3 o1.z, r0, c6
    dp3 o1.y, r0, c5
    dp4 r2.x, v0, c0
    dp4 r2.y, v0, c1

mov o5, r2 // Relocated from line 147 with shadertool.py

// Automatic vertex shader halo fix inserted with DarkStarSword's shadertool.py:
// shadertool.py -I /home/dss/common/Oddworld New n Tasty --auto-fix-vertex-halo --add-fog-on-sm3-update --only-autofixed Glow 11_Unity_Reflective_Diffuse/vp/6103C5BF.txt
texldl r4, c220.z, s0
add r4.w, r2.w, -r4.y
mad r2.x, r4.w, r4.x, r2.x

    mul r1.xyz, r2.xyww, c24.z
    dp3 o1.x, r0, c4
    mov r0.x, r1
    mul r0.y, r1, c13.x
    mad o4.xy, r1.z, c14.zwzw, r0

//     mov o5, r2 // Relocated to line 142 with shadertool.py
mov o9, r2.z // Inserted by shadertool.py for fog compatibility on upgrade from vs_2_0 to vs_3_0
    mov o4.zw, r2
    mov o2.z, r0.w
    mov o2.y, r1.w
    mov o2.x, r3
    mad o0.xy, v2, c23, c23.zwzw
